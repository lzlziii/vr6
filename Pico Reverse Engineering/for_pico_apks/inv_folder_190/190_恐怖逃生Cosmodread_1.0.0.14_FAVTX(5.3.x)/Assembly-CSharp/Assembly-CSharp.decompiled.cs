using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using AITasks;
using AmplifyColor;
using Forge3D;
using Il2CppDummyDll;
using LitJson;
using NaughtyAttributes;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using RootMotion.FinalIK;
using SimpleIK;
using TMPro;
using Triangulator.Geometry;
using TypeSafe;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.PostProcessing;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnitySA.Utility;
using VLB;
using VRInteraction;
using VRInteraction.UI;
using Valve.VR.InteractionSystem;
using WDG;
using WDG.Occlusion;
using ch.sycoforge.Decal;
using ch.sycoforge.Decal.Projectors.Geometry;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryDirectLight : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shadowSpread;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int samples;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bitmask;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool shadowmask;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool shadowmaskDenoise;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float indirectIntensity;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int UID;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x823188", Offset = "0x823188", VA = "0x823188")]
	public BakeryDirectLight()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryLightMesh : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int UID;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MeshFilter> All;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intensity;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D texture;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cutoff;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int samples;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int samples2;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int bitmask;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool selfShadow;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float indirectIntensity;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int lmid;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x8231D8", Offset = "0x8231D8", VA = "0x8231D8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x8232D4", Offset = "0x8232D4", VA = "0x8232D4")]
	public BakeryLightMesh()
	{
	}
}
[Token(Token = "0x2000004")]
public struct BakeryLightmapGroupPlain
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int resolution;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int renderMode;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int renderDirMode;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vertexBake;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isImplicit;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool computeSSS;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sssSamples;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sssDensity;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sssR;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sssG;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sssB;
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62A614", Offset = "0x62A614")]
public class BakeryLightmapGroup : ScriptableObject
{
	[Token(Token = "0x2000337")]
	public enum ftLMGroupMode
	{
		[Token(Token = "0x400199A")]
		OriginalUV,
		[Token(Token = "0x400199B")]
		PackAtlas,
		[Token(Token = "0x400199C")]
		Vertex
	}

	[Token(Token = "0x2000338")]
	public enum RenderMode
	{
		[Token(Token = "0x400199E")]
		FullLighting = 0,
		[Token(Token = "0x400199F")]
		Indirect = 1,
		[Token(Token = "0x40019A0")]
		Shadowmask = 2,
		[Token(Token = "0x40019A1")]
		Auto = 1000
	}

	[Token(Token = "0x2000339")]
	public enum RenderDirMode
	{
		[Token(Token = "0x40019A3")]
		None = 0,
		[Token(Token = "0x40019A4")]
		BakedNormalMaps = 1,
		[Token(Token = "0x40019A5")]
		DominantDirection = 2,
		[Token(Token = "0x40019A6")]
		RNM = 3,
		[Token(Token = "0x40019A7")]
		SH = 4,
		[Token(Token = "0x40019A8")]
		Auto = 1000
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62EDC0", Offset = "0x62EDC0")]
	public int resolution;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public int bitmask;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int id;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public bool isImplicit;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float area;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public int totalVertexCount;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public int vertexCounter;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int sceneLodLevel;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string sceneName;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public ftLMGroupMode mode;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public RenderMode renderMode;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public RenderDirMode renderDirMode;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	public bool computeSSS;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public int sssSamples;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public float sssDensity;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Color sssColor;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x8233B8", Offset = "0x8233B8", VA = "0x8233B8")]
	public BakeryLightmapGroupPlain GetPlainStruct()
	{
		return default(BakeryLightmapGroupPlain);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x823460", Offset = "0x823460", VA = "0x823460")]
	public BakeryLightmapGroup()
	{
	}
}
[Token(Token = "0x2000006")]
public class BakeryLightmapGroupSelector : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object lmgroupAsset;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool instanceResolutionOverride;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int instanceResolution;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8234CC", Offset = "0x8234CC", VA = "0x8234CC")]
	public BakeryLightmapGroupSelector()
	{
	}
}
[Token(Token = "0x2000007")]
[DisallowMultipleComponent]
public class BakeryLightmappedPrefab : MonoBehaviour
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0x8234DC", Offset = "0x8234DC", VA = "0x8234DC")]
	public BakeryLightmappedPrefab()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakeryPointLight : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	public enum ftLightProjectionMode
	{
		[Token(Token = "0x40019AA")]
		Omni,
		[Token(Token = "0x40019AB")]
		Cookie,
		[Token(Token = "0x40019AC")]
		Cubemap,
		[Token(Token = "0x40019AD")]
		IES
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int UID;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intensity;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shadowSpread;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cutoff;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool realisticFalloff;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int samples;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ftLightProjectionMode projMode;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D cookie;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float angle;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap cubemap;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Object iesFile;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int bitmask;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool bakeToIndirect;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool shadowmask;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float indirectIntensity;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x8234E4", Offset = "0x8234E4", VA = "0x8234E4")]
	public BakeryPointLight()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class BakerySkyLight : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string texName;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float intensity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int samples;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool hemispherical;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bitmask;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool bakeToIndirect;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float indirectIntensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool tangentSH;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Cubemap cubemap;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int UID;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x82354C", Offset = "0x82354C", VA = "0x82354C")]
	public BakerySkyLight()
	{
	}
}
[Token(Token = "0x200000A")]
public class ftGlobalStorage : ScriptableObject
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9994A0", Offset = "0x9994A0", VA = "0x9994A0")]
	public ftGlobalStorage()
	{
	}
}
[Token(Token = "0x200000B")]
public class ftLightmaps
{
	[Token(Token = "0x200033B")]
	private struct LightmapAdditionalData
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D rnm0;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D rnm1;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D rnm2;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;
	}

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<int> lightmapRefCount;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<LightmapAdditionalData> globalMapsAdditional;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x9994A8", Offset = "0x9994A8", VA = "0x9994A8")]
	static ftLightmaps()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x9994AC", Offset = "0x9994AC", VA = "0x9994AC")]
	public static void RefreshFull()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x99B03C", Offset = "0x99B03C", VA = "0x99B03C")]
	public static GameObject FindInScene(string nm, UnityEngine.SceneManagement.Scene scn)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x99B184", Offset = "0x99B184", VA = "0x99B184")]
	private static Texture2D GetEmptyDirectionTex(ftLightmapsStorage storage)
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x999688", Offset = "0x999688", VA = "0x999688")]
	public static void RefreshScene(UnityEngine.SceneManagement.Scene scene, [Optional] ftLightmapsStorage storage, bool updateNonBaked = false)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x99B19C", Offset = "0x99B19C", VA = "0x99B19C")]
	public static void UnloadScene(ftLightmapsStorage storage)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x99B43C", Offset = "0x99B43C", VA = "0x99B43C")]
	public static void RefreshScene2(UnityEngine.SceneManagement.Scene scene, ftLightmapsStorage storage)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x99B64C", Offset = "0x99B64C", VA = "0x99B64C")]
	public ftLightmaps()
	{
	}
}
[Token(Token = "0x200000C")]
[ExecuteInEditMode]
public class ftLightmapsStorage : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Texture2D> maps;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> masks;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Texture2D> dirMaps;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Texture2D> rnmMaps0;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Texture2D> rnmMaps1;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Texture2D> rnmMaps2;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> mapsMode;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MeshRenderer> bakedRenderers;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<int> bakedIDs;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Vector4> bakedScaleOffset;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Mesh> bakedVertexColorMesh;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MeshRenderer> nonBakedRenderers;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Light> bakedLights;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<int> bakedLightChannels;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Terrain> bakedRenderersTerrain;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<int> bakedIDsTerrain;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<Vector4> bakedScaleOffsetTerrain;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<string> assetList;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<int> uvOverlapAssetList;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int[] idremap;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool usesRealtimeGI;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture2D emptyDirectionTex;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x99B654", Offset = "0x99B654", VA = "0x99B654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x99B6E4", Offset = "0x99B6E4", VA = "0x99B6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x99B764", Offset = "0x99B764", VA = "0x99B764")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x99B7C8", Offset = "0x99B7C8", VA = "0x99B7C8")]
	public ftLightmapsStorage()
	{
	}
}
[Token(Token = "0x200000D")]
public class ftLocalStorage : ScriptableObject
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<string> modifiedAssetPathList;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<int> modifiedAssetPaddingHash;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x99BB54", Offset = "0x99BB54", VA = "0x99BB54")]
	public ftLocalStorage()
	{
	}
}
[Token(Token = "0x200000E")]
public static class ftUniqueIDRegistry
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, int> Mapping;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, int> MappingInv;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x99BC04", Offset = "0x99BC04", VA = "0x99BC04")]
	public static void Deregister(int id)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x99BD88", Offset = "0x99BD88", VA = "0x99BD88")]
	public static void Register(int id, int value)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x99BCE4", Offset = "0x99BCE4", VA = "0x99BCE4")]
	public static int GetInstanceId(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x99BE8C", Offset = "0x99BE8C", VA = "0x99BE8C")]
	public static int GetUID(int instanceId)
	{
		return default(int);
	}
}
[Token(Token = "0x200000F")]
public class SDP01_ClusterRandomizer : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] childTransforms;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] originalLocalPositions;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] originalLocalRotationEulers;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ClusterFloats;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool clusterFloatSetup;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DriftSpeedMIN;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float DriftSpeedMAX;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DriftRotateSpeedMIN;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float DriftRotateSpeedMAX;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SDP01_DriftObject> objectsToDrift;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x935ABC", Offset = "0x935ABC", VA = "0x935ABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x935CAC", Offset = "0x935CAC", VA = "0x935CAC")]
	public void RandomizePositionAndRotation(float scatterDistanceMIN, float scatterDistanceMAX)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x936100", Offset = "0x936100", VA = "0x936100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x93645C", Offset = "0x93645C", VA = "0x93645C")]
	public SDP01_ClusterRandomizer()
	{
	}
}
[Token(Token = "0x2000010")]
public class SDP01_DebrisCameraController : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 currentRotationEulers;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentYRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CameraHeightTransform;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 heightEulers;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform CameraTransform;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cameraLocalPosition;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera MainCamera;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ZoomMIN;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ZoomMAX;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentZoomLevel;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float UpDownMIN;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float UpDownMAX;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentUpDownLevel;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float LerpSpeed;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode ZoomOutKey;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCode ZoomInKey;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public KeyCode RotateLeftKey;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public KeyCode RotateRightKey;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public KeyCode RotateUpKey;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public KeyCode RotateDownKey;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ZoomInOutSpeed;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float RotateUpDownSpeed;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float RotateLeftRightSpeed;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x936464", Offset = "0x936464", VA = "0x936464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9365B4", Offset = "0x9365B4", VA = "0x9365B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x93698C", Offset = "0x93698C", VA = "0x93698C")]
	public SDP01_DebrisCameraController()
	{
	}
}
[Token(Token = "0x2000011")]
public class SDP01_DebrisQuad : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Quad2Transform;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x9369DC", Offset = "0x9369DC", VA = "0x9369DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x936C68", Offset = "0x936C68", VA = "0x936C68")]
	public SDP01_DebrisQuad()
	{
	}
}
[Token(Token = "0x2000012")]
public class SDP01_DerelictStarship : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer[] myRenderers;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RandomMatChangePer;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] OriginalMaterials;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] AltMaterials;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x936C70", Offset = "0x936C70", VA = "0x936C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x936CE8", Offset = "0x936CE8", VA = "0x936CE8")]
	private void RandomizeMaterials()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x936EC0", Offset = "0x936EC0", VA = "0x936EC0")]
	public SDP01_DerelictStarship()
	{
	}
}
[Token(Token = "0x2000013")]
public class SDP01_DriftObject : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Setup;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DriftSpeedX;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DriftSpeedY;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftSpeedZ;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DriftRotateSpeedX;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DriftRotateSpeedY;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DriftRotateSpeedZ;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 currentLocalPosition;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 currentLocalRotationEulers;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x936ED0", Offset = "0x936ED0", VA = "0x936ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x936F68", Offset = "0x936F68", VA = "0x936F68")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x9370E4", Offset = "0x9370E4", VA = "0x9370E4")]
	public SDP01_DriftObject()
	{
	}
}
[Token(Token = "0x2000014")]
public class SDP01_LookAtObject : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetToLookAt;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x9370EC", Offset = "0x9370EC", VA = "0x9370EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x93712C", Offset = "0x93712C", VA = "0x93712C")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x9371D4", Offset = "0x9371D4", VA = "0x9371D4")]
	public SDP01_LookAtObject()
	{
	}
}
[Token(Token = "0x2000015")]
public class SDP01_StarshipGraveyard : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DebrisFieldPrefab;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scatterAmount;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int NumberOfDebrisFieldsX;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int NumberOfDebrisFieldsZ;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int totalDebrisFieldCount;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetMIN;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OffsetMAX;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> possiblePositions;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x9371DC", Offset = "0x9371DC", VA = "0x9371DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x937398", Offset = "0x937398", VA = "0x937398")]
	private void GenerateDebrisField(Vector3 fieldPosition, int debrisIndex)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x937550", Offset = "0x937550", VA = "0x937550")]
	public SDP01_StarshipGraveyard()
	{
	}
}
[Token(Token = "0x2000016")]
public class SDP01_WreckageController : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool RandomizeDebris;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool DebrisFloats;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DriftSpeedMIN;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DriftSpeedMAX;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftRotateSpeedMIN;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DriftRotateSpeedMAX;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] DebrisClusterPrefabs;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ClusterScatterDistanceMIN;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ClusterScatterDistanceMAX;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool GenerateDebrisClouds;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int NumberOfCloudsMIN;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfCloudsMAX;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] DebrisCloudPrefabs;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> debrisCloudGOs;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int NumberOfClusters;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SDP01_ClusterRandomizer[] clusterScripts;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool SpawnDebrisPieces;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int NumberDebrisPiecesMIN;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int NumberDebrisPiecesMAX;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float PieceDistanceMIN;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float PieceDistanceMAX;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float PieceScaleMIN;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float PieceScaleMAX;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] DebrisPiecePrefabs;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform PiecePlacementTransform;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int DebrisPieceCount;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<GameObject> debrisPiecesGOList;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool SpawnDebrisQuadPieces;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int NumberDebrisQuadPiecesMIN;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int NumberDebrisQuadPiecesMAX;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float QuadPieceDistanceMIN;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float QuadPieceDistanceMAX;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float QuadPieceScaleMIN;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float QuadPieceScaleMAX;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] DebrisQuadPiecePrefabs;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int DebrisQuadPieceCount;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> debrisQuadPiecesGOList;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x937574", Offset = "0x937574", VA = "0x937574")]
	private void DoSpawnDebrisPieces()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x937888", Offset = "0x937888", VA = "0x937888")]
	private void SpawnDebrisPiece(Vector3 piecePosition, Vector3 pieceRotationEulers, int pieceNumber, float pieceScale)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x937AB4", Offset = "0x937AB4", VA = "0x937AB4")]
	private void DoSpawnDebrisQuadPieces()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x937DC8", Offset = "0x937DC8", VA = "0x937DC8")]
	private void SpawnDebrisQuadPiece(Vector3 piecePosition, Vector3 pieceRotationEulers, int pieceNumber, float pieceScale)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x937FF4", Offset = "0x937FF4", VA = "0x937FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x938A28", Offset = "0x938A28", VA = "0x938A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x938574", Offset = "0x938574", VA = "0x938574")]
	private void GenerateDebrisCluster(int debrisIndex, Vector3 debrisLocalPosition, Vector3 clusterLocalRotationEulers)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x9387B4", Offset = "0x9387B4", VA = "0x9387B4")]
	private void GenerateDebrisCloud(int cloudIndex, Vector3 cloudLocalPosition, Vector3 cloudLocalRotationEulers)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x938F90", Offset = "0x938F90", VA = "0x938F90")]
	public SDP01_WreckageController()
	{
	}
}
[Token(Token = "0x2000017")]
public class SimpleTextureDrawing : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material aMaterial;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture[] aTextures;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x136ADAC", Offset = "0x136ADAC", VA = "0x136ADAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x136AEF4", Offset = "0x136AEF4", VA = "0x136AEF4")]
	public SimpleTextureDrawing()
	{
	}
}
[Token(Token = "0x2000018")]
public class INF_AnimSpeedRandomizer : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed_rnd;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator myAnimator;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x89FD44", Offset = "0x89FD44", VA = "0x89FD44")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x89FDDC", Offset = "0x89FDDC", VA = "0x89FDDC")]
	public INF_AnimSpeedRandomizer()
	{
	}
}
[Token(Token = "0x2000019")]
public class INF_ContinuousRotation : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float X;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Y;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Z;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool local;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x89FDEC", Offset = "0x89FDEC", VA = "0x89FDEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x89FEAC", Offset = "0x89FEAC", VA = "0x89FEAC")]
	public INF_ContinuousRotation()
	{
	}
}
[Token(Token = "0x200001A")]
public class INF_InitialPrefabGenerator : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] createThese;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject justCreated;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int createThisMany;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool parentUnderCreator;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float x_rnd;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_rnd;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z_rnd;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float x_rot_rnd;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float y_rot_rnd;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float z_rot_rnd;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x9B2824", Offset = "0x9B2824", VA = "0x9B2824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x9B2AEC", Offset = "0x9B2AEC", VA = "0x9B2AEC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x9B2C90", Offset = "0x9B2C90", VA = "0x9B2C90")]
	public INF_InitialPrefabGenerator()
	{
	}
}
[Token(Token = "0x200001B")]
public class INF_InitialRotation : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float X;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Xrnd;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Y;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Yrnd;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Z;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Zrnd;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool local;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float X_Actual;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Y_Actual;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float Z_Actual;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x9B2C98", Offset = "0x9B2C98", VA = "0x9B2C98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x9B2D38", Offset = "0x9B2D38", VA = "0x9B2D38")]
	public INF_InitialRotation()
	{
	}
}
[Token(Token = "0x200001C")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62EF14", Offset = "0x62EF14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EF14", Offset = "0x62EF14")]
	public float WindSpeed;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62EF74", Offset = "0x62EF74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EF74", Offset = "0x62EF74")]
	public float Turbulence;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62EFC8", Offset = "0x62EFC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EFC8", Offset = "0x62EFC8")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F028", Offset = "0x62F028")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F060", Offset = "0x62F060")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62F098", Offset = "0x62F098")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F098", Offset = "0x62F098")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F0F8", Offset = "0x62F0F8")]
	public float GustWorldSize;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F130", Offset = "0x62F130")]
	public float GustSpeed;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F168", Offset = "0x62F168")]
	public float GustScale;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xA71844", Offset = "0xA71844", VA = "0xA71844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xA719CC", Offset = "0xA719CC", VA = "0xA719CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xA719D0", Offset = "0xA719D0", VA = "0xA719D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xA71848", Offset = "0xA71848", VA = "0xA71848")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xA719D4", Offset = "0xA719D4", VA = "0xA719D4")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xA71A54", Offset = "0xA71A54", VA = "0xA71A54")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x200001D")]
public class GUIView : MonoBehaviour
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float progress;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool muted;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int score;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playername;

	[Token(Token = "0x40000FC")]
	private const string PROGRESS_KEY = "Progress";

	[Token(Token = "0x40000FD")]
	private const string MUTED_KEY = "IsSoundMuted";

	[Token(Token = "0x40000FE")]
	private const string SCORE_KEY = "Highscore";

	[Token(Token = "0x40000FF")]
	private const string PLAYERNAME_KEY = "PlayerName";

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xAC4590", Offset = "0xAC4590", VA = "0xAC4590")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xAC4788", Offset = "0xAC4788", VA = "0xAC4788")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xAC47C0", Offset = "0xAC47C0", VA = "0xAC47C0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xAC46AC", Offset = "0xAC46AC", VA = "0xAC46AC")]
	public void RefreshData()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xAC45F4", Offset = "0xAC45F4", VA = "0xAC45F4")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xAC4F08", Offset = "0xAC4F08", VA = "0xAC4F08")]
	public GUIView()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A6F8", Offset = "0x62A6F8")]
public class AmplifyColorBase : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	public const int LutSize = 32;

	[Token(Token = "0x4000101")]
	public const int LutWidth = 1024;

	[Token(Token = "0x4000102")]
	public const int LutHeight = 32;

	[Token(Token = "0x4000103")]
	private const int DepthCurveLutRange = 1024;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tonemapping Tonemapper;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Exposure;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LinearWhitePoint;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x62F1A0", Offset = "0x62F1A0")]
	public bool ApplyDithering;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quality QualityLevel;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BlendAmount;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LutTexture;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture LutBlendTexture;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture MaskTexture;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseDepthMask;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DepthMaskCurve;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseVolumes;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float ExitVolumeBlendTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TriggerVolumeProxy;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask VolumeCollisionMask;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera ownerCamera;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader shaderBase;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader shaderBlend;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader shaderBlendCache;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Shader shaderMask;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader shaderMaskBlend;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Shader shaderDepthMask;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Shader shaderDepthMaskBlend;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Shader shaderProcessOnly;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture blendCacheLut;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D defaultLut;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D depthCurveLut;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color32[] depthCurveColors;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ColorSpace colorSpace;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quality qualityLevel;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material materialBase;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material materialBlend;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material materialBlendCache;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material materialMask;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material materialMaskBlend;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material materialDepthMask;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material materialDepthMaskBlend;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material materialProcessOnly;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool blending;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float blendingTime;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float blendingTimeCountdown;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Action onFinishBlend;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AnimationCurve prevDepthMaskCurve;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool volumesBlending;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float volumesBlendingTime;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float volumesBlendingTimeCountdown;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture volumesLutBlendTexture;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float volumesBlendAmount;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture worldLUT;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AmplifyColorVolumeBase currentVolumeLut;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture midBlendLUT;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool blendingFromMidBlend;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private VolumeEffect worldVolumeEffects;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VolumeEffect currentVolumeEffects;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private VolumeEffect blendVolumeEffects;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float worldExposure;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float currentExposure;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float blendExposure;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float effectVolumesBlendAdjust;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<AmplifyColorVolumeBase> enteredVolumes;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AmplifyColorTriggerProxyBase actualTriggerProxy;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public VolumeEffectFlags EffectFlags;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private string sharedInstanceID;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool silentError;

	[Token(Token = "0x17000001")]
	public Texture2D DefaultLut
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x965184", Offset = "0x965184", VA = "0x965184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public bool IsBlending
	{
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x965464", Offset = "0x965464", VA = "0x965464")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000003")]
	private float effectVolumesBlendAdjusted
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x96546C", Offset = "0x96546C", VA = "0x96546C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000004")]
	public string SharedInstanceID
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x96550C", Offset = "0x96550C", VA = "0x96550C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public bool WillItBlend
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x965514", Offset = "0x965514", VA = "0x965514")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x9655D8", Offset = "0x9655D8", VA = "0x9655D8")]
	public void NewSharedInstanceID()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x96566C", Offset = "0x96566C", VA = "0x96566C")]
	private void ReportMissingShaders()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x9656EC", Offset = "0x9656EC", VA = "0x9656EC")]
	private void ReportNotSupported()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x96576C", Offset = "0x96576C", VA = "0x96576C")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x965824", Offset = "0x965824", VA = "0x965824")]
	private bool CheckShaders()
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x9658A4", Offset = "0x9658A4", VA = "0x9658A4")]
	private bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x9658EC", Offset = "0x9658EC", VA = "0x9658EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x965D84", Offset = "0x965D84", VA = "0x965D84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x965FC0", Offset = "0x965FC0", VA = "0x965FC0")]
	private void VolumesBlendTo(Texture blendTargetLUT, float blendTimeInSec)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x966008", Offset = "0x966008", VA = "0x966008")]
	public void BlendTo(Texture blendTargetLUT, float blendTimeInSec, Action onFinishBlend)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x966060", Offset = "0x966060", VA = "0x966060")]
	private void CheckCamera()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x966158", Offset = "0x966158", VA = "0x966158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x9661E8", Offset = "0x9661E8", VA = "0x9661E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x966D10", Offset = "0x966D10", VA = "0x966D10")]
	public void EnterVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x966DAC", Offset = "0x966DAC", VA = "0x966DAC")]
	public void ExitVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x966618", Offset = "0x966618", VA = "0x966618")]
	private void UpdateVolumes()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x966E44", Offset = "0x966E44", VA = "0x966E44")]
	private void SetupShader()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x965E64", Offset = "0x965E64", VA = "0x965E64")]
	private void ReleaseMaterials()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x965210", Offset = "0x965210", VA = "0x965210")]
	private Texture2D CreateDefaultLut()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x966FB0", Offset = "0x966FB0", VA = "0x966FB0")]
	private Texture2D CreateDepthCurveLut()
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x967100", Offset = "0x967100", VA = "0x967100")]
	private void UpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x96726C", Offset = "0x96726C", VA = "0x96726C")]
	private void CheckUpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x967458", Offset = "0x967458", VA = "0x967458")]
	private void CreateHelperTextures()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x967658", Offset = "0x967658", VA = "0x967658")]
	private bool CheckMaterialAndShader(Material material, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x965AC4", Offset = "0x965AC4", VA = "0x965AC4")]
	private bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x9677D8", Offset = "0x9677D8", VA = "0x9677D8")]
	private void SetMaterialKeyword(string keyword, bool state)
	{
	}

	[Token(Token = "0x6000072")]
	private void SafeRelease<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x965F28", Offset = "0x965F28", VA = "0x965F28")]
	private void ReleaseTextures()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x9677EC", Offset = "0x9677EC", VA = "0x9677EC")]
	public static bool ValidateLutDimensions(Texture lut)
	{
		return default(bool);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x967948", Offset = "0x967948", VA = "0x967948")]
	private void UpdatePostEffectParams()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x9679D8", Offset = "0x9679D8", VA = "0x9679D8")]
	private int ComputeShaderPass()
	{
		return default(int);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x967A60", Offset = "0x967A60", VA = "0x967A60")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x968360", Offset = "0x968360", VA = "0x968360")]
	public AmplifyColorBase()
	{
	}
}
[Token(Token = "0x200001F")]
[ImageEffectTransformsToLDR]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A730", Offset = "0x62A730")]
public sealed class AmplifyColorEffect : AmplifyColorBase
{
	[Token(Token = "0x6000079")]
	[Address(RVA = "0x968588", Offset = "0x968588", VA = "0x968588")]
	public AmplifyColorEffect()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A78C", Offset = "0x62A78C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A78C", Offset = "0x62A78C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A78C", Offset = "0x62A78C")]
public class AmplifyColorTriggerProxy : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x96858C", Offset = "0x96858C", VA = "0x96858C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x968670", Offset = "0x968670", VA = "0x968670")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x9686F0", Offset = "0x9686F0", VA = "0x9686F0")]
	public AmplifyColorTriggerProxy()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A83C", Offset = "0x62A83C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A83C", Offset = "0x62A83C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A83C", Offset = "0x62A83C")]
public class AmplifyColorTriggerProxy2D : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D circleCollider;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody2D rigidBody;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x968700", Offset = "0x968700", VA = "0x968700")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x9687E4", Offset = "0x9687E4", VA = "0x9687E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x968864", Offset = "0x968864", VA = "0x968864")]
	public AmplifyColorTriggerProxy2D()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A8EC", Offset = "0x62A8EC")]
public class AmplifyColorTriggerProxyBase : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Reference;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AmplifyColorBase OwnerEffect;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x9686F8", Offset = "0x9686F8", VA = "0x9686F8")]
	public AmplifyColorTriggerProxyBase()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A924", Offset = "0x62A924")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A924", Offset = "0x62A924")]
public class AmplifyColorVolume : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000081")]
	[Address(RVA = "0x96886C", Offset = "0x96886C", VA = "0x96886C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x968978", Offset = "0x968978", VA = "0x968978")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x968A84", Offset = "0x968A84", VA = "0x968A84")]
	public AmplifyColorVolume()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62A9AC", Offset = "0x62A9AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62A9AC", Offset = "0x62A9AC")]
public class AmplifyColorVolume2D : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000084")]
	[Address(RVA = "0x968B08", Offset = "0x968B08", VA = "0x968B08")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x968C14", Offset = "0x968C14", VA = "0x968C14")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x968D20", Offset = "0x968D20", VA = "0x968D20")]
	public AmplifyColorVolume2D()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62AA34", Offset = "0x62AA34")]
public class AmplifyColorVolumeBase : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D LutTexture;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Exposure;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EnterBlendTime;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Priority;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ShowInSceneView;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public VolumeEffectContainer EffectContainer;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x968D24", Offset = "0x968D24", VA = "0x968D24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x968F60", Offset = "0x968F60", VA = "0x968F60")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x968A88", Offset = "0x968A88", VA = "0x968A88")]
	public AmplifyColorVolumeBase()
	{
	}
}
[Token(Token = "0x2000026")]
public class APIExamples : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E768", Offset = "0x62E768")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public APIExamples <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x9576D0", Offset = "0x9576D0", VA = "0x9576D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x957738", Offset = "0x957738", VA = "0x957738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x956F38", Offset = "0x956F38", VA = "0x956F38")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x957120", Offset = "0x957120", VA = "0x957120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x957124", Offset = "0x957124", VA = "0x957124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x9576D8", Offset = "0x9576D8", VA = "0x9576D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int randomColorCount;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] RandomBrightColors;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] RandomPastelColors;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color[] RandomDarkColors;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] LerpOverTimeTargets;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lerpTarget;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color lerpTargetMethod;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BlendStyle BlendStyle;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color BlendA;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Color BlendB;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color BlendResult;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x956EBC", Offset = "0x956EBC", VA = "0x956EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x636DB0", Offset = "0x636DB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x956F64", Offset = "0x956F64", VA = "0x956F64")]
	private void UpdateLerpTerget(Color c)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x956F70", Offset = "0x956F70", VA = "0x956F70")]
	private void DemoRandomColors()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x957104", Offset = "0x957104", VA = "0x957104")]
	public APIExamples()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x957114", Offset = "0x957114", VA = "0x957114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x636E14", Offset = "0x636E14")]
	private void <Start>b__11_0(Color c)
	{
	}
}
[Token(Token = "0x2000027")]
public class CubeColorRotator : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E778", Offset = "0x62E778")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeColorRotator <>4__this;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <target>5__2;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x8654B0", Offset = "0x8654B0", VA = "0x8654B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x865518", Offset = "0x865518", VA = "0x865518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x865190", Offset = "0x865190", VA = "0x865190")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x8651E4", Offset = "0x8651E4", VA = "0x8651E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x8651E8", Offset = "0x8651E8", VA = "0x8651E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x8654B8", Offset = "0x8654B8", VA = "0x8654B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x865114", Offset = "0x865114", VA = "0x865114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x636E24", Offset = "0x636E24")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8651BC", Offset = "0x8651BC", VA = "0x8651BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8651C0", Offset = "0x8651C0", VA = "0x8651C0")]
	public CubeColorRotator()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8651C8", Offset = "0x8651C8", VA = "0x8651C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x636E88", Offset = "0x636E88")]
	private void <Start>b__1_0(Color c)
	{
	}
}
[Token(Token = "0x2000028")]
public class DemoGui : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E788", Offset = "0x62E788")]
	private sealed class <AnimateWindow>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoGui <>4__this;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__3;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x8714E8", Offset = "0x8714E8", VA = "0x8714E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x871550", Offset = "0x871550", VA = "0x871550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x87045C", Offset = "0x87045C", VA = "0x87045C")]
		[DebuggerHidden]
		public <AnimateWindow>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x87137C", Offset = "0x87137C", VA = "0x87137C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x871380", Offset = "0x871380", VA = "0x871380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x8714F0", Offset = "0x8714F0", VA = "0x8714F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorHSL color;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D previewTexture;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle previewStyle;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float yPos;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int width;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int height;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8702D0", Offset = "0x8702D0", VA = "0x8702D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8703E0", Offset = "0x8703E0", VA = "0x8703E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x636E98", Offset = "0x636E98")]
	public IEnumerator AnimateWindow()
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x870488", Offset = "0x870488", VA = "0x870488")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x87057C", Offset = "0x87057C", VA = "0x87057C")]
	private void DrawWindow(int windowID)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x871144", Offset = "0x871144", VA = "0x871144")]
	private void DrawColorPreview(Color color)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x871368", Offset = "0x871368", VA = "0x871368")]
	public DemoGui()
	{
	}
}
[Token(Token = "0x2000029")]
public static class ColorExtentions
{
	[Token(Token = "0x6000099")]
	[Address(RVA = "0x82FCF0", Offset = "0x82FCF0", VA = "0x82FCF0")]
	public static Color Lighten(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x82FD3C", Offset = "0x82FD3C", VA = "0x82FD3C")]
	public static Color Darken(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x82FD80", Offset = "0x82FD80", VA = "0x82FD80")]
	public static Color LightenRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x82FDCC", Offset = "0x82FDCC", VA = "0x82FDCC")]
	public static Color DarkenRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x82FE14", Offset = "0x82FE14", VA = "0x82FE14")]
	public static Color Desaturate(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x82FE58", Offset = "0x82FE58", VA = "0x82FE58")]
	public static Color Saturate(this Color c, float difference)
	{
		return default(Color);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x82FE9C", Offset = "0x82FE9C", VA = "0x82FE9C")]
	public static Color DesaturateRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x82FEE4", Offset = "0x82FEE4", VA = "0x82FEE4")]
	public static Color SaturateRelative(this Color c, float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x82FF2C", Offset = "0x82FF2C", VA = "0x82FF2C")]
	public static Color Grayscale(this Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x82FF44", Offset = "0x82FF44", VA = "0x82FF44")]
	public static float Luminosity(this Color c)
	{
		return default(float);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x82FF5C", Offset = "0x82FF5C", VA = "0x82FF5C")]
	public static Color SelectContrasting(this Color c, Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x83006C", Offset = "0x83006C", VA = "0x83006C")]
	public static bool IsSimilar(this Color c, Color other)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x830188", Offset = "0x830188", VA = "0x830188")]
	public static float HowSimilar(this Color c, Color other)
	{
		return default(float);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x830298", Offset = "0x830298", VA = "0x830298")]
	public static Color InvertHue(this Color c)
	{
		return default(Color);
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public struct ColorHSL
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float h;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float s;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float l;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float a;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x6B4188", Offset = "0x6B4188", VA = "0x6B4188")]
	public ColorHSL(float h, float s, float l, float a = 1f)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x6B4194", Offset = "0x6B4194", VA = "0x6B4194")]
	public ColorHSL(Color c)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x830678", Offset = "0x830678", VA = "0x830678")]
	public static ColorHSL FromColor(Color color)
	{
		return default(ColorHSL);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x8307E4", Offset = "0x8307E4", VA = "0x8307E4")]
	public static Color ToColor(ColorHSL color)
	{
		return default(Color);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8308F8", Offset = "0x8308F8", VA = "0x8308F8")]
	private static float ExtractRGB(float m1, float m2, float hue)
	{
		return default(float);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x82FD34", Offset = "0x82FD34", VA = "0x82FD34")]
	public static implicit operator ColorHSL(Color src)
	{
		return default(ColorHSL);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x82FD38", Offset = "0x82FD38", VA = "0x82FD38")]
	public static implicit operator Color(ColorHSL src)
	{
		return default(Color);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x6B41BC", Offset = "0x6B41BC", VA = "0x6B41BC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x6B41C4", Offset = "0x6B41C4", VA = "0x6B41C4")]
	public void Invert()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x6B41FC", Offset = "0x6B41FC", VA = "0x6B41FC")]
	public void InvertHue()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x6B4224", Offset = "0x6B4224", VA = "0x6B4224")]
	public void InvertLightness()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x6B4238", Offset = "0x6B4238", VA = "0x6B4238")]
	public void InvertSaturation()
	{
	}
}
[Token(Token = "0x200002B")]
public static class ColorHelper
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E798", Offset = "0x62E798")]
	private sealed class <DoLerp>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Color> set;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color from;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color to;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float time;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__2;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x831DDC", Offset = "0x831DDC", VA = "0x831DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x831E44", Offset = "0x831E44", VA = "0x831E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x831B4C", Offset = "0x831B4C", VA = "0x831B4C")]
		[DebuggerHidden]
		public <DoLerp>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x831CB4", Offset = "0x831CB4", VA = "0x831CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x831CB8", Offset = "0x831CB8", VA = "0x831CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x831DE4", Offset = "0x831DE4", VA = "0x831DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7A8", Offset = "0x62E7A8")]
	private sealed class <DoLerp>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Color> target;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Color> from;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Color> to;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x832074", Offset = "0x832074", VA = "0x832074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x8320DC", Offset = "0x8320DC", VA = "0x8320DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x831B78", Offset = "0x831B78", VA = "0x831B78")]
		[DebuggerHidden]
		public <DoLerp>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x831E4C", Offset = "0x831E4C", VA = "0x831E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x831E50", Offset = "0x831E50", VA = "0x831E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x83207C", Offset = "0x83207C", VA = "0x83207C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7B8", Offset = "0x62E7B8")]
	private sealed class <DoLerp>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] target;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color[] from;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color[] to;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x832288", Offset = "0x832288", VA = "0x832288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x8322F0", Offset = "0x8322F0", VA = "0x8322F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x831BA4", Offset = "0x831BA4", VA = "0x831BA4")]
		[DebuggerHidden]
		public <DoLerp>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x8320E4", Offset = "0x8320E4", VA = "0x8320E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x8320E8", Offset = "0x8320E8", VA = "0x8320E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x832290", Offset = "0x832290", VA = "0x832290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random Random;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CoroutineRunner coroutineManager;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x830BB0", Offset = "0x830BB0", VA = "0x830BB0")]
	public static Color RandomBrightColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x830D7C", Offset = "0x830D7C", VA = "0x830D7C")]
	public static Color RandomPastelColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x830E24", Offset = "0x830E24", VA = "0x830E24")]
	public static Color RandomDarkColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x830E98", Offset = "0x830E98", VA = "0x830E98")]
	public static Color RandomColor(float saturation, float lightness)
	{
		return default(Color);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x830F14", Offset = "0x830F14", VA = "0x830F14")]
	public static Color Blend(Color a, Color b, BlendStyle style)
	{
		return default(Color);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8311A0", Offset = "0x8311A0", VA = "0x8311A0")]
	public static Color Multiply(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8311A8", Offset = "0x8311A8", VA = "0x8311A8")]
	public static Color Screen(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x831254", Offset = "0x831254", VA = "0x831254")]
	public static Color Overlay(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8312E8", Offset = "0x8312E8", VA = "0x8312E8")]
	public static Color Difference(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x831390", Offset = "0x831390", VA = "0x831390")]
	public static Color Average(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x8313B0", Offset = "0x8313B0", VA = "0x8313B0")]
	public static Color Negation(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x831484", Offset = "0x831484", VA = "0x831484")]
	public static Color Mix(Color a, Color b)
	{
		return default(Color);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8314AC", Offset = "0x8314AC", VA = "0x8314AC")]
	public static IEnumerator LerpOverTime(Action<Color> set, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x8317CC", Offset = "0x8317CC", VA = "0x8317CC")]
	public static IEnumerator LerpOverTime(List<Color> target, List<Color> from, List<Color> to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x83198C", Offset = "0x83198C", VA = "0x83198C")]
	public static IEnumerator LerpOverTime(Color[] target, Color[] from, Color[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x8315AC", Offset = "0x8315AC", VA = "0x8315AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x636FDC", Offset = "0x636FDC")]
	public static IEnumerator DoLerp(Action<Color> set, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8318D0", Offset = "0x8318D0", VA = "0x8318D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638040", Offset = "0x638040")]
	public static IEnumerator DoLerp(List<Color> target, List<Color> from, List<Color> to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x831A90", Offset = "0x831A90", VA = "0x831A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6380A4", Offset = "0x6380A4")]
	public static IEnumerator DoLerp(Color[] target, Color[] from, Color[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x831BD0", Offset = "0x831BD0", VA = "0x831BD0")]
	public static void CancelLerpOverTime(IEnumerator handle)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x83168C", Offset = "0x83168C", VA = "0x83168C")]
	private static CoroutineRunner GetCoroutineManager()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x830C60", Offset = "0x830C60", VA = "0x830C60")]
	private static float RandomValue()
	{
		return default(float);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x830CE0", Offset = "0x830CE0", VA = "0x830CE0")]
	private static float RandomRange(float min, float max)
	{
		return default(float);
	}
}
[Token(Token = "0x200002C")]
public enum BlendStyle
{
	[Token(Token = "0x4000169")]
	Multiply,
	[Token(Token = "0x400016A")]
	Screen,
	[Token(Token = "0x400016B")]
	Overlay,
	[Token(Token = "0x400016C")]
	Difference,
	[Token(Token = "0x400016D")]
	Average,
	[Token(Token = "0x400016E")]
	Negation
}
[Token(Token = "0x200002D")]
public class Colors
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color AliceBlue;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Color AntiqueWhite;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Color Aqua;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Color Aquamarine;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly Color Azure;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Color Beige;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Color Bisque;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly Color Black;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly Color BlanchedAlmond;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly Color Blue;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly Color BlueViolet;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly Color Brown;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly Color Burlywood;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly Color CadetBlue;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static readonly Color Chartreuse;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static readonly Color Chocolate;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static readonly Color Coral;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static readonly Color CornflowerBlue;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static readonly Color Cornsilk;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static readonly Color Crimson;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static readonly Color Cyan;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static readonly Color DarkBlue;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static readonly Color DarkCyan;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static readonly Color DarkGoldenrod;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static readonly Color DarkGray;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static readonly Color DarkGreen;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static readonly Color DarkKhaki;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static readonly Color DarkMagenta;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static readonly Color DarkOliveGreen;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static readonly Color DarkOrange;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static readonly Color DarkOrchid;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static readonly Color DarkRed;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static readonly Color DarkSalmon;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static readonly Color DarkSeaGreen;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static readonly Color DarkSlateBlue;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static readonly Color DarkSlateGray;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static readonly Color DarkTurquoise;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static readonly Color DarkViolet;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static readonly Color DeepPink;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static readonly Color DeepSkyBlue;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static readonly Color DimGray;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static readonly Color DodgerBlue;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static readonly Color FireBrick;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static readonly Color FloralWhite;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static readonly Color ForestGreen;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static readonly Color Fuchsia;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static readonly Color Gainsboro;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static readonly Color GhostWhite;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public static readonly Color Gold;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public static readonly Color Goldenrod;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public static readonly Color Gray;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public static readonly Color Green;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public static readonly Color GreenYellow;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public static readonly Color Honeydew;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public static readonly Color HotPink;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public static readonly Color IndianRed;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public static readonly Color Indigo;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public static readonly Color Ivory;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public static readonly Color Khaki;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public static readonly Color Lavender;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public static readonly Color Lavenderblush;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public static readonly Color LawnGreen;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public static readonly Color LemonChiffon;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public static readonly Color LightBlue;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public static readonly Color LightCoral;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public static readonly Color LightCyan;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public static readonly Color LightGoldenodYellow;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public static readonly Color LightGray;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public static readonly Color LightGreen;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public static readonly Color LightPink;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public static readonly Color LightSalmon;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public static readonly Color LightSeaGreen;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public static readonly Color LightSkyBlue;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public static readonly Color LightSlateGray;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public static readonly Color LightSteelBlue;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public static readonly Color LightYellow;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public static readonly Color Lime;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public static readonly Color LimeGreen;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public static readonly Color Linen;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public static readonly Color Magenta;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public static readonly Color Maroon;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public static readonly Color MediumAquamarine;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public static readonly Color MediumBlue;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public static readonly Color MediumOrchid;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public static readonly Color MediumPurple;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public static readonly Color MediumSeaGreen;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public static readonly Color MediumSlateBlue;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public static readonly Color MediumSpringGreen;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public static readonly Color MediumTurquoise;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public static readonly Color MediumVioletRed;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public static readonly Color MidnightBlue;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public static readonly Color Mintcream;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public static readonly Color MistyRose;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public static readonly Color Moccasin;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public static readonly Color NavajoWhite;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public static readonly Color Navy;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	public static readonly Color OldLace;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public static readonly Color Olive;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public static readonly Color Olivedrab;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public static readonly Color Orange;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public static readonly Color Orangered;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public static readonly Color Orchid;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public static readonly Color PaleGoldenrod;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public static readonly Color PaleGreen;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public static readonly Color PaleTurquoise;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public static readonly Color PaleVioletred;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public static readonly Color PapayaWhip;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public static readonly Color PeachPuff;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public static readonly Color Peru;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public static readonly Color Pink;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public static readonly Color Plum;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public static readonly Color PowderBlue;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public static readonly Color Purple;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public static readonly Color Red;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public static readonly Color RosyBrown;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public static readonly Color RoyalBlue;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public static readonly Color SaddleBrown;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public static readonly Color Salmon;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public static readonly Color SandyBrown;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	public static readonly Color SeaGreen;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	public static readonly Color Seashell;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public static readonly Color Sienna;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	public static readonly Color Silver;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	public static readonly Color SkyBlue;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	public static readonly Color SlateBlue;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	public static readonly Color SlateGray;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	public static readonly Color Snow;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	public static readonly Color SpringGreen;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	public static readonly Color SteelBlue;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	public static readonly Color Tan;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	public static readonly Color Teal;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	public static readonly Color Thistle;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	public static readonly Color Tomato;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	public static readonly Color Turquoise;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	public static readonly Color Violet;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	public static readonly Color Wheat;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	public static readonly Color White;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	public static readonly Color WhiteSmoke;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	public static readonly Color Yellow;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	public static readonly Color YellowGreen;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x8322F8", Offset = "0x8322F8", VA = "0x8322F8")]
	public Colors()
	{
	}
}
[Token(Token = "0x200002E")]
public class CoroutineRunner : MonoBehaviour
{
	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x8560CC", Offset = "0x8560CC", VA = "0x8560CC")]
	public CoroutineRunner()
	{
	}
}
[Token(Token = "0x200002F")]
[ExecuteInEditMode]
public class SceneColorControl_Anim : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material skyMaterial;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color skyColor;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color horizonColor;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color groundColor;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float skyIntensity;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float skyFocus;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float horizonColorBanding;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool customFogColor;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color fogColor;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x94B9E8", Offset = "0x94B9E8", VA = "0x94B9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x94BA18", Offset = "0x94BA18", VA = "0x94BA18")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x94BE98", Offset = "0x94BE98", VA = "0x94BE98")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x94BA1C", Offset = "0x94BA1C", VA = "0x94BA1C")]
	private void UpdateColors()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x94BE9C", Offset = "0x94BE9C", VA = "0x94BE9C")]
	public SceneColorControl_Anim()
	{
	}
}
[Token(Token = "0x2000030")]
public class effectPlayVolume : MonoBehaviour
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] effectsToPlay;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool armed;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x99918C", Offset = "0x99918C", VA = "0x99918C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x999198", Offset = "0x999198", VA = "0x999198")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x9991A0", Offset = "0x9991A0", VA = "0x9991A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x999250", Offset = "0x999250", VA = "0x999250")]
	public effectPlayVolume()
	{
	}
}
[Token(Token = "0x2000031")]
public class effectSpawnVolume : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform effectToSpawn;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spawnPosition;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 spawnRotation;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool armed;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x999258", Offset = "0x999258", VA = "0x999258")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x999264", Offset = "0x999264", VA = "0x999264")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x99926C", Offset = "0x99926C", VA = "0x99926C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x999418", Offset = "0x999418", VA = "0x999418")]
	public effectSpawnVolume()
	{
	}
}
[Token(Token = "0x2000032")]
public class simpleFPSCamera : MonoBehaviour
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 sensitivity;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 speed;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minimumY;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maximumY;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1361994", Offset = "0x1361994", VA = "0x1361994")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1361CF4", Offset = "0x1361CF4", VA = "0x1361CF4")]
	public simpleFPSCamera()
	{
	}
}
[Token(Token = "0x2000033")]
public class startPlaying_stopPlaying : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool armed;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1361D7C", Offset = "0x1361D7C", VA = "0x1361D7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1361D88", Offset = "0x1361D88", VA = "0x1361D88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1361D90", Offset = "0x1361D90", VA = "0x1361D90")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1361DD4", Offset = "0x1361DD4", VA = "0x1361DD4")]
	private void StartPlaying()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1361DF4", Offset = "0x1361DF4", VA = "0x1361DF4")]
	private void StopPlaying()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1361E14", Offset = "0x1361E14", VA = "0x1361E14")]
	public startPlaying_stopPlaying()
	{
	}
}
[Token(Token = "0x2000034")]
public class toggleLight : MonoBehaviour
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerLight;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lightOn;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1361E24", Offset = "0x1361E24", VA = "0x1361E24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1361E28", Offset = "0x1361E28", VA = "0x1361E28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1361EAC", Offset = "0x1361EAC", VA = "0x1361EAC")]
	public toggleLight()
	{
	}
}
[Token(Token = "0x2000035")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x97AF54", Offset = "0x97AF54", VA = "0x97AF54")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x97B0F4", Offset = "0x97B0F4", VA = "0x97B0F4")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x97B330", Offset = "0x97B330", VA = "0x97B330")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x97B3F8", Offset = "0x97B3F8", VA = "0x97B3F8")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x97B9B0", Offset = "0x97B9B0", VA = "0x97B9B0")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000036")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000342")]
	public struct HSBColor
	{
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x6B4B3C", Offset = "0x6B4B3C", VA = "0x6B4B3C")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400021A")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x97B550", Offset = "0x97B550", VA = "0x97B550")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x97B73C", Offset = "0x97B73C", VA = "0x97B73C")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x97B9C4", Offset = "0x97B9C4", VA = "0x97B9C4")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x97BAE4", Offset = "0x97BAE4", VA = "0x97BAE4")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x97C730", Offset = "0x97C730", VA = "0x97C730")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x97C80C", Offset = "0x97C80C", VA = "0x97C80C")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000037")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x97E2F8", Offset = "0x97E2F8", VA = "0x97E2F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x97E2FC", Offset = "0x97E2FC", VA = "0x97E2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x97E344", Offset = "0x97E344", VA = "0x97E344")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x97E3F0", Offset = "0x97E3F0", VA = "0x97E3F0")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000038")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x97CB90", Offset = "0x97CB90", VA = "0x97CB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x97CF5C", Offset = "0x97CF5C", VA = "0x97CF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x97E16C", Offset = "0x97E16C", VA = "0x97E16C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x97D0F4", Offset = "0x97D0F4", VA = "0x97D0F4")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x97D290", Offset = "0x97D290", VA = "0x97D290")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x97D7C0", Offset = "0x97D7C0", VA = "0x97D7C0")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x97CCE4", Offset = "0x97CCE4", VA = "0x97CCE4")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x97D504", Offset = "0x97D504", VA = "0x97D504")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x97DA44", Offset = "0x97DA44", VA = "0x97DA44")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x97CE10", Offset = "0x97CE10", VA = "0x97CE10")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x97E29C", Offset = "0x97E29C", VA = "0x97E29C")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000039")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x6000101")]
	[Address(RVA = "0x97E424", Offset = "0x97E424", VA = "0x97E424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x97E49C", Offset = "0x97E49C", VA = "0x97E49C")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x200003A")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x97E4A4", Offset = "0x97E4A4", VA = "0x97E4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x97E530", Offset = "0x97E530", VA = "0x97E530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x97E560", Offset = "0x97E560", VA = "0x97E560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x97E604", Offset = "0x97E604", VA = "0x97E604")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x200003B")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x97E658", Offset = "0x97E658", VA = "0x97E658")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x97E660", Offset = "0x97E660", VA = "0x97E660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x97E77C", Offset = "0x97E77C", VA = "0x97E77C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x97E7E4", Offset = "0x97E7E4", VA = "0x97E7E4")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x97E904", Offset = "0x97E904", VA = "0x97E904")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x97EE3C", Offset = "0x97EE3C", VA = "0x97EE3C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x97EEF8", Offset = "0x97EEF8", VA = "0x97EEF8")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x200003D")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x97EFC0", Offset = "0x97EFC0", VA = "0x97EFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x97F044", Offset = "0x97F044", VA = "0x97F044")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x97F41C", Offset = "0x97F41C", VA = "0x97F41C")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200003E")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7C8", Offset = "0x62E7C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x980148", Offset = "0x980148", VA = "0x980148")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x980150", Offset = "0x980150", VA = "0x980150")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x9801BC", Offset = "0x9801BC", VA = "0x9801BC")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x980200", Offset = "0x980200", VA = "0x980200")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x97F42C", Offset = "0x97F42C", VA = "0x97F42C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x97F4E8", Offset = "0x97F4E8", VA = "0x97F4E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x97F544", Offset = "0x97F544", VA = "0x97F544")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x97F5A0", Offset = "0x97F5A0", VA = "0x97F5A0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x97F6D0", Offset = "0x97F6D0", VA = "0x97F6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x97F6D4", Offset = "0x97F6D4", VA = "0x97F6D4")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000117")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x97FDA4", Offset = "0x97FDA4", VA = "0x97FDA4")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x980004", Offset = "0x980004", VA = "0x980004")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x200003F")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x9806B4", Offset = "0x9806B4", VA = "0x9806B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x980940", Offset = "0x980940", VA = "0x980940")]
	private void Update()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x980AE0", Offset = "0x980AE0", VA = "0x980AE0")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x2000040")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F230", Offset = "0x62F230")]
	public float MinVertexDistance;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F24C", Offset = "0x62F24C")]
	public float Frequency;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F268", Offset = "0x62F268")]
	public float TimeScale;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F284", Offset = "0x62F284")]
	public float Amplitude;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x400025A")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x400025B")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x400025C")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x980AE8", Offset = "0x980AE8", VA = "0x980AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x980C58", Offset = "0x980C58", VA = "0x980C58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x980CD8", Offset = "0x980CD8", VA = "0x980CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x980DE4", Offset = "0x980DE4", VA = "0x980DE4")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x981038", Offset = "0x981038", VA = "0x981038")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x9811EC", Offset = "0x9811EC", VA = "0x9811EC")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x9812B4", Offset = "0x9812B4", VA = "0x9812B4")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x981384", Offset = "0x981384", VA = "0x981384")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x9815C4", Offset = "0x9815C4", VA = "0x9815C4")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x981B08", Offset = "0x981B08", VA = "0x981B08")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x981BF0", Offset = "0x981BF0", VA = "0x981BF0")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x981EA4", Offset = "0x981EA4", VA = "0x981EA4")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x981D10", Offset = "0x981D10", VA = "0x981D10")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x982178", Offset = "0x982178", VA = "0x982178")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x982340", Offset = "0x982340", VA = "0x982340")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x2000041")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x83A8C4", Offset = "0x83A8C4", VA = "0x83A8C4")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x4000260")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x839568", Offset = "0x839568", VA = "0x839568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x839578", Offset = "0x839578", VA = "0x839578")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x839730", Offset = "0x839730", VA = "0x839730")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x83A710", Offset = "0x83A710", VA = "0x83A710")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x839D54", Offset = "0x839D54", VA = "0x839D54")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x83A8CC", Offset = "0x83A8CC", VA = "0x83A8CC")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x83A550", Offset = "0x83A550", VA = "0x83A550")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x83A464", Offset = "0x83A464", VA = "0x83A464")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x83AA3C", Offset = "0x83AA3C", VA = "0x83AA3C")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x83AB00", Offset = "0x83AB00", VA = "0x83AB00")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x83B424", Offset = "0x83B424", VA = "0x83B424")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x83B428", Offset = "0x83B428", VA = "0x83B428")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x83AC38", Offset = "0x83AC38", VA = "0x83AC38")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x83B53C", Offset = "0x83B53C", VA = "0x83B53C")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x83B22C", Offset = "0x83B22C", VA = "0x83B22C")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x83B5F8", Offset = "0x83B5F8", VA = "0x83B5F8")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x83B794", Offset = "0x83B794", VA = "0x83B794")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x83BB58", Offset = "0x83BB58", VA = "0x83BB58")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000042")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F2A0", Offset = "0x62F2A0")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x980244", Offset = "0x980244", VA = "0x980244")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x9802C8", Offset = "0x9802C8", VA = "0x9802C8")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x9802D0", Offset = "0x9802D0", VA = "0x9802D0")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9806A4", Offset = "0x9806A4", VA = "0x9806A4")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x2000043")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AACC", Offset = "0x62AACC")]
public class AutoUpdate : MonoBehaviour
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ImplicitSurfaceMeshCreaterBase _surface;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x823100", Offset = "0x823100", VA = "0x823100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x823160", Offset = "0x823160", VA = "0x823160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x823180", Offset = "0x823180", VA = "0x823180")]
	public AutoUpdate()
	{
	}
}
[Token(Token = "0x2000044")]
public class ImplicitSurface : ImplicitSurfaceMeshCreaterBase
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshCollider meshCollider;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Vector3[] _positionMap;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float[] _powerMap;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float[] _powerMapMask;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int _countX;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int _countY;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int _countZ;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _bMapsDirty;

	[Token(Token = "0x17000006")]
	public MeshFilter MeshFilter
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x9B2D40", Offset = "0x9B2D40", VA = "0x9B2D40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public override Mesh Mesh
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x9B2DEC", Offset = "0x9B2DEC", VA = "0x9B2DEC", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x9B2E08", Offset = "0x9B2E08", VA = "0x9B2E08", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9B2E24", Offset = "0x9B2E24", VA = "0x9B2E24")]
	protected void ResetMaps()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x9B3324", Offset = "0x9B3324", VA = "0x9B3324", Slot = "8")]
	protected virtual void InitializePowerMap()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9B338C", Offset = "0x9B338C", VA = "0x9B338C", Slot = "4")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x9B3718", Offset = "0x9B3718", VA = "0x9B3718")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9B3838", Offset = "0x9B3838", VA = "0x9B3838")]
	public ImplicitSurface()
	{
	}
}
[Token(Token = "0x2000045")]
public abstract class ImplicitSurfaceMeshCreaterBase : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gridSize;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F2BC", Offset = "0x62F2BC")]
	public bool bAutoGridSize;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F2F4", Offset = "0x62F2F4")]
	public float autoGridQuarity;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MetaballUVGuide uvProjectNode;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float powerThreshold;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool bReverse;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Bounds fixedBounds;

	[Token(Token = "0x17000008")]
	public float GridSize
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x9B3948", Offset = "0x9B3948", VA = "0x9B3948")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public abstract Mesh Mesh
	{
		[Token(Token = "0x600014F")]
		get;
		[Token(Token = "0x6000150")]
		set;
	}

	[Token(Token = "0x600014E")]
	public abstract void CreateMesh();

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x9B39C4", Offset = "0x9B39C4", VA = "0x9B39C4", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x9B34F4", Offset = "0x9B34F4", VA = "0x9B34F4")]
	protected void GetUVBaseVector(out Vector3 uDir, out Vector3 vDir, out Vector3 offset)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x9B3844", Offset = "0x9B3844", VA = "0x9B3844")]
	protected ImplicitSurfaceMeshCreaterBase()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class IMBrush : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IncrementalModeling im;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeRadius;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool bSubtract;

	[Token(Token = "0x1700000A")]
	public float PowerScale
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x89F66C", Offset = "0x89F66C", VA = "0x89F66C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x89F684", Offset = "0x89F684", VA = "0x89F684")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x638108", Offset = "0x638108")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000156")]
	protected abstract void DoDraw();

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x89F7B0", Offset = "0x89F7B0", VA = "0x89F7B0")]
	protected IMBrush()
	{
	}
}
[Token(Token = "0x2000047")]
public class IMBrushBox : IMBrush
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 extents;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x89F7C4", Offset = "0x89F7C4", VA = "0x89F7C4", Slot = "4")]
	protected override void DoDraw()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x89F820", Offset = "0x89F820", VA = "0x89F820")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x89FA98", Offset = "0x89FA98", VA = "0x89FA98")]
	public IMBrushBox()
	{
	}
}
[Token(Token = "0x2000048")]
public class IMBrushSphere : IMBrush
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x89FB1C", Offset = "0x89FB1C", VA = "0x89FB1C", Slot = "4")]
	protected override void DoDraw()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x89FB74", Offset = "0x89FB74", VA = "0x89FB74")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x89FD28", Offset = "0x89FD28", VA = "0x89FD28")]
	public IMBrushSphere()
	{
	}
}
[Token(Token = "0x2000049")]
public class IncrementalModeling : ImplicitSurface
{
	[Serializable]
	[Token(Token = "0x2000345")]
	public class Brush
	{
		[Token(Token = "0x20004ED")]
		public enum Shape
		{
			[Token(Token = "0x4002097")]
			sphere,
			[Token(Token = "0x4002098")]
			box
		}

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fadeRadius;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float powerScale;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 invTransform;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sphereRadius;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 boxExtents;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shape shape;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x9B4138", Offset = "0x9B4138", VA = "0x9B4138")]
		public Brush()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x9B3E14", Offset = "0x9B3E14", VA = "0x9B3E14")]
		public Brush(Shape shape_, Matrix4x4 invTransformMtx_, float fadeRadius_, float powerScale_, float sphereRadius_, Vector3 boxExtents_)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x9B3AC0", Offset = "0x9B3AC0", VA = "0x9B3AC0")]
		public void Draw(IncrementalModeling model)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x9B41D0", Offset = "0x9B41D0", VA = "0x9B41D0")]
		private void DrawSphere(IncrementalModeling model)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x9B43D4", Offset = "0x9B43D4", VA = "0x9B43D4")]
		private void DrawBox(IncrementalModeling model)
		{
		}
	}

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool bSaveBrushHistory;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<Brush> _brushHistory;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x9B39C8", Offset = "0x9B39C8", VA = "0x9B39C8", Slot = "8")]
	protected override void InitializePowerMap()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x9B3ADC", Offset = "0x9B3ADC", VA = "0x9B3ADC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x638140", Offset = "0x638140")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x9B3BEC", Offset = "0x9B3BEC", VA = "0x9B3BEC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x638178", Offset = "0x638178")]
	public void ClearHistory()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x9B3C44", Offset = "0x9B3C44", VA = "0x9B3C44")]
	public void AddSphere(Transform brushTransform, float radius, float powerScale, float fadeRadius)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9B3F18", Offset = "0x9B3F18", VA = "0x9B3F18")]
	public void AddBox(Transform brushTransform, Vector3 extents, float powerScale, float fadeRadius)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x9B40AC", Offset = "0x9B40AC", VA = "0x9B40AC")]
	public IncrementalModeling()
	{
	}
}
[Token(Token = "0x200004A")]
public class MetaballNode : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float baseRadius;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool bSubtract;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MetaballSeedBase _seed;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh _boneMesh;

	[Token(Token = "0x1700000B")]
	public virtual float Density
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xA6713C", Offset = "0xA6713C", VA = "0xA6713C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000C")]
	public float Radius
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xA67154", Offset = "0xA67154", VA = "0xA67154")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xA6715C", Offset = "0xA6715C", VA = "0xA6715C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xA67C30", Offset = "0xA67C30", VA = "0xA67C30")]
	public MetaballNode()
	{
	}
}
[Token(Token = "0x200004B")]
public class MetaballRootNode : MetaballNode
{
	[Token(Token = "0x1700000D")]
	public override float Density
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xA67C40", Offset = "0xA67C40", VA = "0xA67C40", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA67C48", Offset = "0xA67C48", VA = "0xA67C48")]
	public MetaballRootNode()
	{
	}
}
[Token(Token = "0x200004C")]
public abstract class MetaballSeedBase : ImplicitSurfaceMeshCreaterBase
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform boneRoot;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MetaballNode sourceRoot;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MetaballCellObject cellObjPrefab;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float baseRadius;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool bUseFixedBounds;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected string _errorMsg;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] _boneNodes;

	[Token(Token = "0x1700000E")]
	public abstract bool IsTreeShape
	{
		[Token(Token = "0x600016A")]
		get;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA67C58", Offset = "0xA67C58", VA = "0xA67C58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA67D98", Offset = "0xA67D98", VA = "0xA67D98")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA67EB0", Offset = "0xA67EB0", VA = "0xA67EB0")]
	protected void EnumBoneNodes()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA67F5C", Offset = "0xA67F5C", VA = "0xA67F5C")]
	private void EnumerateGameObjects(GameObject parent, List<GameObject> list)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA6804C", Offset = "0xA6804C", VA = "0xA6804C")]
	protected void CleanupBoneRoot()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA681C4", Offset = "0xA681C4", VA = "0xA681C4")]
	protected MetaballSeedBase()
	{
	}
}
[Token(Token = "0x200004D")]
public class MetaballUVGuide : MonoBehaviour
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float uScale;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vScale;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA68238", Offset = "0xA68238", VA = "0xA68238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA6823C", Offset = "0xA6823C", VA = "0xA6823C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA68240", Offset = "0xA68240", VA = "0xA68240")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA68334", Offset = "0xA68334", VA = "0xA68334")]
	public MetaballUVGuide()
	{
	}
}
[Token(Token = "0x200004E")]
public class SkinnedMetaballSeed : MetaballSeedBase
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMetaballCell _rootCell;

	[Token(Token = "0x1700000F")]
	public override Mesh Mesh
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x136CC6C", Offset = "0x136CC6C", VA = "0x136CC6C", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x136CC88", Offset = "0x136CC88", VA = "0x136CC88", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public override bool IsTreeShape
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x136CCA4", Offset = "0x136CCA4", VA = "0x136CCA4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x136C428", Offset = "0x136C428", VA = "0x136C428", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6381B0", Offset = "0x6381B0")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x136C988", Offset = "0x136C988", VA = "0x136C988")]
	private void ConstructTree(Transform node, SkinnedMetaballCell cell, Matrix4x4 toLocalMtx)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x136CCAC", Offset = "0x136CCAC", VA = "0x136CCAC")]
	public SkinnedMetaballSeed()
	{
	}
}
[Token(Token = "0x200004F")]
public class StaticMetaballSeed : MetaballSeedBase
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshFilter meshFilter;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MetaballCellCluster _cellCluster;

	[Token(Token = "0x17000011")]
	public override Mesh Mesh
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x1374770", Offset = "0x1374770", VA = "0x1374770", Slot = "5")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x137478C", Offset = "0x137478C", VA = "0x137478C", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public override bool IsTreeShape
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x13747A8", Offset = "0x13747A8", VA = "0x13747A8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1374158", Offset = "0x1374158", VA = "0x1374158")]
	private void ConstructCellCluster(MetaballCellCluster cluster, Transform parentNode, Matrix4x4 toLocalMtx)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1374460", Offset = "0x1374460", VA = "0x1374460", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6381E8", Offset = "0x6381E8")]
	public override void CreateMesh()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x13747B0", Offset = "0x13747B0", VA = "0x13747B0")]
	public StaticMetaballSeed()
	{
	}
}
[Token(Token = "0x2000050")]
public class MetaballBuilder
{
	[Token(Token = "0x2000346")]
	private class MB3DCubeVector
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public sbyte[] e;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public sbyte axisIdx;

		[Token(Token = "0x170001A6")]
		public sbyte x
		{
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xA65794", Offset = "0xA65794", VA = "0xA65794")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xA66008", Offset = "0xA66008", VA = "0xA66008")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public sbyte y
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xA6575C", Offset = "0xA6575C", VA = "0xA6575C")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0xA6603C", Offset = "0xA6603C", VA = "0xA6603C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public sbyte z
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xA65724", Offset = "0xA65724", VA = "0xA65724")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xA66074", Offset = "0xA66074", VA = "0xA66074")]
			set
			{
			}
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xA660AC", Offset = "0xA660AC", VA = "0xA660AC")]
		public MB3DCubeVector()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xA66120", Offset = "0xA66120", VA = "0xA66120")]
		public MB3DCubeVector(sbyte x_, sbyte y_, sbyte z_)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xA6624C", Offset = "0xA6624C", VA = "0xA6624C")]
		public static MB3DCubeVector operator +(MB3DCubeVector lh, MB3DCubeVector rh)
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xA661E0", Offset = "0xA661E0", VA = "0xA661E0")]
		private void CalcAxis()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xA66328", Offset = "0xA66328", VA = "0xA66328")]
		public void SetAxisVector(sbyte axisIdx_, sbyte value)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xA663BC", Offset = "0xA663BC", VA = "0xA663BC")]
		public static MB3DCubeVector operator *(MB3DCubeVector lh, sbyte rh)
		{
			return null;
		}
	}

	[Token(Token = "0x2000347")]
	private class MB3DCubeInOut
	{
		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public sbyte[,,] bFill;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int inCount;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xA652AC", Offset = "0xA652AC", VA = "0xA652AC")]
		public MB3DCubeInOut()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xA6533C", Offset = "0xA6533C", VA = "0xA6533C")]
		public MB3DCubeInOut(sbyte patternIdx)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xA606C4", Offset = "0xA606C4", VA = "0xA606C4")]
		public MB3DCubeInOut(sbyte a0, sbyte a1, sbyte a2, sbyte a3, sbyte a4, sbyte a5, sbyte a6, sbyte a7)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xA6549C", Offset = "0xA6549C", VA = "0xA6549C")]
		private void Init(sbyte a0, sbyte a1, sbyte a2, sbyte a3, sbyte a4, sbyte a5, sbyte a6, sbyte a7)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xA65674", Offset = "0xA65674", VA = "0xA65674")]
		public sbyte At(MB3DCubeVector point)
		{
			return default(sbyte);
		}
	}

	[Token(Token = "0x2000348")]
	private struct MB3DCubePrimitivePattern
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MB3DCubeInOut InOut;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] IndexBuf;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] IndexBufAlter;

		[Token(Token = "0x170001A9")]
		public int IndexCount
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x6B99B0", Offset = "0x6B99B0", VA = "0x6B99B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AA")]
		public int IndexCountAlter
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x6B99C8", Offset = "0x6B99C8", VA = "0x6B99C8")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x2000349")]
	private class MB3DPatternMatchingInfo
	{
		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PrimaryPatternIndex;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool bFlipInOut;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3DCubeVector Origin;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3DCubeVector[] Axis;

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xA657C8", Offset = "0xA657C8", VA = "0xA657C8")]
		public void Match(MB3DCubeInOut src)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xA64750", Offset = "0xA64750", VA = "0xA64750")]
		public int[] GetTargetPrimitiveIndexBuffer()
		{
			return null;
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xA66468", Offset = "0xA66468", VA = "0xA66468")]
		public MB3DCubeVector SampleVertex(MB3DCubeVector primaryPos)
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xA65D7C", Offset = "0xA65D7C", VA = "0xA65D7C")]
		public void SampleSegment(sbyte primarySegmentID, out sbyte out_axis, out sbyte out_a_1, out sbyte out_a_2)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xA65F5C", Offset = "0xA65F5C", VA = "0xA65F5C")]
		public MB3DPatternMatchingInfo()
		{
		}
	}

	[Token(Token = "0x200034A")]
	private class MB3DCubePattern
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PatternIdx;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3DPatternMatchingInfo MatchingInfo;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] IndexBuf;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xA5F958", Offset = "0xA5F958", VA = "0xA5F958")]
		public void Init(int patternIdx)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xA5F8C4", Offset = "0xA5F8C4", VA = "0xA5F8C4")]
		public MB3DCubePattern()
		{
		}
	}

	[Token(Token = "0x200034B")]
	public class MetaballPointInfo
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float density;

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xA64CA4", Offset = "0xA64CA4", VA = "0xA64CA4")]
		public MetaballPointInfo()
		{
		}
	}

	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7D8", Offset = "0x62E7D8")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds tmpBounds;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MetaballCellObject cellObjPrefab;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MetaballPointInfo[] tmpBallPoints;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cellIdx;

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xA638C8", Offset = "0xA638C8", VA = "0xA638C8")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xA648A8", Offset = "0xA648A8", VA = "0xA648A8")]
		internal void <AnalyzeCellCluster>b__0(MetaballCell c)
		{
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7E8", Offset = "0x62E7E8")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds tmpBounds;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MetaballCellObject cellObjPrefab;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] tmpBones;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<SkinnedMetaballCell, int> boneDictionary;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int cellIdx;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Matrix4x4[] tmpBindPoses;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MetaballPointInfo[] tmpBallPoints;

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xA638D0", Offset = "0xA638D0", VA = "0xA638D0")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xA64CAC", Offset = "0xA64CAC", VA = "0xA64CAC")]
		internal void <AnalyzeCellClusterWithSkeleton>b__0(SkinnedMetaballCell c)
		{
		}
	}

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool __bCubePatternsInitialized;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MB3DCubePattern[] __cubePatterns;

	[Token(Token = "0x40002A0")]
	private const int MB3D_PATTERN_COUNT = 15;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static MB3DCubePrimitivePattern[] __primitivePatterns;

	[Token(Token = "0x40002A2")]
	private const int _maxGridCellCount = 1000000;

	[Token(Token = "0x40002A3")]
	private const int _maxVertexCount = 300000;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static MetaballBuilder _instance;

	[Token(Token = "0x17000013")]
	public static int MaxGridCellCount
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xA60878", Offset = "0xA60878", VA = "0xA60878")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public static int MaxVertexCount
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xA60884", Offset = "0xA60884", VA = "0xA60884")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public static MetaballBuilder Instance
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xA60890", Offset = "0xA60890", VA = "0xA60890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA5F74C", Offset = "0xA5F74C", VA = "0xA5F74C")]
	private static void __InitCubePatterns()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA5FAAC", Offset = "0xA5FAAC", VA = "0xA5FAAC")]
	static MetaballBuilder()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA607BC", Offset = "0xA607BC", VA = "0xA607BC")]
	private static float CalcPower(Vector3 relativePos, float radius, float density)
	{
		return default(float);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA60964", Offset = "0xA60964", VA = "0xA60964")]
	public string CreateMesh(MetaballCellClusterInterface rootCell, Transform root, float powerThreshold, float gridCellSize, Vector3 uDir, Vector3 vDir, Vector3 uvOffset, out Mesh out_mesh, [Optional] MetaballCellObject cellObjPrefab, bool bReverse = false, [Optional] Bounds? fixedBounds, bool bAutoGridSize = false, float autoGridQuarity = 0.2f)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA630F8", Offset = "0xA630F8", VA = "0xA630F8")]
	public string CreateMeshWithSkeleton(SkinnedMetaballCell rootCell, Transform root, float powerThreshold, float gridCellSize, Vector3 uDir, Vector3 vDir, Vector3 uvOffset, out Mesh out_mesh, out Transform[] out_bones, [Optional] MetaballCellObject cellObjPrefab, bool bReverse = false, [Optional] Bounds? fixedBounds, bool bAutoGridSize = false, float autoGridQuarity = 0.2f)
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA60E74", Offset = "0xA60E74", VA = "0xA60E74")]
	private void AnalyzeCellCluster(MetaballCellClusterInterface cellCluster, Transform root, out Bounds bounds, out MetaballPointInfo[] ballPoints, [Optional] MetaballCellObject cellObjPrefab)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA63648", Offset = "0xA63648", VA = "0xA63648")]
	private void AnalyzeCellClusterWithSkeleton(SkinnedMetaballCell rootCell, Transform root, out Bounds bounds, out Transform[] bones, out Matrix4x4[] bindPoses, out MetaballPointInfo[] ballPoints, [Optional] MetaballCellObject cellObjPrefab)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA638D8", Offset = "0xA638D8", VA = "0xA638D8")]
	public Mesh CreateImplicitSurfaceMesh(int countX, int countY, int countZ, Vector3[] positionMap, float[] powerMap, bool bReverse, float threshold, Vector3 uDir, Vector3 vDir, Vector3 uvOffset)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA6110C", Offset = "0xA6110C", VA = "0xA6110C")]
	private void BuildMetaballMesh(Mesh mesh, Vector3 center, Vector3 extent, float cellSize, MetaballPointInfo[] points, float powerThreshold, bool bReverse, Vector3 uDir, Vector3 vDir, Vector3 uvOffset)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xA6095C", Offset = "0xA6095C", VA = "0xA6095C")]
	public MetaballBuilder()
	{
	}
}
[Token(Token = "0x2000051")]
public class MetaballCell
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 baseColor;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tag;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float density;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 modelPosition;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion modelRotation;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xA66550", Offset = "0xA66550", VA = "0xA66550")]
	public MetaballCell()
	{
	}
}
[Token(Token = "0x2000052")]
public class MetaballCellCluster : MetaballCellClusterInterface
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E7F8", Offset = "0x62E7F8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MetaballCell cell;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDistanceCoef;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool bFail;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xA66A40", Offset = "0xA66A40", VA = "0xA66A40")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xA67010", Offset = "0xA67010", VA = "0xA67010")]
		internal void <AddCell>b__0(MetaballCell c)
		{
		}
	}

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<MetaballCell> _cells;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _baseRadius;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _baseColor;

	[Token(Token = "0x17000016")]
	public float BaseRadius
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xA66600", Offset = "0xA66600", VA = "0xA66600", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xA66608", Offset = "0xA66608", VA = "0xA66608")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public int CellCount
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xA66830", Offset = "0xA66830", VA = "0xA66830", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA66610", Offset = "0xA66610", VA = "0xA66610", Slot = "5")]
	public void DoForeachCell(ForeachCellDeleg deleg)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA66718", Offset = "0xA66718", VA = "0xA66718")]
	public MetaballCell GetCell(int index)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA66790", Offset = "0xA66790", VA = "0xA66790")]
	public int FindCell(MetaballCell cell)
	{
		return default(int);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA66880", Offset = "0xA66880", VA = "0xA66880")]
	public MetaballCell AddCell(Vector3 position, float minDistanceCoef = 1f, [Optional] float? radius, [Optional] string tag)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA66A48", Offset = "0xA66A48", VA = "0xA66A48")]
	public void RemoveCell(MetaballCell cell)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA66AB0", Offset = "0xA66AB0", VA = "0xA66AB0")]
	public void ClearCells()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA66B08", Offset = "0xA66B08", VA = "0xA66B08")]
	public string GetPositionsString()
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA66CA8", Offset = "0xA66CA8", VA = "0xA66CA8")]
	public void ReadPositionsString(string positions)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA66DF0", Offset = "0xA66DF0", VA = "0xA66DF0")]
	private static Vector3 ParseVector3(string data)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA66F64", Offset = "0xA66F64", VA = "0xA66F64")]
	public MetaballCellCluster()
	{
	}
}
[Token(Token = "0x2000053")]
public delegate void ForeachCellDeleg(MetaballCell c);
[Token(Token = "0x2000054")]
public interface MetaballCellClusterInterface
{
	[Token(Token = "0x17000018")]
	float BaseRadius
	{
		[Token(Token = "0x60001A0")]
		get;
	}

	[Token(Token = "0x17000019")]
	int CellCount
	{
		[Token(Token = "0x60001A2")]
		get;
	}

	[Token(Token = "0x60001A1")]
	void DoForeachCell(ForeachCellDeleg deleg);
}
[Token(Token = "0x2000055")]
public class MetaballCellObject : MonoBehaviour
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MetaballCell _cell;

	[Token(Token = "0x1700001A")]
	public MetaballCell Cell
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xA67124", Offset = "0xA67124", VA = "0xA67124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA6712C", Offset = "0xA6712C", VA = "0xA6712C", Slot = "4")]
	public virtual void Setup(MetaballCell cell)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA67134", Offset = "0xA67134", VA = "0xA67134")]
	public MetaballCellObject()
	{
	}
}
[Token(Token = "0x2000056")]
public class SkinnedMetaballCell : MetaballCell, MetaballCellClusterInterface
{
	[Token(Token = "0x200034F")]
	public delegate void ForeachSkinnedCellDeleg(SkinnedMetaballCell c);

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E808", Offset = "0x62E808")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMetaballCell child;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDistanceCoef;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool bFail;

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x136BB28", Offset = "0x136BB28", VA = "0x136BB28")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x136C2DC", Offset = "0x136C2DC", VA = "0x136C2DC")]
		internal void <AddChild>b__0(SkinnedMetaballCell c)
		{
		}
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMetaballCell parent;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SkinnedMetaballCell> children;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SkinnedMetaballCell> links;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int distanceFromRoot;

	[Token(Token = "0x1700001B")]
	public float BaseRadius
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x136AEFC", Offset = "0x136AEFC", VA = "0x136AEFC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001C")]
	public bool IsRoot
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x136AF04", Offset = "0x136AF04", VA = "0x136AF04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public bool IsTerminal
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x136AF14", Offset = "0x136AF14", VA = "0x136AF14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public bool IsBranch
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x136AF6C", Offset = "0x136AF6C", VA = "0x136AF6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	public SkinnedMetaballCell Root
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x136AFD4", Offset = "0x136AFD4", VA = "0x136AFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public int CellCount
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x136AFE8", Offset = "0x136AFE8", VA = "0x136AFE8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000021")]
	public int DistanceFromBranch
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x136B6A8", Offset = "0x136B6A8", VA = "0x136B6A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000022")]
	public int DistanceFromLastLink
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x136B8AC", Offset = "0x136B8AC", VA = "0x136B8AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000023")]
	private int DistanceFromLastBranch
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x136B74C", Offset = "0x136B74C", VA = "0x136B74C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	private int DistanceToNextBranch
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x136B794", Offset = "0x136B794", VA = "0x136B794")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x136B0E8", Offset = "0x136B0E8", VA = "0x136B0E8")]
	public void DoForeachSkinnedCell(ForeachSkinnedCellDeleg deleg)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x136B590", Offset = "0x136B590", VA = "0x136B590", Slot = "5")]
	public void DoForeachCell(ForeachCellDeleg deleg)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x136B94C", Offset = "0x136B94C", VA = "0x136B94C")]
	public SkinnedMetaballCell AddChild(Vector3 position, float in_radius, float minDistanceCoef = 1f)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x136BBEC", Offset = "0x136BBEC", VA = "0x136BBEC")]
	public void CalcRotation()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x136BDD0", Offset = "0x136BDD0", VA = "0x136BDD0")]
	public string GetStringExpression()
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x136BF94", Offset = "0x136BF94", VA = "0x136BF94")]
	public static SkinnedMetaballCell ConstructFromString(string data, float radius)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x136C168", Offset = "0x136C168", VA = "0x136C168")]
	private static Vector3 ParseVector3(string data)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x136BB30", Offset = "0x136BB30", VA = "0x136BB30")]
	public SkinnedMetaballCell()
	{
	}
}
[Token(Token = "0x2000057")]
public class TentacleControl : MonoBehaviour
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMetaballSeed seed;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x809D64", Offset = "0x809D64", VA = "0x809D64")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x809E20", Offset = "0x809E20", VA = "0x809E20")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x809D68", Offset = "0x809D68", VA = "0x809D68")]
	private void SetupPhysicsBones()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x809E24", Offset = "0x809E24", VA = "0x809E24")]
	private void SetupPhysicsBonesRecursive(MetaballCellObject obj, bool bRoot = false)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x80A164", Offset = "0x80A164", VA = "0x80A164")]
	public TentacleControl()
	{
	}
}
[Token(Token = "0x2000058")]
public class DungeonControl : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StaticMetaballSeed metaball;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem hitPS;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x879D9C", Offset = "0x879D9C", VA = "0x879D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x879E64", Offset = "0x879E64", VA = "0x879E64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x879E68", Offset = "0x879E68", VA = "0x879E68")]
	public void AddCell(Vector3 position, float size)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x87A150", Offset = "0x87A150", VA = "0x87A150")]
	public DungeonControl()
	{
	}
}
[Token(Token = "0x2000059")]
public class FPControl : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController cc;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float walkSpeed;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _theta;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _phi;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotSpeed;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _mx;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _my;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x87E050", Offset = "0x87E050", VA = "0x87E050")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x87E120", Offset = "0x87E120", VA = "0x87E120")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x87E568", Offset = "0x87E568", VA = "0x87E568")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x87E6D8", Offset = "0x87E6D8", VA = "0x87E6D8")]
	public FPControl()
	{
	}
}
[Token(Token = "0x200005A")]
public class HitPSControl : MonoBehaviour
{
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x899D50", Offset = "0x899D50", VA = "0x899D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x899E04", Offset = "0x899E04", VA = "0x899E04")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x899E08", Offset = "0x899E08", VA = "0x899E08")]
	public HitPSControl()
	{
	}
}
[Token(Token = "0x200005B")]
public class DungeonControl2 : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IncrementalModeling metaball;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x87A158", Offset = "0x87A158", VA = "0x87A158")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x87A220", Offset = "0x87A220", VA = "0x87A220")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x87A224", Offset = "0x87A224", VA = "0x87A224")]
	public void Attack(IMBrush brush)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x87A31C", Offset = "0x87A31C", VA = "0x87A31C")]
	public DungeonControl2()
	{
	}
}
[Token(Token = "0x200005C")]
public class FPControl2 : MonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController cc;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float walkSpeed;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _theta;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _phi;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotSpeed;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _mx;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _my;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentWeaponIdx;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon _currentWeapon;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Weapon[] weapons;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x87E6F0", Offset = "0x87E6F0", VA = "0x87E6F0")]
	private void ChangeWeapon()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x87E7E0", Offset = "0x87E7E0", VA = "0x87E7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x87E8B4", Offset = "0x87E8B4", VA = "0x87E8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x87ED24", Offset = "0x87ED24", VA = "0x87ED24")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x87EEF4", Offset = "0x87EEF4", VA = "0x87EEF4")]
	public FPControl2()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AB30", Offset = "0x62AB30")]
public class FarCamera : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _relativePosition;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xAB0AA0", Offset = "0xAB0AA0", VA = "0xAB0AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAB0B90", Offset = "0xAB0B90", VA = "0xAB0B90")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xAB0C7C", Offset = "0xAB0C7C", VA = "0xAB0C7C")]
	public FarCamera()
	{
	}
}
[Token(Token = "0x200005E")]
public class SphereGun : Weapon
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem hitPS;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1372CA8", Offset = "0x1372CA8", VA = "0x1372CA8", Slot = "4")]
	protected override void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1372DFC", Offset = "0x1372DFC", VA = "0x1372DFC")]
	public SphereGun()
	{
	}
}
[Token(Token = "0x200005F")]
public class TunnelGun : Weapon
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem hitPS;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem shootPS;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x818FA0", Offset = "0x818FA0", VA = "0x818FA0", Slot = "4")]
	protected override void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x8191FC", Offset = "0x8191FC", VA = "0x8191FC")]
	public TunnelGun()
	{
	}
}
[Token(Token = "0x2000060")]
public abstract class Weapon : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject weaponBody;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IMBrush brush;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip equipAudio;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip shotAudio;

	[Token(Token = "0x60001D8")]
	protected abstract void DoShoot(DungeonControl2 dungeon, Vector3 from, Vector3 to);

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x99376C", Offset = "0x99376C", VA = "0x99376C")]
	public void Shoot(DungeonControl2 dungeon, Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x993890", Offset = "0x993890", VA = "0x993890")]
	public void OnEquip()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x993984", Offset = "0x993984", VA = "0x993984")]
	public void OnRemove()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x9939E4", Offset = "0x9939E4", VA = "0x9939E4")]
	protected Weapon()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62AB94", Offset = "0x62AB94")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateTriangleStrips;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x8347FC", Offset = "0x8347FC", VA = "0x8347FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x835510", Offset = "0x835510", VA = "0x835510")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x2000062")]
public class MeshCombineUtility
{
	[Token(Token = "0x2000351")]
	public struct MeshInstance
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subMeshIndex;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Matrix4x4 transform;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA5E834", Offset = "0xA5E834", VA = "0xA5E834")]
	public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA5F324", Offset = "0xA5F324", VA = "0xA5F324")]
	private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA5F404", Offset = "0xA5F404", VA = "0xA5F404")]
	private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xA5F63C", Offset = "0xA5F63C", VA = "0xA5F63C")]
	private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xA5F6C0", Offset = "0xA5F6C0", VA = "0xA5F6C0")]
	private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xA5F508", Offset = "0xA5F508", VA = "0xA5F508")]
	private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA5F744", Offset = "0xA5F744", VA = "0xA5F744")]
	public MeshCombineUtility()
	{
	}
}
[Token(Token = "0x2000063")]
public sealed class SRAnimators
{
	[Token(Token = "0x40002DA")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x939004", Offset = "0x939004", VA = "0x939004")]
	private SRAnimators()
	{
	}
}
[Token(Token = "0x2000064")]
public sealed class SRAudioMixers
{
	[Token(Token = "0x2000352")]
	public sealed class Mixer
	{
		[Token(Token = "0x20004EE")]
		public sealed class Parameters
		{
			[Token(Token = "0x4002099")]
			public const string MusicVolume = "MusicVolume";

			[Token(Token = "0x400209A")]
			public const string MasterVolume = "MasterVolume";

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x93901C", Offset = "0x93901C", VA = "0x93901C")]
			private Parameters()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		public sealed class Snapshots
		{
			[Token(Token = "0x400209B")]
			public const string Snapshot = "Snapshot";

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x939024", Offset = "0x939024", VA = "0x939024")]
			private Snapshots()
			{
			}
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x939014", Offset = "0x939014", VA = "0x939014")]
		private Mixer()
		{
		}
	}

	[Token(Token = "0x40002DB")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x93900C", Offset = "0x93900C", VA = "0x93900C")]
	private SRAudioMixers()
	{
	}
}
[Token(Token = "0x2000065")]
public sealed class SRInput
{
	[Token(Token = "0x40002DC")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly InputAxis Horizontal;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly InputAxis Vertical;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly InputAxis Fire1;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly InputAxis Fire2;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly InputAxis Fire3;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly InputAxis Jump;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly InputAxis Mouse_X;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly InputAxis Mouse_Y;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly InputAxis Mouse_ScrollWheel;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly InputAxis Submit;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly InputAxis Cancel;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static readonly InputAxis Oculus_GearVR_LThumbstickX;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly InputAxis Oculus_GearVR_LThumbstickY;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static readonly InputAxis Oculus_GearVR_RThumbstickX;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static readonly InputAxis Oculus_GearVR_RThumbstickY;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly InputAxis Oculus_GearVR_DpadX;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly InputAxis Oculus_GearVR_DpadY;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static readonly InputAxis Oculus_GearVR_LIndexTrigger;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static readonly InputAxis Oculus_GearVR_RIndexTrigger;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static readonly InputAxis Oculus_CrossPlatform_Button2;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static readonly InputAxis Oculus_CrossPlatform_Button4;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstick;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstick;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryIndexTrigger;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryIndexTrigger;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryHandTrigger;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryHandTrigger;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstickHorizontal;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static readonly InputAxis Oculus_CrossPlatform_PrimaryThumbstickVertical;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstickHorizontal;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static readonly InputAxis Oculus_CrossPlatform_SecondaryThumbstickVertical;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x93902C", Offset = "0x93902C", VA = "0x93902C")]
	private SRInput()
	{
	}
}
[Token(Token = "0x2000066")]
public sealed class SRLayerMask
{
	[Token(Token = "0x40002FC")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x40002FD")]
	public const int All = int.MaxValue;

	[Token(Token = "0x40002FE")]
	public const int None = 0;

	[Token(Token = "0x40002FF")]
	public const int Default = 1;

	[Token(Token = "0x4000300")]
	public const int TransparentFX = 2;

	[Token(Token = "0x4000301")]
	public const int Ignore_Raycast = 4;

	[Token(Token = "0x4000302")]
	public const int Water = 16;

	[Token(Token = "0x4000303")]
	public const int UI = 32;

	[Token(Token = "0x4000304")]
	public const int Character = 256;

	[Token(Token = "0x4000305")]
	public const int Floor = 512;

	[Token(Token = "0x4000306")]
	public const int StaticGeometry = 1024;

	[Token(Token = "0x4000307")]
	public const int HandCollider = 2048;

	[Token(Token = "0x4000308")]
	public const int Item = 4096;

	[Token(Token = "0x4000309")]
	public const int Player = 8192;

	[Token(Token = "0x400030A")]
	public const int CustomPostEffectIgnore = 16384;

	[Token(Token = "0x400030B")]
	public const int InventoryItem = 32768;

	[Token(Token = "0x400030C")]
	public const int DecalProxyGeometry = 65536;

	[Token(Token = "0x400030D")]
	public const int Celestial = 131072;

	[Token(Token = "0x400030E")]
	public const int PlayerCollider = 262144;

	[Token(Token = "0x400030F")]
	public const int OcclusionCollider = 524288;

	[Token(Token = "0x4000310")]
	public const int UnlitFX = 1048576;

	[Token(Token = "0x4000311")]
	public const int ScreenUI = 2097152;

	[Token(Token = "0x4000312")]
	public const int Character_Dead = 4194304;

	[Token(Token = "0x4000313")]
	public const int PlayerColliderTP = 8388608;

	[Token(Token = "0x4000314")]
	public const int DefaultNonBlock = 16777216;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9396D0", Offset = "0x9396D0", VA = "0x9396D0")]
	private SRLayerMask()
	{
	}
}
[Token(Token = "0x2000067")]
public sealed class SRLayers
{
	[Token(Token = "0x4000315")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<Layer> __all;

	[Token(Token = "0x17000025")]
	public static Layer Default
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x9396E0", Offset = "0x9396E0", VA = "0x9396E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public static Layer TransparentFX
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x9397B8", Offset = "0x9397B8", VA = "0x9397B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public static Layer Ignore_Raycast
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x939890", Offset = "0x939890", VA = "0x939890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static Layer Water
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x939968", Offset = "0x939968", VA = "0x939968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public static Layer UI
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x939A40", Offset = "0x939A40", VA = "0x939A40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public static Layer Character
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x939B18", Offset = "0x939B18", VA = "0x939B18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public static Layer Floor
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x939BF0", Offset = "0x939BF0", VA = "0x939BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public static Layer StaticGeometry
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x939CC8", Offset = "0x939CC8", VA = "0x939CC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public static Layer HandCollider
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x939DA0", Offset = "0x939DA0", VA = "0x939DA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public static Layer Item
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x939E78", Offset = "0x939E78", VA = "0x939E78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public static Layer Player
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x939F50", Offset = "0x939F50", VA = "0x939F50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public static Layer CustomPostEffectIgnore
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x93A028", Offset = "0x93A028", VA = "0x93A028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public static Layer InventoryItem
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x93A100", Offset = "0x93A100", VA = "0x93A100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public static Layer DecalProxyGeometry
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x93A1D8", Offset = "0x93A1D8", VA = "0x93A1D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000033")]
	public static Layer Celestial
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x93A2B0", Offset = "0x93A2B0", VA = "0x93A2B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public static Layer PlayerCollider
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x93A388", Offset = "0x93A388", VA = "0x93A388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public static Layer OcclusionCollider
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x93A460", Offset = "0x93A460", VA = "0x93A460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public static Layer UnlitFX
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x93A538", Offset = "0x93A538", VA = "0x93A538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public static Layer ScreenUI
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x93A610", Offset = "0x93A610", VA = "0x93A610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public static Layer Character_Dead
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x93A6E8", Offset = "0x93A6E8", VA = "0x93A6E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	public static Layer PlayerColliderTP
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x93A7C0", Offset = "0x93A7C0", VA = "0x93A7C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public static Layer DefaultNonBlock
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x93A898", Offset = "0x93A898", VA = "0x93A898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public static IList<Layer> All
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x93A970", Offset = "0x93A970", VA = "0x93A970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x9396D8", Offset = "0x9396D8", VA = "0x9396D8")]
	private SRLayers()
	{
	}
}
[Token(Token = "0x2000068")]
public sealed class SRResources
{
	[Token(Token = "0x2000353")]
	public sealed class Materials
	{
		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001AB")]
		public static Resource<Material> FacePicker
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0x940E74", Offset = "0x940E74", VA = "0x940E74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public static Resource<Material> StandardVertexColorHDRP
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0x940F8C", Offset = "0x940F8C", VA = "0x940F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public static Resource<Material> highlight_valid
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x9410A4", Offset = "0x9410A4", VA = "0x9410A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public static Resource<Material> highlight_bubble
		{
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0x9411BC", Offset = "0x9411BC", VA = "0x9411BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public static Resource<Material> EdgePicker
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x9412D4", Offset = "0x9412D4", VA = "0x9412D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public static Resource<Material> highlight
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0x9413EC", Offset = "0x9413EC", VA = "0x9413EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public static Resource<Material> InvisibleFace
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x941504", Offset = "0x941504", VA = "0x941504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public static Resource<Material> ProBuilderDefault
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0x94161C", Offset = "0x94161C", VA = "0x94161C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public static Resource<Material> highlight_invalid
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x941734", Offset = "0x941734", VA = "0x941734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public static Resource<Material> StandardVertexColorLWRP
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x94184C", Offset = "0x94184C", VA = "0x94184C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public static Resource<Material> UnlitVertexColor
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x941964", Offset = "0x941964", VA = "0x941964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public static Resource<Material> lambert1
		{
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x941A7C", Offset = "0x941A7C", VA = "0x941A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public static Resource<Material> VertexPicker
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x941B94", Offset = "0x941B94", VA = "0x941B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public static Resource<Material> NoDraw
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x941CAC", Offset = "0x941CAC", VA = "0x941CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public static Resource<Material> Trigger
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x941DC4", Offset = "0x941DC4", VA = "0x941DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public static Resource<Material> Collider
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x941EDC", Offset = "0x941EDC", VA = "0x941EDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x940E6C", Offset = "0x940E6C", VA = "0x940E6C")]
		private Materials()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x941FF4", Offset = "0x941FF4", VA = "0x941FF4")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x93D2E0", Offset = "0x93D2E0", VA = "0x93D2E0")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001B7B")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B7C")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x94205C", Offset = "0x94205C", VA = "0x94205C")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x942104", Offset = "0x942104", VA = "0x942104")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000354")]
	public sealed class Text
	{
		[Token(Token = "0x20004F0")]
		public sealed class italian
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000278")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0x946B5C", Offset = "0x946B5C", VA = "0x946B5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000279")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001F7C")]
				[Address(RVA = "0x946C74", Offset = "0x946C74", VA = "0x946C74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001F7D")]
				[Address(RVA = "0x946D8C", Offset = "0x946D8C", VA = "0x946D8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x946B54", Offset = "0x946B54", VA = "0x946B54")]
			private italian()
			{
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x946EA4", Offset = "0x946EA4", VA = "0x946EA4")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x944344", Offset = "0x944344", VA = "0x944344")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001F80")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F81")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x946F0C", Offset = "0x946F0C", VA = "0x946F0C")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x946FB4", Offset = "0x946FB4", VA = "0x946FB4")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		public sealed class russian
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700027B")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001F86")]
				[Address(RVA = "0x947F6C", Offset = "0x947F6C", VA = "0x947F6C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001F87")]
				[Address(RVA = "0x948084", Offset = "0x948084", VA = "0x948084")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027D")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001F88")]
				[Address(RVA = "0x94819C", Offset = "0x94819C", VA = "0x94819C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x947F64", Offset = "0x947F64", VA = "0x947F64")]
			private russian()
			{
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x9482B4", Offset = "0x9482B4", VA = "0x9482B4")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x944490", Offset = "0x944490", VA = "0x944490")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001F8B")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F8C")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x94831C", Offset = "0x94831C", VA = "0x94831C")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x9483C4", Offset = "0x9483C4", VA = "0x9483C4")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F2")]
		public sealed class spanish
		{
			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700027E")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001F91")]
				[Address(RVA = "0x94861C", Offset = "0x94861C", VA = "0x94861C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027F")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001F92")]
				[Address(RVA = "0x948734", Offset = "0x948734", VA = "0x948734")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001F93")]
				[Address(RVA = "0x94884C", Offset = "0x94884C", VA = "0x94884C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x948614", Offset = "0x948614", VA = "0x948614")]
			private spanish()
			{
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x948964", Offset = "0x948964", VA = "0x948964")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x9445DC", Offset = "0x9445DC", VA = "0x9445DC")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001F96")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F97")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x9489CC", Offset = "0x9489CC", VA = "0x9489CC")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x948A74", Offset = "0x948A74", VA = "0x948A74")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		public sealed class japanese
		{
			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000281")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001F9C")]
				[Address(RVA = "0x94720C", Offset = "0x94720C", VA = "0x94720C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001F9D")]
				[Address(RVA = "0x947324", Offset = "0x947324", VA = "0x947324")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001F9E")]
				[Address(RVA = "0x94743C", Offset = "0x94743C", VA = "0x94743C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x947204", Offset = "0x947204", VA = "0x947204")]
			private japanese()
			{
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x947554", Offset = "0x947554", VA = "0x947554")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x944728", Offset = "0x944728", VA = "0x944728")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FA1")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FA2")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x9475BC", Offset = "0x9475BC", VA = "0x9475BC")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x947664", Offset = "0x947664", VA = "0x947664")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		public sealed class korean
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000284")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001FA7")]
				[Address(RVA = "0x9478BC", Offset = "0x9478BC", VA = "0x9478BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001FA8")]
				[Address(RVA = "0x9479D4", Offset = "0x9479D4", VA = "0x9479D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001FA9")]
				[Address(RVA = "0x947AEC", Offset = "0x947AEC", VA = "0x947AEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x9478B4", Offset = "0x9478B4", VA = "0x9478B4")]
			private korean()
			{
			}

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x947C04", Offset = "0x947C04", VA = "0x947C04")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x944874", Offset = "0x944874", VA = "0x944874")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FAC")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FAD")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x947C6C", Offset = "0x947C6C", VA = "0x947C6C")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x947D14", Offset = "0x947D14", VA = "0x947D14")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		public sealed class german
		{
			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000287")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001FB2")]
				[Address(RVA = "0x9464AC", Offset = "0x9464AC", VA = "0x9464AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001FB3")]
				[Address(RVA = "0x9465C4", Offset = "0x9465C4", VA = "0x9465C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001FB4")]
				[Address(RVA = "0x9466DC", Offset = "0x9466DC", VA = "0x9466DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x9464A4", Offset = "0x9464A4", VA = "0x9464A4")]
			private german()
			{
			}

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x9467F4", Offset = "0x9467F4", VA = "0x9467F4")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x9449C0", Offset = "0x9449C0", VA = "0x9449C0")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FB7")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FB8")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x94685C", Offset = "0x94685C", VA = "0x94685C")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x946904", Offset = "0x946904", VA = "0x946904")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		public sealed class french
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700028A")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001FBD")]
				[Address(RVA = "0x945DFC", Offset = "0x945DFC", VA = "0x945DFC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001FBE")]
				[Address(RVA = "0x945F14", Offset = "0x945F14", VA = "0x945F14")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001FBF")]
				[Address(RVA = "0x94602C", Offset = "0x94602C", VA = "0x94602C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x945DF4", Offset = "0x945DF4", VA = "0x945DF4")]
			private french()
			{
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x946144", Offset = "0x946144", VA = "0x946144")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x944B0C", Offset = "0x944B0C", VA = "0x944B0C")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FC2")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FC3")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x9461AC", Offset = "0x9461AC", VA = "0x9461AC")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x946254", Offset = "0x946254", VA = "0x946254")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		public sealed class english
		{
			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x1700028D")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001FC8")]
				[Address(RVA = "0x94574C", Offset = "0x94574C", VA = "0x94574C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0x945864", Offset = "0x945864", VA = "0x945864")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028F")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001FCA")]
				[Address(RVA = "0x94597C", Offset = "0x94597C", VA = "0x94597C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x945744", Offset = "0x945744", VA = "0x945744")]
			private english()
			{
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x945A94", Offset = "0x945A94", VA = "0x945A94")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x944C58", Offset = "0x944C58", VA = "0x944C58")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FCD")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FCE")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x945AFC", Offset = "0x945AFC", VA = "0x945AFC")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x945BA4", Offset = "0x945BA4", VA = "0x945BA4")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004F8")]
		public sealed class chinese
		{
			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000290")]
			public static Resource<TextAsset> items
			{
				[Token(Token = "0x6001FD3")]
				[Address(RVA = "0x94509C", Offset = "0x94509C", VA = "0x94509C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000291")]
			public static Resource<TextAsset> textlogs
			{
				[Token(Token = "0x6001FD4")]
				[Address(RVA = "0x9451B4", Offset = "0x9451B4", VA = "0x9451B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			public static Resource<TextAsset> main
			{
				[Token(Token = "0x6001FD5")]
				[Address(RVA = "0x9452CC", Offset = "0x9452CC", VA = "0x9452CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x945094", Offset = "0x945094", VA = "0x945094")]
			private chinese()
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x9453E4", Offset = "0x9453E4", VA = "0x9453E4")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x944DA4", Offset = "0x944DA4", VA = "0x944DA4")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FD8")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FD9")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x94544C", Offset = "0x94544C", VA = "0x94544C")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x9454F4", Offset = "0x9454F4", VA = "0x9454F4")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x9442D4", Offset = "0x9442D4", VA = "0x9442D4")]
		private Text()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x9442DC", Offset = "0x9442DC", VA = "0x9442DC")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x93D42C", Offset = "0x93D42C", VA = "0x93D42C")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001B83")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B84")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x944EF0", Offset = "0x944EF0", VA = "0x944EF0")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x944F98", Offset = "0x944F98", VA = "0x944F98")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000355")]
	public sealed class Shaders
	{
		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001BB")]
		public static Resource<Shader> TMP_SDFSurfaceMobile
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x942BEC", Offset = "0x942BEC", VA = "0x942BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public static Resource<TextAsset> TMPro_Properties
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x942D04", Offset = "0x942D04", VA = "0x942D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public static Resource<Shader> TMP_BitmapCustomAtlas
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x942E1C", Offset = "0x942E1C", VA = "0x942E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public static Resource<Shader> TMP_SDFMobile_Masking
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x942F34", Offset = "0x942F34", VA = "0x942F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public static Resource<Shader> TMP_BitmapMobile
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x94304C", Offset = "0x94304C", VA = "0x94304C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public static Resource<Shader> TMP_SDF_Overlay
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x943164", Offset = "0x943164", VA = "0x943164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public static Resource<TextAsset> TMPro_Surface
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x94327C", Offset = "0x94327C", VA = "0x94327C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public static Resource<Shader> TMP_SDFMobile_Overlay
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x943394", Offset = "0x943394", VA = "0x943394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public static Resource<Shader> TMP_Bitmap
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x9434AC", Offset = "0x9434AC", VA = "0x9434AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static Resource<TextAsset> TMPro
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x9435C4", Offset = "0x9435C4", VA = "0x9435C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public static Resource<Shader> TMP_SDF
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x9436DC", Offset = "0x9436DC", VA = "0x9436DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public static Resource<Shader> TMP_SDFMobile
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x9437F4", Offset = "0x9437F4", VA = "0x9437F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public static Resource<Shader> TMP_Sprite
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x94390C", Offset = "0x94390C", VA = "0x94390C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public static Resource<Shader> TMP_SDFSurface
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x943A24", Offset = "0x943A24", VA = "0x943A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x942BE4", Offset = "0x942BE4", VA = "0x942BE4")]
		private Shaders()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x943B3C", Offset = "0x943B3C", VA = "0x943B3C")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x93D74C", Offset = "0x93D74C", VA = "0x93D74C")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001B99")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x943BA4", Offset = "0x943BA4", VA = "0x943BA4")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x943C4C", Offset = "0x943C4C", VA = "0x943C4C")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000356")]
	public sealed class Fonts_Materials
	{
		[Token(Token = "0x20004F9")]
		public sealed class arial
		{
			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000293")]
			public static Resource<Font> arialbd
			{
				[Token(Token = "0x6001FDE")]
				[Address(RVA = "0x93FE24", Offset = "0x93FE24", VA = "0x93FE24")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			public static Resource<Font> ariali
			{
				[Token(Token = "0x6001FDF")]
				[Address(RVA = "0x93FF3C", Offset = "0x93FF3C", VA = "0x93FF3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000295")]
			public static Resource<Font> ariblk
			{
				[Token(Token = "0x6001FE0")]
				[Address(RVA = "0x940054", Offset = "0x940054", VA = "0x940054")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			public static Resource<Font> arialbi
			{
				[Token(Token = "0x6001FE1")]
				[Address(RVA = "0x94016C", Offset = "0x94016C", VA = "0x94016C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			public static Resource<Font> _arial
			{
				[Token(Token = "0x6001FE2")]
				[Address(RVA = "0x940284", Offset = "0x940284", VA = "0x940284")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x93FE1C", Offset = "0x93FE1C", VA = "0x93FE1C")]
			private arial()
			{
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x94039C", Offset = "0x94039C", VA = "0x94039C")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x93F6F4", Offset = "0x93F6F4", VA = "0x93F6F4")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FE5")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FE6")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x940404", Offset = "0x940404", VA = "0x940404")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x9404AC", Offset = "0x9404AC", VA = "0x9404AC")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x20004FA")]
		public sealed class extra
		{
			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IList<IResource> __ts_internal_resources;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IList<IResource> __ts_internal_recursiveLookupCache;

			[Token(Token = "0x17000298")]
			public static Resource<Font> MicroHei
			{
				[Token(Token = "0x6001FEB")]
				[Address(RVA = "0x9407C4", Offset = "0x9407C4", VA = "0x9407C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			public static Resource<Font> Dotum
			{
				[Token(Token = "0x6001FEC")]
				[Address(RVA = "0x9408DC", Offset = "0x9408DC", VA = "0x9408DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			public static Resource<Font> _03SmartFontUI
			{
				[Token(Token = "0x6001FED")]
				[Address(RVA = "0x9409F4", Offset = "0x9409F4", VA = "0x9409F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x9407BC", Offset = "0x9407BC", VA = "0x9407BC")]
			private extra()
			{
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x940B0C", Offset = "0x940B0C", VA = "0x940B0C")]
			public static IList<IResource> GetContents()
			{
				return null;
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x93F840", Offset = "0x93F840", VA = "0x93F840")]
			public static IList<IResource> GetContentsRecursive()
			{
				return null;
			}

			[Token(Token = "0x6001FF0")]
			public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FF1")]
			public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
			{
				return null;
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x940B74", Offset = "0x940B74", VA = "0x940B74")]
			public static void UnloadAll()
			{
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x940C1C", Offset = "0x940C1C", VA = "0x940C1C")]
			private void UnloadAllRecursive()
			{
			}
		}

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001C9")]
		public static Resource<Material> HalisGRCredits
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x93EEE4", Offset = "0x93EEE4", VA = "0x93EEE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public static Resource<Material> LiberationSans_SDF_Drop_Shadow
		{
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x93EFFC", Offset = "0x93EFFC", VA = "0x93EFFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public static Resource<Font> LiberationSans
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x93F114", Offset = "0x93F114", VA = "0x93F114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public static Resource<Material> HullSign
		{
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x93F22C", Offset = "0x93F22C", VA = "0x93F22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public static Resource<Material> LiberationSans_SDF_Outline
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x93F344", Offset = "0x93F344", VA = "0x93F344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public static Resource<Material> HullSignHalis
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x93F45C", Offset = "0x93F45C", VA = "0x93F45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public static Resource<Font> HalisGRMedium
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x93F574", Offset = "0x93F574", VA = "0x93F574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x93EEDC", Offset = "0x93EEDC", VA = "0x93EEDC")]
		private Fonts_Materials()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x93F68C", Offset = "0x93F68C", VA = "0x93F68C")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x93D898", Offset = "0x93D898", VA = "0x93D898")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001BA8")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BA9")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x93F98C", Offset = "0x93F98C", VA = "0x93F98C")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x93FA34", Offset = "0x93FA34", VA = "0x93FA34")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000357")]
	public sealed class F3DPoolManagerCache
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001D0")]
		public static Resource<F3DPoolManagerDB> WeaponRange
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x93E9AC", Offset = "0x93E9AC", VA = "0x93E9AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public static Resource<F3DPoolManagerDB> MissleDatabase
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x93EAC4", Offset = "0x93EAC4", VA = "0x93EAC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x93E9A4", Offset = "0x93E9A4", VA = "0x93E9A4")]
		private F3DPoolManagerCache()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x93EBDC", Offset = "0x93EBDC", VA = "0x93EBDC")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x93DA4C", Offset = "0x93DA4C", VA = "0x93DA4C")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001BB2")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BB3")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x93EC44", Offset = "0x93EC44", VA = "0x93EC44")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x93ECEC", Offset = "0x93ECEC", VA = "0x93ECEC")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000358")]
	public sealed class Textures
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001D2")]
		public static Resource<Texture2D> GridBox_Default
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x948CCC", Offset = "0x948CCC", VA = "0x948CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x948CC4", Offset = "0x948CC4", VA = "0x948CC4")]
		private Textures()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x948DE4", Offset = "0x948DE4", VA = "0x948DE4")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x93DB98", Offset = "0x93DB98", VA = "0x93DB98")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001BBB")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x948E4C", Offset = "0x948E4C", VA = "0x948E4C")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x948EF4", Offset = "0x948EF4", VA = "0x948EF4")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x2000359")]
	public sealed class Prefabs
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IList<IResource> __ts_internal_resources;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IList<IResource> __ts_internal_recursiveLookupCache;

		[Token(Token = "0x170001D3")]
		public static PrefabResource BlobShadow
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x94283C", Offset = "0x94283C", VA = "0x94283C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x942834", Offset = "0x942834", VA = "0x942834")]
		private Prefabs()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x942954", Offset = "0x942954", VA = "0x942954")]
		public static IList<IResource> GetContents()
		{
			return null;
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x93DCE4", Offset = "0x93DCE4", VA = "0x93DCE4")]
		public static IList<IResource> GetContentsRecursive()
		{
			return null;
		}

		[Token(Token = "0x6001BC4")]
		public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x9429BC", Offset = "0x9429BC", VA = "0x9429BC")]
		public static void UnloadAll()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x942A64", Offset = "0x942A64", VA = "0x942A64")]
		private void UnloadAllRecursive()
		{
		}
	}

	[Token(Token = "0x4000317")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<IResource> __ts_internal_resources;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IList<IResource> __ts_internal_recursiveLookupCache;

	[Token(Token = "0x1700003C")]
	public static Resource<Texture2D> iconcylinder
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x93B238", Offset = "0x93B238", VA = "0x93B238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public static Resource<Shader> TexturePacker
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x93B350", Offset = "0x93B350", VA = "0x93B350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public static Resource<Texture2D> iconslope
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x93B468", Offset = "0x93B468", VA = "0x93B468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public static Resource<TextAsset> LineBreaking_Leading_Characters
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x93B580", Offset = "0x93B580", VA = "0x93B580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public static Resource<Mesh> bone
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x93B698", Offset = "0x93B698", VA = "0x93B698")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public static Resource<Shader> MaskBlend
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x93B7B0", Offset = "0x93B7B0", VA = "0x93B7B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public static Resource<Texture2D> iconpyramid
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x93B8C8", Offset = "0x93B8C8", VA = "0x93B8C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public static Resource<Texture2D> iconsphere
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x93B9E0", Offset = "0x93B9E0", VA = "0x93B9E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public static Resource<Texture2D> icondisk
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x93BAF8", Offset = "0x93BAF8", VA = "0x93BAF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public static Resource<Shader> Blend
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x93BC10", Offset = "0x93BC10", VA = "0x93BC10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public static Resource<Shader> BlendCache
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x93BD28", Offset = "0x93BD28", VA = "0x93BD28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public static Resource<Shader> Mask
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x93BE40", Offset = "0x93BE40", VA = "0x93BE40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public static Resource<Mesh> globalControl
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x93BF58", Offset = "0x93BF58", VA = "0x93BF58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public static Resource<Texture2D> iconplane
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x93C070", Offset = "0x93C070", VA = "0x93C070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004A")]
	public static Resource<Texture2D> icontorus
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x93C188", Offset = "0x93C188", VA = "0x93C188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public static Resource<Mesh> arrowControl
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x93C2A0", Offset = "0x93C2A0", VA = "0x93C2A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004C")]
	public static Resource<TextAsset> LineBreaking_Following_Characters
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x93C3B8", Offset = "0x93C3B8", VA = "0x93C3B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public static Resource<Shader> ProcessOnly
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x93C4D0", Offset = "0x93C4D0", VA = "0x93C4D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public static Resource<Shader> Transparent
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x93C5E8", Offset = "0x93C5E8", VA = "0x93C5E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public static Resource<Shader> DepthMask
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x93C700", Offset = "0x93C700", VA = "0x93C700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public static Resource<TextAsset> Common
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x93C818", Offset = "0x93C818", VA = "0x93C818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public static Resource<Shader> DepthMaskBlend
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x93C930", Offset = "0x93C930", VA = "0x93C930")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public static Resource<Shader> Base
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x93CA48", Offset = "0x93CA48", VA = "0x93CA48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public static Resource<Texture2D> iconcube
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x93CB60", Offset = "0x93CB60", VA = "0x93CB60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public static Resource<Shader> Diffuse
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x93CC78", Offset = "0x93CC78", VA = "0x93CC78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public static Resource<Texture2D> iconcapsule
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x93CD90", Offset = "0x93CD90", VA = "0x93CD90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public static Resource<Shader> Cutout
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x93CEA8", Offset = "0x93CEA8", VA = "0x93CEA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x93B230", Offset = "0x93B230", VA = "0x93B230")]
	private SRResources()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x93CFC0", Offset = "0x93CFC0", VA = "0x93CFC0")]
	public static IList<IResource> GetContents()
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x93D028", Offset = "0x93D028", VA = "0x93D028")]
	public static IList<IResource> GetContentsRecursive()
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	public static List<Resource<TResource>> GetContents<TResource>() where TResource : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	public static List<Resource<TResource>> GetContentsRecursive<TResource>() where TResource : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x93DE30", Offset = "0x93DE30", VA = "0x93DE30")]
	public static void UnloadAll()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x93DED8", Offset = "0x93DED8", VA = "0x93DED8")]
	private void UnloadAllRecursive()
	{
	}
}
[Token(Token = "0x2000069")]
public sealed class SRScenes
{
	[Token(Token = "0x400031A")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<TypeSafe.Scene> __all;

	[Token(Token = "0x17000057")]
	public static TypeSafe.Scene init
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x949084", Offset = "0x949084", VA = "0x949084")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public static TypeSafe.Scene disclaimer
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x94915C", Offset = "0x94915C", VA = "0x94915C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public static TypeSafe.Scene intro
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x949234", Offset = "0x949234", VA = "0x949234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public static TypeSafe.Scene main
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x94930C", Offset = "0x94930C", VA = "0x94930C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public static TypeSafe.Scene loading
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x9493E4", Offset = "0x9493E4", VA = "0x9493E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public static TypeSafe.Scene ending
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x9494BC", Offset = "0x9494BC", VA = "0x9494BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public static TypeSafe.Scene errorMessage
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x949594", Offset = "0x949594", VA = "0x949594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public static IList<TypeSafe.Scene> All
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x94966C", Offset = "0x94966C", VA = "0x94966C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x94907C", Offset = "0x94907C", VA = "0x94907C")]
	private SRScenes()
	{
	}
}
[Token(Token = "0x200006A")]
public sealed class SRSortingLayers
{
	[Token(Token = "0x400031C")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<TypeSafe.SortingLayer> __all;

	[Token(Token = "0x1700005F")]
	public static TypeSafe.SortingLayer Default
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x949A08", Offset = "0x949A08", VA = "0x949A08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public static TypeSafe.SortingLayer Crosshair
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x949AE0", Offset = "0x949AE0", VA = "0x949AE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public static IList<TypeSafe.SortingLayer> All
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x949BB8", Offset = "0x949BB8", VA = "0x949BB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x949A00", Offset = "0x949A00", VA = "0x949A00")]
	private SRSortingLayers()
	{
	}
}
[Token(Token = "0x200006B")]
public sealed class SRTags
{
	[Token(Token = "0x400031E")]
	private const string _tsInternal = "1.3.2-Unity5";

	[Token(Token = "0x400031F")]
	public const string Untagged = "Untagged";

	[Token(Token = "0x4000320")]
	public const string Respawn = "Respawn";

	[Token(Token = "0x4000321")]
	public const string Finish = "Finish";

	[Token(Token = "0x4000322")]
	public const string EditorOnly = "EditorOnly";

	[Token(Token = "0x4000323")]
	public const string MainCamera = "MainCamera";

	[Token(Token = "0x4000324")]
	public const string Player = "Player";

	[Token(Token = "0x4000325")]
	public const string GameController = "GameController";

	[Token(Token = "0x4000326")]
	public const string Floor = "Floor";

	[Token(Token = "0x4000327")]
	public const string Ceiling = "Ceiling";

	[Token(Token = "0x4000328")]
	public const string Wall = "Wall";

	[Token(Token = "0x4000329")]
	public const string NoBake = "NoBake";

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IList<string> __all;

	[Token(Token = "0x17000062")]
	public static IList<string> All
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x949DA0", Offset = "0x949DA0", VA = "0x949DA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x949D98", Offset = "0x949D98", VA = "0x949D98")]
	private SRTags()
	{
	}
}
[Token(Token = "0x200006C")]
public class InfoBubble : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WobbleAxis;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WobbleFrequency;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WobbleAmplitude;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackTarget;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startOffsetTarget;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x9B4628", Offset = "0x9B4628", VA = "0x9B4628")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x9B470C", Offset = "0x9B470C", VA = "0x9B470C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x9B4858", Offset = "0x9B4858", VA = "0x9B4858")]
	public InfoBubble()
	{
	}
}
[Token(Token = "0x200006D")]
public class RuntimeDecalCombiner
{
	[Token(Token = "0x600023C")]
	[Address(RVA = "0x9350B0", Offset = "0x9350B0", VA = "0x9350B0")]
	public static List<GameObject> Combine(IList<EasyDecal> decals)
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x93540C", Offset = "0x93540C", VA = "0x93540C")]
	private static List<GameObject> Combine(Dictionary<DecalTextureAtlas, List<EasyDecal>> mappings)
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x9355EC", Offset = "0x9355EC", VA = "0x9355EC")]
	private static GameObject Combine(IList<EasyDecal> decals, DecalTextureAtlas atlas)
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x935AAC", Offset = "0x935AAC", VA = "0x935AAC")]
	public RuntimeDecalCombiner()
	{
	}
}
[Token(Token = "0x200006E")]
public class SparksExecutioner : MonoBehaviour
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x136D23C", Offset = "0x136D23C", VA = "0x136D23C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x136D294", Offset = "0x136D294", VA = "0x136D294")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x136D310", Offset = "0x136D310", VA = "0x136D310")]
	public SparksExecutioner()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62ABCC", Offset = "0x62ABCC")]
public class PicoEyeSecondaryCamera : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pvr_UnitySDKEye mainEye;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera eyeCamera;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x83E3CC", Offset = "0x83E3CC", VA = "0x83E3CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x83E42C", Offset = "0x83E42C", VA = "0x83E42C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x83E448", Offset = "0x83E448", VA = "0x83E448")]
	public void EyeRender(RenderTexture targetTexture, float fov, float aspect)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x83E4AC", Offset = "0x83E4AC", VA = "0x83E4AC")]
	public PicoEyeSecondaryCamera()
	{
	}
}
[Token(Token = "0x2000070")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x957740", Offset = "0x957740", VA = "0x957740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x9577A0", Offset = "0x9577A0", VA = "0x9577A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x957800", Offset = "0x957800", VA = "0x957800")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x9579D8", Offset = "0x9579D8", VA = "0x9579D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9579E4", Offset = "0x9579E4", VA = "0x9579E4")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x957A64", Offset = "0x957A64", VA = "0x957A64")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x957C44", Offset = "0x957C44", VA = "0x957C44")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x957E24", Offset = "0x957E24", VA = "0x957E24")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x957F4C", Offset = "0x957F4C", VA = "0x957F4C")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x958074", Offset = "0x958074", VA = "0x958074")]
	public void UnLock()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x95820C", Offset = "0x95820C", VA = "0x95820C")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x958508", Offset = "0x958508", VA = "0x958508")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x957930", Offset = "0x957930", VA = "0x957930")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x957EA4", Offset = "0x957EA4", VA = "0x957EA4")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x957FCC", Offset = "0x957FCC", VA = "0x957FCC")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x958648", Offset = "0x958648", VA = "0x958648")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x958424", Offset = "0x958424", VA = "0x958424")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x95815C", Offset = "0x95815C", VA = "0x95815C")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x957D74", Offset = "0x957D74", VA = "0x957D74")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x957B94", Offset = "0x957B94", VA = "0x957B94")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x957878", Offset = "0x957878", VA = "0x957878")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x958700", Offset = "0x958700", VA = "0x958700")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x958F48", Offset = "0x958F48", VA = "0x958F48")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x9595A4", Offset = "0x9595A4", VA = "0x9595A4")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x959850", Offset = "0x959850", VA = "0x959850")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x959AFC", Offset = "0x959AFC", VA = "0x959AFC")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x959DA8", Offset = "0x959DA8", VA = "0x959DA8")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x95A2F0", Offset = "0x95A2F0", VA = "0x95A2F0")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x95A8B0", Offset = "0x95A8B0", VA = "0x95A8B0")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x95AB5C", Offset = "0x95AB5C", VA = "0x95AB5C")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x95AC14", Offset = "0x95AC14", VA = "0x95AC14")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x2000071")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001A19")]
		Right,
		[Token(Token = "0x4001A1A")]
		Left
	}

	[Token(Token = "0x200035B")]
	public enum GazeType
	{
		[Token(Token = "0x4001A1C")]
		Never,
		[Token(Token = "0x4001A1D")]
		DuringMotion,
		[Token(Token = "0x4001A1E")]
		Always
	}

	[Token(Token = "0x200035C")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001A20")]
		Controller,
		[Token(Token = "0x4001A21")]
		Wrist,
		[Token(Token = "0x4001A22")]
		Elbow,
		[Token(Token = "0x4001A23")]
		Shoulder
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F330", Offset = "0x62F330")]
	public float ElbowHeight;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F34C", Offset = "0x62F34C")]
	public float ElbowDepth;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F368", Offset = "0x62F368")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F380", Offset = "0x62F380")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F390", Offset = "0x62F390")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3A0", Offset = "0x62F3A0")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3B0", Offset = "0x62F3B0")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3C0", Offset = "0x62F3C0")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3D0", Offset = "0x62F3D0")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3E0", Offset = "0x62F3E0")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F3F0", Offset = "0x62F3F0")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000063")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xCE451C", Offset = "0xCE451C", VA = "0xCE451C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638220", Offset = "0x638220")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xCE4570", Offset = "0xCE4570", VA = "0xCE4570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638230", Offset = "0x638230")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xCE45E0", Offset = "0xCE45E0", VA = "0xCE45E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638240", Offset = "0x638240")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xCE4634", Offset = "0xCE4634", VA = "0xCE4634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638250", Offset = "0x638250")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xCE46A8", Offset = "0xCE46A8", VA = "0xCE46A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638260", Offset = "0x638260")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xCE46FC", Offset = "0xCE46FC", VA = "0xCE46FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638270", Offset = "0x638270")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xCE476C", Offset = "0xCE476C", VA = "0xCE476C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638280", Offset = "0x638280")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xCE47C0", Offset = "0xCE47C0", VA = "0xCE47C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638290", Offset = "0x638290")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xCE4834", Offset = "0xCE4834", VA = "0xCE4834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382A0", Offset = "0x6382A0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xCE4888", Offset = "0xCE4888", VA = "0xCE4888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382B0", Offset = "0x6382B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xCE48F8", Offset = "0xCE48F8", VA = "0xCE48F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382C0", Offset = "0x6382C0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xCE494C", Offset = "0xCE494C", VA = "0xCE494C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382D0", Offset = "0x6382D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xCE49C0", Offset = "0xCE49C0", VA = "0xCE49C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382E0", Offset = "0x6382E0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xCE4A14", Offset = "0xCE4A14", VA = "0xCE4A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6382F0", Offset = "0x6382F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xCE4A84", Offset = "0xCE4A84", VA = "0xCE4A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638300", Offset = "0x638300")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xCE4AD8", Offset = "0xCE4AD8", VA = "0xCE4AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638310", Offset = "0x638310")]
		set
		{
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xCE1E68", Offset = "0xCE1E68", VA = "0xCE1E68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xCE2354", Offset = "0xCE2354", VA = "0xCE2354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xCE23C4", Offset = "0xCE23C4", VA = "0xCE23C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xCE28B0", Offset = "0xCE28B0", VA = "0xCE28B0")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xCE2958", Offset = "0xCE2958", VA = "0xCE2958")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xCE295C", Offset = "0xCE295C", VA = "0xCE295C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xCE28B4", Offset = "0xCE28B4", VA = "0xCE28B4")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xCE29BC", Offset = "0xCE29BC", VA = "0xCE29BC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xCE2B40", Offset = "0xCE2B40", VA = "0xCE2B40")]
	private void ShowController()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xCE2CA0", Offset = "0xCE2CA0", VA = "0xCE2CA0")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xCE2D74", Offset = "0xCE2D74", VA = "0xCE2D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xCE2960", Offset = "0xCE2960", VA = "0xCE2960")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xCE2F78", Offset = "0xCE2F78", VA = "0xCE2F78")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xCE2FF4", Offset = "0xCE2FF4", VA = "0xCE2FF4")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xCE3078", Offset = "0xCE3078", VA = "0xCE3078")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xCE4338", Offset = "0xCE4338", VA = "0xCE4338")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xCE31C8", Offset = "0xCE31C8", VA = "0xCE31C8")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xCE31D8", Offset = "0xCE31D8", VA = "0xCE31D8")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xCE36B4", Offset = "0xCE36B4", VA = "0xCE36B4")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xCE4B4C", Offset = "0xCE4B4C", VA = "0xCE4B4C")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000072")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xCE4BC0", Offset = "0xCE4BC0", VA = "0xCE4BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xCE4F28", Offset = "0xCE4F28", VA = "0xCE4F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xCE5214", Offset = "0xCE5214", VA = "0xCE5214")]
	private void Update()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xCE6BAC", Offset = "0xCE6BAC", VA = "0xCE6BAC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xCE6C5C", Offset = "0xCE6C5C", VA = "0xCE6C5C")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xCE6D0C", Offset = "0xCE6D0C", VA = "0xCE6D0C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xCE6DA4", Offset = "0xCE6DA4", VA = "0xCE6DA4")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xCE6DA8", Offset = "0xCE6DA8", VA = "0xCE6DA8")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000073")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000292")]
	[Address(RVA = "0xCE6DB8", Offset = "0xCE6DB8", VA = "0xCE6DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xCE6FF0", Offset = "0xCE6FF0", VA = "0xCE6FF0")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xCE7090", Offset = "0xCE7090", VA = "0xCE7090")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xCE7130", Offset = "0xCE7130", VA = "0xCE7130")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xCE71D0", Offset = "0xCE71D0", VA = "0xCE71D0")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xCE7270", Offset = "0xCE7270", VA = "0xCE7270")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xCE7310", Offset = "0xCE7310", VA = "0xCE7310")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000074")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E818", Offset = "0x62E818")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xCE9240", Offset = "0xCE9240", VA = "0xCE9240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xCE92A8", Offset = "0xCE92A8", VA = "0xCE92A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xCE8138", Offset = "0xCE8138", VA = "0xCE8138")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xCE8E84", Offset = "0xCE8E84", VA = "0xCE8E84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xCE8E88", Offset = "0xCE8E88", VA = "0xCE8E88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xCE9248", Offset = "0xCE9248", VA = "0xCE9248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000376")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000377")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000378")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x4000379")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xCE7318", Offset = "0xCE7318", VA = "0xCE7318")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xCE7484", Offset = "0xCE7484", VA = "0xCE7484")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xCE757C", Offset = "0xCE757C", VA = "0xCE757C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xCE780C", Offset = "0xCE780C", VA = "0xCE780C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xCE7A04", Offset = "0xCE7A04", VA = "0xCE7A04")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xCE7C30", Offset = "0xCE7C30", VA = "0xCE7C30")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xCE7FD4", Offset = "0xCE7FD4", VA = "0xCE7FD4")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xCE7588", Offset = "0xCE7588", VA = "0xCE7588")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xCE7D1C", Offset = "0xCE7D1C", VA = "0xCE7D1C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xCE7BA4", Offset = "0xCE7BA4", VA = "0xCE7BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638320", Offset = "0x638320")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xCE8164", Offset = "0xCE8164", VA = "0xCE8164")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xCE87B8", Offset = "0xCE87B8", VA = "0xCE87B8")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xCE8414", Offset = "0xCE8414", VA = "0xCE8414")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xCE8BCC", Offset = "0xCE8BCC", VA = "0xCE8BCC")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xCE8CD8", Offset = "0xCE8CD8", VA = "0xCE8CD8")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xCE8DE4", Offset = "0xCE8DE4", VA = "0xCE8DE4")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000075")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xCE92B0", Offset = "0xCE92B0", VA = "0xCE92B0")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xCE9704", Offset = "0xCE9704", VA = "0xCE9704")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xCEA1A4", Offset = "0xCEA1A4", VA = "0xCEA1A4")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xCE9F24", Offset = "0xCE9F24", VA = "0xCE9F24")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xCEA040", Offset = "0xCEA040", VA = "0xCEA040")]
	public void BindService()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xCEA344", Offset = "0xCEA344", VA = "0xCEA344")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xCEA4A8", Offset = "0xCEA4A8", VA = "0xCEA4A8")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xCEA61C", Offset = "0xCEA61C", VA = "0xCEA61C")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xCEA758", Offset = "0xCEA758", VA = "0xCEA758")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xCEA8CC", Offset = "0xCEA8CC", VA = "0xCEA8CC")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xCEAA78", Offset = "0xCEAA78", VA = "0xCEAA78")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xCEAC94", Offset = "0xCEAC94", VA = "0xCEAC94")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xCEADF8", Offset = "0xCEADF8", VA = "0xCEADF8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xCEAF1C", Offset = "0xCEAF1C", VA = "0xCEAF1C")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xCE9DB0", Offset = "0xCE9DB0", VA = "0xCE9DB0")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xCEB044", Offset = "0xCEB044", VA = "0xCEB044")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xCEB254", Offset = "0xCEB254", VA = "0xCEB254")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xCEB39C", Offset = "0xCEB39C", VA = "0xCEB39C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xCEB4BC", Offset = "0xCEB4BC", VA = "0xCEB4BC")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xCEB5F8", Offset = "0xCEB5F8", VA = "0xCEB5F8")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xCEB788", Offset = "0xCEB788", VA = "0xCEB788")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xCEB8EC", Offset = "0xCEB8EC", VA = "0xCEB8EC")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCEBA54", Offset = "0xCEBA54", VA = "0xCEBA54")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCEBBB8", Offset = "0xCEBBB8", VA = "0xCEBBB8")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCEBD20", Offset = "0xCEBD20", VA = "0xCEBD20")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xCEC0A4", Offset = "0xCEC0A4", VA = "0xCEC0A4")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xCEC28C", Offset = "0xCEC28C", VA = "0xCEC28C")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xCEC420", Offset = "0xCEC420", VA = "0xCEC420")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xCEC5B4", Offset = "0xCEC5B4", VA = "0xCEC5B4")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xCEC9EC", Offset = "0xCEC9EC", VA = "0xCEC9EC")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xCECBC0", Offset = "0xCECBC0", VA = "0xCECBC0")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xCECCC4", Offset = "0xCECCC4", VA = "0xCECCC4")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xCED548", Offset = "0xCED548", VA = "0xCED548")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xCED6E4", Offset = "0xCED6E4", VA = "0xCED6E4")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xCEDD78", Offset = "0xCEDD78", VA = "0xCEDD78")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xCEE428", Offset = "0xCEE428", VA = "0xCEE428")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xCEFA10", Offset = "0xCEFA10", VA = "0xCEFA10")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xCEFBB0", Offset = "0xCEFBB0", VA = "0xCEFBB0")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xCF1A84", Offset = "0xCF1A84", VA = "0xCF1A84")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xCF1C48", Offset = "0xCF1C48", VA = "0xCF1C48")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xCF1DD8", Offset = "0xCF1DD8", VA = "0xCF1DD8")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xCF1FB4", Offset = "0xCF1FB4", VA = "0xCF1FB4")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xCF2190", Offset = "0xCF2190", VA = "0xCF2190")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xCF22BC", Offset = "0xCF22BC", VA = "0xCF22BC")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xCF2690", Offset = "0xCF2690", VA = "0xCF2690")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xCF2AFC", Offset = "0xCF2AFC", VA = "0xCF2AFC")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xCF2EE8", Offset = "0xCF2EE8", VA = "0xCF2EE8")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xCF304C", Offset = "0xCF304C", VA = "0xCF304C")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xCF3380", Offset = "0xCF3380", VA = "0xCF3380")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xCF34F8", Offset = "0xCF34F8", VA = "0xCF34F8")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xCF3658", Offset = "0xCF3658", VA = "0xCF3658")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xCF3780", Offset = "0xCF3780", VA = "0xCF3780")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xCF38E8", Offset = "0xCF38E8", VA = "0xCF38E8")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xCF3A50", Offset = "0xCF3A50", VA = "0xCF3A50")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xCF3BB8", Offset = "0xCF3BB8", VA = "0xCF3BB8")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xCF3CE0", Offset = "0xCF3CE0", VA = "0xCF3CE0")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xCF3E08", Offset = "0xCF3E08", VA = "0xCF3E08")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xCF3FDC", Offset = "0xCF3FDC", VA = "0xCF3FDC")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xCF4144", Offset = "0xCF4144", VA = "0xCF4144")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xCF42AC", Offset = "0xCF42AC", VA = "0xCF42AC")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xCF4428", Offset = "0xCF4428", VA = "0xCF4428")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xCF45A4", Offset = "0xCF45A4", VA = "0xCF45A4")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xCF4720", Offset = "0xCF4720", VA = "0xCF4720")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xCF4888", Offset = "0xCF4888", VA = "0xCF4888")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xCF49B0", Offset = "0xCF49B0", VA = "0xCF49B0")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xCF4AD8", Offset = "0xCF4AD8", VA = "0xCF4AD8")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xCF4C5C", Offset = "0xCF4C5C", VA = "0xCF4C5C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xCF4D10", Offset = "0xCF4D10", VA = "0xCF4D10")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xCF4E30", Offset = "0xCF4E30", VA = "0xCF4E30")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xCF4FA4", Offset = "0xCF4FA4", VA = "0xCF4FA4")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xCF5118", Offset = "0xCF5118", VA = "0xCF5118")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xCF5220", Offset = "0xCF5220", VA = "0xCF5220")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xCF537C", Offset = "0xCF537C", VA = "0xCF537C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xCF54D8", Offset = "0xCF54D8", VA = "0xCF54D8")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xCF5638", Offset = "0xCF5638", VA = "0xCF5638")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xCF57A0", Offset = "0xCF57A0", VA = "0xCF57A0")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xCF5908", Offset = "0xCF5908", VA = "0xCF5908")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xCF5A7C", Offset = "0xCF5A7C", VA = "0xCF5A7C")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xCF5BD4", Offset = "0xCF5BD4", VA = "0xCF5BD4")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000076")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x200035F")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000360")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000361")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000362")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000363")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000364")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000365")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000366")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000367")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000368")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000369")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x200036A")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x200036B")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x200036C")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x200036D")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x200036E")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x200036F")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000370")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000371")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x1700006B")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xCE40F8", Offset = "0xCE40F8", VA = "0xCE40F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xCE1F94", Offset = "0xCE1F94", VA = "0xCE1F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638384", Offset = "0x638384")]
		add
		{
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xCE24F0", Offset = "0xCE24F0", VA = "0xCE24F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638394", Offset = "0x638394")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xCF5D48", Offset = "0xCF5D48", VA = "0xCF5D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383A4", Offset = "0x6383A4")]
		add
		{
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xCF5E38", Offset = "0xCF5E38", VA = "0xCF5E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383B4", Offset = "0x6383B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xCE2174", Offset = "0xCE2174", VA = "0xCE2174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383C4", Offset = "0x6383C4")]
		add
		{
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xCE26D0", Offset = "0xCE26D0", VA = "0xCE26D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383D4", Offset = "0x6383D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xCE2264", Offset = "0xCE2264", VA = "0xCE2264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383E4", Offset = "0x6383E4")]
		add
		{
		}
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xCE27C0", Offset = "0xCE27C0", VA = "0xCE27C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6383F4", Offset = "0x6383F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xCF5F28", Offset = "0xCF5F28", VA = "0xCF5F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638404", Offset = "0x638404")]
		add
		{
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xCF6018", Offset = "0xCF6018", VA = "0xCF6018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638414", Offset = "0x638414")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xCF6108", Offset = "0xCF6108", VA = "0xCF6108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638424", Offset = "0x638424")]
		add
		{
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xCF61F8", Offset = "0xCF61F8", VA = "0xCF61F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638434", Offset = "0x638434")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xCF62E8", Offset = "0xCF62E8", VA = "0xCF62E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638444", Offset = "0x638444")]
		add
		{
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xCF63D8", Offset = "0xCF63D8", VA = "0xCF63D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638454", Offset = "0x638454")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xCE4E38", Offset = "0xCE4E38", VA = "0xCE4E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638464", Offset = "0x638464")]
		add
		{
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xCE5124", Offset = "0xCE5124", VA = "0xCE5124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638474", Offset = "0x638474")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xCE2084", Offset = "0xCE2084", VA = "0xCE2084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638484", Offset = "0x638484")]
		add
		{
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xCE25E0", Offset = "0xCE25E0", VA = "0xCE25E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638494", Offset = "0x638494")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xCE4D48", Offset = "0xCE4D48", VA = "0xCE4D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384A4", Offset = "0x6384A4")]
		add
		{
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xCE5034", Offset = "0xCE5034", VA = "0xCE5034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384B4", Offset = "0x6384B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xCF64C8", Offset = "0xCF64C8", VA = "0xCF64C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384C4", Offset = "0x6384C4")]
		add
		{
		}
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xCF65B8", Offset = "0xCF65B8", VA = "0xCF65B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384D4", Offset = "0x6384D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xCF66A8", Offset = "0xCF66A8", VA = "0xCF66A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384E4", Offset = "0x6384E4")]
		add
		{
		}
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xCF6798", Offset = "0xCF6798", VA = "0xCF6798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6384F4", Offset = "0x6384F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xCF6888", Offset = "0xCF6888", VA = "0xCF6888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638504", Offset = "0x638504")]
		add
		{
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xCF6978", Offset = "0xCF6978", VA = "0xCF6978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638514", Offset = "0x638514")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xCF6A68", Offset = "0xCF6A68", VA = "0xCF6A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638524", Offset = "0x638524")]
		add
		{
		}
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xCF6B58", Offset = "0xCF6B58", VA = "0xCF6B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638534", Offset = "0x638534")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xCF6C48", Offset = "0xCF6C48", VA = "0xCF6C48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638544", Offset = "0x638544")]
		add
		{
		}
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xCF6D38", Offset = "0xCF6D38", VA = "0xCF6D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638554", Offset = "0x638554")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xCF6E28", Offset = "0xCF6E28", VA = "0xCF6E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638564", Offset = "0x638564")]
		add
		{
		}
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xCF6F18", Offset = "0xCF6F18", VA = "0xCF6F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638574", Offset = "0x638574")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xCF7008", Offset = "0xCF7008", VA = "0xCF7008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638584", Offset = "0x638584")]
		add
		{
		}
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xCF70F8", Offset = "0xCF70F8", VA = "0xCF70F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638594", Offset = "0x638594")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xCF71E8", Offset = "0xCF71E8", VA = "0xCF71E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385A4", Offset = "0x6385A4")]
		add
		{
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xCF72D8", Offset = "0xCF72D8", VA = "0xCF72D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385B4", Offset = "0x6385B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xCF73C8", Offset = "0xCF73C8", VA = "0xCF73C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385C4", Offset = "0x6385C4")]
		add
		{
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xCF74B8", Offset = "0xCF74B8", VA = "0xCF74B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385D4", Offset = "0x6385D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xCF75A8", Offset = "0xCF75A8", VA = "0xCF75A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385E4", Offset = "0x6385E4")]
		add
		{
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xCF7698", Offset = "0xCF7698", VA = "0xCF7698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6385F4", Offset = "0x6385F4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xCF7788", Offset = "0xCF7788", VA = "0xCF7788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xCF7A80", Offset = "0xCF7A80", VA = "0xCF7A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xCF7B28", Offset = "0xCF7B28", VA = "0xCF7B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xCF95EC", Offset = "0xCF95EC", VA = "0xCF95EC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xCF9A54", Offset = "0xCF9A54", VA = "0xCF9A54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xCF9B30", Offset = "0xCF9B30", VA = "0xCF9B30")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xCF9C70", Offset = "0xCF9C70", VA = "0xCF9C70")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xCF9D14", Offset = "0xCF9D14", VA = "0xCF9D14")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xCF9DF4", Offset = "0xCF9DF4", VA = "0xCF9DF4")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xCF79DC", Offset = "0xCF79DC", VA = "0xCF79DC")]
	public void BindService()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xCF9ED4", Offset = "0xCF9ED4", VA = "0xCF9ED4")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xCF9F78", Offset = "0xCF9F78", VA = "0xCF9F78")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xCFA01C", Offset = "0xCFA01C", VA = "0xCFA01C")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xCF99DC", Offset = "0xCF99DC", VA = "0xCF99DC")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xCFA0C8", Offset = "0xCFA0C8", VA = "0xCFA0C8")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xCFA16C", Offset = "0xCFA16C", VA = "0xCFA16C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xCFA210", Offset = "0xCFA210", VA = "0xCFA210")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xCFA2D0", Offset = "0xCFA2D0", VA = "0xCFA2D0")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xCFA374", Offset = "0xCFA374", VA = "0xCFA374")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCFA3E4", Offset = "0xCFA3E4", VA = "0xCFA3E4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCFA454", Offset = "0xCFA454", VA = "0xCFA454")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCFA4C4", Offset = "0xCFA4C4", VA = "0xCFA4C4")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xCFA534", Offset = "0xCFA534", VA = "0xCFA534")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xCFA5E0", Offset = "0xCFA5E0", VA = "0xCFA5E0")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xCFA694", Offset = "0xCFA694", VA = "0xCFA694")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xCFA85C", Offset = "0xCFA85C", VA = "0xCFA85C")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xCFA8D0", Offset = "0xCFA8D0", VA = "0xCFA8D0")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xCFAB5C", Offset = "0xCFAB5C", VA = "0xCFAB5C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xCFADE4", Offset = "0xCFADE4", VA = "0xCFADE4")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xCFB088", Offset = "0xCFB088", VA = "0xCFB088")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xCFB634", Offset = "0xCFB634", VA = "0xCFB634")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xCFB730", Offset = "0xCFB730", VA = "0xCFB730")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xCFBB68", Offset = "0xCFBB68", VA = "0xCFBB68")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xCFBC64", Offset = "0xCFBC64", VA = "0xCFBC64")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xCFBD60", Offset = "0xCFBD60", VA = "0xCFBD60")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xCFBE5C", Offset = "0xCFBE5C", VA = "0xCFBE5C")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xCFBF58", Offset = "0xCFBF58", VA = "0xCFBF58")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xCFC054", Offset = "0xCFC054", VA = "0xCFC054")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xCFC150", Offset = "0xCFC150", VA = "0xCFC150")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xCFC24C", Offset = "0xCFC24C", VA = "0xCFC24C")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xCFC348", Offset = "0xCFC348", VA = "0xCFC348")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xCFC3F8", Offset = "0xCFC3F8", VA = "0xCFC3F8")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xCFC3FC", Offset = "0xCFC3FC", VA = "0xCFC3FC")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xCFC400", Offset = "0xCFC400", VA = "0xCFC400")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xCFC404", Offset = "0xCFC404", VA = "0xCFC404")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xCFC720", Offset = "0xCFC720", VA = "0xCFC720")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xCFC87C", Offset = "0xCFC87C", VA = "0xCFC87C")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xCFC9CC", Offset = "0xCFC9CC", VA = "0xCFC9CC")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xCFC558", Offset = "0xCFC558", VA = "0xCFC558")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xCFCB1C", Offset = "0xCFCB1C", VA = "0xCFCB1C")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xCFCBC4", Offset = "0xCFCBC4", VA = "0xCFCBC4")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xCFB870", Offset = "0xCFB870", VA = "0xCFB870")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xCF8EE0", Offset = "0xCF8EE0", VA = "0xCF8EE0")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xCF8B14", Offset = "0xCF8B14", VA = "0xCF8B14")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xCFCBD8", Offset = "0xCFCBD8", VA = "0xCFCBD8")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xCFCD28", Offset = "0xCFCD28", VA = "0xCFCD28")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCFCDCC", Offset = "0xCFCDCC", VA = "0xCFCDCC")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCFCECC", Offset = "0xCFCECC", VA = "0xCFCECC")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000077")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E828", Offset = "0x62E828")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xB1A580", Offset = "0xB1A580", VA = "0xB1A580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xB1A5E8", Offset = "0xB1A5E8", VA = "0xB1A5E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xB1A140", Offset = "0xB1A140", VA = "0xB1A140")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xB1A488", Offset = "0xB1A488", VA = "0xB1A488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xB1A48C", Offset = "0xB1A48C", VA = "0xB1A48C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB1A588", Offset = "0xB1A588", VA = "0xB1A588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xB19C34", Offset = "0xB19C34", VA = "0xB19C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xB19E10", Offset = "0xB19E10", VA = "0xB19E10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xB19F38", Offset = "0xB19F38", VA = "0xB19F38")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xB19FAC", Offset = "0xB19FAC", VA = "0xB19FAC")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xB1A0B0", Offset = "0xB1A0B0", VA = "0xB1A0B0")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xB19F3C", Offset = "0xB19F3C", VA = "0xB19F3C")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xB1A0B4", Offset = "0xB1A0B4", VA = "0xB1A0B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638604", Offset = "0x638604")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB1A16C", Offset = "0xB1A16C", VA = "0xB1A16C")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB1A268", Offset = "0xB1A268", VA = "0xB1A268")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB1A478", Offset = "0xB1A478", VA = "0xB1A478")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000078")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB1A5F0", Offset = "0xB1A5F0", VA = "0xB1A5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB1A6C4", Offset = "0xB1A6C4", VA = "0xB1A6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB1A6E4", Offset = "0xB1A6E4", VA = "0xB1A6E4")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB1A804", Offset = "0xB1A804", VA = "0xB1A804")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000079")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB1A80C", Offset = "0xB1A80C", VA = "0xB1A80C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB1A86C", Offset = "0xB1A86C", VA = "0xB1A86C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB1A8DC", Offset = "0xB1A8DC", VA = "0xB1A8DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB1A8FC", Offset = "0xB1A8FC", VA = "0xB1A8FC")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB1AC28", Offset = "0xB1AC28", VA = "0xB1AC28")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x200007A")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	public enum TipBtn
	{
		[Token(Token = "0x4001A2D")]
		app,
		[Token(Token = "0x4001A2E")]
		touchpad,
		[Token(Token = "0x4001A2F")]
		home,
		[Token(Token = "0x4001A30")]
		volup,
		[Token(Token = "0x4001A31")]
		voldown,
		[Token(Token = "0x4001A32")]
		trigger,
		[Token(Token = "0x4001A33")]
		grip
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB1F980", Offset = "0xB1F980", VA = "0xB1F980")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB1FAF8", Offset = "0xB1FAF8", VA = "0xB1FAF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB1FB78", Offset = "0xB1FB78", VA = "0xB1FB78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB1FD7C", Offset = "0xB1FD7C", VA = "0xB1FD7C")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB201C8", Offset = "0xB201C8", VA = "0xB201C8")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB2026C", Offset = "0xB2026C", VA = "0xB2026C")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x200007B")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB20274", Offset = "0xB20274", VA = "0xB20274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB20318", Offset = "0xB20318", VA = "0xB20318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB207C0", Offset = "0xB207C0", VA = "0xB207C0")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB20460", Offset = "0xB20460", VA = "0xB20460")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB2097C", Offset = "0xB2097C", VA = "0xB2097C")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB20CCC", Offset = "0xB20CCC", VA = "0xB20CCC")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB21050", Offset = "0xB21050", VA = "0xB21050")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB205B4", Offset = "0xB205B4", VA = "0xB205B4")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB208A0", Offset = "0xB208A0", VA = "0xB208A0")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB20344", Offset = "0xB20344", VA = "0xB20344")]
	private void Process()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB2108C", Offset = "0xB2108C", VA = "0xB2108C")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB2127C", Offset = "0xB2127C", VA = "0xB2127C")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB21368", Offset = "0xB21368", VA = "0xB21368")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x200007C")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB21424", Offset = "0xB21424", VA = "0xB21424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB214D4", Offset = "0xB214D4", VA = "0xB214D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB214F4", Offset = "0xB214F4", VA = "0xB214F4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB21604", Offset = "0xB21604", VA = "0xB21604")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200007D")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x2000374")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E838", Offset = "0x62E838")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x86F7EC", Offset = "0x86F7EC", VA = "0x86F7EC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x87006C", Offset = "0x87006C", VA = "0x87006C")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x86EFDC", Offset = "0x86EFDC", VA = "0x86EFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x86F1C8", Offset = "0x86F1C8", VA = "0x86F1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x86F688", Offset = "0x86F688", VA = "0x86F688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x86F2AC", Offset = "0x86F2AC", VA = "0x86F2AC")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x86F7F4", Offset = "0x86F7F4", VA = "0x86F7F4")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x86FB50", Offset = "0x86FB50", VA = "0x86FB50")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x86FB0C", Offset = "0x86FB0C", VA = "0x86FB0C")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x86FBA4", Offset = "0x86FBA4", VA = "0x86FBA4")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x86FCB4", Offset = "0x86FCB4", VA = "0x86FCB4")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x86FF88", Offset = "0x86FF88", VA = "0x86FF88")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x870064", Offset = "0x870064", VA = "0x870064")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200007E")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000391")]
	[Address(RVA = "0x97A380", Offset = "0x97A380", VA = "0x97A380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x97A384", Offset = "0x97A384", VA = "0x97A384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x97A3F8", Offset = "0x97A3F8", VA = "0x97A3F8")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200007F")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x2000376")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E848", Offset = "0x62E848")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x9B70FC", Offset = "0x9B70FC", VA = "0x9B70FC")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x9B7CEC", Offset = "0x9B7CEC", VA = "0x9B7CEC")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x9B6804", Offset = "0x9B6804", VA = "0x9B6804")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x9B70F4", Offset = "0x9B70F4", VA = "0x9B70F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x9B70F8", Offset = "0x9B70F8", VA = "0x9B70F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x9B6808", Offset = "0x9B6808", VA = "0x9B6808")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x9B7104", Offset = "0x9B7104", VA = "0x9B7104")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x9B7B60", Offset = "0x9B7B60", VA = "0x9B7B60")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9B7338", Offset = "0x9B7338", VA = "0x9B7338")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x9B78E4", Offset = "0x9B78E4", VA = "0x9B78E4")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x9B7C4C", Offset = "0x9B7C4C", VA = "0x9B7C4C")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000080")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x82DDF0", Offset = "0x82DDF0", VA = "0x82DDF0")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x82E1B8", Offset = "0x82E1B8", VA = "0x82E1B8")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x82E3F0", Offset = "0x82E3F0", VA = "0x82E3F0")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x82E018", Offset = "0x82E018", VA = "0x82E018")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x82E4C8", Offset = "0x82E4C8", VA = "0x82E4C8")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x82E514", Offset = "0x82E514", VA = "0x82E514")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x82E648", Offset = "0x82E648", VA = "0x82E648")]
	public Callback()
	{
	}
}
[Token(Token = "0x2000081")]
public class CommonDic
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700006C")]
	public string subject
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x835CB0", Offset = "0x835CB0", VA = "0x835CB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x835CB8", Offset = "0x835CB8", VA = "0x835CB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public string body
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x835CC0", Offset = "0x835CC0", VA = "0x835CC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x835CC8", Offset = "0x835CC8", VA = "0x835CC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public string order_id
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x835CD0", Offset = "0x835CD0", VA = "0x835CD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x835CD8", Offset = "0x835CD8", VA = "0x835CD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public string total
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x835CE0", Offset = "0x835CE0", VA = "0x835CE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x835CE8", Offset = "0x835CE8", VA = "0x835CE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public string goods_tag
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x835CF0", Offset = "0x835CF0", VA = "0x835CF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x835CF8", Offset = "0x835CF8", VA = "0x835CF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public string notify_url
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x835D00", Offset = "0x835D00", VA = "0x835D00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x835D08", Offset = "0x835D08", VA = "0x835D08")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public string pay_code
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x835D10", Offset = "0x835D10", VA = "0x835D10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x835D18", Offset = "0x835D18", VA = "0x835D18")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public string trade_type
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x835D20", Offset = "0x835D20", VA = "0x835D20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x835D28", Offset = "0x835D28", VA = "0x835D28")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public string user_token
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x835D30", Offset = "0x835D30", VA = "0x835D30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x835D38", Offset = "0x835D38", VA = "0x835D38")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public string access_token
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x835D40", Offset = "0x835D40", VA = "0x835D40")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x835D48", Offset = "0x835D48", VA = "0x835D48")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public string open_id
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x835D50", Offset = "0x835D50", VA = "0x835D50")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x835D58", Offset = "0x835D58", VA = "0x835D58")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public string refresh_token
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x835D60", Offset = "0x835D60", VA = "0x835D60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x835D68", Offset = "0x835D68", VA = "0x835D68")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public string expires_in
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x835D70", Offset = "0x835D70", VA = "0x835D70")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x835D78", Offset = "0x835D78", VA = "0x835D78")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public string isSuccess
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x835D80", Offset = "0x835D80", VA = "0x835D80")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x835D88", Offset = "0x835D88", VA = "0x835D88")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public string loginMsg
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x835D90", Offset = "0x835D90", VA = "0x835D90")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x835D98", Offset = "0x835D98", VA = "0x835D98")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public string user_info
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x835DA0", Offset = "0x835DA0", VA = "0x835DA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x835DA8", Offset = "0x835DA8", VA = "0x835DA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public string order_info
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x835DB0", Offset = "0x835DB0", VA = "0x835DB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x835DB8", Offset = "0x835DB8", VA = "0x835DB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public string code
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x835DC0", Offset = "0x835DC0", VA = "0x835DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x835DC8", Offset = "0x835DC8", VA = "0x835DC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public string msg
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x835DD0", Offset = "0x835DD0", VA = "0x835DD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x835DD8", Offset = "0x835DD8", VA = "0x835DD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public string app_ID
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x835DE0", Offset = "0x835DE0", VA = "0x835DE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x835DE8", Offset = "0x835DE8", VA = "0x835DE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public string app_Key
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x835DF0", Offset = "0x835DF0", VA = "0x835DF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x835DF8", Offset = "0x835DF8", VA = "0x835DF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public string merchant_ID
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x835E00", Offset = "0x835E00", VA = "0x835E00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x835E08", Offset = "0x835E08", VA = "0x835E08")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public string paykey
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x835E10", Offset = "0x835E10", VA = "0x835E10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x835E18", Offset = "0x835E18", VA = "0x835E18")]
		set
		{
		}
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x82E0E0", Offset = "0x82E0E0", VA = "0x82E0E0")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x835A2C", Offset = "0x835A2C", VA = "0x835A2C")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x835A7C", Offset = "0x835A7C", VA = "0x835A7C")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x835C40", Offset = "0x835C40", VA = "0x835C40")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8355A8", Offset = "0x8355A8", VA = "0x8355A8")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x835520", Offset = "0x835520", VA = "0x835520")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x2000082")]
public class LoginSDK
{
	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x97A52C", Offset = "0x97A52C", VA = "0x97A52C")]
	public static void Login()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x97A58C", Offset = "0x97A58C", VA = "0x97A58C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x97A5EC", Offset = "0x97A5EC", VA = "0x97A5EC")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000083")]
public class PicoPaymentSDK
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000083")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x83E4B4", Offset = "0x83E4B4", VA = "0x83E4B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x83E51C", Offset = "0x83E51C", VA = "0x83E51C")]
		set
		{
		}
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x83E58C", Offset = "0x83E58C", VA = "0x83E58C")]
	public static void Login()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x83E804", Offset = "0x83E804", VA = "0x83E804")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x83EA44", Offset = "0x83EA44", VA = "0x83EA44")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x83EC84", Offset = "0x83EC84", VA = "0x83EC84")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x83EEFC", Offset = "0x83EEFC", VA = "0x83EEFC")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000084")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB1F448", Offset = "0xB1F448", VA = "0xB1F448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB1F480", Offset = "0xB1F480", VA = "0xB1F480")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB1F490", Offset = "0xB1F490", VA = "0xB1F490")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB1F44C", Offset = "0xB1F44C", VA = "0xB1F44C")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB1F488", Offset = "0xB1F488", VA = "0xB1F488")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB1F498", Offset = "0xB1F498", VA = "0xB1F498")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB1F4A0", Offset = "0xB1F4A0", VA = "0xB1F4A0")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB1F554", Offset = "0xB1F554", VA = "0xB1F554")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB1F5EC", Offset = "0xB1F5EC", VA = "0xB1F5EC")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xB1F684", Offset = "0xB1F684", VA = "0xB1F684")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xB1F70C", Offset = "0xB1F70C", VA = "0xB1F70C")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xB1F78C", Offset = "0xB1F78C", VA = "0xB1F78C")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB1F83C", Offset = "0xB1F83C", VA = "0xB1F83C")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB1F8C8", Offset = "0xB1F8C8", VA = "0xB1F8C8")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB1F978", Offset = "0xB1F978", VA = "0xB1F978")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000085")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x839290", Offset = "0x839290", VA = "0x839290")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8392FC", Offset = "0x8392FC", VA = "0x8392FC")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x8393A4", Offset = "0x8393A4", VA = "0x8393A4")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x83944C", Offset = "0x83944C", VA = "0x83944C")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x8394F4", Offset = "0x8394F4", VA = "0x8394F4")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x83955C", Offset = "0x83955C", VA = "0x83955C")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000086")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x82D1E0", Offset = "0x82D1E0", VA = "0x82D1E0")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000087")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x8D3B78", Offset = "0x8D3B78", VA = "0x8D3B78")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x8DB41C", Offset = "0x8DB41C", VA = "0x8DB41C")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000088")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000378")]
	public enum simulationType
	{
		[Token(Token = "0x4001A39")]
		Null,
		[Token(Token = "0x4001A3A")]
		Invalid,
		[Token(Token = "0x4001A3B")]
		Valid
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000084")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x8DA718", Offset = "0x8DA718", VA = "0x8DA718")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x8DA738", Offset = "0x8DA738", VA = "0x8DA738")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x8DA364", Offset = "0x8DA364", VA = "0x8DA364")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x8DA784", Offset = "0x8DA784", VA = "0x8DA784")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x8DA384", Offset = "0x8DA384", VA = "0x8DA384")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x8DA7D0", Offset = "0x8DA7D0", VA = "0x8DA7D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8DA828", Offset = "0x8DA828", VA = "0x8DA828")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000089")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000379")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E858", Offset = "0x62E858")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x8DA5FC", Offset = "0x8DA5FC", VA = "0x8DA5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x8DA664", Offset = "0x8DA664", VA = "0x8DA664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x8D5114", Offset = "0x8D5114", VA = "0x8D5114")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x8DA4B8", Offset = "0x8DA4B8", VA = "0x8DA4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x8DA4BC", Offset = "0x8DA4BC", VA = "0x8DA4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x8DA604", Offset = "0x8DA604", VA = "0x8DA604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E868", Offset = "0x62E868")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x8D64FC", Offset = "0x8D64FC", VA = "0x8D64FC")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x8D94C0", Offset = "0x8D94C0", VA = "0x8D94C0")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E878", Offset = "0x62E878")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x8D95D8", Offset = "0x8D95D8", VA = "0x8D95D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x8D9640", Offset = "0x8D9640", VA = "0x8D9640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x8D6834", Offset = "0x8D6834", VA = "0x8D6834")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x8D9510", Offset = "0x8D9510", VA = "0x8D9510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x8D9514", Offset = "0x8D9514", VA = "0x8D9514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x8D95E0", Offset = "0x8D95E0", VA = "0x8D95E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E888", Offset = "0x62E888")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0x8DA448", Offset = "0x8DA448", VA = "0x8DA448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x8DA4B0", Offset = "0x8DA4B0", VA = "0x8DA4B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x8D8720", Offset = "0x8D8720", VA = "0x8D8720")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x8DA114", Offset = "0x8DA114", VA = "0x8DA114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x8DA118", Offset = "0x8DA118", VA = "0x8DA118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x8DA450", Offset = "0x8DA450", VA = "0x8DA450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E898", Offset = "0x62E898")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x8D994C", Offset = "0x8D994C", VA = "0x8D994C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0x8D99B4", Offset = "0x8D99B4", VA = "0x8D99B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x8D87AC", Offset = "0x8D87AC", VA = "0x8D87AC")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x8D9648", Offset = "0x8D9648", VA = "0x8D9648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x8D964C", Offset = "0x8D964C", VA = "0x8D964C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x8D9954", Offset = "0x8D9954", VA = "0x8D9954", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8A8", Offset = "0x62E8A8")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x8DA0A4", Offset = "0x8DA0A4", VA = "0x8DA0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x8DA10C", Offset = "0x8DA10C", VA = "0x8DA10C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x8D93A4", Offset = "0x8D93A4", VA = "0x8D93A4")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x8D99BC", Offset = "0x8D99BC", VA = "0x8D99BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x8D99C0", Offset = "0x8D99C0", VA = "0x8D99C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x8DA0AC", Offset = "0x8DA0AC", VA = "0x8DA0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F860", Offset = "0x62F860")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000087")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x8D3880", Offset = "0x8D3880", VA = "0x8D3880")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x8D3A80", Offset = "0x8D3A80", VA = "0x8D3A80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x8D3A88", Offset = "0x8D3A88", VA = "0x8D3A88")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x8D3AA8", Offset = "0x8D3AA8", VA = "0x8D3AA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x8D3AB0", Offset = "0x8D3AB0", VA = "0x8D3AB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x8D3AD0", Offset = "0x8D3AD0", VA = "0x8D3AD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x8D3AD8", Offset = "0x8D3AD8", VA = "0x8D3AD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x8D3AF8", Offset = "0x8D3AF8", VA = "0x8D3AF8")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x8D3B00", Offset = "0x8D3B00", VA = "0x8D3B00")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x8D3C40", Offset = "0x8D3C40", VA = "0x8D3C40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x8D3C48", Offset = "0x8D3C48", VA = "0x8D3C48")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x8D3C68", Offset = "0x8D3C68", VA = "0x8D3C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638668", Offset = "0x638668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x8D3C70", Offset = "0x8D3C70", VA = "0x8D3C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638678", Offset = "0x638678")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x8D3C7C", Offset = "0x8D3C7C", VA = "0x8D3C7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x8D3C84", Offset = "0x8D3C84", VA = "0x8D3C84")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x8D3CA4", Offset = "0x8D3CA4", VA = "0x8D3CA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x8D3CAC", Offset = "0x8D3CAC", VA = "0x8D3CAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x8D3CCC", Offset = "0x8D3CCC", VA = "0x8D3CCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x8D3CD4", Offset = "0x8D3CD4", VA = "0x8D3CD4")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x8D3D00", Offset = "0x8D3D00", VA = "0x8D3D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638688", Offset = "0x638688")]
		add
		{
		}
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x8D3DF0", Offset = "0x8D3DF0", VA = "0x8D3DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638698", Offset = "0x638698")]
		remove
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x8D3B20", Offset = "0x8D3B20", VA = "0x8D3B20")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8D3BCC", Offset = "0x8D3BCC", VA = "0x8D3BCC")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8D3C04", Offset = "0x8D3C04", VA = "0x8D3C04")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8D3EE0", Offset = "0x8D3EE0", VA = "0x8D3EE0")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8D4038", Offset = "0x8D4038", VA = "0x8D4038")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8D4238", Offset = "0x8D4238", VA = "0x8D4238")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8D49A8", Offset = "0x8D49A8", VA = "0x8D49A8")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8D4D28", Offset = "0x8D4D28", VA = "0x8D4D28")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8D4FD8", Offset = "0x8D4FD8", VA = "0x8D4FD8")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8D45B8", Offset = "0x8D45B8", VA = "0x8D45B8")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8D5110", Offset = "0x8D5110", VA = "0x8D5110")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8D4900", Offset = "0x8D4900", VA = "0x8D4900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6386A8", Offset = "0x6386A8")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8D5140", Offset = "0x8D5140", VA = "0x8D5140")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x8D52EC", Offset = "0x8D52EC", VA = "0x8D52EC")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8D629C", Offset = "0x8D629C", VA = "0x8D629C")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8D63B8", Offset = "0x8D63B8", VA = "0x8D63B8")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8D5684", Offset = "0x8D5684", VA = "0x8D5684")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8D5B9C", Offset = "0x8D5B9C", VA = "0x8D5B9C")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8D5F78", Offset = "0x8D5F78", VA = "0x8D5F78")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x8D6504", Offset = "0x8D6504", VA = "0x8D6504")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x8D6210", Offset = "0x8D6210", VA = "0x8D6210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63870C", Offset = "0x63870C")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8D67B8", Offset = "0x8D67B8", VA = "0x8D67B8")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x8D6860", Offset = "0x8D6860", VA = "0x8D6860")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8D3FBC", Offset = "0x8D3FBC", VA = "0x8D3FBC")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x8D6A1C", Offset = "0x8D6A1C", VA = "0x8D6A1C")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8D6AE8", Offset = "0x8D6AE8", VA = "0x8D6AE8")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x8D6AF0", Offset = "0x8D6AF0", VA = "0x8D6AF0")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x8D6DD4", Offset = "0x8D6DD4", VA = "0x8D6DD4")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8D71A8", Offset = "0x8D71A8", VA = "0x8D71A8")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x8D7540", Offset = "0x8D7540", VA = "0x8D7540")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x8D767C", Offset = "0x8D767C", VA = "0x8D767C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8D86A4", Offset = "0x8D86A4", VA = "0x8D86A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638770", Offset = "0x638770")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8D874C", Offset = "0x8D874C", VA = "0x8D874C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6387D4", Offset = "0x6387D4")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8D87D8", Offset = "0x8D87D8", VA = "0x8D87D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x8D8AA4", Offset = "0x8D8AA4", VA = "0x8D8AA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x8D8C0C", Offset = "0x8D8C0C", VA = "0x8D8C0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x8D8D64", Offset = "0x8D8D64", VA = "0x8D8D64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x8D8D6C", Offset = "0x8D8D6C", VA = "0x8D8D6C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x8D8FC8", Offset = "0x8D8FC8", VA = "0x8D8FC8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x8D9280", Offset = "0x8D9280", VA = "0x8D9280")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x8D8E14", Offset = "0x8D8E14", VA = "0x8D8E14")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x8D939C", Offset = "0x8D939C", VA = "0x8D939C")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x8D808C", Offset = "0x8D808C", VA = "0x8D808C")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8D82DC", Offset = "0x8D82DC", VA = "0x8D82DC")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8D7C80", Offset = "0x8D7C80", VA = "0x8D7C80")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8D9204", Offset = "0x8D9204", VA = "0x8D9204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638838", Offset = "0x638838")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8D93D0", Offset = "0x8D93D0", VA = "0x8D93D0")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x200008A")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8E3150", Offset = "0x8E3150", VA = "0x8E3150")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8E3154", Offset = "0x8E3154", VA = "0x8E3154")]
	private void Update()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8E3180", Offset = "0x8E3180", VA = "0x8E3180")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x200008B")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x2000380")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB26B70", Offset = "0xB26B70", VA = "0xB26B70")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB25178", Offset = "0xB25178", VA = "0xB25178")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB25230", Offset = "0xB25230", VA = "0xB25230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB25E58", Offset = "0xB25E58", VA = "0xB25E58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB25830", Offset = "0xB25830", VA = "0xB25830")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB269A8", Offset = "0xB269A8", VA = "0xB269A8")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB2621C", Offset = "0xB2621C", VA = "0xB2621C")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB26574", Offset = "0xB26574", VA = "0xB26574")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB2610C", Offset = "0xB2610C", VA = "0xB2610C")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB254B8", Offset = "0xB254B8", VA = "0xB254B8")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB26B44", Offset = "0xB26B44", VA = "0xB26B44")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB26038", Offset = "0xB26038", VA = "0xB26038")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB26064", Offset = "0xB26064", VA = "0xB26064")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xB26B78", Offset = "0xB26B78", VA = "0xB26B78")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AC30", Offset = "0x62AC30")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F910", Offset = "0x62F910")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000478")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PicoEyeSecondaryCamera secondaryCamera;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material mat_Vignette;

	[Token(Token = "0x17000091")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xF27A1C", Offset = "0xF27A1C", VA = "0xF27A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63889C", Offset = "0x63889C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xF27A24", Offset = "0xF27A24", VA = "0xF27A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6388AC", Offset = "0x6388AC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action onPostRenderEvent
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xF27A2C", Offset = "0xF27A2C", VA = "0xF27A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6388BC", Offset = "0x6388BC")]
		add
		{
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xF27AD0", Offset = "0xF27AD0", VA = "0xF27AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6388CC", Offset = "0x6388CC")]
		remove
		{
		}
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xF27B74", Offset = "0xF27B74", VA = "0xF27B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xF27C1C", Offset = "0xF27C1C", VA = "0xF27C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xF28194", Offset = "0xF28194", VA = "0xF28194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xF283C8", Offset = "0xF283C8", VA = "0xF283C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xF284F0", Offset = "0xF284F0", VA = "0xF284F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xF28618", Offset = "0xF28618", VA = "0xF28618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xF2869C", Offset = "0xF2869C", VA = "0xF2869C")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xF28888", Offset = "0xF28888", VA = "0xF28888")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xF28948", Offset = "0xF28948", VA = "0xF28948")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xF2875C", Offset = "0xF2875C", VA = "0xF2875C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xF28A08", Offset = "0xF28A08", VA = "0xF28A08")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xF28C10", Offset = "0xF28C10", VA = "0xF28C10")]
	public void OnPostRender_Process()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xF28DB8", Offset = "0xF28DB8", VA = "0xF28DB8")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xF27CF4", Offset = "0xF27CF4", VA = "0xF27CF4")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xF27EF4", Offset = "0xF27EF4", VA = "0xF27EF4")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xF1EB44", Offset = "0xF1EB44", VA = "0xF1EB44")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xF28FCC", Offset = "0xF28FCC", VA = "0xF28FCC")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xF29108", Offset = "0xF29108", VA = "0xF29108")]
	private void vignette()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xF28A90", Offset = "0xF28A90", VA = "0xF28A90")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xF29388", Offset = "0xF29388", VA = "0xF29388")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x200008D")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8B8", Offset = "0x62E8B8")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xF2CAF4", Offset = "0xF2CAF4", VA = "0xF2CAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xF2CB5C", Offset = "0xF2CB5C", VA = "0xF2CB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xF2B228", Offset = "0xF2B228", VA = "0xF2B228")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xF2BBCC", Offset = "0xF2BBCC", VA = "0xF2BBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xF2BBD0", Offset = "0xF2BBD0", VA = "0xF2BBD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xF2CAFC", Offset = "0xF2CAFC", VA = "0xF2CAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8C8", Offset = "0x62E8C8")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xF2CCA4", Offset = "0xF2CCA4", VA = "0xF2CCA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xF2CD0C", Offset = "0xF2CD0C", VA = "0xF2CD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xF2BB18", Offset = "0xF2BB18", VA = "0xF2BB18")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xF2CB64", Offset = "0xF2CB64", VA = "0xF2CB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xF2CB68", Offset = "0xF2CB68", VA = "0xF2CB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xF2CCAC", Offset = "0xF2CCAC", VA = "0xF2CCAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FA10", Offset = "0x62FA10")]
	public bool screenFade;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FA48", Offset = "0x62FA48")]
	public float fadeTime;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FA80", Offset = "0x62FA80")]
	public Color fadeColor;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000092")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000472")]
		[Address(RVA = "0xF1E9AC", Offset = "0xF1E9AC", VA = "0xF1E9AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000093")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000473")]
		[Address(RVA = "0xF1EAA4", Offset = "0xF1EAA4", VA = "0xF1EAA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000094")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xF294A8", Offset = "0xF294A8", VA = "0xF294A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xF294B0", Offset = "0xF294B0", VA = "0xF294B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xF29514", Offset = "0xF29514", VA = "0xF29514")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xF2951C", Offset = "0xF2951C", VA = "0xF2951C")]
		set
		{
		}
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xF29530", Offset = "0xF29530", VA = "0xF29530")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xF2974C", Offset = "0xF2974C", VA = "0xF2974C")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xF29814", Offset = "0xF29814", VA = "0xF29814")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xF2992C", Offset = "0xF2992C", VA = "0xF2992C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xF29A0C", Offset = "0xF29A0C", VA = "0xF29A0C")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xF29B88", Offset = "0xF29B88", VA = "0xF29B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xF2A39C", Offset = "0xF2A39C", VA = "0xF2A39C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xF2ABD8", Offset = "0xF2ABD8", VA = "0xF2ABD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xF2ABFC", Offset = "0xF2ABFC", VA = "0xF2ABFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xF2AE5C", Offset = "0xF2AE5C", VA = "0xF2AE5C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xF2AF50", Offset = "0xF2AF50", VA = "0xF2AF50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xF2AF58", Offset = "0xF2AF58", VA = "0xF2AF58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xF2B0C0", Offset = "0xF2B0C0", VA = "0xF2B0C0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xF2B1AC", Offset = "0xF2B1AC", VA = "0xF2B1AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6388DC", Offset = "0x6388DC")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xF2B254", Offset = "0xF2B254", VA = "0xF2B254")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xF2B458", Offset = "0xF2B458", VA = "0xF2B458")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xF1F94C", Offset = "0xF1F94C", VA = "0xF1F94C")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xF2B764", Offset = "0xF2B764", VA = "0xF2B764")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xF29F0C", Offset = "0xF29F0C", VA = "0xF29F0C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xF2AF5C", Offset = "0xF2AF5C", VA = "0xF2AF5C")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xF2A394", Offset = "0xF2A394", VA = "0xF2A394")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xF2AB48", Offset = "0xF2AB48", VA = "0xF2AB48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638940", Offset = "0x638940")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xF2B9C0", Offset = "0xF2B9C0", VA = "0xF2B9C0")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xF2A9F8", Offset = "0xF2A9F8", VA = "0xF2A9F8")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xF2BB44", Offset = "0xF2BB44", VA = "0xF2BB44")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x200008E")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x2000383")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000384")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001A62")]
		Quad,
		[Token(Token = "0x4001A63")]
		Cylinder,
		[Token(Token = "0x4001A64")]
		Equirect
	}

	[Token(Token = "0x2000385")]
	public enum OverlayType
	{
		[Token(Token = "0x4001A66")]
		Overlay,
		[Token(Token = "0x4001A67")]
		Underlay
	}

	[Token(Token = "0x2000386")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001A69")]
		NotCare,
		[Token(Token = "0x4001A6A")]
		Nearest,
		[Token(Token = "0x4001A6B")]
		Linear,
		[Token(Token = "0x4001A6C")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001A6D")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4001A6E")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001A6F")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xF2CD14", Offset = "0xF2CD14", VA = "0xF2CD14", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xF2CD34", Offset = "0xF2CD34", VA = "0xF2CD34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xF2D25C", Offset = "0xF2D25C", VA = "0xF2D25C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xF2D710", Offset = "0xF2D710", VA = "0xF2D710")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xF2A790", Offset = "0xF2A790", VA = "0xF2A790")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xF2D0A8", Offset = "0xF2D0A8", VA = "0xF2D0A8")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xF2D260", Offset = "0xF2D260", VA = "0xF2D260")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xF2D794", Offset = "0xF2D794", VA = "0xF2D794")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xF2D844", Offset = "0xF2D844", VA = "0xF2D844")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xF2CA74", Offset = "0xF2CA74", VA = "0xF2CA74")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xF2CAB4", Offset = "0xF2CAB4", VA = "0xF2CAB4")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xF2D858", Offset = "0xF2D858", VA = "0xF2D858")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200008F")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FAB8", Offset = "0x62FAB8")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000096")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x8D4170", Offset = "0x8D4170", VA = "0x8D4170")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x8DB534", Offset = "0x8DB534", VA = "0x8DB534")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x8DBF0C", Offset = "0x8DBF0C", VA = "0x8DBF0C")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000098")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x8DBF14", Offset = "0x8DBF14", VA = "0x8DBF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389A4", Offset = "0x6389A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x8DBF1C", Offset = "0x8DBF1C", VA = "0x8DBF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389B4", Offset = "0x6389B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x8DBF24", Offset = "0x8DBF24", VA = "0x8DBF24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x8DBF2C", Offset = "0x8DBF2C", VA = "0x8DBF2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float EyeVFoV
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x8DC08C", Offset = "0x8DC08C", VA = "0x8DC08C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x8DC094", Offset = "0x8DC094", VA = "0x8DC094")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float EyeHFoV
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x8DC0A8", Offset = "0x8DC0A8", VA = "0x8DC0A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x8DC0B0", Offset = "0x8DC0B0", VA = "0x8DC0B0")]
		set
		{
		}
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8DB424", Offset = "0x8DB424", VA = "0x8DB424")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8DB5A4", Offset = "0x8DB5A4", VA = "0x8DB5A4")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8DBE8C", Offset = "0x8DBE8C", VA = "0x8DBE8C")]
	public void Init()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8DC530", Offset = "0x8DC530", VA = "0x8DC530")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8DC644", Offset = "0x8DC644", VA = "0x8DC644")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8DC6EC", Offset = "0x8DC6EC", VA = "0x8DC6EC")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8DD074", Offset = "0x8DD074", VA = "0x8DD074")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8DCA48", Offset = "0x8DCA48", VA = "0x8DCA48")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8DCBA8", Offset = "0x8DCBA8", VA = "0x8DCBA8")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8DD298", Offset = "0x8DD298", VA = "0x8DD298")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8DBF44", Offset = "0x8DBF44", VA = "0x8DBF44")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8DA34C", Offset = "0x8DA34C", VA = "0x8DA34C")]
	public void ReInit()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8D97FC", Offset = "0x8D97FC", VA = "0x8D97FC")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8DD7F8", Offset = "0x8DD7F8", VA = "0x8DD7F8")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8DCD08", Offset = "0x8DCD08", VA = "0x8DCD08")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8DDA20", Offset = "0x8DDA20", VA = "0x8DDA20")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8DC0C4", Offset = "0x8DC0C4", VA = "0x8DC0C4")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000090")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8E0860", Offset = "0x8E0860", VA = "0x8E0860", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8E112C", Offset = "0x8E112C", VA = "0x8E112C", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8E1254", Offset = "0x8E1254", VA = "0x8E1254", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8E1A78", Offset = "0x8E1A78", VA = "0x8E1A78", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8E1130", Offset = "0x8E1130", VA = "0x8E1130")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8E1B30", Offset = "0x8E1B30", VA = "0x8E1B30")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8E0BD0", Offset = "0x8E0BD0", VA = "0x8E0BD0")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8E0FE4", Offset = "0x8E0FE4", VA = "0x8E0FE4")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8E1C38", Offset = "0x8E1C38", VA = "0x8E1C38")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x8E1E50", Offset = "0x8E1E50", VA = "0x8E1E50")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x8E1D0C", Offset = "0x8E1D0C", VA = "0x8E1D0C")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x8E1A80", Offset = "0x8E1A80", VA = "0x8E1A80")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x8E202C", Offset = "0x8E202C", VA = "0x8E202C")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8E1258", Offset = "0x8E1258", VA = "0x8E1258")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x8E22D8", Offset = "0x8E22D8", VA = "0x8E22D8")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x8E2238", Offset = "0x8E2238", VA = "0x8E2238")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8DD714", Offset = "0x8DD714", VA = "0x8DD714")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60004CE")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60004CF")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60004D0")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60004D1")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x935AB4", Offset = "0x935AB4", VA = "0x935AB4")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x2000092")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x899AA0", Offset = "0x899AA0", VA = "0x899AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x899B34", Offset = "0x899B34", VA = "0x899B34")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x899D10", Offset = "0x899D10", VA = "0x899D10")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000093")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x8E6854", Offset = "0x8E6854", VA = "0x8E6854")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x8E68FC", Offset = "0x8E68FC", VA = "0x8E68FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x8E6A94", Offset = "0x8E6A94", VA = "0x8E6A94")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000094")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x88857C", Offset = "0x88857C", VA = "0x88857C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x8886B0", Offset = "0x8886B0", VA = "0x8886B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x88873C", Offset = "0x88873C", VA = "0x88873C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x888580", Offset = "0x888580", VA = "0x888580")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x8886EC", Offset = "0x8886EC", VA = "0x8886EC")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x888754", Offset = "0x888754", VA = "0x888754")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000095")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8D8", Offset = "0x62E8D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xA72A90", Offset = "0xA72A90", VA = "0xA72A90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xA72A98", Offset = "0xA72A98", VA = "0xA72A98")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40004F0")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA72650", Offset = "0xA72650", VA = "0xA72650")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA72790", Offset = "0xA72790", VA = "0xA72790")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA72814", Offset = "0xA72814", VA = "0xA72814")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA72A20", Offset = "0xA72A20", VA = "0xA72A20")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000096")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA71254", Offset = "0xA71254", VA = "0xA71254")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA712B0", Offset = "0xA712B0", VA = "0xA712B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xA71308", Offset = "0xA71308", VA = "0xA71308")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AC94", Offset = "0x62AC94")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA71310", Offset = "0xA71310", VA = "0xA71310")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA71484", Offset = "0xA71484", VA = "0xA71484")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA713EC", Offset = "0xA713EC", VA = "0xA713EC")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA71488", Offset = "0xA71488", VA = "0xA71488")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA71588", Offset = "0xA71588", VA = "0xA71588")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA71694", Offset = "0xA71694", VA = "0xA71694")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000098")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x8E7110", Offset = "0x8E7110", VA = "0x8E7110")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x8E71A4", Offset = "0x8E71A4", VA = "0x8E71A4")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000099")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xBD3EC8", Offset = "0xBD3EC8", VA = "0xBD3EC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xBD3F5C", Offset = "0xBD3F5C", VA = "0xBD3F5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xBD3FF0", Offset = "0xBD3FF0", VA = "0xBD3FF0")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xBD42BC", Offset = "0xBD42BC", VA = "0xBD42BC")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x200009A")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FAC8", Offset = "0x62FAC8")]
	public bool trackRotation;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FB00", Offset = "0x62FB00")]
	public bool trackPosition;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700009C")]
	public Ray Gaze
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x8D338C", Offset = "0x8D338C", VA = "0x8D338C")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x8D3878", Offset = "0x8D3878", VA = "0x8D3878")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8D3428", Offset = "0x8D3428", VA = "0x8D3428")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x8D3A70", Offset = "0x8D3A70", VA = "0x8D3A70")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x200009B")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FB38", Offset = "0x62FB38")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FB48", Offset = "0x62FB48")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FB58", Offset = "0x62FB58")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700009D")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x8DAD50", Offset = "0x8DAD50", VA = "0x8DAD50")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700009E")]
	public Vector3 Position
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x8DAE94", Offset = "0x8DAE94", VA = "0x8DAE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389C4", Offset = "0x6389C4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x8DAEA0", Offset = "0x8DAEA0", VA = "0x8DAEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389D4", Offset = "0x6389D4")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x8DAEAC", Offset = "0x8DAEAC", VA = "0x8DAEAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389E4", Offset = "0x6389E4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x8DAEB8", Offset = "0x8DAEB8", VA = "0x8DAEB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6389F4", Offset = "0x6389F4")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x8DAEC4", Offset = "0x8DAEC4", VA = "0x8DAEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A04", Offset = "0x638A04")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x8DAEE0", Offset = "0x8DAEE0", VA = "0x8DAEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A14", Offset = "0x638A14")]
		protected set
		{
		}
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x8DAEFC", Offset = "0x8DAEFC", VA = "0x8DAEFC")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x8DB0B4", Offset = "0x8DB0B4", VA = "0x8DB0B4")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x8DB134", Offset = "0x8DB134", VA = "0x8DB134")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x8DAF48", Offset = "0x8DAF48", VA = "0x8DAF48")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x8DB264", Offset = "0x8DB264", VA = "0x8DB264")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200009C")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000388")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000389")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x170000A1")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x8D39A8", Offset = "0x8D39A8", VA = "0x8D39A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x8DDAE8", Offset = "0x8DDAE8", VA = "0x8DDAE8")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x8DDC94", Offset = "0x8DDC94", VA = "0x8DDC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A24", Offset = "0x638A24")]
		add
		{
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x8DDD84", Offset = "0x8DDD84", VA = "0x8DDD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A34", Offset = "0x638A34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x8DDE74", Offset = "0x8DDE74", VA = "0x8DDE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A44", Offset = "0x638A44")]
		add
		{
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x8DDF64", Offset = "0x8DDF64", VA = "0x8DDF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A54", Offset = "0x638A54")]
		remove
		{
		}
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x8DDA2C", Offset = "0x8DDA2C", VA = "0x8DDA2C")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x8DDB58", Offset = "0x8DDB58", VA = "0x8DDB58")]
	public void Init()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x8D8A58", Offset = "0x8D8A58", VA = "0x8D8A58")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x8DE294", Offset = "0x8DE294", VA = "0x8DE294")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x8DE054", Offset = "0x8DE054", VA = "0x8DE054")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x8D9F68", Offset = "0x8D9F68", VA = "0x8D9F68")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x8D8E8C", Offset = "0x8D8E8C", VA = "0x8D8E8C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x8D702C", Offset = "0x8D702C", VA = "0x8D702C")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x8D6BEC", Offset = "0x8D6BEC", VA = "0x8D6BEC")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x8DE3D0", Offset = "0x8DE3D0", VA = "0x8DE3D0")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x8DFA2C", Offset = "0x8DFA2C", VA = "0x8DFA2C")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x8DF8A8", Offset = "0x8DF8A8", VA = "0x8DF8A8")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x200009D")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x82D164", Offset = "0x82D164", VA = "0x82D164")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200009E")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x200038A")]
	public struct Lenses
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001A76")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001A77")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001A78")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x200038B")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x200038C")]
	public struct Distortion
	{
		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x6C7A14", Offset = "0x6C7A14", VA = "0x6C7A14")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x6C7A1C", Offset = "0x6C7A1C", VA = "0x6C7A1C")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x6C7A24", Offset = "0x6C7A24", VA = "0x6C7A24")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200038D")]
	public struct Device
	{
		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xF25E1C", Offset = "0xF25E1C", VA = "0xF25E1C")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xF25EB4", Offset = "0xF25EB4", VA = "0xF25EB4")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xF25F5C", Offset = "0xF25F5C", VA = "0xF25F5C")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xF262A8", Offset = "0xF262A8", VA = "0xF262A8")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xF264D4", Offset = "0xF264D4", VA = "0xF264D4")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xF25EAC", Offset = "0xF25EAC", VA = "0xF25EAC")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200009F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62ACF8", Offset = "0x62ACF8")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x8D31E0", Offset = "0x8D31E0", VA = "0x8D31E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x8D3268", Offset = "0x8D3268", VA = "0x8D3268")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x8D337C", Offset = "0x8D337C", VA = "0x8D337C")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20000A0")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB1AC38", Offset = "0xB1AC38", VA = "0xB1AC38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB1AC98", Offset = "0xB1AC98", VA = "0xB1AC98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB1ADCC", Offset = "0xB1ADCC", VA = "0xB1ADCC")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB1AE74", Offset = "0xB1AE74", VA = "0xB1AE74")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20000A1")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x200038E")]
	public enum Mode
	{
		[Token(Token = "0x4001A88")]
		Click,
		[Token(Token = "0x4001A89")]
		Gaze
	}

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62FB88", Offset = "0x62FB88")]
	public string ClickInputName;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62FBC0", Offset = "0x62FBC0")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FBF8", Offset = "0x62FBF8")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FC08", Offset = "0x62FC08")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x170000A2")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0xB1AE7C", Offset = "0xB1AE7C", VA = "0xB1AE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A64", Offset = "0x638A64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000526")]
		[Address(RVA = "0xB1AECC", Offset = "0xB1AECC", VA = "0xB1AECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A74", Offset = "0x638A74")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xB1AF28", Offset = "0xB1AF28", VA = "0xB1AF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A84", Offset = "0x638A84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xB1AF78", Offset = "0xB1AF78", VA = "0xB1AF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638A94", Offset = "0x638A94")]
		private set
		{
		}
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xB1AFD0", Offset = "0xB1AFD0", VA = "0xB1AFD0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xB1AFF4", Offset = "0xB1AFF4", VA = "0xB1AFF4")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xB1B1F4", Offset = "0xB1B1F4", VA = "0xB1B1F4")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xB1B6E8", Offset = "0xB1B6E8", VA = "0xB1B6E8")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AD5C", Offset = "0x62AD5C")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FC18", Offset = "0x62FC18")]
	public Transform Crosshair;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xB1B750", Offset = "0xB1B750", VA = "0xB1B750")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xB1B7B0", Offset = "0xB1B7B0", VA = "0xB1B7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xB1B818", Offset = "0xB1B818", VA = "0xB1B818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xB1B928", Offset = "0xB1B928", VA = "0xB1B928")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xB1BA20", Offset = "0xB1BA20", VA = "0xB1BA20")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20000A3")]
public enum RenderEventType
{
	[Token(Token = "0x4000539")]
	InitRenderThread = 1024,
	[Token(Token = "0x400053A")]
	Pause,
	[Token(Token = "0x400053B")]
	Resume,
	[Token(Token = "0x400053C")]
	LeftEyeEndFrame,
	[Token(Token = "0x400053D")]
	RightEyeEndFrame,
	[Token(Token = "0x400053E")]
	TimeWarp,
	[Token(Token = "0x400053F")]
	ResetVrModeParms,
	[Token(Token = "0x4000540")]
	ShutdownRenderThread,
	[Token(Token = "0x4000541")]
	BeginEye,
	[Token(Token = "0x4000542")]
	EndEye,
	[Token(Token = "0x4000543")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000544")]
	BoundaryRenderRight,
	[Token(Token = "0x4000545")]
	BothEyeEndFrame,
	[Token(Token = "0x4000546")]
	CameraFrameLeft,
	[Token(Token = "0x4000547")]
	CameraFrameRight,
	[Token(Token = "0x4000548")]
	StartCameraFrame,
	[Token(Token = "0x4000549")]
	StopCameraFrame
}
[Token(Token = "0x20000A4")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x200038F")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x400054A")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x400054B")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400054C")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400054D")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400054E")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400054F")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000550")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x8D9370", Offset = "0x8D9370", VA = "0x8D9370")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x8DA8AC", Offset = "0x8DA8AC", VA = "0x8DA8AC")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x8DA8B4", Offset = "0x8DA8B4", VA = "0x8DA8B4")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x8DA8D4", Offset = "0x8DA8D4", VA = "0x8DA8D4")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x8DA8A4", Offset = "0x8DA8A4", VA = "0x8DA8A4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x638AA4", Offset = "0x638AA4")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x8DA8E8", Offset = "0x8DA8E8", VA = "0x8DA8E8")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x20000A5")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FC50", Offset = "0x62FC50")]
	public GameObject cursor;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x8DFC04", Offset = "0x8DFC04", VA = "0x8DFC04", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x8DFC94", Offset = "0x8DFC94", VA = "0x8DFC94", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x8DFF94", Offset = "0x8DFF94", VA = "0x8DFF94", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x8E001C", Offset = "0x8E001C", VA = "0x8E001C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x8E0058", Offset = "0x8E0058", VA = "0x8E0058")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x8E01BC", Offset = "0x8E01BC", VA = "0x8E01BC")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x8E035C", Offset = "0x8E035C", VA = "0x8E035C")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8DFDA0", Offset = "0x8DFDA0", VA = "0x8DFDA0")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x8E0584", Offset = "0x8E0584", VA = "0x8E0584")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x8E080C", Offset = "0x8E080C", VA = "0x8E080C")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x20000A6")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400055F")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000560")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000561")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x170000A4")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xB1E128", Offset = "0xB1E128", VA = "0xB1E128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB1E1DC", Offset = "0xB1E1DC", VA = "0xB1E1DC")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB1E678", Offset = "0xB1E678", VA = "0xB1E678")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB1ED4C", Offset = "0xB1ED4C", VA = "0xB1ED4C")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB1EEC4", Offset = "0xB1EEC4", VA = "0xB1EEC4")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB1F2CC", Offset = "0xB1F2CC", VA = "0xB1F2CC")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xB1F004", Offset = "0xB1F004", VA = "0xB1F004")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB1F240", Offset = "0xB1F240", VA = "0xB1F240")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB1E1D4", Offset = "0xB1E1D4", VA = "0xB1E1D4")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FCA8", Offset = "0x62FCA8")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FCB8", Offset = "0x62FCB8")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FCC8", Offset = "0x62FCC8")]
	private int <z>k__BackingField;

	[Token(Token = "0x170000A5")]
	public int x
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xCE1DF0", Offset = "0xCE1DF0", VA = "0xCE1DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B08", Offset = "0x638B08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xCE1DF8", Offset = "0xCE1DF8", VA = "0xCE1DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B18", Offset = "0x638B18")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public int y
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xCE1E00", Offset = "0xCE1E00", VA = "0xCE1E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B28", Offset = "0x638B28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xCE1E08", Offset = "0xCE1E08", VA = "0xCE1E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B38", Offset = "0x638B38")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public int z
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xCE1E10", Offset = "0xCE1E10", VA = "0xCE1E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B48", Offset = "0x638B48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xCE1E18", Offset = "0xCE1E18", VA = "0xCE1E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638B58", Offset = "0x638B58")]
		set
		{
		}
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xCE1E20", Offset = "0xCE1E20", VA = "0xCE1E20")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xCE1E28", Offset = "0xCE1E28", VA = "0xCE1E28")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x20000A8")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000556")]
	[Address(RVA = "0xB1AC30", Offset = "0xB1AC30", VA = "0xB1AC30")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x20000A9")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000567")]
	App = 1,
	[Token(Token = "0x4000568")]
	TouchPad = 2,
	[Token(Token = "0x4000569")]
	Trigger = 4
}
[Token(Token = "0x20000AA")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xB1BA7C", Offset = "0xB1BA7C", VA = "0xB1BA7C", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xB1BAF8", Offset = "0xB1BAF8", VA = "0xB1BAF8")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xB1BBC8", Offset = "0xB1BBC8", VA = "0xB1BBC8")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xB1BC98", Offset = "0xB1BC98", VA = "0xB1BC98", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xB1C00C", Offset = "0xB1C00C", VA = "0xB1C00C", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB1C0CC", Offset = "0xB1C0CC", VA = "0xB1C0CC", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB1C1BC", Offset = "0xB1C1BC", VA = "0xB1C1BC", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB1C27C", Offset = "0xB1C27C", VA = "0xB1C27C", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB1C484", Offset = "0xB1C484", VA = "0xB1C484", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB1C534", Offset = "0xB1C534", VA = "0xB1C534", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB1C5D0", Offset = "0xB1C5D0", VA = "0xB1C5D0", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xB1D1F8", Offset = "0xB1D1F8", VA = "0xB1D1F8", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xB1D240", Offset = "0xB1D240", VA = "0xB1D240", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB1D2E0", Offset = "0xB1D2E0", VA = "0xB1D2E0", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xB1D39C", Offset = "0xB1D39C", VA = "0xB1D39C", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB1D678", Offset = "0xB1D678", VA = "0xB1D678", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xB1D944", Offset = "0xB1D944", VA = "0xB1D944", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xB1E02C", Offset = "0xB1E02C", VA = "0xB1E02C")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8E8", Offset = "0x62E8E8")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xB2212C", Offset = "0xB2212C", VA = "0xB2212C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xB22194", Offset = "0xB22194", VA = "0xB22194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xB21A7C", Offset = "0xB21A7C", VA = "0xB21A7C")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xB21D90", Offset = "0xB21D90", VA = "0xB21D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xB21D94", Offset = "0xB21D94", VA = "0xB21D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xB22134", Offset = "0xB22134", VA = "0xB22134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000573")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xB2160C", Offset = "0xB2160C", VA = "0xB2160C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xB21618", Offset = "0xB21618", VA = "0xB21618", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xB21624", Offset = "0xB21624", VA = "0xB21624", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xB21630", Offset = "0xB21630", VA = "0xB21630", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xB219EC", Offset = "0xB219EC", VA = "0xB219EC", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638B68", Offset = "0x638B68")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xB21AA8", Offset = "0xB21AA8", VA = "0xB21AA8", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB21D88", Offset = "0xB21D88", VA = "0xB21D88")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x20000AC")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x20000AD")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x20000AE")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xB2219C", Offset = "0xB2219C", VA = "0xB2219C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638BCC", Offset = "0x638BCC")]
		add
		{
		}
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xB22240", Offset = "0xB22240", VA = "0xB22240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638BDC", Offset = "0x638BDC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xB222E4", Offset = "0xB222E4", VA = "0xB222E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638BEC", Offset = "0x638BEC")]
		add
		{
		}
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xB22388", Offset = "0xB22388", VA = "0xB22388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638BFC", Offset = "0x638BFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB2242C", Offset = "0xB2242C", VA = "0xB2242C", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB2244C", Offset = "0xB2244C", VA = "0xB2244C", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xB2246C", Offset = "0xB2246C", VA = "0xB2246C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB226B0", Offset = "0xB226B0", VA = "0xB226B0", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB226BC", Offset = "0xB226BC", VA = "0xB226BC", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB22B30", Offset = "0xB22B30", VA = "0xB22B30", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB22C38", Offset = "0xB22C38", VA = "0xB22C38", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB22DBC", Offset = "0xB22DBC", VA = "0xB22DBC", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB23088", Offset = "0xB23088", VA = "0xB23088", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB23138", Offset = "0xB23138", VA = "0xB23138", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB23160", Offset = "0xB23160", VA = "0xB23160")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x20000AF")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB23174", Offset = "0xB23174", VA = "0xB23174", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB23288", Offset = "0xB23288", VA = "0xB23288", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB23320", Offset = "0xB23320", VA = "0xB23320")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x20000B0")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E8F8", Offset = "0x62E8F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xB24248", Offset = "0xB24248", VA = "0xB24248")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xB24250", Offset = "0xB24250", VA = "0xB24250")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000586")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x170000A8")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xB24044", Offset = "0xB24044", VA = "0xB24044", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xB23328", Offset = "0xB23328", VA = "0xB23328", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xB234D8", Offset = "0xB234D8", VA = "0xB234D8", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB2376C", Offset = "0xB2376C", VA = "0xB2376C", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB23A8C", Offset = "0xB23A8C", VA = "0xB23A8C", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB24100", Offset = "0xB24100", VA = "0xB24100")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x20000B1")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x20000B2")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x20000B3")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x2000392")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001A91")]
		ClickOnButtonUp,
		[Token(Token = "0x4001A92")]
		ClickOnButtonDown
	}

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB24260", Offset = "0xB24260", VA = "0xB24260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C0C", Offset = "0x638C0C")]
		add
		{
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xB24304", Offset = "0xB24304", VA = "0xB24304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C1C", Offset = "0x638C1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xB243A8", Offset = "0xB243A8", VA = "0xB243A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C2C", Offset = "0x638C2C")]
		add
		{
		}
		[Token(Token = "0x6000595")]
		[Address(RVA = "0xB2444C", Offset = "0xB2444C", VA = "0xB2444C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C3C", Offset = "0x638C3C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xB244F0", Offset = "0xB244F0", VA = "0xB244F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C4C", Offset = "0x638C4C")]
		add
		{
		}
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xB24594", Offset = "0xB24594", VA = "0xB24594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C5C", Offset = "0x638C5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xB24638", Offset = "0xB24638", VA = "0xB24638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C6C", Offset = "0x638C6C")]
		add
		{
		}
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xB246DC", Offset = "0xB246DC", VA = "0xB246DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C7C", Offset = "0x638C7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xB24780", Offset = "0xB24780", VA = "0xB24780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C8C", Offset = "0x638C8C")]
		add
		{
		}
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xB24824", Offset = "0xB24824", VA = "0xB24824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638C9C", Offset = "0x638C9C")]
		remove
		{
		}
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB248C8", Offset = "0xB248C8", VA = "0xB248C8", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xB248D0", Offset = "0xB248D0", VA = "0xB248D0", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xB249B0", Offset = "0xB249B0", VA = "0xB249B0", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xB24A44", Offset = "0xB24A44", VA = "0xB24A44", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xB24AD8", Offset = "0xB24AD8", VA = "0xB24AD8", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xB24AF4", Offset = "0xB24AF4", VA = "0xB24AF4", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB24B00", Offset = "0xB24B00", VA = "0xB24B00", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xB24BE8", Offset = "0xB24BE8", VA = "0xB24BE8", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xB24CB4", Offset = "0xB24CB4", VA = "0xB24CB4", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xB24D80", Offset = "0xB24D80", VA = "0xB24D80", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xB24DCC", Offset = "0xB24DCC", VA = "0xB24DCC", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xB24E18", Offset = "0xB24E18", VA = "0xB24E18", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xB24ED8", Offset = "0xB24ED8", VA = "0xB24ED8", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xB24EEC", Offset = "0xB24EEC", VA = "0xB24EEC", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xB24F30", Offset = "0xB24F30", VA = "0xB24F30", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB24F94", Offset = "0xB24F94", VA = "0xB24F94", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB2516C", Offset = "0xB2516C", VA = "0xB2516C")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40005B1")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xF26688", Offset = "0xF26688", VA = "0xF26688")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xF266AC", Offset = "0xF266AC", VA = "0xF266AC")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xF266D0", Offset = "0xF266D0", VA = "0xF266D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xF268CC", Offset = "0xF268CC", VA = "0xF268CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xF266E4", Offset = "0xF266E4", VA = "0xF266E4")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xF26838", Offset = "0xF26838", VA = "0xF26838")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xF27184", Offset = "0xF27184", VA = "0xF27184")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xF27328", Offset = "0xF27328", VA = "0xF27328")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xF26A74", Offset = "0xF26A74", VA = "0xF26A74")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xF277B8", Offset = "0xF277B8", VA = "0xF277B8")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xF2696C", Offset = "0xF2696C", VA = "0xF2696C")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xF270CC", Offset = "0xF270CC", VA = "0xF270CC")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xF27850", Offset = "0xF27850", VA = "0xF27850")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xF27340", Offset = "0xF27340", VA = "0xF27340")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xF26F48", Offset = "0xF26F48", VA = "0xF26F48")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xF277CC", Offset = "0xF277CC", VA = "0xF277CC")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xF27980", Offset = "0xF27980", VA = "0xF27980")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x20000B5")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8E29EC", Offset = "0x8E29EC", VA = "0x8E29EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8E2ABC", Offset = "0x8E2ABC", VA = "0x8E2ABC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8E2B10", Offset = "0x8E2B10", VA = "0x8E2B10")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8E2BB0", Offset = "0x8E2BB0", VA = "0x8E2BB0")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8E2C50", Offset = "0x8E2C50", VA = "0x8E2C50")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8E2CD4", Offset = "0x8E2CD4", VA = "0x8E2CD4")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8E2D58", Offset = "0x8E2D58", VA = "0x8E2D58")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8E2E70", Offset = "0x8E2E70", VA = "0x8E2E70")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8E2F88", Offset = "0x8E2F88", VA = "0x8E2F88")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8E3028", Offset = "0x8E3028", VA = "0x8E3028")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8E30B8", Offset = "0x8E30B8", VA = "0x8E30B8")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8E2A54", Offset = "0x8E2A54", VA = "0x8E2A54")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8E2A5C", Offset = "0x8E2A5C", VA = "0x8E2A5C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x8E2B08", Offset = "0x8E2B08", VA = "0x8E2B08")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x8E2A8C", Offset = "0x8E2A8C", VA = "0x8E2A8C")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x8E2B00", Offset = "0x8E2B00", VA = "0x8E2B00")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x8E3148", Offset = "0x8E3148", VA = "0x8E3148")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x20000B6")]
[ExecuteInEditMode]
public class Planet : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mobileShader;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool atmosphere;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool updateChangeInRealTime;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material PlanetMaterial;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ringMaterial;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hdrExposure;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color atmoColor;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float atmoStrength;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float kr;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float km;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float outerScaleFactor;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float innerRadius;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float outerRadius;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float scaleDepth;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float scale;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float gamma;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform[] shadow;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int shadowNumber;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x83F010", Offset = "0x83F010", VA = "0x83F010")]
	public void setShadowNumber(int n)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x83F094", Offset = "0x83F094", VA = "0x83F094")]
	public void setShadow(Transform p, int n)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x83FAC8", Offset = "0x83FAC8", VA = "0x83FAC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x83FC10", Offset = "0x83FC10", VA = "0x83FC10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x83F78C", Offset = "0x83F78C", VA = "0x83F78C")]
	private void InitRingMaterial(Material mat)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x83F1C8", Offset = "0x83F1C8", VA = "0x83F1C8")]
	private void InitMaterial(Material mat)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x83FCE4", Offset = "0x83FCE4", VA = "0x83FCE4")]
	public Planet()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ShadowManager : MonoBehaviour
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] planet;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x13650A8", Offset = "0x13650A8", VA = "0x13650A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x136528C", Offset = "0x136528C", VA = "0x136528C")]
	public ShadowManager()
	{
	}
}
[Token(Token = "0x20000B8")]
public class FpsDisplay : MonoBehaviour
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xAC3860", Offset = "0xAC3860", VA = "0xAC3860")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xAC38AC", Offset = "0xAC38AC", VA = "0xAC38AC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xAC3A8C", Offset = "0xAC3A8C", VA = "0xAC3A8C")]
	public FpsDisplay()
	{
	}
}
[Token(Token = "0x20000B9")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flySpeed;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 flySpeedLimit;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationSpeed;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 sensitivity;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 smoothing;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mouseDelta;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mouseAbsolute;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 smoothMouse;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xAC3A94", Offset = "0xAC3A94", VA = "0xAC3A94")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xAC3FF0", Offset = "0xAC3FF0", VA = "0xAC3FF0")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x20000BA")]
public class RotatingCamera : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x934FAC", Offset = "0x934FAC", VA = "0x934FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x9350A0", Offset = "0x9350A0", VA = "0x9350A0")]
	public RotatingCamera()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ShowOffSceneManager : MonoBehaviour
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float planetRotSpeed;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sunRotSpeed;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform sun;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] planets;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject planet;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1367494", Offset = "0x1367494", VA = "0x1367494")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x13675E4", Offset = "0x13675E4", VA = "0x13675E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x13676B4", Offset = "0x13676B4", VA = "0x13676B4")]
	public void NextButton()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x13678A4", Offset = "0x13678A4", VA = "0x13678A4")]
	public void PreviousButton()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1367A94", Offset = "0x1367A94", VA = "0x1367A94")]
	public ShowOffSceneManager()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000393")]
	private static class Uniforms
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x87D654", Offset = "0x87D654", VA = "0x87D654")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x87D6D0", Offset = "0x87D6D0", VA = "0x87D6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x87D88C", Offset = "0x87D88C", VA = "0x87D88C")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class FABRIK_IK : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Handle;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x87E040", Offset = "0x87E040", VA = "0x87E040")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x87E044", Offset = "0x87E044", VA = "0x87E044")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x87E048", Offset = "0x87E048", VA = "0x87E048")]
	public FABRIK_IK()
	{
	}
}
[Token(Token = "0x20000BE")]
public class THC1_ctrl : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController controller;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int battle_state;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float runSpeed;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float turnSpeed;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gravity;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 moveDirection;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w_sp;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float r_sp;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1376348", Offset = "0x1376348", VA = "0x1376348")]
	private void Start()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x13763D8", Offset = "0x13763D8", VA = "0x13763D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1376A8C", Offset = "0x1376A8C", VA = "0x1376A8C")]
	public THC1_ctrl()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AgentAwareness : MonoBehaviour
{
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ProgressBarAttribute", RVA = "0x62FE28", Offset = "0x62FE28")]
	[SerializeField]
	private float _awarenessLevel;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gainRate;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decayRate;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float latchedDecayFactor;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float visionFactor;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lightSenseFactor;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playerDistanceFactor;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerDistanceRangeMin;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float playerDistanceRangeMax;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action onAware;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentVision agentVision;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float aggroTimer;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool justForcedAware;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool awarenessLatch;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool isAwarenessLatched;

	[Token(Token = "0x170000A9")]
	public float AwarenessLevel
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x95AC1C", Offset = "0x95AC1C", VA = "0x95AC1C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AA")]
	public bool IsAware
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x95525C", Offset = "0x95525C", VA = "0x95525C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x95AC24", Offset = "0x95AC24", VA = "0x95AC24")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x95ACB0", Offset = "0x95ACB0", VA = "0x95ACB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x95AFF0", Offset = "0x95AFF0", VA = "0x95AFF0")]
	public void ResetAwareness()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x95AFFC", Offset = "0x95AFFC", VA = "0x95AFFC")]
	public void Delatch()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x95B004", Offset = "0x95B004", VA = "0x95B004")]
	public void MakeAware(float delta = 1f)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x95B0C0", Offset = "0x95B0C0", VA = "0x95B0C0")]
	public void SetAggroTimer(float timer)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x95B0C8", Offset = "0x95B0C8", VA = "0x95B0C8")]
	public AgentAwareness()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AgentHearing : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perceptiveness;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<HearingSystem.Soundwave> onHeardSoundwave;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int listenerId;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x95B0E4", Offset = "0x95B0E4", VA = "0x95B0E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x95B150", Offset = "0x95B150", VA = "0x95B150")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x95B204", Offset = "0x95B204", VA = "0x95B204")]
	public void OnSoundwave(HearingSystem.Soundwave soundwave)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x95B284", Offset = "0x95B284", VA = "0x95B284")]
	public AgentHearing()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AgentLightSense : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer bodyRenderer;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _inLitRoom;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _inFlashlight;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _flashlightFactor;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _flashLightPos;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int updateFreq;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float updateTimer;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform bodyCenterReference;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PlayerFlashlight> flashlightCache;

	[Token(Token = "0x170000AB")]
	public bool InLitRoom
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x95B29C", Offset = "0x95B29C", VA = "0x95B29C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AC")]
	public bool InFlashlight
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x95B2A4", Offset = "0x95B2A4", VA = "0x95B2A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AD")]
	public float FlashlightFactor
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x95B2AC", Offset = "0x95B2AC", VA = "0x95B2AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AE")]
	public Vector3 FlashLightPosition
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x95B2B4", Offset = "0x95B2B4", VA = "0x95B2B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x95B2C0", Offset = "0x95B2C0", VA = "0x95B2C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x95B374", Offset = "0x95B374", VA = "0x95B374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x95B380", Offset = "0x95B380", VA = "0x95B380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x95B614", Offset = "0x95B614", VA = "0x95B614")]
	public AgentLightSense()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62ADE0", Offset = "0x62ADE0")]
public class AgentLookAt : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxWeight;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothSpeed;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _target;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LookAtIK ikController;

	[Token(Token = "0x170000AF")]
	public Transform Target
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x95B698", Offset = "0x95B698", VA = "0x95B698")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x95B6A0", Offset = "0x95B6A0", VA = "0x95B6A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x95B7A4", Offset = "0x95B7A4", VA = "0x95B7A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x95B804", Offset = "0x95B804", VA = "0x95B804")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x95B8AC", Offset = "0x95B8AC", VA = "0x95B8AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x95B6A4", Offset = "0x95B6A4", VA = "0x95B6A4")]
	public void SetTarget(Transform newTarget)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x95B9F8", Offset = "0x95B9F8", VA = "0x95B9F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x95BA20", Offset = "0x95BA20", VA = "0x95BA20")]
	public AgentLookAt()
	{
	}
}
[Token(Token = "0x20000C3")]
public class AgentUtils
{
	[Token(Token = "0x2000394")]
	public struct LODState
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool visibility;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool potentialVisibility;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool ragdollActive;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x6B49A0", Offset = "0x6B49A0", VA = "0x6B49A0")]
		public LODState(bool visibility = false, bool potentialVisibility = false, bool ragdollActive = false)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x6B49BC", Offset = "0x6B49BC", VA = "0x6B49BC")]
		public void Set(bool visibility = false, bool potentialVisibility = false)
		{
		}
	}

	[Token(Token = "0x2000395")]
	public class SerializedData
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ragdollData;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string navData;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string extra;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x95CAE4", Offset = "0x95CAE4", VA = "0x95CAE4")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int animAngry;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int animReact;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int animAttack;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int animHit;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly int animDeathEnter;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly int animDeathExit;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int animJump;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly int animLand;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly int animSpeed;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly int animSpeedLateral;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly int animHidden;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static readonly int animEventReactExit;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly int onAppear;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static readonly int onDie;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly int onDisappearStart;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static readonly int onDisappearEnd;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x95BA30", Offset = "0x95BA30", VA = "0x95BA30")]
	public static void RepositionOnNavMesh(Transform agentTransform, float maxDistance = 0.3f)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x956CB0", Offset = "0x956CB0", VA = "0x956CB0")]
	public static Vector3 MapToNavMesh(Vector3 point, float maxHeight = 3f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x95412C", Offset = "0x95412C", VA = "0x95412C")]
	public static bool MapToNavMesh(Vector3 point, out Vector3 result, float maxHeight = 3f)
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x954B8C", Offset = "0x954B8C", VA = "0x954B8C")]
	public static Vector3 RaycastDownToNavMesh(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x95BC78", Offset = "0x95BC78", VA = "0x95BC78")]
	public static bool Wander(Transform transform, AgentWalk agentWalk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x95C074", Offset = "0x95C074", VA = "0x95C074")]
	public static void ActivateInRoom(Transform transform)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x95C300", Offset = "0x95C300", VA = "0x95C300")]
	public static List<Collider> GetBodyColliders(GameObject obj, Collider moveCollider, Collider tpCollider, bool includeInactive = false)
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x95C460", Offset = "0x95C460", VA = "0x95C460")]
	public static bool SetLOD(LODState lodState, [Optional] GameObject lodCollider, [Optional] GameObject rootBone, [Optional] Animator animator, [Optional] NavMeshAgent navAgent, [Optional] AgentLightSense lightSense, [Optional] VisionTarget visionTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x956660", Offset = "0x956660", VA = "0x956660")]
	public static void RotateTowards(Transform transform, Vector3 target, float rotRate, [Optional] Vector3? upDir)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x9547C8", Offset = "0x9547C8", VA = "0x9547C8")]
	public static void RotateTowardsImmediate(Transform transform, Vector3 target, [Optional] Vector3? upDir)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x95C760", Offset = "0x95C760", VA = "0x95C760")]
	private static Quaternion GetRotationToTarget(Transform transform, Vector3 target, [Optional] Vector3? upDir)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x95C95C", Offset = "0x95C95C", VA = "0x95C95C")]
	public static SerializedData Serialize(IAgent agent, Health health, AgentWalk agentWalk, RagdollController ragdoll)
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x95CB78", Offset = "0x95CB78", VA = "0x95CB78")]
	public static void Deserialize(SerializedData data, Health health, AgentWalk agentWalk, RagdollController ragdoll, Action onDeathDelegate)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x95CD90", Offset = "0x95CD90", VA = "0x95CD90")]
	public AgentUtils()
	{
	}
}
[Token(Token = "0x20000C4")]
public class AgentVision : MonoBehaviour
{
	[Token(Token = "0x2000396")]
	public enum TargetPrioritization
	{
		[Token(Token = "0x4001A9C")]
		None,
		[Token(Token = "0x4001A9D")]
		Closest,
		[Token(Token = "0x4001A9E")]
		Furthest,
		[Token(Token = "0x4001A9F")]
		Security
	}

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outerViewAngle;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float outerViewLength;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outerDarkVision;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useInnerCone;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float innerViewAngle;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float innerViewLength;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float innerDarkVision;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _innerViewLengthScale;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "BitMaskAttribute", RVA = "0x62FE7C", Offset = "0x62FE7C")]
	public VisionSystem.TargetType targetMask;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask occludersMask;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform eyeTransform;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float viewYDelta;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int outerConeIdx;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int innerConeIdx;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _playerVisible;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 playerLastSeen;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TargetPrioritization targetPrioritization;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VisionTarget _priorityTarget;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 priorityTargetLastSeen;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public VisionSystem.TargetType priorityTargetLastType;

	[Token(Token = "0x170000B0")]
	public float InnerViewLengthScale
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x95D004", Offset = "0x95D004", VA = "0x95D004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x954E34", Offset = "0x954E34", VA = "0x954E34")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public bool PlayerVisible
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x95D128", Offset = "0x95D128", VA = "0x95D128")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B2")]
	public bool TargetVisible
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x9551EC", Offset = "0x9551EC", VA = "0x9551EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B3")]
	public VisionTarget PriorityTarget
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x95D130", Offset = "0x95D130", VA = "0x95D130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x95D138", Offset = "0x95D138", VA = "0x95D138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x95D00C", Offset = "0x95D00C", VA = "0x95D00C")]
	private void ResetInnerViewCone()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x95D290", Offset = "0x95D290", VA = "0x95D290")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x95D388", Offset = "0x95D388", VA = "0x95D388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x954B18", Offset = "0x954B18", VA = "0x954B18")]
	public void ForceUpdatePlayerLastSeen()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x95D94C", Offset = "0x95D94C", VA = "0x95D94C")]
	public AgentVision()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AE44", Offset = "0x62AE44")]
public class AgentWalk : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000397")]
	private class SerializedData
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool inOffMeshLink;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 offMeshPos;

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x95FCF0", Offset = "0x95FCF0", VA = "0x95FCF0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ILocomotion locomotion;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AgentLightSense lightSense;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool inDestination;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool destinationUnreachable;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform target;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 destination;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastPos;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastSpeed;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastRemainingDistance;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float stuckness;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float baseSpeed;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float baseAngularSpeed;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float baseAcceleration;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _speedFactor;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool rotate;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float turnSmoothing;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool setLateralSpeed;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FF00", Offset = "0x62FF00")]
	public float litSpeedFactor;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62FF38", Offset = "0x62FF38")]
	public bool useRootMotion;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool ignoreAnimatorMotion;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool inOffMeshLink;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 offMeshLinkStartPos;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 offMeshLinkEndPos;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Door offMeshLinkDoor;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool needsUpdateOffMeshLink;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool resetPathAfterOffMeshLink;

	[Token(Token = "0x170000B4")]
	public Vector3 Destination
	{
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x956644", Offset = "0x956644", VA = "0x956644")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000B5")]
	public float SpeedFactor
	{
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x95D984", Offset = "0x95D984", VA = "0x95D984")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x954AAC", Offset = "0x954AAC", VA = "0x954AAC")]
		set
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action<Door> onApproachDoor
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x95D98C", Offset = "0x95D98C", VA = "0x95D98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CAC", Offset = "0x638CAC")]
		add
		{
		}
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x95DA30", Offset = "0x95DA30", VA = "0x95DA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CBC", Offset = "0x638CBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action<Door> onDepartDoor
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x95DAD4", Offset = "0x95DAD4", VA = "0x95DAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CCC", Offset = "0x638CCC")]
		add
		{
		}
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x95DB78", Offset = "0x95DB78", VA = "0x95DB78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CDC", Offset = "0x638CDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action<Door> onCrossingDoor
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x95DC1C", Offset = "0x95DC1C", VA = "0x95DC1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CEC", Offset = "0x638CEC")]
		add
		{
		}
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x95DCC0", Offset = "0x95DCC0", VA = "0x95DCC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638CFC", Offset = "0x638CFC")]
		remove
		{
		}
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x95DD64", Offset = "0x95DD64", VA = "0x95DD64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x95DF18", Offset = "0x95DF18", VA = "0x95DF18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x95DFCC", Offset = "0x95DFCC", VA = "0x95DFCC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x95F6CC", Offset = "0x95F6CC", VA = "0x95F6CC")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x95F954", Offset = "0x95F954", VA = "0x95F954")]
	private void OnLocomotionMove()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x954D04", Offset = "0x954D04", VA = "0x954D04")]
	public bool GoTo(Vector3 dest, float stoppingDistance = 0.5f, float navMeshSampleRadius = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x954280", Offset = "0x954280", VA = "0x954280")]
	public void Chase(Transform target, float stoppingDistance = 0.5f)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x954764", Offset = "0x954764", VA = "0x954764")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x955294", Offset = "0x955294", VA = "0x955294")]
	public bool IsStopped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x9558C8", Offset = "0x9558C8", VA = "0x9558C8")]
	public void SetMovementEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x95FC58", Offset = "0x95FC58", VA = "0x95FC58")]
	public void Reposition(Vector3 newPos)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x95CAEC", Offset = "0x95CAEC", VA = "0x95CAEC", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x95CD04", Offset = "0x95CD04", VA = "0x95CD04", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x95FCF8", Offset = "0x95FCF8", VA = "0x95FCF8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x95FCFC", Offset = "0x95FCFC", VA = "0x95FCFC")]
	public AgentWalk()
	{
	}
}
[Token(Token = "0x20000C6")]
public class AnimSpasm : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer renderer;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62FFA0", Offset = "0x62FFA0")]
	public float effectFactor;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] validParents;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> bones;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion[] boneAngles;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] boneAnglesTarget;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float angleRange;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animSpeed;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minTimer;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxTimer;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _creepyMode;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float creepyModeAngleRange;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float creepyModeAnimSpeed;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource creepyAudio;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float creepyFactor;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float timer;

	[Token(Token = "0x170000B6")]
	public bool CreepyMode
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x969190", Offset = "0x969190", VA = "0x969190")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x969198", Offset = "0x969198", VA = "0x969198")]
		set
		{
		}
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9692C8", Offset = "0x9692C8", VA = "0x9692C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x969560", Offset = "0x969560", VA = "0x969560")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x9698C0", Offset = "0x9698C0", VA = "0x9698C0")]
	private void SetAngles(float curAngle)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x969A90", Offset = "0x969A90", VA = "0x969A90")]
	public AnimSpasm()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62AEA8", Offset = "0x62AEA8")]
[SelectionBase]
public class Blob : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x2000398")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Idle;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Wander;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Investigate;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Chase;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Attack;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Reposition;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Hurt;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State DeathFall;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Death;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Disappear;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x828FEC", Offset = "0x828FEC", VA = "0x828FEC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E908", Offset = "0x62E908")]
	private sealed class <DeserializeAfterStart_co>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Blob <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x82913C", Offset = "0x82913C", VA = "0x82913C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x8291A4", Offset = "0x8291A4", VA = "0x8291A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x828DC0", Offset = "0x828DC0", VA = "0x828DC0")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x828FFC", Offset = "0x828FFC", VA = "0x828FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x829000", Offset = "0x829000", VA = "0x829000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x829144", Offset = "0x829144", VA = "0x829144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TendrilLocomotion tendrilLocomotion;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BlobBodyAnim blobBodyAnim;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentVision agentVision;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeltFX meltFX;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VisionTarget visionTarget;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RagdollController ragdoll;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dissolve dissolve;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EyeController[] eyeControllers;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider moveCollider;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider tpCollider;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue deathSound;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue painSound;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float chaseDistance;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float attackCooldown;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool aggressive;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int hurtFXTaskId;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float fallSpeed;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float fallDistance;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DeathTask deathTask;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float deathFloatHeight;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x824E20", Offset = "0x824E20", VA = "0x824E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x824F34", Offset = "0x824F34", VA = "0x824F34", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x825088", Offset = "0x825088", VA = "0x825088", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x8251B0", Offset = "0x8251B0", VA = "0x8251B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x82582C", Offset = "0x82582C", VA = "0x82582C")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x8258D4", Offset = "0x8258D4", VA = "0x8258D4")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x825914", Offset = "0x825914", VA = "0x825914")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x825A1C", Offset = "0x825A1C", VA = "0x825A1C")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x825B0C", Offset = "0x825B0C", VA = "0x825B0C")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x825BEC", Offset = "0x825BEC", VA = "0x825BEC")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x825CDC", Offset = "0x825CDC", VA = "0x825CDC")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x825DCC", Offset = "0x825DCC", VA = "0x825DCC")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x825F1C", Offset = "0x825F1C", VA = "0x825F1C")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x825F3C", Offset = "0x825F3C", VA = "0x825F3C")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x826040", Offset = "0x826040", VA = "0x826040")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x8260F4", Offset = "0x8260F4", VA = "0x8260F4")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x826168", Offset = "0x826168", VA = "0x826168")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x826288", Offset = "0x826288", VA = "0x826288")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x8262C8", Offset = "0x8262C8", VA = "0x8262C8")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x826434", Offset = "0x826434", VA = "0x826434")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x826450", Offset = "0x826450", VA = "0x826450")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x82646C", Offset = "0x82646C", VA = "0x82646C")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x8265A4", Offset = "0x8265A4", VA = "0x8265A4")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x826AA4", Offset = "0x826AA4", VA = "0x826AA4")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x826BBC", Offset = "0x826BBC", VA = "0x826BBC")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x826BFC", Offset = "0x826BFC", VA = "0x826BFC")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x826D90", Offset = "0x826D90", VA = "0x826D90")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x826DD0", Offset = "0x826DD0", VA = "0x826DD0")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x826E74", Offset = "0x826E74", VA = "0x826E74")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x826E7C", Offset = "0x826E7C", VA = "0x826E7C")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8270B0", Offset = "0x8270B0", VA = "0x8270B0")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x8270BC", Offset = "0x8270BC", VA = "0x8270BC")]
	private void DeathFall_Enter()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x827204", Offset = "0x827204", VA = "0x827204")]
	private void DeathFall_Update()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x8273BC", Offset = "0x8273BC", VA = "0x8273BC")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x8276F0", Offset = "0x8276F0", VA = "0x8276F0")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x82797C", Offset = "0x82797C", VA = "0x82797C")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x827CE0", Offset = "0x827CE0", VA = "0x827CE0")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x827D00", Offset = "0x827D00", VA = "0x827D00")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x827DE4", Offset = "0x827DE4", VA = "0x827DE4")]
	private void OnMeltFXDisappear()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x827E5C", Offset = "0x827E5C", VA = "0x827E5C")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x827F1C", Offset = "0x827F1C", VA = "0x827F1C")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x827FAC", Offset = "0x827FAC", VA = "0x827FAC")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x828330", Offset = "0x828330", VA = "0x828330")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x828618", Offset = "0x828618", VA = "0x828618")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x8286B4", Offset = "0x8286B4", VA = "0x8286B4")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8287C0", Offset = "0x8287C0", VA = "0x8287C0")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x8288BC", Offset = "0x8288BC", VA = "0x8288BC", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x828B6C", Offset = "0x828B6C", VA = "0x828B6C", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x828B70", Offset = "0x828B70", VA = "0x828B70", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x825AAC", Offset = "0x825AAC", VA = "0x825AAC")]
	private void SetEyesMode(EyeController.Modes mode)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x828B78", Offset = "0x828B78", VA = "0x828B78", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x828BC0", Offset = "0x828BC0", VA = "0x828BC0", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x828C78", Offset = "0x828C78", VA = "0x828C78", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x825800", Offset = "0x825800", VA = "0x825800")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x828D44", Offset = "0x828D44", VA = "0x828D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638D0C", Offset = "0x638D0C")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x828DEC", Offset = "0x828DEC", VA = "0x828DEC")]
	private void OnSerializedDeath()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x828EE0", Offset = "0x828EE0", VA = "0x828EE0", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x828F58", Offset = "0x828F58", VA = "0x828F58")]
	public Blob()
	{
	}

	[SpecialName]
	[Token(Token = "0x600067F")]
	[Address(RVA = "0x828FF4", Offset = "0x828FF4", VA = "0x828FF4", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000C8")]
public class BlobBodyAnim : MonoBehaviour
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve hitReactCurve;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitReactSpeed;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 hitReactDir;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitReactProgress;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve angryCurveForward;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve angryCurveHeight;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float angrySpeed;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 angryLookDir;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float angryProgress;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x8291AC", Offset = "0x8291AC", VA = "0x8291AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x82703C", Offset = "0x82703C", VA = "0x82703C")]
	public void PlayReactToHit(Vector3 hitDir)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x8294DC", Offset = "0x8294DC", VA = "0x8294DC")]
	public void PlayAngry(Vector3 lookDir)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x8295B8", Offset = "0x8295B8", VA = "0x8295B8")]
	public BlobBodyAnim()
	{
	}
}
[Token(Token = "0x20000C9")]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask surfacesMask;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float checkDistance;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hoverDelta;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer quad;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 scale;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x8295D4", Offset = "0x8295D4", VA = "0x8295D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x829668", Offset = "0x829668", VA = "0x829668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x829A64", Offset = "0x829A64", VA = "0x829A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x829810", Offset = "0x829810", VA = "0x829810")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x829A68", Offset = "0x829A68", VA = "0x829A68")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x20000CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B05C", Offset = "0x62B05C")]
[SelectionBase]
public class Cosmonaut : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x200039A")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Hunt;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State React;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Chase;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Attack;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Investigate;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Hurt;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Recovery;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x85A678", Offset = "0x85A678", VA = "0x85A678")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E918", Offset = "0x62E918")]
	private sealed class <DeserializeAfterStart_co>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cosmonaut <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x85A7B0", Offset = "0x85A7B0", VA = "0x85A7B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x85A818", Offset = "0x85A818", VA = "0x85A818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x85A518", Offset = "0x85A518", VA = "0x85A518")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x85A688", Offset = "0x85A688", VA = "0x85A688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x85A68C", Offset = "0x85A68C", VA = "0x85A68C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x85A7B8", Offset = "0x85A7B8", VA = "0x85A7B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AgentLookAt lookAt;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider lodCollider;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider moveCollider;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider tpCollider;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue spawnSound;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue recoverySound;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource recoverySoundInstance;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue reactSound;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue attackSounds;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float audioYDelta;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chaseSpeedFactor;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float attackCooldown;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float recoveryCooldownMin;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float recoveryCooldownMax;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float huntCooldownVisitPlayer;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float huntCooldownVisitPlayerMin;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float huntCooldownVisitPlayerMax;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float huntCooldownActive;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float huntCooldownActiveMin;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float huntCooldownActiveMax;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool huntCanActiveHunt;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool huntCanEnterPlayerRoom;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Room lastPlayerRoom;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Room lastRoom;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ChaseTask chaseTask;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool wasChasing;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int hurtFXTaskId;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float recoveryCooldownWanted;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float recoveryTimer;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Door openDoor;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x8560D4", Offset = "0x8560D4", VA = "0x8560D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x8561C4", Offset = "0x8561C4", VA = "0x8561C4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x85621C", Offset = "0x85621C", VA = "0x85621C", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x856248", Offset = "0x856248", VA = "0x856248")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x856948", Offset = "0x856948", VA = "0x856948")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x856B64", Offset = "0x856B64", VA = "0x856B64")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x856C40", Offset = "0x856C40", VA = "0x856C40")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x856CF0", Offset = "0x856CF0", VA = "0x856CF0")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x856DE0", Offset = "0x856DE0", VA = "0x856DE0")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x856EF0", Offset = "0x856EF0", VA = "0x856EF0")]
	private void Hunt_Enter()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x857A14", Offset = "0x857A14", VA = "0x857A14")]
	private void Hunt_Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x857B24", Offset = "0x857B24", VA = "0x857B24")]
	private void Hunt_OnTimer()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x856FC8", Offset = "0x856FC8", VA = "0x856FC8")]
	private void RefreshHuntRestrictions()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x8571BC", Offset = "0x8571BC", VA = "0x8571BC")]
	private bool GoToHuntTarget(bool canEnterPlayerRoom, bool canActiveHunt)
	{
		return default(bool);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x857E44", Offset = "0x857E44", VA = "0x857E44")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x857FB0", Offset = "0x857FB0", VA = "0x857FB0")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x85817C", Offset = "0x85817C", VA = "0x85817C")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x858228", Offset = "0x858228", VA = "0x858228")]
	private void React_OnTimer()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x8582C4", Offset = "0x8582C4", VA = "0x8582C4")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x858330", Offset = "0x858330", VA = "0x858330")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x8584EC", Offset = "0x8584EC", VA = "0x8584EC")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x8585A4", Offset = "0x8585A4", VA = "0x8585A4")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x8586F8", Offset = "0x8586F8", VA = "0x8586F8")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x858894", Offset = "0x858894", VA = "0x858894")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x85893C", Offset = "0x85893C", VA = "0x85893C")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x8589D8", Offset = "0x8589D8", VA = "0x8589D8")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8589F8", Offset = "0x8589F8", VA = "0x8589F8")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x858ABC", Offset = "0x858ABC", VA = "0x858ABC")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x858B70", Offset = "0x858B70", VA = "0x858B70")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x858D78", Offset = "0x858D78", VA = "0x858D78")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x858DB8", Offset = "0x858DB8", VA = "0x858DB8")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x858F24", Offset = "0x858F24", VA = "0x858F24")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x858F2C", Offset = "0x858F2C", VA = "0x858F2C")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8590C8", Offset = "0x8590C8", VA = "0x8590C8")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8590D4", Offset = "0x8590D4", VA = "0x8590D4")]
	private void Recovery_Enter()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x8592DC", Offset = "0x8592DC", VA = "0x8592DC")]
	private void Recovery_Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x859440", Offset = "0x859440", VA = "0x859440")]
	private void Recovery_Exit()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x859654", Offset = "0x859654", VA = "0x859654")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x859A44", Offset = "0x859A44", VA = "0x859A44")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x859BB8", Offset = "0x859BB8", VA = "0x859BB8")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x859C54", Offset = "0x859C54", VA = "0x859C54")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x859D18", Offset = "0x859D18", VA = "0x859D18")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x859E18", Offset = "0x859E18", VA = "0x859E18")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x859EA8", Offset = "0x859EA8", VA = "0x859EA8")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x859FFC", Offset = "0x859FFC", VA = "0x859FFC")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x85A178", Offset = "0x85A178", VA = "0x85A178", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x85A2C8", Offset = "0x85A2C8", VA = "0x85A2C8", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x85A2CC", Offset = "0x85A2CC", VA = "0x85A2CC", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x85A2D4", Offset = "0x85A2D4", VA = "0x85A2D4", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x85A31C", Offset = "0x85A31C", VA = "0x85A31C", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x85A3D0", Offset = "0x85A3D0", VA = "0x85A3D0", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x85691C", Offset = "0x85691C", VA = "0x85691C")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x85A49C", Offset = "0x85A49C", VA = "0x85A49C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638D70", Offset = "0x638D70")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x85A544", Offset = "0x85A544", VA = "0x85A544", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x85A5BC", Offset = "0x85A5BC", VA = "0x85A5BC")]
	public Cosmonaut()
	{
	}

	[SpecialName]
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x85A680", Offset = "0x85A680", VA = "0x85A680", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000CB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B238", Offset = "0x62B238")]
[SelectionBase]
public class Crawler : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x200039C")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State IdleGround;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State IdleWall;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Wander;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State JumpingCharge;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Jumping;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State React;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State AggroGround;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State AggroWall;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Chase;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Investigate;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State DeathExplode;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Death;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FSM.State Disappear;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FSM.State Hidden;

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x862398", Offset = "0x862398", VA = "0x862398")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200039D")]
	private struct JumpData
	{
		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 start;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 startSpeed;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startNormal;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 target;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetNormal;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float distance;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isFloor;
	}

	[Token(Token = "0x200039E")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool crawling;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool jumping;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 jumpTarget;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 jumpNormal;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x862018", Offset = "0x862018", VA = "0x862018")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E928", Offset = "0x62E928")]
	private sealed class <DeserializeAfterStart_co>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crawler <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x862708", Offset = "0x862708", VA = "0x862708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x862770", Offset = "0x862770", VA = "0x862770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x862168", Offset = "0x862168", VA = "0x862168")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x8623A8", Offset = "0x8623A8", VA = "0x8623A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x8623AC", Offset = "0x8623AC", VA = "0x8623AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x862710", Offset = "0x862710", VA = "0x862710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentHearing agentHearing;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MeltFX meltFX;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RagdollController ragdoll;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dissolve dissolve;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VelocityEstimator velEstimator;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem deathFX;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SphereCollider mainBodyCollider;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Collider> bodyColliders;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Collider lodCollider;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue reactSound;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue deathSound;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue painSound;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue attackSounds;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue jumpStartSound;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue jumpLandSound;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int animParamJumpChargeExit;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int animParamReactExit;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isAggro;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool investigatePosition;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int attackDamage;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Scheduler.Cooldown attackCooldown;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float attackCooldownTimeMin;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float attackCooldownTimeMax;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hasDamagedPlayer;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Scheduler.Cooldown aggroEndCooldown;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float aggroEndCooldownTime;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float chaseDistance;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float chaseSpeedFactor;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool startHidden;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DraggableRotation hiddenDoor;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private JumpData jumpData;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<JumpData> jumpCacheTargets;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private RaycastHit[] jumpRaycasts;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Collider[] cacheColliders;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 jumpSpeed;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Vector3 jumpLastPos;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float jumpDistance;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Quaternion jumpStartRot;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Quaternion jumpTargetRot;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public DeathTask deathTask;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int lastDamageAmount;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x85B764", Offset = "0x85B764", VA = "0x85B764")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x85B824", Offset = "0x85B824", VA = "0x85B824", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x85BA14", Offset = "0x85BA14", VA = "0x85BA14", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x85BBA0", Offset = "0x85BBA0", VA = "0x85BBA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x85C288", Offset = "0x85C288", VA = "0x85C288")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x85C2C8", Offset = "0x85C2C8", VA = "0x85C2C8")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x85C2CC", Offset = "0x85C2CC", VA = "0x85C2CC")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x85C3D4", Offset = "0x85C3D4", VA = "0x85C3D4")]
	private void IdleGround_Enter()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x85C47C", Offset = "0x85C47C", VA = "0x85C47C")]
	private void IdleGround_OnTimer()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x85D624", Offset = "0x85D624", VA = "0x85D624")]
	private void IdleGround_Update()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x85D8C4", Offset = "0x85D8C4", VA = "0x85D8C4")]
	private void IdleWall_Enter()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x85D94C", Offset = "0x85D94C", VA = "0x85D94C")]
	private void IdleWall_OnTimer()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x85DA64", Offset = "0x85DA64", VA = "0x85DA64")]
	private void IdleWall_Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x85DAB8", Offset = "0x85DAB8", VA = "0x85DAB8")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x85DBFC", Offset = "0x85DBFC", VA = "0x85DBFC")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x85DCE8", Offset = "0x85DCE8", VA = "0x85DCE8")]
	private void Wander_Exit()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x85C5BC", Offset = "0x85C5BC", VA = "0x85C5BC")]
	private bool CalculateJump([Optional] Transform jumpObjective, int requiredInCache = 4, bool toGround = false, bool canEnterLitRooms = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x85DD2C", Offset = "0x85DD2C", VA = "0x85DD2C")]
	private void JumpingCharge_Enter()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x85DF44", Offset = "0x85DF44", VA = "0x85DF44")]
	private void JumpingCharge_Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x85E064", Offset = "0x85E064", VA = "0x85E064")]
	private void OnJumpChargeExit()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x85E16C", Offset = "0x85E16C", VA = "0x85E16C")]
	private void Jumping_Enter()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x85E43C", Offset = "0x85E43C", VA = "0x85E43C")]
	private void Jumping_Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x85EC1C", Offset = "0x85EC1C", VA = "0x85EC1C")]
	private void Jumping_Exit()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x85D700", Offset = "0x85D700", VA = "0x85D700")]
	private void SetAggro(bool inWall, bool forceReact = false, bool isHurt = false, bool canAttack = false)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x85EC3C", Offset = "0x85EC3C", VA = "0x85EC3C")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x85ED00", Offset = "0x85ED00", VA = "0x85ED00")]
	private void React_Update()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x85EDFC", Offset = "0x85EDFC", VA = "0x85EDFC")]
	private void OnReactExit()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x85EF04", Offset = "0x85EF04", VA = "0x85EF04")]
	private void AggroGround_Enter()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x85EF7C", Offset = "0x85EF7C", VA = "0x85EF7C")]
	private void AggroGround_OnTimer()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x85F278", Offset = "0x85F278", VA = "0x85F278")]
	private void AggroGround_Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x85F358", Offset = "0x85F358", VA = "0x85F358")]
	private void AggroWall_Enter()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x85F3D0", Offset = "0x85F3D0", VA = "0x85F3D0")]
	private void AggroWall_OnTimer()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x85F574", Offset = "0x85F574", VA = "0x85F574")]
	private void AggroWall_Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x85F654", Offset = "0x85F654", VA = "0x85F654")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x85F70C", Offset = "0x85F70C", VA = "0x85F70C")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x85F960", Offset = "0x85F960", VA = "0x85F960")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x85F9B8", Offset = "0x85F9B8", VA = "0x85F9B8")]
	private void Chase_OnTimer()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x85FB70", Offset = "0x85FB70", VA = "0x85FB70")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x85FC10", Offset = "0x85FC10", VA = "0x85FC10")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x85FC78", Offset = "0x85FC78", VA = "0x85FC78")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x85FD2C", Offset = "0x85FD2C", VA = "0x85FD2C")]
	private void Investigate_Exit()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x85FD70", Offset = "0x85FD70", VA = "0x85FD70")]
	private void DeathExplode_Enter()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x85FF18", Offset = "0x85FF18", VA = "0x85FF18")]
	private void DeathExplode_Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x85FFB0", Offset = "0x85FFB0", VA = "0x85FFB0")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x860380", Offset = "0x860380", VA = "0x860380")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x86096C", Offset = "0x86096C", VA = "0x86096C")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x860A6C", Offset = "0x860A6C", VA = "0x860A6C")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x860A8C", Offset = "0x860A8C", VA = "0x860A8C")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x860B48", Offset = "0x860B48", VA = "0x860B48")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x860C08", Offset = "0x860C08", VA = "0x860C08")]
	private void Hidden_Enter()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x860D10", Offset = "0x860D10", VA = "0x860D10")]
	private void Hidden_Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x860E84", Offset = "0x860E84", VA = "0x860E84")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x860F14", Offset = "0x860F14", VA = "0x860F14")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x861310", Offset = "0x861310", VA = "0x861310")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x86180C", Offset = "0x86180C", VA = "0x86180C")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8618A8", Offset = "0x8618A8", VA = "0x8618A8")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x861A18", Offset = "0x861A18", VA = "0x861A18")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x860620", Offset = "0x860620", VA = "0x860620", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x861B78", Offset = "0x861B78", VA = "0x861B78", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x861B7C", Offset = "0x861B7C", VA = "0x861B7C", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x861B84", Offset = "0x861B84", VA = "0x861B84", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x861BE4", Offset = "0x861BE4", VA = "0x861BE4", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x862020", Offset = "0x862020", VA = "0x862020", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x85C25C", Offset = "0x85C25C", VA = "0x85C25C")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x8620EC", Offset = "0x8620EC", VA = "0x8620EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638DD4", Offset = "0x638DD4")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x862194", Offset = "0x862194", VA = "0x862194", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x86220C", Offset = "0x86220C", VA = "0x86220C")]
	public Crawler()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000706")]
	[Address(RVA = "0x8623A0", Offset = "0x8623A0", VA = "0x8623A0", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B3C4", Offset = "0x62B3C4")]
[SelectionBase]
public class Cytoma : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x20003A0")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Hidden;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Deploy;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State ReHide;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Idle;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Wander;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Agressive;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Reposition;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State LongReposition;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Chase;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Investigate;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Hurt;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State ChargeAim;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Charge;

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x86C664", Offset = "0x86C664", VA = "0x86C664")]
		public EStates()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A1")]
	private struct HidingPos
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 center;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 fwdAxis;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 upAxis;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 referencePoint;
	}

	[Token(Token = "0x20003A2")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hiding;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HidingPos hidingPos;

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x86C3AC", Offset = "0x86C3AC", VA = "0x86C3AC")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E938", Offset = "0x62E938")]
	private sealed class <DeserializeAfterStart_co>d__122 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cytoma <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x86C9B8", Offset = "0x86C9B8", VA = "0x86C9B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x86CA20", Offset = "0x86CA20", VA = "0x86CA20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x86C528", Offset = "0x86C528", VA = "0x86C528")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x86C674", Offset = "0x86C674", VA = "0x86C674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x86C678", Offset = "0x86C678", VA = "0x86C678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x86C9C0", Offset = "0x86C9C0", VA = "0x86C9C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HoverLocomotion hoverLocomotion;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ItemOrbiter orbiter;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CytomaBlinking eyeBlinking;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EyeController[] eyeControllers;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float attackRange;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask chargeCollisions;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int chargeDamage;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Health.KillSignature chargeKillSignature;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ParticleSystem deathFX;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue deploySound;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue chargeSound;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource chargeSoundSource;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue explosionSound;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private HidingPos hidingPos;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 deployPos;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Quaternion deployRotInit;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float deployFactor;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool hasReHidingPos;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float reHidePosCheckTime;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 reHidePosInit;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Quaternion reHideRotInit;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float reHideFactor;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float chanceThrow;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int depletedCounter;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float aimedCounter;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float aimedTimeout;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public RepositionTask repositionTask;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool wasAgressive;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int hurtFXTaskId;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool aimPhase;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 chargeLastPos;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Door openDoor;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 serializedTranform;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8661A4", Offset = "0x8661A4", VA = "0x8661A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x8662BC", Offset = "0x8662BC", VA = "0x8662BC", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x866314", Offset = "0x866314", VA = "0x866314", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x866340", Offset = "0x866340", VA = "0x866340")]
	private void Start()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x866A40", Offset = "0x866A40", VA = "0x866A40")]
	private void Hidden_Enter()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x8674BC", Offset = "0x8674BC", VA = "0x8674BC")]
	private void Hidden_Update()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x86756C", Offset = "0x86756C", VA = "0x86756C")]
	private void Hidden_Exit()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x866D28", Offset = "0x866D28", VA = "0x866D28")]
	private bool FindHidingPosition(out HidingPos hidingPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x867638", Offset = "0x867638", VA = "0x867638")]
	private void Deploy_Enter()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x867964", Offset = "0x867964", VA = "0x867964")]
	private void Deploy_Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x867B60", Offset = "0x867B60", VA = "0x867B60")]
	private void Deploy_Exit()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x867C24", Offset = "0x867C24", VA = "0x867C24")]
	private void ReHide_Enter()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x867DD0", Offset = "0x867DD0", VA = "0x867DD0")]
	private void ReHide_Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x868000", Offset = "0x868000", VA = "0x868000")]
	private void ReHide_Exit()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x868084", Offset = "0x868084", VA = "0x868084")]
	private bool CheckReHide()
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x86823C", Offset = "0x86823C", VA = "0x86823C")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x868520", Offset = "0x868520", VA = "0x868520")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x868600", Offset = "0x868600", VA = "0x868600")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x8686B0", Offset = "0x8686B0", VA = "0x8686B0")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x8687A0", Offset = "0x8687A0", VA = "0x8687A0")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x86892C", Offset = "0x86892C", VA = "0x86892C")]
	private void Agressive_Enter()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x868ACC", Offset = "0x868ACC", VA = "0x868ACC")]
	private void Agressive_Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x868EAC", Offset = "0x868EAC", VA = "0x868EAC")]
	private void Agressive_Exit()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x868EB0", Offset = "0x868EB0", VA = "0x868EB0")]
	private void Agressive_OnTimer()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x868C10", Offset = "0x868C10", VA = "0x868C10")]
	private bool IsPlayerAiming(Hand playerHand, float aimRadius = 0.5f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x869124", Offset = "0x869124", VA = "0x869124")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8692D0", Offset = "0x8692D0", VA = "0x8692D0")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x8693CC", Offset = "0x8693CC", VA = "0x8693CC")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8693EC", Offset = "0x8693EC", VA = "0x8693EC")]
	private void LongReposition_Enter()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x869590", Offset = "0x869590", VA = "0x869590")]
	private bool RepositionWander(Transform transform, AgentWalk agentWalk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x8699E4", Offset = "0x8699E4", VA = "0x8699E4")]
	private void LongReposition_Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x869AEC", Offset = "0x869AEC", VA = "0x869AEC")]
	private void LongReposition_OnTimer()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x869BEC", Offset = "0x869BEC", VA = "0x869BEC")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x869CEC", Offset = "0x869CEC", VA = "0x869CEC")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x869DE8", Offset = "0x869DE8", VA = "0x869DE8")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x869E08", Offset = "0x869E08", VA = "0x869E08")]
	private void Chase_OnTimer()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x869E94", Offset = "0x869E94", VA = "0x869E94")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x869F4C", Offset = "0x869F4C", VA = "0x869F4C")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x86A010", Offset = "0x86A010", VA = "0x86A010")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x86A0C4", Offset = "0x86A0C4", VA = "0x86A0C4")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x86A32C", Offset = "0x86A32C", VA = "0x86A32C")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x86A3B4", Offset = "0x86A3B4", VA = "0x86A3B4")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x86A53C", Offset = "0x86A53C", VA = "0x86A53C")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x86A544", Offset = "0x86A544", VA = "0x86A544")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x86A740", Offset = "0x86A740", VA = "0x86A740")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x86A74C", Offset = "0x86A74C", VA = "0x86A74C")]
	private void ChargeAim_Enter()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x86A8A0", Offset = "0x86A8A0", VA = "0x86A8A0")]
	private void ChargeAim_Update()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x86AAF8", Offset = "0x86AAF8", VA = "0x86AAF8")]
	private void ChargeAim_OnTimer()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x86AC78", Offset = "0x86AC78", VA = "0x86AC78")]
	private void Charge_Enter()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x86AE30", Offset = "0x86AE30", VA = "0x86AE30")]
	private void Charge_Update()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x86B224", Offset = "0x86B224", VA = "0x86B224")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x86B2E8", Offset = "0x86B2E8", VA = "0x86B2E8")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x86B3E8", Offset = "0x86B3E8", VA = "0x86B3E8")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x86B478", Offset = "0x86B478", VA = "0x86B478")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x86B948", Offset = "0x86B948", VA = "0x86B948")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x86AFD4", Offset = "0x86AFD4", VA = "0x86AFD4")]
	private void DieExplode()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x86BCE0", Offset = "0x86BCE0", VA = "0x86BCE0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x86BE10", Offset = "0x86BE10", VA = "0x86BE10")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x86BE14", Offset = "0x86BE14", VA = "0x86BE14")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x86BEFC", Offset = "0x86BEFC", VA = "0x86BEFC", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x86C0A0", Offset = "0x86C0A0", VA = "0x86C0A0", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x86C0A4", Offset = "0x86C0A4", VA = "0x86C0A4", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x86745C", Offset = "0x86745C", VA = "0x86745C")]
	private void SetEyesMode(EyeController.Modes mode)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x86C0AC", Offset = "0x86C0AC", VA = "0x86C0AC", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x86C0F4", Offset = "0x86C0F4", VA = "0x86C0F4", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x86C3B4", Offset = "0x86C3B4", VA = "0x86C3B4", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x866A14", Offset = "0x866A14", VA = "0x866A14")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x86C4AC", Offset = "0x86C4AC", VA = "0x86C4AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638E38", Offset = "0x638E38")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x86C554", Offset = "0x86C554", VA = "0x86C554", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x86C5CC", Offset = "0x86C5CC", VA = "0x86C5CC")]
	public Cytoma()
	{
	}

	[SpecialName]
	[Token(Token = "0x600074E")]
	[Address(RVA = "0x86C66C", Offset = "0x86C66C", VA = "0x86C66C", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B578", Offset = "0x62B578")]
public class CytomaBlinking : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool closed;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float animSpeed;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer renderer;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] blinkWeights;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] blinkTimers;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x86CA28", Offset = "0x86CA28", VA = "0x86CA28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x86CA88", Offset = "0x86CA88", VA = "0x86CA88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x86CD3C", Offset = "0x86CD3C", VA = "0x86CD3C")]
	public CytomaBlinking()
	{
	}
}
[Token(Token = "0x20000CE")]
public class EyeController : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	public enum Modes
	{
		[Token(Token = "0x4001AF0")]
		Idle,
		[Token(Token = "0x4001AF1")]
		Random,
		[Token(Token = "0x4001AF2")]
		FollowPlayer
	}

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Modes mode;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngle;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion defaultRotation;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion curRotation;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float randomTimer;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x87DAF0", Offset = "0x87DAF0", VA = "0x87DAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x87DB3C", Offset = "0x87DB3C", VA = "0x87DB3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x87DB74", Offset = "0x87DB74", VA = "0x87DB74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x87E02C", Offset = "0x87E02C", VA = "0x87E02C")]
	public EyeController()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Footsteps : MonoBehaviour
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue stepSounds;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frequency;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool addCameraShake;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShakeSource shakeSource;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xAB0F6C", Offset = "0xAB0F6C", VA = "0xAB0F6C")]
	private void EventStep()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xAB1058", Offset = "0xAB1058", VA = "0xAB1058")]
	private void EventStepWeighted(AnimationEvent evt)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xAB10B0", Offset = "0xAB10B0", VA = "0xAB10B0")]
	public Footsteps()
	{
	}
}
[Token(Token = "0x20000D0")]
public class HearingSystem : Singleton<HearingSystem>
{
	[Token(Token = "0x20003A5")]
	public struct Listener
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform owner;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AgentHearing hearing;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x6B4640", Offset = "0x6B4640", VA = "0x6B4640")]
		public Listener([Optional] AgentHearing hearing)
		{
		}
	}

	[Token(Token = "0x20003A6")]
	public struct Soundwave
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 origin;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundwaveData data;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isImportant;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x6B4684", Offset = "0x6B4684", VA = "0x6B4684")]
		public Soundwave(Vector3 origin, SoundwaveData data, bool isImportant)
		{
		}
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Listener> listeners;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Soundwave> soundwaves;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x8993C8", Offset = "0x8993C8", VA = "0x8993C8")]
	public int AddListener(AgentHearing hearing)
	{
		return default(int);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x8995F8", Offset = "0x8995F8", VA = "0x8995F8")]
	public void RemoveListener(int listenerId)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x899688", Offset = "0x899688", VA = "0x899688")]
	public void RemoveListener(AgentHearing hearing)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x88B460", Offset = "0x88B460", VA = "0x88B460")]
	public void TriggerSoundwave(Vector3 origin, SoundwaveData data, bool isImportant = false)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x8997D0", Offset = "0x8997D0", VA = "0x8997D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x8999E8", Offset = "0x8999E8", VA = "0x8999E8")]
	public HearingSystem()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B5DC", Offset = "0x62B5DC")]
public class HoverLocomotion : MonoBehaviour, ILocomotion
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mainBody;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hoverHeight;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float landedHeight;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62FFB8", Offset = "0x62FFB8")]
	public bool bobbingPerlin;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bobbingAmount;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bobbingFrequency;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wigglingAngle;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float wigglingFreq;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float bobbingWigglingFactor;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62FFF0", Offset = "0x62FFF0")]
	public AnimationCurve hitReactCurve;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float hitReactSpeed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 hitReactDir;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 hitReactWiggleAngles;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float hitReactProgress;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630028", Offset = "0x630028")]
	public bool isLanded;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Vector3 wantedSpeed;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 speed;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float bobY;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 horizTakeOffOffset;

	[Token(Token = "0x14000023")]
	public event Action onMove
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x89EFEC", Offset = "0x89EFEC", VA = "0x89EFEC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638E9C", Offset = "0x638E9C")]
		add
		{
		}
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x89F090", Offset = "0x89F090", VA = "0x89F090", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638EAC", Offset = "0x638EAC")]
		remove
		{
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x89E4D0", Offset = "0x89E4D0", VA = "0x89E4D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x89E530", Offset = "0x89E530", VA = "0x89E530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x89E5A4", Offset = "0x89E5A4", VA = "0x89E5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x89ECF8", Offset = "0x89ECF8", VA = "0x89ECF8")]
	public void PlayReactToHit(Vector3 hitDir)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x89EDE8", Offset = "0x89EDE8", VA = "0x89EDE8")]
	public void SetLanded()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x89EECC", Offset = "0x89EECC", VA = "0x89EECC")]
	public void TakeOff(Vector3 horizOffset, float? baseOffset)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x89EFCC", Offset = "0x89EFCC", VA = "0x89EFCC")]
	public void ResetFactor()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x89EFD4", Offset = "0x89EFD4", VA = "0x89EFD4", Slot = "4")]
	public void SetDesiredVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x89EFE0", Offset = "0x89EFE0", VA = "0x89EFE0", Slot = "7")]
	public Vector3 GetSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x89F134", Offset = "0x89F134", VA = "0x89F134")]
	public HoverLocomotion()
	{
	}
}
[Token(Token = "0x20000D2")]
public interface IAgent
{
	[Token(Token = "0x170000B7")]
	GameObject gameObject
	{
		[Token(Token = "0x600076B")]
		get;
	}

	[Token(Token = "0x600076C")]
	void Teleport(Vector3 newPosition);

	[Token(Token = "0x600076D")]
	void EMPulse(Room room);

	[Token(Token = "0x600076E")]
	Renderer[] GetBodyRenderers();

	[Token(Token = "0x600076F")]
	string GetAgentName();
}
[Token(Token = "0x20000D3")]
public interface ILocomotion
{
	[Token(Token = "0x14000024")]
	event Action onMove;

	[Token(Token = "0x6000770")]
	void SetDesiredVelocity(Vector3 velocity);

	[Token(Token = "0x6000773")]
	Vector3 GetSpeed();
}
[Token(Token = "0x20000D4")]
public class ItemOrbiter : MonoBehaviour
{
	[Token(Token = "0x20003A7")]
	private class Tractor
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rBody;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 startPoint;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float orbitFactor;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float orbitOffset;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 position;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool active;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 lastPos;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x9C7DC4", Offset = "0x9C7DC4", VA = "0x9C7DC4")]
		public Tractor(Transform parent)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x9C8088", Offset = "0x9C8088", VA = "0x9C8088")]
		public void SetItem(Rigidbody item, float angleOffset = 0f)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x9C9018", Offset = "0x9C9018", VA = "0x9C9018")]
		public Rigidbody GetItem()
		{
			return null;
		}
	}

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630080", Offset = "0x630080")]
	public float acquisitionRange;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tractorLerpSpeed;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float throwForce;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue throwSound;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6300B8", Offset = "0x6300B8")]
	public float orbitDist;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float orbitSpeed;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float orbitAcceleration;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6300F0", Offset = "0x6300F0")]
	public float inclinationRangeX;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float inclinationRangeZ;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float inclinationSpeedX;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float inclinationSpeedZ;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Rigidbody> canAcquireItems;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool throwAtTarget;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource floatSound;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Tractor> tractors;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float orbitAngle;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x630138", Offset = "0x630138")]
	public bool _acquireItems;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x9C7CE0", Offset = "0x9C7CE0", VA = "0x9C7CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x9C7F44", Offset = "0x9C7F44", VA = "0x9C7F44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x9C84D8", Offset = "0x9C84D8", VA = "0x9C84D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x9C922C", Offset = "0x9C922C", VA = "0x9C922C")]
	public int AcquireItems()
	{
		return default(int);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x9C9420", Offset = "0x9C9420", VA = "0x9C9420")]
	public int CheckCanAcquireItems(float rangeFactor = 1f)
	{
		return default(int);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x9C9CA8", Offset = "0x9C9CA8", VA = "0x9C9CA8")]
	public int GetNumActive()
	{
		return default(int);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x9C9DA4", Offset = "0x9C9DA4", VA = "0x9C9DA4")]
	public ItemOrbiter()
	{
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B640", Offset = "0x62B640")]
[SelectionBase]
public class Meatman : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x20003A8")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State WaitForDiscovery;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Idle;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Wander;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State React;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Chase;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Attack;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Blink;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Investigate;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Hurt;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State Death;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State Disappear;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xA5CAF0", Offset = "0xA5CAF0", VA = "0xA5CAF0")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E948", Offset = "0x62E948")]
	private sealed class <DeserializeAfterStart_co>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Meatman <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xA5CA80", Offset = "0xA5CA80", VA = "0xA5CA80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xA5CAE8", Offset = "0xA5CAE8", VA = "0xA5CAE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xA5C920", Offset = "0xA5C920", VA = "0xA5C920")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xA5C94C", Offset = "0xA5C94C", VA = "0xA5C94C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xA5C950", Offset = "0xA5C950", VA = "0xA5C950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xA5CA88", Offset = "0xA5CA88", VA = "0xA5CA88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Collider lodCollider;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Collider moveCollider;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider tpCollider;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AnimSpasm animSpasms;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float spasmsCreepyTimer;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AgentLookAt lookAt;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RagdollController ragdoll;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dissolve dissolve;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem smokeFX;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticlesArmature bloodFlowFX;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue reactSound;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioCue deathSound;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioCue painSound;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioCue attackSounds;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float audioYDelta;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float attackCooldown;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool isStealth;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ChaseTask chaseTask;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool chasingVisible;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BlinkTask blinkTask;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool wantsToBlink;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float blinkLastTime;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float blinkChance;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float blinkCooldown;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool wasChasing;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int hurtFXTaskId;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public DeathTask deathTask;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x915DE0", Offset = "0x915DE0", VA = "0x915DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x915F20", Offset = "0x915F20", VA = "0x915F20", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x915F78", Offset = "0x915F78", VA = "0x915F78", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x915FA4", Offset = "0x915FA4", VA = "0x915FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x91667C", Offset = "0x91667C", VA = "0x91667C")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x916820", Offset = "0x916820", VA = "0x916820")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x9168FC", Offset = "0x9168FC", VA = "0x9168FC")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x9169AC", Offset = "0x9169AC", VA = "0x9169AC")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x916AB0", Offset = "0x916AB0", VA = "0x916AB0")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x916CD8", Offset = "0x916CD8", VA = "0x916CD8")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x916EC4", Offset = "0x916EC4", VA = "0x916EC4")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x917110", Offset = "0x917110", VA = "0x917110")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9173A8", Offset = "0x9173A8", VA = "0x9173A8")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x917460", Offset = "0x917460", VA = "0x917460")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x9174E0", Offset = "0x9174E0", VA = "0x9174E0")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x917794", Offset = "0x917794", VA = "0x917794")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9178AC", Offset = "0x9178AC", VA = "0x9178AC")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x917A5C", Offset = "0x917A5C", VA = "0x917A5C")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x917D14", Offset = "0x917D14", VA = "0x917D14")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x917DB8", Offset = "0x917DB8", VA = "0x917DB8")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x917700", Offset = "0x917700", VA = "0x917700")]
	private bool CheckBlink()
	{
		return default(bool);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x917E54", Offset = "0x917E54", VA = "0x917E54")]
	private void Blink_Enter()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x917F70", Offset = "0x917F70", VA = "0x917F70")]
	private void Blink_Exit()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x917F90", Offset = "0x917F90", VA = "0x917F90")]
	private void Blink_OnTimer()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x91808C", Offset = "0x91808C", VA = "0x91808C")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x9180D0", Offset = "0x9180D0", VA = "0x9180D0")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x918194", Offset = "0x918194", VA = "0x918194")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x918248", Offset = "0x918248", VA = "0x918248")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x9184AC", Offset = "0x9184AC", VA = "0x9184AC")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x9184EC", Offset = "0x9184EC", VA = "0x9184EC")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x918700", Offset = "0x918700", VA = "0x918700")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x918708", Offset = "0x918708", VA = "0x918708")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x9188A4", Offset = "0x9188A4", VA = "0x9188A4")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x9188B0", Offset = "0x9188B0", VA = "0x9188B0")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x918A84", Offset = "0x918A84", VA = "0x918A84")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x918B84", Offset = "0x918B84", VA = "0x918B84")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x918BC8", Offset = "0x918BC8", VA = "0x918BC8")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x918BE8", Offset = "0x918BE8", VA = "0x918BE8")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x918D84", Offset = "0x918D84", VA = "0x918D84")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x918E44", Offset = "0x918E44", VA = "0x918E44")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x918ED4", Offset = "0x918ED4", VA = "0x918ED4")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x919258", Offset = "0x919258", VA = "0x919258")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x919460", Offset = "0x919460", VA = "0x919460")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x9194FC", Offset = "0x9194FC", VA = "0x9194FC")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x919650", Offset = "0x919650", VA = "0x919650")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x9197CC", Offset = "0x9197CC", VA = "0x9197CC")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x919938", Offset = "0x919938", VA = "0x919938", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x919BDC", Offset = "0x919BDC", VA = "0x919BDC", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x919BE0", Offset = "0x919BE0", VA = "0x919BE0", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x919BE8", Offset = "0x919BE8", VA = "0x919BE8", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x919C30", Offset = "0x919C30", VA = "0x919C30", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x919CE8", Offset = "0x919CE8", VA = "0x919CE8", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x916650", Offset = "0x916650", VA = "0x916650")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x919DB4", Offset = "0x919DB4", VA = "0x919DB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638EDC", Offset = "0x638EDC")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x919E30", Offset = "0x919E30", VA = "0x919E30", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x919EA8", Offset = "0x919EA8", VA = "0x919EA8")]
	public Meatman()
	{
	}

	[SpecialName]
	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x919F58", Offset = "0x919F58", VA = "0x919F58", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000D6")]
public class MonsterManager : Singleton<MonsterManager>
{
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class MonsterSpawnInfo
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefGameObject monsterPrefab;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int clusterMin;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int clusterMax;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool requireInfestation;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool skipCorridors;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool disabledGeneration;

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xA71184", Offset = "0xA71184", VA = "0xA71184")]
		public MonsterSpawnInfo()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public class SerializedData
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string xform;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string dataString;

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xA7090C", Offset = "0xA7090C", VA = "0xA7090C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003AC")]
	private class ManagerSerializedData
	{
		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float spawningCooldown;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xA71094", Offset = "0xA71094", VA = "0xA71094")]
		public ManagerSerializedData()
		{
		}
	}

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool placeMonsters;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool placeSecurity;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numMonsters;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonsterSpawnInfo[] monsterSpawnPrefabs;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchRefGameObject[] monsterPrefabs;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numTurrets;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchRefGameObject turretPrefabs;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numDrones;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float droneItemChance;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefGameObject securityDrone;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwitchRefSpawnInfo securityDroneItem;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int numMinHiddenCrawlers;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numMaxHiddenCrawlers;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SwitchRefGameObject hiddenCrawlerPrefab;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SwitchRefGameObject hunterPrefab;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> agents;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float spawningCooldown;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int startedNumAgents;

	[Token(Token = "0x40007B6")]
	private const float initCooldownTimeMin = 20f;

	[Token(Token = "0x40007B7")]
	private const float initCooldownTimeMax = 60f;

	[Token(Token = "0x40007B8")]
	private const float spawnCooldownTimeMin = 10f;

	[Token(Token = "0x40007B9")]
	private const float spawnCooldownTimeMax = 60f;

	[Token(Token = "0x40007BA")]
	private const float spawnChance = 0.3f;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hunterSpawned;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x630170", Offset = "0x630170")]
	public bool _testSpawn;

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xA6E140", Offset = "0xA6E140", VA = "0xA6E140", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA6E1C4", Offset = "0xA6E1C4", VA = "0xA6E1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA6E254", Offset = "0xA6E254", VA = "0xA6E254")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xA6E908", Offset = "0xA6E908", VA = "0xA6E908")]
	public int PlaceEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xA6E740", Offset = "0xA6E740", VA = "0xA6E740")]
	public GameObject SpawnAgent(GameObject monsterPrefab, Room room, bool checkVisibility = false)
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xA6F23C", Offset = "0xA6F23C", VA = "0xA6F23C")]
	private GameObject SpawnAgentInPos(GameObject monsterPrefab, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xA6F44C", Offset = "0xA6F44C", VA = "0xA6F44C")]
	public GameObject SpawnHunter()
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xA6F710", Offset = "0xA6F710", VA = "0xA6F710")]
	private void SpawnHunterOnTimer()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xA6F3EC", Offset = "0xA6F3EC", VA = "0xA6F3EC")]
	public void SubscribeAgent(GameObject agent)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xA6F714", Offset = "0xA6F714", VA = "0xA6F714")]
	public void RemoveAgent(GameObject go)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xA6F7A8", Offset = "0xA6F7A8", VA = "0xA6F7A8")]
	public int PlaceTurrets()
	{
		return default(int);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xA6FBC4", Offset = "0xA6FBC4", VA = "0xA6FBC4")]
	public int PlaceDrones()
	{
		return default(int);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xA70034", Offset = "0xA70034", VA = "0xA70034")]
	public int PlaceHiddenCrawlers()
	{
		return default(int);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xA70460", Offset = "0xA70460", VA = "0xA70460")]
	public void TriggerEMPulse(Room room)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xA705F0", Offset = "0xA705F0", VA = "0xA705F0")]
	public void TestSpawn()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xA70774", Offset = "0xA70774", VA = "0xA70774")]
	public string Serialize(IAgent agent, object dataAgent)
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xA70914", Offset = "0xA70914", VA = "0xA70914")]
	public string DeserializeState(IAgent agent, string dataString)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xA70A0C", Offset = "0xA70A0C", VA = "0xA70A0C")]
	public IGameSerializable DeserializeSpawn(string dataString)
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA71020", Offset = "0xA71020", VA = "0xA71020")]
	public string SerializeManagerState()
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA7109C", Offset = "0xA7109C", VA = "0xA7109C")]
	public void DeserializeManagerState(string dataString)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA71108", Offset = "0xA71108", VA = "0xA71108")]
	public MonsterManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public class MonsterTracker : MonoBehaviour
{
	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA71194", Offset = "0xA71194", VA = "0xA71194")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xA7124C", Offset = "0xA7124C", VA = "0xA7124C")]
	public MonsterTracker()
	{
	}
}
[Token(Token = "0x20000D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B844", Offset = "0x62B844")]
public class ParticlesArmature : SpawnerArmature
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] timers;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float activationTimeMin;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float activationTimeMax;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float cooldownTimeMin;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float cooldownTimeMax;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool emissionEnabled;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x83C4F4", Offset = "0x83C4F4", VA = "0x83C4F4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x83C660", Offset = "0x83C660", VA = "0x83C660")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x83C7C8", Offset = "0x83C7C8", VA = "0x83C7C8")]
	public void StopEmission()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x83C834", Offset = "0x83C834", VA = "0x83C834")]
	public void ResumeEmission()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x83C840", Offset = "0x83C840", VA = "0x83C840")]
	public ParticlesArmature()
	{
	}
}
[Token(Token = "0x20000D9")]
public class RagdollController : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003AD")]
	private class SerializedData
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] xforms;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x8E4244", Offset = "0x8E4244", VA = "0x8E4244")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject armature;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disablePhysicsOnSleep;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool disableCollidersOnSleep;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool readjustRootTransform;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x6301B4", Offset = "0x6301B4")]
	public Transform hipBone;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x6301EC", Offset = "0x6301EC")]
	public Renderer skinRenderer;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x630224", Offset = "0x630224")]
	public bool rootInCenter;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody[] rigidBodies;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] bodyColliders;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LookAtIK lookAtIK;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSleeping;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float sleepTimer;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 localArmaturePos;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion localArmatureRot;

	[Token(Token = "0x14000025")]
	public event Action<bool> onChangeState
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x8E3188", Offset = "0x8E3188", VA = "0x8E3188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638F40", Offset = "0x638F40")]
		add
		{
		}
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x8E322C", Offset = "0x8E322C", VA = "0x8E322C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x638F50", Offset = "0x638F50")]
		remove
		{
		}
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x8E32D0", Offset = "0x8E32D0", VA = "0x8E32D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x8E35CC", Offset = "0x8E35CC", VA = "0x8E35CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x8E39B0", Offset = "0x8E39B0", VA = "0x8E39B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x8E3AB0", Offset = "0x8E3AB0", VA = "0x8E3AB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x8E35D4", Offset = "0x8E35D4", VA = "0x8E35D4")]
	private void SetRagdoll(bool enablePhysics = true)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x8E3DA8", Offset = "0x8E3DA8", VA = "0x8E3DA8")]
	private void ReadjustRootTransform()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x8E335C", Offset = "0x8E335C", VA = "0x8E335C")]
	public void FindColliders()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x8E40E8", Offset = "0x8E40E8", VA = "0x8E40E8", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x8E424C", Offset = "0x8E424C", VA = "0x8E424C", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x8E435C", Offset = "0x8E435C", VA = "0x8E435C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x8E4360", Offset = "0x8E4360", VA = "0x8E4360")]
	public RagdollController()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
[SelectionBase]
public class SecurityDrone : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x20003AE")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State ScanRoom;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Patrol;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State React;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Reposition;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Target;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Fire;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Chase;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Investigate;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FSM.State Offline;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FSM.State TakeOff;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FSM.State Standby;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FSM.State Hurt;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FSM.State Death;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1364C88", Offset = "0x1364C88", VA = "0x1364C88")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003AF")]
	private class ExtraSerializedData
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 restPos;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion restRot;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1364C90", Offset = "0x1364C90", VA = "0x1364C90")]
		public ExtraSerializedData()
		{
		}
	}

	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E958", Offset = "0x62E958")]
	private sealed class <Fire_co>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x13645F8", Offset = "0x13645F8", VA = "0x13645F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1364660", Offset = "0x1364660", VA = "0x1364660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x1364454", Offset = "0x1364454", VA = "0x1364454")]
		[DebuggerHidden]
		public <Fire_co>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1364480", Offset = "0x1364480", VA = "0x1364480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x1364484", Offset = "0x1364484", VA = "0x1364484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1364600", Offset = "0x1364600", VA = "0x1364600", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E968", Offset = "0x62E968")]
	private sealed class <TakeOff_co>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x1364C18", Offset = "0x1364C18", VA = "0x1364C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x1364C80", Offset = "0x1364C80", VA = "0x1364C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1364668", Offset = "0x1364668", VA = "0x1364668")]
		[DebuggerHidden]
		public <TakeOff_co>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1364694", Offset = "0x1364694", VA = "0x1364694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1364698", Offset = "0x1364698", VA = "0x1364698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x1364C20", Offset = "0x1364C20", VA = "0x1364C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E978", Offset = "0x62E978")]
	private sealed class <DeserializeAfterStart_co>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecurityDrone <>4__this;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x13643E4", Offset = "0x13643E4", VA = "0x13643E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x136444C", Offset = "0x136444C", VA = "0x136444C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x13641D4", Offset = "0x13641D4", VA = "0x13641D4")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x1364200", Offset = "0x1364200", VA = "0x1364200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x1364204", Offset = "0x1364204", VA = "0x1364204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x13643EC", Offset = "0x13643EC", VA = "0x13643EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventHub evHub;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HoverLocomotion hoverLocomotion;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentVision agentVision;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Health health;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RandomSounds randomSounds;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63026C", Offset = "0x63026C")]
	public Transform muzzle;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue shootSound;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LayerMask shootLayerMask;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ProjectileDamage damageData;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GunTrails gunTrails;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6302A4", Offset = "0x6302A4")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem jetFX;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VolumetricLightBeam spotLight;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material materialActive;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material materialInactive;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Renderer[] disableOnDeath;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6302DC", Offset = "0x6302DC")]
	public AudioCue reactSound;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioCue attackSound;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioCue dieSound;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioCue hurtSound;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioCue activateSound;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource jetSound;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630314", Offset = "0x630314")]
	public bool startOffline;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float offlineActivationRadius;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Room lastPatrolledRoom;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float scanProgress;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public RepositionTask repositionTask;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool firing;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private WaitForSeconds fireCoWait;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ChaseTask chaseTask;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float forcedOffline;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Coroutine takeOffCoroutine;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private RoomPower roomPower;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool wasChasing;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int hurtFXTaskId;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool disablingOnDeath;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Door openDoor;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	private bool hurtEMPulse;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 serializedPos;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Quaternion serializedRot;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x94D5C8", Offset = "0x94D5C8", VA = "0x94D5C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x94D6E0", Offset = "0x94D6E0", VA = "0x94D6E0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x94D734", Offset = "0x94D734", VA = "0x94D734", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x94D774", Offset = "0x94D774", VA = "0x94D774")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x94DD7C", Offset = "0x94DD7C", VA = "0x94DD7C")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x94DE1C", Offset = "0x94DE1C", VA = "0x94DE1C")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x94DECC", Offset = "0x94DECC", VA = "0x94DECC")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x94DFA8", Offset = "0x94DFA8", VA = "0x94DFA8")]
	private void Patrol_Enter()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x94E4A0", Offset = "0x94E4A0", VA = "0x94E4A0")]
	private void Patrol_Update()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x94E644", Offset = "0x94E644", VA = "0x94E644")]
	private void ScanRoom_Enter()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x94E6B4", Offset = "0x94E6B4", VA = "0x94E6B4")]
	private void ScanRoom_Update()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x94E808", Offset = "0x94E808", VA = "0x94E808")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x94E8B4", Offset = "0x94E8B4", VA = "0x94E8B4")]
	private void React_Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x94E9E8", Offset = "0x94E9E8", VA = "0x94E9E8")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x94EA08", Offset = "0x94EA08", VA = "0x94EA08")]
	private void React_OnTimer()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x94EAA4", Offset = "0x94EAA4", VA = "0x94EAA4")]
	private void Reposition_Enter()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x94EC38", Offset = "0x94EC38", VA = "0x94EC38")]
	private void Reposition_Update()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x94ED44", Offset = "0x94ED44", VA = "0x94ED44")]
	private void Reposition_Exit()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x94ED64", Offset = "0x94ED64", VA = "0x94ED64")]
	private void Target_Enter()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x94EE88", Offset = "0x94EE88", VA = "0x94EE88")]
	private void Target_Update()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x94EF94", Offset = "0x94EF94", VA = "0x94EF94")]
	private void Target_OnTimer()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x94F084", Offset = "0x94F084", VA = "0x94F084")]
	private void Fire_Enter()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x94F0C8", Offset = "0x94F0C8", VA = "0x94F0C8")]
	private void Fire_Update()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x94F0E4", Offset = "0x94F0E4", VA = "0x94F0E4")]
	private void Fire_OnTimer()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x94F5EC", Offset = "0x94F5EC", VA = "0x94F5EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638F60", Offset = "0x638F60")]
	private IEnumerator Fire_co(Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x94F68C", Offset = "0x94F68C", VA = "0x94F68C")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x94F6EC", Offset = "0x94F6EC", VA = "0x94F6EC")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x94F7F8", Offset = "0x94F7F8", VA = "0x94F7F8")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x94F818", Offset = "0x94F818", VA = "0x94F818")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x94F838", Offset = "0x94F838", VA = "0x94F838")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x94F8FC", Offset = "0x94F8FC", VA = "0x94F8FC")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x94F9B0", Offset = "0x94F9B0", VA = "0x94F9B0")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x94FCC4", Offset = "0x94FCC4", VA = "0x94FCC4")]
	private void Offline_Update()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x94FF2C", Offset = "0x94FF2C", VA = "0x94FF2C")]
	private void TakeOff_Enter()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x94FFE4", Offset = "0x94FFE4", VA = "0x94FFE4")]
	private void TakeOff_Exit()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x94FF68", Offset = "0x94FF68", VA = "0x94FF68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x638FC4", Offset = "0x638FC4")]
	private IEnumerator TakeOff_co()
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x95003C", Offset = "0x95003C", VA = "0x95003C")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x9500E8", Offset = "0x9500E8", VA = "0x9500E8")]
	private void Standby_Update()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x950214", Offset = "0x950214", VA = "0x950214")]
	private void Standby_Exit()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x9502C8", Offset = "0x9502C8", VA = "0x9502C8")]
	private void Standby_OnTimer()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x950330", Offset = "0x950330", VA = "0x950330")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x950600", Offset = "0x950600", VA = "0x950600")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x95075C", Offset = "0x95075C", VA = "0x95075C")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x950764", Offset = "0x950764", VA = "0x950764")]
	private void HurtFX_Begin()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x9508AC", Offset = "0x9508AC", VA = "0x9508AC")]
	private void HurtFX_Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x950918", Offset = "0x950918", VA = "0x950918")]
	private void HurtFX_End()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x950944", Offset = "0x950944", VA = "0x950944")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x950DA4", Offset = "0x950DA4", VA = "0x950DA4")]
	private void OnApproachDoor(Door door)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x950E68", Offset = "0x950E68", VA = "0x950E68")]
	private void OnDepartDoor(Door door)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x950F68", Offset = "0x950F68", VA = "0x950F68")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x950FF8", Offset = "0x950FF8", VA = "0x950FF8")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9513E8", Offset = "0x9513E8", VA = "0x9513E8")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x951830", Offset = "0x951830", VA = "0x951830")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9518D0", Offset = "0x9518D0", VA = "0x9518D0")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x951BCC", Offset = "0x951BCC", VA = "0x951BCC", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x951D98", Offset = "0x951D98", VA = "0x951D98", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x951FF8", Offset = "0x951FF8", VA = "0x951FF8", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x94FC48", Offset = "0x94FC48", VA = "0x94FC48")]
	private void SetMaterial(Material wantedMaterial)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x952000", Offset = "0x952000", VA = "0x952000", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x952060", Offset = "0x952060", VA = "0x952060", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x952218", Offset = "0x952218", VA = "0x952218", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x94DD50", Offset = "0x94DD50", VA = "0x94DD50")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x952330", Offset = "0x952330", VA = "0x952330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A028", Offset = "0x63A028")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x9523AC", Offset = "0x9523AC", VA = "0x9523AC")]
	private void OnSerializedDeath()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x95249C", Offset = "0x95249C", VA = "0x95249C", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x952514", Offset = "0x952514", VA = "0x952514")]
	public SecurityDrone()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000821")]
	[Address(RVA = "0x952610", Offset = "0x952610", VA = "0x952610", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62BA84", Offset = "0x62BA84")]
public class SoundwaveData : ScriptableObject
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isImportant;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x136D22C", Offset = "0x136D22C", VA = "0x136D22C")]
	public SoundwaveData()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BAC8", Offset = "0x62BAC8")]
public class SpawnerArmature : MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] prefabs;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63034C", Offset = "0x63034C")]
	public Transform[] excludedBones;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630384", Offset = "0x630384")]
	public Transform[] skipBones;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minToSpawn;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxToSpawn;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool checkColliders;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool spawnOnAwake;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1372BDC", Offset = "0x1372BDC", VA = "0x1372BDC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1372C40", Offset = "0x1372C40", VA = "0x1372C40")]
	public void SpawnPrefabs()
	{
	}

	[Token(Token = "0x6000825")]
	protected T[] SpawnPrefabs<T>()
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1372C90", Offset = "0x1372C90", VA = "0x1372C90")]
	public SpawnerArmature()
	{
	}
}
[Token(Token = "0x20000DD")]
public class TendrilLocomotion : MonoBehaviour, ILocomotion
{
	[Token(Token = "0x20003B3")]
	private enum LimbState
	{
		[Token(Token = "0x4001B37")]
		Placed,
		[Token(Token = "0x4001B38")]
		Retracting,
		[Token(Token = "0x4001B39")]
		Deploying,
		[Token(Token = "0x4001B3A")]
		Stepping,
		[Token(Token = "0x4001B3B")]
		LashOut_Anticipation,
		[Token(Token = "0x4001B3C")]
		LashOut_Action,
		[Token(Token = "0x4001B3D")]
		LashOut_Recovery,
		[Token(Token = "0x4001B3E")]
		Hiding
	}

	[Token(Token = "0x20003B4")]
	private struct LimbData
	{
		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LimbState state;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 target;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 normal;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 lastTarget;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 lastNormal;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float deployFactor;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cooldownTime;
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tendril[] limbs;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxRange;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAngle;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue landSound;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float retractionSpeed;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deploySpeed;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hideSpeed;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LimbData[] limbStates;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6303BC", Offset = "0x6303BC")]
	public int minDeployed;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float stepSpeed;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve stepCurve;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float limbCooldownTime;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public Vector3 wantedSpeed;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float gaitFreq;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float bobbingAmount;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630404", Offset = "0x630404")]
	public AnimationCurve lashOutActionSpeedCurve;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve lashOutActionDeployCurve;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve lashOutActionSpreadCurve;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float lashOutAnticipationSpeed;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float lashOutActionSpeed;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lashOutActionProgress;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] lashOutSpreadPoints;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve lashOutRecoveryCurve;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float lashOutRecoverySpeed;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int lashOutDamage;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float lashOutDamageRadius;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue lashOutSound;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioCue lashOutHitSound;

	[Token(Token = "0x4000830")]
	private const float speedOffsetFactor = 1.2f;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Collider bodyCollider;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EventHub evHub;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 speed;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool lodMode;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool hideLimbs;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private bool isMeltingUp;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	private bool firstUpdate;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int lodFrameRetract;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RaycastHit[] cachedHits;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform lashOutTarget;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 lashOutSavedTarget;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 lashOutSavedNormal;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 lashOutPrevDamagePos;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool lashOutDamageApplied;

	[Token(Token = "0x14000026")]
	public event Action onMove
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x809AF4", Offset = "0x809AF4", VA = "0x809AF4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A08C", Offset = "0x63A08C")]
		add
		{
		}
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x809B9C", Offset = "0x809B9C", VA = "0x809B9C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A09C", Offset = "0x63A09C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x805DE0", Offset = "0x805DE0", VA = "0x805DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x805F68", Offset = "0x805F68", VA = "0x805F68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x8060C4", Offset = "0x8060C4", VA = "0x8060C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x8063F0", Offset = "0x8063F0", VA = "0x8063F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x80780C", Offset = "0x80780C", VA = "0x80780C")]
	private RaycastHit CalculateLandingPoint(Tendril limb, Vector3 speedOffset, bool includeOffAngle = false)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x8086F0", Offset = "0x8086F0", VA = "0x8086F0")]
	public bool LashOut(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x807C7C", Offset = "0x807C7C", VA = "0x807C7C")]
	private LimbData UpdateLashOutAnim(LimbData ld, Tendril limb)
	{
		return default(LimbData);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x808BC8", Offset = "0x808BC8", VA = "0x808BC8")]
	private bool CheckLashOutLineOfSight(Vector3 limbPos, Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x808C8C", Offset = "0x808C8C", VA = "0x808C8C")]
	private void ComputeLashOutSpread(Transform target, Vector3 ldNormal, Vector3 limbPos)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x809748", Offset = "0x809748", VA = "0x809748")]
	public void SetLODMode(bool lod)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x809928", Offset = "0x809928", VA = "0x809928")]
	public void SetHidden(bool hidden)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x809ABC", Offset = "0x809ABC", VA = "0x809ABC")]
	private void OnMeltFXAppear()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x809AC4", Offset = "0x809AC4", VA = "0x809AC4")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x80983C", Offset = "0x80983C", VA = "0x80983C")]
	public void ResetTendrils()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x8063A8", Offset = "0x8063A8", VA = "0x8063A8")]
	private Vector3 GetLimbDir(Tendril t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x809ADC", Offset = "0x809ADC", VA = "0x809ADC", Slot = "4")]
	public void SetDesiredVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x809AE8", Offset = "0x809AE8", VA = "0x809AE8", Slot = "7")]
	public Vector3 GetSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x809C44", Offset = "0x809C44", VA = "0x809C44")]
	public TendrilLocomotion()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB2C", Offset = "0x62BB2C")]
public class TestAgent : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool needsDest;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x80D194", Offset = "0x80D194", VA = "0x80D194")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x80D20C", Offset = "0x80D20C", VA = "0x80D20C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x80D480", Offset = "0x80D480", VA = "0x80D480")]
	private void SetRandomTarget()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x80D6BC", Offset = "0x80D6BC", VA = "0x80D6BC")]
	public TestAgent()
	{
	}
}
[Token(Token = "0x20000DF")]
public class TestMonster : FSMComponent
{
	[Token(Token = "0x20003B5")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State React;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Chase;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Attack;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Death;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x811370", Offset = "0x811370", VA = "0x811370")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentVision agentVision;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator animator;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Health health;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Footsteps footSteps;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RandomSounds randomSounds;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dissolve dissolveFX;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioCue reactSound;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioCue deathSound;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue painSound;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue attackSounds;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float audioYDelta;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isStealth;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool chasingPlayer;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x80F378", Offset = "0x80F378", VA = "0x80F378")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x80F3EC", Offset = "0x80F3EC", VA = "0x80F3EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x80F650", Offset = "0x80F650", VA = "0x80F650")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x80F708", Offset = "0x80F708", VA = "0x80F708")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x80F7E4", Offset = "0x80F7E4", VA = "0x80F7E4")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x80F890", Offset = "0x80F890", VA = "0x80F890")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x80FD64", Offset = "0x80FD64", VA = "0x80FD64")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x80FE70", Offset = "0x80FE70", VA = "0x80FE70")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x80FFF0", Offset = "0x80FFF0", VA = "0x80FFF0")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x810334", Offset = "0x810334", VA = "0x810334")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x8105DC", Offset = "0x8105DC", VA = "0x8105DC")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x81063C", Offset = "0x81063C", VA = "0x81063C")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x8107F8", Offset = "0x8107F8", VA = "0x8107F8")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x810838", Offset = "0x810838", VA = "0x810838")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x8108A4", Offset = "0x8108A4", VA = "0x8108A4")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x810B4C", Offset = "0x810B4C", VA = "0x810B4C")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x810D14", Offset = "0x810D14", VA = "0x810D14")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x810DDC", Offset = "0x810DDC", VA = "0x810DDC")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x811088", Offset = "0x811088", VA = "0x811088")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x811124", Offset = "0x811124", VA = "0x811124")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x8112E0", Offset = "0x8112E0", VA = "0x8112E0")]
	public TestMonster()
	{
	}
}
[Token(Token = "0x20000E0")]
public class VisionSystem : Singleton<VisionSystem>
{
	[Token(Token = "0x20003B6")]
	public enum TargetType
	{
		[Token(Token = "0x4001B4D")]
		Player = 1,
		[Token(Token = "0x4001B4E")]
		Creature = 2,
		[Token(Token = "0x4001B4F")]
		Security = 4,
		[Token(Token = "0x4001B50")]
		Item = 8
	}

	[Token(Token = "0x20003B7")]
	public struct ViewCone
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform owner;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float angle;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float length;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yDelta;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float darkVisionFactor;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool checkLineOfSight;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask occludersMask;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType targetMask;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool active;

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x6B4B84", Offset = "0x6B4B84", VA = "0x6B4B84")]
		public ViewCone([Optional] Transform owner)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x6B4BCC", Offset = "0x6B4BCC", VA = "0x6B4BCC")]
		public void Set(Transform owner, float angle, float length, float yDelta = 0f, float darkVisionFactor = 1f)
		{
		}
	}

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ViewCone> viewCones;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<VisionTarget> targets;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<List<VisionTarget>> targetsInView;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<bool> playerInView;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> lastPlayerPos;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int updateFrame;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9882BC", Offset = "0x9882BC", VA = "0x9882BC")]
	public int AddViewCone(ViewCone cone)
	{
		return default(int);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x988544", Offset = "0x988544", VA = "0x988544")]
	public void RemoveViewCone(int coneId)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x98863C", Offset = "0x98863C", VA = "0x98863C")]
	public void AddTarget(VisionTarget target)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x9886A4", Offset = "0x9886A4", VA = "0x9886A4")]
	public void RemoveTarget(VisionTarget target)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x9887AC", Offset = "0x9887AC", VA = "0x9887AC")]
	public bool CheckPlayerInView(int coneId, out Vector3 playerPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x9888BC", Offset = "0x9888BC", VA = "0x9888BC")]
	public bool CheckTargetInView(int coneId, TargetType targetType)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x988A14", Offset = "0x988A14", VA = "0x988A14")]
	public VisionTarget GetTargetInView(int coneId, TargetType targetType)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x988B68", Offset = "0x988B68", VA = "0x988B68")]
	public List<VisionTarget> GetTargetsInView(int coneId)
	{
		return null;
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x988C00", Offset = "0x988C00", VA = "0x988C00")]
	private void Update()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x989380", Offset = "0x989380", VA = "0x989380")]
	public static bool CheckInViewCone(VisionTarget target, Vector3 targetPos, Transform coneTransform, float coneAngle, float coneLength, bool checkLineOfSight = false, [Optional] LayerMask occludersMask, float yDelta = 0f, float coneDarkVisionFactor = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x98984C", Offset = "0x98984C", VA = "0x98984C")]
	public VisionSystem()
	{
	}
}
[Token(Token = "0x20000E1")]
public class VisionTarget : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "BitMaskAttribute", RVA = "0x63044C", Offset = "0x63044C")]
	public VisionSystem.TargetType targetType;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool disableWhenAsleep;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _ignore;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool trailingCheck;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pair<Vector3, int>> trailingPositions;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastPos;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rBody;

	[Token(Token = "0x170000B8")]
	public bool Ignore
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x989A30", Offset = "0x989A30", VA = "0x989A30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x989A38", Offset = "0x989A38", VA = "0x989A38")]
		set
		{
		}
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x989B70", Offset = "0x989B70", VA = "0x989B70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x989C34", Offset = "0x989C34", VA = "0x989C34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x989CDC", Offset = "0x989CDC", VA = "0x989CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x9897E4", Offset = "0x9897E4", VA = "0x9897E4")]
	public bool HasTrailingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x98A048", Offset = "0x98A048", VA = "0x98A048")]
	public List<Pair<Vector3, int>> GetTrailingPos()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x98A050", Offset = "0x98A050", VA = "0x98A050")]
	public VisionTarget()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB90", Offset = "0x62BB90")]
[SelectionBase]
public class Zombie : FSMComponent, IAgent, IGameSerializable
{
	[Token(Token = "0x20003B8")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Wander;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State React;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Chase;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Attack;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Investigate;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Hurt;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FSM.State Death;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FSM.State Disappear;

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x996E7C", Offset = "0x996E7C", VA = "0x996E7C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E988", Offset = "0x62E988")]
	private sealed class <DeserializeAfterStart_co>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Zombie <>4__this;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x996FC0", Offset = "0x996FC0", VA = "0x996FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x997028", Offset = "0x997028", VA = "0x997028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x996D1C", Offset = "0x996D1C", VA = "0x996D1C")]
		[DebuggerHidden]
		public <DeserializeAfterStart_co>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x996E8C", Offset = "0x996E8C", VA = "0x996E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x996E90", Offset = "0x996E90", VA = "0x996E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x996FC8", Offset = "0x996FC8", VA = "0x996FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int attackDamage;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float attackRange;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventHub evHub;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentWalk agentWalk;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentVision agentVision;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AgentLightSense agentLightSense;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AgentHearing agentHearing;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animator;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Footsteps footSteps;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RandomSounds randomSounds;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JukeboxSetter jukeboxSetter;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AgentLookAt lookAt;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RagdollController ragdoll;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dissolve dissolve;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Collider> bodyColliders;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider lodCollider;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Collider moveCollider;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Collider tpCollider;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer[] bodyRenderers;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioCue reactSound;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioCue deathSound;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue painSound;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue attackSounds;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float audioYDelta;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chaseSpeedFactor;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float chaseRushSpeedFactor;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float chaseRushLengthMin;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float chaseRushLengthMax;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float chaseRushTimeoutMin;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float chaseRushTimeoutMax;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float chaseHurtCooldownMin;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float chaseHurtCooldownMax;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float attackCooldown;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float hurtInterruptCooldownLength;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool playReact;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ChaseTask chaseTask;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool inChaseRush;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float chaseRushTimer;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public InvestigateTask investigateTask;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool wasChasing;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool hurtInterruptCooldown;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int hurtFXTaskId;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public DeathTask deathTask;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AgentUtils.LODState lodState;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private AgentUtils.SerializedData serializedData;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x9939EC", Offset = "0x9939EC", VA = "0x9939EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x993B04", Offset = "0x993B04", VA = "0x993B04", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x993B5C", Offset = "0x993B5C", VA = "0x993B5C", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x993B88", Offset = "0x993B88", VA = "0x993B88")]
	private void Start()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x994218", Offset = "0x994218", VA = "0x994218")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x9942A0", Offset = "0x9942A0", VA = "0x9942A0")]
	private void Idle_OnTimer()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x99437C", Offset = "0x99437C", VA = "0x99437C")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x99442C", Offset = "0x99442C", VA = "0x99442C")]
	private void Wander_Enter()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x99451C", Offset = "0x99451C", VA = "0x99451C")]
	private void Wander_Update()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x99462C", Offset = "0x99462C", VA = "0x99462C")]
	private void React_Enter()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x99480C", Offset = "0x99480C", VA = "0x99480C")]
	private void React_Update()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x994AFC", Offset = "0x994AFC", VA = "0x994AFC")]
	private void React_Exit()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x994BB4", Offset = "0x994BB4", VA = "0x994BB4")]
	private void Chase_Enter()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x994C34", Offset = "0x994C34", VA = "0x994C34")]
	private void Chase_Update()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x994E88", Offset = "0x994E88", VA = "0x994E88")]
	private void Chase_Exit()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x994F40", Offset = "0x994F40", VA = "0x994F40")]
	private void Attack_Enter()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x995094", Offset = "0x995094", VA = "0x995094")]
	private void Attack_Update()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x995228", Offset = "0x995228", VA = "0x995228")]
	private void Attack_Exit()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x9952D0", Offset = "0x9952D0", VA = "0x9952D0")]
	private void Attack_OnTimer()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x99536C", Offset = "0x99536C", VA = "0x99536C")]
	private void Investigate_Enter()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x99538C", Offset = "0x99538C", VA = "0x99538C")]
	private void Investigate_Update()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x995450", Offset = "0x995450", VA = "0x995450")]
	private void Investigate_OnTimer()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x995504", Offset = "0x995504", VA = "0x995504")]
	private void Hurt_Enter()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x99570C", Offset = "0x99570C", VA = "0x99570C")]
	private void Hurt_Exit()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x99574C", Offset = "0x99574C", VA = "0x99574C")]
	private void Hurt_OnTimer()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x9958B8", Offset = "0x9958B8", VA = "0x9958B8")]
	private void OnHurtInterruptCooldown()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x9958C0", Offset = "0x9958C0", VA = "0x9958C0")]
	private void PlayHurtFX()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x995A5C", Offset = "0x995A5C", VA = "0x995A5C")]
	private void PlayHurtFX_End()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x995A68", Offset = "0x995A68", VA = "0x995A68")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x995BD4", Offset = "0x995BD4", VA = "0x995BD4")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x995CD0", Offset = "0x995CD0", VA = "0x995CD0")]
	private void Death_Exit()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x995CF0", Offset = "0x995CF0", VA = "0x995CF0")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x995D10", Offset = "0x995D10", VA = "0x995D10")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x995DE0", Offset = "0x995DE0", VA = "0x995DE0")]
	private void OnFinishDisappear(GameObject go)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x995EA0", Offset = "0x995EA0", VA = "0x995EA0")]
	private void OnCrossingDoor(Door door)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x995F30", Offset = "0x995F30", VA = "0x995F30")]
	private void OnHeardSound(HearingSystem.Soundwave sound)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x9962B4", Offset = "0x9962B4", VA = "0x9962B4")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x996428", Offset = "0x996428", VA = "0x996428")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x9964C4", Offset = "0x9964C4", VA = "0x9964C4")]
	private void EventAttack()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x996618", Offset = "0x996618", VA = "0x996618")]
	private void OnOcclusionChange(bool visibility, bool potentialVisibility)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x996794", Offset = "0x996794", VA = "0x996794")]
	private void OnRagdollChange(bool active)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x996900", Offset = "0x996900", VA = "0x996900", Slot = "12")]
	public void Teleport(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x996AC8", Offset = "0x996AC8", VA = "0x996AC8", Slot = "13")]
	public void EMPulse(Room room)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x996ACC", Offset = "0x996ACC", VA = "0x996ACC", Slot = "14")]
	public Renderer[] GetBodyRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x996AD4", Offset = "0x996AD4", VA = "0x996AD4", Slot = "15")]
	public string GetAgentName()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x996B1C", Offset = "0x996B1C", VA = "0x996B1C", Slot = "16")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x996BD4", Offset = "0x996BD4", VA = "0x996BD4", Slot = "17")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x9941EC", Offset = "0x9941EC", VA = "0x9941EC")]
	private void DeserializeAfterStart()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x996CA0", Offset = "0x996CA0", VA = "0x996CA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A0AC", Offset = "0x63A0AC")]
	private IEnumerator DeserializeAfterStart_co()
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x996D48", Offset = "0x996D48", VA = "0x996D48", Slot = "18")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x996DC0", Offset = "0x996DC0", VA = "0x996DC0")]
	public Zombie()
	{
	}

	[SpecialName]
	[Token(Token = "0x600089C")]
	[Address(RVA = "0x996E84", Offset = "0x996E84", VA = "0x996E84", Slot = "11")]
	private GameObject IAgent.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000E3")]
public class Jukebox : Singleton<Jukebox>
{
	[Serializable]
	[Token(Token = "0x20003BA")]
	public class Mood
	{
		[Serializable]
		[Token(Token = "0x20004FB")]
		public class Song
		{
			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip clip;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float baseVolume;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool loop;

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x96FBDC", Offset = "0x96FBDC", VA = "0x96FBDC")]
			public Song()
			{
			}
		}

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float silenceFreq;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float silenceMinTime;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float silenceMaxTime;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeoutMin;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float timeoutMax;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canFirstBeSilence;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Song[] songs;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastSong;

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x96F448", Offset = "0x96F448", VA = "0x96F448")]
		public Song ChooseSong(bool canChooseSilence = true)
		{
			return null;
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x96FAD8", Offset = "0x96FAD8", VA = "0x96FAD8")]
		public Song GetCurrentSong()
		{
			return null;
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x96F388", Offset = "0x96F388", VA = "0x96F388")]
		public void SetSilence()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x96FBB0", Offset = "0x96FBB0", VA = "0x96FBB0")]
		public Mood()
		{
		}
	}

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mood[] moods;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource channelExit;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource channelEnter;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource screechSound;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float exitTime;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float enterTime;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float volume;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mood baseMood;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mood enterMood;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mood exitMood;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float activeTimeout;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float screechTimeout;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float screechVolume;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6304B0", Offset = "0x6304B0")]
	public AudioSource huntMusic;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6304E8", Offset = "0x6304E8")]
	public float maxHuntVolume;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float huntFactor;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string wantedMood;

	[Token(Token = "0x40008A6")]
	private const string moodAmbience = "ambience";

	[Token(Token = "0x40008A7")]
	private const string moodIntense = "intense";

	[Token(Token = "0x40008A8")]
	private const string moodTension = "tension";

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x96ED20", Offset = "0x96ED20", VA = "0x96ED20")]
	private void Start()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x96EDB8", Offset = "0x96EDB8", VA = "0x96EDB8")]
	public void SetBaseMood(string moodName)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x96F144", Offset = "0x96F144", VA = "0x96F144")]
	public void SetActiveMood(string moodName, bool setAsWanted = true)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x96F1E0", Offset = "0x96F1E0", VA = "0x96F1E0")]
	public void SetIntense(float withScreech = 0f)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x96F2EC", Offset = "0x96F2EC", VA = "0x96F2EC")]
	public void SetTension()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x96F264", Offset = "0x96F264", VA = "0x96F264")]
	public void SetScreech(float screech)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x96F340", Offset = "0x96F340", VA = "0x96F340")]
	private void SetSilence()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x96F394", Offset = "0x96F394", VA = "0x96F394")]
	public void PlaySilence(float min, float max)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x96F43C", Offset = "0x96F43C", VA = "0x96F43C")]
	public void PlaySilence()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x96EF0C", Offset = "0x96EF0C", VA = "0x96EF0C")]
	private void SwapMoods()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x96F0D0", Offset = "0x96F0D0", VA = "0x96F0D0")]
	private void SetExitMood(Mood mood)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x96EF64", Offset = "0x96EF64", VA = "0x96EF64")]
	private void SetEnterMood(Mood mood)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x96EE80", Offset = "0x96EE80", VA = "0x96EE80")]
	private Mood SearchMood(string moodName)
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x96F504", Offset = "0x96F504", VA = "0x96F504")]
	private float SetSongInChannel(AudioSource channel, Mood.Song song)
	{
		return default(float);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x96F584", Offset = "0x96F584", VA = "0x96F584")]
	public void SetHuntMusic(float factor = 0f)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x96F60C", Offset = "0x96F60C", VA = "0x96F60C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x96FB2C", Offset = "0x96FB2C", VA = "0x96FB2C")]
	public Jukebox()
	{
	}
}
[Token(Token = "0x20000E4")]
public class JukeboxSetter : MonoBehaviour
{
	[Token(Token = "0x20003BB")]
	public enum MoodType
	{
		[Token(Token = "0x4001B71")]
		NoChange,
		[Token(Token = "0x4001B72")]
		Tension,
		[Token(Token = "0x4001B73")]
		Intense
	}

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoodType moodType;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool screech;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool requireVisible;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer renderer;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bodyCenterReference;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630500", Offset = "0x630500")]
	[SerializeField]
	private bool huntMode;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float huntMinDistance;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float huntMaxDistance;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int huntMaxRoomDistance;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MoodType overrideMood;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool wasVisible;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cacheFrames;

	[Token(Token = "0x170000B9")]
	public bool HuntMode
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x96FBEC", Offset = "0x96FBEC", VA = "0x96FBEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x96FBF4", Offset = "0x96FBF4", VA = "0x96FBF4")]
		set
		{
		}
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x96FC78", Offset = "0x96FC78", VA = "0x96FC78")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x970B44", Offset = "0x970B44", VA = "0x970B44")]
	public void PushTensionMood()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x970B50", Offset = "0x970B50", VA = "0x970B50")]
	public void PushIntenseMood()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x9708E0", Offset = "0x9708E0", VA = "0x9708E0")]
	private bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x970B5C", Offset = "0x970B5C", VA = "0x970B5C")]
	public JukeboxSetter()
	{
	}
}
[Token(Token = "0x20000E5")]
public class RandomSounds : MonoBehaviour
{
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E998", Offset = "0x62E998")]
	private sealed class <PlaySound>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomSounds <>4__this;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x8E67E4", Offset = "0x8E67E4", VA = "0x8E67E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x8E684C", Offset = "0x8E684C", VA = "0x8E684C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x8E6684", Offset = "0x8E6684", VA = "0x8E6684")]
		[DebuggerHidden]
		public <PlaySound>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x8E66D8", Offset = "0x8E66D8", VA = "0x8E66D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x8E66DC", Offset = "0x8E66DC", VA = "0x8E66DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x8E67EC", Offset = "0x8E67EC", VA = "0x8E67EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue sounds;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue intenseSounds;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool intenseMode;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float intervalMin;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float intervalMax;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float intervalIntenseModeFactor;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minRange;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRange;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minVolume;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxVolume;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playInmediate;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float highDistance;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float highDistanceChance;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float audioYDelta;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x8E6444", Offset = "0x8E6444", VA = "0x8E6444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x8E64EC", Offset = "0x8E64EC", VA = "0x8E64EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x8E64F4", Offset = "0x8E64F4", VA = "0x8E64F4")]
	public void PlayNow()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x8E6470", Offset = "0x8E6470", VA = "0x8E6470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A110", Offset = "0x63A110")]
	private IEnumerator PlaySound()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x8E66B0", Offset = "0x8E66B0", VA = "0x8E66B0")]
	public RandomSounds()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SpookSounds : MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9A8", Offset = "0x62E9A8")]
	private sealed class <PlaySpookSound>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <bFirstTime>5__2;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <nextWait>5__3;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x13740E8", Offset = "0x13740E8", VA = "0x13740E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x1374150", Offset = "0x1374150", VA = "0x1374150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x137387C", Offset = "0x137387C", VA = "0x137387C")]
		[DebuggerHidden]
		public <PlaySpookSound>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1373DCC", Offset = "0x1373DCC", VA = "0x1373DCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1373DD0", Offset = "0x1373DD0", VA = "0x1373DD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x13740F0", Offset = "0x13740F0", VA = "0x13740F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9B8", Offset = "0x62E9B8")]
	private sealed class <PlayDeepSounds>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextWait>5__2;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x1373B18", Offset = "0x1373B18", VA = "0x1373B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x1373B80", Offset = "0x1373B80", VA = "0x1373B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x13738A8", Offset = "0x13738A8", VA = "0x13738A8")]
		[DebuggerHidden]
		public <PlayDeepSounds>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1373944", Offset = "0x1373944", VA = "0x1373944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1373948", Offset = "0x1373948", VA = "0x1373948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1373B20", Offset = "0x1373B20", VA = "0x1373B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9C8", Offset = "0x62E9C8")]
	private sealed class <PlayPASounds>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpookSounds <>4__this;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextWait>5__2;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1373D5C", Offset = "0x1373D5C", VA = "0x1373D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x1373DC4", Offset = "0x1373DC4", VA = "0x1373DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x13738D4", Offset = "0x13738D4", VA = "0x13738D4")]
		[DebuggerHidden]
		public <PlayPASounds>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x1373B88", Offset = "0x1373B88", VA = "0x1373B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1373B8C", Offset = "0x1373B8C", VA = "0x1373B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1373D64", Offset = "0x1373D64", VA = "0x1373D64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue naturalSounds;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue monsterSounds;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float naturalWeight;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float monsterWeight;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SilenceProbability;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ShortWaitMin;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ShortWaitMax;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MediumWaitMin;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MediumWaitMax;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float LongWaitMin;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float LongWaitMax;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float MinDistance;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxDistance;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue deepSounds;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float deepWaitMin;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float deepWaitMax;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue paSounds;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float paWaitMin;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float paWaitMax;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float LastWait;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x13735A4", Offset = "0x13735A4", VA = "0x13735A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1373708", Offset = "0x1373708", VA = "0x1373708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A174", Offset = "0x63A174")]
	private IEnumerator PlaySpookSound()
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1373784", Offset = "0x1373784", VA = "0x1373784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A1D8", Offset = "0x63A1D8")]
	private IEnumerator PlayDeepSounds()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1373800", Offset = "0x1373800", VA = "0x1373800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A23C", Offset = "0x63A23C")]
	private IEnumerator PlayPASounds()
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1373900", Offset = "0x1373900", VA = "0x1373900")]
	public SpookSounds()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class Config
{
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class GeneralCfg
	{
		[Token(Token = "0x20004FC")]
		public enum BraceletHand
		{
			[Token(Token = "0x40020B6")]
			Left,
			[Token(Token = "0x40020B7")]
			Right
		}

		[Token(Token = "0x20004FD")]
		public enum MovementType
		{
			[Token(Token = "0x40020B9")]
			Jump,
			[Token(Token = "0x40020BA")]
			Smooth,
			[Token(Token = "0x40020BB")]
			Dash,
			[Token(Token = "0x40020BC")]
			Teleport
		}

		[Token(Token = "0x20004FE")]
		public enum MovementDirRef
		{
			[Token(Token = "0x40020BE")]
			LeftHand,
			[Token(Token = "0x40020BF")]
			RightHand,
			[Token(Token = "0x40020C0")]
			Head
		}

		[Token(Token = "0x20004FF")]
		public enum RotationType
		{
			[Token(Token = "0x40020C2")]
			Snap,
			[Token(Token = "0x40020C3")]
			Smooth
		}

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string language;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool tutorials;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BraceletHand braceletHand;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementType movementType;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MovementDirRef movementDirRef;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotationType rotationType;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int rotationSpeed;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool toggleGrab;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool forcedHeight;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool swapControls;

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x8364D8", Offset = "0x8364D8", VA = "0x8364D8")]
		public string Serialize(string key)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x8364E0", Offset = "0x8364E0", VA = "0x8364E0")]
		public void Deserialize(string jsonString)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x8360B8", Offset = "0x8360B8", VA = "0x8360B8")]
		public GeneralCfg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C1")]
	public class VideoCfg
	{
		[Token(Token = "0x2000500")]
		public enum MSAALevel
		{
			[Token(Token = "0x40020C5")]
			x0,
			[Token(Token = "0x40020C6")]
			x2,
			[Token(Token = "0x40020C7")]
			x4,
			[Token(Token = "0x40020C8")]
			x8
		}

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int qualityLevel;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pixelDensity;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MSAALevel msaaLevel;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool spectatorHUD;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x836558", Offset = "0x836558", VA = "0x836558")]
		public int GetMSAA()
		{
			return default(int);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x836128", Offset = "0x836128", VA = "0x836128")]
		public VideoCfg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C2")]
	public class AudioCfg
	{
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int masterVolume;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int musicVolume;

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x83614C", Offset = "0x83614C", VA = "0x83614C")]
		public AudioCfg()
		{
		}
	}

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Config instance;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GeneralCfg general;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoCfg video;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCfg audio;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x835F04", Offset = "0x835F04", VA = "0x835F04")]
	public static Config Get()
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x835FCC", Offset = "0x835FCC", VA = "0x835FCC")]
	private Config()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x83615C", Offset = "0x83615C", VA = "0x83615C")]
	public static GeneralCfg General()
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x8361C8", Offset = "0x8361C8", VA = "0x8361C8")]
	public static VideoCfg Video()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x836234", Offset = "0x836234", VA = "0x836234")]
	public static AudioCfg Audio()
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8362A0", Offset = "0x8362A0", VA = "0x8362A0")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x83642C", Offset = "0x83642C", VA = "0x83642C")]
	public static bool Save()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x8364CC", Offset = "0x8364CC", VA = "0x8364CC")]
	private string Serialize()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x836360", Offset = "0x836360", VA = "0x836360")]
	private bool Deserialize(string jsonString)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E8")]
public class DamageCapsule : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63054C", Offset = "0x63054C")]
	public float radius;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float length;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630584", Offset = "0x630584")]
	public Health.DamageType damageType;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int damage;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.Faction faction;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cycleTime;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool cyclic;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x86DDCC", Offset = "0x86DDCC", VA = "0x86DDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x86DE2C", Offset = "0x86DE2C", VA = "0x86DE2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x86DEA8", Offset = "0x86DEA8", VA = "0x86DEA8")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x86E030", Offset = "0x86E030", VA = "0x86E030")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x86E45C", Offset = "0x86E45C", VA = "0x86E45C")]
	public DamageCapsule()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BDBC", Offset = "0x62BDBC")]
public class DamageMultiplier : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float multiplierFactor;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x86E474", Offset = "0x86E474", VA = "0x86E474")]
	public DamageMultiplier()
	{
	}
}
[Token(Token = "0x20000EA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BE20", Offset = "0x62BE20")]
public class DamageTrigger : MonoBehaviour
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6305BC", Offset = "0x6305BC")]
	public Health.DamageType damageType;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Health.Faction faction;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6305F4", Offset = "0x6305F4")]
	public LayerMask layerMask;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyDamageOnStay;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider triggerCollider;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x86E484", Offset = "0x86E484", VA = "0x86E484")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x86E4E4", Offset = "0x86E4E4", VA = "0x86E4E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x86E654", Offset = "0x86E654", VA = "0x86E654")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x86E550", Offset = "0x86E550", VA = "0x86E550")]
	private void ApplyDamage(Collider other)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x86E6C8", Offset = "0x86E6C8", VA = "0x86E6C8")]
	public DamageTrigger()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62BE84", Offset = "0x62BE84")]
public class ExplosionDamage : ScriptableObject
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int explosionDamage;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float explosionRadius;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask affectedLayers;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float impactForce;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x87D9E8", Offset = "0x87D9E8", VA = "0x87D9E8")]
	public void Explode(Vector3 centerPos, Health.Faction faction)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x87DAD4", Offset = "0x87DAD4", VA = "0x87DAD4")]
	public ExplosionDamage()
	{
	}
}
[Token(Token = "0x20000EC")]
public sealed class Health : MonoBehaviour
{
	[Token(Token = "0x20003C3")]
	public enum DamageType
	{
		[Token(Token = "0x4001B95")]
		Kinetic,
		[Token(Token = "0x4001B96")]
		Fire,
		[Token(Token = "0x4001B97")]
		Electrical,
		[Token(Token = "0x4001B98")]
		Organic,
		[Token(Token = "0x4001B99")]
		Explosive
	}

	[Token(Token = "0x20003C4")]
	public enum ImpactSurfaceType
	{
		[Token(Token = "0x4001B9B")]
		HardSurface,
		[Token(Token = "0x4001B9C")]
		Organic
	}

	[Token(Token = "0x20003C5")]
	public enum Faction
	{
		[Token(Token = "0x4001B9E")]
		None,
		[Token(Token = "0x4001B9F")]
		Player,
		[Token(Token = "0x4001BA0")]
		Creature,
		[Token(Token = "0x4001BA1")]
		Defense,
		[Token(Token = "0x4001BA2")]
		Environment,
		[Token(Token = "0x4001BA3")]
		EnvironmentPlayer
	}

	[Token(Token = "0x20003C6")]
	public enum KillSignature
	{
		[Token(Token = "0x4001BA5")]
		Default,
		[Token(Token = "0x4001BA6")]
		Enemy_Cosmonaut,
		[Token(Token = "0x4001BA7")]
		Enemy_Crawler,
		[Token(Token = "0x4001BA8")]
		Enemy_Cytoma_Charge,
		[Token(Token = "0x4001BA9")]
		Enemy_Meatman,
		[Token(Token = "0x4001BAA")]
		Enemy_Zombie,
		[Token(Token = "0x4001BAB")]
		Enemy_Blob,
		[Token(Token = "0x4001BAC")]
		Security_Drone,
		[Token(Token = "0x4001BAD")]
		Security_Turret,
		[Token(Token = "0x4001BAE")]
		Hazard_Electrical,
		[Token(Token = "0x4001BAF")]
		Hazard_Leak_Steam,
		[Token(Token = "0x4001BB0")]
		Hazard_Leak_Fire,
		[Token(Token = "0x4001BB1")]
		Hazard_Vent_Tendril,
		[Token(Token = "0x4001BB2")]
		Weapon_Player,
		[Token(Token = "0x4001BB3")]
		Item_Projectile,
		[Token(Token = "0x4001BB4")]
		Explosion_Grenade_HE,
		[Token(Token = "0x4001BB5")]
		Explosion_Trapmine,
		[Token(Token = "0x4001BB6")]
		Explosion_Flammable,
		[Token(Token = "0x4001BB7")]
		Oxygen
	}

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KillSignature receivedKillSignature;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Faction receivedFaction;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int _healthPoints;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxHealth;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ImpactSurfaceType surfaceType;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ignoreDamage;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shake cameraShake;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630604", Offset = "0x630604")]
	public bool useChildrenColliders;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Collider> validColliders;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63063C", Offset = "0x63063C")]
	public float kineticResitance;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fireResistance;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float electricalResistance;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float organicResistance;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float explosiveResistance;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x630674", Offset = "0x630674")]
	public bool addDamageToPlayerStats;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliderBuffer;

	[Token(Token = "0x4000905")]
	private const int colliderBufferSize = 128;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isInFunction;

	[Token(Token = "0x170000BA")]
	[ShowNativeProperty]
	public int HealthPoints
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x896804", Offset = "0x896804", VA = "0x896804")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BB")]
	public float HealthPercent
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x89680C", Offset = "0x89680C", VA = "0x89680C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000027")]
	public event Action onDeath
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x88A918", Offset = "0x88A918", VA = "0x88A918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2A0", Offset = "0x63A2A0")]
		add
		{
		}
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x88AB04", Offset = "0x88AB04", VA = "0x88AB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2B0", Offset = "0x63A2B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action<int, Faction> onReceiveDamage
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x89348C", Offset = "0x89348C", VA = "0x89348C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2C0", Offset = "0x63A2C0")]
		add
		{
		}
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x8936D4", Offset = "0x8936D4", VA = "0x8936D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2D0", Offset = "0x63A2D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action onReceiveHeal
	{
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x896CAC", Offset = "0x896CAC", VA = "0x896CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2E0", Offset = "0x63A2E0")]
		add
		{
		}
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x896D50", Offset = "0x896D50", VA = "0x896D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A2F0", Offset = "0x63A2F0")]
		remove
		{
		}
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x896898", Offset = "0x896898", VA = "0x896898")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x8968B4", Offset = "0x8968B4", VA = "0x8968B4")]
	public ImpactSurfaceType ApplyDamage(int damage, DamageType damageType, Faction faction, [Optional] Collider collider, KillSignature killSignature = KillSignature.Default)
	{
		return default(ImpactSurfaceType);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x896B98", Offset = "0x896B98", VA = "0x896B98")]
	public void ApplyHeal(int points)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x896BC4", Offset = "0x896BC4", VA = "0x896BC4")]
	public void SetHealth(int newHealth)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x896BCC", Offset = "0x896BCC", VA = "0x896BCC")]
	public bool IsValidReceiver(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x896DF4", Offset = "0x896DF4", VA = "0x896DF4")]
	public static bool AddDamageCapsule(Vector3 startPoint, Vector3 endPoint, float radius, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x897290", Offset = "0x897290", VA = "0x897290")]
	public static bool AddDamageSphere(Vector3 center, float radius, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x897704", Offset = "0x897704", VA = "0x897704")]
	public static bool AddDamageBlastSphere(Vector3 center, float radius, LayerMask layerMask, int maxDamage, DamageType damageType, Faction faction, [Optional] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x898680", Offset = "0x898680", VA = "0x898680")]
	public static bool AddDamageBox(Vector3 center, Vector3 halfExtents, Quaternion orientation, LayerMask layerMask, int damage, DamageType damageType, Faction faction, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x898B1C", Offset = "0x898B1C", VA = "0x898B1C")]
	public static bool RaycastDamage(Vector3 origin, Vector3 direction, float range, LayerMask layerMask, int damage, DamageType damageType, Faction faction, bool addImpactForce, [Optional][MetadataOffset(Offset = "0x20AB1C")] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x88F3E0", Offset = "0x88F3E0", VA = "0x88F3E0")]
	public static bool RaycastDamage(Vector3 origin, Vector3 direction, float range, LayerMask layerMask, int damage, DamageType damageType, out RaycastHit hitInfo, out ImpactSurfaceType surfaceType, Faction faction, [Optional][MetadataOffset(Offset = "0x20AB24")] float? impactForce, KillSignature signature = KillSignature.Default)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x898C44", Offset = "0x898C44", VA = "0x898C44")]
	public static int AddHealSphere(Vector3 center, float radius, LayerMask layerMask, int healPoints, bool mustBePlayer = false)
	{
		return default(int);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x8990C0", Offset = "0x8990C0", VA = "0x8990C0")]
	public Health()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62BEC8", Offset = "0x62BEC8")]
public class ProjectileDamage : ScriptableObject
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6306B4", Offset = "0x6306B4")]
	public Health.DamageType damageType;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float impactForce;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6306EC", Offset = "0x6306EC")]
	public Transform impactFXHardSurface;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue impactSoundHardSurface;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform impactFXOrganic;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue impactSoundOrganic;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x849738", Offset = "0x849738", VA = "0x849738")]
	public void ApplyHitEffect(Health.ImpactSurfaceType surfaceType, Vector3 hitPoint, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x84C52C", Offset = "0x84C52C", VA = "0x84C52C")]
	public ProjectileDamage()
	{
	}
}
[Token(Token = "0x20000EE")]
public class ColorFlicker : MonoBehaviour
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient colorGradient;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float frequency;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offset;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyToLight;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool applyToLineRenderer;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool applyToMaterial;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool applyToMaterialTint;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light light;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer line;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x830304", Offset = "0x830304", VA = "0x830304")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x8303E8", Offset = "0x8303E8", VA = "0x8303E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x830634", Offset = "0x830634", VA = "0x830634")]
	public ColorFlicker()
	{
	}
}
[Token(Token = "0x20000EF")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BF0C", Offset = "0x62BF0C")]
public class DecalUVNormalizer : MonoBehaviour, IMeshProcessor
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EasyDecal decal;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x86EB6C", Offset = "0x86EB6C", VA = "0x86EB6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x86EC48", Offset = "0x86EC48", VA = "0x86EC48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x86ED00", Offset = "0x86ED00", VA = "0x86ED00", Slot = "4")]
	public void Process(IMesh mesh)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x86EFD4", Offset = "0x86EFD4", VA = "0x86EFD4")]
	public DecalUVNormalizer()
	{
	}
}
[Token(Token = "0x20000F0")]
public class Dissolve : MonoBehaviour
{
	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material dissolveBaseMaterial;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnEnd;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fabricate;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float solidProgress;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject baseRenderer;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] objRenderers;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader[] oldShaders;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material newMaterial;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem particleFX;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool applyParticlesToRenderers;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x630724", Offset = "0x630724")]
	public ParticleSystem rendererParticleFXPrefab;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x63075C", Offset = "0x63075C")]
	public Renderer[] renderersForParticlesFX;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioCue dissolveSound;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<GameObject> onFinished;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x8722D8", Offset = "0x8722D8", VA = "0x8722D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x87246C", Offset = "0x87246C", VA = "0x87246C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x872CDC", Offset = "0x872CDC", VA = "0x872CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x872F78", Offset = "0x872F78", VA = "0x872F78")]
	private void OnParticleEnd()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x872FF4", Offset = "0x872FF4", VA = "0x872FF4")]
	public Dissolve()
	{
	}
}
[Token(Token = "0x20000F1")]
public class FabricationFX : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fxBaseMaterial;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnEnd;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fabricate;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float solidProgress;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 cutRange;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject baseRenderer;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> objRenderers;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shader[][] oldShaders;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material newMaterial;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particleFX;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<GameObject> onFinished;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 cutPosition;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rb;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x880F70", Offset = "0x880F70", VA = "0x880F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x881694", Offset = "0x881694", VA = "0x881694")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x881D00", Offset = "0x881D00", VA = "0x881D00")]
	private void OnParticleEnd()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x881D7C", Offset = "0x881D7C", VA = "0x881D7C")]
	public FabricationFX()
	{
	}
}
[Token(Token = "0x20000F2")]
public class FlickerLight : MonoBehaviour
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_Rnd;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_Burning;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light m_Light;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offsetFactor;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xAB0C84", Offset = "0xAB0C84", VA = "0xAB0C84")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xAB0CFC", Offset = "0xAB0CFC", VA = "0xAB0CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xAB0F28", Offset = "0xAB0F28", VA = "0xAB0F28")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xAB0F50", Offset = "0xAB0F50", VA = "0xAB0F50")]
	public FlickerLight()
	{
	}
}
[Token(Token = "0x20000F3")]
public class GrowableBodyPart : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bodyPart;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 defaultScale;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 defaultOffset;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleCurveX;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve scaleCurveY;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve scaleCurveZ;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animSpeed;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float animTimerMin;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float animTimerMax;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float animFactor;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float animFactorTarget;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float animTimer;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x88D760", Offset = "0x88D760", VA = "0x88D760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x88D858", Offset = "0x88D858", VA = "0x88D858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x88DA6C", Offset = "0x88DA6C", VA = "0x88DA6C")]
	public GrowableBodyPart()
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BF80", Offset = "0x62BF80")]
public class GunTrails : MonoBehaviour
{
	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float trailDuration;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float trailLife;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startLifeColor;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startLifeWidth;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color endLifeColor;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float endLifeWidth;

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x88DA88", Offset = "0x88DA88", VA = "0x88DA88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x88DAE8", Offset = "0x88DAE8", VA = "0x88DAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x88DB08", Offset = "0x88DB08", VA = "0x88DB08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x88DC98", Offset = "0x88DC98", VA = "0x88DC98")]
	public void AddTrail(Vector3 posBegin, Vector3 posEnd)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x88DD44", Offset = "0x88DD44", VA = "0x88DD44")]
	public GunTrails()
	{
	}
}
[Token(Token = "0x20000F5")]
public class HoleField : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem collisionFX;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue collisionSound;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bounceImpulse;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x899E10", Offset = "0x899E10", VA = "0x899E10")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x89A190", Offset = "0x89A190", VA = "0x89A190")]
	public HoleField()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Lightning : MonoBehaviour
{
	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform beamTarget;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textureTiles;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float beamScale;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float animUVSpeed;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float beamAmplitude;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float beamOscillateRate;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float oscillateTimer;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer beamRenderer;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Light pointLight;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float beamLength;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initialBeamOffset;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x977E48", Offset = "0x977E48", VA = "0x977E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x977F40", Offset = "0x977F40", VA = "0x977F40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x9782B8", Offset = "0x9782B8", VA = "0x9782B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x978364", Offset = "0x978364", VA = "0x978364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x977F88", Offset = "0x977F88", VA = "0x977F88")]
	private void UpdateBeam()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x9781D8", Offset = "0x9781D8", VA = "0x9781D8")]
	private void AnimateUV()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x9784E8", Offset = "0x9784E8", VA = "0x9784E8")]
	public Lightning()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BFE4", Offset = "0x62BFE4")]
public class MeltFX : FSMComponent
{
	[Token(Token = "0x20003C7")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Appear;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State MeltUp;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Default;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State MeltDown;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Disappear;

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xA5E7D4", Offset = "0xA5E7D4", VA = "0xA5E7D4")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer meltRenderer;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float depth;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float depthMeltUp;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float depthMeltDown;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxMeltFactor;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float heightOffset;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float meltUpSpeed;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float meltDownSpeed;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float disappearSpeed;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float appearSpeed;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float sphereMaxRadius;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioFX;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material meltMaterial;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float progress;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 meltedPos;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 raisedPos;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool halfMeltDown;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool disappearAfterMeltDown;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EventHub evHub;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int onFullMelted;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly int onAppear;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly int onMeltUp;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly int onMeltDownStart;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int onMeltDown;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly int onDisappear;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xA5CAF8", Offset = "0xA5CAF8", VA = "0xA5CAF8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xA5CBDC", Offset = "0xA5CBDC", VA = "0xA5CBDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xA5CC78", Offset = "0xA5CC78", VA = "0xA5CC78")]
	public void DoAppear()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xA5CD34", Offset = "0xA5CD34", VA = "0xA5CD34")]
	public void DoMeltUp()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xA5CDF0", Offset = "0xA5CDF0", VA = "0xA5CDF0")]
	public void DoMeltDown(bool disappearWhenDone = false, bool halfMeltDown = false)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xA5CF38", Offset = "0xA5CF38", VA = "0xA5CF38")]
	public void DoDisappear()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xA5D14C", Offset = "0xA5D14C", VA = "0xA5D14C")]
	private void SetFullMelted()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xA5D260", Offset = "0xA5D260", VA = "0xA5D260")]
	public void ResetToDefault()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xA5D3D0", Offset = "0xA5D3D0", VA = "0xA5D3D0")]
	private void Appear_Enter()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xA5D620", Offset = "0xA5D620", VA = "0xA5D620")]
	private void Appear_Update()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xA5D798", Offset = "0xA5D798", VA = "0xA5D798")]
	private void Appear_Exit()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xA5D884", Offset = "0xA5D884", VA = "0xA5D884")]
	private void MeltUp_Enter()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xA5D960", Offset = "0xA5D960", VA = "0xA5D960")]
	private void MeltUp_Update()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xA5DB98", Offset = "0xA5DB98", VA = "0xA5DB98")]
	private void MeltUp_Exit()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xA5DC58", Offset = "0xA5DC58", VA = "0xA5DC58")]
	private void Default_Enter()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xA5DD50", Offset = "0xA5DD50", VA = "0xA5DD50")]
	private void MeltDown_Enter()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xA5DEB8", Offset = "0xA5DEB8", VA = "0xA5DEB8")]
	private void MeltDown_Update()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xA5E208", Offset = "0xA5E208", VA = "0xA5E208")]
	private void MeltDown_Exit()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xA5E288", Offset = "0xA5E288", VA = "0xA5E288")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xA5E490", Offset = "0xA5E490", VA = "0xA5E490")]
	private void Disappear_Update()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xA5E5FC", Offset = "0xA5E5FC", VA = "0xA5E5FC")]
	private void Disappear_Exit()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xA5E67C", Offset = "0xA5E67C", VA = "0xA5E67C")]
	public MeltFX()
	{
	}
}
[Token(Token = "0x20000F8")]
[ExecuteInEditMode]
public class Monochromize : MonoBehaviour
{
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630794", Offset = "0x630794")]
	public float intensity;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float brightnessFactor;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xA6E064", Offset = "0xA6E064", VA = "0xA6E064")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xA6E068", Offset = "0xA6E068", VA = "0xA6E068")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xA6E130", Offset = "0xA6E130", VA = "0xA6E130")]
	public Monochromize()
	{
	}
}
[Token(Token = "0x20000F9")]
public class MuzzleFlash : MonoBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool randomizeRotation;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool loop;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeCounter;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xA7169C", Offset = "0xA7169C", VA = "0xA7169C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xA71764", Offset = "0xA71764", VA = "0xA71764")]
	private void Update()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xA717D8", Offset = "0xA717D8", VA = "0xA717D8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xA71800", Offset = "0xA71800", VA = "0xA71800")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xA71828", Offset = "0xA71828", VA = "0xA71828")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C058", Offset = "0x62C058")]
public class PulsingFlesh : MonoBehaviour
{
	[Token(Token = "0x400097D")]
	private const float highFreqScale = 100000f;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lowFreqScale;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D mask;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x84C540", Offset = "0x84C540", VA = "0x84C540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x84C544", Offset = "0x84C544", VA = "0x84C544")]
	public static void ApplyToMesh(Mesh mesh, float lowFreqScale, Texture2D mask)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x84C998", Offset = "0x84C998", VA = "0x84C998")]
	public PulsingFlesh()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Shake : MonoBehaviour
{
	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intensityDecayRate;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool applyTranslation;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 maxOffset;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool applyRotation;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxYaw;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxPitch;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRoll;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseFreq;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] perlinSeeds;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6307AC", Offset = "0x6307AC")]
	public bool _addLow;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6307F0", Offset = "0x6307F0")]
	public bool _addMedium;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x630834", Offset = "0x630834")]
	public bool _addStrong;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x13652F8", Offset = "0x13652F8", VA = "0x13652F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1365378", Offset = "0x1365378", VA = "0x1365378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1365714", Offset = "0x1365714", VA = "0x1365714")]
	public void Add(float traumaIntensity = 0.2f)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1365794", Offset = "0x1365794", VA = "0x1365794")]
	public void AddLow()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x13657A0", Offset = "0x13657A0", VA = "0x13657A0")]
	public void AddMedium()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x13657A8", Offset = "0x13657A8", VA = "0x13657A8")]
	public void AddStrong()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x13657B4", Offset = "0x13657B4", VA = "0x13657B4")]
	public Shake()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ShakeSource : MonoBehaviour
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float period;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool requireVisible;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shake camShake;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer renderer;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1365874", Offset = "0x1365874", VA = "0x1365874")]
	private void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1365930", Offset = "0x1365930", VA = "0x1365930")]
	private void Update()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1365998", Offset = "0x1365998", VA = "0x1365998")]
	public void TriggerPulse()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1365C44", Offset = "0x1365C44", VA = "0x1365C44")]
	public ShakeSource()
	{
	}
}
[Token(Token = "0x20000FD")]
public class TeleportIconAnim : MonoBehaviour
{
	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleUpSpeed;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float auraPulse;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform iconObj;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform auraObj;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float auraVertScale;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hiding;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1376B10", Offset = "0x1376B10", VA = "0x1376B10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1376B14", Offset = "0x1376B14", VA = "0x1376B14")]
	public void Show()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1376C54", Offset = "0x1376C54", VA = "0x1376C54")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1376C7C", Offset = "0x1376C7C", VA = "0x1376C7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1377050", Offset = "0x1377050", VA = "0x1377050")]
	public TeleportIconAnim()
	{
	}
}
[Token(Token = "0x20000FE")]
public class Tendril : MonoBehaviour, IRoomInfestationPart
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool proceduralMesh;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minLength;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float length;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lengthFactor;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool animateLength;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float animateLengthSpeed;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minBaseRadius;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxBaseRadius;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float baseRadius;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float radiusFactor;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minLengthFactor;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minRadiusFactor;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numSegments;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numSides;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool multiBones;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool addColliders;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool addRagdoll;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x630878", Offset = "0x630878")]
	public float ragdollMass;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x6308B0", Offset = "0x6308B0")]
	public Rigidbody ragdollRoot;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useRadiusCurve;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve radiusCurve;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float animAmplitudeFactor;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float animFrequencyFactor;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMeshRenderer renderer;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] animAmplitude;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] animFreq;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float animPhaseOffset;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float animLengthTimer;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float animLengthTarget;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float animLengthTimerMin;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float animLengthTimerMax;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool ignoreMeltEvents;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool ignoreAgentEvents;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float boneScaleOnHide;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float collapseScaleFactor;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6308E8", Offset = "0x6308E8")]
	public bool bezierTarget;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform bezierTargetObj;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 bezierTargetPos;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 bezierTargetNormal;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630920", Offset = "0x630920")]
	public float spasmFactor;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EventHub evHub;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool forceHidden;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform[] bones;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CapsuleCollider[] colliders;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody[] rBodies;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] customSegmentProgress;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3[] controlPoints;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x137706C", Offset = "0x137706C", VA = "0x137706C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1377368", Offset = "0x1377368", VA = "0x1377368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x137762C", Offset = "0x137762C", VA = "0x137762C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x13776CC", Offset = "0x13776CC", VA = "0x13776CC")]
	private void CreateMesh()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1378804", Offset = "0x1378804", VA = "0x1378804")]
	private void ProcessMesh()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1378FC8", Offset = "0x1378FC8", VA = "0x1378FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1379294", Offset = "0x1379294", VA = "0x1379294")]
	private void UpdateBones(bool useBezier, Vector3 bTarget, Vector3 bTargetNormal)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x137A114", Offset = "0x137A114", VA = "0x137A114")]
	private void AddSpasms()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x137A5B8", Offset = "0x137A5B8", VA = "0x137A5B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x137A7D0", Offset = "0x137A7D0", VA = "0x137A7D0")]
	public Transform GetBone(int idx)
	{
		return null;
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x137A81C", Offset = "0x137A81C", VA = "0x137A81C")]
	public void SetHidden(bool isHidden)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x137A828", Offset = "0x137A828", VA = "0x137A828")]
	private void OnAgentAppear()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x137A830", Offset = "0x137A830", VA = "0x137A830")]
	private void OnAgentDie()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x137A83C", Offset = "0x137A83C", VA = "0x137A83C")]
	private void OnAgentDisappear()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x137A850", Offset = "0x137A850", VA = "0x137A850")]
	public void SetHierarchy(bool inHierarchy)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x137A8D8", Offset = "0x137A8D8", VA = "0x137A8D8")]
	public void SetCollidersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x137A954", Offset = "0x137A954", VA = "0x137A954")]
	public bool ApplyDamage(ref Vector3 lastPos, float radius, LayerMask layerMask, int damage, Health.Faction faction, Health.KillSignature killSignature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x137AA90", Offset = "0x137AA90", VA = "0x137AA90", Slot = "5")]
	public void SetInfestationLevel(float level)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x137AB20", Offset = "0x137AB20", VA = "0x137AB20")]
	public Tendril()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000958")]
	[Address(RVA = "0x137ABF4", Offset = "0x137ABF4", VA = "0x137ABF4", Slot = "4")]
	private GameObject IRoomInfestationPart.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000FF")]
public class VertexTendril : MonoBehaviour
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minLength;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxLength;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float length;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lengthFactor;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool animateLength;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float animateLengthSpeed;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minBaseRadius;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxBaseRadius;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float baseRadius;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float radiusFactor;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numSegments;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numSides;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useRadiusCurve;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve radiusCurve;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float animAmplitudeFactor;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float animFrequencyFactor;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer renderer;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] animAmplitude;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] animFreq;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float animPhaseOffset;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float animLengthTimer;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float animLengthTarget;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float animLengthTimerMin;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float animLengthTimerMax;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630958", Offset = "0x630958")]
	public bool bezierTarget;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform bezierTargetObj;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 bezierTargetPos;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 bezierTargetNormal;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EventHub evHub;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool forceHidden;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] verts;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] normals;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] controlPoints;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x984800", Offset = "0x984800", VA = "0x984800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x9849D4", Offset = "0x9849D4", VA = "0x9849D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x984B7C", Offset = "0x984B7C", VA = "0x984B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x985AF8", Offset = "0x985AF8", VA = "0x985AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x98512C", Offset = "0x98512C", VA = "0x98512C")]
	private void UpdatePositions()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x985D48", Offset = "0x985D48", VA = "0x985D48")]
	private void UpdatePositionsBezier(Vector3 bTarget, Vector3 bTargetNormal)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x98685C", Offset = "0x98685C", VA = "0x98685C")]
	private void OnMeltFXUp()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x986864", Offset = "0x986864", VA = "0x986864")]
	private void OnMeltFXDownStart()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x986870", Offset = "0x986870", VA = "0x986870")]
	private void OnMeltFXFullMelted()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x986880", Offset = "0x986880", VA = "0x986880")]
	public VertexTendril()
	{
	}
}
[Token(Token = "0x2000100")]
public class WarpJump : MonoBehaviour
{
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9D8", Offset = "0x62E9D8")]
	private sealed class <Warp_co>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WarpJump <>4__this;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material targetSkybox;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callbackMiddle;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <exposureStart>5__2;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <exposureEnd>5__3;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <colorStart>5__4;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <colorEnd>5__5;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <transFactor>5__6;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <target>5__7;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <progress>5__8;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x9936FC", Offset = "0x9936FC", VA = "0x9936FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x993764", Offset = "0x993764", VA = "0x993764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x9931E8", Offset = "0x9931E8", VA = "0x9931E8")]
		[DebuggerHidden]
		public <Warp_co>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x993224", Offset = "0x993224", VA = "0x993224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x993228", Offset = "0x993228", VA = "0x993228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x993704", Offset = "0x993704", VA = "0x993704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve warpTransition;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float warpSpeed;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material warpSkybox;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spaceObjs;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIGalaxyView galaxyViewConsole;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource warpSound;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x993098", Offset = "0x993098", VA = "0x993098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x993110", Offset = "0x993110", VA = "0x993110")]
	public void Warp(Material targetSkybox, Action callbackMiddle)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x99313C", Offset = "0x99313C", VA = "0x99313C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A300", Offset = "0x63A300")]
	public IEnumerator Warp_co(Material targetSkybox, Action callbackMiddle)
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x993214", Offset = "0x993214", VA = "0x993214")]
	public WarpJump()
	{
	}
}
[Token(Token = "0x2000101")]
public class AnimEvents : MonoBehaviour
{
	[Token(Token = "0x6000967")]
	[Address(RVA = "0x969188", Offset = "0x969188", VA = "0x969188")]
	public AnimEvents()
	{
	}
}
[Token(Token = "0x2000102")]
public class AnimStateEvents : StateMachineBehaviour
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _inState;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onEnter;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action onExit;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventHub evHub;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string eventEnter;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int eventEnterHash;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string eventExit;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int eventExitHash;

	[Token(Token = "0x170000BC")]
	public bool InState
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x969AC4", Offset = "0x969AC4", VA = "0x969AC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x969ACC", Offset = "0x969ACC", VA = "0x969ACC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x969B80", Offset = "0x969B80", VA = "0x969B80", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x969C30", Offset = "0x969C30", VA = "0x969C30")]
	public static void SetEventHub(Animator animator, EventHub hub)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x969D3C", Offset = "0x969D3C", VA = "0x969D3C")]
	public AnimStateEvents()
	{
	}
}
[Token(Token = "0x2000103")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62C0BC", Offset = "0x62C0BC")]
public class AudioCue : ScriptableObject
{
	[Token(Token = "0x20003C9")]
	public enum PlaybackType
	{
		[Token(Token = "0x4001BCA")]
		Random,
		[Token(Token = "0x4001BCB")]
		TrueRandom,
		[Token(Token = "0x4001BCC")]
		Sequential
	}

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630990", Offset = "0x630990")]
	public AudioClip[] clips;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6309C8", Offset = "0x6309C8")]
	public PlaybackType playbackType;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup mixerOutput;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loop;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630A00", Offset = "0x630A00")]
	public int priority;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630A1C", Offset = "0x630A1C")]
	public float volume;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630A34", Offset = "0x630A34")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x630A34", Offset = "0x630A34")]
	public Vector2 pitch;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630A90", Offset = "0x630A90")]
	public bool spatialized;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630AC8", Offset = "0x630AC8")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x630AC8", Offset = "0x630AC8")]
	public Vector2 range;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630B28", Offset = "0x630B28")]
	public bool useCustomFalloffCurve;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve customFalloff;

	[NonSerialized]
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int lastSelectedIdx;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x820360", Offset = "0x820360", VA = "0x820360")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x820448", Offset = "0x820448", VA = "0x820448")]
	public float GetPitch()
	{
		return default(float);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x820454", Offset = "0x820454", VA = "0x820454")]
	public float GetRangeMin()
	{
		return default(float);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x82045C", Offset = "0x82045C", VA = "0x82045C")]
	public float GetRangeMax()
	{
		return default(float);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x820464", Offset = "0x820464", VA = "0x820464")]
	public AudioSource Play(Vector3 position, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x82076C", Offset = "0x82076C", VA = "0x82076C")]
	public AudioCue()
	{
	}
}
[Token(Token = "0x2000104")]
public class AudioExt : Singleton<AudioExt>
{
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cacheSize;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spatializeGain;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixer masterMixer;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup mixerGroupDefault;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve defaultFalloffCurve;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AudioSource> freeSources;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AudioSource> usedSources;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AudioSource> freeSpatializedSources;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AudioSource> usedSpatializedSources;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float masterVolume;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float volumeMultiplier;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float musicVolume;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool firstUpdate;

	[Token(Token = "0x170000BD")]
	public float MasterVolume
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x82084C", Offset = "0x82084C", VA = "0x82084C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x820854", Offset = "0x820854", VA = "0x820854")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public float VolumeMultiplier
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8209C4", Offset = "0x8209C4", VA = "0x8209C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x8209CC", Offset = "0x8209CC", VA = "0x8209CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public float MusicVolume
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x820A40", Offset = "0x820A40", VA = "0x820A40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x820A48", Offset = "0x820A48", VA = "0x820A48")]
		set
		{
		}
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x820AB8", Offset = "0x820AB8", VA = "0x820AB8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x820BB8", Offset = "0x820BB8", VA = "0x820BB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x820E0C", Offset = "0x820E0C", VA = "0x820E0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x8208C8", Offset = "0x8208C8", VA = "0x8208C8")]
	private void SetMixerVolume(float volume, string parameter = "MasterVolume", float maxDb = 0f, float zeroDb = -80f)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x820B5C", Offset = "0x820B5C", VA = "0x820B5C")]
	private float GetMixerVolume(string parameter = "MasterVolume", float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x820E10", Offset = "0x820E10", VA = "0x820E10")]
	public static float AttenuationFromVolume(float volume, float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x820EB8", Offset = "0x820EB8", VA = "0x820EB8")]
	public static float VolumeFromAttenuation(float attenuationDb, float maxDb = 0f, float zeroDb = -80f)
	{
		return default(float);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x820F50", Offset = "0x820F50", VA = "0x820F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x8214B8", Offset = "0x8214B8", VA = "0x8214B8")]
	public static AudioSource PlayClipAtPoint(AudioClip clip, Vector3 position, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x821744", Offset = "0x821744", VA = "0x821744")]
	public static AudioSource PlayClipOnObject(AudioClip clip, Transform obj, Vector3 localPosition, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x8218CC", Offset = "0x8218CC", VA = "0x8218CC")]
	public static AudioSource PlayClipAtPoint(AudioClip[] clips, Vector3 position, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x8219A0", Offset = "0x8219A0", VA = "0x8219A0")]
	public static AudioSource PlayClipOnObject(AudioClip[] clips, Transform obj, Vector3 localPosition, float volume = 1f, bool spatialized = true, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x820468", Offset = "0x820468", VA = "0x820468")]
	public static AudioSource PlayCue(AudioCue cue, Vector3 position, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x821A7C", Offset = "0x821A7C", VA = "0x821A7C")]
	public static AudioSource PlayClipAtPoint(AudioCue cue, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x821A84", Offset = "0x821A84", VA = "0x821A84")]
	public static AudioSource PlayClipOnObject(AudioCue cue, Transform obj, Vector3 localPosition)
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x821A88", Offset = "0x821A88", VA = "0x821A88")]
	public static AudioSource PlayClipAtPoint(AudioCue cue, Vector3 position, float volume = 1f, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x821AF0", Offset = "0x821AF0", VA = "0x821AF0")]
	public static AudioSource PlayClipOnObject(AudioCue cue, Transform obj, Vector3 localPosition, float volume = 1f, float maxRange = 25f)
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x821B54", Offset = "0x821B54", VA = "0x821B54")]
	public void StopAll(bool onlyLooping = false)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x821618", Offset = "0x821618", VA = "0x821618")]
	private AudioSource GetFreeSource(bool spatialized)
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x821288", Offset = "0x821288", VA = "0x821288")]
	private void SetFree(AudioSource src)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x820CB4", Offset = "0x820CB4", VA = "0x820CB4")]
	private void BuildCache(int size, bool spatialized)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x8216FC", Offset = "0x8216FC", VA = "0x8216FC")]
	private static void SetRange(AudioSource src, bool spatialized, float maxRange, float minRange = 1f)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x821E50", Offset = "0x821E50", VA = "0x821E50")]
	public AudioExt()
	{
	}
}
[Token(Token = "0x2000105")]
public class CachedArray
{
	[Token(Token = "0x20003CA")]
	private class CacheData
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ICollection> arraysStack;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numUsed;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x82D9F0", Offset = "0x82D9F0", VA = "0x82D9F0")]
		public CacheData()
		{
		}
	}

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, CacheData> cache;

	[Token(Token = "0x6000990")]
	public static T[] Get<T>(int minSize = 32)
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	public static void Free<T>(T[] array)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x82D6F8", Offset = "0x82D6F8", VA = "0x82D6F8")]
	public static void FreeAll()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x82D970", Offset = "0x82D970", VA = "0x82D970")]
	public CachedArray()
	{
	}
}
[Token(Token = "0x2000106")]
public class CachedList
{
	[Token(Token = "0x20003CB")]
	private class CacheData
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IList> listsStack;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numUsed;

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x82DD6C", Offset = "0x82DD6C", VA = "0x82DD6C")]
		public CacheData()
		{
		}
	}

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, CacheData> cache;

	[Token(Token = "0x6000995")]
	public static List<T> Get<T>()
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	public static void Free<T>(List<T> list)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x82DA74", Offset = "0x82DA74", VA = "0x82DA74")]
	public static void FreeAll()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x82DCEC", Offset = "0x82DCEC", VA = "0x82DCEC")]
	public CachedList()
	{
	}
}
[Token(Token = "0x2000107")]
public class CamCenter : TimeIndependentBehaviour
{
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9E8", Offset = "0x62E9E8")]
	private sealed class <Recenter_co>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CamCenter <>4__this;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x82F17C", Offset = "0x82F17C", VA = "0x82F17C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x82F1E4", Offset = "0x82F1E4", VA = "0x82F1E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x82F07C", Offset = "0x82F07C", VA = "0x82F07C")]
		[DebuggerHidden]
		public <Recenter_co>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x82F0C8", Offset = "0x82F0C8", VA = "0x82F0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x82F0CC", Offset = "0x82F0CC", VA = "0x82F0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x82F184", Offset = "0x82F184", VA = "0x82F184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lookDirection;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform centerObj;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 centerPos;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool keepCentered;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxAngle;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useDefaultDistance;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float desiredDistance;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool recenterOnStart;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool recenterOnHMDReset;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool testCollisions;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask collisionMask;

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x82E6E4", Offset = "0x82E6E4", VA = "0x82E6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x82E94C", Offset = "0x82E94C", VA = "0x82E94C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x82EE0C", Offset = "0x82EE0C", VA = "0x82EE0C")]
	public void Recenter()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x82E8D0", Offset = "0x82E8D0", VA = "0x82E8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A364", Offset = "0x63A364")]
	private IEnumerator Recenter_co()
	{
		return null;
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x82F0A8", Offset = "0x82F0A8", VA = "0x82F0A8")]
	public CamCenter()
	{
	}
}
[Token(Token = "0x2000108")]
public class DebugBounds : MonoBehaviour
{
	[Token(Token = "0x600099F")]
	[Address(RVA = "0x86E9F8", Offset = "0x86E9F8", VA = "0x86E9F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x86EB44", Offset = "0x86EB44", VA = "0x86EB44")]
	public DebugBounds()
	{
	}
}
[Token(Token = "0x2000109")]
public class DbgUtils
{
	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x86E97C", Offset = "0x86E97C", VA = "0x86E97C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x63A3C8", Offset = "0x63A3C8")]
	public static void Assert(bool condition)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x86E9F0", Offset = "0x86E9F0", VA = "0x86E9F0")]
	public DbgUtils()
	{
	}
}
[Token(Token = "0x200010A")]
public class DestroyOnPlay : MonoBehaviour
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool randomize;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x630B60", Offset = "0x630B60")]
	public float stayChance;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x871558", Offset = "0x871558", VA = "0x871558")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x8715FC", Offset = "0x8715FC", VA = "0x8715FC")]
	public DestroyOnPlay()
	{
	}
}
[Token(Token = "0x200010B")]
public class DiamondSquare
{
	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x871604", Offset = "0x871604", VA = "0x871604")]
	public static float[] Generate(int size, System.Random rgen)
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x871614", Offset = "0x871614", VA = "0x871614")]
	public static float[] Generate(int size, System.Random rgen, float range, float hardness)
	{
		return null;
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x871A94", Offset = "0x871A94", VA = "0x871A94")]
	private static void ComputeColor(Point center, Point[] points, float range, ref float[] map, int size, System.Random rgen)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x871CE4", Offset = "0x871CE4", VA = "0x871CE4")]
	public DiamondSquare()
	{
	}
}
[Token(Token = "0x200010C")]
public class EventHub : MonoBehaviour
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Action> eventsDict;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x87D0F8", Offset = "0x87D0F8", VA = "0x87D0F8")]
	public void Listen(int key, Action func)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x87D21C", Offset = "0x87D21C", VA = "0x87D21C")]
	public void Listen(string key, Action func)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x87D254", Offset = "0x87D254", VA = "0x87D254")]
	public void StopListening(int key, Action func)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x87D330", Offset = "0x87D330", VA = "0x87D330")]
	public void StopListening(string key, Action func)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x87D368", Offset = "0x87D368", VA = "0x87D368")]
	public void Trigger(int key)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x87D3F0", Offset = "0x87D3F0", VA = "0x87D3F0")]
	public void Trigger(string key)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x87D420", Offset = "0x87D420", VA = "0x87D420")]
	public static EventHub Get(GameObject obj, bool checkAncestors = false)
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x87D520", Offset = "0x87D520", VA = "0x87D520")]
	public static EventHub GetOrAdd(GameObject obj, bool checkAncestors = false)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x87D5D8", Offset = "0x87D5D8", VA = "0x87D5D8")]
	public EventHub()
	{
	}
}
[Token(Token = "0x200010D")]
public static class ArrayExt
{
	[Token(Token = "0x60009B2")]
	public static T[] ChangeSize<T>(this T[] array, int newSize)
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	public static T[] AddElement<T>(this T[] array, T newElement)
	{
		return null;
	}
}
[Token(Token = "0x200010E")]
public static class BoxColliderExt
{
	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x82CFC8", Offset = "0x82CFC8", VA = "0x82CFC8")]
	public static bool ContainsPoint(this BoxCollider collider, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010F")]
public static class ColorExt
{
	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x82F744", Offset = "0x82F744", VA = "0x82F744")]
	public static Vector3 ToVector3_RGB(this Color color)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x82F778", Offset = "0x82F778", VA = "0x82F778")]
	public static Vector4 ToVector4_RGBA(this Color color)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x82F7A8", Offset = "0x82F7A8", VA = "0x82F7A8")]
	public static Vector4 ToVector4_ARGB(this Color color)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x82F7EC", Offset = "0x82F7EC", VA = "0x82F7EC")]
	public static float Luminance(this Color color)
	{
		return default(float);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x82F8F0", Offset = "0x82F8F0", VA = "0x82F8F0")]
	public static float LuminanceAlpha(this Color color)
	{
		return default(float);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x82FA04", Offset = "0x82FA04", VA = "0x82FA04")]
	public static Color FromValue(uint value)
	{
		return default(Color);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x82FA40", Offset = "0x82FA40", VA = "0x82FA40")]
	public static string ToHex(this Color color)
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x82FB38", Offset = "0x82FB38", VA = "0x82FB38")]
	public static Color FromHexString(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x82FC20", Offset = "0x82FC20", VA = "0x82FC20")]
	public static Color WithRed(this Color color, float newRed)
	{
		return default(Color);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x82FC54", Offset = "0x82FC54", VA = "0x82FC54")]
	public static Color WithGreen(this Color color, float newGreen)
	{
		return default(Color);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x82FC88", Offset = "0x82FC88", VA = "0x82FC88")]
	public static Color WithBlue(this Color color, float newBlue)
	{
		return default(Color);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x82FCBC", Offset = "0x82FCBC", VA = "0x82FCBC")]
	public static Color WithAlpha(this Color color, float newAlpha)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000110")]
public static class DebugExt
{
	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x86EB4C", Offset = "0x86EB4C", VA = "0x86EB4C")]
	public static void DrawCube(Vector3 pos, Color col, Vector3 scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x86EB50", Offset = "0x86EB50", VA = "0x86EB50")]
	public static void DrawRect(Rect rect, Color col, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x86EB54", Offset = "0x86EB54", VA = "0x86EB54")]
	public static void DrawRect(Vector3 pos, Color col, Vector3 scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x86EB58", Offset = "0x86EB58", VA = "0x86EB58")]
	public static void DrawPoint(Vector3 pos, Color col, float scale, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x86EB5C", Offset = "0x86EB5C", VA = "0x86EB5C")]
	public static void DrawSphere(Vector3 pos, Color col, float radius = 1f, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x86EB60", Offset = "0x86EB60", VA = "0x86EB60")]
	public static void DrawArc(Vector3 center, Vector3 forward, Vector3 up, float angle, float radius, Color col, int segments = 5, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x86EB64", Offset = "0x86EB64", VA = "0x86EB64")]
	public static void DrawCapsule(Vector3 start, Vector3 end, float radius, Color col, float duration = 0f)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x86EB68", Offset = "0x86EB68", VA = "0x86EB68")]
	public static void DrawBezier(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, Color col, float duration = 0f)
	{
	}
}
[Token(Token = "0x2000111")]
public static class LayerMaskExtensions
{
	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x973D64", Offset = "0x973D64", VA = "0x973D64")]
	public static LayerMask Create(params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x973E30", Offset = "0x973E30", VA = "0x973E30")]
	public static LayerMask Create(params int[] layerNumbers)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x973EEC", Offset = "0x973EEC", VA = "0x973EEC")]
	public static LayerMask LayerToMask(int layer)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x973D7C", Offset = "0x973D7C", VA = "0x973D7C")]
	public static LayerMask NamesToMask(params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x973F10", Offset = "0x973F10", VA = "0x973F10")]
	public static LayerMask NameToMask(string layerName)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x973E48", Offset = "0x973E48", VA = "0x973E48")]
	public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x973F6C", Offset = "0x973F6C", VA = "0x973F6C")]
	public static LayerMask Inverse(this LayerMask original)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x973F98", Offset = "0x973F98", VA = "0x973F98")]
	public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x973FE8", Offset = "0x973FE8", VA = "0x973FE8")]
	public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x974054", Offset = "0x974054", VA = "0x974054")]
	public static string[] MaskToNames(this LayerMask original)
	{
		return null;
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x974148", Offset = "0x974148", VA = "0x974148")]
	public static string MaskToString(this LayerMask original)
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x9741A8", Offset = "0x9741A8", VA = "0x9741A8")]
	public static string MaskToString(this LayerMask original, string delimiter)
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x9741D8", Offset = "0x9741D8", VA = "0x9741D8")]
	public static bool Compare(GameObject go, LayerMask layerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x96C6B0", Offset = "0x96C6B0", VA = "0x96C6B0")]
	public static bool Compare(this LayerMask layerMask, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x974224", Offset = "0x974224", VA = "0x974224")]
	public static bool Compare(this LayerMask layerMask, int layer)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000112")]
public static class ListExtensions
{
	[Token(Token = "0x60009D8")]
	public static void Reverse_NoHeapAlloc<T>(this List<T> list)
	{
	}

	[Token(Token = "0x60009D9")]
	public static int GetOrderIndependentHashCode<T>(this List<T> list)
	{
		return default(int);
	}

	[Token(Token = "0x60009DA")]
	public static void AddIfNotInside<T>(this List<T> list, T item)
	{
	}

	[Token(Token = "0x60009DB")]
	public static void Shuffle<T>(this List<T> list)
	{
	}
}
[Token(Token = "0x2000113")]
public static class Matrix4x4Ext
{
	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x915B5C", Offset = "0x915B5C", VA = "0x915B5C")]
	public static Vector3 GetTranslation(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x915C00", Offset = "0x915C00", VA = "0x915C00")]
	public static Quaternion GetRotation(this Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x915D1C", Offset = "0x915D1C", VA = "0x915D1C")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000114")]
public static class ParticleSystemExt
{
	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x83C3BC", Offset = "0x83C3BC", VA = "0x83C3BC")]
	public static void SetSubsystemsEmission(this ParticleSystem sys, bool enabled)
	{
	}
}
[Token(Token = "0x2000115")]
public static class SphericalHarmonicsL2Ext
{
	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1372E04", Offset = "0x1372E04", VA = "0x1372E04")]
	public static SphericalHarmonicsL2 Rotate(this SphericalHarmonicsL2 sph, Quaternion qRot)
	{
		return default(SphericalHarmonicsL2);
	}
}
[Token(Token = "0x2000116")]
public class StringBuilderEx
{
	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StringBuilder Builder;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1374C44", Offset = "0x1374C44", VA = "0x1374C44")]
	public StringBuilderEx(int capacity)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1374CCC", Offset = "0x1374CCC", VA = "0x1374CCC")]
	public StringBuilderEx(int capacity, int maxCapacity)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1374CC8", Offset = "0x1374CC8", VA = "0x1374CC8")]
	private void InitInnerStr()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1374D58", Offset = "0x1374D58", VA = "0x1374D58")]
	public StringBuilder Get()
	{
		return null;
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1374D60", Offset = "0x1374D60", VA = "0x1374D60", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000117")]
public static class StringBuilderExtensions
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] ms_digits;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly uint ms_default_decimal_places;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly char ms_default_pad_char;

	[Token(Token = "0x60009E6")]
	public static StringBuilder ConcatFormat<A>(this StringBuilder string_builder, string format_string, A arg1) where A : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	public static StringBuilder ConcatFormat<A, B>(this StringBuilder string_builder, string format_string, A arg1, B arg2) where A : IConvertible where B : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	public static StringBuilder ConcatFormat<A, B, C>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3) where A : IConvertible where B : IConvertible where C : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60009E9")]
	public static StringBuilder ConcatFormat<A, B, C, D>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3, D arg4) where A : IConvertible where B : IConvertible where C : IConvertible where D : IConvertible
	{
		return null;
	}

	[Token(Token = "0x60009EA")]
	private static void ConcatFormatValue<T>(this StringBuilder string_builder, T arg, uint padding, uint base_value, uint decimal_places) where T : IConvertible
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1374D80", Offset = "0x1374D80", VA = "0x1374D80")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char, uint base_val)
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1374EE8", Offset = "0x1374EE8", VA = "0x1374EE8")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val)
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1374F70", Offset = "0x1374F70", VA = "0x1374F70")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1374FFC", Offset = "0x1374FFC", VA = "0x1374FFC")]
	public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x137508C", Offset = "0x137508C", VA = "0x137508C")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char, uint base_val)
	{
		return null;
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1375150", Offset = "0x1375150", VA = "0x1375150")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val)
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x13751D8", Offset = "0x13751D8", VA = "0x13751D8")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount)
	{
		return null;
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1375264", Offset = "0x1375264", VA = "0x1375264")]
	public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x13752F4", Offset = "0x13752F4", VA = "0x13752F4")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount, char pad_char)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1375488", Offset = "0x1375488", VA = "0x1375488")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1375510", Offset = "0x1375510", VA = "0x1375510")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places)
	{
		return null;
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x13755A4", Offset = "0x13755A4", VA = "0x13755A4")]
	public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount)
	{
		return null;
	}
}
[Token(Token = "0x2000118")]
public static class TextureExt
{
	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x813A68", Offset = "0x813A68", VA = "0x813A68")]
	public static void SaveToFile(this Texture2D texture, string filename)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x813B2C", Offset = "0x813B2C", VA = "0x813B2C")]
	public static void SaveToFileEXR(this Texture2D texture, string filename, Texture2D.EXRFlags flags = Texture2D.EXRFlags.None)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x813BF8", Offset = "0x813BF8", VA = "0x813BF8")]
	public static Texture2D ToTexture2D(this RenderTexture renderTex, bool mipmap = false, bool linear = true, TextureFormat format = TextureFormat.RGBA32)
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x813D64", Offset = "0x813D64", VA = "0x813D64")]
	public static Texture2D ToTexture2D(this RenderTexture renderTex, Texture2D destTex)
	{
		return null;
	}
}
[Token(Token = "0x2000119")]
public static class TransformExt
{
	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x8143C4", Offset = "0x8143C4", VA = "0x8143C4")]
	public static bool IsAncestor(this Transform parent, Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x8144AC", Offset = "0x8144AC", VA = "0x8144AC")]
	public static Transform FindChildRecursive(this Transform parent, string name, bool exactMatch)
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x81480C", Offset = "0x81480C", VA = "0x81480C")]
	public static int FindChildrenRecursive(this Transform parent, string name, List<Transform> children, bool exactMatch = false)
	{
		return default(int);
	}
}
[Token(Token = "0x200011A")]
public static class Vector2Ext
{
	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xBEAA00", Offset = "0xBEAA00", VA = "0xBEAA00")]
	public static Vector2 MajorAxis(this Vector2 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xBEAAC4", Offset = "0xBEAAC4", VA = "0xBEAAC4")]
	public static bool Approximately(this Vector2 v1, Vector2 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xBEAB90", Offset = "0xBEAB90", VA = "0xBEAB90")]
	public static Vector2 WithX(this Vector2 v, float newX)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xBEABC0", Offset = "0xBEABC0", VA = "0xBEABC0")]
	public static Vector2 WithY(this Vector2 v, float newY)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x200011B")]
public static class Vector3Ext
{
	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xBD6358", Offset = "0xBD6358", VA = "0xBD6358")]
	public static Vector3 GroundNormalize(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xBEABF0", Offset = "0xBEABF0", VA = "0xBEABF0")]
	public static Vector3 ToGroundNormalized(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xBEAC28", Offset = "0xBEAC28", VA = "0xBEAC28")]
	public static float magnitudeGround(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xBD6AB4", Offset = "0xBD6AB4", VA = "0xBD6AB4")]
	public static float sqrMagnitudeGround(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xBEAC74", Offset = "0xBEAC74", VA = "0xBEAC74")]
	public static Vector3 GroundVector(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xBEACAC", Offset = "0xBEACAC", VA = "0xBEACAC")]
	public static Vector3 GroundVector(Vector3 to, Vector3 from)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xBEAD80", Offset = "0xBEAD80", VA = "0xBEAD80")]
	public static Vector3 MajorAxis(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xBEAEAC", Offset = "0xBEAEAC", VA = "0xBEAEAC")]
	public static float MaxComponent(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xBEAF3C", Offset = "0xBEAF3C", VA = "0xBEAF3C")]
	public static float MinComponent(this Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xBEAFCC", Offset = "0xBEAFCC", VA = "0xBEAFCC")]
	public static Vector3 Abs(this Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xBEB074", Offset = "0xBEB074", VA = "0xBEB074")]
	public static bool Approximately(this Vector3 v1, Vector3 v2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xBEB180", Offset = "0xBEB180", VA = "0xBEB180")]
	public static Vector3 Divide(this Vector3 v1, Vector3 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xBEB1C0", Offset = "0xBEB1C0", VA = "0xBEB1C0")]
	public static Vector3 Clamp(this Vector3 vec, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xBEB2BC", Offset = "0xBEB2BC", VA = "0xBEB2BC")]
	public static Vector3 WithX(this Vector3 v, float newX)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xBD8CE8", Offset = "0xBD8CE8", VA = "0xBD8CE8")]
	public static Vector3 WithY(this Vector3 v, float newY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xBE53D4", Offset = "0xBE53D4", VA = "0xBE53D4")]
	public static Vector3 WithZ(this Vector3 v, float newZ)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xBDEBD4", Offset = "0xBDEBD4", VA = "0xBDEBD4")]
	public static Vector2 xy(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xBDEC00", Offset = "0xBDEC00", VA = "0xBDEC00")]
	public static Vector2 xz(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xBDEBA0", Offset = "0xBDEBA0", VA = "0xBDEBA0")]
	public static Vector2 yz(this Vector3 v)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62C1D0", Offset = "0x62C1D0")]
public class FSM
{
	[Token(Token = "0x20003CD")]
	public struct State : IEquatable<State>, IEqualityComparer<State>
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int code;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isDefault;

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x6B452C", Offset = "0x6B452C", VA = "0x6B452C")]
		public State(string name, bool isDefault = false)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x6B457C", Offset = "0x6B457C", VA = "0x6B457C")]
		public State(bool isDefault = false)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x6B45B8", Offset = "0x6B45B8", VA = "0x6B45B8", Slot = "4")]
		public bool Equals(State x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x6B45CC", Offset = "0x6B45CC", VA = "0x6B45CC", Slot = "5")]
		public bool Equals(State x, State y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x6B45E0", Offset = "0x6B45E0", VA = "0x6B45E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x6B45E8", Offset = "0x6B45E8", VA = "0x6B45E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x6B45F0", Offset = "0x6B45F0", VA = "0x6B45F0", Slot = "6")]
		public int GetHashCode(State obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x874664", Offset = "0x874664", VA = "0x874664")]
		public static bool operator ==(State x, State y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x87627C", Offset = "0x87627C", VA = "0x87627C")]
		public static bool operator !=(State x, State y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003CE")]
	public class StateInfo
	{
		[Token(Token = "0x2000501")]
		public delegate void StateDelegate();

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateDelegate Enter;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StateDelegate Exit;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateDelegate Update;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StateDelegate FixedUpdate;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StateDelegate LateUpdate;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StateDelegate OnTimer;

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x87F244", Offset = "0x87F244", VA = "0x87F244")]
		public StateInfo()
		{
		}
	}

	[Token(Token = "0x20003CF")]
	public class StateContainer
	{
		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<State> _statesList;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _defaultIdx;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x878480", Offset = "0x878480", VA = "0x878480")]
		public StateContainer()
		{
		}
	}

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<State, StateInfo> states;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateInfo alwaysDelegates;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInitialized;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State currentState;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private State previousState;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State nextState;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private StateInfo currentInfo;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State defaultState;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timer;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool timerActive;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool timerLocal;

	[Token(Token = "0x170000C0")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x87F13C", Offset = "0x87F13C", VA = "0x87F13C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C1")]
	public StateInfo Item
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x87F144", Offset = "0x87F144", VA = "0x87F144")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x87F2C4", Offset = "0x87F2C4", VA = "0x87F2C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public State CurrentState
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x87F360", Offset = "0x87F360", VA = "0x87F360")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x87F374", Offset = "0x87F374", VA = "0x87F374")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public State PreviousState
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x87F4F4", Offset = "0x87F4F4", VA = "0x87F4F4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170000C4")]
	public State NextState
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x87F508", Offset = "0x87F508", VA = "0x87F508")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x87F51C", Offset = "0x87F51C", VA = "0x87F51C")]
	public FSM()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x87F5E8", Offset = "0x87F5E8", VA = "0x87F5E8")]
	public void Populate(object owner)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x87F888", Offset = "0x87F888", VA = "0x87F888")]
	public StateInfo Add(State s, [Optional] StateInfo.StateDelegate enter, [Optional] StateInfo.StateDelegate update, [Optional] StateInfo.StateDelegate exit, [Optional] StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x87F9C4", Offset = "0x87F9C4", VA = "0x87F9C4")]
	public StateInfo AddAlways([Optional] StateInfo.StateDelegate enter, [Optional] StateInfo.StateDelegate update, [Optional] StateInfo.StateDelegate exit, [Optional] StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x87FA48", Offset = "0x87FA48", VA = "0x87FA48")]
	public void Add(StateContainer container)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x87FBE4", Offset = "0x87FBE4", VA = "0x87FBE4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x87FC58", Offset = "0x87FC58", VA = "0x87FC58")]
	public void ClearTimer()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x87FC64", Offset = "0x87FC64", VA = "0x87FC64")]
	public void SetTimer(float time, bool local = true)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x87FC7C", Offset = "0x87FC7C", VA = "0x87FC7C")]
	public bool HasActiveTimer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x87FC84", Offset = "0x87FC84", VA = "0x87FC84")]
	public void Init(State initState)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x87F3A4", Offset = "0x87F3A4", VA = "0x87F3A4")]
	public void SetState(State newState)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x87FE68", Offset = "0x87FE68", VA = "0x87FE68")]
	public State GetState()
	{
		return default(State);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x87F710", Offset = "0x87F710", VA = "0x87F710")]
	private StateInfo FindDelegates(object owner, StateInfo sInfo, string stateName)
	{
		return null;
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x87FE7C", Offset = "0x87FE7C", VA = "0x87FE7C")]
	private StateInfo.StateDelegate FindDelegate(object owner, string stateName, string type)
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x87FF94", Offset = "0x87FF94", VA = "0x87FF94")]
	public bool HasUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x87FFCC", Offset = "0x87FFCC", VA = "0x87FFCC")]
	public bool HasFixedUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x880004", Offset = "0x880004", VA = "0x880004")]
	public bool HasLateUpdateDelegate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x87FDBC", Offset = "0x87FDBC", VA = "0x87FDBC")]
	private void OnEnter()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x87FE1C", Offset = "0x87FE1C", VA = "0x87FE1C")]
	private void OnExit()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x880248", Offset = "0x880248", VA = "0x880248")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x880328", Offset = "0x880328", VA = "0x880328")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x880374", Offset = "0x880374", VA = "0x880374")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x8802DC", Offset = "0x8802DC", VA = "0x8802DC")]
	public void OnTimer()
	{
	}
}
[Token(Token = "0x200011D")]
public class FSMComponent : MonoBehaviour, IFSMTimer
{
	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected FSM fsm;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string curState;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateTask;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int fixedUpdateTask;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lateUpdateTask;

	[Token(Token = "0x170000C5")]
	public FSM.State State
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x87463C", Offset = "0x87463C", VA = "0x87463C")]
		get
		{
			return default(FSM.State);
		}
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x875210", Offset = "0x875210", VA = "0x875210")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public FSM.State PreviousState
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x875080", Offset = "0x875080", VA = "0x875080")]
		get
		{
			return default(FSM.State);
		}
	}

	[Token(Token = "0x170000C7")]
	public FSM.State NextState
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x880898", Offset = "0x880898", VA = "0x880898")]
		get
		{
			return default(FSM.State);
		}
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x8733A8", Offset = "0x8733A8", VA = "0x8733A8")]
	protected void AddStates(FSM.StateContainer states)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x8805FC", Offset = "0x8805FC", VA = "0x8805FC")]
	protected FSM.StateInfo AddState(FSM.State s, [Optional] FSM.StateInfo.StateDelegate enter, [Optional] FSM.StateInfo.StateDelegate update, [Optional] FSM.StateInfo.StateDelegate exit, [Optional] FSM.StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x880700", Offset = "0x880700", VA = "0x880700")]
	protected FSM.StateInfo AddAlways([Optional] FSM.StateInfo.StateDelegate enter, [Optional] FSM.StateInfo.StateDelegate update, [Optional] FSM.StateInfo.StateDelegate exit, [Optional] FSM.StateInfo.StateDelegate onTimer)
	{
		return null;
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x8738D0", Offset = "0x8738D0", VA = "0x8738D0")]
	protected void Init(FSM.State startState)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x8797E4", Offset = "0x8797E4", VA = "0x8797E4")]
	protected void SetState(FSM.State newState)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x8808C0", Offset = "0x8808C0", VA = "0x8808C0")]
	protected FSM.State GetState()
	{
		return default(FSM.State);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x8808E8", Offset = "0x8808E8", VA = "0x8808E8", Slot = "6")]
	protected virtual void UpdateTask()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x880900", Offset = "0x880900", VA = "0x880900", Slot = "7")]
	protected virtual void FixedUpdateTask()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x880918", Offset = "0x880918", VA = "0x880918", Slot = "8")]
	protected virtual void LateUpdateTask()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x8807AC", Offset = "0x8807AC", VA = "0x8807AC")]
	private void SubscribeTasks()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x880930", Offset = "0x880930", VA = "0x880930")]
	private void SubscribeUpdateTask()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x880AC0", Offset = "0x880AC0", VA = "0x880AC0")]
	private void SubscribeFixedUpdateTask()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x880B8C", Offset = "0x880B8C", VA = "0x880B8C")]
	private void SubscribeLateUpdateTask()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x8809FC", Offset = "0x8809FC", VA = "0x8809FC")]
	private int UnsubscribeTask(int taskId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x873FFC", Offset = "0x873FFC", VA = "0x873FFC", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x8741E0", Offset = "0x8741E0", VA = "0x8741E0", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x880C58", Offset = "0x880C58", VA = "0x880C58", Slot = "4")]
	public void ClearTimer()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x87AC08", Offset = "0x87AC08", VA = "0x87AC08", Slot = "5")]
	public void SetTimer(float time, bool local = true)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x8779EC", Offset = "0x8779EC", VA = "0x8779EC")]
	public FSMComponent()
	{
	}
}
[Token(Token = "0x200011E")]
public class FSMTest : FSMComponent
{
	[Token(Token = "0x20003D0")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State StateOne;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State StateTwo;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State StateThree;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x880F6C", Offset = "0x880F6C", VA = "0x880F6C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int counter;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numChanges;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x880C78", Offset = "0x880C78", VA = "0x880C78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x880CE8", Offset = "0x880CE8", VA = "0x880CE8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x880D80", Offset = "0x880D80", VA = "0x880D80")]
	private void StateOne_Enter()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x880D84", Offset = "0x880D84", VA = "0x880D84")]
	private void StateOne_Update()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x880E1C", Offset = "0x880E1C", VA = "0x880E1C")]
	private void StateOne_Exit()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x880E20", Offset = "0x880E20", VA = "0x880E20")]
	private void StateTwo_Enter()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x880E28", Offset = "0x880E28", VA = "0x880E28")]
	private void StateTwo_Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x880ED4", Offset = "0x880ED4", VA = "0x880ED4")]
	private void StateTwo_Exit()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x880ED8", Offset = "0x880ED8", VA = "0x880ED8")]
	private void Always_Enter()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x880EE8", Offset = "0x880EE8", VA = "0x880EE8")]
	public FSMTest()
	{
	}
}
[Token(Token = "0x200011F")]
public interface IFSMTimer
{
	[Token(Token = "0x6000A56")]
	void ClearTimer();

	[Token(Token = "0x6000A57")]
	void SetTimer(float time, bool local = true);
}
[Token(Token = "0x2000120")]
public class Fader : TimeIndependentBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FromOpacity;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ToOpacity;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Speed;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool FadeAudio;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float Progress;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action onEndDelegate;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFading;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int firstUpdates;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xAAFF7C", Offset = "0xAAFF7C", VA = "0xAAFF7C")]
	public void FadeOut(float speed = 1f, bool fadeAudio = false, [Optional] Action onEnd)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xAAFFA4", Offset = "0xAAFFA4", VA = "0xAAFFA4")]
	public void FadeIn(float speed = 1f, bool fadeAudio = false, [Optional] Action onEnd)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xAAFFCC", Offset = "0xAAFFCC", VA = "0xAAFFCC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xAB0620", Offset = "0xAB0620", VA = "0xAB0620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xAB0730", Offset = "0xAB0730", VA = "0xAB0730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xAB0738", Offset = "0xAB0738", VA = "0xAB0738", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xAB0934", Offset = "0xAB0934", VA = "0xAB0934")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xAB00AC", Offset = "0xAB00AC", VA = "0xAB00AC")]
	private Color GetCurColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xAB0938", Offset = "0xAB0938", VA = "0xAB0938")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xAB09BC", Offset = "0xAB09BC", VA = "0xAB09BC")]
	public void ForceAlpha(float val)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xAB01A4", Offset = "0xAB01A4", VA = "0xAB01A4")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xAB0624", Offset = "0xAB0624", VA = "0xAB0624")]
	private void DestroyFadeMesh()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xAB0A88", Offset = "0xAB0A88", VA = "0xAB0A88")]
	public Fader()
	{
	}
}
[Token(Token = "0x2000121")]
public class GraphPathfinder
{
	[Token(Token = "0x20003D1")]
	public class Graph
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector2> positions;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Pair<int, int>> edges;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isDirected;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, List<int>> edgesCache;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x88A4DC", Offset = "0x88A4DC", VA = "0x88A4DC")]
		public Graph(List<Vector2> positions, List<Pair<int, int>> edges, bool directed = false)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x88A32C", Offset = "0x88A32C", VA = "0x88A32C")]
		public List<int> GetNeighbors(int idx)
		{
			return null;
		}
	}

	[Token(Token = "0x20003D2")]
	public class Node : IComparable<Node>
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Index;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Node Parent;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CostToNode;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TotalCost;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool InOpen;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool InClosed;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x88A768", Offset = "0x88A768", VA = "0x88A768", Slot = "4")]
		public int CompareTo(Node tNode)
		{
			return default(int);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x88966C", Offset = "0x88966C", VA = "0x88966C")]
		public Node()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	public delegate float GetCostHandler(Graph graph, int init, int end, object movementDesc);

	[Token(Token = "0x20003D4")]
	public class Query
	{
		[Token(Token = "0x2000502")]
		public enum EState
		{
			[Token(Token = "0x40020CA")]
			Pending,
			[Token(Token = "0x40020CB")]
			Running,
			[Token(Token = "0x40020CC")]
			Success,
			[Token(Token = "0x40020CD")]
			Failure
		}

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GraphPathfinder Owner;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graph graph;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Init;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int End;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EState State;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> Path;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object MovementDesc;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int numUpdates;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GetCostHandler EstimateCost;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GetCostHandler TraversalCost;

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x88939C", Offset = "0x88939C", VA = "0x88939C")]
		public Query(GraphPathfinder owner, Graph graph)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x889474", Offset = "0x889474", VA = "0x889474")]
		public void Initialize(int init, int end, object movementDesc, GetCostHandler traversalCost, GetCostHandler estimateCost)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x88A798", Offset = "0x88A798", VA = "0x88A798")]
		public void Initialize(int init, int end, object movementDesc)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x889EB4", Offset = "0x889EB4", VA = "0x889EB4")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x88A7A4", Offset = "0x88A7A4", VA = "0x88A7A4")]
		public bool IsSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x88A7B4", Offset = "0x88A7B4", VA = "0x88A7B4")]
		public void Free()
		{
		}
	}

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GraphPathfinder instance;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int iterationLimit;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Node> m_CachedNodes;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_NextNode;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Node> m_ActiveNodes;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BinaryHeap<Node> m_OpenList;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<Query> m_PendingQueries;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Query m_ActiveQuery;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GetCostHandler EstimateCostDelegate;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GetCostHandler TraversalCostDelegate;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Query> m_listFreeQueries;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x888FA0", Offset = "0x888FA0", VA = "0x888FA0")]
	public static GraphPathfinder Get()
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x889228", Offset = "0x889228", VA = "0x889228")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x889028", Offset = "0x889028", VA = "0x889028")]
	public GraphPathfinder(int iterationLimit = 120)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x889290", Offset = "0x889290", VA = "0x889290")]
	public Query AddQuery(Graph graph, int init, int end, object movementDesc, GetCostHandler traversalCost, GetCostHandler estimateCost)
	{
		return null;
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x88953C", Offset = "0x88953C", VA = "0x88953C")]
	public Query AddQuery(Graph graph, int init, int end, object movementDesc)
	{
		return null;
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x889548", Offset = "0x889548", VA = "0x889548")]
	private Node AddNode(int posIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x889674", Offset = "0x889674", VA = "0x889674")]
	private void AddToOpen(Node tNode)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x8896E8", Offset = "0x8896E8", VA = "0x8896E8")]
	public float DefaultEstimateCost(Graph graph, int init, int end, object movementDesc)
	{
		return default(float);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x8897F8", Offset = "0x8897F8", VA = "0x8897F8")]
	public float DefaultTraversalCost(Graph graph, int init, int end, object movementDesc)
	{
		return default(float);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x889908", Offset = "0x889908", VA = "0x889908")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x889EAC", Offset = "0x889EAC", VA = "0x889EAC")]
	public bool RunAStar(Query query)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x8899CC", Offset = "0x8899CC", VA = "0x8899CC")]
	public bool RunAStar(Query query, int iterationLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x88A394", Offset = "0x88A394", VA = "0x88A394")]
	public void FreeQuery(Query query)
	{
	}
}
[Token(Token = "0x2000122")]
public class Interpolate
{
	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x9B8514", Offset = "0x9B8514", VA = "0x9B8514")]
	public static float Lerp(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x9B8524", Offset = "0x9B8524", VA = "0x9B8524")]
	public static Vector3 Lerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x9B85DC", Offset = "0x9B85DC", VA = "0x9B85DC")]
	public static Vector2 Lerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x9B867C", Offset = "0x9B867C", VA = "0x9B867C")]
	public static Color Lerp(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x9B868C", Offset = "0x9B868C", VA = "0x9B868C")]
	public static float SmoothStep(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x9B86A4", Offset = "0x9B86A4", VA = "0x9B86A4")]
	public static float SmoothStep(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x9B86C8", Offset = "0x9B86C8", VA = "0x9B86C8")]
	public static Vector3 SmoothStep(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x9B86E0", Offset = "0x9B86E0", VA = "0x9B86E0")]
	public static Vector2 SmoothStep(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x9B86F8", Offset = "0x9B86F8", VA = "0x9B86F8")]
	public static Color SmoothStep(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x9B871C", Offset = "0x9B871C", VA = "0x9B871C")]
	public static float EaseIn(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x9B8724", Offset = "0x9B8724", VA = "0x9B8724")]
	public static float EaseOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x9B8734", Offset = "0x9B8734", VA = "0x9B8734")]
	public static float EaseInOut(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x9B8774", Offset = "0x9B8774", VA = "0x9B8774")]
	public static float EaseIn(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x9B8788", Offset = "0x9B8788", VA = "0x9B8788")]
	public static float EaseOut(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x9B87A4", Offset = "0x9B87A4", VA = "0x9B87A4")]
	public static float EaseInOut(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9B87F0", Offset = "0x9B87F0", VA = "0x9B87F0")]
	public static Vector3 EaseIn(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x9B87F8", Offset = "0x9B87F8", VA = "0x9B87F8")]
	public static Vector3 EaseOut(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x9B8808", Offset = "0x9B8808", VA = "0x9B8808")]
	public static Vector3 EaseInOut(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x9B8848", Offset = "0x9B8848", VA = "0x9B8848")]
	public static Vector2 EaseIn(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x9B8850", Offset = "0x9B8850", VA = "0x9B8850")]
	public static Vector2 EaseOut(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x9B8860", Offset = "0x9B8860", VA = "0x9B8860")]
	public static Vector2 EaseInOut(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x9B88A0", Offset = "0x9B88A0", VA = "0x9B88A0")]
	public static Color EaseIn(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x9B88B4", Offset = "0x9B88B4", VA = "0x9B88B4")]
	public static Color EaseOut(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x9B88D0", Offset = "0x9B88D0", VA = "0x9B88D0")]
	public static Color EaseInOut(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x9B891C", Offset = "0x9B891C", VA = "0x9B891C")]
	public static float EaseInCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x9B8928", Offset = "0x9B8928", VA = "0x9B8928")]
	public static float EaseOutCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x9B8944", Offset = "0x9B8944", VA = "0x9B8944")]
	public static float EaseInOutCubic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x9B8988", Offset = "0x9B8988", VA = "0x9B8988")]
	public static float EaseInCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x9B89A0", Offset = "0x9B89A0", VA = "0x9B89A0")]
	public static float EaseOutCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x9B89C8", Offset = "0x9B89C8", VA = "0x9B89C8")]
	public static float EaseInOutCubic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x9B8A18", Offset = "0x9B8A18", VA = "0x9B8A18")]
	public static Vector3 EaseInCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x9B8A24", Offset = "0x9B8A24", VA = "0x9B8A24")]
	public static Vector3 EaseOutCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x9B8A40", Offset = "0x9B8A40", VA = "0x9B8A40")]
	public static Vector3 EaseInOutCubic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x9B8A84", Offset = "0x9B8A84", VA = "0x9B8A84")]
	public static Vector2 EaseInCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x9B8A90", Offset = "0x9B8A90", VA = "0x9B8A90")]
	public static Vector2 EaseOutCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x9B8AAC", Offset = "0x9B8AAC", VA = "0x9B8AAC")]
	public static Vector2 EaseInOutCubic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x9B8AF0", Offset = "0x9B8AF0", VA = "0x9B8AF0")]
	public static Color EaseInCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x9B8B08", Offset = "0x9B8B08", VA = "0x9B8B08")]
	public static Color EaseOutCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x9B8B30", Offset = "0x9B8B30", VA = "0x9B8B30")]
	public static Color EaseInOutCubic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x9B8B80", Offset = "0x9B8B80", VA = "0x9B8B80")]
	public static float EaseInQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x9B8B90", Offset = "0x9B8B90", VA = "0x9B8B90")]
	public static float EaseOutQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x9B8BB0", Offset = "0x9B8BB0", VA = "0x9B8BB0")]
	public static float EaseInOutQuart(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x9B8BF8", Offset = "0x9B8BF8", VA = "0x9B8BF8")]
	public static float EaseInQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x9B8C14", Offset = "0x9B8C14", VA = "0x9B8C14")]
	public static float EaseOutQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x9B8C3C", Offset = "0x9B8C3C", VA = "0x9B8C3C")]
	public static float EaseInOutQuart(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x9B8C90", Offset = "0x9B8C90", VA = "0x9B8C90")]
	public static Vector3 EaseInQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x9B8CA0", Offset = "0x9B8CA0", VA = "0x9B8CA0")]
	public static Vector3 EaseOutQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x9B8CC0", Offset = "0x9B8CC0", VA = "0x9B8CC0")]
	public static Vector3 EaseInOutQuart(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x9B8D08", Offset = "0x9B8D08", VA = "0x9B8D08")]
	public static Vector2 EaseInQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x9B8D18", Offset = "0x9B8D18", VA = "0x9B8D18")]
	public static Vector2 EaseOutQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x9B8D38", Offset = "0x9B8D38", VA = "0x9B8D38")]
	public static Vector2 EaseInOutQuart(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x9B8D80", Offset = "0x9B8D80", VA = "0x9B8D80")]
	public static Color EaseInQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x9B8D9C", Offset = "0x9B8D9C", VA = "0x9B8D9C")]
	public static Color EaseOutQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x9B8DC8", Offset = "0x9B8DC8", VA = "0x9B8DC8")]
	public static Color EaseInOutQuart(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x9B8E1C", Offset = "0x9B8E1C", VA = "0x9B8E1C")]
	public static float EaseInQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x9B8E30", Offset = "0x9B8E30", VA = "0x9B8E30")]
	public static float EaseOutQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x9B8E54", Offset = "0x9B8E54", VA = "0x9B8E54")]
	public static float EaseInOutQuintic(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x9B8EA8", Offset = "0x9B8EA8", VA = "0x9B8EA8")]
	public static float EaseInQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x9B8EC8", Offset = "0x9B8EC8", VA = "0x9B8EC8")]
	public static float EaseOutQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x9B8EF8", Offset = "0x9B8EF8", VA = "0x9B8EF8")]
	public static float EaseInOutQuintic(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x9B8F58", Offset = "0x9B8F58", VA = "0x9B8F58")]
	public static Vector3 EaseInQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x9B8F6C", Offset = "0x9B8F6C", VA = "0x9B8F6C")]
	public static Vector3 EaseOutQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x9B8F90", Offset = "0x9B8F90", VA = "0x9B8F90")]
	public static Vector3 EaseInOutQuintic(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x9B8FE4", Offset = "0x9B8FE4", VA = "0x9B8FE4")]
	public static Vector2 EaseInQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x9B8FF8", Offset = "0x9B8FF8", VA = "0x9B8FF8")]
	public static Vector2 EaseOutQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x9B901C", Offset = "0x9B901C", VA = "0x9B901C")]
	public static Vector2 EaseInOutQuintic(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x9B9070", Offset = "0x9B9070", VA = "0x9B9070")]
	public static Color EaseInQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x9B9090", Offset = "0x9B9090", VA = "0x9B9090")]
	public static Color EaseOutQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x9B90C0", Offset = "0x9B90C0", VA = "0x9B90C0")]
	public static Color EaseInOutQuintic(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x9B9120", Offset = "0x9B9120", VA = "0x9B9120")]
	public static float EaseInSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x9B91A8", Offset = "0x9B91A8", VA = "0x9B91A8")]
	public static float EaseOutSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x9B9224", Offset = "0x9B9224", VA = "0x9B9224")]
	public static float EaseInOutSine(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x9B92AC", Offset = "0x9B92AC", VA = "0x9B92AC")]
	public static float EaseInSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x9B92E0", Offset = "0x9B92E0", VA = "0x9B92E0")]
	public static float EaseOutSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x9B9314", Offset = "0x9B9314", VA = "0x9B9314")]
	public static float EaseInOutSine(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x9B9348", Offset = "0x9B9348", VA = "0x9B9348")]
	public static Vector3 EaseInSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x9B93AC", Offset = "0x9B93AC", VA = "0x9B93AC")]
	public static Vector3 EaseOutSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x9B9410", Offset = "0x9B9410", VA = "0x9B9410")]
	public static Vector3 EaseInOutSine(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x9B9474", Offset = "0x9B9474", VA = "0x9B9474")]
	public static Vector2 EaseInSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x9B94C0", Offset = "0x9B94C0", VA = "0x9B94C0")]
	public static Vector2 EaseOutSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x9B950C", Offset = "0x9B950C", VA = "0x9B950C")]
	public static Vector2 EaseInOutSine(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x9B9558", Offset = "0x9B9558", VA = "0x9B9558")]
	public static Color EaseInSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x9B95DC", Offset = "0x9B95DC", VA = "0x9B95DC")]
	public static Color EaseOutSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x9B9660", Offset = "0x9B9660", VA = "0x9B9660")]
	public static Color EaseInOutSine(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x9B96E4", Offset = "0x9B96E4", VA = "0x9B96E4")]
	public static float EaseInCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x9B9778", Offset = "0x9B9778", VA = "0x9B9778")]
	public static float EaseOutCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x9B9814", Offset = "0x9B9814", VA = "0x9B9814")]
	public static float EaseInOutCircular(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x9B98F0", Offset = "0x9B98F0", VA = "0x9B98F0")]
	public static float EaseInCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x9B9924", Offset = "0x9B9924", VA = "0x9B9924")]
	public static float EaseOutCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x9B9958", Offset = "0x9B9958", VA = "0x9B9958")]
	public static float EaseInOutCircular(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x9B998C", Offset = "0x9B998C", VA = "0x9B998C")]
	public static Vector3 EaseInCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x9B99F0", Offset = "0x9B99F0", VA = "0x9B99F0")]
	public static Vector3 EaseOutCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x9B9A54", Offset = "0x9B9A54", VA = "0x9B9A54")]
	public static Vector3 EaseInOutCircular(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x9B9AB8", Offset = "0x9B9AB8", VA = "0x9B9AB8")]
	public static Vector2 EaseInCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x9B9B04", Offset = "0x9B9B04", VA = "0x9B9B04")]
	public static Vector2 EaseOutCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x9B9B50", Offset = "0x9B9B50", VA = "0x9B9B50")]
	public static Vector2 EaseInOutCircular(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x9B9B9C", Offset = "0x9B9B9C", VA = "0x9B9B9C")]
	public static Color EaseInCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x9B9C20", Offset = "0x9B9C20", VA = "0x9B9C20")]
	public static Color EaseOutCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x9B9CA4", Offset = "0x9B9CA4", VA = "0x9B9CA4")]
	public static Color EaseInOutCircular(Color from, Color to, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x9B9D28", Offset = "0x9B9D28", VA = "0x9B9D28")]
	public static Vector2 Slerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x9B9F00", Offset = "0x9B9F00", VA = "0x9B9F00")]
	public static Vector3 Slerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x9B9FB8", Offset = "0x9B9FB8", VA = "0x9B9FB8")]
	public static Quaternion Slerp(Quaternion from, Quaternion to, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x9BA0D0", Offset = "0x9BA0D0", VA = "0x9BA0D0")]
	public static Vector2 NLerp(Vector2 from, Vector2 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x9BA1CC", Offset = "0x9BA1CC", VA = "0x9BA1CC")]
	public static Vector2 NLerp(Vector3 from, Vector3 to, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x9BA2E0", Offset = "0x9BA2E0", VA = "0x9BA2E0")]
	public static float Approach(float current, float to, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x9BA2F0", Offset = "0x9BA2F0", VA = "0x9BA2F0")]
	public static Vector3 Approach(Vector3 current, Vector3 to, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x9BA3A8", Offset = "0x9BA3A8", VA = "0x9BA3A8")]
	public static Vector2 Approach(Vector2 current, Vector2 to, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x9BA448", Offset = "0x9BA448", VA = "0x9BA448")]
	public static Color Approach(Color current, Color to, float speed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x9BA458", Offset = "0x9BA458", VA = "0x9BA458")]
	public static Quaternion Approach(Quaternion current, Quaternion to, float speed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x9BA570", Offset = "0x9BA570", VA = "0x9BA570")]
	public static float ApproachExp(float actual, float to, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x9BA580", Offset = "0x9BA580", VA = "0x9BA580")]
	public static Vector3 ApproachExp(Vector3 actual, Vector3 to, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x9BA660", Offset = "0x9BA660", VA = "0x9BA660")]
	public static Vector2 ApproachExp(Vector2 actual, Vector2 to, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x9BA720", Offset = "0x9BA720", VA = "0x9BA720")]
	public static Color ApproachExp(Color actual, Color to, float speed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x9BA7B4", Offset = "0x9BA7B4", VA = "0x9BA7B4")]
	public static Quaternion ApproachExp(Quaternion current, Quaternion to, float speed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x9BA8B0", Offset = "0x9BA8B0", VA = "0x9BA8B0")]
	public static float Damp(float value, float factor, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x9BA938", Offset = "0x9BA938", VA = "0x9BA938")]
	public static float Damp(float from, float to, float factor, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x9BA9D4", Offset = "0x9BA9D4", VA = "0x9BA9D4")]
	public static Vector3 Bezier(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x9BAB9C", Offset = "0x9BAB9C", VA = "0x9BAB9C")]
	public static Vector3 BezierTangent(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x9BAD70", Offset = "0x9BAD70", VA = "0x9BAD70")]
	public static Vector3 CatmullRom(Vector3 vP0, Vector3 vP1, Vector3 vP2, Vector3 vP3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x9BB0D8", Offset = "0x9BB0D8", VA = "0x9BB0D8")]
	public static Vector3 CatmullRom(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x9BB504", Offset = "0x9BB504", VA = "0x9BB504")]
	public static float Hermite(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x9BB59C", Offset = "0x9BB59C", VA = "0x9BB59C")]
	public static float Sinerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x9BB63C", Offset = "0x9BB63C", VA = "0x9BB63C")]
	public static float Coserp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x9BB6E0", Offset = "0x9BB6E0", VA = "0x9BB6E0")]
	public static float Berp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x9BB7E4", Offset = "0x9BB7E4", VA = "0x9BB7E4")]
	public static float Bounce(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x9BB874", Offset = "0x9BB874", VA = "0x9BB874")]
	public static float Clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x9BB948", Offset = "0x9BB948", VA = "0x9BB948")]
	public static float Barycentric(float val1, float val2, float val3, Vector3 coords)
	{
		return default(float);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x9BB960", Offset = "0x9BB960", VA = "0x9BB960")]
	public Interpolate()
	{
	}
}
[Token(Token = "0x2000123")]
public class LSystem<T> where T : new()
{
	[Token(Token = "0x20003D5")]
	public struct Symbol
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<int, LSeq> rule;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T leaf;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool hasValidLeaf;

		[Token(Token = "0x6001D1D")]
		public Symbol(Action<int, LSeq> rule)
		{
		}

		[Token(Token = "0x6001D1E")]
		public Symbol(T leaf)
		{
		}

		[Token(Token = "0x6001D1F")]
		public bool IsRule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		public bool IsTerminal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D21")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D22")]
		public void ApplyRule(int capacity, LSeq seq)
		{
		}
	}

	[Token(Token = "0x20003D6")]
	public class LSeq
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Symbol> symbols;

		[Token(Token = "0x6001D23")]
		public LSeq()
		{
		}

		[Token(Token = "0x6001D24")]
		public void Add(Symbol symbol)
		{
		}

		[Token(Token = "0x6001D25")]
		public void Add(T leafSymbol)
		{
		}

		[Token(Token = "0x6001D26")]
		public void Add(Action<int, LSeq> ruleSymbol)
		{
		}

		[Token(Token = "0x6001D27")]
		public int GetTerminalLength()
		{
			return default(int);
		}

		[Token(Token = "0x6001D28")]
		public void Expand(int idx, LSeq newSymbols)
		{
		}

		[Token(Token = "0x6001D29")]
		public List<T> Resolve()
		{
			return null;
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62E9F8", Offset = "0x62E9F8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Symbol delayed;

		[Token(Token = "0x6001D2A")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001D2B")]
		internal void <Delay>b__0(int capacity, LSeq seq)
		{
		}
	}

	[Token(Token = "0x6000AF2")]
	public List<T> Process(int capacity)
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	public virtual void Axiom(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000AF4")]
	protected Symbol Delay(Symbol delayed)
	{
		return default(Symbol);
	}

	[Token(Token = "0x6000AF5")]
	protected Symbol Delay(Action<int, LSeq> ruleSymbol)
	{
		return default(Symbol);
	}

	[Token(Token = "0x6000AF6")]
	protected Symbol Delay(T leafSymbol)
	{
		return default(Symbol);
	}

	[Token(Token = "0x6000AF7")]
	protected void Choose(params Action[] options)
	{
	}

	[Token(Token = "0x6000AF8")]
	public virtual string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	public LSystem()
	{
	}
}
[Token(Token = "0x2000124")]
public class TestGrammar : LSystem<char>
{
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA08", Offset = "0x62EA08")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LSeq seq;

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x80DFC8", Offset = "0x80DFC8", VA = "0x80DFC8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x80E020", Offset = "0x80E020", VA = "0x80E020")]
		internal void <G>b__0()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x80E07C", Offset = "0x80E07C", VA = "0x80E07C")]
		internal void <G>b__1()
		{
		}
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x80DB50", Offset = "0x80DB50", VA = "0x80DB50", Slot = "4")]
	public override void Axiom(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x80DCB0", Offset = "0x80DCB0", VA = "0x80DCB0")]
	public void H(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x80DDA4", Offset = "0x80DDA4", VA = "0x80DDA4")]
	public void G(int capacity, LSeq seq)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x80DFD0", Offset = "0x80DFD0", VA = "0x80DFD0")]
	public TestGrammar()
	{
	}
}
[Token(Token = "0x2000125")]
public class LinearBlur
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _rSum;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _gSum;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _bSum;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D _sourceImage;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _sourceWidth;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _sourceHeight;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _windowSize;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x979CF0", Offset = "0x979CF0", VA = "0x979CF0")]
	public Texture2D Blur(Texture2D image, int radius, int iterations)
	{
		return null;
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x979D9C", Offset = "0x979D9C", VA = "0x979D9C")]
	private Texture2D OneDimensialBlur(Texture2D image, int radius, bool horizontal)
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x97A0D8", Offset = "0x97A0D8", VA = "0x97A0D8")]
	private Color GetPixelWithXCheck(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x97A1B4", Offset = "0x97A1B4", VA = "0x97A1B4")]
	private Color GetPixelWithYCheck(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x97A128", Offset = "0x97A128", VA = "0x97A128")]
	private void AddPixel(Color pixel)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x97A148", Offset = "0x97A148", VA = "0x97A148")]
	private void SubstPixel(Color pixel)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x97A0CC", Offset = "0x97A0CC", VA = "0x97A0CC")]
	private void ResetSum()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x97A168", Offset = "0x97A168", VA = "0x97A168")]
	private Color CalcPixelFromSum()
	{
		return default(Color);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x97A204", Offset = "0x97A204", VA = "0x97A204")]
	public LinearBlur()
	{
	}
}
[Token(Token = "0x2000126")]
public class LinkedPrefab : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x97A20C", Offset = "0x97A20C", VA = "0x97A20C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x97A378", Offset = "0x97A378", VA = "0x97A378")]
	public LinkedPrefab()
	{
	}
}
[Token(Token = "0x2000127")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minDefaultVal;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxDefaultVal;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xA68998", Offset = "0xA68998", VA = "0xA68998")]
	public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
	{
	}
}
[Token(Token = "0x2000128")]
public class ParticleSystemEndAction : MonoBehaviour
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action action;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x83C3A0", Offset = "0x83C3A0", VA = "0x83C3A0")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x83C3B4", Offset = "0x83C3B4", VA = "0x83C3B4")]
	public ParticleSystemEndAction()
	{
	}
}
[Token(Token = "0x2000129")]
public static class Perlin
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] perm;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x83D010", Offset = "0x83D010", VA = "0x83D010")]
	public static float Noise(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x83D1A4", Offset = "0x83D1A4", VA = "0x83D1A4")]
	public static float Noise(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x83D404", Offset = "0x83D404", VA = "0x83D404")]
	public static float Noise(Vector2 coord)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x83D478", Offset = "0x83D478", VA = "0x83D478")]
	public static float Noise(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x83DA24", Offset = "0x83DA24", VA = "0x83DA24")]
	public static float Noise(Vector3 coord)
	{
		return default(float);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x83DAA8", Offset = "0x83DAA8", VA = "0x83DAA8")]
	public static float Fbm(float x, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x83DB5C", Offset = "0x83DB5C", VA = "0x83DB5C")]
	public static float Fbm(Vector2 coord, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x83DC6C", Offset = "0x83DC6C", VA = "0x83DC6C")]
	public static float Fbm(float x, float y, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x83DD08", Offset = "0x83DD08", VA = "0x83DD08")]
	public static float Fbm(Vector3 coord, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x83DE28", Offset = "0x83DE28", VA = "0x83DE28")]
	public static float Fbm(float x, float y, float z, int octave)
	{
		return default(float);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x83D158", Offset = "0x83D158", VA = "0x83D158")]
	private static float Fade(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x83D194", Offset = "0x83D194", VA = "0x83D194")]
	private static float Lerp(float t, float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x83D184", Offset = "0x83D184", VA = "0x83D184")]
	private static float Grad(int hash, float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x83D3E4", Offset = "0x83D3E4", VA = "0x83D3E4")]
	private static float Grad(int hash, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x83D9D8", Offset = "0x83D9D8", VA = "0x83D9D8")]
	private static float Grad(int hash, float x, float y, float z)
	{
		return default(float);
	}
}
[Token(Token = "0x200012A")]
public class Permutator
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int Hits;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int SeqLength;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int InitWait;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int MaxStreak;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<bool> Sequence;

	[Token(Token = "0x170000C8")]
	public bool Next
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x83E120", Offset = "0x83E120", VA = "0x83E120")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x83DF5C", Offset = "0x83DF5C", VA = "0x83DF5C")]
	public Permutator(int hits, int seqLength, int initWait = 0)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x83E1C0", Offset = "0x83E1C0", VA = "0x83E1C0")]
	public bool PeekNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x83E014", Offset = "0x83E014", VA = "0x83E014")]
	private void GenerateSequence()
	{
	}
}
[Token(Token = "0x200012B")]
public static class RandomExt
{
	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x8E590C", Offset = "0x8E590C", VA = "0x8E590C")]
	public static int RandInt(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x8E5918", Offset = "0x8E5918", VA = "0x8E5918")]
	public static int RandInt(int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000B22")]
	public static T Choice<T>(List<T> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B23")]
	public static T Choice<T>(T[] arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B24")]
	public static T WeightedChoice<T>(List<Pair<T, int>> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B25")]
	public static T WeightedChoice<T>(List<Pair<T, float>> arrItems)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x8E5928", Offset = "0x8E5928", VA = "0x8E5928")]
	public static int WeightedChoice(List<float> arrWeights)
	{
		return default(int);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x8E5AC0", Offset = "0x8E5AC0", VA = "0x8E5AC0")]
	public static int WeightedChoice(float[] arrWeights)
	{
		return default(int);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x8E5B7C", Offset = "0x8E5B7C", VA = "0x8E5B7C")]
	public static float Gaussian(float avg = 0f, float stdDev = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x8E5C68", Offset = "0x8E5C68", VA = "0x8E5C68")]
	public static float GaussianRange(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x8E5D18", Offset = "0x8E5D18", VA = "0x8E5D18")]
	public static Vector3 PointInsideSphere(Vector3 center, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x8E5DEC", Offset = "0x8E5DEC", VA = "0x8E5DEC")]
	public static Vector3 PointInsideBounds(Bounds bounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x8E5F40", Offset = "0x8E5F40", VA = "0x8E5F40")]
	public static Vector3 DirectionInsideCone(Vector3 coneDirection, float angle)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200012C")]
public class Scheduler : Singleton<Scheduler>
{
	[Token(Token = "0x20003D9")]
	private struct SchedulingInfo
	{
		[Token(Token = "0x2000503")]
		public enum SchedulingType
		{
			[Token(Token = "0x40020CF")]
			Timer,
			[Token(Token = "0x40020D0")]
			PeriodicTask,
			[Token(Token = "0x40020D1")]
			Update,
			[Token(Token = "0x40020D2")]
			State,
			[Token(Token = "0x40020D3")]
			FixedUpdate,
			[Token(Token = "0x40020D4")]
			LateUpdate
		}

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject owner;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SchedulingType schedType;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timer;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float periodTime;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int frameSkip;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int framePeriod;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action stateStart;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action stateEnd;
	}

	[Token(Token = "0x20003DA")]
	public class Cooldown
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isValid;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject owner;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int taskId;

		[Token(Token = "0x17000206")]
		public bool IsValid
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x94D178", Offset = "0x94D178", VA = "0x94D178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x94D180", Offset = "0x94D180", VA = "0x94D180")]
		public Cooldown(GameObject goOwner)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x94D1C4", Offset = "0x94D1C4", VA = "0x94D1C4")]
		public void Set(float time)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x94D2A8", Offset = "0x94D2A8", VA = "0x94D2A8")]
		private void OnTimer()
		{
		}
	}

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SchedulingInfo> scheduledTasks;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> slotAvailability;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> toRemoveList;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SchedulingInfo> toAddList;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x94BFC8", Offset = "0x94BFC8", VA = "0x94BFC8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x94C088", Offset = "0x94C088", VA = "0x94C088")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x94C680", Offset = "0x94C680", VA = "0x94C680")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x94C688", Offset = "0x94C688", VA = "0x94C688")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x94C090", Offset = "0x94C090", VA = "0x94C090")]
	private void UpdateTasks(SchedulingInfo.SchedulingType updateType = SchedulingInfo.SchedulingType.Update)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x94C690", Offset = "0x94C690", VA = "0x94C690")]
	public int AddTimer(float time, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x94C874", Offset = "0x94C874", VA = "0x94C874")]
	public int AddPeriodic(float period, GameObject owner, Action callback, bool scheduleForLater = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x94C98C", Offset = "0x94C98C", VA = "0x94C98C")]
	public int AddUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x94CA8C", Offset = "0x94CA8C", VA = "0x94CA8C")]
	public int AddFixedUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x94CB8C", Offset = "0x94CB8C", VA = "0x94CB8C")]
	public int AddLateUpdate(int framePeriod, GameObject owner, Action callback)
	{
		return default(int);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x94CC8C", Offset = "0x94CC8C", VA = "0x94CC8C")]
	public int AddState(float duration, GameObject owner, Action updateCallback, [Optional] Action startCallback, [Optional] Action endCallback)
	{
		return default(int);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x94CDD4", Offset = "0x94CDD4", VA = "0x94CDD4")]
	public int RemoveTask(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x94CFB4", Offset = "0x94CFB4", VA = "0x94CFB4")]
	public void AdjustTimer(int id, float newTimer)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x94C78C", Offset = "0x94C78C", VA = "0x94C78C")]
	private int GetAvailableSlot()
	{
		return default(int);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x94D0B8", Offset = "0x94D0B8", VA = "0x94D0B8")]
	public Scheduler()
	{
	}
}
[Token(Token = "0x200012D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62C208", Offset = "0x62C208")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int[] m_queues;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1364E88", Offset = "0x1364E88", VA = "0x1364E88")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1364F94", Offset = "0x1364F94", VA = "0x1364F94")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x200012E")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T instance;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x6000B3E")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B3F")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B40")]
	public static T Get(bool autoCreate = true)
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	public Singleton()
	{
	}
}
[Token(Token = "0x200012F")]
public class SwitchOnPlay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003DB")]
	public class ObjInfo
	{
		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634FCC", Offset = "0x634FCC")]
		public float weight;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1375854", Offset = "0x1375854", VA = "0x1375854")]
		public ObjInfo()
		{
		}
	}

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjInfo[] objects;

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x13756DC", Offset = "0x13756DC", VA = "0x13756DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x137584C", Offset = "0x137584C", VA = "0x137584C")]
	public SwitchOnPlay()
	{
	}
}
[Token(Token = "0x2000130")]
public class TimeIndependentAnimation : TimeIndependentBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool playOnStart;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playOnStartStateName;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationState currentState;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action currentCompletionHandler;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float elapsedTime;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool playing;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x813E34", Offset = "0x813E34", VA = "0x813E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x813F30", Offset = "0x813F30", VA = "0x813F30", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x813E4C", Offset = "0x813E4C", VA = "0x813E4C")]
	public void Play(string stateName, [Optional] Action completionHandler)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x8140B8", Offset = "0x8140B8", VA = "0x8140B8")]
	public TimeIndependentAnimation()
	{
	}
}
[Token(Token = "0x2000131")]
public class TimeIndependentBehaviour : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA18", Offset = "0x62EA18")]
	private sealed class <TimeIndependentWaitForSeconds>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeIndependentBehaviour <>4__this;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x81429C", Offset = "0x81429C", VA = "0x81429C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x814304", Offset = "0x814304", VA = "0x814304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x8141A4", Offset = "0x8141A4", VA = "0x8141A4")]
		[DebuggerHidden]
		public <TimeIndependentWaitForSeconds>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x814208", Offset = "0x814208", VA = "0x814208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x81420C", Offset = "0x81420C", VA = "0x81420C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x8142A4", Offset = "0x8142A4", VA = "0x8142A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pausable;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousTimeSinceStartup;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630BA8", Offset = "0x630BA8")]
	private float <deltaTime>k__BackingField;

	[Token(Token = "0x170000C9")]
	public float deltaTime
	{
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x8141D0", Offset = "0x8141D0", VA = "0x8141D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A914", Offset = "0x63A914")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x8141D8", Offset = "0x8141D8", VA = "0x8141D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A924", Offset = "0x63A924")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x8140C8", Offset = "0x8140C8", VA = "0x8140C8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x8140F0", Offset = "0x8140F0", VA = "0x8140F0", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x814018", Offset = "0x814018", VA = "0x814018", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x814118", Offset = "0x814118", VA = "0x814118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A8B0", Offset = "0x63A8B0")]
	public IEnumerator TimeIndependentWaitForSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x8141E0", Offset = "0x8141E0", VA = "0x8141E0")]
	protected void UpdateTimeSinceStartup()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x8140C0", Offset = "0x8140C0", VA = "0x8140C0")]
	public TimeIndependentBehaviour()
	{
	}
}
[Token(Token = "0x2000132")]
public class TimeIndependentParticleSystem : TimeIndependentBehaviour
{
	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x81430C", Offset = "0x81430C", VA = "0x81430C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x814380", Offset = "0x814380", VA = "0x814380")]
	public TimeIndependentParticleSystem()
	{
	}
}
[Token(Token = "0x2000133")]
public class Translate
{
	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Translate instance;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, Dictionary<string, string>> langTables;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> curTable;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string curLangIndex;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder formatString;

	[Token(Token = "0x1400002A")]
	public event Action onChangedLanguage
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x814CE4", Offset = "0x814CE4", VA = "0x814CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A934", Offset = "0x63A934")]
		add
		{
		}
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x814D88", Offset = "0x814D88", VA = "0x814D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63A944", Offset = "0x63A944")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x814B4C", Offset = "0x814B4C", VA = "0x814B4C")]
	public static Translate Instance(bool autoCreate = true, bool forceNewInstance = false)
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x814C50", Offset = "0x814C50", VA = "0x814C50")]
	private Translate()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x814E2C", Offset = "0x814E2C", VA = "0x814E2C")]
	public static string Initialize(string baseFolder = "Text", string defaultLanguage = "")
	{
		return null;
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x814F24", Offset = "0x814F24", VA = "0x814F24")]
	public static void LoadBaseFolder(string basePath)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x8153F0", Offset = "0x8153F0", VA = "0x8153F0")]
	private bool LoadFolder(string path, string langName = "english")
	{
		return default(bool);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x815594", Offset = "0x815594", VA = "0x815594")]
	private void ProcessFile(TextAsset textAsset, Dictionary<string, string> langTable)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x81525C", Offset = "0x81525C", VA = "0x81525C")]
	public static bool SetLanguage(string index, bool invokeRefreshEvent = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x81537C", Offset = "0x81537C", VA = "0x81537C")]
	public static string GetLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x81516C", Offset = "0x81516C", VA = "0x81516C")]
	public static void SetSystemLanguage()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x8157A4", Offset = "0x8157A4", VA = "0x8157A4")]
	public static string[] ListLanguages()
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x80C120", Offset = "0x80C120", VA = "0x80C120")]
	public static string Get(string key, bool defaultToEnglish = false)
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x815974", Offset = "0x815974", VA = "0x815974")]
	public static string GetOrEnglish(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x8159DC", Offset = "0x8159DC", VA = "0x8159DC")]
	public static string GetFormatVars(string key, Dictionary<string, string> values, bool defaultToEnglish = false)
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x815BF0", Offset = "0x815BF0", VA = "0x815BF0")]
	public static bool Check(string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000134")]
public class TranslatedText : MonoBehaviour
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string textId;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x815CEC", Offset = "0x815CEC", VA = "0x815CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x815E7C", Offset = "0x815E7C", VA = "0x815E7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x815F34", Offset = "0x815F34", VA = "0x815F34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x815CF0", Offset = "0x815CF0", VA = "0x815CF0")]
	public void RefreshText()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x815FF4", Offset = "0x815FF4", VA = "0x815FF4")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x815FF8", Offset = "0x815FF8", VA = "0x815FF8")]
	public TranslatedText()
	{
	}
}
[Token(Token = "0x2000135")]
public class BinaryHeap<T> where T : IComparable<T>
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> m_Elements;

	[Token(Token = "0x170000CA")]
	public int Count
	{
		[Token(Token = "0x6000B6A")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000B69")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000B6B")]
	public void Push(T item)
	{
	}

	[Token(Token = "0x6000B6C")]
	public T Peek()
	{
		return (T)null;
	}

	[Token(Token = "0x6000B6D")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000B6E")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6F")]
	public void SiftUp(int index)
	{
	}

	[Token(Token = "0x6000B70")]
	public void SiftDown(int indexSwap)
	{
	}

	[Token(Token = "0x6000B71")]
	public BinaryHeap()
	{
	}
}
[Serializable]
[Token(Token = "0x2000136")]
public class CPoint : IEquatable<CPoint>
{
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int X;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Y;

	[Token(Token = "0x170000CB")]
	public static CPoint Zero
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x82D2D8", Offset = "0x82D2D8", VA = "0x82D2D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x82D1E8", Offset = "0x82D1E8", VA = "0x82D1E8")]
	public CPoint(int x, int y)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x82D220", Offset = "0x82D220", VA = "0x82D220")]
	public CPoint(Point point)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x82D250", Offset = "0x82D250", VA = "0x82D250")]
	public static bool operator !=(CPoint a, CPoint b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x82D294", Offset = "0x82D294", VA = "0x82D294")]
	public static bool operator ==(CPoint a, CPoint b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x82D338", Offset = "0x82D338", VA = "0x82D338", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x82D3E4", Offset = "0x82D3E4", VA = "0x82D3E4", Slot = "4")]
	public bool Equals(CPoint other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x82D420", Offset = "0x82D420", VA = "0x82D420", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x82D468", Offset = "0x82D468", VA = "0x82D468")]
	public static CPoint operator +(CPoint p1, CPoint p2)
	{
		return null;
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x82D4F8", Offset = "0x82D4F8", VA = "0x82D4F8")]
	public static CPoint operator -(CPoint p1, CPoint p2)
	{
		return null;
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x82D588", Offset = "0x82D588", VA = "0x82D588")]
	public static CPoint operator /(CPoint p1, int v)
	{
		return null;
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x82D60C", Offset = "0x82D60C", VA = "0x82D60C")]
	public static CPoint operator *(CPoint p1, int v)
	{
		return null;
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x82D698", Offset = "0x82D698", VA = "0x82D698")]
	public void Set(CPoint point)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x82D6BC", Offset = "0x82D6BC", VA = "0x82D6BC")]
	public void Set(Point point)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x82D6C8", Offset = "0x82D6C8", VA = "0x82D6C8")]
	public Point ToPoint()
	{
		return default(Point);
	}
}
[Token(Token = "0x2000137")]
public struct IntRect
{
	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _xMin;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private int _xMax;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int _yMin;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int _yMax;

	[Token(Token = "0x170000CC")]
	public int bottom
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x6B7114", Offset = "0x6B7114", VA = "0x6B7114")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CD")]
	public int height
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x6B711C", Offset = "0x6B711C", VA = "0x6B711C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x6B7128", Offset = "0x6B7128", VA = "0x6B7128")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public int left
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x6B7138", Offset = "0x6B7138", VA = "0x6B7138")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CF")]
	public int right
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x6B7140", Offset = "0x6B7140", VA = "0x6B7140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D0")]
	public int top
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x6B7148", Offset = "0x6B7148", VA = "0x6B7148")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D1")]
	public int width
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x6B7150", Offset = "0x6B7150", VA = "0x6B7150")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x6B715C", Offset = "0x6B715C", VA = "0x6B715C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public int x
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x6B716C", Offset = "0x6B716C", VA = "0x6B716C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x6B7174", Offset = "0x6B7174", VA = "0x6B7174")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public int xMax
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x6B717C", Offset = "0x6B717C", VA = "0x6B717C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x6B7184", Offset = "0x6B7184", VA = "0x6B7184")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public int xMin
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x6B718C", Offset = "0x6B718C", VA = "0x6B718C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x6B7194", Offset = "0x6B7194", VA = "0x6B7194")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public int y
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x6B719C", Offset = "0x6B719C", VA = "0x6B719C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x6B71A4", Offset = "0x6B71A4", VA = "0x6B71A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public int yMax
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x6B71AC", Offset = "0x6B71AC", VA = "0x6B71AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x6B71B4", Offset = "0x6B71B4", VA = "0x6B71B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public int yMin
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x6B71BC", Offset = "0x6B71BC", VA = "0x6B71BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x6B71C4", Offset = "0x6B71C4", VA = "0x6B71C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x6B70EC", Offset = "0x6B70EC", VA = "0x6B70EC")]
	public IntRect(IntRect source)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x6B7100", Offset = "0x6B7100", VA = "0x6B7100")]
	public IntRect(int left, int top, int width, int height)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x9B7F3C", Offset = "0x9B7F3C", VA = "0x9B7F3C")]
	public static bool operator !=(IntRect lhs, IntRect rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x9B7F7C", Offset = "0x9B7F7C", VA = "0x9B7F7C")]
	public static bool operator ==(IntRect lhs, IntRect rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x6B71CC", Offset = "0x6B71CC", VA = "0x6B71CC")]
	public bool Contains(Point point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x6B720C", Offset = "0x6B720C", VA = "0x6B720C", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x6B7214", Offset = "0x6B7214", VA = "0x6B7214", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x6B721C", Offset = "0x6B721C", VA = "0x6B721C")]
	public void Set(int left, int top, int width, int height)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x6B7230", Offset = "0x6B7230", VA = "0x6B7230", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000138")]
public struct Pair<T, U>
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T First;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public U Second;

	[Token(Token = "0x6000B9E")]
	public Pair(T first, U second)
	{
	}
}
[Token(Token = "0x2000139")]
public struct Point : IEquatable<Point>
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int x;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int y;

	[Token(Token = "0x170000D8")]
	public static Point Zero
	{
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x8499EC", Offset = "0x8499EC", VA = "0x8499EC")]
		get
		{
			return default(Point);
		}
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x6B424C", Offset = "0x6B424C", VA = "0x6B424C")]
	public Point(int x, int y)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x6B4254", Offset = "0x6B4254", VA = "0x6B4254")]
	public Point(CPoint cp)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x6B4278", Offset = "0x6B4278", VA = "0x6B4278")]
	public Point(Vector2 v)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x8499AC", Offset = "0x8499AC", VA = "0x8499AC")]
	public static bool operator !=(Point a, Point b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x8499CC", Offset = "0x8499CC", VA = "0x8499CC")]
	public static bool operator ==(Point a, Point b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x6B4288", Offset = "0x6B4288", VA = "0x6B4288", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x6B4290", Offset = "0x6B4290", VA = "0x6B4290", Slot = "4")]
	public bool Equals(Point other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x6B42B8", Offset = "0x6B42B8", VA = "0x6B42B8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x849AF8", Offset = "0x849AF8", VA = "0x849AF8")]
	public static Point operator +(Point p1, Point p2)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x849B10", Offset = "0x849B10", VA = "0x849B10")]
	public static Point operator -(Point p1, Point p2)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x849B28", Offset = "0x849B28", VA = "0x849B28")]
	public static Point operator /(Point p1, int v)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x849B3C", Offset = "0x849B3C", VA = "0x849B3C")]
	public static Point operator *(Point p1, int v)
	{
		return default(Point);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x6B4300", Offset = "0x6B4300", VA = "0x6B4300")]
	public float DistanceSq()
	{
		return default(float);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x6B4308", Offset = "0x6B4308", VA = "0x6B4308")]
	public int ManhattanDistance()
	{
		return default(int);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x6B4310", Offset = "0x6B4310", VA = "0x6B4310")]
	public Point Clamp(IntRect rect)
	{
		return default(Point);
	}
}
[Token(Token = "0x200013A")]
public class Pool<T> where T : class, new()
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> items;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<bool> availability;

	[Token(Token = "0x6000BAF")]
	public Pool()
	{
	}

	[Token(Token = "0x6000BB0")]
	public Pool(int capacity)
	{
	}

	[Token(Token = "0x6000BB1")]
	public T Get()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	public void Free(T item)
	{
	}
}
[Token(Token = "0x200013B")]
public class Utils
{
	[Token(Token = "0x20003DD")]
	public class RaycastDistanceComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xBD8EB0", Offset = "0xBD8EB0", VA = "0xBD8EB0", Slot = "4")]
		public int Compare(RaycastHit x, RaycastHit y)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xBD8D98", Offset = "0xBD8D98", VA = "0xBD8D98")]
		public RaycastDistanceComparer()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA28", Offset = "0x62EA28")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameSpace;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<Type, bool> <>9__0;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xBD57B0", Offset = "0xBD57B0", VA = "0xBD57B0")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xBD8DA0", Offset = "0xBD8DA0", VA = "0xBD8DA0")]
		internal bool <GetTypesInNamespace>b__0(Type t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA38", Offset = "0x62EA38")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type requirement;

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xBD7350", Offset = "0xBD7350", VA = "0xBD7350")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBD8DE8", Offset = "0xBD8DE8", VA = "0xBD8DE8")]
		internal bool <Requires>b__0(RequireComponent rc)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA48", Offset = "0x62EA48")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type t;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBD7450", Offset = "0xBD7450", VA = "0xBD7450")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBD8E1C", Offset = "0xBD8E1C", VA = "0xBD8E1C")]
		internal bool <FindDependencies>b__0(Component c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastDistanceComparer raycastDistanceComparer;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xBD42C4", Offset = "0xBD42C4", VA = "0xBD42C4")]
	public static float Sq(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xBD42CC", Offset = "0xBD42CC", VA = "0xBD42CC")]
	public static int Sq(int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xBD42D4", Offset = "0xBD42D4", VA = "0xBD42D4")]
	public static double Sq(double value)
	{
		return default(double);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xBD42DC", Offset = "0xBD42DC", VA = "0xBD42DC")]
	public static Vector2 Slerp(Vector2 from, Vector2 to, float f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xBD44EC", Offset = "0xBD44EC", VA = "0xBD44EC")]
	public static bool IntersectCircleRectangle(Vector2 circleCenter, float circleRadius, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xBD4644", Offset = "0xBD4644", VA = "0xBD4644")]
	public static Vector2 ProjectPointOnSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xBD46F4", Offset = "0xBD46F4", VA = "0xBD46F4")]
	public static Vector2 ProjectPointOnSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd, out float f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xBD487C", Offset = "0xBD487C", VA = "0xBD487C")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xBD4AFC", Offset = "0xBD4AFC", VA = "0xBD4AFC")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out Vector2 vProjection)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xBD4B94", Offset = "0xBD4B94", VA = "0xBD4B94")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out float f)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xBD4914", Offset = "0xBD4914", VA = "0xBD4914")]
	public static int ClosestSegmentInPath(List<Vector2> path, Vector2 vPoint, out Vector2 vProjection, out float f)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xBD4C2C", Offset = "0xBD4C2C", VA = "0xBD4C2C")]
	public static float DistanceToSegmentSq(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(float);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xBD4D38", Offset = "0xBD4D38", VA = "0xBD4D38")]
	public static float DistanceToSegment(Vector2 vPoint, Vector2 vStart, Vector2 vEnd)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xBD4E2C", Offset = "0xBD4E2C", VA = "0xBD4E2C")]
	public static float GetSlope(float fX1, float fY1, float fX2, float fY2)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xBD4E3C", Offset = "0xBD4E3C", VA = "0xBD4E3C")]
	public static float GetSlopeInv(float fX1, float fY1, float fX2, float fY2)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xBD4E4C", Offset = "0xBD4E4C", VA = "0xBD4E4C")]
	public static float GetSlope(float fX1, float fY1, float fX2, float fY2, bool bInvert)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xBD4EF8", Offset = "0xBD4EF8", VA = "0xBD4EF8")]
	public static bool SegmentIntersect(ref Vector2 vStart, ref Vector2 vEnd, ref Vector2 vStart2, ref Vector2 vEnd2, out Vector2 vIntersection)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xBD50CC", Offset = "0xBD50CC", VA = "0xBD50CC")]
	public static bool SegmentIntersect(ref Vector2 vStart, ref Vector2 vEnd, ref Vector2 vStart2, ref Vector2 vEnd2, ref Vector2 vS, out Vector2 vIntersection)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xBD527C", Offset = "0xBD527C", VA = "0xBD527C")]
	public static Vector3 Plane3Intersect(Plane p1, Plane p2, Plane p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xBD5584", Offset = "0xBD5584", VA = "0xBD5584")]
	public static bool IsInLayerMask(GameObject obj, LayerMask layerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xBD55CC", Offset = "0xBD55CC", VA = "0xBD55CC")]
	public static int NumberOfSetBits(int i)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xBD5600", Offset = "0xBD5600", VA = "0xBD5600")]
	public static void GetTypesInNamespace(List<Type> list, string nameSpace)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xBD57B8", Offset = "0xBD57B8", VA = "0xBD57B8")]
	public static Vector3 BezierInterpolate(Vector3 vP1, Vector3 vP2, Vector3 vP3, Vector3 vP4, float param)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xBD5984", Offset = "0xBD5984", VA = "0xBD5984")]
	public static bool IsAncestor(Transform obj, Transform parent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xBD5A6C", Offset = "0xBD5A6C", VA = "0xBD5A6C")]
	public static string WordWrap(string sourceStr, TextMesh textMesh, float wrapLimit)
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xBD5E20", Offset = "0xBD5E20", VA = "0xBD5E20")]
	public static string WordWrapChinese(string sourceStr, TextMesh textMesh, float wrapLimit)
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xBD6148", Offset = "0xBD6148", VA = "0xBD6148")]
	public static float GetAngleToPoint(Transform refTransform, Vector3 targetPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xBD624C", Offset = "0xBD624C", VA = "0xBD624C")]
	public static float GetAngleToPointFlat(Transform refTransform, Vector3 targetPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xBD6390", Offset = "0xBD6390", VA = "0xBD6390")]
	public static Vector3 GetPositionFromAncestor(Transform obj, Transform reference)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xBD6404", Offset = "0xBD6404", VA = "0xBD6404")]
	public static Quaternion GetRotationFromAncestor(Transform obj, Transform ancestor)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000BD1")]
	public static T GetComponentInAncestor<T>(Transform obj)
	{
		return (T)null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xBD65BC", Offset = "0xBD65BC", VA = "0xBD65BC")]
	public static Bounds TransformBoundsToWorldSpace(Bounds bounds, Transform transform)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xBD676C", Offset = "0xBD676C", VA = "0xBD676C")]
	public static bool PointInBox(Vector3 point, BoxCollider box)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xBD6904", Offset = "0xBD6904", VA = "0xBD6904")]
	public static bool InDistance(Vector3 first, Vector3 second, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xBD69EC", Offset = "0xBD69EC", VA = "0xBD69EC")]
	public static bool InDistanceGround(Vector3 first, Vector3 second, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xBD6B00", Offset = "0xBD6B00", VA = "0xBD6B00")]
	public static float MapRange(float value, float rangeMin, float rangeMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xBD6B88", Offset = "0xBD6B88", VA = "0xBD6B88")]
	public static float Remap(float value, float oldRangeMin, float oldRangeMax, float newRangeMin, float newRangeMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xBD6C54", Offset = "0xBD6C54", VA = "0xBD6C54")]
	public static int CombineHashCodes(IEnumerable<int> hashCodes)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xBD6EF4", Offset = "0xBD6EF4", VA = "0xBD6EF4")]
	public static int CombineHashCodes(IEnumerable<object> objs)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDA")]
	public static void Swap<T>(ref T first, ref T second)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xBD71CC", Offset = "0xBD71CC", VA = "0xBD71CC")]
	private static bool Requires(Type obj, Type requirement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xBD7358", Offset = "0xBD7358", VA = "0xBD7358")]
	public static Component[] FindDependencies(GameObject go, Type t)
	{
		return null;
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xBD7458", Offset = "0xBD7458", VA = "0xBD7458")]
	public static void SortRaycast(RaycastHit[] results, int numResults)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xBD74E8", Offset = "0xBD74E8", VA = "0xBD74E8")]
	public static Vector3 GetBarycentricCoords(Vector3 vPoint, Vector3 vA, Vector3 vB, Vector3 vC)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xBD775C", Offset = "0xBD775C", VA = "0xBD775C")]
	public static float Wrap01(float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xBD7794", Offset = "0xBD7794", VA = "0xBD7794")]
	public static Vector2 Wrap01(Vector2 uv)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xBD7878", Offset = "0xBD7878", VA = "0xBD7878")]
	public static List<Pair<int, int>> ComputeMinSpanningTree(List<Vector2> positions, List<Pair<int, int>> edges)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xBD7BA0", Offset = "0xBD7BA0", VA = "0xBD7BA0")]
	public static Bounds GetRendererHierarchyBounds(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xBD7D38", Offset = "0xBD7D38", VA = "0xBD7D38")]
	public static void AttachItemToHand(GameObject item, Hand hand)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xBD8100", Offset = "0xBD8100", VA = "0xBD8100")]
	public static Vector3 Steer(Vector3 currentSpeed, Vector3 desiredVelocity, float maxSpeed, float maxForce, float mass)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xBD83A8", Offset = "0xBD83A8", VA = "0xBD83A8")]
	public static Vector3 SteerApproach(Vector3 target, Vector3 currentPosition, float maxSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xBD8530", Offset = "0xBD8530", VA = "0xBD8530")]
	public static bool CheckLineOfSight(Vector3 originPos, Transform target, Transform source, Collider sourceCollider, RaycastHit[] cachedHits)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xBD888C", Offset = "0xBD888C", VA = "0xBD888C")]
	public static bool CheckLineOfSight(Vector3 originPos, Vector3 target, Transform source, Collider sourceCollider, RaycastHit[] cachedHits, [Optional] Transform targetObj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xBD8C30", Offset = "0xBD8C30", VA = "0xBD8C30")]
	public static Vector3 ToGround(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xBD8D20", Offset = "0xBD8D20", VA = "0xBD8D20")]
	public Utils()
	{
	}
}
[Token(Token = "0x200013C")]
public class HandPoseProxy : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand.Handedness handedness;

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x8900A8", Offset = "0x8900A8", VA = "0x8900A8")]
	public HandPoseProxy()
	{
	}
}
[Token(Token = "0x200013D")]
public interface IRoomInfestationPart
{
	[Token(Token = "0x170000D9")]
	GameObject gameObject
	{
		[Token(Token = "0x6000BEC")]
		get;
	}

	[Token(Token = "0x6000BED")]
	void SetInfestationLevel(float progress);
}
[Token(Token = "0x200013E")]
public class RoomInfestation : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003E1")]
	private class SerializedData
	{
		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool infestated;

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x932A3C", Offset = "0x932A3C", VA = "0x932A3C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA58", Offset = "0x62EA58")]
	private sealed class <Initialize_co>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x8EB110", Offset = "0x8EB110", VA = "0x8EB110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x8EB178", Offset = "0x8EB178", VA = "0x8EB178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x8EA6DC", Offset = "0x8EA6DC", VA = "0x8EA6DC")]
		[DebuggerHidden]
		public <Initialize_co>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x8EB050", Offset = "0x8EB050", VA = "0x8EB050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x8EB054", Offset = "0x8EB054", VA = "0x8EB054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x8EB118", Offset = "0x8EB118", VA = "0x8EB118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA68", Offset = "0x62EA68")]
	private sealed class <SpawnParts_co>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x9329CC", Offset = "0x9329CC", VA = "0x9329CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x932A34", Offset = "0x932A34", VA = "0x932A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x93274C", Offset = "0x93274C", VA = "0x93274C")]
		[DebuggerHidden]
		public <SpawnParts_co>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x932778", Offset = "0x932778", VA = "0x932778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x93277C", Offset = "0x93277C", VA = "0x93277C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x9329D4", Offset = "0x9329D4", VA = "0x9329D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA78", Offset = "0x62EA78")]
	private sealed class <CombinePartDecals_co>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EasyDecal> sourceDecals;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <wasActive>5__2;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x8EAFE0", Offset = "0x8EAFE0", VA = "0x8EAFE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x8EB048", Offset = "0x8EB048", VA = "0x8EB048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x8EA81C", Offset = "0x8EA81C", VA = "0x8EA81C")]
		[DebuggerHidden]
		public <CombinePartDecals_co>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x8EAC9C", Offset = "0x8EAC9C", VA = "0x8EAC9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x8EACA0", Offset = "0x8EACA0", VA = "0x8EACA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x8EAFE8", Offset = "0x8EAFE8", VA = "0x8EAFE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA88", Offset = "0x62EA88")]
	private sealed class <PlaySounds_co>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInfestation <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x8EB2FC", Offset = "0x8EB2FC", VA = "0x8EB2FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x8EB364", Offset = "0x8EB364", VA = "0x8EB364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x8EAA98", Offset = "0x8EAA98", VA = "0x8EAA98")]
		[DebuggerHidden]
		public <PlaySounds_co>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x8EB180", Offset = "0x8EB180", VA = "0x8EB180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x8EB184", Offset = "0x8EB184", VA = "0x8EB184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x8EB304", Offset = "0x8EB304", VA = "0x8EB304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isInfestated;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool startInfestated;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float infestationLevel;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ignoreLightLevel;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomInfestationData data;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material infestatedSurfaceMaterial;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool addedSurfaceMaterials;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minThreshold;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxParallax;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<IRoomInfestationPart> parts;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> partDecals;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material[] partDecalsMaterials;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Material, Material> matSubstitutions;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<Renderer, List<Material>> originalMaterials;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Room room;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RoomPower rPower;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RoomMarker.RoomMarkerCollection infestationMarkers;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float spreadTimer;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isInitializing;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x630BC8", Offset = "0x630BC8")]
	public bool _ToggleBtn;

	[Token(Token = "0x170000DA")]
	public bool IsInfestated
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x8E8F94", Offset = "0x8E8F94", VA = "0x8E8F94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x8E8F9C", Offset = "0x8E8F9C", VA = "0x8E8F9C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x8E9050", Offset = "0x8E9050", VA = "0x8E9050")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x8E9278", Offset = "0x8E9278", VA = "0x8E9278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x8E93E8", Offset = "0x8E93E8", VA = "0x8E93E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x8E9548", Offset = "0x8E9548", VA = "0x8E9548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x8E98CC", Offset = "0x8E98CC", VA = "0x8E98CC")]
	private void ApplyInfestationLevel()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x8E8FBC", Offset = "0x8E8FBC", VA = "0x8E8FBC")]
	public void SetInfestated(bool isInfestated, bool instantaneous = false)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x8EA05C", Offset = "0x8EA05C", VA = "0x8EA05C")]
	private void AddSurfaceMaterial()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x8E9BD0", Offset = "0x8E9BD0", VA = "0x8E9BD0")]
	private void RemoveSurfaceMaterial()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x8E94CC", Offset = "0x8E94CC", VA = "0x8E94CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A954", Offset = "0x63A954")]
	private IEnumerator Initialize_co()
	{
		return null;
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x8EA708", Offset = "0x8EA708", VA = "0x8EA708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63A9B8", Offset = "0x63A9B8")]
	private IEnumerator SpawnParts_co()
	{
		return null;
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x8EA784", Offset = "0x8EA784", VA = "0x8EA784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AA1C", Offset = "0x63AA1C")]
	private IEnumerator CombinePartDecals_co(List<EasyDecal> sourceDecals)
	{
		return null;
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x8E9DE4", Offset = "0x8E9DE4", VA = "0x8E9DE4")]
	private void SetPartsActive(bool active)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x8EA028", Offset = "0x8EA028", VA = "0x8EA028")]
	private void ResetSpreadTimer()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x8EA848", Offset = "0x8EA848", VA = "0x8EA848")]
	private void ToggleBtn()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x8EA85C", Offset = "0x8EA85C", VA = "0x8EA85C")]
	private void OnRoomPowerChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x8EA9B4", Offset = "0x8EA9B4", VA = "0x8EA9B4")]
	public static bool IsInInfestatedRoom(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x8E91FC", Offset = "0x8E91FC", VA = "0x8E91FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AA80", Offset = "0x63AA80")]
	private IEnumerator PlaySounds_co()
	{
		return null;
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x8EAAC4", Offset = "0x8EAAC4", VA = "0x8EAAC4", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x8EAB38", Offset = "0x8EAB38", VA = "0x8EAB38", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x8EABAC", Offset = "0x8EABAC", VA = "0x8EABAC", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x8EABB0", Offset = "0x8EABB0", VA = "0x8EABB0")]
	public RoomInfestation()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62C240", Offset = "0x62C240")]
public class RoomInfestationData : ScriptableObject
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float appearSpeed;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float disappearSpeed;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchRefMaterial infestatedSurfaceMaterial;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader[] shaderSubstitutionsEnvironment;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader[] shaderSubstitutionsInfestation;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchRefListGameObject partPrefabs;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630C28", Offset = "0x630C28")]
	public AudioCue ambienceSounds;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float soundIntervalMin;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float soundIntervalMax;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x932A44", Offset = "0x932A44", VA = "0x932A44")]
	public RoomInfestationData()
	{
	}
}
[Token(Token = "0x2000140")]
public class RoomInfestationIgnore : MonoBehaviour
{
	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x932A68", Offset = "0x932A68", VA = "0x932A68")]
	public RoomInfestationIgnore()
	{
	}
}
[Token(Token = "0x2000141")]
public class RoomInfestationPart : MonoBehaviour, IRoomInfestationPart
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool applyScale;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x932A70", Offset = "0x932A70", VA = "0x932A70")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x932AAC", Offset = "0x932AAC", VA = "0x932AAC", Slot = "5")]
	public void SetInfestationLevel(float progress)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x932B80", Offset = "0x932B80", VA = "0x932B80")]
	public RoomInfestationPart()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x932B90", Offset = "0x932B90", VA = "0x932B90", Slot = "4")]
	private GameObject IRoomInfestationPart.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000142")]
public class InputExt : Singleton<InputExt>
{
	[Token(Token = "0x20003E6")]
	public enum Button
	{
		[Token(Token = "0x4001C24")]
		Action,
		[Token(Token = "0x4001C25")]
		Teleport,
		[Token(Token = "0x4001C26")]
		Grab,
		[Token(Token = "0x4001C27")]
		Inventory,
		[Token(Token = "0x4001C28")]
		Menu,
		[Token(Token = "0x4001C29")]
		SecondaryButton
	}

	[Token(Token = "0x20003E7")]
	public enum EControllerType
	{
		[Token(Token = "0x4001C2B")]
		Oculus,
		[Token(Token = "0x4001C2C")]
		Vive,
		[Token(Token = "0x4001C2D")]
		WindowsMR,
		[Token(Token = "0x4001C2E")]
		Index,
		[Token(Token = "0x4001C2F")]
		HPMotionControllers,
		[Token(Token = "0x4001C30")]
		Generic,
		[Token(Token = "0x4001C31")]
		PicoNeo3
	}

	[Token(Token = "0x20003E8")]
	public enum Swipe
	{
		[Token(Token = "0x4001C33")]
		Right,
		[Token(Token = "0x4001C34")]
		Left,
		[Token(Token = "0x4001C35")]
		Up,
		[Token(Token = "0x4001C36")]
		Down
	}

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Hand.Handedness primaryHand;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hand.Handedness secondaryHand;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 lastAxisLeft;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 lastAxisRight;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 axisLeft;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 axisRight;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool grabAxisWasPressedLeft;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool grabAxisIsPressedLeft;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool grabAxisWasPressedRight;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool grabAxisIsPressedRight;

	[Token(Token = "0x4000AB5")]
	private const float grabAxisPressThreshold = 0.7f;

	[Token(Token = "0x4000AB6")]
	private const float grabAxisReleaseThreshold = 0.4f;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool btnTeleportIsDown;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool btnTeleportWasDown;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool useOpenVRLayout;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool requireTouchpadPress;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private EControllerType _controllerType;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float controllerTypeUpdateTimer;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool firstUpdate;

	[Token(Token = "0x4000ABE")]
	private const float swipeThreshold = 0.7f;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, string> controlTexts;

	[Token(Token = "0x170000DB")]
	public static EControllerType ControllerType
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x9B4A88", Offset = "0x9B4A88", VA = "0x9B4A88")]
		get
		{
			return default(EControllerType);
		}
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x9B49D0", Offset = "0x9B49D0", VA = "0x9B49D0")]
	public static Hand.Handedness GetPrimaryHand()
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x9B4A2C", Offset = "0x9B4A2C", VA = "0x9B4A2C")]
	public static Hand.Handedness GetSecondaryHand()
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x9B4AE4", Offset = "0x9B4AE4", VA = "0x9B4AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x9B4C88", Offset = "0x9B4C88", VA = "0x9B4C88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x9B4FC8", Offset = "0x9B4FC8", VA = "0x9B4FC8")]
	private EControllerType FindControllerType(bool printToDebug = false)
	{
		return default(EControllerType);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x9B50F8", Offset = "0x9B50F8", VA = "0x9B50F8")]
	public static bool GetButton(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x9B5454", Offset = "0x9B5454", VA = "0x9B5454")]
	public static bool GetButtonDown(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x9B56B8", Offset = "0x9B56B8", VA = "0x9B56B8")]
	public static bool GetButtonUp(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x9B509C", Offset = "0x9B509C", VA = "0x9B509C")]
	public static float GetButtonAxis(Button btn, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(float);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x9B507C", Offset = "0x9B507C", VA = "0x9B507C")]
	public static Vector2 GetAxis(Hand.Handedness hand = Hand.Handedness.Primary, bool requirePress = true)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x9B5948", Offset = "0x9B5948", VA = "0x9B5948")]
	public static bool GetRecenterDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x9B59C0", Offset = "0x9B59C0", VA = "0x9B59C0")]
	public static bool GetHandPointing(Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x9B59C8", Offset = "0x9B59C8", VA = "0x9B59C8")]
	public static bool GetHandThumbsUp(Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x9B59D0", Offset = "0x9B59D0", VA = "0x9B59D0")]
	public static bool GetSwipe(Swipe swipe, Hand.Handedness hand = Hand.Handedness.Primary)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x9B5B24", Offset = "0x9B5B24", VA = "0x9B5B24")]
	public static void TriggerHapticPulse(Hand.Handedness hand, float frequency, float amplitude)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x9B5334", Offset = "0x9B5334", VA = "0x9B5334")]
	private static Hand.Handedness ResolveHand(Hand.Handedness hand)
	{
		return default(Hand.Handedness);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x9B5B28", Offset = "0x9B5B28", VA = "0x9B5B28")]
	public static Dictionary<string, string> GetControlTexts()
	{
		return null;
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x9B4FD0", Offset = "0x9B4FD0", VA = "0x9B4FD0")]
	public void ResetControlTexts()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x9B5438", Offset = "0x9B5438", VA = "0x9B5438")]
	private static int Pico_GetController(Hand.Handedness hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x9B53D0", Offset = "0x9B53D0", VA = "0x9B53D0")]
	private static Pvr_KeyCode Pico_GetButton(Button btn, int controllerIdx)
	{
		return default(Pvr_KeyCode);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x9B591C", Offset = "0x9B591C", VA = "0x9B591C")]
	private static Pvr_KeyCode Pico_GetButtonAxis(Button btn, int controllerIdx)
	{
		return default(Pvr_KeyCode);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x9B6758", Offset = "0x9B6758", VA = "0x9B6758")]
	public InputExt()
	{
	}
}
[Token(Token = "0x2000143")]
public class Armor : Equipable
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630C60", Offset = "0x630C60")]
	public float damageResistance;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x8201D0", Offset = "0x8201D0", VA = "0x8201D0", Slot = "4")]
	protected override bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x820200", Offset = "0x820200", VA = "0x820200", Slot = "5")]
	protected override void Equip()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x82034C", Offset = "0x82034C", VA = "0x82034C")]
	public Armor()
	{
	}
}
[Token(Token = "0x2000144")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C284", Offset = "0x62C284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C284", Offset = "0x62C284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C284", Offset = "0x62C284")]
[SelectionBase]
public class Baton : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform muzzle;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform staff;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float staffRetraction;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630C78", Offset = "0x630C78")]
	public Health.DamageType damageType;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int damageAmount;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float damageRadius;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float damageTime;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float heatupSpeed;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float cooldownSpeed;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630CB0", Offset = "0x630CB0")]
	public ParticleSystem flareFX;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem sparksFX;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource humSound;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue sparkSounds;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inHand;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float deployFactor;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float damageCooldown;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float activationHeating;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool overheated;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mainMaterial;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color emissionColor;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Lightning lightningFX;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HandTool handTool;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Item item;

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x824260", Offset = "0x824260", VA = "0x824260")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x82437C", Offset = "0x82437C", VA = "0x82437C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x824498", Offset = "0x824498", VA = "0x824498")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x8245D8", Offset = "0x8245D8", VA = "0x8245D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x824698", Offset = "0x824698", VA = "0x824698")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x8246A8", Offset = "0x8246A8", VA = "0x8246A8")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x824750", Offset = "0x824750", VA = "0x824750")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x824BAC", Offset = "0x824BAC", VA = "0x824BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x824D30", Offset = "0x824D30", VA = "0x824D30", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x824694", Offset = "0x824694", VA = "0x824694", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x824D78", Offset = "0x824D78", VA = "0x824D78", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x824DF4", Offset = "0x824DF4", VA = "0x824DF4")]
	public Baton()
	{
	}
}
[Token(Token = "0x2000145")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C348", Offset = "0x62C348")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C348", Offset = "0x62C348")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C348", Offset = "0x62C348")]
public class Crossbow : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class SerializedData
	{
		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData arrowPackData;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x864E48", Offset = "0x864E48", VA = "0x864E48")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public DraggableLinear nock;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isNocked;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Collider gunCollider;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private HandTool handTool;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Hand hand;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool disableNockOnUpdate;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue emptySound;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630CE8", Offset = "0x630CE8")]
	public Transform leftArm;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform rightArm;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform trigger;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform stock;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 stockCollapsedPos;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 stockExtendedPos;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630D20", Offset = "0x630D20")]
	public int maxAmmo;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630D68", Offset = "0x630D68")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private CrossbowArrowPack arrowPack;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630DA0", Offset = "0x630DA0")]
	public TutorialTrigger grabTutorial;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Item ammoPackTutorial;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TutorialPanel grabPackTutorialPanel;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private TutorialPanel insertPackTutorialPanel;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private TutorialPanel nockTutorialPanel;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Item item;

	[Token(Token = "0x170000DC")]
	public int Ammo
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x862B98", Offset = "0x862B98", VA = "0x862B98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x862BA0", Offset = "0x862BA0", VA = "0x862BA0", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x862DBC", Offset = "0x862DBC", VA = "0x862DBC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x862FB0", Offset = "0x862FB0", VA = "0x862FB0")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x863064", Offset = "0x863064", VA = "0x863064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x8637BC", Offset = "0x8637BC", VA = "0x8637BC")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x863B9C", Offset = "0x863B9C", VA = "0x863B9C")]
	private void OnTutorial_GrabAmmo(Hand hand)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x863E18", Offset = "0x863E18", VA = "0x863E18")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x863EA8", Offset = "0x863EA8", VA = "0x863EA8")]
	private void OnNockSnap(DraggableLinear drag)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x864000", Offset = "0x864000", VA = "0x864000")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x864414", Offset = "0x864414", VA = "0x864414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x864240", Offset = "0x864240", VA = "0x864240")]
	protected void Shoot()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x864A0C", Offset = "0x864A0C", VA = "0x864A0C")]
	private void OnAmmoInserted(Item arrowPackItem)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x864BA0", Offset = "0x864BA0", VA = "0x864BA0")]
	public void InsertAmmo(CrossbowArrowPack arrowPack)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x864D10", Offset = "0x864D10", VA = "0x864D10")]
	public void AddAmmo(int amount)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x864C6C", Offset = "0x864C6C", VA = "0x864C6C")]
	public void SetAmmo(int amount)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x86312C", Offset = "0x86312C", VA = "0x86312C")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x86480C", Offset = "0x86480C", VA = "0x86480C", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x8634E4", Offset = "0x8634E4", VA = "0x8634E4", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x864E50", Offset = "0x864E50", VA = "0x864E50", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x864ECC", Offset = "0x864ECC", VA = "0x864ECC")]
	public Crossbow()
	{
	}
}
[Token(Token = "0x2000146")]
public class CrossbowArrowPack : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProjectileDamage damage;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] arrows;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arrowYDelta;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float arrowBaseYPos;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int consumed;

	[Token(Token = "0x170000DD")]
	public int AmmoAmount
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x864C48", Offset = "0x864C48", VA = "0x864C48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x864EE4", Offset = "0x864EE4", VA = "0x864EE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x864790", Offset = "0x864790", VA = "0x864790")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x864C74", Offset = "0x864C74", VA = "0x864C74")]
	public void Insert()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x864D20", Offset = "0x864D20", VA = "0x864D20")]
	public void Release()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x864328", Offset = "0x864328", VA = "0x864328")]
	public void SetNockingProgress(float progress)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x864F38", Offset = "0x864F38", VA = "0x864F38")]
	public CrossbowArrowPack()
	{
	}
}
[Token(Token = "0x2000147")]
public class CrossbowCord : MonoBehaviour
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer[] lineRenderers;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] bowAttachPoints;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] nookAttachPoints;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x864F4C", Offset = "0x864F4C", VA = "0x864F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x864FBC", Offset = "0x864FBC", VA = "0x864FBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x86510C", Offset = "0x86510C", VA = "0x86510C")]
	public CrossbowCord()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C3FC", Offset = "0x62C3FC")]
public class Equipable : MonoBehaviour
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 anchorPosition;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 anchorRotationAngles;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue equipSound;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GhostOutline ghostOutline;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float checkRadius;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool inPosition;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool positioning;

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x87C2EC", Offset = "0x87C2EC", VA = "0x87C2EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x87C3D4", Offset = "0x87C3D4", VA = "0x87C3D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x87C4BC", Offset = "0x87C4BC", VA = "0x87C4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x87C648", Offset = "0x87C648", VA = "0x87C648")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x87C99C", Offset = "0x87C99C", VA = "0x87C99C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x87CBF4", Offset = "0x87CBF4", VA = "0x87CBF4")]
	public void AutoEquip()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x87CDCC", Offset = "0x87CDCC", VA = "0x87CDCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x87CFA8", Offset = "0x87CFA8", VA = "0x87CFA8", Slot = "4")]
	protected virtual bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x87CFB0", Offset = "0x87CFB0", VA = "0x87CFB0", Slot = "5")]
	protected virtual void Equip()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x87CFB4", Offset = "0x87CFB4", VA = "0x87CFB4")]
	public Equipable()
	{
	}
}
[Token(Token = "0x2000149")]
public class GhostOutline : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ghostMaterial;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeshFilter> objFilters;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Matrix4x4> objMatrices;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MeshRenderer> objRenderers;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x88875C", Offset = "0x88875C", VA = "0x88875C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x888844", Offset = "0x888844", VA = "0x888844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x8888CC", Offset = "0x8888CC", VA = "0x8888CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x888AD4", Offset = "0x888AD4", VA = "0x888AD4")]
	public void Show(GameObject go)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x888F98", Offset = "0x888F98", VA = "0x888F98")]
	public GhostOutline()
	{
	}
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C460", Offset = "0x62C460")]
public class Grenade : MonoBehaviour
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lockHandle;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float primingTime;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue lockReleaseSound;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue primingSound;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject detonationFXPrefab;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue detonationSound;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoundwaveData detonationSoundwave;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool destroyOnDetonation;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	protected bool primed;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x88A7D0", Offset = "0x88A7D0", VA = "0x88A7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x88A9BC", Offset = "0x88A9BC", VA = "0x88A9BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x88ABA8", Offset = "0x88ABA8", VA = "0x88ABA8")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x88ABFC", Offset = "0x88ABFC", VA = "0x88ABFC")]
	protected void Prime(float maxTime = float.MaxValue)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x88B0A8", Offset = "0x88B0A8", VA = "0x88B0A8")]
	public void Detonate()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x88B524", Offset = "0x88B524", VA = "0x88B524")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x88B538", Offset = "0x88B538", VA = "0x88B538", Slot = "4")]
	protected virtual void OnDetonate()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x88B53C", Offset = "0x88B53C", VA = "0x88B53C", Slot = "5")]
	protected virtual void OnPrime()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x88B540", Offset = "0x88B540", VA = "0x88B540")]
	public Grenade()
	{
	}
}
[Token(Token = "0x200014B")]
public class GrenadeEMPulse : Grenade
{
	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material usedMaterial;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pulseDuration;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x88B550", Offset = "0x88B550", VA = "0x88B550", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x88B848", Offset = "0x88B848", VA = "0x88B848")]
	public GrenadeEMPulse()
	{
	}
}
[Token(Token = "0x200014C")]
public class GrenadeHE : Grenade
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ExplosionDamage damageData;

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x88B860", Offset = "0x88B860", VA = "0x88B860", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x88B8A4", Offset = "0x88B8A4", VA = "0x88B8A4")]
	public GrenadeHE()
	{
	}
}
[Token(Token = "0x200014D")]
public class GrenadeLight : Grenade
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float flareDuration;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject flareFX;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material usedMaterial;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue flareSound;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float flareCountdown;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem particlesFX;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x88B8B4", Offset = "0x88B8B4", VA = "0x88B8B4", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x88BBE4", Offset = "0x88BBE4", VA = "0x88BBE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x88BD88", Offset = "0x88BD88", VA = "0x88BD88")]
	public GrenadeLight()
	{
	}
}
[Token(Token = "0x200014E")]
public class GrenadeTeleporter : Grenade
{
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EA98", Offset = "0x62EA98")]
	private sealed class <TeleportEnemy_co>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IAgent enemy;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeTeleporter <>4__this;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <spawnPos>5__2;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x88D6F0", Offset = "0x88D6F0", VA = "0x88D6F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x88D758", Offset = "0x88D758", VA = "0x88D758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x88CEA8", Offset = "0x88CEA8", VA = "0x88CEA8")]
		[DebuggerHidden]
		public <TeleportEnemy_co>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x88CEEC", Offset = "0x88CEEC", VA = "0x88CEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x88CEF0", Offset = "0x88CEF0", VA = "0x88CEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x88D6F8", Offset = "0x88D6F8", VA = "0x88D6F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float effectRadius;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float effectRadiusPlayer;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material usedMaterial;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject primingFX;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem creaturePortFX;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem creaturePortSmallFX;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable grabbable;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem particlesFX;

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x88BDA0", Offset = "0x88BDA0", VA = "0x88BDA0", Slot = "5")]
	protected override void OnPrime()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x88BF78", Offset = "0x88BF78", VA = "0x88BF78", Slot = "4")]
	protected override void OnDetonate()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x88C66C", Offset = "0x88C66C", VA = "0x88C66C")]
	private void TeleportPlayer()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x88C81C", Offset = "0x88C81C", VA = "0x88C81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AAE4", Offset = "0x63AAE4")]
	private IEnumerator TeleportEnemy_co(IAgent enemy)
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x88C8B4", Offset = "0x88C8B4", VA = "0x88C8B4")]
	private Room GetTargetRoom(Room curRoom, Room playerRoom, bool isPlayer = true)
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x88CED4", Offset = "0x88CED4", VA = "0x88CED4")]
	public GrenadeTeleporter()
	{
	}
}
[Token(Token = "0x200014F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C4C4", Offset = "0x62C4C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C4C4", Offset = "0x62C4C4")]
public class HandGun : MonoBehaviour, IGameSerializable, IModableWeapon, IAimableWeapon
{
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class SerializedData
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ammo;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string modData;

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x88FF08", Offset = "0x88FF08", VA = "0x88FF08")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hand hand;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fireRate;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cooldownTime;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autoFire;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float range;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool rayCast;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ProjectileDamage damageData;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform gunBody;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform muzzle;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform trigger;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float triggerMaxDisplacement;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 triggerDefaultPos;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunTrails gunTrails;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue shootSound;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue emptySound;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue releaseMagazineSound;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SoundwaveData shootSoundwave;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float shootHapticsStrength;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630DD8", Offset = "0x630DD8")]
	public int maxAmmo;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text ammoCounter;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630E20", Offset = "0x630E20")]
	public Collider magazineEntryArea;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ItemReceptor magazineReceptor;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform magazineTargetPos;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip insertMagazineSound;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float magazineInsertSpeed;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HandGunMagazine magazine;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float magazineEntryProgress;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 magazineStartPos;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion magazineStartRot;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private HandTool handTool;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Recoil recoilFX;

	[Token(Token = "0x170000DE")]
	public int Ammo
	{
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x88DD58", Offset = "0x88DD58", VA = "0x88DD58")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x88DD60", Offset = "0x88DD60", VA = "0x88DD60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x88DEF4", Offset = "0x88DEF4", VA = "0x88DEF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x88E05C", Offset = "0x88E05C", VA = "0x88E05C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x88E10C", Offset = "0x88E10C", VA = "0x88E10C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x88E814", Offset = "0x88E814", VA = "0x88E814")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x88E8FC", Offset = "0x88E8FC", VA = "0x88E8FC")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x88E9DC", Offset = "0x88E9DC", VA = "0x88E9DC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x88F164", Offset = "0x88F164", VA = "0x88F164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x88EC08", Offset = "0x88EC08", VA = "0x88EC08")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x88F9E8", Offset = "0x88F9E8", VA = "0x88F9E8")]
	public void AddAmmo(int amount)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x88F3D8", Offset = "0x88F3D8", VA = "0x88F3D8")]
	public void SetAmmo(int amount)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x88E204", Offset = "0x88E204", VA = "0x88E204")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x88FB20", Offset = "0x88FB20", VA = "0x88FB20")]
	private void OnMagazineInserted(Item magItem)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x88FBDC", Offset = "0x88FBDC", VA = "0x88FBDC")]
	public void InsertMagazine(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x88FDD8", Offset = "0x88FDD8", VA = "0x88FDD8", Slot = "7")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x88FDE0", Offset = "0x88FDE0", VA = "0x88FDE0", Slot = "8")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x88FDE8", Offset = "0x88FDE8", VA = "0x88FDE8", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x88E620", Offset = "0x88E620", VA = "0x88E620", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x88FF10", Offset = "0x88FF10", VA = "0x88FF10", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x88FF8C", Offset = "0x88FF8C", VA = "0x88FF8C")]
	public HandGun()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C550", Offset = "0x62C550")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C550", Offset = "0x62C550")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C550", Offset = "0x62C550")]
public class HandGunMagazine : MonoBehaviour
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ammoAmount;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform topPoint;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float detectionRadius;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask layerMask;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material usedMaterial;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grabbable;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x88FFCC", Offset = "0x88FFCC", VA = "0x88FFCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x89002C", Offset = "0x89002C", VA = "0x89002C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x890030", Offset = "0x890030", VA = "0x890030")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x88FD3C", Offset = "0x88FD3C", VA = "0x88FD3C")]
	public void Insert()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x88F9F8", Offset = "0x88F9F8", VA = "0x88F9F8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x890034", Offset = "0x890034", VA = "0x890034")]
	public HandGunMagazine()
	{
	}
}
[Token(Token = "0x2000151")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C604", Offset = "0x62C604")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C604", Offset = "0x62C604")]
public class HandTool : MonoBehaviour
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform attachPoint;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int customPose;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hand grabbingHand;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 inHolsterPos;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 inHolsterRot;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isLocked;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Holster holster;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630E58", Offset = "0x630E58")]
	public AudioCue holsterSound;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue unholsterSound;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x630E90", Offset = "0x630E90")]
	public GameObject bodyItemCollider;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider collider;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Highlightable highlight;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Item item;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isAttaching;

	[Token(Token = "0x170000DF")]
	public bool InHand
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x8900B0", Offset = "0x8900B0", VA = "0x8900B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E0")]
	public Hand GrabbingHand
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x890120", Offset = "0x890120", VA = "0x890120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public bool IsLocked
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x890128", Offset = "0x890128", VA = "0x890128")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E2")]
	public bool IsHolstered
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x890130", Offset = "0x890130", VA = "0x890130")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x8901A0", Offset = "0x8901A0", VA = "0x8901A0")]
	public Holster GetHolster()
	{
		return null;
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x8901A8", Offset = "0x8901A8", VA = "0x8901A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x8902F8", Offset = "0x8902F8", VA = "0x8902F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x890448", Offset = "0x890448", VA = "0x890448")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x890528", Offset = "0x890528", VA = "0x890528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x890708", Offset = "0x890708", VA = "0x890708")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x8907CC", Offset = "0x8907CC", VA = "0x8907CC")]
	public void AttachToHand(Hand hand)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x89096C", Offset = "0x89096C", VA = "0x89096C")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x890F74", Offset = "0x890F74", VA = "0x890F74")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x891054", Offset = "0x891054", VA = "0x891054")]
	public void PlaceInHolster(Holster holster)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x89136C", Offset = "0x89136C", VA = "0x89136C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x8915B4", Offset = "0x8915B4", VA = "0x8915B4")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x890BB0", Offset = "0x890BB0", VA = "0x890BB0")]
	public void SetItemPhysics(bool enabled, bool addImpulse = false)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x891A0C", Offset = "0x891A0C", VA = "0x891A0C")]
	public HandTool()
	{
	}
}
[Token(Token = "0x2000152")]
public interface IAimableWeapon
{
	[Token(Token = "0x6000CA2")]
	Transform GetAimMuzzle();
}
[Token(Token = "0x2000153")]
public interface IModableWeapon
{
	[Token(Token = "0x6000CA3")]
	Transform GetModAttachPoint();
}
[Token(Token = "0x2000154")]
public interface IWeaponMod
{
	[Token(Token = "0x6000CA4")]
	void OnPostDeserialize();
}
[Token(Token = "0x2000155")]
public class InventoryExpansion : Equipable
{
	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int extraCapacity;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x9C08C8", Offset = "0x9C08C8", VA = "0x9C08C8", Slot = "4")]
	protected override bool CheckCanEquip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x9C08F4", Offset = "0x9C08F4", VA = "0x9C08F4", Slot = "5")]
	protected override void Equip()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x9C0928", Offset = "0x9C0928", VA = "0x9C0928")]
	public InventoryExpansion()
	{
	}
}
[Token(Token = "0x2000156")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C690", Offset = "0x62C690")]
public class InvisibilityCloak : MonoBehaviour
{
	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float totalDuration;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float remainingPercent;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool effectActive;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fillBar;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem activationFX;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue startSound;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue endSound;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource activeSound;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material usedMaterial;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x9C4704", Offset = "0x9C4704", VA = "0x9C4704")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x9C4804", Offset = "0x9C4804", VA = "0x9C4804")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x9C48EC", Offset = "0x9C48EC", VA = "0x9C48EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x9C49D4", Offset = "0x9C49D4", VA = "0x9C49D4")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x9C4BEC", Offset = "0x9C4BEC", VA = "0x9C4BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x9C4F64", Offset = "0x9C4F64", VA = "0x9C4F64")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x9C4AD4", Offset = "0x9C4AD4", VA = "0x9C4AD4")]
	private void StartCloak()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x9C4D78", Offset = "0x9C4D78", VA = "0x9C4D78")]
	private void StopCloak()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x9C4F68", Offset = "0x9C4F68", VA = "0x9C4F68")]
	public InvisibilityCloak()
	{
	}
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C6F4", Offset = "0x62C6F4")]
public class Item : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x20003EC")]
	public enum ItemType
	{
		[Token(Token = "0x4001C42")]
		Default,
		[Token(Token = "0x4001C43")]
		Ammo,
		[Token(Token = "0x4001C44")]
		Consumable,
		[Token(Token = "0x4001C45")]
		Key,
		[Token(Token = "0x4001C46")]
		Artifact,
		[Token(Token = "0x4001C47")]
		HandTool,
		[Token(Token = "0x4001C48")]
		Weapon,
		[Token(Token = "0x4001C49")]
		Grenade,
		[Token(Token = "0x4001C4A")]
		Trap
	}

	[Serializable]
	[Token(Token = "0x20003ED")]
	public class Properties
	{
		[Serializable]
		[Token(Token = "0x2000504")]
		public class SerializedData
		{
			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefabId;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isInitialized;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string itemDataString;

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x9C6910", Offset = "0x9C6910", VA = "0x9C6910")]
			public SerializedData()
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x9BE0D0", Offset = "0x9BE0D0", VA = "0x9BE0D0")]
			public SerializedData(Properties props)
			{
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x9C6918", Offset = "0x9C6918", VA = "0x9C6918")]
			public void Set(Properties props)
			{
			}

			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x9BE530", Offset = "0x9BE530", VA = "0x9BE530")]
			public Properties GetProperties()
			{
				return null;
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x9C6974", Offset = "0x9C6974", VA = "0x9C6974")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string itemName;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemType type;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string prefabId;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CraftRecipes.IngredientList ingredients;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ignoreInfoPanel;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ignoreInventory;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool isInitialized;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string itemDataString;

		[Token(Token = "0x17000213")]
		public string NameId
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x9C685C", Offset = "0x9C685C", VA = "0x9C685C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public string InfoId
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x9C68B0", Offset = "0x9C68B0", VA = "0x9C68B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x9C52C0", Offset = "0x9C52C0", VA = "0x9C52C0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x9BCDA4", Offset = "0x9BCDA4", VA = "0x9BCDA4")]
		public Properties(Properties other)
		{
		}
	}

	[Token(Token = "0x20003EE")]
	private class SerializedData
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string xform;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Properties.SerializedData properties;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x9C635C", Offset = "0x9C635C", VA = "0x9C635C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Properties properties;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemReceptor receptor;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630EA0", Offset = "0x630EA0")]
	private readonly ItemReceptor <Receptor>k__BackingField;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliderBuffer;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Highlightable highlightable;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool visionTrackedWhenThrown;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VisionTarget visionTarget;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canCollect;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool autoUnregisterSerialization;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool ignoreRegistry;

	[Token(Token = "0x170000E3")]
	public ItemReceptor Receptor
	{
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x9C5248", Offset = "0x9C5248", VA = "0x9C5248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AB48", Offset = "0x63AB48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x9C5250", Offset = "0x9C5250", VA = "0x9C5250")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x9C53FC", Offset = "0x9C53FC", VA = "0x9C53FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x9C5590", Offset = "0x9C5590", VA = "0x9C5590")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x9C57D8", Offset = "0x9C57D8", VA = "0x9C57D8")]
	private void OnHoverBegin(Hand hand)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x9C5878", Offset = "0x9C5878", VA = "0x9C5878")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x9C5910", Offset = "0x9C5910", VA = "0x9C5910")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x9C5ADC", Offset = "0x9C5ADC", VA = "0x9C5ADC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x9C5E0C", Offset = "0x9C5E0C", VA = "0x9C5E0C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x9C5FD8", Offset = "0x9C5FD8", VA = "0x9C5FD8")]
	public static Item Spawn(Item prefab)
	{
		return null;
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x9C60E4", Offset = "0x9C60E4", VA = "0x9C60E4")]
	public static Item Spawn(Item prefab, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x9BD4FC", Offset = "0x9BD4FC", VA = "0x9BD4FC")]
	public static Item Spawn(Properties itemProperties)
	{
		return null;
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x9BDA8C", Offset = "0x9BDA8C", VA = "0x9BDA8C")]
	public static Item Spawn(Properties itemProperties, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x9C6280", Offset = "0x9C6280", VA = "0x9C6280", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x9C6364", Offset = "0x9C6364", VA = "0x9C6364", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x9C669C", Offset = "0x9C669C", VA = "0x9C669C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x9C6718", Offset = "0x9C6718", VA = "0x9C6718")]
	public static IGameSerializable DeserializeSpawn(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x9BCA60", Offset = "0x9BCA60", VA = "0x9BCA60")]
	public void SerializeData()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x9C6488", Offset = "0x9C6488", VA = "0x9C6488")]
	private void DeserializeData()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x9C67D8", Offset = "0x9C67D8", VA = "0x9C67D8")]
	public Item()
	{
	}
}
[Token(Token = "0x2000158")]
public class ItemOnDamaged : MonoBehaviour
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyOnDeath;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue deathSound;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathFXPrefab;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundwaveData soundwave;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExplosionDamage explosionDamage;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x9C768C", Offset = "0x9C768C", VA = "0x9C768C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x9C7774", Offset = "0x9C7774", VA = "0x9C7774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x9C785C", Offset = "0x9C785C", VA = "0x9C785C")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x9C7B68", Offset = "0x9C7B68", VA = "0x9C7B68")]
	private void OnDeathEnd()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x9C7CD0", Offset = "0x9C7CD0", VA = "0x9C7CD0")]
	public ItemOnDamaged()
	{
	}
}
[Token(Token = "0x2000159")]
public class ItemPhysics : MonoBehaviour
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue collisionSound;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630EB0", Offset = "0x630EB0")]
	public float collisionSoundVelocity;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SoundwaveData soundwave;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630EE8", Offset = "0x630EE8")]
	public AudioCue projectileCollisionSound;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue projectileDamageSound;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float projectileDamageRadius;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Health.KillSignature projectileKillSignature;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool projectileMode;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CollisionDetectionMode oldCollisionMode;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int projectileDamage;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int projectileTask;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody projectileBody;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastProjectilePos;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool isOrbiting;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x630F30", Offset = "0x630F30")]
	public bool strictCollisionChecks;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ItemPhysicsCollisionChecker collisionChecker;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool releaseFromHandOnCollision;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float grabbingTimer;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Hand grabbingHand;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float releaseTime;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 lastReleasePos;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool wasReleasedBecauseOfCollision;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Hand.Handedness lastHandReleased;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int floorCheckTask;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody attachedRB;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 attachedLastValidPos;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool dbgRestored;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int floorCheckNum;

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x9C9E84", Offset = "0x9C9E84", VA = "0x9C9E84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x9C9FE8", Offset = "0x9C9FE8", VA = "0x9C9FE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x9CA1AC", Offset = "0x9CA1AC", VA = "0x9CA1AC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x9CA570", Offset = "0x9CA570", VA = "0x9CA570")]
	private void UpdateProjectile()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x9C90B8", Offset = "0x9C90B8", VA = "0x9C90B8")]
	public void SetProjectile(int damage)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x9CA764", Offset = "0x9CA764", VA = "0x9CA764")]
	public void DisableProjectile()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x9CA7F8", Offset = "0x9CA7F8", VA = "0x9CA7F8")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x9CAAE4", Offset = "0x9CAAE4", VA = "0x9CAAE4")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x9CADD4", Offset = "0x9CADD4", VA = "0x9CADD4")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x9CB124", Offset = "0x9CB124", VA = "0x9CB124")]
	private void FloorCheck()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x9CB53C", Offset = "0x9CB53C", VA = "0x9CB53C")]
	public ItemPhysics()
	{
	}
}
[Token(Token = "0x200015A")]
public class ItemPhysicsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isColliding;

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x96C5D4", Offset = "0x96C5D4", VA = "0x96C5D4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x96C700", Offset = "0x96C700", VA = "0x96C700")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x96C708", Offset = "0x96C708", VA = "0x96C708")]
	public ItemPhysicsCollisionChecker()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62C758", Offset = "0x62C758")]
public class ItemsRegistry : ScriptableObject
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLow;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] itemNames;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item[] items;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Item> itemsDict;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x96E0EC", Offset = "0x96E0EC", VA = "0x96E0EC")]
	public Item Get(string name)
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x96E1A4", Offset = "0x96E1A4", VA = "0x96E1A4")]
	private void BuildDictionary()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x96E2F8", Offset = "0x96E2F8", VA = "0x96E2F8")]
	public ItemsRegistry()
	{
	}
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C79C", Offset = "0x62C79C")]
public class LaserSightWeaponMod : MonoBehaviour, IWeaponMod
{
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistanceLine;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform laserStartPoint;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform laserDot;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue activationSound;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform hoverAttachPoint;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ItemReceptor hoverReceptor;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform closestAttachPoint;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Interactable weapon;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform weaponMuzzle;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Item item;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Highlightable highlightable;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer laserLine;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool justDeserialized;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int activationCheckTask;

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x971CD8", Offset = "0x971CD8", VA = "0x971CD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x971E18", Offset = "0x971E18", VA = "0x971E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x971E1C", Offset = "0x971E1C", VA = "0x971E1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x971F04", Offset = "0x971F04", VA = "0x971F04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x97213C", Offset = "0x97213C", VA = "0x97213C")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x97276C", Offset = "0x97276C", VA = "0x97276C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x973074", Offset = "0x973074", VA = "0x973074")]
	private void ActivationCheck()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x972E00", Offset = "0x972E00", VA = "0x972E00")]
	private void OnInserted(Item item)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x973300", Offset = "0x973300", VA = "0x973300")]
	private void OnWeaponAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x9733A0", Offset = "0x9733A0", VA = "0x9733A0")]
	private void OnWeaponAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x9733A4", Offset = "0x9733A4", VA = "0x9733A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x9738D8", Offset = "0x9738D8", VA = "0x9738D8")]
	private void OnWeaponReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x972C40", Offset = "0x972C40", VA = "0x972C40")]
	private static Transform FindWeaponMuzzle(Interactable objWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x973948", Offset = "0x973948", VA = "0x973948", Slot = "4")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x973D48", Offset = "0x973D48", VA = "0x973D48")]
	public LaserSightWeaponMod()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C800", Offset = "0x62C800")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C800", Offset = "0x62C800")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C800", Offset = "0x62C800")]
public class LightningGun : MonoBehaviour, IModableWeapon, IAimableWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class SerializedData
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string modData;

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x979C38", Offset = "0x979C38", VA = "0x979C38")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform muzzle;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableLinear pump;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer chargeFillBarRenderer;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float chargeUpAutoSpeed;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float chargeDownSpeed;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pumpChargeFactor;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float charge;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float autoChargeCooldown;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630F40", Offset = "0x630F40")]
	public Health.DamageType damageType;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int damageAmount;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float impactForce;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float damageTime;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public LayerMask layerMask;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630F78", Offset = "0x630F78")]
	public AudioCue soundClipSource;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioCue soundClipTarget;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource soundSource;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource soundTarget;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630FB0", Offset = "0x630FB0")]
	public ParticleSystem sparksFX;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform trigger;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float triggerMaxDisplacement;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 triggerDefaultPos;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider gunCollider;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HandTool handTool;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Hand hand;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Lightning lightningFX;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float pumpLastPos;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Material chargeFillBar;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float damageCooldown;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Item item;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x9784F8", Offset = "0x9784F8", VA = "0x9784F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x978614", Offset = "0x978614", VA = "0x978614")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x978730", Offset = "0x978730", VA = "0x978730")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x978850", Offset = "0x978850", VA = "0x978850")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x978B74", Offset = "0x978B74", VA = "0x978B74")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x978C60", Offset = "0x978C60", VA = "0x978C60")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x978FEC", Offset = "0x978FEC", VA = "0x978FEC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x979A30", Offset = "0x979A30", VA = "0x979A30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x9792F0", Offset = "0x9792F0", VA = "0x9792F0")]
	private void ShootLightining()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x978D64", Offset = "0x978D64", VA = "0x978D64")]
	private void StopLightning()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x979B14", Offset = "0x979B14", VA = "0x979B14", Slot = "4")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x979B1C", Offset = "0x979B1C", VA = "0x979B1C", Slot = "5")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x979B24", Offset = "0x979B24", VA = "0x979B24", Slot = "6")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x978990", Offset = "0x978990", VA = "0x978990", Slot = "7")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x979C40", Offset = "0x979C40", VA = "0x979C40", Slot = "8")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x979CBC", Offset = "0x979CBC", VA = "0x979CBC")]
	public LightningGun()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C8B4", Offset = "0x62C8B4")]
public class NoiseMaker : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] tapeWheels;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wheelRotSpeed;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rewindLength;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue noiseClip;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundwaveData noiseSoundWave;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material usedMaterial;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool playing;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool played;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeTape;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rewindTime;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float soundWaveTimer;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x630FE8", Offset = "0x630FE8")]
	public bool _activateNoise;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xA71A88", Offset = "0xA71A88", VA = "0xA71A88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xA71B34", Offset = "0xA71B34", VA = "0xA71B34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xA71BE0", Offset = "0xA71BE0", VA = "0xA71BE0")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xA71C34", Offset = "0xA71C34", VA = "0xA71C34")]
	private void ActivateNoise()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xA71D74", Offset = "0xA71D74", VA = "0xA71D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xA71F14", Offset = "0xA71F14", VA = "0xA71F14")]
	public NoiseMaker()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C918", Offset = "0x62C918")]
public class OxygenCanister : MonoBehaviour
{
	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool used;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform breather;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float breatherRadius;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material usedMaterial;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue useSoundClip;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material fillBar;

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xA72B0C", Offset = "0xA72B0C", VA = "0xA72B0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xA72BB8", Offset = "0xA72BB8", VA = "0xA72BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xA72C64", Offset = "0xA72C64", VA = "0xA72C64")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xA72F50", Offset = "0xA72F50", VA = "0xA72F50")]
	public OxygenCanister()
	{
	}
}
[Token(Token = "0x2000160")]
public class PlayerWeapon : MonoBehaviour, IModableWeapon, IAimableWeapon
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rayCast;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProjectileDamage damageData;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform muzzle;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected GunTrails gunTrails;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Recoil recoilFX;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue shootSound;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SoundwaveData shootSoundwave;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float shootHapticsStrength;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform laserSightAttachPoint;

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x848EE0", Offset = "0x848EE0", VA = "0x848EE0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x848F74", Offset = "0x848F74", VA = "0x848F74", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x8490A4", Offset = "0x8490A4", VA = "0x8490A4", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x8491D4", Offset = "0x8491D4", VA = "0x8491D4")]
	protected void Shoot([Optional] int? overrideDamage)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x849904", Offset = "0x849904", VA = "0x849904", Slot = "4")]
	public Transform GetModAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x84990C", Offset = "0x84990C", VA = "0x84990C", Slot = "5")]
	public Transform GetAimMuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x849914", Offset = "0x849914", VA = "0x849914")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x849930", Offset = "0x849930", VA = "0x849930")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x849950", Offset = "0x849950", VA = "0x849950")]
	public PlayerWeapon()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C97C", Offset = "0x62C97C")]
public class PowerCell : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _numCharges;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxNumCharges;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro counterText;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathFXPrefab;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item item;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PowerPanel panel;

	[Token(Token = "0x170000E4")]
	public int NumCharges
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x849D24", Offset = "0x849D24", VA = "0x849D24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x849D2C", Offset = "0x849D2C", VA = "0x849D2C")]
		set
		{
		}
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x849E24", Offset = "0x849E24", VA = "0x849E24")]
	public static void SetIngredients(Item.Properties itemProperties, int charges)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x849ED4", Offset = "0x849ED4", VA = "0x849ED4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x849FBC", Offset = "0x849FBC", VA = "0x849FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x84A0A4", Offset = "0x84A0A4", VA = "0x84A0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x84A294", Offset = "0x84A294", VA = "0x84A294")]
	public void SetInPanel(PowerPanel panel)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x84A29C", Offset = "0x84A29C", VA = "0x84A29C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x84A178", Offset = "0x84A178", VA = "0x84A178", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x84A2A8", Offset = "0x84A2A8", VA = "0x84A2A8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x84A324", Offset = "0x84A324", VA = "0x84A324")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x84A3C0", Offset = "0x84A3C0", VA = "0x84A3C0")]
	public PowerCell()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C9E0", Offset = "0x62C9E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62C9E0", Offset = "0x62C9E0")]
[SelectionBase]
public class Railgun : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x20003F0")]
	public class SerializedData
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData ammoPackData;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x8E5860", Offset = "0x8E5860", VA = "0x8E5860")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int damageMin;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int damageMax;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float chargedFactor;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631020", Offset = "0x631020")]
	public AimingGrabPoint aimGrabPoint;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer chargeFillBarRenderer;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float chargeFillRate;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x631058", Offset = "0x631058")]
	public Vector2 gunTrailsDuration;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem shootChargedFX;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioCue emptySound;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue shootSoundUncharged;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioCue shootSoundCharged;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631078", Offset = "0x631078")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TMP_Text ammoCounter;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6310C4", Offset = "0x6310C4")]
	public Transform trigger;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private HandGunMagazine ammoPack;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private HandTool handTool;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Hand hand;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material chargeFillBar;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AudioSource chargeSound;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float charge;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool isCharging;

	[Token(Token = "0x170000E5")]
	public int Ammo
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x8E4368", Offset = "0x8E4368", VA = "0x8E4368")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x8E4370", Offset = "0x8E4370", VA = "0x8E4370")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x8E4468", Offset = "0x8E4468", VA = "0x8E4468", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x8E45DC", Offset = "0x8E45DC", VA = "0x8E45DC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x8E4750", Offset = "0x8E4750", VA = "0x8E4750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x8E4E28", Offset = "0x8E4E28", VA = "0x8E4E28")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x8E4EBC", Offset = "0x8E4EBC", VA = "0x8E4EBC")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x8E4F88", Offset = "0x8E4F88", VA = "0x8E4F88")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x8E54B4", Offset = "0x8E54B4", VA = "0x8E54B4")]
	private void OnAmmoInserted(Item ammoPackItem)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x8E5570", Offset = "0x8E5570", VA = "0x8E5570")]
	public void InsertAmmo(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x8E4830", Offset = "0x8E4830", VA = "0x8E4830")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x8E5660", Offset = "0x8E5660", VA = "0x8E5660", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x8E4B98", Offset = "0x8E4B98", VA = "0x8E4B98", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x8E5868", Offset = "0x8E5868", VA = "0x8E5868", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x8E58E4", Offset = "0x8E58E4", VA = "0x8E58E4")]
	public Railgun()
	{
	}
}
[Token(Token = "0x2000163")]
public class Recoil : MonoBehaviour
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoilAmount;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float recoilRotAmount;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float recoilDisplacementFactor;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float recoilRotDisplacementFactor;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float recoilRecoverySpeed;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float recoilRotRecoverySpeed;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleFactor;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool addToHand;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 defaultPos;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion defaultRot;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Hand grabbingHand;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 offsetPos;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion offsetRot;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x8E6A9C", Offset = "0x8E6A9C", VA = "0x8E6A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x8E6B80", Offset = "0x8E6B80", VA = "0x8E6B80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x8E6EC0", Offset = "0x8E6EC0", VA = "0x8E6EC0")]
	public void AddRecoil()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x8E70D8", Offset = "0x8E70D8", VA = "0x8E70D8")]
	public void SetHand(Hand hand)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x8E70E0", Offset = "0x8E70E0", VA = "0x8E70E0")]
	public Recoil()
	{
	}
}
[Token(Token = "0x2000164")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CA7C", Offset = "0x62CA7C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CA7C", Offset = "0x62CA7C")]
[SelectionBase]
public class Shotgun : PlayerWeapon, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x20003F1")]
	public class SerializedData
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData ammoPackData;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammo;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modData;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x13673F4", Offset = "0x13673F4", VA = "0x13673F4")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AimingGrabPoint aimGrabPoint;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public DraggableLinear reloader;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioCue emptySound;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue releasePackSound;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float angleDispersion;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6310FC", Offset = "0x6310FC")]
	public int maxAmmo;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private int _ammo;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text[] ammoCounters;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631144", Offset = "0x631144")]
	public Collider ammoEntryArea;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue cockedSound;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue cockedResetSound;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63117C", Offset = "0x63117C")]
	public Transform trigger;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float triggerMaxRotation;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ItemReceptor ammoReceptor;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private HandGunMagazine ammoPack;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GunTrails[] gunTrailList;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private HandTool handTool;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Hand hand;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool needsCocking;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool needsCockingReset;

	[Token(Token = "0x170000E6")]
	public int Ammo
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1365C7C", Offset = "0x1365C7C", VA = "0x1365C7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1365C84", Offset = "0x1365C84", VA = "0x1365C84")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x1365D38", Offset = "0x1365D38", VA = "0x1365D38", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x1365EAC", Offset = "0x1365EAC", VA = "0x1365EAC", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x1366020", Offset = "0x1366020", VA = "0x1366020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1366740", Offset = "0x1366740", VA = "0x1366740")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x13667D8", Offset = "0x13667D8", VA = "0x13667D8")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x1366868", Offset = "0x1366868", VA = "0x1366868")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1366B0C", Offset = "0x1366B0C", VA = "0x1366B0C")]
	protected void Shoot()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1367014", Offset = "0x1367014", VA = "0x1367014")]
	private void OnAmmoInserted(Item ammoPackItem)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x13670D0", Offset = "0x13670D0", VA = "0x13670D0")]
	public void InsertAmmo(HandGunMagazine magazine)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x1366100", Offset = "0x1366100", VA = "0x1366100")]
	private void UpdateAmmo()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x13671F4", Offset = "0x13671F4", VA = "0x13671F4", Slot = "8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x13664B0", Offset = "0x13664B0", VA = "0x13664B0", Slot = "9")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x13673FC", Offset = "0x13673FC", VA = "0x13673FC", Slot = "10")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x1367478", Offset = "0x1367478", VA = "0x1367478")]
	public Shotgun()
	{
	}
}
[Token(Token = "0x2000165")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CB18", Offset = "0x62CB18")]
public class Syringe : MonoBehaviour
{
	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int healthPoints;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float remainingPercent;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float injectSpeed;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform piston;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pistonDisplacement;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pistonOut;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 pistonIn;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material fillBar;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform needle;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem squirtFX;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource squirtSound;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerHandModel handModel;

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x137595C", Offset = "0x137595C", VA = "0x137595C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x1375A78", Offset = "0x1375A78", VA = "0x1375A78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x1375B94", Offset = "0x1375B94", VA = "0x1375B94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x1375D48", Offset = "0x1375D48", VA = "0x1375D48")]
	private void OnAttached(Hand hand)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1375DBC", Offset = "0x1375DBC", VA = "0x1375DBC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x13762DC", Offset = "0x13762DC", VA = "0x13762DC")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1376330", Offset = "0x1376330", VA = "0x1376330")]
	public Syringe()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CB7C", Offset = "0x62CB7C")]
public class Trapmine : FSMComponent
{
	[Token(Token = "0x20003F2")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Normal;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Latching;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Arming;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Armed;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Triggering;

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x817EA8", Offset = "0x817EA8", VA = "0x817EA8")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6311B4", Offset = "0x6311B4")]
	public float latchDistance;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask latchCollisionMask;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask latchValidMask;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float latchSpeed;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6311EC", Offset = "0x6311EC")]
	public float armingTime;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float detectionDistance;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask detectionMask;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float triggerTime;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631224", Offset = "0x631224")]
	public ExplosionDamage damageData;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject detonationFXPrefab;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue detonationSound;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SoundwaveData detonationSoundwave;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63125C", Offset = "0x63125C")]
	public Renderer[] leds;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material ledMaterialOn;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material ledMaterialOff;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631294", Offset = "0x631294")]
	public AudioCue latchSound;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue[] armingSounds;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioCue armedSound;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue triggerSound;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GhostOutline ghostOutline;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hasLatchPosition;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 latchPos;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion latchRot;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private BoxCollider triggerCollider;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float latchProgress;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 origPos;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion origRot;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int armedLedIdx;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x816058", Offset = "0x816058", VA = "0x816058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x8160CC", Offset = "0x8160CC", VA = "0x8160CC", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x816264", Offset = "0x816264", VA = "0x816264", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x8163FC", Offset = "0x8163FC", VA = "0x8163FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x8164BC", Offset = "0x8164BC", VA = "0x8164BC")]
	private void OnAttachedUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x816E3C", Offset = "0x816E3C", VA = "0x816E3C")]
	private void OnReleased(Hand hand)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x816F20", Offset = "0x816F20", VA = "0x816F20")]
	private void Latching_Enter()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x8170E0", Offset = "0x8170E0", VA = "0x8170E0")]
	private void Latching_Update()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x8172BC", Offset = "0x8172BC", VA = "0x8172BC")]
	private void Arming_Enter()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x81759C", Offset = "0x81759C", VA = "0x81759C")]
	private void Arming_OnTimer()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x817738", Offset = "0x817738", VA = "0x817738")]
	private void Armed_Enter()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x8177E0", Offset = "0x8177E0", VA = "0x8177E0")]
	private void Armed_OnTimer()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x817850", Offset = "0x817850", VA = "0x817850")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x8179E8", Offset = "0x8179E8", VA = "0x8179E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x817854", Offset = "0x817854", VA = "0x817854")]
	private void CheckTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x8179EC", Offset = "0x8179EC", VA = "0x8179EC")]
	private void Triggering_Enter()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x817AAC", Offset = "0x817AAC", VA = "0x817AAC")]
	private void Triggering_OnTimer()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x817AB0", Offset = "0x817AB0", VA = "0x817AB0")]
	private void Detonate()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x817D50", Offset = "0x817D50", VA = "0x817D50")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x817E0C", Offset = "0x817E0C", VA = "0x817E0C")]
	public Trapmine()
	{
	}
}
[Token(Token = "0x2000167")]
public class Disclaimer_GameManager : GameManagerScene
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x872194", Offset = "0x872194", VA = "0x872194", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x872198", Offset = "0x872198", VA = "0x872198", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x8722C4", Offset = "0x8722C4", VA = "0x8722C4", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x8722C8", Offset = "0x8722C8", VA = "0x8722C8")]
	public Disclaimer_GameManager()
	{
	}
}
[Token(Token = "0x2000168")]
public class Ending_Events : MonoBehaviour
{
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x87B5F8", Offset = "0x87B5F8", VA = "0x87B5F8")]
	public void OnPlayExplosion()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x87B6DC", Offset = "0x87B6DC", VA = "0x87B6DC")]
	public Ending_Events()
	{
	}
}
[Token(Token = "0x2000169")]
public class Ending_GameManager : GameManagerScene
{
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAA8", Offset = "0x62EAA8")]
	private sealed class <EndingSeq_co>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x87BC34", Offset = "0x87BC34", VA = "0x87BC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x87BC9C", Offset = "0x87BC9C", VA = "0x87BC9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x87B990", Offset = "0x87B990", VA = "0x87B990")]
		[DebuggerHidden]
		public <EndingSeq_co>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x87BB1C", Offset = "0x87BB1C", VA = "0x87BB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x87BB20", Offset = "0x87BB20", VA = "0x87BB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x87BC3C", Offset = "0x87BC3C", VA = "0x87BC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAB8", Offset = "0x62EAB8")]
	private sealed class <PlayExplosionFlare_co>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lastProgress>5__3;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x87BF34", Offset = "0x87BF34", VA = "0x87BF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x87BF9C", Offset = "0x87BF9C", VA = "0x87BF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x87BA38", Offset = "0x87BA38", VA = "0x87BA38")]
		[DebuggerHidden]
		public <PlayExplosionFlare_co>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x87BCA4", Offset = "0x87BCA4", VA = "0x87BCA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x87BCA8", Offset = "0x87BCA8", VA = "0x87BCA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x87BF3C", Offset = "0x87BF3C", VA = "0x87BF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAC8", Offset = "0x62EAC8")]
	private sealed class <PlayExplosionShockwave_co>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ending_GameManager <>4__this;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Shake <cameraShake>5__2;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__3;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <lastScale>5__4;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x87C27C", Offset = "0x87C27C", VA = "0x87C27C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x87C2E4", Offset = "0x87C2E4", VA = "0x87C2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x87BAE0", Offset = "0x87BAE0", VA = "0x87BAE0")]
		[DebuggerHidden]
		public <PlayExplosionShockwave_co>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x87BFA4", Offset = "0x87BFA4", VA = "0x87BFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x87BFA8", Offset = "0x87BFA8", VA = "0x87BFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x87C284", Offset = "0x87C284", VA = "0x87C284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicSound;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Credits credits;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform celestialLight;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 questLightRotation;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer explosionFlare;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform explosionShockwave;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource explosionSound;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource[] ambienceSounds;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material explosionMaterial;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6312CC", Offset = "0x6312CC")]
	public bool _PlayExplosion;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x87B6E4", Offset = "0x87B6E4", VA = "0x87B6E4", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x87B8E8", Offset = "0x87B8E8", VA = "0x87B8E8")]
	private void OnEndFadeIn()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x87B914", Offset = "0x87B914", VA = "0x87B914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AB58", Offset = "0x63AB58")]
	private IEnumerator EndingSeq_co()
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x87B6B0", Offset = "0x87B6B0", VA = "0x87B6B0")]
	public void PlayExplosion()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x87B9BC", Offset = "0x87B9BC", VA = "0x87B9BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ABBC", Offset = "0x63ABBC")]
	private IEnumerator PlayExplosionFlare_co()
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x87BA64", Offset = "0x87BA64", VA = "0x87BA64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AC20", Offset = "0x63AC20")]
	private IEnumerator PlayExplosionShockwave_co()
	{
		return null;
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x87BB0C", Offset = "0x87BB0C", VA = "0x87BB0C", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x87BB10", Offset = "0x87BB10", VA = "0x87BB10", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x87BB14", Offset = "0x87BB14", VA = "0x87BB14")]
	public Ending_GameManager()
	{
	}
}
[Token(Token = "0x200016A")]
public class ErrorMessage_GameManager : GameManagerScene
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string messageTxt;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x87CFBC", Offset = "0x87CFBC", VA = "0x87CFBC", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x87D020", Offset = "0x87D020", VA = "0x87D020", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x87D0EC", Offset = "0x87D0EC", VA = "0x87D0EC", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x87D0F0", Offset = "0x87D0F0", VA = "0x87D0F0")]
	public ErrorMessage_GameManager()
	{
	}
}
[Token(Token = "0x200016B")]
public class GameManager : Singleton<GameManager>
{
	[Token(Token = "0x20003F6")]
	public enum VRSDK
	{
		[Token(Token = "0x4001C70")]
		Oculus,
		[Token(Token = "0x4001C71")]
		OpenVR,
		[Token(Token = "0x4001C72")]
		Pico
	}

	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAD8", Offset = "0x62EAD8")]
	private sealed class <InitGame_co>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isInitScene>5__2;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xAC9DC4", Offset = "0xAC9DC4", VA = "0xAC9DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xAC9E2C", Offset = "0xAC9E2C", VA = "0xAC9E2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xAC7568", Offset = "0xAC7568", VA = "0xAC7568")]
		[DebuggerHidden]
		public <InitGame_co>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xAC9968", Offset = "0xAC9968", VA = "0xAC9968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xAC996C", Offset = "0xAC996C", VA = "0xAC996C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xAC9DCC", Offset = "0xAC9DCC", VA = "0xAC9DCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAE8", Offset = "0x62EAE8")]
	private sealed class <LoadingProcess>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOp>5__2;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x8879C8", Offset = "0x8879C8", VA = "0x8879C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x887A30", Offset = "0x887A30", VA = "0x887A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x887704", Offset = "0x887704", VA = "0x887704")]
		[DebuggerHidden]
		public <LoadingProcess>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x887730", Offset = "0x887730", VA = "0x887730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x887734", Offset = "0x887734", VA = "0x887734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x8879D0", Offset = "0x8879D0", VA = "0x8879D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EAF8", Offset = "0x62EAF8")]
	private sealed class <Autosave_co>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float wait;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xAC98F8", Offset = "0xAC98F8", VA = "0xAC98F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xAC9960", Offset = "0xAC9960", VA = "0xAC9960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xAC9774", Offset = "0xAC9774", VA = "0xAC9774")]
		[DebuggerHidden]
		public <Autosave_co>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xAC9800", Offset = "0xAC9800", VA = "0xAC9800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xAC9804", Offset = "0xAC9804", VA = "0xAC9804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xAC9900", Offset = "0xAC9900", VA = "0xAC9900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameManagerScene _sceneManager;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pendingClearAssets;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameState _gameState;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MetagameState _metagameState;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Savegame savegame;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefScriptableObj itemsRegistry;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] commandLineArgs;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public VRSDK vrSDK;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Config config;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Fader fader;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject loadingObj;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isGameOver;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool gameOverWin;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string gameOverText;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SwitchRefListMaterial atlasMaterials;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SwitchRefListTexture atlasTextures;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SwitchRefListTexture atlasTexturesHalf;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool switchingScene;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string switchingSceneName;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool switchWithLoading;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool hasVRFocus;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool hasInputFocus;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool _isPaused;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool wantsToPause;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float pausedVolume;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int pushedTimeScalePauses;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _canBePaused;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x631344", Offset = "0x631344")]
	public bool _GoToIntro;

	[Token(Token = "0x170000E7")]
	public GameManagerScene SceneManager
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xAC67DC", Offset = "0xAC67DC", VA = "0xAC67DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public GameState GameState
	{
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xAC68D4", Offset = "0xAC68D4", VA = "0xAC68D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E9")]
	public MetagameState MetagameState
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xAC6960", Offset = "0xAC6960", VA = "0xAC6960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EA")]
	public bool Paused
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xAC895C", Offset = "0xAC895C", VA = "0xAC895C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xAC8964", Offset = "0xAC8964", VA = "0xAC8964")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public bool CanBePaused
	{
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xAC89B0", Offset = "0xAC89B0", VA = "0xAC89B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xAC89B8", Offset = "0xAC89B8", VA = "0xAC89B8")]
		set
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action<bool> onPauseChange
	{
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xAC8A08", Offset = "0xAC8A08", VA = "0xAC8A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AD4C", Offset = "0x63AD4C")]
		add
		{
		}
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xAC8AAC", Offset = "0xAC8AAC", VA = "0xAC8AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AD5C", Offset = "0x63AD5C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xAC69EC", Offset = "0xAC69EC", VA = "0xAC69EC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xAC74E8", Offset = "0xAC74E8", VA = "0xAC74E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xAC6B7C", Offset = "0xAC6B7C", VA = "0xAC6B7C")]
	private void InitGame()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xAC74EC", Offset = "0xAC74EC", VA = "0xAC74EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AC84", Offset = "0x63AC84")]
	private IEnumerator InitGame_co()
	{
		return null;
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xAC7594", Offset = "0xAC7594", VA = "0xAC7594")]
	public void ResetGame()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xAC7240", Offset = "0xAC7240", VA = "0xAC7240")]
	private void InitScene(string sceneName)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xAC686C", Offset = "0xAC686C", VA = "0xAC686C")]
	private GameManagerScene FindSceneManager()
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xAC7638", Offset = "0xAC7638", VA = "0xAC7638")]
	public void SetScene(string sceneName, bool fadeOut = true, bool showLoading = false, float fadeSpeed = 1f)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xAC7814", Offset = "0xAC7814", VA = "0xAC7814")]
	private void OnEndFadeScene()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xAC7B88", Offset = "0xAC7B88", VA = "0xAC7B88")]
	private void ChangedActiveScene(UnityEngine.SceneManagement.Scene current, UnityEngine.SceneManagement.Scene next)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xAC7C5C", Offset = "0xAC7C5C", VA = "0xAC7C5C")]
	private void OnChangedToLoadScene(UnityEngine.SceneManagement.Scene current, UnityEngine.SceneManagement.Scene next)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xAC7D78", Offset = "0xAC7D78", VA = "0xAC7D78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ACE8", Offset = "0x63ACE8")]
	private IEnumerator LoadingProcess()
	{
		return null;
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xAC7DF4", Offset = "0xAC7DF4", VA = "0xAC7DF4")]
	private void Pico_ClearEyeTexture()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xAC7F38", Offset = "0xAC7F38", VA = "0xAC7F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xAC8088", Offset = "0xAC8088", VA = "0xAC8088")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xAC80F0", Offset = "0xAC80F0", VA = "0xAC80F0")]
	public void GameOver(bool isWin, string txt, bool isSavedExit = false)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xAC8344", Offset = "0xAC8344", VA = "0xAC8344")]
	public void QuitGame(bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xAC8474", Offset = "0xAC8474", VA = "0xAC8474")]
	private void OnEndFadeQuit()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xAC84E8", Offset = "0xAC84E8", VA = "0xAC84E8")]
	public void SetAudioLevels()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xAC75B0", Offset = "0xAC75B0", VA = "0xAC75B0")]
	public void ClearGarbage()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xAC7610", Offset = "0xAC7610", VA = "0xAC7610")]
	public void ClearAssets()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xAC85C4", Offset = "0xAC85C4", VA = "0xAC85C4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xAC8724", Offset = "0xAC8724", VA = "0xAC8724")]
	public void ShowErrorMessage(string txt)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xAC80EC", Offset = "0xAC80EC", VA = "0xAC80EC")]
	private void CheckVRFocus()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xAC80E8", Offset = "0xAC80E8", VA = "0xAC80E8")]
	private void CheckInputFocus()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xAC87D0", Offset = "0xAC87D0", VA = "0xAC87D0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xAC880C", Offset = "0xAC880C", VA = "0xAC880C")]
	public void SetPaused(bool paused)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xAC896C", Offset = "0xAC896C", VA = "0xAC896C")]
	public void PushTimeScalePause()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xAC898C", Offset = "0xAC898C", VA = "0xAC898C")]
	public void PopTimeScalePause()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xAC8B50", Offset = "0xAC8B50", VA = "0xAC8B50")]
	private void GoToIntro()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xAC8BD4", Offset = "0xAC8BD4", VA = "0xAC8BD4")]
	public bool HasCommandLineArg(string arg)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xAC8C88", Offset = "0xAC8C88", VA = "0xAC8C88")]
	public bool SaveToFile(string data, string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xAC8F4C", Offset = "0xAC8F4C", VA = "0xAC8F4C")]
	public string LoadFromFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xAC91B8", Offset = "0xAC91B8", VA = "0xAC91B8")]
	public bool CheckFile(string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xAC9250", Offset = "0xAC9250", VA = "0xAC9250")]
	public bool LoadMetagame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xAC9364", Offset = "0xAC9364", VA = "0xAC9364")]
	public bool SaveMetagame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xAC9424", Offset = "0xAC9424", VA = "0xAC9424")]
	public void ClearMetagame()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xAC9534", Offset = "0xAC9534", VA = "0xAC9534")]
	public bool LoadGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xAC9674", Offset = "0xAC9674", VA = "0xAC9674")]
	public bool CheckSaveGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xAC85C8", Offset = "0xAC85C8", VA = "0xAC85C8")]
	public bool SaveGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xAC96BC", Offset = "0xAC96BC", VA = "0xAC96BC")]
	public void Autosave(float time)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xAC96E8", Offset = "0xAC96E8", VA = "0xAC96E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AD6C", Offset = "0x63AD6C")]
	private IEnumerator Autosave_co(float wait)
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xAC8234", Offset = "0xAC8234", VA = "0xAC8234")]
	public void ClearGame()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xAC97A0", Offset = "0xAC97A0", VA = "0xAC97A0")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200016C")]
public class GameManagerScene : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearAssetsOnUnload;

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x887A38", Offset = "0x887A38", VA = "0x887A38", Slot = "4")]
	public virtual void InitScene()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x887A3C", Offset = "0x887A3C", VA = "0x887A3C", Slot = "5")]
	public virtual void UpdateScene()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x887A40", Offset = "0x887A40", VA = "0x887A40", Slot = "6")]
	public virtual void EndScene()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x887A44", Offset = "0x887A44", VA = "0x887A44")]
	public GameManagerScene()
	{
	}
}
[Token(Token = "0x200016D")]
public class GameOver_GameManager : GameManagerScene
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro text;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x887A4C", Offset = "0x887A4C", VA = "0x887A4C", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x887AC8", Offset = "0x887AC8", VA = "0x887AC8", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x887BA4", Offset = "0x887BA4", VA = "0x887BA4", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x887BA8", Offset = "0x887BA8", VA = "0x887BA8")]
	public GameOver_GameManager()
	{
	}
}
[Token(Token = "0x200016E")]
public class Init_GameManager : GameManagerScene
{
	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x9B48DC", Offset = "0x9B48DC", VA = "0x9B48DC", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x9B48E0", Offset = "0x9B48E0", VA = "0x9B48E0", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x9B49BC", Offset = "0x9B49BC", VA = "0x9B49BC", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x9B49C0", Offset = "0x9B49C0", VA = "0x9B49C0")]
	public Init_GameManager()
	{
	}
}
[Token(Token = "0x200016F")]
public class Intro_GameManager : GameManagerScene
{
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB08", Offset = "0x62EB08")]
	private sealed class <InitScene_co>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro_GameManager <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x9BC674", Offset = "0x9BC674", VA = "0x9BC674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x9BC6DC", Offset = "0x9BC6DC", VA = "0x9BC6DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x9BBAF4", Offset = "0x9BBAF4", VA = "0x9BBAF4")]
		[DebuggerHidden]
		public <InitScene_co>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x9BC47C", Offset = "0x9BC47C", VA = "0x9BC47C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x9BC480", Offset = "0x9BC480", VA = "0x9BC480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x9BC67C", Offset = "0x9BC67C", VA = "0x9BC67C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB18", Offset = "0x62EB18")]
	private sealed class <ApproachShip_co>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro_GameManager <>4__this;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <shipStartPos>5__2;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <shipEndPos>5__3;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__4;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <musicVolumeStart>5__5;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shake <cameraShake>5__6;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <oldProgress>5__7;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x9BC40C", Offset = "0x9BC40C", VA = "0x9BC40C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x9BC474", Offset = "0x9BC474", VA = "0x9BC474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x9BBD30", Offset = "0x9BBD30", VA = "0x9BBD30")]
		[DebuggerHidden]
		public <ApproachShip_co>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x9BBE3C", Offset = "0x9BBE3C", VA = "0x9BBE3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x9BBE40", Offset = "0x9BBE40", VA = "0x9BBE40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x9BC414", Offset = "0x9BC414", VA = "0x9BC414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIIntroMain uiIntroMain;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIIntroGameOver uiIntroGameOver;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource musicSound;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6313A4", Offset = "0x6313A4")]
	public bool _ResetGame;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631404", Offset = "0x631404")]
	public Transform ship;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource engineSound;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource kickoffSound;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource crashSound;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource alarmSound;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource energyDischargeSound;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource energyLoopSound;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SwitchRefGameObject shipModel;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject shipFX;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] disableOnStartApproach;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] disableOnFadeout;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63143C", Offset = "0x63143C")]
	public bool _ApproachShip;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x9BB968", Offset = "0x9BB968", VA = "0x9BB968", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x9BBA78", Offset = "0x9BBA78", VA = "0x9BBA78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63ADD0", Offset = "0x63ADD0")]
	private IEnumerator InitScene_co()
	{
		return null;
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x9BBB20", Offset = "0x9BBB20", VA = "0x9BBB20")]
	private void OnEndFadeIn()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x9BBB3C", Offset = "0x9BBB3C", VA = "0x9BBB3C", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x9BBB40", Offset = "0x9BBB40", VA = "0x9BBB40", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x9BBB44", Offset = "0x9BBB44", VA = "0x9BBB44")]
	public void ResetGame()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x9BBBBC", Offset = "0x9BBBBC", VA = "0x9BBBBC")]
	public void StartGame(bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x9BBC88", Offset = "0x9BBC88", VA = "0x9BBC88")]
	public void ApproachShip()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x9BBCB4", Offset = "0x9BBCB4", VA = "0x9BBCB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AE34", Offset = "0x63AE34")]
	private IEnumerator ApproachShip_co()
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x9BBD5C", Offset = "0x9BBD5C", VA = "0x9BBD5C")]
	private void OnApproachFadeOut()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x9BBE34", Offset = "0x9BBE34", VA = "0x9BBE34")]
	public Intro_GameManager()
	{
	}
}
[Token(Token = "0x2000170")]
public class Main_GameManager : GameManagerScene
{
	[Token(Token = "0x20003FC")]
	private class SerializedData
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalUnlocks;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float nextUnlock;

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x904758", Offset = "0x904758", VA = "0x904758")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB28", Offset = "0x62EB28")]
	private sealed class <PreloadRenderers_co>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OcclusionManager <occMan>5__2;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x9046E8", Offset = "0x9046E8", VA = "0x9046E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x904750", Offset = "0x904750", VA = "0x904750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x90452C", Offset = "0x90452C", VA = "0x90452C")]
		[DebuggerHidden]
		public <PreloadRenderers_co>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x904558", Offset = "0x904558", VA = "0x904558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x90455C", Offset = "0x90455C", VA = "0x90455C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x9046F0", Offset = "0x9046F0", VA = "0x9046F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB38", Offset = "0x62EB38")]
	private sealed class <OnPlayerDeath_co>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Main_GameManager <>4__this;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string gameOverText;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Fader <fader>5__2;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <fadeToBlack>5__3;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x9044BC", Offset = "0x9044BC", VA = "0x9044BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x904524", Offset = "0x904524", VA = "0x904524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x903E6C", Offset = "0x903E6C", VA = "0x903E6C")]
		[DebuggerHidden]
		public <OnPlayerDeath_co>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x903E98", Offset = "0x903E98", VA = "0x903E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x903E9C", Offset = "0x903E9C", VA = "0x903E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x9044C4", Offset = "0x9044C4", VA = "0x9044C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB48", Offset = "0x62EB48")]
	private sealed class <LevelOptionsUnlocking_co>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Main_GameManager <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x903DFC", Offset = "0x903DFC", VA = "0x903DFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x903E64", Offset = "0x903E64", VA = "0x903E64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x903BF4", Offset = "0x903BF4", VA = "0x903BF4")]
		[DebuggerHidden]
		public <LevelOptionsUnlocking_co>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x903C20", Offset = "0x903C20", VA = "0x903C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x903C24", Offset = "0x903C24", VA = "0x903C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x903E04", Offset = "0x903E04", VA = "0x903E04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool initialized;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mission playerMission;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShuttleEscape shuttleEscapeSeq;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue deathSound;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color deathFadeColor;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Savegame.Serializer savegameSerializer;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Savegame savegame;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ShaderVariantCollection shaderWarmUpLow;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inDyingSequence;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float nextUnlock;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int totalUnlocks;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine levelOptionsUnlockingCoroutine;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int fogRemovers;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color defaultFogColor;

	[Token(Token = "0x170000EC")]
	public bool InDyingSequence
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x982F2C", Offset = "0x982F2C", VA = "0x982F2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action onInitScene
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x982484", Offset = "0x982484", VA = "0x982484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AE98", Offset = "0x63AE98")]
		add
		{
		}
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x982528", Offset = "0x982528", VA = "0x982528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEA8", Offset = "0x63AEA8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action onEndScene
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x9825CC", Offset = "0x9825CC", VA = "0x9825CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEB8", Offset = "0x63AEB8")]
		add
		{
		}
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x982670", Offset = "0x982670", VA = "0x982670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEC8", Offset = "0x63AEC8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action onFinishedMapGeneration
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x982714", Offset = "0x982714", VA = "0x982714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AED8", Offset = "0x63AED8")]
		add
		{
		}
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x9827B8", Offset = "0x9827B8", VA = "0x9827B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63AEE8", Offset = "0x63AEE8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x98285C", Offset = "0x98285C", VA = "0x98285C", Slot = "4")]
	public override void InitScene()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x982A08", Offset = "0x982A08", VA = "0x982A08")]
	public void OnFinishedMapGeneration()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x982C7C", Offset = "0x982C7C", VA = "0x982C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AEF8", Offset = "0x63AEF8")]
	private IEnumerator PreloadRenderers_co()
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x982CDC", Offset = "0x982CDC", VA = "0x982CDC", Slot = "5")]
	public override void UpdateScene()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x982E20", Offset = "0x982E20", VA = "0x982E20", Slot = "6")]
	public override void EndScene()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x982F34", Offset = "0x982F34", VA = "0x982F34")]
	private void OnPlayerDeath()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x98308C", Offset = "0x98308C", VA = "0x98308C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AF5C", Offset = "0x63AF5C")]
	private IEnumerator OnPlayerDeath_co(string gameOverText)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x983124", Offset = "0x983124", VA = "0x983124")]
	public void OnPlayerWin()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x971810", Offset = "0x971810", VA = "0x971810")]
	public static Main_GameManager Get()
	{
		return null;
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x982BC0", Offset = "0x982BC0", VA = "0x982BC0")]
	private void StartLevelOptionsUnlocking()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x98346C", Offset = "0x98346C", VA = "0x98346C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63AFC0", Offset = "0x63AFC0")]
	private IEnumerator LevelOptionsUnlocking_co()
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x983324", Offset = "0x983324", VA = "0x983324")]
	private float ComputeExploredStat()
	{
		return default(float);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9834E8", Offset = "0x9834E8", VA = "0x9834E8")]
	public void RemoveFog()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x9835D8", Offset = "0x9835D8", VA = "0x9835D8")]
	public void RestoreFog()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x9836B4", Offset = "0x9836B4", VA = "0x9836B4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x983730", Offset = "0x983730", VA = "0x983730")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x9837F4", Offset = "0x9837F4", VA = "0x9837F4")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x9837F8", Offset = "0x9837F8", VA = "0x9837F8")]
	public Main_GameManager()
	{
	}
}
[Token(Token = "0x2000171")]
public class Overworld_GameManager : GameManagerScene
{
	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xA72B04", Offset = "0xA72B04", VA = "0xA72B04")]
	public Overworld_GameManager()
	{
	}
}
[Token(Token = "0x2000172")]
public class ShuttleEscape : MonoBehaviour
{
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB58", Offset = "0x62EB58")]
	private sealed class <EscapeSequence_co>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <initShipPos>5__3;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <skyRotYInit>5__4;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <skyRotZInit>5__5;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x1369264", Offset = "0x1369264", VA = "0x1369264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x13692CC", Offset = "0x13692CC", VA = "0x13692CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x1367E94", Offset = "0x1367E94", VA = "0x1367E94")]
		[DebuggerHidden]
		public <EscapeSequence_co>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x136878C", Offset = "0x136878C", VA = "0x136878C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1368790", Offset = "0x1368790", VA = "0x1368790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x136926C", Offset = "0x136926C", VA = "0x136926C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB68", Offset = "0x62EB68")]
	private sealed class <ShipWobble_co>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <bobbingWigglingFactor>5__2;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x1369FAC", Offset = "0x1369FAC", VA = "0x1369FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x136A014", Offset = "0x136A014", VA = "0x136A014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1367F3C", Offset = "0x1367F3C", VA = "0x1367F3C")]
		[DebuggerHidden]
		public <ShipWobble_co>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1369D90", Offset = "0x1369D90", VA = "0x1369D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1369D94", Offset = "0x1369D94", VA = "0x1369D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1369FB4", Offset = "0x1369FB4", VA = "0x1369FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB78", Offset = "0x62EB78")]
	private sealed class <CloseShipDoor_co>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion <initRot>5__3;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x136871C", Offset = "0x136871C", VA = "0x136871C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x1368784", Offset = "0x1368784", VA = "0x1368784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1367FE4", Offset = "0x1367FE4", VA = "0x1367FE4")]
		[DebuggerHidden]
		public <CloseShipDoor_co>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x136854C", Offset = "0x136854C", VA = "0x136854C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1368550", Offset = "0x1368550", VA = "0x1368550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1368724", Offset = "0x1368724", VA = "0x1368724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB88", Offset = "0x62EB88")]
	private sealed class <OpenHangarDoors_co>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progress>5__2;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <initLeftPos>5__3;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <initRightPos>5__4;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource <leftDoorSound>5__5;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource <rightDoorSound>5__6;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x13698B8", Offset = "0x13698B8", VA = "0x13698B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x1369920", Offset = "0x1369920", VA = "0x1369920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x136808C", Offset = "0x136808C", VA = "0x136808C")]
		[DebuggerHidden]
		public <OpenHangarDoors_co>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x13692D4", Offset = "0x13692D4", VA = "0x13692D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x13692D8", Offset = "0x13692D8", VA = "0x13692D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x13698C0", Offset = "0x13698C0", VA = "0x13698C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EB98", Offset = "0x62EB98")]
	private sealed class <ReentryFX_co>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeTotal;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shake <cameraShake>5__2;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <progress>5__3;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x1369D20", Offset = "0x1369D20", VA = "0x1369D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x1369D88", Offset = "0x1369D88", VA = "0x1369D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1368144", Offset = "0x1368144", VA = "0x1368144")]
		[DebuggerHidden]
		public <ReentryFX_co>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1369928", Offset = "0x1369928", VA = "0x1369928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x136992C", Offset = "0x136992C", VA = "0x136992C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1369D28", Offset = "0x1369D28", VA = "0x1369D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBA8", Offset = "0x62EBA8")]
	private sealed class <ChangeScene_co>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWait;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShuttleEscape <>4__this;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waitTime>5__2;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x13684DC", Offset = "0x13684DC", VA = "0x13684DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x1368544", Offset = "0x1368544", VA = "0x1368544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x13681FC", Offset = "0x13681FC", VA = "0x13681FC")]
		[DebuggerHidden]
		public <ChangeScene_co>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x136829C", Offset = "0x136829C", VA = "0x136829C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x13682A0", Offset = "0x13682A0", VA = "0x13682A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x13684E4", Offset = "0x13684E4", VA = "0x13684E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer skybox;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hangarDoorLeft;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hangarDoorRight;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hangarDoorsParticlesFX;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material skyboxMat;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6314DC", Offset = "0x6314DC")]
	public Transform shuttleInterior;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform shuttleDoor;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ShuttleRendererTrigger rendererTrigger;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DraggableLinear consoleHandle;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631514", Offset = "0x631514")]
	public Transform[] doorLeftPos;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform[] doorRightPos;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] shipPos;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63154C", Offset = "0x63154C")]
	public Renderer[] reentryFlames;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Light reentryLight;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material reentryFlamesMat;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631584", Offset = "0x631584")]
	public AudioSource soundEngineAmbience;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource soundEngineMain;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource soundEngineHiss;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource soundEngineStart;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource soundReentry;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource soundDoorsUnlock;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource soundDoorsDecompress;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource soundDoorsLock;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource soundAlarm;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundCrash;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6315BC", Offset = "0x6315BC")]
	public bool _StartEscapeSequence;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x1367B08", Offset = "0x1367B08", VA = "0x1367B08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x1367BAC", Offset = "0x1367BAC", VA = "0x1367BAC")]
	public void StartEscapeSequence()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x1367E18", Offset = "0x1367E18", VA = "0x1367E18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B024", Offset = "0x63B024")]
	private IEnumerator EscapeSequence_co()
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1367EC0", Offset = "0x1367EC0", VA = "0x1367EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B088", Offset = "0x63B088")]
	private IEnumerator ShipWobble_co()
	{
		return null;
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1367F68", Offset = "0x1367F68", VA = "0x1367F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B0EC", Offset = "0x63B0EC")]
	private IEnumerator CloseShipDoor_co()
	{
		return null;
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1368010", Offset = "0x1368010", VA = "0x1368010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B150", Offset = "0x63B150")]
	private IEnumerator OpenHangarDoors_co()
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x13680B8", Offset = "0x13680B8", VA = "0x13680B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B1B4", Offset = "0x63B1B4")]
	private IEnumerator ReentryFX_co(float timeTotal)
	{
		return null;
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x1368170", Offset = "0x1368170", VA = "0x1368170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B218", Offset = "0x63B218")]
	private IEnumerator ChangeScene_co(float timeWait)
	{
		return null;
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1368228", Offset = "0x1368228", VA = "0x1368228")]
	private void OnChangeScene_Fadeout()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1368294", Offset = "0x1368294", VA = "0x1368294")]
	public ShuttleEscape()
	{
	}
}
[Token(Token = "0x2000173")]
public class StorePlatformManager : Singleton<StorePlatformManager>
{
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBB8", Offset = "0x62EBB8")]
	private sealed class <WaitForStoragePath>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StorePlatformManager <>4__this;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x1374BD4", Offset = "0x1374BD4", VA = "0x1374BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x1374C3C", Offset = "0x1374C3C", VA = "0x1374C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1374AE8", Offset = "0x1374AE8", VA = "0x1374AE8")]
		[DebuggerHidden]
		public <WaitForStoragePath>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1374B6C", Offset = "0x1374B6C", VA = "0x1374B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1374B70", Offset = "0x1374B70", VA = "0x1374B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1374BDC", Offset = "0x1374BDC", VA = "0x1374BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string dataStoragePath;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool obtainingStoragePath;

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x13747B8", Offset = "0x13747B8", VA = "0x13747B8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1374830", Offset = "0x1374830", VA = "0x1374830")]
	private void Init_Pico()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x13748F8", Offset = "0x13748F8", VA = "0x13748F8")]
	private void EntitlementCallback_Pico(int resultCode)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x1374A6C", Offset = "0x1374A6C", VA = "0x1374A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B27C", Offset = "0x63B27C")]
	public IEnumerator WaitForStoragePath()
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1374B14", Offset = "0x1374B14", VA = "0x1374B14")]
	public string GetStoragePath()
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x1374B1C", Offset = "0x1374B1C", VA = "0x1374B1C")]
	public StorePlatformManager()
	{
	}
}
[Token(Token = "0x2000174")]
public class VideoSettings
{
	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x986A24", Offset = "0x986A24", VA = "0x986A24")]
	public static void ApplyVisualSettingsPicoNeo()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x986A28", Offset = "0x986A28", VA = "0x986A28")]
	public VideoSettings()
	{
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CBE0", Offset = "0x62CBE0")]
public class VideoSettingsCameraHandler : MonoBehaviour
{
	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PostProcessingProfile lowPostpro;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowExposure;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera localCamera;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PostProcessingBehaviour postpro;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AmplifyColorEffect amplifyColor;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool defaultHDR;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float defaultExposure;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PostProcessingProfile defaultPostpro;

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x986A30", Offset = "0x986A30", VA = "0x986A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x986B98", Offset = "0x986B98", VA = "0x986B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x986C0C", Offset = "0x986C0C", VA = "0x986C0C")]
	public void ApplySettings(int qualityLevel)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x986C10", Offset = "0x986C10", VA = "0x986C10")]
	public VideoSettingsCameraHandler()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CC44", Offset = "0x62CC44")]
public class AmbienceDescriptor : ScriptableObject
{
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float weight;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x631600", Offset = "0x631600")]
	public Color fogColor1;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color fogColor2;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fogDensityMin;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fogDensityMax;

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x95FD2C", Offset = "0x95FD2C", VA = "0x95FD2C")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x95FEF8", Offset = "0x95FEF8", VA = "0x95FEF8")]
	public AmbienceDescriptor()
	{
	}
}
[Token(Token = "0x2000177")]
public class ChunkMesh
{
	[Token(Token = "0x2000407")]
	private struct MaterialKey
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material material;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lighmapIndex;

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x6B4158", Offset = "0x6B4158", VA = "0x6B4158")]
		public MaterialKey(Material mat, int lightmapIndex)
		{
		}
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x82F710", Offset = "0x82F710", VA = "0x82F710")]
	public ChunkMesh()
	{
	}
}
[Token(Token = "0x2000178")]
public interface IRoomBaker
{
}
[Token(Token = "0x2000179")]
public class Junction : MonoBehaviour
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] blockerObjects;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform snapPoint;

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x971908", Offset = "0x971908", VA = "0x971908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x971910", Offset = "0x971910", VA = "0x971910")]
	public void SetOpen(bool junctionIsOpen = true)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x971CD0", Offset = "0x971CD0", VA = "0x971CD0")]
	public Junction()
	{
	}
}
[Token(Token = "0x200017A")]
public class Level : Singleton<Level>
{
	[Token(Token = "0x2000408")]
	public enum NavAreas
	{
		[Token(Token = "0x4001CC2")]
		Walkable,
		[Token(Token = "0x4001CC3")]
		NotWalkable,
		[Token(Token = "0x4001CC4")]
		Jump,
		[Token(Token = "0x4001CC5")]
		ClosedDoor,
		[Token(Token = "0x4001CC6")]
		LockedDoor
	}

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelGraph graph;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LevelOptions options;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Bounds[] roomBoundsCache;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x974260", Offset = "0x974260", VA = "0x974260")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x970034", Offset = "0x970034", VA = "0x970034")]
	public Room GetRoomAt(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x974268", Offset = "0x974268", VA = "0x974268")]
	public Point GetRoomTile(Vector3 posWorld)
	{
		return default(Point);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x9743F0", Offset = "0x9743F0", VA = "0x9743F0")]
	public Room GetRoom(Room.RoomType roomType)
	{
		return null;
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x97450C", Offset = "0x97450C", VA = "0x97450C")]
	public float GetGround(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x9745E0", Offset = "0x9745E0", VA = "0x9745E0")]
	public Level()
	{
	}
}
[Token(Token = "0x200017B")]
public class LevelGraph
{
	[Token(Token = "0x2000409")]
	public class GraphNode
	{
		[Token(Token = "0x2000505")]
		public struct Link
		{
			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GraphNode dest;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Door door;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isBridge;

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x6B4AA8", Offset = "0x6B4AA8", VA = "0x6B4AA8")]
			public Link(GraphNode dest, [Optional] Door door)
			{
			}

			[Token(Token = "0x6002000")]
			[Address(RVA = "0x6B4AE4", Offset = "0x6B4AE4", VA = "0x6B4AE4")]
			public Link SetBridge(bool isBridge)
			{
				return default(Link);
			}
		}

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType roomType;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room room;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int depth;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isArticulationPoint;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int block;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int section;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDeadend;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int deadendLevel;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int keyLevel;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int distanceToLight;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Link> neighbors;

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x9746C8", Offset = "0x9746C8", VA = "0x9746C8")]
		public GraphNode(Room room)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x974B20", Offset = "0x974B20", VA = "0x974B20")]
		public bool IsNeighbor(Room r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x974C04", Offset = "0x974C04", VA = "0x974C04")]
		public void AddNeighbor(GraphNode dest, [Optional] Door door)
		{
		}
	}

	[Token(Token = "0x200040A")]
	public struct Bridge
	{
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GraphNode node1;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GraphNode node2;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cardinality;

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x6B4A0C", Offset = "0x6B4A0C", VA = "0x6B4A0C")]
		public Bridge(GraphNode node1, GraphNode node2, int cardinality = 0)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x6B4A54", Offset = "0x6B4A54", VA = "0x6B4A54")]
		public Bridge SetCardinality(int cardinality)
		{
			return default(Bridge);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x976E74", Offset = "0x976E74", VA = "0x976E74")]
		public static int CompareByCardinality(Bridge a, Bridge b)
		{
			return default(int);
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x976E88", Offset = "0x976E88", VA = "0x976E88")]
		public static int CompareByDepth(Bridge a, Bridge b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GraphNode> listNodes;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Bridge> listBridges;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GraphNode>[] listBlocks;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxKeyLevel;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Room> listRooms;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Pair<Room, Room>, int> distanceCache;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x974630", Offset = "0x974630", VA = "0x974630")]
	public GraphNode AddNode(Room r, int section = 0)
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x974788", Offset = "0x974788", VA = "0x974788")]
	public GraphNode GetNode(Room r)
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x97488C", Offset = "0x97488C", VA = "0x97488C")]
	public int GetNodeIdx(GraphNode node)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x97492C", Offset = "0x97492C", VA = "0x97492C")]
	public void SetNeighbors(Room r1, Room r2, [Optional] Door door)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x974CC0", Offset = "0x974CC0", VA = "0x974CC0")]
	public bool IsBridge(GraphNode node1, GraphNode node2, out Bridge bridge)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x974E64", Offset = "0x974E64", VA = "0x974E64")]
	public void Process()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x9750F8", Offset = "0x9750F8", VA = "0x9750F8")]
	private void SetDepths([Optional] GraphNode node, int depth = 0)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x975B2C", Offset = "0x975B2C", VA = "0x975B2C")]
	public void UpdateKeyLevels(Bridge lockedBridge, int keyLevel)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x975C00", Offset = "0x975C00", VA = "0x975C00")]
	private void UpdateKeyLevels(GraphNode node, int keyLevel, int oldKeyLevel, GraphNode outerRoom)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x975D4C", Offset = "0x975D4C", VA = "0x975D4C")]
	public void UpdateDistancesToLight()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x970224", Offset = "0x970224", VA = "0x970224")]
	public int GetDistance(Room r1, Room r2, [Optional] List<Room> path)
	{
		return default(int);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x9752E8", Offset = "0x9752E8", VA = "0x9752E8")]
	private void FindBridges()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x97620C", Offset = "0x97620C", VA = "0x97620C")]
	private void FindBridges(int iNode, ref bool[] visited, ref int[] discoveryTimes, ref int[] lowTimes, ref int[] parents, ref int time)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x9754D0", Offset = "0x9754D0", VA = "0x9754D0")]
	private void SetBridgesCardinality()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x9768FC", Offset = "0x9768FC", VA = "0x9768FC")]
	private int ComputeBridgeCardinality(int nodeIdx, ref bool[] visited)
	{
		return default(int);
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x9756A8", Offset = "0x9756A8", VA = "0x9756A8")]
	private void PaintBlocks()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x976AE4", Offset = "0x976AE4", VA = "0x976AE4")]
	private int PaintBlock(GraphNode node, int numBlock)
	{
		return default(int);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x9759D8", Offset = "0x9759D8", VA = "0x9759D8")]
	private void FindDeadends()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x976C30", Offset = "0x976C30", VA = "0x976C30")]
	private int GetDeadendLevel(GraphNode node, GraphNode parent)
	{
		return default(int);
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x974264", Offset = "0x974264", VA = "0x974264")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x976D90", Offset = "0x976D90", VA = "0x976D90")]
	public LevelGraph()
	{
	}
}
[Token(Token = "0x200017C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CC88", Offset = "0x62CC88")]
public class LevelLightProbeGrid : MonoBehaviour
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sizeX;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sizeZ;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int offsetX;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int offsetZ;

	[Token(Token = "0x4000CD6")]
	private const int probesPerTile = 19;

	[Token(Token = "0x4000CD7")]
	private const float floorHeight = 2.8f;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private int[] probeIndexes;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphericalHarmonicsL2[] bakedProbes;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool needsReset;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool drawGrid;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x976F94", Offset = "0x976F94", VA = "0x976F94")]
	private int GetProbeIndex(int tileX, int tileZ, int probeNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x976FE0", Offset = "0x976FE0", VA = "0x976FE0")]
	private void SetProbeIndex(int tileX, int tileZ, int probeNum, int value)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x97702C", Offset = "0x97702C", VA = "0x97702C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x977030", Offset = "0x977030", VA = "0x977030")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x977130", Offset = "0x977130", VA = "0x977130")]
	public void SetValues(RoomLightProbes.TileProbeData roomProbes, Point roomTile, float roomYPos = 0f)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x97743C", Offset = "0x97743C", VA = "0x97743C")]
	public LevelLightProbeGrid()
	{
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CCEC", Offset = "0x62CCEC")]
public class LevelOptions : ScriptableObject, IGameSerializable
{
	[Token(Token = "0x200040B")]
	public enum EWeapons
	{
		[Token(Token = "0x4001CD6")]
		Weapon_Crossbow,
		[Token(Token = "0x4001CD7")]
		Weapon_LightningGun,
		[Token(Token = "0x4001CD8")]
		Weapon_Pistol,
		[Token(Token = "0x4001CD9")]
		Weapon_Shotgun,
		[Token(Token = "0x4001CDA")]
		Weapon_Railgun,
		[Token(Token = "0x4001CDB")]
		Length
	}

	[Token(Token = "0x200040C")]
	public enum EModifiers
	{
		[Token(Token = "0x4001CDD")]
		Player_Health,
		[Token(Token = "0x4001CDE")]
		Player_Speed,
		[Token(Token = "0x4001CDF")]
		Player_Inventory,
		[Token(Token = "0x4001CE0")]
		Player_Fragile,
		[Token(Token = "0x4001CE1")]
		NoMap,
		[Token(Token = "0x4001CE2")]
		NoWeapons,
		[Token(Token = "0x4001CE3")]
		NoAmmo,
		[Token(Token = "0x4001CE4")]
		Demolition,
		[Token(Token = "0x4001CE5")]
		Infestated,
		[Token(Token = "0x4001CE6")]
		LowEnergy,
		[Token(Token = "0x4001CE7")]
		Cosmonaut,
		[Token(Token = "0x4001CE8")]
		Spiders,
		[Token(Token = "0x4001CE9")]
		Security,
		[Token(Token = "0x4001CEA")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200040D")]
	public class UnlockedModsState
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> unlockedMods;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x977A88", Offset = "0x977A88", VA = "0x977A88")]
		public UnlockedModsState()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x9776EC", Offset = "0x9776EC", VA = "0x9776EC")]
		public int GetNumUnlocked()
		{
			return default(int);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x9777FC", Offset = "0x9777FC", VA = "0x9777FC")]
		public void Unlock(EModifiers mod)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x97773C", Offset = "0x97773C", VA = "0x97773C")]
		public bool IsUnlocked(EModifiers mod)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040E")]
	private class SerializedData
	{
		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EWeapons primaryWeapon;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EModifiers> modifiers;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool firstRun;

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x9779C8", Offset = "0x9779C8", VA = "0x9779C8")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPoweredRooms;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxPoweredRooms;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minPercentInfestated;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxPercentInfestated;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float infestationSpreadRate;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int minTerminals;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxTerminals;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public EWeapons primaryWeapon;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EModifiers> modifiers;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool firstRun;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x977458", Offset = "0x977458", VA = "0x977458")]
	public void ResetMods()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x9774E8", Offset = "0x9774E8", VA = "0x9774E8")]
	public void SetMod(EModifiers mod, bool active)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x977588", Offset = "0x977588", VA = "0x977588")]
	public bool HasMod(EModifiers mod)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x9775FC", Offset = "0x9775FC", VA = "0x9775FC")]
	public static EModifiers UnlockMod(UnlockedModsState modState)
	{
		return default(EModifiers);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x97793C", Offset = "0x97793C", VA = "0x97793C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x9779D0", Offset = "0x9779D0", VA = "0x9779D0", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x977A5C", Offset = "0x977A5C", VA = "0x977A5C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x977A60", Offset = "0x977A60", VA = "0x977A60")]
	public LevelOptions()
	{
	}
}
[Token(Token = "0x200017E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CD30", Offset = "0x62CD30")]
public class LightingProfile : ScriptableObject
{
	[Token(Token = "0x200040F")]
	public enum Profile
	{
		[Token(Token = "0x4001CF0")]
		Standard,
		[Token(Token = "0x4001CF1")]
		LowPower
	}

	[Serializable]
	[Token(Token = "0x2000410")]
	public class ProfileData
	{
		[Serializable]
		[Token(Token = "0x2000506")]
		public struct MaterialReplacement
		{
			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material matFrom;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material matTo;
		}

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D[] lightmaps;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialReplacement[] materialReplacements;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x977D40", Offset = "0x977D40", VA = "0x977D40")]
		public Material GetReplacement(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x977E40", Offset = "0x977E40", VA = "0x977E40")]
		public ProfileData()
		{
		}
	}

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProfileData standardProfile;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProfileData lowPowerProfile;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x977B04", Offset = "0x977B04", VA = "0x977B04")]
	public Texture2D GetLightmap(int index, Profile profileType)
	{
		return null;
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x977B64", Offset = "0x977B64", VA = "0x977B64")]
	public void ReplaceMaterials(Profile profile, List<Renderer> renderers)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x977E38", Offset = "0x977E38", VA = "0x977E38")]
	public LightingProfile()
	{
	}
}
[Token(Token = "0x200017F")]
public class MapGenerator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000411")]
	public class Process : ScriptableObject
	{
		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x907080", Offset = "0x907080", VA = "0x907080", Slot = "4")]
		public virtual void Reset(MapGenerator gen, GameObject staticGeometry, GameObject dynamicGeometry)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x907084", Offset = "0x907084", VA = "0x907084", Slot = "5")]
		public virtual bool Generate(MapGenerator gen, bool singleStep = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x90708C", Offset = "0x90708C", VA = "0x90708C")]
		public Process()
		{
		}
	}

	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBC8", Offset = "0x62EBC8")]
	private sealed class <Generation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MapGenerator <>4__this;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Random.State <randState>5__2;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x907010", Offset = "0x907010", VA = "0x907010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x907078", Offset = "0x907078", VA = "0x907078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x904BC8", Offset = "0x904BC8", VA = "0x904BC8")]
		[DebuggerHidden]
		public <Generation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x906B84", Offset = "0x906B84", VA = "0x906B84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x906B88", Offset = "0x906B88", VA = "0x906B88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x907018", Offset = "0x907018", VA = "0x907018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchRefScriptableObj roomPrefabs;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchRefGameObject doorPrefab;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchRefGameObject[] doorLockPrefabs;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchRefGameObject[] doorLockKeyPrefabs;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchRefGameObject powerPanelPrefab;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchRefGameObject terminalPrefab;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefGameObject fabricatorPrefab;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VisibilityProbe visibilityProbePrefab;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RoomConnectionsMatrix roomConnections;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Process mapGeneratorProcess;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string seed;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x904760", Offset = "0x904760", VA = "0x904760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x904808", Offset = "0x904808", VA = "0x904808")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x904B20", Offset = "0x904B20", VA = "0x904B20")]
	private bool Generate(bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x90478C", Offset = "0x90478C", VA = "0x90478C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B2E0", Offset = "0x63B2E0")]
	private IEnumerator Generation()
	{
		return null;
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x904BF4", Offset = "0x904BF4", VA = "0x904BF4")]
	public Room GetRoomPrefab(string roomName)
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x904D40", Offset = "0x904D40", VA = "0x904D40")]
	public Room AddRoom(Room roomPrefab, Junction junction, int newRoomJunctionIndex = -1, bool addDoor = true, [Optional] Vector3? firstRoomOffset)
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x905750", Offset = "0x905750", VA = "0x905750")]
	public Vector3 GetFirstRoomOffset(Point roomPos, Point roomDimensions, IntRect mapDimensions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x9056A8", Offset = "0x9056A8", VA = "0x9056A8")]
	public GameObject AddDoor(Junction junction)
	{
		return null;
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x905928", Offset = "0x905928", VA = "0x905928")]
	public DoorLock AddDoorLock(Door door, out Item keyPrefab, int iKeyColor, bool rightSide = true)
	{
		return null;
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x905A90", Offset = "0x905A90", VA = "0x905A90")]
	private void PlaceObjects()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x90607C", Offset = "0x90607C", VA = "0x90607C")]
	public void SetPlayer(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x90631C", Offset = "0x90631C", VA = "0x90631C")]
	private void BuildNavMesh()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x9066EC", Offset = "0x9066EC", VA = "0x9066EC")]
	public void ProcessGeometry(IEnumerable<Room> rooms)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x906B7C", Offset = "0x906B7C", VA = "0x906B7C")]
	public MapGenerator()
	{
	}
}
[Token(Token = "0x2000180")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CD74", Offset = "0x62CD74")]
public class MapGeneratorDeck : MapGenerator.Process
{
	[Token(Token = "0x2000413")]
	private class RoomInfo
	{
		[Token(Token = "0x2000507")]
		public class TileJunctions
		{
			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Point tile;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool junctionLeft;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool junctionRight;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool junctionTop;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool junctionBottom;

			[Token(Token = "0x6002001")]
			[Address(RVA = "0x90CCB4", Offset = "0x90CCB4", VA = "0x90CCB4")]
			public TileJunctions(Point tile)
			{
			}
		}

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType type;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room roomPrefab;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point pos;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomInfo parent;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Point parentTile;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TileJunctions[] junctions;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasPower;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool hasInfestation;

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x90BF38", Offset = "0x90BF38", VA = "0x90BF38")]
		public TileJunctions GetTileJunctions(Point worldTile)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x90C400", Offset = "0x90C400", VA = "0x90C400")]
		public RoomInfo(Room rPrefab, Point pos, int width, int height, RoomInfo parent, Point parentTile, Point junctionTile, Room.Adjacency.Dir junctionDir)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x90CCE4", Offset = "0x90CCE4", VA = "0x90CCE4")]
		public int CountJunctions()
		{
			return default(int);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x90C6C0", Offset = "0x90C6C0", VA = "0x90C6C0")]
		public bool CanAddJunction(Point fromCell, Room.Adjacency.Dir dir, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x90C674", Offset = "0x90C674", VA = "0x90C674")]
		public bool CanAddJunction(Point newPos, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x90C358", Offset = "0x90C358", VA = "0x90C358")]
		public Point AddJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x90BEA4", Offset = "0x90BEA4", VA = "0x90BEA4")]
		public Room.Adjacency.Dir DirToCell(Point newPos, out Point closestCell)
		{
			return default(Room.Adjacency.Dir);
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x90BE30", Offset = "0x90BE30", VA = "0x90BE30")]
		public Point GetClosestCellInRoom(Point newPos)
		{
			return default(Point);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x90BA34", Offset = "0x90BA34", VA = "0x90BA34")]
		public int GetAdjacencyLayoutIndex([Optional] Room prefab, bool perfectMatch = false, bool checkExtraDir = false, [Optional] Point extraDirFromCell, Room.Adjacency.Dir extraDir = Room.Adjacency.Dir.Bottom, bool checkReserved = false, [Optional] RoomMap roomMap)
		{
			return default(int);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x90C93C", Offset = "0x90C93C", VA = "0x90C93C")]
		public int GetAdjacencyReservedTiles(Point fromTile, Room.Adjacency.Dir dir, bool perfectMatch = false)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000414")]
	private class RoomMap
	{
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomInfo> roomInfo;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x90CD68", Offset = "0x90CD68", VA = "0x90CD68")]
		public RoomMap()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x90C13C", Offset = "0x90C13C", VA = "0x90C13C")]
		public RoomInfo At(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x90B2DC", Offset = "0x90B2DC", VA = "0x90B2DC")]
		public RoomInfo At(Point pos)
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x90C8B0", Offset = "0x90C8B0", VA = "0x90C8B0")]
		public void Add(RoomInfo rInfo)
		{
		}
	}

	[Token(Token = "0x2000415")]
	private class ShipLayout : IComparable
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMap roomMap;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntRect dimensions;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float evaluation;

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x909BA8", Offset = "0x909BA8", VA = "0x909BA8")]
		public ShipLayout()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x90CDE4", Offset = "0x90CDE4", VA = "0x90CDE4", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000416")]
	private struct JunctionInfo
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Point from;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Point to;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x6B482C", Offset = "0x6B482C", VA = "0x6B482C")]
		public JunctionInfo(Point from, Point to)
		{
		}
	}

	[Token(Token = "0x2000417")]
	private struct RoomPositionConfig
	{
		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int deltaX;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int deltaZ;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int height;

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x6B4834", Offset = "0x6B4834", VA = "0x6B4834")]
		public RoomPositionConfig(int deltaX, int deltaZ, int width, int height)
		{
		}
	}

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShipDeck shipDeckAsset;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631658", Offset = "0x631658")]
	public float corridorChance;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxRoomsInLine;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float corridorCostInLine;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AmbienceDescriptor[] ambienceDescs;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MapGenerator gen;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Room.RoomType> roomDeck;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<JunctionInfo> pendingJunctions;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<Point> blockedTiles;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<RoomPositionConfig> roomPositionConfigs;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<RoomInfo> roomNeighborsCache;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Pair<JunctionInfo, Room.Adjacency.Dir>> roomNeighborsJunctions;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Room> corridorCachedPrefabs;

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x907094", Offset = "0x907094", VA = "0x907094", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x9070E4", Offset = "0x9070E4", VA = "0x9070E4", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x907790", Offset = "0x907790", VA = "0x907790")]
	private ShipLayout GenerateLayout()
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x907EB0", Offset = "0x907EB0", VA = "0x907EB0")]
	private void BuildGeometry(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x909C4C", Offset = "0x909C4C", VA = "0x909C4C")]
	private RoomInfo AddRoom(ShipLayout layout, Point pos, Room.RoomType roomType, [Optional] RoomInfo parent, [Optional] Point parentTile, bool allowBigRoom = true)
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x90BF8C", Offset = "0x90BF8C", VA = "0x90BF8C")]
	private Room SelectRoomPrefab(Room.RoomType rType, bool allowBigRoom)
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x90B2E4", Offset = "0x90B2E4", VA = "0x90B2E4")]
	private Room ResolveCorridorPrefab(RoomInfo roomInfo)
	{
		return null;
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x90AC4C", Offset = "0x90AC4C", VA = "0x90AC4C")]
	private JunctionInfo ChooseJunction(ShipLayout layout)
	{
		return default(JunctionInfo);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x90A6A4", Offset = "0x90A6A4", VA = "0x90A6A4")]
	private void PrunePendingJunctions(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x90AE70", Offset = "0x90AE70", VA = "0x90AE70")]
	private List<Room.RoomType> GetFilteredRoomDeck(ShipLayout layout, Point pos, List<Room.RoomType> deck)
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x90B4F0", Offset = "0x90B4F0", VA = "0x90B4F0")]
	private static float EvalLayout(ShipLayout layout)
	{
		return default(float);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x90C860", Offset = "0x90C860", VA = "0x90C860")]
	private IntRect AddDimensions(IntRect oldDimensions, Point pos)
	{
		return default(IntRect);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x90C918", Offset = "0x90C918", VA = "0x90C918")]
	private static int GetDimensionsArea(IntRect dimensions)
	{
		return default(int);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x90CB90", Offset = "0x90CB90", VA = "0x90CB90")]
	public MapGeneratorDeck()
	{
	}
}
[Token(Token = "0x2000181")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CDB8", Offset = "0x62CDB8")]
public class MapGeneratorEM : MapGenerator.Process
{
	[Token(Token = "0x2000418")]
	private class RoomInfo
	{
		[Token(Token = "0x2000508")]
		public class TileJunctions
		{
			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Point tile;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool junctionLeft;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool junctionRight;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool junctionTop;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool junctionBottom;

			[Token(Token = "0x6002002")]
			[Address(RVA = "0x9152F4", Offset = "0x9152F4", VA = "0x9152F4")]
			public TileJunctions(Point tile)
			{
			}
		}

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Room.RoomType type;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Room roomPrefab;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point pos;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int width;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int height;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomInfo parent;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Point parentTile;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int section;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TileJunctions[] junctions;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool hasPower;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool hasInfestation;

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x914430", Offset = "0x914430", VA = "0x914430")]
		public TileJunctions GetTileJunctions(Point worldTile)
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x9148F0", Offset = "0x9148F0", VA = "0x9148F0")]
		public RoomInfo(Room rPrefab, Point pos, int width, int height, RoomInfo parent, Point parentTile, Point junctionTile, Room.Adjacency.Dir junctionDir, int section)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x9150B0", Offset = "0x9150B0", VA = "0x9150B0")]
		public int CountJunctions()
		{
			return default(int);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x914BB8", Offset = "0x914BB8", VA = "0x914BB8")]
		public bool CanAddJunction(Point fromCell, Room.Adjacency.Dir dir, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x914B6C", Offset = "0x914B6C", VA = "0x914B6C")]
		public bool CanAddJunction(Point newPos, RoomMap roomMap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x914850", Offset = "0x914850", VA = "0x914850")]
		public Point AddJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x915134", Offset = "0x915134", VA = "0x915134")]
		public Point RemoveJunctionTo(Point newPos, Room.Adjacency.Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x91439C", Offset = "0x91439C", VA = "0x91439C")]
		public Room.Adjacency.Dir DirToCell(Point newPos, out Point closestCell)
		{
			return default(Room.Adjacency.Dir);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x914328", Offset = "0x914328", VA = "0x914328")]
		public Point GetClosestCellInRoom(Point newPos)
		{
			return default(Point);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x913F2C", Offset = "0x913F2C", VA = "0x913F2C")]
		public int GetAdjacencyLayoutIndex([Optional] Room prefab, bool perfectMatch = false, bool checkExtraDir = false, [Optional] Point extraDirFromCell, Room.Adjacency.Dir extraDir = Room.Adjacency.Dir.Bottom, bool checkReserved = false, [Optional] RoomMap roomMap)
		{
			return default(int);
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x914E5C", Offset = "0x914E5C", VA = "0x914E5C")]
		public int GetAdjacencyReservedTiles(Point fromTile, Room.Adjacency.Dir dir, bool perfectMatch = false)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000419")]
	private class RoomMap
	{
		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomInfo> roomInfo;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x915324", Offset = "0x915324", VA = "0x915324")]
		public RoomMap()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x914634", Offset = "0x914634", VA = "0x914634")]
		public RoomInfo At(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x912970", Offset = "0x912970", VA = "0x912970")]
		public RoomInfo At(Point pos)
		{
			return null;
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x914DD0", Offset = "0x914DD0", VA = "0x914DD0")]
		public void Add(RoomInfo rInfo)
		{
		}
	}

	[Token(Token = "0x200041A")]
	private class ShipLayout : IComparable
	{
		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMap roomMap;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntRect dimensions;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float evaluation;

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x910920", Offset = "0x910920", VA = "0x910920")]
		public ShipLayout()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x9153A0", Offset = "0x9153A0", VA = "0x9153A0", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200041B")]
	private struct JunctionInfo
	{
		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Point from;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Point to;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x6B4840", Offset = "0x6B4840", VA = "0x6B4840")]
		public JunctionInfo(Point from, Point to)
		{
		}
	}

	[Token(Token = "0x200041C")]
	private struct RoomPositionConfig
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int deltaX;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int deltaZ;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int height;

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x6B4848", Offset = "0x6B4848", VA = "0x6B4848")]
		public RoomPositionConfig(int deltaX, int deltaZ, int width, int height)
		{
		}
	}

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Room[] hubRooms;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipDeck[] sectionDecks;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x631670", Offset = "0x631670")]
	public float corridorChance;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxRoomsInLine;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float corridorCostInLine;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AmbienceDescriptor[] ambienceDescs;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MapGenerator gen;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<List<Room.RoomType>> roomDecks;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int minKeys;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int maxKeys;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<List<JunctionInfo>> pendingJunctions;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HashSet<Point> blockedTiles;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Pair<Point, Point>> blockedJunctions;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RoomPositionConfig> roomPositionConfigs;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RoomInfo> roomNeighborsCache;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Pair<JunctionInfo, Room.Adjacency.Dir>> roomNeighborsJunctions;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Room> corridorCachedPrefabs;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x90CE88", Offset = "0x90CE88", VA = "0x90CE88", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x90CED8", Offset = "0x90CED8", VA = "0x90CED8", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x90D5AC", Offset = "0x90D5AC", VA = "0x90D5AC")]
	private ShipLayout GenerateLayout()
	{
		return null;
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x912978", Offset = "0x912978", VA = "0x912978")]
	private int CountPendingRooms(List<List<Room.RoomType>> decks)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x912A74", Offset = "0x912A74", VA = "0x912A74")]
	private int CountPendingJunctions(List<List<JunctionInfo>> junctions)
	{
		return default(int);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x90E83C", Offset = "0x90E83C", VA = "0x90E83C")]
	private void BuildGeometry(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x9109C4", Offset = "0x9109C4", VA = "0x9109C4")]
	private RoomInfo AddRoom(ShipLayout layout, Point pos, Room.RoomType roomType, [Optional] RoomInfo parent, [Optional] Point parentTile, bool allowBigRoom = true, int section = 0, bool initHub = false)
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x914484", Offset = "0x914484", VA = "0x914484")]
	private Room SelectRoomPrefab(Room.RoomType rType, bool allowBigRoom)
	{
		return null;
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x9136E0", Offset = "0x9136E0", VA = "0x9136E0")]
	private Room ResolveCorridorPrefab(RoomInfo roomInfo)
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x91227C", Offset = "0x91227C", VA = "0x91227C")]
	private JunctionInfo ChooseJunction(ShipLayout layout, int section)
	{
		return default(JunctionInfo);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x911B3C", Offset = "0x911B3C", VA = "0x911B3C")]
	private void PrunePendingJunctions(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x912B70", Offset = "0x912B70", VA = "0x912B70")]
	private void PruneCorridorDeadends(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x912D28", Offset = "0x912D28", VA = "0x912D28")]
	private void CollapseCorridors(ShipLayout layout)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x912504", Offset = "0x912504", VA = "0x912504")]
	private List<Room.RoomType> GetFilteredRoomDeck(ShipLayout layout, Point pos, List<Room.RoomType> deck)
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x9138EC", Offset = "0x9138EC", VA = "0x9138EC")]
	private static float EvalLayout(ShipLayout layout)
	{
		return default(float);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x914D80", Offset = "0x914D80", VA = "0x914D80")]
	private IntRect AddDimensions(IntRect oldDimensions, Point pos)
	{
		return default(IntRect);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x914E38", Offset = "0x914E38", VA = "0x914E38")]
	private static int GetDimensionsArea(IntRect dimensions)
	{
		return default(int);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x9151C4", Offset = "0x9151C4", VA = "0x9151C4")]
	public MapGeneratorEM()
	{
	}
}
[Token(Token = "0x2000182")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CDFC", Offset = "0x62CDFC")]
public class MapGeneratorTest : MapGenerator.Process
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MapGenerator gen;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject staticGeometry;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject dynamicGeometry;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Junction> openJunctions;

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x915444", Offset = "0x915444", VA = "0x915444", Slot = "4")]
	public override void Reset(MapGenerator generator, GameObject staticGeometry, GameObject dynamicGeometry)
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x9154AC", Offset = "0x9154AC", VA = "0x9154AC", Slot = "5")]
	public override bool Generate(MapGenerator generator, bool singleStep = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x9159EC", Offset = "0x9159EC", VA = "0x9159EC")]
	private Room AddRoom(Room roomPrefab, Junction junction)
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x915B54", Offset = "0x915B54", VA = "0x915B54")]
	public MapGeneratorTest()
	{
	}
}
[Token(Token = "0x2000183")]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200041D")]
	public struct RendererInfo
	{
		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Serializable]
	[Token(Token = "0x200041E")]
	public struct ProfileLightData
	{
		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightingProfile.Profile profileType;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D[] m_Lightmaps;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D[] m_LightmapsNear;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionProbe[] m_ReflectionProbes;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] m_ReflectionMaps;
	}

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RendererInfo[] m_RendererInfo;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ProfileLightData[] profiles;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[][] indexTranslation;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x84BD74", Offset = "0x84BD74", VA = "0x84BD74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x84C23C", Offset = "0x84C23C", VA = "0x84C23C")]
	public void ApplyLightmaps(LightingProfile.Profile profileType)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x84C1D8", Offset = "0x84C1D8", VA = "0x84C1D8")]
	private int GetProfileDataIndex(LightingProfile.Profile profileType)
	{
		return default(int);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x84C2CC", Offset = "0x84C2CC", VA = "0x84C2CC")]
	private static void ApplyRendererInfo(RendererInfo[] infos, int[] indexTranslation)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x84C438", Offset = "0x84C438", VA = "0x84C438")]
	private static void ApplyReflectionMaps(ReflectionProbe[] probes, Texture[] reflectionMaps)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x84C51C", Offset = "0x84C51C", VA = "0x84C51C")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x2000184")]
public class Room : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x200041F")]
	public enum RoomType
	{
		[Token(Token = "0x4001D2A")]
		Corridor,
		[Token(Token = "0x4001D2B")]
		Entrance,
		[Token(Token = "0x4001D2C")]
		Bridge,
		[Token(Token = "0x4001D2D")]
		Dorm,
		[Token(Token = "0x4001D2E")]
		Kitchen,
		[Token(Token = "0x4001D2F")]
		Medical,
		[Token(Token = "0x4001D30")]
		Commons,
		[Token(Token = "0x4001D31")]
		Bathroom,
		[Token(Token = "0x4001D32")]
		Workshop,
		[Token(Token = "0x4001D33")]
		Lab,
		[Token(Token = "0x4001D34")]
		Office,
		[Token(Token = "0x4001D35")]
		Power,
		[Token(Token = "0x4001D36")]
		Computers,
		[Token(Token = "0x4001D37")]
		Storage,
		[Token(Token = "0x4001D38")]
		Hub,
		[Token(Token = "0x4001D39")]
		Navigation,
		[Token(Token = "0x4001D3A")]
		JumpDrive,
		[Token(Token = "0x4001D3B")]
		Hangar,
		[Token(Token = "0x4001D3C")]
		Undefined
	}

	[Serializable]
	[Token(Token = "0x2000420")]
	public class Adjacency
	{
		[Token(Token = "0x2000509")]
		public enum Dir
		{
			[Token(Token = "0x40020E9")]
			Left,
			[Token(Token = "0x40020EA")]
			Top,
			[Token(Token = "0x40020EB")]
			Right,
			[Token(Token = "0x40020EC")]
			Bottom
		}

		[Serializable]
		[Token(Token = "0x200050A")]
		public class TileAdj
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _tileX;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _tileY;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Junction left;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Junction right;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Junction top;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Junction bottom;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int[] reservedTiles;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 offset;

			[Token(Token = "0x1700029B")]
			public Point Tile
			{
				[Token(Token = "0x6002003")]
				[Address(RVA = "0x8E85C8", Offset = "0x8E85C8", VA = "0x8E85C8")]
				get
				{
					return default(Point);
				}
				[Token(Token = "0x6002004")]
				[Address(RVA = "0x8E85F8", Offset = "0x8E85F8", VA = "0x8E85F8")]
				set
				{
				}
			}

			[Token(Token = "0x6002005")]
			[Address(RVA = "0x8E8110", Offset = "0x8E8110", VA = "0x8E8110")]
			public TileAdj([Optional] Point tile, [Optional] Junction left, [Optional] Junction right, [Optional] Junction top, [Optional] Junction bottom)
			{
			}

			[Token(Token = "0x6002006")]
			[Address(RVA = "0x8E8B0C", Offset = "0x8E8B0C", VA = "0x8E8B0C", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002007")]
			[Address(RVA = "0x8E8CC8", Offset = "0x8E8CC8", VA = "0x8E8CC8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TileAdj[] tiles;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x8E7F14", Offset = "0x8E7F14", VA = "0x8E7F14")]
		public static Point GetDirDelta(Dir dir)
		{
			return default(Point);
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x8E7FAC", Offset = "0x8E7FAC", VA = "0x8E7FAC")]
		public static Dir GetDirFromDelta(Point delta)
		{
			return default(Dir);
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x8E7FF0", Offset = "0x8E7FF0", VA = "0x8E7FF0")]
		public static Dir Reverse(Dir dir)
		{
			return default(Dir);
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x8E8010", Offset = "0x8E8010", VA = "0x8E8010")]
		public Adjacency()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x8E8264", Offset = "0x8E8264", VA = "0x8E8264")]
		public Adjacency RotateCW()
		{
			return null;
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x8E8604", Offset = "0x8E8604", VA = "0x8E8604", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x8E8784", Offset = "0x8E8784", VA = "0x8E8784", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x8E883C", Offset = "0x8E883C", VA = "0x8E883C")]
		public TileAdj GetTileAdj(Point tile)
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x8E88FC", Offset = "0x8E88FC", VA = "0x8E88FC")]
		public bool CheckValid(Point tile, bool left, bool right, bool top, bool bottom, bool perfectMath = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x8E8ABC", Offset = "0x8E8ABC", VA = "0x8E8ABC")]
		public bool CheckBlocked(Point tile, bool blockedLeft, bool blockedRight, bool blockedTop, bool blockedBottom)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000421")]
	private class SerializedData
	{
		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool visited;

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x8E76AC", Offset = "0x8E76AC", VA = "0x8E76AC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float MiniTileSize;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _sizeX;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _sizeZ;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ceilingHeight;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RoomType type;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableGeneration;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int reservedTilesLeft;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int reservedTilesRight;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int reservedTilesTop;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int reservedTilesBottom;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Bounds localBounds;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Bounds localInnerBounds;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Bounds bounds;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Bounds innerBounds;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int maxJunctions;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<Junction> junctions;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Adjacency> adjacencyData;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform entranceSpawnPoint;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RoomMarker.RoomMarkerCollection markerCollection;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool hasSecurity;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool visited;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GameObject> staticGeometry;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RoomInfestation _infestation;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sector occlusionSector;

	[Token(Token = "0x170000ED")]
	public int MiniSizeX
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x8E71AC", Offset = "0x8E71AC", VA = "0x8E71AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EE")]
	public int MiniSizeZ
	{
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x8E71B4", Offset = "0x8E71B4", VA = "0x8E71B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EF")]
	public int TilesX
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x8E71BC", Offset = "0x8E71BC", VA = "0x8E71BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F0")]
	public int TilesZ
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x8E71D8", Offset = "0x8E71D8", VA = "0x8E71D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F1")]
	public RoomInfestation Infestation
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x8E71F4", Offset = "0x8E71F4", VA = "0x8E71F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F2")]
	public bool IsInfestated
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x8E71FC", Offset = "0x8E71FC", VA = "0x8E71FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x8E7290", Offset = "0x8E7290", VA = "0x8E7290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x8E7624", Offset = "0x8E7624", VA = "0x8E7624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x8E7630", Offset = "0x8E7630", VA = "0x8E7630")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x8E7638", Offset = "0x8E7638", VA = "0x8E7638", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x8E76B4", Offset = "0x8E76B4", VA = "0x8E76B4", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x8E7724", Offset = "0x8E7724", VA = "0x8E7724", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x8E7728", Offset = "0x8E7728", VA = "0x8E7728")]
	public int GetMaxJunctions()
	{
		return default(int);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x8E77BC", Offset = "0x8E77BC", VA = "0x8E77BC")]
	public int GetJunctionIndex(Junction junction)
	{
		return default(int);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x8E7894", Offset = "0x8E7894", VA = "0x8E7894")]
	public Vector3 MiniTileToLocal(int xPos, int zPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x8E7944", Offset = "0x8E7944", VA = "0x8E7944")]
	public Vector3 MiniTileToWorld(int xPos, int zPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x8E7994", Offset = "0x8E7994", VA = "0x8E7994")]
	public Point LocalToMiniTile(Vector3 pos)
	{
		return default(Point);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x8E7AA4", Offset = "0x8E7AA4", VA = "0x8E7AA4")]
	public Point GetTileForMiniTile(int xPos, int zPos)
	{
		return default(Point);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x8E7AF0", Offset = "0x8E7AF0", VA = "0x8E7AF0")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x8E7CA8", Offset = "0x8E7CA8", VA = "0x8E7CA8")]
	public Vector3 GetRandomWalkablePos(out bool isValid, int maxTries = 10)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x8E7E08", Offset = "0x8E7E08", VA = "0x8E7E08")]
	public Vector3 GetRandomWalkablePos(int maxTries = 10)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x8E7E30", Offset = "0x8E7E30", VA = "0x8E7E30")]
	public Room()
	{
	}
}
[Token(Token = "0x2000185")]
public class RoomBakeMaterialSwitcher : MonoBehaviour, IRoomBaker
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bakingMaterial;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x8E8DB8", Offset = "0x8E8DB8", VA = "0x8E8DB8")]
	public RoomBakeMaterialSwitcher()
	{
	}
}
[Token(Token = "0x2000186")]
public class RoomBakeOptions : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontCombineMeshes;

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x8E8DC0", Offset = "0x8E8DC0", VA = "0x8E8DC0")]
	public RoomBakeOptions()
	{
	}
}
[Serializable]
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CE40", Offset = "0x62CE40")]
public class RoomConnectionsMatrix : ScriptableObject
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] connections;

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x8E8DC8", Offset = "0x8E8DC8", VA = "0x8E8DC8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x8E8E70", Offset = "0x8E8E70", VA = "0x8E8E70")]
	public bool Get(Room.RoomType rtype1, Room.RoomType rtype2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x8E8EB4", Offset = "0x8E8EB4", VA = "0x8E8EB4")]
	public void Set(Room.RoomType rtype1, Room.RoomType rtype2, bool value = true)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x8E8F20", Offset = "0x8E8F20", VA = "0x8E8F20")]
	public bool CanConnect(Room.RoomType rtype1, Room.RoomType rtype2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x8E8F8C", Offset = "0x8E8F8C", VA = "0x8E8F8C")]
	public RoomConnectionsMatrix()
	{
	}
}
[Token(Token = "0x2000188")]
public class RoomLightProbes : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000422")]
	public class TileProbeData
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tileX;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int tileY;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] probeDataCorners;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] probeDataCenters;

		[Token(Token = "0x4001D45")]
		private const int coefficientsPerProbe = 27;

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x9333A4", Offset = "0x9333A4", VA = "0x9333A4")]
		public TileProbeData(int tileX, int tileY, int numLevels)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x933458", Offset = "0x933458", VA = "0x933458")]
		public void SaveCorner(SphericalHarmonicsL2 probe, int level, int corner)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x933558", Offset = "0x933558", VA = "0x933558")]
		public void SaveCenter(SphericalHarmonicsL2 probe, int level)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x9335AC", Offset = "0x9335AC", VA = "0x9335AC")]
		public SphericalHarmonicsL2 GetCorner(int level, int corner)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x93368C", Offset = "0x93368C", VA = "0x93368C")]
		public SphericalHarmonicsL2 GetCenter(int level)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x9334BC", Offset = "0x9334BC", VA = "0x9334BC")]
		private void Save(float[] dest, int idx, SphericalHarmonicsL2 probe)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x9335C8", Offset = "0x9335C8", VA = "0x9335C8")]
		private SphericalHarmonicsL2 Get(float[] src, int idx)
		{
			return default(SphericalHarmonicsL2);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x9334A8", Offset = "0x9334A8", VA = "0x9334A8")]
		private int GetProbeIndexCorner(int level, int corner)
		{
			return default(int);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x9335A0", Offset = "0x9335A0", VA = "0x9335A0")]
		private int GetProbeIndexCenter(int level)
		{
			return default(int);
		}
	}

	[Serializable]
	[Token(Token = "0x2000423")]
	public class OrientationProbeData
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TileProbeData[] probeTiles;

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x93338C", Offset = "0x93338C", VA = "0x93338C")]
		public OrientationProbeData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000424")]
	public class ProbeData2
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientationProbeData[] probeOrientations;

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x933394", Offset = "0x933394", VA = "0x933394")]
		public ProbeData2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000425")]
	public class ReflectionProbeData
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture[] reflectionTextures;

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x93339C", Offset = "0x93339C", VA = "0x93339C")]
		public ReflectionProbeData()
		{
		}
	}

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ProbeData2[] probeProfiles;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ReflectionProbeData[] reflectionProbeProfiles;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelLightProbeGrid levelProbes;

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x932B98", Offset = "0x932B98", VA = "0x932B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x932E3C", Offset = "0x932E3C", VA = "0x932E3C")]
	public void ApplyProbes(LightingProfile.Profile profile)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x933274", Offset = "0x933274", VA = "0x933274")]
	public void ApplyReflectionProbe(LightingProfile.Profile profile, int angleMod = 0)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x933384", Offset = "0x933384", VA = "0x933384")]
	public RoomLightProbes()
	{
	}
}
[Token(Token = "0x2000189")]
public class RoomPower : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000426")]
	public enum PowerLevel
	{
		[Token(Token = "0x4001D4A")]
		Off,
		[Token(Token = "0x4001D4B")]
		LowPower,
		[Token(Token = "0x4001D4C")]
		FullPower
	}

	[Token(Token = "0x2000427")]
	private class SerializedData
	{
		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PowerLevel powerLevel;

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x934EEC", Offset = "0x934EEC", VA = "0x934EEC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PowerLevel _powerLevel;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool randomPowerLevel;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PowerLevel _initPowerLevel;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _powerFluctuations;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomPowerData data;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PrefabLightmapData prefabLightmapData;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RoomLightProbes lightProbes;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDirty;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isInFluctuation;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fluctuationTime;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool inFlickerMode;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float flickerTime;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 soundOrigin;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource humSound;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float forcedLitTime;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float emPulseTime;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool playEMPulseSound;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Renderer> staticRenderers;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public LightingProfile lightingProfile;

	[Token(Token = "0x170000F3")]
	public PowerLevel powerLevel
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x933B08", Offset = "0x933B08", VA = "0x933B08")]
		get
		{
			return default(PowerLevel);
		}
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x933B24", Offset = "0x933B24", VA = "0x933B24")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public PowerLevel initPowerLevel
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x933C44", Offset = "0x933C44", VA = "0x933C44")]
		get
		{
			return default(PowerLevel);
		}
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x933C14", Offset = "0x933C14", VA = "0x933C14")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public bool PowerFluctuations
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x933C4C", Offset = "0x933C4C", VA = "0x933C4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x933C54", Offset = "0x933C54", VA = "0x933C54")]
		set
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action<RoomPower> onPowerLevelChange
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x933C74", Offset = "0x933C74", VA = "0x933C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B344", Offset = "0x63B344")]
		add
		{
		}
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x933D18", Offset = "0x933D18", VA = "0x933D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B354", Offset = "0x63B354")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action<LightingProfile.Profile> onUpdateLightingProfile
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x933DBC", Offset = "0x933DBC", VA = "0x933DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B364", Offset = "0x63B364")]
		add
		{
		}
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x933E60", Offset = "0x933E60", VA = "0x933E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B374", Offset = "0x63B374")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x933B2C", Offset = "0x933B2C", VA = "0x933B2C")]
	private void SetPowerLevel(PowerLevel newValue, bool playSounds = true)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x933F04", Offset = "0x933F04", VA = "0x933F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x93404C", Offset = "0x93404C", VA = "0x93404C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x934188", Offset = "0x934188", VA = "0x934188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x9344D0", Offset = "0x9344D0", VA = "0x9344D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x9343FC", Offset = "0x9343FC", VA = "0x9343FC")]
	public void UpdateLighting()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x934810", Offset = "0x934810", VA = "0x934810")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x93481C", Offset = "0x93481C", VA = "0x93481C")]
	public void ForceLit(float time)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x9348D0", Offset = "0x9348D0", VA = "0x9348D0")]
	public void EMPulse(float time, bool playPulseSound = true, bool playFlickSound = false)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x9349E4", Offset = "0x9349E4", VA = "0x9349E4")]
	public bool IsUnderEMPulse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x9349F4", Offset = "0x9349F4", VA = "0x9349F4")]
	public bool IsLit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x934A24", Offset = "0x934A24", VA = "0x934A24")]
	public static PowerLevel GetRoomPower(Room room)
	{
		return default(PowerLevel);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x934B04", Offset = "0x934B04", VA = "0x934B04")]
	public static PowerLevel GetRoomPower(Vector3 pos)
	{
		return default(PowerLevel);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x934BE4", Offset = "0x934BE4", VA = "0x934BE4")]
	public static RoomPower GetRoomPowerComponent(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x934CC8", Offset = "0x934CC8", VA = "0x934CC8")]
	public static bool IsInLitRoom(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x934DA8", Offset = "0x934DA8", VA = "0x934DA8")]
	public static bool IsInLitRoom(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x934E78", Offset = "0x934E78", VA = "0x934E78", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x934EF4", Offset = "0x934EF4", VA = "0x934EF4", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x934F84", Offset = "0x934F84", VA = "0x934F84", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x934F88", Offset = "0x934F88", VA = "0x934F88")]
	public RoomPower()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CE84", Offset = "0x62CE84")]
public class RoomPowerData : ScriptableObject
{
	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue flickerHum;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue flickerThud;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue powerIn;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue powerOut;

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x934F9C", Offset = "0x934F9C", VA = "0x934F9C")]
	public RoomPowerData()
	{
	}
}
[Token(Token = "0x200018B")]
public class RoomPrefabList : ScriptableObject
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Room> prefabs;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x934FA4", Offset = "0x934FA4", VA = "0x934FA4")]
	public RoomPrefabList()
	{
	}
}
[Token(Token = "0x200018C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CEC8", Offset = "0x62CEC8")]
public class ShipDeck : ScriptableObject
{
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Room.RoomType[] rooms;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowBigRooms;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minKeys;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxKeys;

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1365C60", Offset = "0x1365C60", VA = "0x1365C60")]
	public ShipDeck()
	{
	}
}
[Token(Token = "0x200018D")]
public class SkyboxWindow : RoomBakeMaterialSwitcher
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Material> skyboxWindowMaterials;

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x136CCB4", Offset = "0x136CCB4", VA = "0x136CCB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x136CE20", Offset = "0x136CE20", VA = "0x136CE20")]
	public static List<Material> GetMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x136CE70", Offset = "0x136CE70", VA = "0x136CE70")]
	public SkyboxWindow()
	{
	}
}
[Token(Token = "0x200018E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CF0C", Offset = "0x62CF0C")]
public class TintedLight : MonoBehaviour
{
	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool getColorFromLight;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x631718", Offset = "0x631718")]
	public Color lightTint;

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x814388", Offset = "0x814388", VA = "0x814388")]
	public TintedLight()
	{
	}
}
[Token(Token = "0x200018F")]
public class VisibilityProbe : MonoBehaviour
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsVisible;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Discovered;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool InFOV;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera[] Cameras;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float farDist;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask RayMask;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastTimeChange;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool flicking;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bounds bounds;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sector occlusionSector;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int probeIndex;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int probeCount;

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x986C2C", Offset = "0x986C2C", VA = "0x986C2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x986D90", Offset = "0x986D90", VA = "0x986D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x986E34", Offset = "0x986E34", VA = "0x986E34")]
	public void SetBoundsHeight(float centerY, float sizeY)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x986EA4", Offset = "0x986EA4", VA = "0x986EA4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x986F10", Offset = "0x986F10", VA = "0x986F10")]
	public void CheckVisibility(Plane[][] frustumPlanes, Vector3 camPos)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x98720C", Offset = "0x98720C", VA = "0x98720C")]
	public bool CheckLoS(Vector3 cameraPos, int numRays = 1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x987480", Offset = "0x987480", VA = "0x987480")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x987514", Offset = "0x987514", VA = "0x987514")]
	public VisibilityProbe()
	{
	}
}
[Token(Token = "0x2000190")]
public class VisibilityProbeManager : Singleton<VisibilityProbeManager>
{
	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<VisibilityProbe> listProbes;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Point, VisibilityProbe> dictProbes;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numProbes;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool getFrustumFromPlugin;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera[] cameras;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Plane[][] frustumPlanes;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 probeSize;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 probeGridOffset;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int curUpdateGroup;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int updateGroups;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x987528", Offset = "0x987528", VA = "0x987528", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x9875AC", Offset = "0x9875AC", VA = "0x9875AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x987890", Offset = "0x987890", VA = "0x987890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x987B34", Offset = "0x987B34", VA = "0x987B34")]
	public void AddProbe(VisibilityProbe probe, Sector occlusionSector)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x987DC0", Offset = "0x987DC0", VA = "0x987DC0")]
	public VisibilityProbe GetProbe(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x9880CC", Offset = "0x9880CC", VA = "0x9880CC")]
	public bool IsVisible(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x988194", Offset = "0x988194", VA = "0x988194")]
	public bool IsInFOV(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x987A80", Offset = "0x987A80", VA = "0x987A80")]
	private void CalculateEyeFrustum(bool leftEye, Plane[] planes)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x98825C", Offset = "0x98825C", VA = "0x98825C")]
	public VisibilityProbeManager()
	{
	}
}
[Token(Token = "0x2000191")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62CF70", Offset = "0x62CF70")]
public class AudioTape : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000428")]
	private class SerializedData
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x8230F0", Offset = "0x8230F0", VA = "0x8230F0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] tapeWheels;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wheelRotSpeed;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rewindLength;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material usedMaterial;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform captionCanvas;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI captionText;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextLogs textLogs;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioTapeData audioTapeData;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string audioLogId;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioClip tapeClip;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool playing;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timeTape;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rewindTime;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 defaultCanvasScale;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float textHeight;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float textScrollSpeed;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 textStartPos;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Triggable triggable;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> exclusionLogs;

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x821EC4", Offset = "0x821EC4", VA = "0x821EC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x821F74", Offset = "0x821F74", VA = "0x821F74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x82230C", Offset = "0x82230C", VA = "0x82230C")]
	private void ClearExclusionList()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x822388", Offset = "0x822388", VA = "0x822388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x822458", Offset = "0x822458", VA = "0x822458")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x822528", Offset = "0x822528", VA = "0x822528")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x822AA8", Offset = "0x822AA8", VA = "0x822AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x822F80", Offset = "0x822F80", VA = "0x822F80", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x822F88", Offset = "0x822F88", VA = "0x822F88", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x822F90", Offset = "0x822F90", VA = "0x822F90", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x82300C", Offset = "0x82300C", VA = "0x82300C")]
	public AudioTape()
	{
	}
}
[Token(Token = "0x2000192")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62CFD4", Offset = "0x62CFD4")]
public class AudioTapeData : ScriptableObject
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] tapeClips;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x822A14", Offset = "0x822A14", VA = "0x822A14")]
	public AudioClip GetById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x8230F8", Offset = "0x8230F8", VA = "0x8230F8")]
	public AudioTapeData()
	{
	}
}
[Token(Token = "0x2000193")]
public class BodyBag : MonoBehaviour
{
	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeIdleMin;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeIdleMax;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float chanceBreath;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBreathMin;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBreathMax;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float chanceSpasm;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeSpasmMin;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeSpasmMax;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int animBreath;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int animSpasm;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int timerTask;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x829AEC", Offset = "0x829AEC", VA = "0x829AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x829BEC", Offset = "0x829BEC", VA = "0x829BEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x829CA8", Offset = "0x829CA8", VA = "0x829CA8")]
	private void OnTimer()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x829F4C", Offset = "0x829F4C", VA = "0x829F4C")]
	public BodyBag()
	{
	}
}
[Token(Token = "0x2000194")]
public class ConsoleBridge : FSMComponent, IGameSerializable
{
	[Token(Token = "0x2000429")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State StandBy;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Jumped;

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x853D00", Offset = "0x853D00", VA = "0x853D00")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200042A")]
	private class SerializedData
	{
		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool engaged;

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x853D08", Offset = "0x853D08", VA = "0x853D08")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBD8", Offset = "0x62EBD8")]
	private sealed class <Warp_co>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConsoleBridge <>4__this;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Material> <skyboxMats>5__2;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startAlarm>5__3;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <oldTime>5__4;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x853C90", Offset = "0x853C90", VA = "0x853C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x853CF8", Offset = "0x853CF8", VA = "0x853CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x853360", Offset = "0x853360", VA = "0x853360")]
		[DebuggerHidden]
		public <Warp_co>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x85338C", Offset = "0x85338C", VA = "0x85338C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x853390", Offset = "0x853390", VA = "0x853390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x853C98", Offset = "0x853C98", VA = "0x853C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBE8", Offset = "0x62EBE8")]
	private sealed class <WarpLight_co>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConsoleBridge <>4__this;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <cycles>5__2;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x8532F0", Offset = "0x8532F0", VA = "0x8532F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x853358", Offset = "0x853358", VA = "0x853358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x85311C", Offset = "0x85311C", VA = "0x85311C")]
		[DebuggerHidden]
		public <WarpLight_co>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x853148", Offset = "0x853148", VA = "0x853148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x85314C", Offset = "0x85314C", VA = "0x85314C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x8532F8", Offset = "0x8532F8", VA = "0x8532F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631750", Offset = "0x631750")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiRoot;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject statusMode;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject jumpMode;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject jumpFinishedMode;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject statusBarError;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject navStatusError;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject navStatusOK;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject driveStatusError;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject driveStatusOK;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631788", Offset = "0x631788")]
	public AudioSource humSound;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6317C0", Offset = "0x6317C0")]
	public AudioSource warpSound;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve warpTransition;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float warpSpeed;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource warpAlarmSound;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource warpWarningSound;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource warpCountdownSound;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Light warningLight;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6317F8", Offset = "0x6317F8")]
	public DraggableLinear lever;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float activationRange;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private RoomPower rPower;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x631830", Offset = "0x631830")]
	public bool _testEngage;

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x83657C", Offset = "0x83657C", VA = "0x83657C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x8365F0", Offset = "0x8365F0", VA = "0x8365F0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x836794", Offset = "0x836794", VA = "0x836794", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x836900", Offset = "0x836900", VA = "0x836900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x836AC0", Offset = "0x836AC0", VA = "0x836AC0")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x836B60", Offset = "0x836B60", VA = "0x836B60")]
	private void StandBy_Enter()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x836C0C", Offset = "0x836C0C", VA = "0x836C0C")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x836D30", Offset = "0x836D30", VA = "0x836D30")]
	private void Jumped_Enter()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x836E78", Offset = "0x836E78", VA = "0x836E78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B384", Offset = "0x63B384")]
	private IEnumerator Warp_co()
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x836EF4", Offset = "0x836EF4", VA = "0x836EF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B3E8", Offset = "0x63B3E8")]
	private IEnumerator WarpLight_co()
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x836F70", Offset = "0x836F70", VA = "0x836F70")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x8372BC", Offset = "0x8372BC", VA = "0x8372BC")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x837514", Offset = "0x837514", VA = "0x837514")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x8375E4", Offset = "0x8375E4", VA = "0x8375E4")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x837680", Offset = "0x837680", VA = "0x837680", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x837770", Offset = "0x837770", VA = "0x837770", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x837840", Offset = "0x837840", VA = "0x837840", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x837844", Offset = "0x837844", VA = "0x837844")]
	public ConsoleBridge()
	{
	}
}
[Token(Token = "0x2000195")]
public class ConsoleJumpDrive : FSMComponent, IGameSerializable
{
	[Token(Token = "0x200042D")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State NoFuel;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Engaged;

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x855518", Offset = "0x855518", VA = "0x855518")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200042E")]
	private class SerializedData
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool engaged;

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x855338", Offset = "0x855338", VA = "0x855338")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631874", Offset = "0x631874")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiRoot;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject uiNoFuel;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject uiEngaged;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI statusText;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject statusBarError;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image[] fuelCellOKIcons;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] fuelCellErrorIcons;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6318AC", Offset = "0x6318AC")]
	public AudioSource humSound;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6318E4", Offset = "0x6318E4")]
	public DraggableLinear lever;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FuelContainer[] fuelContainers;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string fuelCellItem;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public JumpDrive jumpDrive;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float activationRange;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RoomPower rPower;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isFuelReady;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool wasActivated;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63191C", Offset = "0x63191C")]
	public bool _testEngage;

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x853D10", Offset = "0x853D10", VA = "0x853D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x853D84", Offset = "0x853D84", VA = "0x853D84", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x85402C", Offset = "0x85402C", VA = "0x85402C", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x85429C", Offset = "0x85429C", VA = "0x85429C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x85445C", Offset = "0x85445C", VA = "0x85445C")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x8544FC", Offset = "0x8544FC", VA = "0x8544FC")]
	private void NoFuel_Enter()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x8545A8", Offset = "0x8545A8", VA = "0x8545A8")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x8548FC", Offset = "0x8548FC", VA = "0x8548FC")]
	private void Engaged_Enter()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x854AA0", Offset = "0x854AA0", VA = "0x854AA0")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x854DEC", Offset = "0x854DEC", VA = "0x854DEC")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x85501C", Offset = "0x85501C", VA = "0x85501C")]
	private void OnFuelContainerChanged()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x8550E4", Offset = "0x8550E4", VA = "0x8550E4")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x8551A8", Offset = "0x8551A8", VA = "0x8551A8")]
	private void OnPostDeserialization()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x8551AC", Offset = "0x8551AC", VA = "0x8551AC")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x855248", Offset = "0x855248", VA = "0x855248", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x855340", Offset = "0x855340", VA = "0x855340", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x855408", Offset = "0x855408", VA = "0x855408", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x85540C", Offset = "0x85540C", VA = "0x85540C")]
	public ConsoleJumpDrive()
	{
	}
}
[Token(Token = "0x2000196")]
public class ConsoleShuttle : FSMComponent
{
	[Token(Token = "0x200042F")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State StandBy;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Engaged;

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x8560C4", Offset = "0x8560C4", VA = "0x8560C4")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631960", Offset = "0x631960")]
	public GameObject uiRoot;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject statusMode;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject statusBarError;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject statusBarOK;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dockDoorError;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject dockDoorOK;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject statusTxtError;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject statusTxtOK;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIScreenToggle infoConsoleToggleFX;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject infoConsoleDiagramOff;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject infoConsoleDiagramOn;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631998", Offset = "0x631998")]
	public AudioSource humSound;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6319D0", Offset = "0x6319D0")]
	public DraggableLinear lever;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float activationRange;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x631A08", Offset = "0x631A08")]
	public bool _testEngage;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x855520", Offset = "0x855520", VA = "0x855520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x855594", Offset = "0x855594", VA = "0x855594", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x855670", Offset = "0x855670", VA = "0x855670", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x85574C", Offset = "0x85574C", VA = "0x85574C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x8557E8", Offset = "0x8557E8", VA = "0x8557E8")]
	private void StandBy_Enter()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x855880", Offset = "0x855880", VA = "0x855880")]
	private void RefreshStatus()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x855978", Offset = "0x855978", VA = "0x855978")]
	private void Engaged_Enter()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x855B08", Offset = "0x855B08", VA = "0x855B08")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x855EA4", Offset = "0x855EA4", VA = "0x855EA4")]
	private void OnLeverSnap(DraggableLinear draggable)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x855F6C", Offset = "0x855F6C", VA = "0x855F6C")]
	public void TestEngage()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x85603C", Offset = "0x85603C", VA = "0x85603C")]
	public ConsoleShuttle()
	{
	}
}
[Token(Token = "0x2000197")]
public class DisableOnPowerOff : MonoBehaviour
{
	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomPower rPower;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource[] audios;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour[] behaviors;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] renderers;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] objects;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x871CEC", Offset = "0x871CEC", VA = "0x871CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x871F90", Offset = "0x871F90", VA = "0x871F90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x87206C", Offset = "0x87206C", VA = "0x87206C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x872148", Offset = "0x872148", VA = "0x872148")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x871E1C", Offset = "0x871E1C", VA = "0x871E1C")]
	private void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x872184", Offset = "0x872184", VA = "0x872184")]
	public DisableOnPowerOff()
	{
	}
}
[Token(Token = "0x2000198")]
[SelectionBase]
public class Door : FSMComponent, IGameSerializable
{
	[Token(Token = "0x2000430")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Closed;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Open;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Opening;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Closing;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Locked;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Dragged;

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x877A70", Offset = "0x877A70", VA = "0x877A70")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000431")]
	private class SerializedData
	{
		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool open;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool locked;

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x8775CC", Offset = "0x8775CC", VA = "0x8775CC")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EBF8", Offset = "0x62EBF8")]
	private sealed class <PlayMalfunction_co>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool open;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <sparksPos>5__2;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <midOpenPosRight>5__3;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <midOpenPosLeft>5__4;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <progress>5__5;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x878410", Offset = "0x878410", VA = "0x878410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x878478", Offset = "0x878478", VA = "0x878478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x8771CC", Offset = "0x8771CC", VA = "0x8771CC")]
		[DebuggerHidden]
		public <PlayMalfunction_co>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x877A74", Offset = "0x877A74", VA = "0x877A74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x877A78", Offset = "0x877A78", VA = "0x877A78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x878418", Offset = "0x878418", VA = "0x878418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631A4C", Offset = "0x631A4C")]
	public Transform leftPiece;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightPiece;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Triggable leftPanel;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Triggable rightPanel;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Interactable[] dragHandles;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Interactable[] rightDragHandles;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Interactable[] leftDragHandles;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631A84", Offset = "0x631A84")]
	private Vector3 closedPosLeft;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 closedPosRight;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 openPosLeft;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 openPosRight;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float openDistance;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float openSpeed;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float closeSpeed;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float openFactor;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631ABC", Offset = "0x631ABC")]
	public AudioCue openSoundLeft;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue openSoundRight;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue closeSoundLeft;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioCue closeSoundRight;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631AF4", Offset = "0x631AF4")]
	public AudioClip dragStartHapticClip;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip hapticsClip;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float dragPulseInterval;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float hapticsDragPulsesStrength;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float maxHandInteractionDistance;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioCue busyErrorSound;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631B2C", Offset = "0x631B2C")]
	public float malfunctionChance;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x631B64", Offset = "0x631B64")]
	public Vector2 malfunctionCheckTimeMinMax;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform sparksFront;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform sparksBack;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject sparksPrefab;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioCue malfunctionSound;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioCue malfunctionCloseSound;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float malfunctionOffset;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631B88", Offset = "0x631B88")]
	public bool startOpen;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	public bool addToNavMesh;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private NavMeshLinkInstance navLink;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private NavMeshObstacle navObstacle;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform doorLockLeftAttach;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform doorLockRightAttach;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private DoorLock doorLock;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool doorLockLeft;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool doorLockRight;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float forceOpenBusyTime;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Portal portal;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int malfunctionCheckTask;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool usingGrabBtn;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float rateOffset;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float posRate;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float dragStartRate;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Interactable hoverHandle;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Hand draggingHand;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 handStartInteractionPos;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float lastDragPulse;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float closeCooldownTime;

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x873010", Offset = "0x873010", VA = "0x873010")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x873448", Offset = "0x873448", VA = "0x873448")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x873E20", Offset = "0x873E20", VA = "0x873E20")]
	private void OnFinishedMapGeneration()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x873EF8", Offset = "0x873EF8", VA = "0x873EF8", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x874000", Offset = "0x874000", VA = "0x874000", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x874220", Offset = "0x874220", VA = "0x874220")]
	private void Closed_Enter()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x8743DC", Offset = "0x8743DC", VA = "0x8743DC")]
	private void Closed_Exit()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x874448", Offset = "0x874448", VA = "0x874448")]
	private void MalfunctionCheck()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x874708", Offset = "0x874708", VA = "0x874708")]
	private void Open_Enter()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x87482C", Offset = "0x87482C", VA = "0x87482C")]
	private void Opening_Enter()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x8750A8", Offset = "0x8750A8", VA = "0x8750A8")]
	private void Opening_Update()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x875270", Offset = "0x875270", VA = "0x875270")]
	private void Closing_Enter()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x8755A4", Offset = "0x8755A4", VA = "0x8755A4")]
	private void Closing_Update()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x87546C", Offset = "0x87546C", VA = "0x87546C")]
	private void PlayClosingSound()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x875738", Offset = "0x875738", VA = "0x875738")]
	private void Dragged_Enter()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x87585C", Offset = "0x87585C", VA = "0x87585C")]
	private void Dragged_Update()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x875868", Offset = "0x875868", VA = "0x875868")]
	private void Dragged_Exit()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x8758CC", Offset = "0x8758CC", VA = "0x8758CC")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x876800", Offset = "0x876800", VA = "0x876800")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x876290", Offset = "0x876290", VA = "0x876290")]
	private void EndDragging(Hand hand)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x87604C", Offset = "0x87604C", VA = "0x87604C")]
	private float GetLinearRate(Transform hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x876644", Offset = "0x876644", VA = "0x876644")]
	private float UpdateLinearMapping(Transform hand, out bool snap)
	{
		return default(float);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x876720", Offset = "0x876720", VA = "0x876720")]
	private void PlayDragPulses(float newRate, Hand hand)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x873D40", Offset = "0x873D40", VA = "0x873D40")]
	public bool IsOpen(bool validIfOpening = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x876918", Offset = "0x876918", VA = "0x876918")]
	public void Open()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x873BA8", Offset = "0x873BA8", VA = "0x873BA8")]
	private void SetOpen()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x8769C0", Offset = "0x8769C0", VA = "0x8769C0")]
	private void SetClose()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x876A88", Offset = "0x876A88", VA = "0x876A88")]
	public void Close(bool playSound = false, bool checkCooldown = false)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x876B88", Offset = "0x876B88", VA = "0x876B88")]
	public bool IsLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x876C14", Offset = "0x876C14", VA = "0x876C14")]
	public void SetBusyOpen()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x876C3C", Offset = "0x876C3C", VA = "0x876C3C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63B44C", Offset = "0x63B44C")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x876C80", Offset = "0x876C80", VA = "0x876C80")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x873930", Offset = "0x873930", VA = "0x873930")]
	private void SetNavLink()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x874DCC", Offset = "0x874DCC", VA = "0x874DCC")]
	public Vector3 GetDoorCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x876C84", Offset = "0x876C84", VA = "0x876C84")]
	public void AddDoorLock(DoorLock dlock, bool rightSide)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x876FCC", Offset = "0x876FCC", VA = "0x876FCC")]
	private void OnDoorLockUnlock()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x877164", Offset = "0x877164", VA = "0x877164")]
	public DoorLock GetDoorLock()
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x87716C", Offset = "0x87716C", VA = "0x87716C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63B484", Offset = "0x63B484")]
	private void PlayMalfunctionOpen()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x87719C", Offset = "0x87719C", VA = "0x87719C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63B4BC", Offset = "0x63B4BC")]
	private void PlayMalfunction()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x874678", Offset = "0x874678", VA = "0x874678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B4F4", Offset = "0x63B4F4")]
	private IEnumerator PlayMalfunction_co(bool open)
	{
		return null;
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x8771F8", Offset = "0x8771F8", VA = "0x8771F8")]
	private Vector3 PlaySparks()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x8773E8", Offset = "0x8773E8", VA = "0x8773E8", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x877660", Offset = "0x877660", VA = "0x877660", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x87791C", Offset = "0x87791C", VA = "0x87791C", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x877998", Offset = "0x877998", VA = "0x877998")]
	public Door()
	{
	}
}
[Token(Token = "0x2000199")]
public class DoorLock : FSMComponent, IGameSerializable
{
	[Token(Token = "0x2000433")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Locked;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State UnfoldingHandle;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Unfolded;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Unlocked;

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x8798D8", Offset = "0x8798D8", VA = "0x8798D8")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000434")]
	private class SerializedData
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stateName;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x87969C", Offset = "0x87969C", VA = "0x87969C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631BC0", Offset = "0x631BC0")]
	public ItemReceptor keyReceiver;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DraggableLinear handle;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftPart;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform wallConnectors;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631BF8", Offset = "0x631BF8")]
	public Renderer[] renderers;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material redMaterial;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material greenMaterial;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631C30", Offset = "0x631C30")]
	public float unlockSpeed;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float unlockDistance;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float handleUnfoldProgress;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float unlockProgress;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 unlockStartPos;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 unlockEndPos;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 unlockLeftBarStartPos;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 unlockLeftBarEndPos;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631C68", Offset = "0x631C68")]
	public AudioCue handleSound;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue unlockBarsSound;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631CA0", Offset = "0x631CA0")]
	public Color minimapColor;

	[Token(Token = "0x14000031")]
	public event Action onUnlock
	{
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x876F28", Offset = "0x876F28", VA = "0x876F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B558", Offset = "0x63B558")]
		add
		{
		}
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x874F08", Offset = "0x874F08", VA = "0x874F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B568", Offset = "0x63B568")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x878774", Offset = "0x878774", VA = "0x878774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x8787E4", Offset = "0x8787E4", VA = "0x8787E4", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x878918", Offset = "0x878918", VA = "0x878918", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x878A48", Offset = "0x878A48", VA = "0x878A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x878B20", Offset = "0x878B20", VA = "0x878B20")]
	private void Locked_Enter()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x878CD8", Offset = "0x878CD8", VA = "0x878CD8")]
	private void UnfoldingHandle_Enter()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x878D30", Offset = "0x878D30", VA = "0x878D30")]
	private void UnfoldingHandle_Update()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x878EF8", Offset = "0x878EF8", VA = "0x878EF8")]
	private void Unfolded_Enter()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x878F64", Offset = "0x878F64", VA = "0x878F64")]
	private void Unlocked_Enter()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x879224", Offset = "0x879224", VA = "0x879224")]
	private void Unlocked_Update()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x879550", Offset = "0x879550", VA = "0x879550")]
	private void OnKeyInserted(Item key)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x8795E8", Offset = "0x8795E8", VA = "0x8795E8")]
	private void OnHandleSnap(DraggableLinear linear)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x874FAC", Offset = "0x874FAC", VA = "0x874FAC")]
	public void Unlock(bool skipAnimation = false)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x8775D4", Offset = "0x8775D4", VA = "0x8775D4")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x878BE4", Offset = "0x878BE4", VA = "0x878BE4")]
	private void SetLights()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x879618", Offset = "0x879618", VA = "0x879618", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x8796A4", Offset = "0x8796A4", VA = "0x8796A4", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x879844", Offset = "0x879844", VA = "0x879844", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x879848", Offset = "0x879848", VA = "0x879848")]
	public DoorLock()
	{
	}
}
[Token(Token = "0x200019A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D028", Offset = "0x62D028")]
public class DraggableLinearStartPosition : MonoBehaviour
{
	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float openChance;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x631CE8", Offset = "0x631CE8")]
	public Vector2 openRate;

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x879AF4", Offset = "0x879AF4", VA = "0x879AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x879BC4", Offset = "0x879BC4", VA = "0x879BC4")]
	public DraggableLinearStartPosition()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D08C", Offset = "0x62D08C")]
public class ExitDoor : MonoBehaviour
{
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x87D8F8", Offset = "0x87D8F8", VA = "0x87D8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x87D9DC", Offset = "0x87D9DC", VA = "0x87D9DC")]
	private void OnTriggered(Hand hand)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x87D9E0", Offset = "0x87D9E0", VA = "0x87D9E0")]
	public ExitDoor()
	{
	}
}
[Token(Token = "0x200019C")]
public class Fabricator : FSMComponent, IGameSerializable
{
	[Token(Token = "0x2000435")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Selection;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State WaitingMaterials;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State RecyclingMaterials;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Printing;

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x884574", Offset = "0x884574", VA = "0x884574")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000436")]
	private class SerializedData
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftRecipes.IngredientList ingredients;

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x8843E0", Offset = "0x8843E0", VA = "0x8843E0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631D10", Offset = "0x631D10")]
	public Transform printerRail;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform printerHead;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631D48", Offset = "0x631D48")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject uiRoot;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UICraftSelector selectionUI;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UICraftBlueprint blueprintUI;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIModalText modalText;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631D80", Offset = "0x631D80")]
	public CraftRecipes recipes;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631DB8", Offset = "0x631DB8")]
	public AudioSource humSound;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource chimeSound;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631DF0", Offset = "0x631DF0")]
	public Transform tutoTrayRef;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform tutoPanelRef;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631E28", Offset = "0x631E28")]
	public float activationRange;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RoomPower rPower;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FabricatorPrinterHead printerHeadFX;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FabricatorMaterializer materializer;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CraftRecipes.Blueprint blueprint;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CraftRecipes.IngredientList ownedIngredients;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numUnlockedBPs;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x881E34", Offset = "0x881E34", VA = "0x881E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x881F10", Offset = "0x881F10", VA = "0x881F10", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x8822E8", Offset = "0x8822E8", VA = "0x8822E8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x882688", Offset = "0x882688", VA = "0x882688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x8828C4", Offset = "0x8828C4", VA = "0x8828C4")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x882BB4", Offset = "0x882BB4", VA = "0x882BB4")]
	private void Selection_Enter()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x882DA4", Offset = "0x882DA4", VA = "0x882DA4")]
	private void Selection_OnTimer()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x882E4C", Offset = "0x882E4C", VA = "0x882E4C")]
	private void Selection_Exit()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x882F1C", Offset = "0x882F1C", VA = "0x882F1C")]
	private void OnBlueprintSelection(CraftRecipes.Blueprint bp)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x882FE4", Offset = "0x882FE4", VA = "0x882FE4")]
	private void WaitingMaterials_Enter()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x8830E0", Offset = "0x8830E0", VA = "0x8830E0")]
	private void OnStartRecycling(Item sourceItem)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x8832E4", Offset = "0x8832E4", VA = "0x8832E4")]
	private void OnCraftCancel()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x88338C", Offset = "0x88338C", VA = "0x88338C")]
	private void OnCraftFabricate()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x883434", Offset = "0x883434", VA = "0x883434")]
	private void RecyclingMaterials_Enter()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x88363C", Offset = "0x88363C", VA = "0x88363C")]
	private void RecyclingMaterials_Update()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x883678", Offset = "0x883678", VA = "0x883678")]
	private void OnRecycledObject(Item sourceItem)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x88382C", Offset = "0x88382C", VA = "0x88382C")]
	private void RecyclingMaterials_Exit()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x883868", Offset = "0x883868", VA = "0x883868")]
	private void Printing_Enter()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x883D38", Offset = "0x883D38", VA = "0x883D38")]
	private void Printing_Update()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x883D74", Offset = "0x883D74", VA = "0x883D74")]
	private void OnFinishSpawning(GameObject obj)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x883E0C", Offset = "0x883E0C", VA = "0x883E0C")]
	private void Printing_Exit()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x883E48", Offset = "0x883E48", VA = "0x883E48")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x884130", Offset = "0x884130", VA = "0x884130")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x8842AC", Offset = "0x8842AC", VA = "0x8842AC")]
	private void OnVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x884364", Offset = "0x884364", VA = "0x884364", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x8843E8", Offset = "0x8843E8", VA = "0x8843E8", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x884470", Offset = "0x884470", VA = "0x884470", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x884474", Offset = "0x884474", VA = "0x884474")]
	public Fabricator()
	{
	}
}
[Token(Token = "0x200019D")]
public class FabricatorMaterializer : MonoBehaviour
{
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask acquisitionLayer;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem acquisitionModeFX;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fabricateFXMaterial;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float centerFloatSpeed;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider acquisitionArea;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _acquisitionMode;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Rigidbody> processingObjs;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody spawningObj;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSpawning;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<Item> onStartProcessing;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<Item> onProcessedObject;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<GameObject> onSpawnedObject;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 cutEffectPos;

	[Token(Token = "0x170000F6")]
	public bool AcquisitionMode
	{
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x884578", Offset = "0x884578", VA = "0x884578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x882AEC", Offset = "0x882AEC", VA = "0x882AEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x884580", Offset = "0x884580", VA = "0x884580")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x884638", Offset = "0x884638", VA = "0x884638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x884754", Offset = "0x884754", VA = "0x884754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x884870", Offset = "0x884870", VA = "0x884870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x8848F8", Offset = "0x8848F8", VA = "0x8848F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x884E80", Offset = "0x884E80", VA = "0x884E80")]
	private void OnTriggerEnter(Collider colObj)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x885184", Offset = "0x885184", VA = "0x885184")]
	private void OnTriggerStay(Collider colObj)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x884E84", Offset = "0x884E84", VA = "0x884E84")]
	private void ProcessObject(Collider colObj)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x885188", Offset = "0x885188", VA = "0x885188")]
	private void OnObjectProcessed(GameObject obj)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x883A8C", Offset = "0x883A8C", VA = "0x883A8C")]
	public void SpawnObject(Rigidbody rb)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x8852B0", Offset = "0x8852B0", VA = "0x8852B0")]
	private void OnFinishedFabrication(GameObject obj)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x883794", Offset = "0x883794", VA = "0x883794")]
	public bool IsProcessing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x883194", Offset = "0x883194", VA = "0x883194")]
	public Vector3 GetCutPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x8854A4", Offset = "0x8854A4", VA = "0x8854A4")]
	private void OnVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x885504", Offset = "0x885504", VA = "0x885504")]
	public FabricatorMaterializer()
	{
	}
}
[Token(Token = "0x200019E")]
public class FabricatorPrinterHead : FSMComponent
{
	[Token(Token = "0x2000437")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Ready;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Printing;

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xAAFF74", Offset = "0xAAFF74", VA = "0xAAFF74")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC08", Offset = "0x62EC08")]
	private sealed class <WarmParticles_co>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FabricatorPrinterHead <>4__this;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xAAFF04", Offset = "0xAAFF04", VA = "0xAAFF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xAAFF6C", Offset = "0xAAFF6C", VA = "0xAAFF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xAAFDFC", Offset = "0xAAFDFC", VA = "0xAAFDFC")]
		[DebuggerHidden]
		public <WarmParticles_co>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xAAFE28", Offset = "0xAAFE28", VA = "0xAAFE28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xAAFE2C", Offset = "0xAAFE2C", VA = "0xAAFE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xAAFF0C", Offset = "0xAAFF0C", VA = "0xAAFF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631E70", Offset = "0x631E70")]
	public Transform printRail;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform printHead;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform printHeadPoint;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631EA8", Offset = "0x631EA8")]
	public Vector2 railRangeY;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 headRange;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 headAngleRange;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631EE0", Offset = "0x631EE0")]
	public float railOfflinePos;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float railReadyPos;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float headOfflinePos;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float headReadyPos;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float headRestingAngle;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631F18", Offset = "0x631F18")]
	public float railSlowSpeed;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float railFastSpeed;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float headSlowSpeed;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float headFastSpeed;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float headSlowRotSpeed;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float headFastRotSpeed;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631F50", Offset = "0x631F50")]
	public float railPrintFreq;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float headPrintFreq;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float beamFXFreq;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631F88", Offset = "0x631F88")]
	public AudioSource printingAudio;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue moveHeadAudio;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631FC0", Offset = "0x631FC0")]
	public LineRenderer beamFX;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem headParticles;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem craftParticles;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 centerPos;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Rigidbody centerObj;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Light printHeadLight;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 railPos;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 headPos;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion headRot;

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x885590", Offset = "0x885590", VA = "0x885590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x885600", Offset = "0x885600", VA = "0x885600")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x88571C", Offset = "0x88571C", VA = "0x88571C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B578", Offset = "0x63B578")]
	private IEnumerator WarmParticles_co()
	{
		return null;
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x885798", Offset = "0x885798", VA = "0x885798")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x88590C", Offset = "0x88590C", VA = "0x88590C")]
	private void Offline_Update()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x885AC8", Offset = "0x885AC8", VA = "0x885AC8")]
	private void Ready_Enter()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x885C3C", Offset = "0x885C3C", VA = "0x885C3C")]
	private void Ready_Update()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x885DF8", Offset = "0x885DF8", VA = "0x885DF8")]
	private void Printing_Enter()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x885F54", Offset = "0x885F54", VA = "0x885F54")]
	private void Printing_Update()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x886584", Offset = "0x886584", VA = "0x886584")]
	private void Printing_Exit()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x882988", Offset = "0x882988", VA = "0x882988")]
	public void SetOnline(bool online)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x8834D8", Offset = "0x8834D8", VA = "0x8834D8")]
	public void SetPrinting(bool printing)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x88665C", Offset = "0x88665C", VA = "0x88665C")]
	public FabricatorPrinterHead()
	{
	}
}
[Token(Token = "0x200019F")]
public class FuelContainer : MonoBehaviour
{
	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x631FF8", Offset = "0x631FF8")]
	public ItemReceptor receptor;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableLinear handle;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632030", Offset = "0x632030")]
	public Item fuelCellPrefab;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Item fuelCellSpentPrefab;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632068", Offset = "0x632068")]
	public float spawnChance;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float spawnSpentChance;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float openChanceEmpty;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float openChanceFull;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canStartOpen;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6320A0", Offset = "0x6320A0")]
	public bool consumeFuel;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onFuelInserted;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int randStateSeed;

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xAC409C", Offset = "0xAC409C", VA = "0xAC409C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xAC40CC", Offset = "0xAC40CC", VA = "0xAC40CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xAC419C", Offset = "0xAC419C", VA = "0xAC419C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xAC426C", Offset = "0xAC426C", VA = "0xAC426C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xAC43F4", Offset = "0xAC43F4", VA = "0xAC43F4")]
	private void OnHandleSnap(DraggableLinear linear)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xAC44C8", Offset = "0xAC44C8", VA = "0xAC44C8")]
	public Item GetInsertedItem()
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xAC4574", Offset = "0xAC4574", VA = "0xAC4574")]
	public FuelContainer()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ElectricalLeak : FSMComponent, IHazard
{
	[Token(Token = "0x2000439")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State FarAway;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Active;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x87B52C", Offset = "0x87B52C", VA = "0x87B52C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float activationRadius;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cooldownMinTime;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float cooldownMaxTime;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue soundClipSource;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue soundClipTarget;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource soundSource;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource soundTarget;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Lightning lightningFX;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> targetPositions;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DamageCapsule damage;

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x87A5F8", Offset = "0x87A5F8", VA = "0x87A5F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x87A668", Offset = "0x87A668", VA = "0x87A668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x87AA58", Offset = "0x87AA58", VA = "0x87AA58")]
	private void FarAway_Update()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x87ABB4", Offset = "0x87ABB4", VA = "0x87ABB4")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x87AC34", Offset = "0x87AC34", VA = "0x87AC34")]
	private void Cooldown_OnTimer()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x87AD0C", Offset = "0x87AD0C", VA = "0x87AD0C")]
	private void Active_Enter()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x87B108", Offset = "0x87B108", VA = "0x87B108")]
	private void Active_Exit()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x87B268", Offset = "0x87B268", VA = "0x87B268")]
	private void Active_OnTimer()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x87AF80", Offset = "0x87AF80", VA = "0x87AF80")]
	private Vector3 PositionBeam()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x87B404", Offset = "0x87B404", VA = "0x87B404", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x87B408", Offset = "0x87B408", VA = "0x87B408", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x87B494", Offset = "0x87B494", VA = "0x87B494")]
	public ElectricalLeak()
	{
	}
}
[Token(Token = "0x20001A1")]
public class HazardLeak : FSMComponent, IHazard
{
	[Token(Token = "0x200043A")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State FarAway;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Active;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x89264C", Offset = "0x89264C", VA = "0x89264C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float activationRadius;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float activeMinTime;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float activeMaxTime;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cooldownMinTime;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cooldownMaxTime;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem fx;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue soundClip;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource sound;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DamageCapsule damage;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Light light;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lightIntensity;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x891AB8", Offset = "0x891AB8", VA = "0x891AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x891BC0", Offset = "0x891BC0", VA = "0x891BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x891CF0", Offset = "0x891CF0", VA = "0x891CF0")]
	private void FarAway_Update()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x891E50", Offset = "0x891E50", VA = "0x891E50")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x891EA8", Offset = "0x891EA8", VA = "0x891EA8")]
	private void Cooldown_OnTimer()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x891F44", Offset = "0x891F44", VA = "0x891F44")]
	private void Active_Enter()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x8920CC", Offset = "0x8920CC", VA = "0x8920CC")]
	private void Active_Exit()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x892220", Offset = "0x892220", VA = "0x892220")]
	private void Active_Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x89235C", Offset = "0x89235C", VA = "0x89235C")]
	private void Active_OnTimer()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x8924FC", Offset = "0x8924FC", VA = "0x8924FC", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x892500", Offset = "0x892500", VA = "0x892500", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x8925C0", Offset = "0x8925C0", VA = "0x8925C0")]
	public HazardLeak()
	{
	}
}
[Token(Token = "0x20001A2")]
public class HazardManager : Singleton<HazardManager>
{
	[Serializable]
	[Token(Token = "0x200043B")]
	public class HazardSpawnInfo
	{
		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefGameObject hazardPrefab;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomMarker.Tag roomMarkerTag;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float weight;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxInLevel;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weightBonusWhenPlaced;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightBonusDark;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float weightBonusInfestated;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x8931E4", Offset = "0x8931E4", VA = "0x8931E4")]
		public HazardSpawnInfo()
		{
		}
	}

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HazardSpawnInfo[] hazardSpawnPrefabs;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numHazard;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Room, List<IHazard>> roomHazards;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x892654", Offset = "0x892654", VA = "0x892654", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x8926D8", Offset = "0x8926D8", VA = "0x8926D8")]
	public bool HasHazards(Room r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x89276C", Offset = "0x89276C", VA = "0x89276C")]
	public bool HasActiveHazards(Room r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x892914", Offset = "0x892914", VA = "0x892914")]
	public GameObject PlaceHazard(Room room, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x892C80", Offset = "0x892C80", VA = "0x892C80")]
	public GameObject PlaceHazard(Room room, GameObject prefab, RoomMarker.Tag markerTag)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x892920", Offset = "0x892920", VA = "0x892920")]
	private GameObject PlaceHazard(Room room, GameObject prefab, RoomMarker.Tag markerTag, bool useMarker = true)
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x892C88", Offset = "0x892C88", VA = "0x892C88")]
	public int PlaceHazards()
	{
		return default(int);
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x89318C", Offset = "0x89318C", VA = "0x89318C")]
	public HazardManager()
	{
	}
}
[Token(Token = "0x20001A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D0F0", Offset = "0x62D0F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D0F0", Offset = "0x62D0F0")]
public class HazardVentTendril : FSMComponent, IHazard, IGameSerializable
{
	[Token(Token = "0x200043C")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Cooldown;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Curious;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State LashOutRecoil;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State LashOutAttack;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State LashOutRecovery;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Death;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Disappear;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x8967FC", Offset = "0x8967FC", VA = "0x8967FC")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200043D")]
	private class SerializedData
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool openVent;

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x896500", Offset = "0x896500", VA = "0x896500")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Tendril tendril;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float activationRadius;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer mainBody;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6320D8", Offset = "0x6320D8")]
	public float steerMaxForce;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float steerMass;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float tendrilNormalApproachSpeed;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632110", Offset = "0x632110")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x632110", Offset = "0x632110")]
	public Vector2 curiousTargetChangeTime;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float curiousTargetMoveSpeed;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632170", Offset = "0x632170")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x632170", Offset = "0x632170")]
	public Vector2 lashOutRecoilTime;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float lashOutSpeed;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve lashOutCurve;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int lashOutDamage;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float lashOutDamageRadius;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue lashOutSound;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue lashOutHitSound;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6321CC", Offset = "0x6321CC")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6321CC", Offset = "0x6321CC")]
	public Vector2 deathCooldown;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float respawnChance;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632234", Offset = "0x632234")]
	public AudioSource fleshAudio;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioCue painSound;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 tendrilTarget;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 tendrilNormal;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float tendrilLengthFactor;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer tendrilRenderer;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Health health;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AgentAwareness agentAwareness;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MeltFX meltFX;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float forcedCooldown;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vent vent;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool hasOpenVent;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 curiousTarget;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 curiousSpeed;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float lashOutOffset;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float attackAnimFactor;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 attackTargetPos;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 attackTargetNormal;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 attackInitTendrilPos;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 attackInitTendrilNormal;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 attackPrevDamagePos;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool attackDamageApplied;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float deadTimer;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float disappearLastY;

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x893204", Offset = "0x893204", VA = "0x893204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x8932C0", Offset = "0x8932C0", VA = "0x8932C0", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x893530", Offset = "0x893530", VA = "0x893530", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x893778", Offset = "0x893778", VA = "0x893778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x893948", Offset = "0x893948", VA = "0x893948")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x893BB0", Offset = "0x893BB0", VA = "0x893BB0")]
	private Vector3 ApproachTargetNormal(Vector3 newTargetPos, Vector3 wantedNormal, float normalApproachSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x893D5C", Offset = "0x893D5C", VA = "0x893D5C")]
	private void Cooldown_Enter()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x893D88", Offset = "0x893D88", VA = "0x893D88")]
	private void Cooldown_Update()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x893F28", Offset = "0x893F28", VA = "0x893F28")]
	private void Curious_Enter()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x894024", Offset = "0x894024", VA = "0x894024")]
	private void Curious_Update()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x893FD8", Offset = "0x893FD8", VA = "0x893FD8")]
	private void Curious_OnTimer()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x894384", Offset = "0x894384", VA = "0x894384")]
	private Vector3 GetCuriousTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x8947C0", Offset = "0x8947C0", VA = "0x8947C0")]
	private void LashOutRecoil_Enter()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x8947F8", Offset = "0x8947F8", VA = "0x8947F8")]
	private void LashOutRecoil_Update()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x894BEC", Offset = "0x894BEC", VA = "0x894BEC")]
	private void LashOutRecoil_OnTimer()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x89495C", Offset = "0x89495C", VA = "0x89495C")]
	private void CalculateRecoilPose(Vector3 targetPos, out Vector3 recoilTarget, out Vector3 recoilNormal, float offset = 0f)
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x894DCC", Offset = "0x894DCC", VA = "0x894DCC")]
	private void LashOutAttack_Enter()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x894F34", Offset = "0x894F34", VA = "0x894F34")]
	private void LashOutAttack_Update()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x8952BC", Offset = "0x8952BC", VA = "0x8952BC")]
	private void LashOutRecovery_Enter()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x895318", Offset = "0x895318", VA = "0x895318")]
	private void LashOutRecovery_Update()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x89545C", Offset = "0x89545C", VA = "0x89545C")]
	private void LashOutRecovery_OnTimer()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x89563C", Offset = "0x89563C", VA = "0x89563C")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x895690", Offset = "0x895690", VA = "0x895690")]
	private void Death_Update()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x8958A0", Offset = "0x8958A0", VA = "0x8958A0")]
	private void Death_OnTimer()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x8959D4", Offset = "0x8959D4", VA = "0x8959D4")]
	private void Disappear_Enter()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x895AA4", Offset = "0x895AA4", VA = "0x895AA4")]
	private void Disappear_Update()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x895DE4", Offset = "0x895DE4", VA = "0x895DE4")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x89604C", Offset = "0x89604C", VA = "0x89604C")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x896114", Offset = "0x896114", VA = "0x896114")]
	private void OnMeltFXDisappear()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x896190", Offset = "0x896190", VA = "0x896190", Slot = "11")]
	public void SetSpawnMarker(RoomMarker marker)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x8962D0", Offset = "0x8962D0", VA = "0x8962D0", Slot = "12")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x89647C", Offset = "0x89647C", VA = "0x89647C", Slot = "13")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x896508", Offset = "0x896508", VA = "0x896508", Slot = "14")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x896638", Offset = "0x896638", VA = "0x896638", Slot = "15")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x896700", Offset = "0x896700", VA = "0x896700")]
	public HazardVentTendril()
	{
	}
}
[Token(Token = "0x20001A4")]
public interface IHazard
{
	[Token(Token = "0x6000FC9")]
	void SetSpawnMarker(RoomMarker marker);

	[Token(Token = "0x6000FCA")]
	bool IsActive();
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D17C", Offset = "0x62D17C")]
public class HoloBeam : MonoBehaviour
{
	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer trackedObj;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animSpeed;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VolumetricLightBeam lightBeam;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float targetRange;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetAngle;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool autoDisable;

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x89A1A0", Offset = "0x89A1A0", VA = "0x89A1A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x89A200", Offset = "0x89A200", VA = "0x89A200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x89A2A8", Offset = "0x89A2A8", VA = "0x89A2A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x89A29C", Offset = "0x89A29C", VA = "0x89A29C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x89A680", Offset = "0x89A680", VA = "0x89A680")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x89A2B4", Offset = "0x89A2B4", VA = "0x89A2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x89A68C", Offset = "0x89A68C", VA = "0x89A68C")]
	public HoloBeam()
	{
	}
}
[Token(Token = "0x20001A6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D1E0", Offset = "0x62D1E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D1E0", Offset = "0x62D1E0")]
public class HoloTable : FSMComponent, IGameSerializable
{
	[Token(Token = "0x200043E")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Standby;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Appearing;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Active;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Coordinates;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Disappearing;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Broken;

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x89E104", Offset = "0x89E104", VA = "0x89E104")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200043F")]
	private class SerializedData
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool coordinatesUnlocked;

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x89DF24", Offset = "0x89DF24", VA = "0x89DF24")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC18", Offset = "0x62EC18")]
	private sealed class <DisableText_co>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWait;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoloTable <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x89E1E8", Offset = "0x89E1E8", VA = "0x89E1E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x89E250", Offset = "0x89E250", VA = "0x89E250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x89CC18", Offset = "0x89CC18", VA = "0x89CC18")]
		[DebuggerHidden]
		public <DisableText_co>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x89E10C", Offset = "0x89E10C", VA = "0x89E10C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x89E110", Offset = "0x89E110", VA = "0x89E110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x89E1F0", Offset = "0x89E1F0", VA = "0x89E1F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63226C", Offset = "0x63226C")]
	public Material[] materialsOff;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] materialsOn;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] materialsBroken;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6322A4", Offset = "0x6322A4")]
	public Transform[] holoCasters;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform surfaceCenter;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 surfaceExtents;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer holoSpherePrefab;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HoloBeam holoBeamPrefab;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro holoText;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject holoPOIPrefab;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color holoBeamPOIColor;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6322DC", Offset = "0x6322DC")]
	public float appearSpeed;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float disappearSpeed;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632314", Offset = "0x632314")]
	public AudioCue poiChimeSound;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioCue holoStartSound;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioCue holoEndSound;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource humSound;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioCue brokenSound;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63234C", Offset = "0x63234C")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem damageFXPrefab;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer tableRenderer;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<WDG.Tuple<GameObject, Vector3, float, Vector3>> holograms;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<HoloBeam> holoBeams;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> holoPOIs;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RoomPower rPower;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PlayerRangeDetector playerDetector;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Triggable triggable;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Health health;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool coordinatesUnlocked;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<int> neighborsList;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float appearFactor;

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x89A69C", Offset = "0x89A69C", VA = "0x89A69C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x89A78C", Offset = "0x89A78C", VA = "0x89A78C", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x89AA84", Offset = "0x89AA84", VA = "0x89AA84", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x89ACA8", Offset = "0x89ACA8", VA = "0x89ACA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x89AEE0", Offset = "0x89AEE0", VA = "0x89AEE0")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x89AF34", Offset = "0x89AF34", VA = "0x89AF34")]
	private void Offline_Exit()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x89AF5C", Offset = "0x89AF5C", VA = "0x89AF5C")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x89B5B4", Offset = "0x89B5B4", VA = "0x89B5B4")]
	private void Appearing_Enter()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x89B94C", Offset = "0x89B94C", VA = "0x89B94C")]
	private void Appearing_Update()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x89BD90", Offset = "0x89BD90", VA = "0x89BD90")]
	private void Active_Update()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x89BE3C", Offset = "0x89BE3C", VA = "0x89BE3C")]
	private void Coordinates_Enter()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x89CB5C", Offset = "0x89CB5C", VA = "0x89CB5C")]
	private void Coordinates_Exit()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x89CB8C", Offset = "0x89CB8C", VA = "0x89CB8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B5DC", Offset = "0x63B5DC")]
	private IEnumerator DisableText_co(float timeWait = 5f)
	{
		return null;
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x89C340", Offset = "0x89C340", VA = "0x89C340")]
	private void CreatePOIs()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x89C7E4", Offset = "0x89C7E4", VA = "0x89C7E4")]
	private void OnPOIFinished()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x89D104", Offset = "0x89D104", VA = "0x89D104")]
	private void Disappearing_Enter()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x89D14C", Offset = "0x89D14C", VA = "0x89D14C")]
	private void Disappearing_Update()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x89D1F8", Offset = "0x89D1F8", VA = "0x89D1F8")]
	private void Disappearing_Exit()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x89D4BC", Offset = "0x89D4BC", VA = "0x89D4BC")]
	private void Broken_Enter()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x89D5C8", Offset = "0x89D5C8", VA = "0x89D5C8")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x89D92C", Offset = "0x89D92C", VA = "0x89D92C")]
	private void OnPlayerDetection(bool playerInRange)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x89DBCC", Offset = "0x89DBCC", VA = "0x89DBCC")]
	private void OnInteracted(Hand hand)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x89DCDC", Offset = "0x89DCDC", VA = "0x89DCDC")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x89DD78", Offset = "0x89DD78", VA = "0x89DD78")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x89B640", Offset = "0x89B640", VA = "0x89B640")]
	private void ActivateHologram()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x89BA38", Offset = "0x89BA38", VA = "0x89BA38")]
	private bool AnimHologram(bool appearing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x89D24C", Offset = "0x89D24C", VA = "0x89D24C")]
	private void DeactivateHologram()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x89B034", Offset = "0x89B034", VA = "0x89B034")]
	private void SpawnHologram()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x89CC44", Offset = "0x89CC44", VA = "0x89CC44")]
	private bool CheckHoloPositionValid(Vector3 newPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x89CE3C", Offset = "0x89CE3C", VA = "0x89CE3C")]
	private HoloBeam CreateHoloBeam(GameObject trackedGO)
	{
		return null;
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x89DEB0", Offset = "0x89DEB0", VA = "0x89DEB0", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x89DF2C", Offset = "0x89DF2C", VA = "0x89DF2C", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x89E07C", Offset = "0x89E07C", VA = "0x89E07C", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x89E080", Offset = "0x89E080", VA = "0x89E080")]
	public HoloTable()
	{
	}
}
[Token(Token = "0x20001A7")]
public class ItemReceptor : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000441")]
	private class SerializedData
	{
		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item.Properties.SerializedData itemData;

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x96DF14", Offset = "0x96DF14", VA = "0x96DF14")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] validItems;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyItem;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool deleteRigidBody;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool disableItemCollider;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool allowGrabAgain;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Item hoveringItem;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item _insertedItem;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float insertionProgress;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float insertionSpeed;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue insertSoundClip;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GhostOutline ghostOutline;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool serialize;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool unregisterSerialization;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider interactionCollider;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int updateTask;

	[Token(Token = "0x170000F7")]
	public Item InsertedItem
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x96C710", Offset = "0x96C710", VA = "0x96C710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public float InsertionProgress
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x96C718", Offset = "0x96C718", VA = "0x96C718")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000032")]
	public event Action<Item> onItemInserted
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x96C720", Offset = "0x96C720", VA = "0x96C720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B640", Offset = "0x63B640")]
		add
		{
		}
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x96C7C4", Offset = "0x96C7C4", VA = "0x96C7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B650", Offset = "0x63B650")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event Action<Item> onItemRemoved
	{
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x96C868", Offset = "0x96C868", VA = "0x96C868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B660", Offset = "0x63B660")]
		add
		{
		}
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x96C90C", Offset = "0x96C90C", VA = "0x96C90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B670", Offset = "0x63B670")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x96C9B0", Offset = "0x96C9B0", VA = "0x96C9B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x96CA10", Offset = "0x96CA10", VA = "0x96CA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x96CB90", Offset = "0x96CB90", VA = "0x96CB90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x96CBA8", Offset = "0x96CBA8", VA = "0x96CBA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x96CD94", Offset = "0x96CD94", VA = "0x96CD94")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x96CAC0", Offset = "0x96CAC0", VA = "0x96CAC0")]
	private void StartUpdateTask()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x96D3F8", Offset = "0x96D3F8", VA = "0x96D3F8")]
	public bool CanAccept(Item item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x96D500", Offset = "0x96D500", VA = "0x96D500")]
	public void SetHover(Item item)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x96D528", Offset = "0x96D528", VA = "0x96D528")]
	public bool InsertItem(Item item, bool instantaneous = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x96D9A0", Offset = "0x96D9A0", VA = "0x96D9A0")]
	public bool DestroyItem()
	{
		return default(bool);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x96DAC8", Offset = "0x96DAC8", VA = "0x96DAC8")]
	public void OnRemovedItem(Hand hand)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x96DAD0", Offset = "0x96DAD0", VA = "0x96DAD0")]
	public Item ReleaseItem(bool enablePhysics = true)
	{
		return null;
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x96DE1C", Offset = "0x96DE1C", VA = "0x96DE1C", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x96DF1C", Offset = "0x96DF1C", VA = "0x96DF1C", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x96E0C8", Offset = "0x96E0C8", VA = "0x96E0C8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x96E0CC", Offset = "0x96E0CC", VA = "0x96E0CC")]
	public ItemReceptor()
	{
	}
}
[Token(Token = "0x20001A8")]
public class JumpDrive : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] rotators;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] rotatorMaxSpeeds;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotatorAcceleration;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource engagedSound;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6323A4", Offset = "0x6323A4")]
	public Color emissionNoPower;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6323BC", Offset = "0x6323BC")]
	public Color emissionPower;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x6323D4", Offset = "0x6323D4")]
	public Color emissionEngaged;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] rotatorSpeeds;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RoomPower rPower;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasPower;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isEngaged;

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x970B84", Offset = "0x970B84", VA = "0x970B84")]
	private void Start()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x970E64", Offset = "0x970E64", VA = "0x970E64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x970F40", Offset = "0x970F40", VA = "0x970F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x97101C", Offset = "0x97101C", VA = "0x97101C")]
	private void Update()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x971314", Offset = "0x971314", VA = "0x971314")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x9715D0", Offset = "0x9715D0", VA = "0x9715D0")]
	public void Engage()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x97140C", Offset = "0x97140C", VA = "0x97140C")]
	private void DisEngage()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x9718F8", Offset = "0x9718F8", VA = "0x9718F8")]
	public JumpDrive()
	{
	}
}
[Token(Token = "0x20001A9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D26C", Offset = "0x62D26C")]
public class LockerDoorStartPosition : MonoBehaviour
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float openChance;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6323EC", Offset = "0x6323EC")]
	public Vector2 openPosition;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x97A400", Offset = "0x97A400", VA = "0x97A400")]
	private void Start()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x97A4D0", Offset = "0x97A4D0", VA = "0x97A4D0")]
	public LockerDoorStartPosition()
	{
	}
}
[Token(Token = "0x20001AA")]
public class PlayerRangeDetector : MonoBehaviour
{
	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float detectionRange;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _playerInRange;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<bool> onPlayerDetection;

	[Token(Token = "0x170000F9")]
	public bool PlayerInRange
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x846C70", Offset = "0x846C70", VA = "0x846C70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x846C78", Offset = "0x846C78", VA = "0x846C78")]
	private void Update()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x846DF4", Offset = "0x846DF4", VA = "0x846DF4")]
	public PlayerRangeDetector()
	{
	}
}
[Token(Token = "0x20001AB")]
public class PowerPanel : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x2000442")]
	private class SerializedData
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasCell;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isHandleDown;

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x84B18C", Offset = "0x84B18C", VA = "0x84B18C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemReceptor cellReceptor;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DraggableRotation handle;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item powerCellPrefab;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer panelRenderer;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer handleRenderer;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material emissiveMaterial;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material nonEmissiveMaterial;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material emissiveMaterialRed;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material emissiveMaterialGreen;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RoomPower roomPower;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PowerCell currentCell;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool handleIsLocked;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float handleRotTarget;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int updateTask;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x84A3D0", Offset = "0x84A3D0", VA = "0x84A3D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x84A5A8", Offset = "0x84A5A8", VA = "0x84A5A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x84A7F4", Offset = "0x84A7F4", VA = "0x84A7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x84AD48", Offset = "0x84AD48", VA = "0x84AD48")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x84AE44", Offset = "0x84AE44", VA = "0x84AE44")]
	private void OnCellInserted(Item cell)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x84AF38", Offset = "0x84AF38", VA = "0x84AF38")]
	private void OnCellRemoved(Item cell)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x84AFAC", Offset = "0x84AFAC", VA = "0x84AFAC")]
	private void OnHandleSnap(DraggableRotation linear)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x84ABF4", Offset = "0x84ABF4", VA = "0x84ABF4")]
	private void SetHandleLocked(bool locked)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x84ACF4", Offset = "0x84ACF4", VA = "0x84ACF4")]
	private void SetLights(bool green)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x84B0A0", Offset = "0x84B0A0", VA = "0x84B0A0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x84B194", Offset = "0x84B194", VA = "0x84B194", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x84B2A0", Offset = "0x84B2A0", VA = "0x84B2A0")]
	private void OnPostSerialize()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x84B378", Offset = "0x84B378", VA = "0x84B378", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x84B37C", Offset = "0x84B37C", VA = "0x84B37C")]
	public PowerPanel()
	{
	}
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D2D0", Offset = "0x62D2D0")]
public class PoweredAnimation : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startAtRandomPoint;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasEnergy;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation animation;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource sound;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RoomPower rPower;

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x84B38C", Offset = "0x84B38C", VA = "0x84B38C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x84B464", Offset = "0x84B464", VA = "0x84B464")]
	private void Start()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x84B858", Offset = "0x84B858", VA = "0x84B858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x84B934", Offset = "0x84B934", VA = "0x84B934")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x84BA10", Offset = "0x84BA10", VA = "0x84BA10")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x84BB68", Offset = "0x84BB68", VA = "0x84BB68")]
	public PoweredAnimation()
	{
	}
}
[Token(Token = "0x20001AD")]
public class RoomMarker : MonoBehaviour
{
	[Token(Token = "0x2000443")]
	public enum Tag
	{
		[Token(Token = "0x4001DAA")]
		Spawn_Turret,
		[Token(Token = "0x4001DAB")]
		Hazard_Steam,
		[Token(Token = "0x4001DAC")]
		Hazard_Electricity,
		[Token(Token = "0x4001DAD")]
		Hazard_Fire,
		[Token(Token = "0x4001DAE")]
		PowerPanel,
		[Token(Token = "0x4001DAF")]
		Terminal,
		[Token(Token = "0x4001DB0")]
		Spawn_Vent,
		[Token(Token = "0x4001DB1")]
		Hazard_Tendril,
		[Token(Token = "0x4001DB2")]
		Infestation,
		[Token(Token = "0x4001DB3")]
		Spawn_HiddenCrawler
	}

	[Serializable]
	[Token(Token = "0x2000444")]
	public class RoomMarkerCollection
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomMarker[] roomMarkerList;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RoomMarker> cachedMarkers;

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x932930", Offset = "0x932930", VA = "0x932930")]
		public RoomMarker Get(Tag filter, bool markAsUsed = true)
		{
			return null;
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x9338E8", Offset = "0x9338E8", VA = "0x9338E8")]
		public List<RoomMarker> GetAvailable_cached(Tag filter)
		{
			return null;
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x933A80", Offset = "0x933A80", VA = "0x933A80")]
		public RoomMarkerCollection()
		{
		}
	}

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Tag> tags;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isUsed;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectReference;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Pair<Room, int>> cachedWeights;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x9336A0", Offset = "0x9336A0", VA = "0x9336A0")]
	public static RoomMarker Get(List<Room> rooms, Tag filter, out Room ownerRoom, bool markAsUsed = true)
	{
		return null;
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x9328A0", Offset = "0x9328A0", VA = "0x9328A0")]
	public static RoomMarkerCollection GetMarkersForRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x933A88", Offset = "0x933A88", VA = "0x933A88")]
	public RoomMarker()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ShuttleRendererTrigger : MonoBehaviour
{
	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> disableRenderers;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sector sector;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider triggerCollider;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlayerInside;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasPlayerInside;

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x136A01C", Offset = "0x136A01C", VA = "0x136A01C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x136A0D4", Offset = "0x136A0D4", VA = "0x136A0D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x136A340", Offset = "0x136A340", VA = "0x136A340")]
	public ShuttleRendererTrigger()
	{
	}
}
[Token(Token = "0x20001AF")]
public class SpawnArea : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000445")]
	public class WeightedCollection
	{
		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnCollection collection;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634FF4", Offset = "0x634FF4")]
		public float weight;

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x136F05C", Offset = "0x136F05C", VA = "0x136F05C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x136F0A4", Offset = "0x136F0A4", VA = "0x136F0A4")]
		public WeightedCollection()
		{
		}
	}

	[Token(Token = "0x2000446")]
	private struct SpawnedRect
	{
		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rect rect;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnInfo objPrefab;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angle;

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x746BD0", Offset = "0x746BD0", VA = "0x746BD0")]
		public SpawnedRect(Rect rect, SpawnInfo obj, float angle)
		{
		}
	}

	[Token(Token = "0x2000447")]
	private struct WeightedPrefabList
	{
		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SpawnInfo> prefabs;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<float> weights;
	}

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632414", Offset = "0x632414")]
	public Bounds bounds;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float padding;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hasHeightLimit;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxHeight;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63244C", Offset = "0x63244C")]
	public float spawningChance;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float spawningChanceDecrease;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float spawningChancePenalty;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dontSpawnChance;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632484", Offset = "0x632484")]
	public bool isHidden;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform enemySpawnMarker;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WeightedCollection[] collections;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<SpawnedRect> spawnedAreas;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6324BC", Offset = "0x6324BC")]
	public bool _spawnItems;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, WeightedPrefabList> cachePrefabs;

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x136D320", Offset = "0x136D320", VA = "0x136D320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x136D484", Offset = "0x136D484", VA = "0x136D484")]
	public int Spawn()
	{
		return default(int);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x136E0F0", Offset = "0x136E0F0", VA = "0x136E0F0")]
	public bool PreSpawnItem(SpawnInfo item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x136D4BC", Offset = "0x136D4BC", VA = "0x136D4BC")]
	private int SpawnItems()
	{
		return default(int);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x136E184", Offset = "0x136E184", VA = "0x136E184")]
	private bool TryFitObject(SpawnInfo obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x136E778", Offset = "0x136E778", VA = "0x136E778")]
	private static WeightedPrefabList GetCandidatePrefabs(WeightedCollection[] collections)
	{
		return default(WeightedPrefabList);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x136EFC4", Offset = "0x136EFC4", VA = "0x136EFC4")]
	public SpawnArea()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D334", Offset = "0x62D334")]
public class SpawnCollection : ScriptableObject
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpawnInfo[] prefabsLow;

	[Token(Token = "0x170000FA")]
	public SpawnInfo[] Prefabs
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x136F304", Offset = "0x136F304", VA = "0x136F304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x136F30C", Offset = "0x136F30C", VA = "0x136F30C")]
	public SpawnCollection()
	{
	}
}
[Token(Token = "0x20001B1")]
public class SpawnInfo : MonoBehaviour
{
	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63252C", Offset = "0x63252C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63252C", Offset = "0x63252C")]
	public float maxAngle;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float padding;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bounds customBounds;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool encapsulateChildren;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] rendererBounds;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632584", Offset = "0x632584")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632584", Offset = "0x632584")]
	public float weight;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxInArea;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxInRoom;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int maxInMap;

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x136ED24", Offset = "0x136ED24", VA = "0x136ED24")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x136F314", Offset = "0x136F314", VA = "0x136F314")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x136F50C", Offset = "0x136F50C", VA = "0x136F50C")]
	public SpawnInfo()
	{
	}
}
[Token(Token = "0x20001B2")]
public class SpawnManager : Singleton<SpawnManager>
{
	[Serializable]
	[Token(Token = "0x2000448")]
	public struct MainItem
	{
		[Token(Token = "0x200050B")]
		public enum PlacementMode
		{
			[Token(Token = "0x40020F6")]
			Random,
			[Token(Token = "0x40020F7")]
			Spread,
			[Token(Token = "0x40020F8")]
			EvenSpread,
			[Token(Token = "0x40020F9")]
			Random_JumpDriveSection
		}

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SwitchRefSpawnInfo prefab;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int minAmount;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxAmount;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlacementMode placementMode;
	}

	[Serializable]
	[Token(Token = "0x2000449")]
	public struct WeaponSpawnItems
	{
		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelOptions.EWeapons weapon;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SwitchRefSpawnInfo weaponSpawn;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchRefSpawnInfo ammoSpawn;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ammoMinAmount;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ammoMaxAmount;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ammoPrimaryMinAmount;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ammoPrimaryMaxAmount;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;
	}

	[Token(Token = "0x200044A")]
	public enum LimitScope
	{
		[Token(Token = "0x4001DCA")]
		SpawnArea,
		[Token(Token = "0x4001DCB")]
		Room,
		[Token(Token = "0x4001DCC")]
		Map
	}

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool spawnItems;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Room, List<Pair<SpawnInfo, bool>>> itemsToSpawn;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool firstUpdate;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Room, List<SpawnArea>> spawnAreas;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6325D8", Offset = "0x6325D8")]
	public List<MainItem> mainItemPrefabs;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchRefListSpawnInfo startRoomPrefabs;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchRefListSpawnInfo startRoomPrefabsInFirstRun;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WeaponSpawnItems[] weaponItemPrefabs;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632610", Offset = "0x632610")]
	public SpawnCollection horrorCollection;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float horrorRoomChance;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float horrorAreaChance;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<SpawnArea> crawlerSpawners;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SpawnInfo> trapsAndGrenadesPrefabs;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<GameObject, int>[] limitSpawn;

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x136F524", Offset = "0x136F524", VA = "0x136F524")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x136F5D0", Offset = "0x136F5D0", VA = "0x136F5D0")]
	public void AddMainItems()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x1370B28", Offset = "0x1370B28", VA = "0x1370B28")]
	public void AddStartRoomItems()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x13713CC", Offset = "0x13713CC", VA = "0x13713CC")]
	public void SpawnItems()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x13712B4", Offset = "0x13712B4", VA = "0x13712B4")]
	public void AddItem(SpawnInfo item, Room room, bool skipHiddenAreas = false)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x1370F58", Offset = "0x1370F58", VA = "0x1370F58")]
	private SpawnInfo GetItemWithOptions(SpawnInfo item, LevelOptions lOptions)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x1371B64", Offset = "0x1371B64", VA = "0x1371B64")]
	public List<Pair<SpawnInfo, bool>> GetItemsInRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x1371BE4", Offset = "0x1371BE4", VA = "0x1371BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x136D380", Offset = "0x136D380", VA = "0x136D380")]
	public void RegisterArea(SpawnArea area)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x1372154", Offset = "0x1372154", VA = "0x1372154")]
	public void SetHorrorCollections()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1372520", Offset = "0x1372520", VA = "0x1372520")]
	public void SetCrawlerSpawns(int numCrawlers)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x1372A30", Offset = "0x1372A30", VA = "0x1372A30")]
	public List<SpawnArea> GetCrawlerSpawners()
	{
		return null;
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x136EB04", Offset = "0x136EB04", VA = "0x136EB04")]
	public bool CheckLimitSpawn(SpawnInfo info, LimitScope scope)
	{
		return default(bool);
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x136EC08", Offset = "0x136EC08", VA = "0x136EC08")]
	public void AddToLimitSpawn(SpawnInfo info, LimitScope scope)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1372A38", Offset = "0x1372A38", VA = "0x1372A38")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x20001B3")]
public class Terminal : FSMComponent, IGameSerializable
{
	[Token(Token = "0x200044B")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Offline;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Standby;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State InsertingDrive;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Booting;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State TextLog;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State CraftBlueprint;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Broken;

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x80D18C", Offset = "0x80D18C", VA = "0x80D18C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200044C")]
	private class SerializedData
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isBroken;

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x80D038", Offset = "0x80D038", VA = "0x80D038")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632648", Offset = "0x632648")]
	public Transform readerFlap;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 readerFlapOpenPos;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 readerFlapClosedPos;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ItemReceptor datadriveReceptor;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 dataDriveInsertedPos;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform dataDrive;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Health health;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer mainRenderer;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material brokenMaterial;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632680", Offset = "0x632680")]
	public GameObject offlineScreen;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject standbyScreen;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject brokenScreen;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject uiRoot;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject uiBootup;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UITypewriteText uiBootupTypewriter;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject uiTextLog;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UICraftBlueprint uiCraftBlueprint;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UIScreenToggle curScreenToggleFX;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6326B8", Offset = "0x6326B8")]
	public AudioSource bootupSound;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource humSound;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource chimeSound;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6326F0", Offset = "0x6326F0")]
	public TextLogs textLogs;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshProUGUI textLogsTxt;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632728", Offset = "0x632728")]
	public CraftRecipes recipes;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632760", Offset = "0x632760")]
	public float activationRange;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ParticleSystem brokenFX;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ParticleSystem damageFXPrefab;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioCue brokenSound;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool readerFlapOpen;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float readerFlapFactor;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isPlayerNearby;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RoomPower rPower;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float insertFactor;

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x80AE08", Offset = "0x80AE08", VA = "0x80AE08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x80AE7C", Offset = "0x80AE7C", VA = "0x80AE7C", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x80B140", Offset = "0x80B140", VA = "0x80B140", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x80B3A8", Offset = "0x80B3A8", VA = "0x80B3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x80B584", Offset = "0x80B584", VA = "0x80B584")]
	private void Offline_Enter()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x80B664", Offset = "0x80B664", VA = "0x80B664")]
	private void Standby_Enter()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x80B744", Offset = "0x80B744", VA = "0x80B744")]
	private void InsertingDrive_Enter()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x80B768", Offset = "0x80B768", VA = "0x80B768")]
	private void InsertingDrive_Update()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x80B8CC", Offset = "0x80B8CC", VA = "0x80B8CC")]
	private void Booting_Enter()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x80B9E4", Offset = "0x80B9E4", VA = "0x80B9E4")]
	private void Booting_Exit()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x80BA50", Offset = "0x80BA50", VA = "0x80BA50")]
	private void OnBootingTextEnded()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x80BC68", Offset = "0x80BC68", VA = "0x80BC68")]
	private void TextLog_Enter()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x80C258", Offset = "0x80C258", VA = "0x80C258")]
	private void CraftBlueprint_Enter()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x80C378", Offset = "0x80C378", VA = "0x80C378")]
	private void Broken_Enter()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x80C4A0", Offset = "0x80C4A0", VA = "0x80C4A0")]
	private void Always_Update()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x80C904", Offset = "0x80C904", VA = "0x80C904")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x80CBE0", Offset = "0x80CBE0", VA = "0x80CBE0")]
	private void OnDriveInserted(Item item)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x80CD14", Offset = "0x80CD14", VA = "0x80CD14")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x80CDB0", Offset = "0x80CDB0", VA = "0x80CDB0")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x80CEF8", Offset = "0x80CEF8", VA = "0x80CEF8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x80CF48", Offset = "0x80CF48", VA = "0x80CF48", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x80D040", Offset = "0x80D040", VA = "0x80D040", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x80D108", Offset = "0x80D108", VA = "0x80D108", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x80D10C", Offset = "0x80D10C", VA = "0x80D10C")]
	public Terminal()
	{
	}
}
[Token(Token = "0x20001B4")]
public class Turret : FSMComponent, IGameSerializable
{
	[Token(Token = "0x200044D")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Idle;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Unfold;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Fold;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FSM.State Sentry;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FSM.State Target;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FSM.State Fire;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FSM.State Death;

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x81B65C", Offset = "0x81B65C", VA = "0x81B65C")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x200044E")]
	private class SerializedData
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string xform;

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x81B42C", Offset = "0x81B42C", VA = "0x81B42C")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC28", Offset = "0x62EC28")]
	private sealed class <Fire_co>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0x81B800", Offset = "0x81B800", VA = "0x81B800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x81B868", Offset = "0x81B868", VA = "0x81B868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x81AE90", Offset = "0x81AE90", VA = "0x81AE90")]
		[DebuggerHidden]
		public <Fire_co>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x81B664", Offset = "0x81B664", VA = "0x81B664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x81B668", Offset = "0x81B668", VA = "0x81B668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x81B808", Offset = "0x81B808", VA = "0x81B808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handle;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform body;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform muzzle;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float unfoldSpeed;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float foldSpeed;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue unfoldSound;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue foldSound;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioCue deactivateSound;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float sentryTimeout;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float sentryAngle;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float sentryRotSpeed;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioCue sentryPingSound;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float targetTime;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float targetTimeMultiplier;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioCue targetPingSound;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioCue targetAcquiredSound;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioCue shootSound;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LayerMask layerMask;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ProjectileDamage damageData;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 handleDeployPos;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AgentVision agentVision;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Health health;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private VolumetricLightBeam spotLight;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool spotLightEnabled;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GunTrails gunTrails;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MuzzleFlash muzzleFlash;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public OcclusionTracker occlusionTracker;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RoomPower roomPower;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float progress;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float pingRadarTime;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion origHandleRot;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Quaternion origBodyRot;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float pingTimer;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool disablingOnDeath;

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x819204", Offset = "0x819204", VA = "0x819204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x819278", Offset = "0x819278", VA = "0x819278", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x8192A8", Offset = "0x8192A8", VA = "0x8192A8", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x8192EC", Offset = "0x8192EC", VA = "0x8192EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x8196E0", Offset = "0x8196E0", VA = "0x8196E0")]
	private void Idle_Enter()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x819734", Offset = "0x819734", VA = "0x819734")]
	private void Idle_Update()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x8197F8", Offset = "0x8197F8", VA = "0x8197F8")]
	private void Unfold_Enter()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x819840", Offset = "0x819840", VA = "0x819840")]
	private void Unfold_Update()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x819994", Offset = "0x819994", VA = "0x819994")]
	private void Unfold_Exit()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x819A08", Offset = "0x819A08", VA = "0x819A08")]
	private void Fold_Enter()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x819AB8", Offset = "0x819AB8", VA = "0x819AB8")]
	private void Fold_Update()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x819CE8", Offset = "0x819CE8", VA = "0x819CE8")]
	private void Sentry_Enter()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x819D1C", Offset = "0x819D1C", VA = "0x819D1C")]
	private void Sentry_Update()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x819F84", Offset = "0x819F84", VA = "0x819F84")]
	private void Sentry_OnTimer()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x81A020", Offset = "0x81A020", VA = "0x81A020")]
	private void Target_Enter()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x81A238", Offset = "0x81A238", VA = "0x81A238")]
	private void Target_Update()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x81A9FC", Offset = "0x81A9FC", VA = "0x81A9FC")]
	private void Target_OnTimer()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x81AAD0", Offset = "0x81AAD0", VA = "0x81AAD0")]
	private void Fire_Enter()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x81AAE0", Offset = "0x81AAE0", VA = "0x81AAE0")]
	private void Fire_OnTimer()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x81ADF0", Offset = "0x81ADF0", VA = "0x81ADF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B680", Offset = "0x63B680")]
	private IEnumerator Fire_co(Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x81AEBC", Offset = "0x81AEBC", VA = "0x81AEBC")]
	private void Death_Enter()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x81B050", Offset = "0x81B050", VA = "0x81B050")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x81B1E0", Offset = "0x81B1E0", VA = "0x81B1E0")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x81B27C", Offset = "0x81B27C", VA = "0x81B27C")]
	private void OnOcclusionChange(bool visibility)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x81B300", Offset = "0x81B300", VA = "0x81B300", Slot = "11")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x81B434", Offset = "0x81B434", VA = "0x81B434", Slot = "12")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x81B534", Offset = "0x81B534", VA = "0x81B534", Slot = "13")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x81B5B0", Offset = "0x81B5B0", VA = "0x81B5B0")]
	public Turret()
	{
	}
}
[Token(Token = "0x20001B5")]
public class Vent : MonoBehaviour
{
	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ventGrid;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fan;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem steam;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue popSound;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xBEB2F4", Offset = "0xBEB2F4", VA = "0xBEB2F4")]
	public void SetOpen()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xBEB4D0", Offset = "0xBEB4D0", VA = "0xBEB4D0")]
	public void SetFull()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xBEB62C", Offset = "0xBEB62C", VA = "0xBEB62C")]
	public void PopGrid()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xBEB784", Offset = "0xBEB784", VA = "0xBEB784")]
	public Vent()
	{
	}
}
[Token(Token = "0x20001B6")]
public class VentFan : MonoBehaviour
{
	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotSpeed;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasEnergy;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float curSpeed;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoomPower rPower;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource sound;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Sector occlusionSector;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int updateTask;

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xBEB78C", Offset = "0xBEB78C", VA = "0xBEB78C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xBEB840", Offset = "0xBEB840", VA = "0xBEB840")]
	private void Start()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xBEBBBC", Offset = "0xBEBBBC", VA = "0xBEBBBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xBEBD48", Offset = "0xBEBD48", VA = "0xBEBD48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xBEBF40", Offset = "0xBEBF40", VA = "0xBEBF40")]
	private void UpdateTask()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xBEBFD8", Offset = "0xBEBFD8", VA = "0xBEBFD8")]
	private void OnPowerLevelChange(RoomPower rPower)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xBEBAEC", Offset = "0xBEBAEC", VA = "0xBEBAEC")]
	private void OnVisible()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xBEC120", Offset = "0xBEC120", VA = "0xBEC120")]
	private void OnInvisible()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xBEC19C", Offset = "0xBEC19C", VA = "0xBEC19C")]
	public VentFan()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D378", Offset = "0x62D378")]
public class CraftRecipes : ScriptableObject
{
	[Token(Token = "0x2000450")]
	public enum IngredientType
	{
		[Token(Token = "0x4001DE4")]
		Plastics,
		[Token(Token = "0x4001DE5")]
		Organics,
		[Token(Token = "0x4001DE6")]
		Metals,
		[Token(Token = "0x4001DE7")]
		Electronics,
		[Token(Token = "0x4001DE8")]
		Chemicals,
		[Token(Token = "0x4001DE9")]
		Flammables,
		[Token(Token = "0x4001DEA")]
		ExoticMaterials,
		[Token(Token = "0x4001DEB")]
		AlienMaterials,
		[Token(Token = "0x4001DEC")]
		Energy
	}

	[Serializable]
	[Token(Token = "0x2000451")]
	public class IngredientList
	{
		[Serializable]
		[Token(Token = "0x200050C")]
		public struct IngredientAmount : IComparable
		{
			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IngredientType type;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int amount;

			[Token(Token = "0x6002008")]
			[Address(RVA = "0x6B4390", Offset = "0x6B4390", VA = "0x6B4390", Slot = "4")]
			public int CompareTo(object obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ArrayElementTitleAttribute", RVA = "0x63500C", Offset = "0x63500C")]
		public List<IngredientAmount> ingredients;

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x85AF68", Offset = "0x85AF68", VA = "0x85AF68")]
		public int GetAmountOfType(IngredientType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x85B078", Offset = "0x85B078", VA = "0x85B078")]
		public void Add(IngredientType type, int amount)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x85B194", Offset = "0x85B194", VA = "0x85B194")]
		public void Add(IngredientList list)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x85B2A0", Offset = "0x85B2A0", VA = "0x85B2A0")]
		public void Remove(IngredientType type, int amount)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x85B3D4", Offset = "0x85B3D4", VA = "0x85B3D4")]
		public void Remove(IngredientList list)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x85B4E0", Offset = "0x85B4E0", VA = "0x85B4E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x85B574", Offset = "0x85B574", VA = "0x85B574")]
		public IngredientList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000452")]
	public class Blueprint
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idName;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite uiIcon;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchRefGameObject prefab;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float unlockWeight;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IngredientList ingredientList;

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x85AE74", Offset = "0x85AE74", VA = "0x85AE74")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x85AEE0", Offset = "0x85AEE0", VA = "0x85AEE0")]
		public string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x85AF58", Offset = "0x85AF58", VA = "0x85AF58")]
		public Blueprint()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000453")]
	public class UnlockedBlueprintsState
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> unlockedBlueprints;

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x85B690", Offset = "0x85B690", VA = "0x85B690")]
		public UnlockedBlueprintsState()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x85B70C", Offset = "0x85B70C", VA = "0x85B70C")]
		public int GetNumUnlocked()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Blueprint> blueprints;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x85A820", Offset = "0x85A820", VA = "0x85A820")]
	public static string GetIngredientText(IngredientType type)
	{
		return null;
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x85A8D4", Offset = "0x85A8D4", VA = "0x85A8D4")]
	public Blueprint GetBlueprint(string id)
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x85A9F4", Offset = "0x85A9F4", VA = "0x85A9F4")]
	public bool HasLockedBlueprints(UnlockedBlueprintsState bpState)
	{
		return default(bool);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x85AA68", Offset = "0x85AA68", VA = "0x85AA68")]
	public Blueprint UnlockBlueprint(UnlockedBlueprintsState bpState)
	{
		return null;
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x85ACD0", Offset = "0x85ACD0", VA = "0x85ACD0")]
	public List<Blueprint> GetUnlocked(UnlockedBlueprintsState state, [Optional] List<Blueprint> cachedList)
	{
		return null;
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x85AE6C", Offset = "0x85AE6C", VA = "0x85AE6C")]
	public CraftRecipes()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D3BC", Offset = "0x62D3BC")]
public class CraftUIData : ScriptableObject
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] icons;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] colors;

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x85B75C", Offset = "0x85B75C", VA = "0x85B75C")]
	public CraftUIData()
	{
	}
}
[Token(Token = "0x20001B9")]
public class GalaxyMap
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector2> positions;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Pair<int, int>> edges;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Pair<int, int>> sectors;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<bool> visible;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<bool> visited;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<VesselInfo> vesselInfo;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int playerPosition;

	[Token(Token = "0x4000FA6")]
	private const int posPerSector = 8;

	[Token(Token = "0x4000FA7")]
	public const float sectorSize = 450f;

	[Token(Token = "0x4000FA8")]
	private const float sectorMargin = 30f;

	[Token(Token = "0x4000FA9")]
	private const float minSeparation = 50f;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GraphPathfinder.Graph _pathfindGraph;

	[Token(Token = "0x170000FB")]
	public GraphPathfinder.Graph PathfindGraph
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xAC4F68", Offset = "0xAC4F68", VA = "0xAC4F68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xAC5004", Offset = "0xAC5004", VA = "0xAC5004")]
	public void Generate()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xAC58E8", Offset = "0xAC58E8", VA = "0xAC58E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xAC5D3C", Offset = "0xAC5D3C", VA = "0xAC5D3C")]
	public bool IsVisited(int idx)
	{
		return default(bool);
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xAC5DB4", Offset = "0xAC5DB4", VA = "0xAC5DB4")]
	public void SetVisited(int idx)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xAC5E20", Offset = "0xAC5E20", VA = "0xAC5E20")]
	public int GetNumVisited()
	{
		return default(int);
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xAC5190", Offset = "0xAC5190", VA = "0xAC5190")]
	private void GenerateSector(int sectorX, int sectorY)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xAC5F1C", Offset = "0xAC5F1C", VA = "0xAC5F1C")]
	private static void ComputeEdges(List<Vector2> posSector, out List<Pair<int, int>> edgesSector)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xAC6180", Offset = "0xAC6180", VA = "0xAC6180")]
	private bool GetBoundingPositions(int? sectorX, int? sectorY, out int topMost, out int bottomMost, out int leftMost, out int rightMost, bool onlyVisible = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xAC64C0", Offset = "0xAC64C0", VA = "0xAC64C0")]
	public Rect GetBounds(bool onlyVisible = false)
	{
		return default(Rect);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xAC63D0", Offset = "0xAC63D0", VA = "0xAC63D0")]
	private int GetSectorOffset(int sectorX, int sectorY)
	{
		return default(int);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xAC59D4", Offset = "0xAC59D4", VA = "0xAC59D4")]
	public void RevealNeighbors(int idx, bool generateVesselsInfo = true, [Optional] List<int> revealedIndexes)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xAC669C", Offset = "0xAC669C", VA = "0xAC669C")]
	public void RevealAll(bool generateVesselsInfo = true)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xAC67D4", Offset = "0xAC67D4", VA = "0xAC67D4")]
	public GalaxyMap()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BA")]
public class GameState : IGameSerializable
{
	[Token(Token = "0x2000454")]
	private class SerializedData
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string levelOptions;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inventory;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seed;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerHealth;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float playerOxygen;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] playerFlashlights;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool jumpDriveEngaged;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool coordinatesSet;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool jumpPerformed;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] unlockedTextLogs;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] unlockedBlueprints;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LevelOptions.EModifiers[] unlockedLevelOptions;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float playtime;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float damageDealt;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float explored;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int kills;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int craftedItems;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string mission;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string mainManager;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string agentManager;

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x888180", Offset = "0x888180", VA = "0x888180")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string seed;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelOptions defaultLevelOptions;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelOptions levelOptions;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Inventory inventory;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int playerHealth;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerOxygen;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool[] playerFlashlights;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool jumpDriveEngaged;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool coordinatesSet;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool jumpPerformed;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> unlockedTextLogs;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> unlockedBlueprints;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<LevelOptions.EModifiers> unlockedLevelOptions;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float playtime;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float damageDealt;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float explored;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int kills;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int craftedItems;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D fullMinimap;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x887BB0", Offset = "0x887BB0", VA = "0x887BB0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x887EA0", Offset = "0x887EA0", VA = "0x887EA0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x888188", Offset = "0x888188", VA = "0x888188")]
	public void DeserializeStatePre(string dataString)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x888268", Offset = "0x888268", VA = "0x888268", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x88850C", Offset = "0x88850C", VA = "0x88850C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x888510", Offset = "0x888510", VA = "0x888510")]
	public GameState()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BB")]
public class MetagameState : IGameSerializable
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int numRuns;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextLogs.TextLogsState textLogs;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CraftRecipes.UnlockedBlueprintsState unlockedBlueprints;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelOptions.UnlockedModsState unlockedLevelOptions;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Tutorial.TutorialState tutorialState;

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xA686DC", Offset = "0xA686DC", VA = "0xA686DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xA687CC", Offset = "0xA687CC", VA = "0xA687CC", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA687D4", Offset = "0xA687D4", VA = "0xA687D4", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA6898C", Offset = "0xA6898C", VA = "0xA6898C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA68990", Offset = "0xA68990", VA = "0xA68990")]
	public MetagameState()
	{
	}
}
[Token(Token = "0x20001BC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D400", Offset = "0x62D400")]
public class Mission : ScriptableObject, IGameSerializable
{
	[Token(Token = "0x2000455")]
	private class SerializedData
	{
		[Serializable]
		[Token(Token = "0x200050D")]
		public struct Goal
		{
			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string data;
		}

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Goal[] goals;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Goal[] optionalGoals;

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xA6CBD0", Offset = "0xA6CBD0", VA = "0xA6CBD0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MissionGoal> goals;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MissionGoal> optionalGoals;

	[Token(Token = "0x14000034")]
	public event Action<MissionGoal> onGoalCompleted
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xA6B578", Offset = "0xA6B578", VA = "0xA6B578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B6E4", Offset = "0x63B6E4")]
		add
		{
		}
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xA6B61C", Offset = "0xA6B61C", VA = "0xA6B61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B6F4", Offset = "0x63B6F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event Action<MissionGoal> onGoalsChanged
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xA6B6C0", Offset = "0xA6B6C0", VA = "0xA6B6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B704", Offset = "0x63B704")]
		add
		{
		}
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xA6B764", Offset = "0xA6B764", VA = "0xA6B764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B714", Offset = "0x63B714")]
		remove
		{
		}
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA6B808", Offset = "0xA6B808", VA = "0xA6B808")]
	public bool IsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA6B910", Offset = "0xA6B910", VA = "0xA6B910")]
	public void Generate()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA6BAC8", Offset = "0xA6BAC8", VA = "0xA6BAC8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA6BF40", Offset = "0xA6BF40", VA = "0xA6BF40")]
	public void DeInitialize()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA6C21C", Offset = "0xA6C21C", VA = "0xA6C21C")]
	public void AddGoal(MissionGoal newGoal, bool optional = false)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA6C45C", Offset = "0xA6C45C", VA = "0xA6C45C")]
	public MissionGoal Get(string name)
	{
		return null;
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xA6C6A0", Offset = "0xA6C6A0", VA = "0xA6C6A0")]
	public bool IsCompleted(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xA6C750", Offset = "0xA6C750", VA = "0xA6C750")]
	public void SetCompleted(string name)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xA6C804", Offset = "0xA6C804", VA = "0xA6C804")]
	private void OnGoalCompleted(MissionGoal goal)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xA6C3E8", Offset = "0xA6C3E8", VA = "0xA6C3E8")]
	private void OnGoalsChanged(MissionGoal goal)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xA6C938", Offset = "0xA6C938", VA = "0xA6C938", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xA6CC54", Offset = "0xA6CC54", VA = "0xA6CC54", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xA6D26C", Offset = "0xA6D26C", VA = "0xA6D26C", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA6CF8C", Offset = "0xA6CF8C", VA = "0xA6CF8C")]
	private List<MissionGoal> ListAllGoals()
	{
		return null;
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xA6D07C", Offset = "0xA6D07C", VA = "0xA6D07C")]
	private MissionGoal DeserializeGoal(SerializedData.Goal goalData, List<MissionGoal> allGoals)
	{
		return null;
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xA6D2E8", Offset = "0xA6D2E8", VA = "0xA6D2E8")]
	public Mission()
	{
	}
}
[Token(Token = "0x20001BD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D444", Offset = "0x62D444")]
public class MissionGoal : ScriptableObject, IComparable
{
	[Token(Token = "0x2000456")]
	public enum EStatus
	{
		[Token(Token = "0x4001E0B")]
		Incomplete,
		[Token(Token = "0x4001E0C")]
		Complete
	}

	[Token(Token = "0x2000457")]
	private class SerializedData
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EStatus status;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int currentProgress;

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA6D3B0", Offset = "0xA6D3B0", VA = "0xA6D3B0")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string name;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string descriptionTextId;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOptional;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int priority;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string groupId;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string musicMood;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool autosave;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private EStatus _status;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int progressTotal;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int currentProgress;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MissionGoal[] newGoalsOnCompletion;

	[Token(Token = "0x170000FC")]
	public EStatus Status
	{
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xA6D2F0", Offset = "0xA6D2F0", VA = "0xA6D2F0")]
		get
		{
			return default(EStatus);
		}
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xA6BD68", Offset = "0xA6BD68", VA = "0xA6BD68")]
		set
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event Action<MissionGoal> onComplete
	{
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xA6BE9C", Offset = "0xA6BE9C", VA = "0xA6BE9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B724", Offset = "0x63B724")]
		add
		{
		}
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xA6C178", Offset = "0xA6C178", VA = "0xA6C178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B734", Offset = "0x63B734")]
		remove
		{
		}
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xA6D2F8", Offset = "0xA6D2F8", VA = "0xA6D2F8")]
	public int GetProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA6D300", Offset = "0xA6D300", VA = "0xA6D300", Slot = "5")]
	public virtual bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xA6D308", Offset = "0xA6D308", VA = "0xA6D308", Slot = "6")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xA6D30C", Offset = "0xA6D30C", VA = "0xA6D30C", Slot = "7")]
	public virtual void DeInitialize()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xA6D310", Offset = "0xA6D310", VA = "0xA6D310", Slot = "8")]
	public virtual void Generate()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xA6D314", Offset = "0xA6D314", VA = "0xA6D314", Slot = "4")]
	public int CompareTo(object obj)
	{
		return default(int);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xA6CBD8", Offset = "0xA6CBD8", VA = "0xA6CBD8")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xA6D270", Offset = "0xA6D270", VA = "0xA6D270")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xA6D3B8", Offset = "0xA6D3B8", VA = "0xA6D3B8")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xA6D3BC", Offset = "0xA6D3BC", VA = "0xA6D3BC")]
	public MissionGoal()
	{
	}
}
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D488", Offset = "0x62D488")]
public class MissionGoal_CollectItem : MissionGoal
{
	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Item itemPrefab;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string itemName;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xA6D3CC", Offset = "0xA6D3CC", VA = "0xA6D3CC", Slot = "5")]
	public override bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xA6D548", Offset = "0xA6D548", VA = "0xA6D548", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xA6D6A8", Offset = "0xA6D6A8", VA = "0xA6D6A8", Slot = "7")]
	public override void DeInitialize()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xA6D80C", Offset = "0xA6D80C", VA = "0xA6D80C")]
	private void OnInventoryChange()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xA6D818", Offset = "0xA6D818", VA = "0xA6D818", Slot = "8")]
	public override void Generate()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xA6DD7C", Offset = "0xA6DD7C", VA = "0xA6DD7C")]
	public MissionGoal_CollectItem()
	{
	}
}
[Token(Token = "0x20001BF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D4CC", Offset = "0x62D4CC")]
public class MissionGoal_Room : MissionGoal
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Room.RoomType roomType;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool leaveRoom;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int updateTask;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isInRoom;

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xA6DD8C", Offset = "0xA6DD8C", VA = "0xA6DD8C", Slot = "5")]
	public override bool UpdateComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xA6DEB4", Offset = "0xA6DEB4", VA = "0xA6DEB4", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xA6DF84", Offset = "0xA6DF84", VA = "0xA6DF84", Slot = "7")]
	public override void DeInitialize()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xA6E040", Offset = "0xA6E040", VA = "0xA6E040")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xA6E04C", Offset = "0xA6E04C", VA = "0xA6E04C")]
	public MissionGoal_Room()
	{
	}
}
[Token(Token = "0x20001C0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D510", Offset = "0x62D510")]
public class TextLogs : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000458")]
	public class TextLogsState
	{
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> shownLogs;

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x8139EC", Offset = "0x8139EC", VA = "0x8139EC")]
		public TextLogsState()
		{
		}
	}

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> logNames;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> logWeights;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Pair<List<string>, List<float>>> logsDict;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> candidates;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> candidateWeights;

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x813630", Offset = "0x813630", VA = "0x813630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x80BE30", Offset = "0x80BE30", VA = "0x80BE30")]
	public string SelectLog(TextLogsState logState, string groupID, bool markAsShown = true, [Optional] List<string> exclusion, [Optional] List<string> deserializationPrevUnlocked)
	{
		return null;
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x80BC38", Offset = "0x80BC38", VA = "0x80BC38")]
	public bool HasLockedLogs(TextLogsState logState, string groupID)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x80C0CC", Offset = "0x80C0CC", VA = "0x80C0CC")]
	public string GetLog(string logId)
	{
		return null;
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x81393C", Offset = "0x81393C", VA = "0x81393C")]
	public TextLogs()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class VesselInfo
{
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string vesselName;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string seed;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debris;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x986938", Offset = "0x986938", VA = "0x986938")]
	public void Generate(RandomNamesList shipNames)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x986A1C", Offset = "0x986A1C", VA = "0x986A1C")]
	public VesselInfo()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ConditionalByPlatform : MonoBehaviour
{
	[Token(Token = "0x2000459")]
	public enum Platform
	{
		[Token(Token = "0x4001E11")]
		Main,
		[Token(Token = "0x4001E12")]
		Low,
		[Token(Token = "0x4001E13")]
		NotQuest1
	}

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Platform validPlatform;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyImmediate;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x835E20", Offset = "0x835E20", VA = "0x835E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x835EFC", Offset = "0x835EFC", VA = "0x835EFC")]
	public ConditionalByPlatform()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SpawnByPlatform : MonoBehaviour
{
	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchRefGameObject prefab;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnOnAwake;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string setName;

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x136F0AC", Offset = "0x136F0AC", VA = "0x136F0AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x136F224", Offset = "0x136F224", VA = "0x136F224")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x136F0BC", Offset = "0x136F0BC", VA = "0x136F0BC")]
	private void Spawn()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x136F234", Offset = "0x136F234", VA = "0x136F234")]
	private void Reset()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x136F2F4", Offset = "0x136F2F4", VA = "0x136F2F4")]
	public SpawnByPlatform()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SwitchRef<T>
{
	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T low;

	[Token(Token = "0x170000FD")]
	public T Value
	{
		[Token(Token = "0x60010ED")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60010EE")]
		set
		{
		}
	}

	[Token(Token = "0x60010EF")]
	public T Get()
	{
		return (T)null;
	}

	[Token(Token = "0x60010F0")]
	public SwitchRef()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C5")]
public class SwitchRefGameObject
{
	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject low;

	[Token(Token = "0x170000FE")]
	public GameObject Value
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1375864", Offset = "0x1375864", VA = "0x1375864")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x137586C", Offset = "0x137586C", VA = "0x137586C")]
		set
		{
		}
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x1375874", Offset = "0x1375874", VA = "0x1375874")]
	public GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x137587C", Offset = "0x137587C", VA = "0x137587C")]
	public SwitchRefGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C6")]
public class SwitchRefScriptableObj
{
	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ScriptableObject low;

	[Token(Token = "0x170000FF")]
	public ScriptableObject Value
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1375924", Offset = "0x1375924", VA = "0x1375924")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x137592C", Offset = "0x137592C", VA = "0x137592C")]
		set
		{
		}
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x1375934", Offset = "0x1375934", VA = "0x1375934")]
	public ScriptableObject Get()
	{
		return null;
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x137593C", Offset = "0x137593C", VA = "0x137593C")]
	public SwitchRefScriptableObj()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C7")]
public class SwitchRefSpawnInfo
{
	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SpawnInfo low;

	[Token(Token = "0x17000100")]
	public SpawnInfo Value
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1375944", Offset = "0x1375944", VA = "0x1375944")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x137594C", Offset = "0x137594C", VA = "0x137594C")]
		set
		{
		}
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x1375954", Offset = "0x1375954", VA = "0x1375954")]
	public SpawnInfo Get()
	{
		return null;
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x1370B20", Offset = "0x1370B20", VA = "0x1370B20")]
	public SwitchRefSpawnInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C8")]
public class SwitchRefListSpawnInfo
{
	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<SpawnInfo> low;

	[Token(Token = "0x17000101")]
	public List<SpawnInfo> Value
	{
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x13758C4", Offset = "0x13758C4", VA = "0x13758C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x13758CC", Offset = "0x13758CC", VA = "0x13758CC")]
		set
		{
		}
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x13758D4", Offset = "0x13758D4", VA = "0x13758D4")]
	public List<SpawnInfo> Get()
	{
		return null;
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x13758DC", Offset = "0x13758DC", VA = "0x13758DC")]
	public SwitchRefListSpawnInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C9")]
public class SwitchRefMaterial
{
	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Material low;

	[Token(Token = "0x17000102")]
	public Material Value
	{
		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1375904", Offset = "0x1375904", VA = "0x1375904")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001102")]
		[Address(RVA = "0x137590C", Offset = "0x137590C", VA = "0x137590C")]
		set
		{
		}
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x1375914", Offset = "0x1375914", VA = "0x1375914")]
	public Material Get()
	{
		return null;
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x137591C", Offset = "0x137591C", VA = "0x137591C")]
	public SwitchRefMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CA")]
public class SwitchRefListGameObject
{
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<GameObject> low;

	[Token(Token = "0x17000103")]
	public List<GameObject> Value
	{
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1375884", Offset = "0x1375884", VA = "0x1375884")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x137588C", Offset = "0x137588C", VA = "0x137588C")]
		set
		{
		}
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x1375894", Offset = "0x1375894", VA = "0x1375894")]
	public List<GameObject> Get()
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x137589C", Offset = "0x137589C", VA = "0x137589C")]
	public SwitchRefListGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class SwitchRefListTexture
{
	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<Texture> low;

	[Token(Token = "0x17000104")]
	public List<Texture> Value
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x13758E4", Offset = "0x13758E4", VA = "0x13758E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110A")]
		[Address(RVA = "0x13758EC", Offset = "0x13758EC", VA = "0x13758EC")]
		set
		{
		}
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x13758F4", Offset = "0x13758F4", VA = "0x13758F4")]
	public List<Texture> Get()
	{
		return null;
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x13758FC", Offset = "0x13758FC", VA = "0x13758FC")]
	public SwitchRefListTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class SwitchRefListMaterial
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<Material> low;

	[Token(Token = "0x17000105")]
	public List<Material> Value
	{
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x13758A4", Offset = "0x13758A4", VA = "0x13758A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x13758AC", Offset = "0x13758AC", VA = "0x13758AC")]
		set
		{
		}
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x13758B4", Offset = "0x13758B4", VA = "0x13758B4")]
	public List<Material> Get()
	{
		return null;
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x13758BC", Offset = "0x13758BC", VA = "0x13758BC")]
	public SwitchRefListMaterial()
	{
	}
}
[Token(Token = "0x20001CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D554", Offset = "0x62D554")]
public class AmmoBackpack : MonoBehaviour
{
	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue spawnSound;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hapticStrength;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider boxCol;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x95FF08", Offset = "0x95FF08", VA = "0x95FF08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x95FF68", Offset = "0x95FF68", VA = "0x95FF68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x960014", Offset = "0x960014", VA = "0x960014")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x9600C0", Offset = "0x9600C0", VA = "0x9600C0")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x960424", Offset = "0x960424", VA = "0x960424")]
	private Item.Properties GetAmmo(AmmoBackpackRef weaponRef, out bool hasAmmo)
	{
		return null;
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x96062C", Offset = "0x96062C", VA = "0x96062C")]
	public static void ShowTutorial(GameObject weapon)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x96082C", Offset = "0x96082C", VA = "0x96082C")]
	public AmmoBackpack()
	{
	}
}
[Token(Token = "0x20001CE")]
public class AmmoBackpackRef : MonoBehaviour
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ammoItems;

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x96083C", Offset = "0x96083C", VA = "0x96083C")]
	public AmmoBackpackRef()
	{
	}
}
[Token(Token = "0x20001CF")]
public class DustAmbient : MonoBehaviour
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem dustMotes;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem infestationMotes;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Room currentRoom;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int updateTask;

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x87A324", Offset = "0x87A324", VA = "0x87A324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x87A3E0", Offset = "0x87A3E0", VA = "0x87A3E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x87A49C", Offset = "0x87A49C", VA = "0x87A49C")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x87A56C", Offset = "0x87A56C", VA = "0x87A56C")]
	private void UpdateRoom(Room room)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x87A5E8", Offset = "0x87A5E8", VA = "0x87A5E8")]
	public DustAmbient()
	{
	}
}
[Token(Token = "0x20001D0")]
public class HealthWatch : PlayerWatch
{
	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Health health;

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x8990DC", Offset = "0x8990DC", VA = "0x8990DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x8991AC", Offset = "0x8991AC", VA = "0x8991AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x89927C", Offset = "0x89927C", VA = "0x89927C")]
	private new void Start()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x899358", Offset = "0x899358", VA = "0x899358")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x899390", Offset = "0x899390", VA = "0x899390")]
	public void OnReceiveHeal()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x8993C0", Offset = "0x8993C0", VA = "0x8993C0")]
	public HealthWatch()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Holster : MonoBehaviour
{
	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLeftHolster;

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x89E258", Offset = "0x89E258", VA = "0x89E258")]
	private void Start()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x89E2E0", Offset = "0x89E2E0", VA = "0x89E2E0")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x891174", Offset = "0x891174", VA = "0x891174")]
	public void Store(Transform obj, bool serializeToInventory = true)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x890B74", Offset = "0x890B74", VA = "0x890B74")]
	public void Remove(Transform obj)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x89E310", Offset = "0x89E310", VA = "0x89E310")]
	public void Deserialize()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x89E4C8", Offset = "0x89E4C8", VA = "0x89E4C8")]
	public Holster()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HurtEffect : MonoBehaviour
{
	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoverySpeed;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] painSounds;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip deathSound;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Health health;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer renderer;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color currentColor;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource painSoundSrc;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isDying;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x89F1D8", Offset = "0x89F1D8", VA = "0x89F1D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x89F348", Offset = "0x89F348", VA = "0x89F348")]
	private void Update()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x89F4C4", Offset = "0x89F4C4", VA = "0x89F4C4")]
	private void OnReceiveDamage(int damagePoints, Health.Faction faction)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x89F65C", Offset = "0x89F65C", VA = "0x89F65C")]
	public HurtEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D3")]
public class Inventory : IGameSerializable
{
	[Token(Token = "0x200045A")]
	private class SerializedData
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int capacity;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Item.Properties.SerializedData> itemsData;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item.Properties.SerializedData leftHolsterItem;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Item.Properties.SerializedData rightHolsterItem;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Item.Properties.SerializedData[] handItems;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Item.Properties.SerializedData> equippedItems;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool armorEquipped;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int extraCapacity;

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x9BE0C8", Offset = "0x9BE0C8", VA = "0x9BE0C8")]
		public SerializedData()
		{
		}
	}

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxCapacity;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int capacity;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Item.Properties> itemsData;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item.Properties leftHolsterItem;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Item.Properties rightHolsterItem;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item.Properties[] handItems;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Item.Properties> equippedItems;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool armorEquipped;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int extraCapacity;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action onItemAdded;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onItemRemoved;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Inventory _instance;

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x9BC6E4", Offset = "0x9BC6E4", VA = "0x9BC6E4")]
	public static Inventory Get(bool autoCreate = true)
	{
		return null;
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x9BC7C4", Offset = "0x9BC7C4", VA = "0x9BC7C4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x9BC924", Offset = "0x9BC924", VA = "0x9BC924")]
	public bool AddItem(Item item, bool invokeCallbacks = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x9BCE80", Offset = "0x9BCE80", VA = "0x9BCE80")]
	public bool RemoveItem(Item.Properties properties)
	{
		return default(bool);
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x9BCF50", Offset = "0x9BCF50", VA = "0x9BCF50")]
	public void RemoveItem(int idx)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x9BCC68", Offset = "0x9BCC68", VA = "0x9BCC68")]
	public bool HasCapacity()
	{
		return default(bool);
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x9BCFD8", Offset = "0x9BCFD8", VA = "0x9BCFD8")]
	public int GetNumOwnedItems()
	{
		return default(int);
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x9BD028", Offset = "0x9BD028", VA = "0x9BD028")]
	public int GetCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x9BD038", Offset = "0x9BD038", VA = "0x9BD038")]
	public void SetHolster(Item item, bool leftHolster)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x9BD12C", Offset = "0x9BD12C", VA = "0x9BD12C")]
	public Item.Properties GetHolster(bool leftHolster)
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x9BD1A0", Offset = "0x9BD1A0", VA = "0x9BD1A0")]
	public void EquipItem(Item eqItem)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x9BD2B8", Offset = "0x9BD2B8", VA = "0x9BD2B8")]
	public void RestoreEquippedItems()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x9BD69C", Offset = "0x9BD69C", VA = "0x9BD69C")]
	public void SaveHandItems()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x9BD814", Offset = "0x9BD814", VA = "0x9BD814")]
	public void RestoreHandItems()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x9BCCCC", Offset = "0x9BCCCC", VA = "0x9BCCCC")]
	private Item.Properties GetPropertiesForSerialization(Item item)
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x9BDC84", Offset = "0x9BDC84", VA = "0x9BDC84", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x9BE100", Offset = "0x9BE100", VA = "0x9BE100", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x9BE780", Offset = "0x9BE780", VA = "0x9BE780", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x9BE784", Offset = "0x9BE784", VA = "0x9BE784")]
	public Inventory()
	{
	}
}
[Token(Token = "0x20001D4")]
public class InventoryCollector : MonoBehaviour
{
	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displaySpeed;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue collectSound;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float collectAnimationSpeed;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gracePeriod;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue enterSound;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue exitSound;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _canCollect;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 displayScale;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 largeScale;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color enabledColor;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Color atCapacityColor;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float displayOpacity;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer renderer;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer bubbleWrapperPrefab;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer bubbleWrapper;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public InventoryFoldout foldout;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material highlightInvalid;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632868", Offset = "0x632868")]
	public bool useCapsule;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float capsuleLength;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float capsuleRadius;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Item itemInCollectArea;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Transform> animatingItems;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float graceTime;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Collider[] colliderBuffer;

	[Token(Token = "0x17000106")]
	public bool CanCollect
	{
		[Token(Token = "0x6001141")]
		[Address(RVA = "0x9BE7F8", Offset = "0x9BE7F8", VA = "0x9BE7F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x9BE800", Offset = "0x9BE800", VA = "0x9BE800")]
	private void Start()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x9BEC78", Offset = "0x9BEC78", VA = "0x9BEC78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x9BEDB0", Offset = "0x9BEDB0", VA = "0x9BEDB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x9BF030", Offset = "0x9BF030", VA = "0x9BF030")]
	private void Update()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x9C0308", Offset = "0x9C0308", VA = "0x9C0308")]
	private void OnReleasedByHand(Hand hand, Interactable obj)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x9C07D0", Offset = "0x9C07D0", VA = "0x9C07D0")]
	public void SetCanCollect(bool canCollect, bool addGracePeriod = true)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x9BEB4C", Offset = "0x9BEB4C", VA = "0x9BEB4C")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x9C07F8", Offset = "0x9C07F8", VA = "0x9C07F8")]
	public InventoryCollector()
	{
	}
}
[Token(Token = "0x20001D5")]
public class InventoryFoldout : FSMComponent
{
	[Token(Token = "0x200045B")]
	private class EStates : FSM.StateContainer
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FSM.State Closed;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FSM.State Open;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FSM.State Closing;

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x9C2A04", Offset = "0x9C2A04", VA = "0x9C2A04")]
		public EStates()
		{
		}
	}

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EStates States;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InventoryItem bubblePrefab;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InventoryItem> bubbles;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numBubblesActive;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> targetPositions;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float arcDistance;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float angleInterval;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rowMaxItems;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float rowHeightSeparation;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rowDepthSeparation;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6328A0", Offset = "0x6328A0")]
	public Renderer decorativeBar;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro capacityText;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color barColor;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color barColorFull;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color textColor;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color textColorFull;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 barScale;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 textScale;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 barPosition;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 textPosition;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6328D8", Offset = "0x6328D8")]
	public AudioCue openSound;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioCue closeSound;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632910", Offset = "0x632910")]
	public Transform tutorialReference;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int blocked;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Hand openingHand;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PlayerBodyAttachment bodyAttach;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private InventoryCollector itemCollector;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Transform leaveSpaceForObj;

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x9C0938", Offset = "0x9C0938", VA = "0x9C0938")]
	private void Awake()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x9C09AC", Offset = "0x9C09AC", VA = "0x9C09AC", Slot = "9")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x9C0A88", Offset = "0x9C0A88", VA = "0x9C0A88", Slot = "10")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x9C0B74", Offset = "0x9C0B74", VA = "0x9C0B74")]
	private void Start()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x9C0D54", Offset = "0x9C0D54", VA = "0x9C0D54")]
	private void Closed_Enter()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x9C0F90", Offset = "0x9C0F90", VA = "0x9C0F90")]
	private void Closed_Update()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x9C10CC", Offset = "0x9C10CC", VA = "0x9C10CC")]
	private void Open_Enter()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x9C17B8", Offset = "0x9C17B8", VA = "0x9C17B8")]
	private void Open_Update()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x9C1C54", Offset = "0x9C1C54", VA = "0x9C1C54")]
	private void Open_Exit()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x9C1D70", Offset = "0x9C1D70", VA = "0x9C1D70")]
	private void Closing_Enter()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x9C1FC8", Offset = "0x9C1FC8", VA = "0x9C1FC8")]
	private void Closing_Update()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x9C2470", Offset = "0x9C2470", VA = "0x9C2470")]
	private void Close()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x9C1428", Offset = "0x9C1428", VA = "0x9C1428")]
	private void RebuildItems()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x9C2618", Offset = "0x9C2618", VA = "0x9C2618")]
	private Vector3 GetItemLocalPosition(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x9C0270", Offset = "0x9C0270", VA = "0x9C0270")]
	public void UpdatePositions()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x9C2948", Offset = "0x9C2948", VA = "0x9C2948")]
	public void Block()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x9C2958", Offset = "0x9C2958", VA = "0x9C2958")]
	public void Unblock()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x9C2968", Offset = "0x9C2968", VA = "0x9C2968")]
	public InventoryFoldout()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D5B8", Offset = "0x62D5B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D5B8", Offset = "0x62D5B8")]
public class InventoryItem : MonoBehaviour
{
	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float showupSpeed;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hidingSpeed;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer bubbleRenderer;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Item.Properties _itemData;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject itemProxy;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 itemCenterDelta;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 bubbleScale;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOnHover;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isHiding;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hidingProgress;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnSpawned;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float grabCooldown;

	[Token(Token = "0x17000107")]
	public Item.Properties ItemData
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x9C2A0C", Offset = "0x9C2A0C", VA = "0x9C2A0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x9C25F0", Offset = "0x9C25F0", VA = "0x9C25F0")]
		set
		{
		}
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x9C3284", Offset = "0x9C3284", VA = "0x9C3284")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x9C33B0", Offset = "0x9C33B0", VA = "0x9C33B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x9C3510", Offset = "0x9C3510", VA = "0x9C3510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x9C3560", Offset = "0x9C3560", VA = "0x9C3560")]
	private void Start()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x9C35EC", Offset = "0x9C35EC", VA = "0x9C35EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x9C3998", Offset = "0x9C3998", VA = "0x9C3998")]
	private void OnHoverBegin(Hand hand)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x9C3BEC", Offset = "0x9C3BEC", VA = "0x9C3BEC")]
	private void OnHoverEnd(Hand hand)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x9C3E2C", Offset = "0x9C3E2C", VA = "0x9C3E2C")]
	private void OnHoverUpdate(Hand hand)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x9C2A14", Offset = "0x9C2A14", VA = "0x9C2A14")]
	private void SetItemProxy()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x9C41A8", Offset = "0x9C41A8", VA = "0x9C41A8")]
	private bool SetMeshProxy(int idx, GameObject proxy, GameObject itemPrefab, Renderer prefabMeshRenderer, out Bounds proxyBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x9C3F30", Offset = "0x9C3F30", VA = "0x9C3F30")]
	private void SpawnItem(Hand hand)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x9C1FB4", Offset = "0x9C1FB4", VA = "0x9C1FB4")]
	public void Hide()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x9C2450", Offset = "0x9C2450", VA = "0x9C2450")]
	public bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x9C46E0", Offset = "0x9C46E0", VA = "0x9C46E0")]
	public InventoryItem()
	{
	}
}
[Token(Token = "0x20001D7")]
public class InvisibilityEffect : MonoBehaviour
{
	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color1;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color2;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float animFrequency;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer renderer;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material material;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float activeFactor;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isActive;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x9C4F78", Offset = "0x9C4F78", VA = "0x9C4F78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x9C4FFC", Offset = "0x9C4FFC", VA = "0x9C4FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x9C5038", Offset = "0x9C5038", VA = "0x9C5038")]
	private void Update()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x9C51F8", Offset = "0x9C51F8", VA = "0x9C51F8")]
	public void SetEffectActive(bool isActive)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x9C5238", Offset = "0x9C5238", VA = "0x9C5238")]
	public InvisibilityEffect()
	{
	}
}
[Token(Token = "0x20001D8")]
public class Minimap : MonoBehaviour
{
	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632958", Offset = "0x632958")]
	public Material minimapMaterial;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material minimapIconMaterial;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int materialIndex;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int materialIndexLow;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform forwardDir;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scaleFactor;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632990", Offset = "0x632990")]
	public bool revealMap;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool unoperative;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6329C8", Offset = "0x6329C8")]
	public float glitchLineSpeed;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isGlitched;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x632A00", Offset = "0x632A00")]
	public Vector2 glitchLineTime;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderTexture rtMap;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Texture2D gameOverMap;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool glitchLine;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float glitchLineProgress;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool glitchLineDownwards;

	[Token(Token = "0x4001069")]
	private const float glitchLineWidth = 0.05f;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material material;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Bounds levelBounds;

	[Token(Token = "0x400106C")]
	private const float padding = 0.05f;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xA689F4", Offset = "0xA689F4", VA = "0xA689F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA68CE4", Offset = "0xA68CE4", VA = "0xA68CE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA6A454", Offset = "0xA6A454", VA = "0xA6A454")]
	private void OnCheckSerializer()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA6A508", Offset = "0xA6A508", VA = "0xA6A508")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xA6A6C8", Offset = "0xA6A6C8", VA = "0xA6A6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xA6AF0C", Offset = "0xA6AF0C", VA = "0xA6AF0C")]
	public Texture2D RenderGameOverMap()
	{
		return null;
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xA68C18", Offset = "0xA68C18", VA = "0xA68C18")]
	private void ClearMap()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xA68FB8", Offset = "0xA68FB8", VA = "0xA68FB8")]
	private void RenderMap([Optional] Room currentRoom, bool gameover = false)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xA6B090", Offset = "0xA6B090", VA = "0xA6B090")]
	private void RenderRoomIcon(Vector3 roomCenter, int iconIdx, Color color)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xA6ADA0", Offset = "0xA6ADA0", VA = "0xA6ADA0")]
	private Vector3 MapToMinimap(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xA6B338", Offset = "0xA6B338", VA = "0xA6B338")]
	private void OnEnterRoom(Room room)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA6B340", Offset = "0xA6B340", VA = "0xA6B340")]
	private void OnPostSerialize()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xA68EE4", Offset = "0xA68EE4", VA = "0xA68EE4")]
	private void ScheduleGlitchLine()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA6B3E0", Offset = "0xA6B3E0", VA = "0xA6B3E0")]
	private void PlayGlitchLine()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xA6B434", Offset = "0xA6B434", VA = "0xA6B434")]
	public void SetGlitchedEMPulse(float duration)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xA6B504", Offset = "0xA6B504", VA = "0xA6B504")]
	private void StopGlitched()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xA6B50C", Offset = "0xA6B50C", VA = "0xA6B50C")]
	public Minimap()
	{
	}
}
[Token(Token = "0x20001D9")]
public class OxygenCounter : MonoBehaviour
{
	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float oxygen;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float decreaseRate;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damageTime;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int damageAmount;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Health.KillSignature killSignature;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float damageCooldown;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue breathingLowSound;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource breathingLowSoundSrc;

	[Token(Token = "0x14000037")]
	public event Action onDecrease
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x8388D4", Offset = "0x8388D4", VA = "0x8388D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B744", Offset = "0x63B744")]
		add
		{
		}
		[Token(Token = "0x6001184")]
		[Address(RVA = "0x838978", Offset = "0x838978", VA = "0x838978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B754", Offset = "0x63B754")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event Action onIncrease
	{
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x838A1C", Offset = "0x838A1C", VA = "0x838A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B764", Offset = "0x63B764")]
		add
		{
		}
		[Token(Token = "0x6001186")]
		[Address(RVA = "0x838AC0", Offset = "0x838AC0", VA = "0x838AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B774", Offset = "0x63B774")]
		remove
		{
		}
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x838B64", Offset = "0x838B64", VA = "0x838B64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x838C1C", Offset = "0x838C1C", VA = "0x838C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x838F54", Offset = "0x838F54", VA = "0x838F54")]
	public void Refill()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x838F60", Offset = "0x838F60", VA = "0x838F60")]
	public OxygenCounter()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OxygenWatch : PlayerWatch
{
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OxygenCounter oxygenCounter;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x838F88", Offset = "0x838F88", VA = "0x838F88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x839048", Offset = "0x839048", VA = "0x839048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x839108", Offset = "0x839108", VA = "0x839108")]
	private new void Start()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x839220", Offset = "0x839220", VA = "0x839220")]
	private void OnChange()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x839240", Offset = "0x839240", VA = "0x839240")]
	public OxygenWatch()
	{
	}
}
[Token(Token = "0x20001DB")]
public class PauseVisibilityToggler : MonoBehaviour
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Renderer> renderers;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> lights;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632A44", Offset = "0x632A44")]
	public bool _toggleTest;

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x83C85C", Offset = "0x83C85C", VA = "0x83C85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x83C94C", Offset = "0x83C94C", VA = "0x83C94C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x83CA3C", Offset = "0x83CA3C", VA = "0x83CA3C")]
	private void OnPauseChange(bool paused)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x83CA48", Offset = "0x83CA48", VA = "0x83CA48")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x83CEF8", Offset = "0x83CEF8", VA = "0x83CEF8")]
	public void ToggleTest()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x83CF60", Offset = "0x83CF60", VA = "0x83CF60")]
	public PauseVisibilityToggler()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Player : Singleton<Player>
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultCameraHeight;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform centerEye;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Hand leftHand;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Hand rightHand;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform mouth;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform body;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 lastSafePosition;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 bodyFacingDir;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632A7C", Offset = "0x632A7C")]
	public Holster holsterLeft;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Holster holsterRight;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public UIOptionsMenu optionsMenu;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TrackedClip eyeClip;

	[Token(Token = "0x17000108")]
	public static Transform CenterEye
	{
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x838EF8", Offset = "0x838EF8", VA = "0x838EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public static Hand LeftHand
	{
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x83FDA8", Offset = "0x83FDA8", VA = "0x83FDA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public static Hand RightHand
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x83FE04", Offset = "0x83FE04", VA = "0x83FE04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public static Hand PrimaryHand
	{
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x83FE60", Offset = "0x83FE60", VA = "0x83FE60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public static Hand SecondaryHand
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x83FED4", Offset = "0x83FED4", VA = "0x83FED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010D")]
	public static Vector3 BodyFacingDir
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x840008", Offset = "0x840008", VA = "0x840008")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010E")]
	public static Vector3 Position
	{
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x840068", Offset = "0x840068", VA = "0x840068")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010F")]
	public static Holster HolsterLeft
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x84014C", Offset = "0x84014C", VA = "0x84014C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	public static Holster HolsterRight
	{
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x8401A8", Offset = "0x8401A8", VA = "0x8401A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x83FF48", Offset = "0x83FF48", VA = "0x83FF48")]
	public static Hand GetHand(Hand.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x840204", Offset = "0x840204", VA = "0x840204")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x840524", Offset = "0x840524", VA = "0x840524")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x840858", Offset = "0x840858", VA = "0x840858")]
	public void Serialize(GameState gs)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x840A40", Offset = "0x840A40", VA = "0x840A40")]
	public void Deserialize(GameState gs)
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x840C9C", Offset = "0x840C9C", VA = "0x840C9C")]
	public void Reposition(Vector3 newPos, bool abortJump = true)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x840FE0", Offset = "0x840FE0", VA = "0x840FE0")]
	public void Rotate(float rotation)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x841140", Offset = "0x841140", VA = "0x841140")]
	public Vector3 GetTrackingDelta()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x840EF4", Offset = "0x840EF4", VA = "0x840EF4")]
	public void UpdateSafePosition()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x841224", Offset = "0x841224", VA = "0x841224")]
	public Vector3 CenterEyeClipped()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x84135C", Offset = "0x84135C", VA = "0x84135C")]
	public Player()
	{
	}
}
[Token(Token = "0x20001DD")]
public class PlayerBodyAttachment : MonoBehaviour
{
	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerHead;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaHeight;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceInFront;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool keepCentered;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool keepPositioned;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool checkCollisions;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionMask;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float collisionMargin;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playerMainTransform;

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x8413B4", Offset = "0x8413B4", VA = "0x8413B4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x841424", Offset = "0x841424", VA = "0x841424")]
	private void Update()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x841738", Offset = "0x841738", VA = "0x841738")]
	public void Recenter(bool reposition = false)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x84146C", Offset = "0x84146C", VA = "0x84146C")]
	public void Reposition()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x841838", Offset = "0x841838", VA = "0x841838")]
	public PlayerBodyAttachment()
	{
	}
}
[Token(Token = "0x20001DE")]
public class PlayerFlashlight : MonoBehaviour
{
	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VolumetricLightBeam lightBeam;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionMask;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer emissionObj;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material emissiveMat;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color emissionColor;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue toggleSound;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Triggable toggle;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerFlashlight otherHandLight;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _activated;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isBlinking;

	[Token(Token = "0x17000111")]
	public bool Activated
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x841860", Offset = "0x841860", VA = "0x841860")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x840C94", Offset = "0x840C94", VA = "0x840C94")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public float Range
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x8419D4", Offset = "0x8419D4", VA = "0x8419D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000113")]
	public float Angle
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x8419F0", Offset = "0x8419F0", VA = "0x8419F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x841A0C", Offset = "0x841A0C", VA = "0x841A0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x841B48", Offset = "0x841B48", VA = "0x841B48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x841C64", Offset = "0x841C64", VA = "0x841C64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x841D80", Offset = "0x841D80", VA = "0x841D80")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x841E8C", Offset = "0x841E8C", VA = "0x841E8C")]
	public float IsLit(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x842164", Offset = "0x842164", VA = "0x842164")]
	private void OnToggle(Hand hand)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x841868", Offset = "0x841868", VA = "0x841868")]
	private void SetActivated(bool newValue)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x842238", Offset = "0x842238", VA = "0x842238")]
	public void SetBlinkPulse(float duration)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x842314", Offset = "0x842314", VA = "0x842314")]
	private void StopBlink()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x842320", Offset = "0x842320", VA = "0x842320")]
	public PlayerFlashlight()
	{
	}
}
[Token(Token = "0x20001DF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D644", Offset = "0x62D644")]
public class PlayerHandModel : TimeIndependentBehaviour
{
	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool canPoint;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool canThumbsUp;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hand hand;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int animParamFlex;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int animParamPose;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int animParamPinch;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int animParamCustomPose;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int animLayerPoint;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int animLayerThumbsUp;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float pointBlend;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float thumbsUpBlend;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int customPoseIdx;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool overrideFlex;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float overrideFlexValue;

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x842328", Offset = "0x842328", VA = "0x842328")]
	private void Start()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x84252C", Offset = "0x84252C", VA = "0x84252C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x8426F8", Offset = "0x8426F8", VA = "0x8426F8")]
	private float SmoothBlendingValue(bool active, float curValue)
	{
		return default(float);
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x8426CC", Offset = "0x8426CC", VA = "0x8426CC")]
	public void SetCustomPose(int idx = 0)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x8427A0", Offset = "0x8427A0", VA = "0x8427A0")]
	public void OverrideFlex(float newValue)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x8427B0", Offset = "0x8427B0", VA = "0x8427B0")]
	public PlayerHandModel()
	{
	}
}
[Token(Token = "0x20001E0")]
public class PlayerInvisibility : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InvisibilityEffect screenEffect;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VisionTarget visionTarget;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerFlashlight[] flashLights;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isActive;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] flashLightStates;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x842860", Offset = "0x842860", VA = "0x842860")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x842938", Offset = "0x842938", VA = "0x842938")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x842940", Offset = "0x842940", VA = "0x842940")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x842A1C", Offset = "0x842A1C", VA = "0x842A1C")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x842AE4", Offset = "0x842AE4", VA = "0x842AE4")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x842BFC", Offset = "0x842BFC", VA = "0x842BFC")]
	public PlayerInvisibility()
	{
	}
}
[Token(Token = "0x20001E1")]
public class PlayerMovement : MonoBehaviour
{
	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxReach;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool snapToGrid;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float snapSize;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask floorLayer;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionLayer;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform referencePoint;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject teleportIconPrefab;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject teleportIcon;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportArc teleportArc;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorValid;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color colorInvalid;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool showingArc;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool useEnergy;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float minReach;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float energyRechargeRate;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float energy;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool animateTeleport;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float tpMoveDuration;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animatingPos;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timePos;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 lastPos;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 newPos;

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x842C04", Offset = "0x842C04", VA = "0x842C04")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x842CD8", Offset = "0x842CD8", VA = "0x842CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x8434A4", Offset = "0x8434A4", VA = "0x8434A4")]
	private void DoTeleport(Vector3 destinationPos)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x843648", Offset = "0x843648", VA = "0x843648")]
	public PlayerMovement()
	{
	}
}
[Token(Token = "0x20001E2")]
public class PlayerMovementJump : MonoBehaviour
{
	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxReach;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool snapToGrid;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float snapSize;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask floorLayer;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask collisionLayer;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionLOSCheckLayer;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform referencePoint;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform referencePointRight;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform referencePointLeft;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float capsuleCheckRadius;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float chestCheckRadius;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool snapToSafePos;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float snapSafeDist;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float snapSafeMargin;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool snapArcVisualsToSafe;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TeleportIconAnim teleportIconPrefab;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TeleportIconAnim teleportIconInvalidPrefab;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TeleportIconAnim teleportIcon;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TeleportIconAnim teleportIconInvalid;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TeleportArc teleportArc;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color colorValid;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color colorInvalid;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool showingArc;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool useEnergy;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float minReach;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float energyRechargeRate;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float energy;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool animateTeleport;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool fastJump;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float tpMoveSpeed;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maxJumpHeight;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float maxJumpRange;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float speedFactor;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float fastJumpDuration;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioCue startSound;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioCue endSound;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool animatingPos;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timePos;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float totalTimeJump;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float jumpHeight;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 lastPos;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 newPos;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PlayerRotation playerRotation;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TrackedClip eyeClip;

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x843684", Offset = "0x843684", VA = "0x843684")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x84387C", Offset = "0x84387C", VA = "0x84387C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x84561C", Offset = "0x84561C", VA = "0x84561C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x840EEC", Offset = "0x840EEC", VA = "0x840EEC")]
	public void AbortJump()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x844EDC", Offset = "0x844EDC", VA = "0x844EDC")]
	private bool FindSafePoint(Vector3 safePoint, Vector3 toSnapPos, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x84538C", Offset = "0x84538C", VA = "0x84538C")]
	private void DoTeleport(Vector3 destinationPos)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x845624", Offset = "0x845624", VA = "0x845624")]
	public void ApplyTrackingDeltaCorrection(Vector3 trackingDeltaCorrection)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x845710", Offset = "0x845710", VA = "0x845710")]
	public PlayerMovementJump()
	{
	}
}
[Token(Token = "0x20001E3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D6A8", Offset = "0x62D6A8")]
public class PlayerMovementSmoothWalk : MonoBehaviour
{
	[Token(Token = "0x200045C")]
	public enum EForwardsReference
	{
		[Token(Token = "0x4001E20")]
		LookDirection,
		[Token(Token = "0x4001E21")]
		LeftHand,
		[Token(Token = "0x4001E22")]
		RightHand
	}

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float walkBackwardsSpeedFactor;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strafeSpeedFactor;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedFactor;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EForwardsReference forwardsReference;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioCue footstepsSound;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float footstepLength;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x632AC4", Offset = "0x632AC4")]
	public Vector2 footstepStart;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioCue fallLandSound;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fallLandSpeed;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isGrounded;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool adjustableHeight;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool limitMotion;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fallSpeed;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterController charController;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform trackingRoot;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float footstep;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TrackedClip eyeClip;

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x845778", Offset = "0x845778", VA = "0x845778")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x8458F8", Offset = "0x8458F8", VA = "0x8458F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x846B80", Offset = "0x846B80", VA = "0x846B80")]
	private Transform GetForwardsRef()
	{
		return null;
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x846BC8", Offset = "0x846BC8", VA = "0x846BC8")]
	public PlayerMovementSmoothWalk()
	{
	}
}
[Token(Token = "0x20001E4")]
public class PlayerRoomTracker : MonoBehaviour
{
	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Room currentRoom;

	[Token(Token = "0x14000039")]
	public event Action<Room> onEnterRoom
	{
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x846E04", Offset = "0x846E04", VA = "0x846E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B784", Offset = "0x63B784")]
		add
		{
		}
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x846EA8", Offset = "0x846EA8", VA = "0x846EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B794", Offset = "0x63B794")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event Action<Room> onExitRoom
	{
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x846F4C", Offset = "0x846F4C", VA = "0x846F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7A4", Offset = "0x63B7A4")]
		add
		{
		}
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x846FF0", Offset = "0x846FF0", VA = "0x846FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7B4", Offset = "0x63B7B4")]
		remove
		{
		}
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x847094", Offset = "0x847094", VA = "0x847094")]
	private void Update()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x847264", Offset = "0x847264", VA = "0x847264")]
	public PlayerRoomTracker()
	{
	}
}
[Token(Token = "0x20001E5")]
public class PlayerRotation : MonoBehaviour
{
	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationAngle;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool smooth;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothSpeed;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float smoothSpeedFactor;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool bothHands;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool lockedMovement;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[HideInInspector]
	public bool lockedLeftHand;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[HideInInspector]
	public bool lockedRightHand;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TrackedClip eyeClip;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrackedClip[] handClips;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] handClipPos;

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x84726C", Offset = "0x84726C", VA = "0x84726C")]
	public void Update()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x847B44", Offset = "0x847B44", VA = "0x847B44")]
	public PlayerRotation()
	{
	}
}
[Token(Token = "0x20001E6")]
public class PlayerSetup : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200045D")]
	public struct ControllerOffsets
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputExt.EControllerType controllerType;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 offsetRight;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 offsetLeft;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 rotRight;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotLeft;
	}

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isVR;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trackingSpace;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632B24", Offset = "0x632B24")]
	public bool smoothLocomotion;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool smoothRotation;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool forbidLocomotion;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool forbidRotation;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632B5C", Offset = "0x632B5C")]
	public PlayerMovementJump movementJumpController;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632B94", Offset = "0x632B94")]
	public PlayerMovementSmoothWalk movementSmoothController;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterController characterController;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632BCC", Offset = "0x632BCC")]
	public PlayerRotation rotationController;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632C04", Offset = "0x632C04")]
	public GameObject braceletLeft;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject braceletRight;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIGoalsMenu goalsMenu;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform leftGoalsAnchor;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightGoalsAnchor;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632C3C", Offset = "0x632C3C")]
	public ControllerOffsets[] controllerOffsets;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InputExt.EControllerType activeControllerType;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632C74", Offset = "0x632C74")]
	public bool _SetupControllerOffsets;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632CD4", Offset = "0x632CD4")]
	public bool _RecenterTracking;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool needRecenterAfterHMDRemoved;

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x847BE8", Offset = "0x847BE8", VA = "0x847BE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x847BEC", Offset = "0x847BEC", VA = "0x847BEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x847BF0", Offset = "0x847BF0", VA = "0x847BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x847DA8", Offset = "0x847DA8", VA = "0x847DA8")]
	public void SetupHeight()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x848A94", Offset = "0x848A94", VA = "0x848A94")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x847F18", Offset = "0x847F18", VA = "0x847F18")]
	public void SetupLocomotion()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x8482D0", Offset = "0x8482D0", VA = "0x8482D0")]
	public void SetupBracelets()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x84847C", Offset = "0x84847C", VA = "0x84847C")]
	public void SetupHands()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x84851C", Offset = "0x84851C", VA = "0x84851C")]
	public void SetupControllerOffsets()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x8488A0", Offset = "0x8488A0", VA = "0x8488A0")]
	public void RecenterTracking()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x848AE0", Offset = "0x848AE0", VA = "0x848AE0")]
	private void OnRecenterEvent()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x848BDC", Offset = "0x848BDC", VA = "0x848BDC")]
	private void OnHMDMounted()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x848BF0", Offset = "0x848BF0", VA = "0x848BF0")]
	private void OnHMDUnmounted()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x848BFC", Offset = "0x848BFC", VA = "0x848BFC")]
	public PlayerSetup()
	{
	}
}
[Token(Token = "0x20001E7")]
public class PlayerWatch : MonoBehaviour
{
	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Material material;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialIndex;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int materialIndexLow;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float targetProgress;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float currentProgress;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float animProgressSpeed;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Color baseColor;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color flashColor;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float flashTime;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float flashCountdown;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lowHealthFlashTime;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource alarmSound;

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x83913C", Offset = "0x83913C", VA = "0x83913C")]
	public void Start()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x848C0C", Offset = "0x848C0C", VA = "0x848C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x848ECC", Offset = "0x848ECC", VA = "0x848ECC")]
	public void SetValue(float newValue, bool addFlash = false)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x839268", Offset = "0x839268", VA = "0x839268")]
	public PlayerWatch()
	{
	}
}
[Token(Token = "0x20001E8")]
public class PrefabCollection : MonoBehaviour
{
	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrefabCollectionData collectionData;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool randomizeOnStart;

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x84BB78", Offset = "0x84BB78", VA = "0x84BB78")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x84BD5C", Offset = "0x84BD5C", VA = "0x84BD5C")]
	public PrefabCollection()
	{
	}
}
[Token(Token = "0x20001E9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62D70C", Offset = "0x62D70C")]
public class PrefabCollectionData : ScriptableObject
{
	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x84BD64", Offset = "0x84BD64", VA = "0x84BD64")]
	public PrefabCollectionData()
	{
	}
}
[Token(Token = "0x20001EA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D750", Offset = "0x62D750")]
public class DraggableLinearSerializer : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x8798DC", Offset = "0x8798DC", VA = "0x8798DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x8798E8", Offset = "0x8798E8", VA = "0x8798E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x8798F0", Offset = "0x8798F0", VA = "0x8798F0", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x879954", Offset = "0x879954", VA = "0x879954", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x879AE8", Offset = "0x879AE8", VA = "0x879AE8", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x879AEC", Offset = "0x879AEC", VA = "0x879AEC")]
	public DraggableLinearSerializer()
	{
	}
}
[Token(Token = "0x20001EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D7B4", Offset = "0x62D7B4")]
public class DraggableRotSerializer : MonoBehaviour, IGameSerializable
{
	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x879C20", Offset = "0x879C20", VA = "0x879C20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x879C2C", Offset = "0x879C2C", VA = "0x879C2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x879C34", Offset = "0x879C34", VA = "0x879C34", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x879C98", Offset = "0x879C98", VA = "0x879C98", Slot = "5")]
	public void DeserializeState(string dataString)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x879D90", Offset = "0x879D90", VA = "0x879D90", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x879D94", Offset = "0x879D94", VA = "0x879D94")]
	public DraggableRotSerializer()
	{
	}
}
[Token(Token = "0x20001EC")]
public interface IGameSerializable
{
	[Token(Token = "0x6001202")]
	string SerializeState();

	[Token(Token = "0x6001203")]
	void DeserializeState(string dataString);

	[Token(Token = "0x6001204")]
	void DeserializeDestroy();
}
[Token(Token = "0x20001ED")]
public class ItemsTracker : MonoBehaviour, IGameSerializable
{
	[Serializable]
	[Token(Token = "0x200045E")]
	public class SerializedItems
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] itemsPos;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion[] itemsRot;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item.Properties[] itemsProperties;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x96E7C4", Offset = "0x96E7C4", VA = "0x96E7C4")]
		public SerializedItems()
		{
		}
	}

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Item> trackedItems;

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x96E300", Offset = "0x96E300", VA = "0x96E300", Slot = "4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x96E7CC", Offset = "0x96E7CC", VA = "0x96E7CC", Slot = "5")]
	public void DeserializeState(string jsonString)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x96E954", Offset = "0x96E954", VA = "0x96E954")]
	private void Start()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x96E9B0", Offset = "0x96E9B0", VA = "0x96E9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x96EAA4", Offset = "0x96EAA4", VA = "0x96EAA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x96EBA0", Offset = "0x96EBA0", VA = "0x96EBA0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x96ECA0", Offset = "0x96ECA0", VA = "0x96ECA0", Slot = "6")]
	public void DeserializeDestroy()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x96ECA4", Offset = "0x96ECA4", VA = "0x96ECA4")]
	public ItemsTracker()
	{
	}
}
[Token(Token = "0x20001EE")]
public class Savegame
{
	[Serializable]
	[Token(Token = "0x200045F")]
	public struct ObjData
	{
		[Token(Token = "0x200050E")]
		public enum Type
		{
			[Token(Token = "0x40020FF")]
			Generic,
			[Token(Token = "0x4002100")]
			Item,
			[Token(Token = "0x4002101")]
			Agent
		}

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type type;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool exists;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string data;
	}

	[Token(Token = "0x2000460")]
	public class Serializer
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Pair<IGameSerializable, ObjData.Type>> listSerializables;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<IGameSerializable, int> dictSerializables;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool deserializing;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool serializationAllowed;

		[Token(Token = "0x17000247")]
		public bool Deserializing
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x94AE00", Offset = "0x94AE00", VA = "0x94AE00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000059")]
		public event Action onPostDeserialization
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x94AE08", Offset = "0x94AE08", VA = "0x94AE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D5DC", Offset = "0x63D5DC")]
			add
			{
			}
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x94AEAC", Offset = "0x94AEAC", VA = "0x94AEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D5EC", Offset = "0x63D5EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x94A3E8", Offset = "0x94A3E8", VA = "0x94A3E8")]
		public void Register(IGameSerializable obj, ObjData.Type type)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x94A4B8", Offset = "0x94A4B8", VA = "0x94A4B8")]
		public void Unregister(IGameSerializable obj)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x94A6E8", Offset = "0x94A6E8", VA = "0x94A6E8")]
		public int GetRegistrationId(IGameSerializable obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x94A8A0", Offset = "0x94A8A0", VA = "0x94A8A0")]
		public IGameSerializable GetRegisteredObj(int id)
		{
			return null;
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x94AF50", Offset = "0x94AF50", VA = "0x94AF50")]
		public Savegame Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x94B330", Offset = "0x94B330", VA = "0x94B330")]
		public static void DeserializePreGeneration(Savegame save)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x94B3D8", Offset = "0x94B3D8", VA = "0x94B3D8")]
		public void DeserializePostGeneration(Savegame save)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x94B930", Offset = "0x94B930", VA = "0x94B930")]
		public Serializer()
		{
		}
	}

	[Token(Token = "0x2000461")]
	private struct TransformState
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 scale;

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x6B48FC", Offset = "0x6B48FC", VA = "0x6B48FC")]
		public TransformState(Transform xform)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x6B4904", Offset = "0x6B4904", VA = "0x6B4904")]
		public void Apply(Transform xform, bool applyScale = false)
		{
		}
	}

	[Token(Token = "0x4001136")]
	private const int saveVersion = 83;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string gameVersion;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int version;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string gameState;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerXForm;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjData[] objects;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x94A1A4", Offset = "0x94A1A4", VA = "0x94A1A4")]
	public string SerializeState()
	{
		return null;
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x94A1AC", Offset = "0x94A1AC", VA = "0x94A1AC")]
	public static Savegame DeserializeState(string dataString)
	{
		return null;
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x933F0C", Offset = "0x933F0C", VA = "0x933F0C")]
	public static void Register(IGameSerializable obj, ObjData.Type type)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x934050", Offset = "0x934050", VA = "0x934050")]
	public static void Unregister(IGameSerializable obj)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x94A5AC", Offset = "0x94A5AC", VA = "0x94A5AC")]
	public static int GetRegistrationId(IGameSerializable obj)
	{
		return default(int);
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x94A764", Offset = "0x94A764", VA = "0x94A764")]
	public static IGameSerializable GetRegisteredObj(int id)
	{
		return null;
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x94A928", Offset = "0x94A928", VA = "0x94A928")]
	public static Serializer GetSerializer()
	{
		return null;
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x94AA4C", Offset = "0x94AA4C", VA = "0x94AA4C")]
	public static bool IsDeserializing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x94AB78", Offset = "0x94AB78", VA = "0x94AB78")]
	public static string SerializeTransform(Transform xform)
	{
		return null;
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x94AC70", Offset = "0x94AC70", VA = "0x94AC70")]
	public static void DeserializeTransform(Transform xform, string dataString, bool applyScale = false)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x94AD90", Offset = "0x94AD90", VA = "0x94AD90")]
	public static Vector3 GetTransformPos(string dataString)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x94ADF8", Offset = "0x94ADF8", VA = "0x94ADF8")]
	public Savegame()
	{
	}
}
[Token(Token = "0x20001EF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D818", Offset = "0x62D818")]
public class AnimVertexColors : MonoBehaviour
{
	[Token(Token = "0x400113C")]
	private const float highFreqScale = 100000f;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lowFreqScale;

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x969D44", Offset = "0x969D44", VA = "0x969D44")]
	private void Start()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x96A150", Offset = "0x96A150", VA = "0x96A150")]
	public AnimVertexColors()
	{
	}
}
[Token(Token = "0x20001F0")]
public class AnimWarper : MonoBehaviour
{
	[Token(Token = "0x2000462")]
	private class BoneState
	{
		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int depth;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 deltaPos;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 deltaScale;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 startPos;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion startRot;

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x81FF40", Offset = "0x81FF40", VA = "0x81FF40")]
		public BoneState(Transform bone, int boneDepth)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x820024", Offset = "0x820024", VA = "0x820024")]
		public void AddPos(Vector3 delta)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x8200D8", Offset = "0x8200D8", VA = "0x8200D8")]
		public void AddScale(float scale)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x820174", Offset = "0x820174", VA = "0x820174")]
		public void AddScale(Vector3 scale)
		{
		}
	}

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform root;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer bodyRenderer;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer eyesRenderer;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, BoneState> bonesDict;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] warpWave;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform>[] warpWaveBones;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632D0C", Offset = "0x632D0C")]
	public float warpIntensity;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] warpScale;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform>[] warpScaleBones;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632D24", Offset = "0x632D24")]
	public float scaleIntensity;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 curveDirection;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632D3C", Offset = "0x632D3C")]
	public float curveIntensity;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632D54", Offset = "0x632D54")]
	public float headTracking;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x632D6C", Offset = "0x632D6C")]
	public float verticalCollapse;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CapsuleCollider capCollider;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float capsuleHeight;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 capsuleCenter;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minColliderFactor;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float waiter;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool inited;

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x96A160", Offset = "0x96A160", VA = "0x96A160")]
	private void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x96A294", Offset = "0x96A294", VA = "0x96A294")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x96A5A8", Offset = "0x96A5A8", VA = "0x96A5A8")]
	private void AddBonesToDict(Transform bone, int depth = 0)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x96A6C4", Offset = "0x96A6C4", VA = "0x96A6C4")]
	private void AddBonesToList(Transform bone, List<Transform> list)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x96A794", Offset = "0x96A794", VA = "0x96A794")]
	private void Update()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x96AAE8", Offset = "0x96AAE8", VA = "0x96AAE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x96B4DC", Offset = "0x96B4DC", VA = "0x96B4DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x96ACF8", Offset = "0x96ACF8", VA = "0x96ACF8")]
	private void ApplyWarpWave()
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x96AF78", Offset = "0x96AF78", VA = "0x96AF78")]
	private void ApplyWarpScale()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x96B228", Offset = "0x96B228", VA = "0x96B228")]
	private void ApplyCurve()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x96A7F0", Offset = "0x96A7F0", VA = "0x96A7F0")]
	public void ApplyVerticalCollapse()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x96B4E0", Offset = "0x96B4E0", VA = "0x96B4E0")]
	private BoneState GetBone(Transform bone)
	{
		return null;
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x96B55C", Offset = "0x96B55C", VA = "0x96B55C")]
	public AnimWarper()
	{
	}
}
[Token(Token = "0x20001F1")]
public class DbgObjectReposition : MonoBehaviour
{
	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distToPlayer;

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x86E6D8", Offset = "0x86E6D8", VA = "0x86E6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x86E7B4", Offset = "0x86E7B4", VA = "0x86E7B4")]
	private void Reposition()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x86E96C", Offset = "0x86E96C", VA = "0x86E96C")]
	public DbgObjectReposition()
	{
	}
}
[Token(Token = "0x20001F2")]
public class LoopMoveTest : MonoBehaviour
{
	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ILocomotion loco;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632D84", Offset = "0x632D84")]
	public bool _testWalk;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632DC8", Offset = "0x632DC8")]
	public bool _testHit;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632E0C", Offset = "0x632E0C")]
	public bool _testAngry;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632E50", Offset = "0x632E50")]
	public bool _testDie;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632E94", Offset = "0x632E94")]
	public bool _testDisappear;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632ED8", Offset = "0x632ED8")]
	public bool _testMeltUp;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x97AA28", Offset = "0x97AA28", VA = "0x97AA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x97AAB0", Offset = "0x97AAB0", VA = "0x97AAB0")]
	private void TryWalk()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x97AB28", Offset = "0x97AB28", VA = "0x97AB28")]
	private void Update()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x97AB2C", Offset = "0x97AB2C", VA = "0x97AB2C")]
	private void TestWalk()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x97ABB0", Offset = "0x97ABB0", VA = "0x97ABB0")]
	private void TestHit()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x97AC44", Offset = "0x97AC44", VA = "0x97AC44")]
	private void TestAngry()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x97AD70", Offset = "0x97AD70", VA = "0x97AD70")]
	private void TestDie()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x97ADFC", Offset = "0x97ADFC", VA = "0x97ADFC")]
	private void TestDisappear()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x97AE80", Offset = "0x97AE80", VA = "0x97AE80")]
	private void TestMeltUp()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x97AF4C", Offset = "0x97AF4C", VA = "0x97AF4C")]
	public LoopMoveTest()
	{
	}
}
[Token(Token = "0x20001F3")]
public class OcclusionVerifier : MonoBehaviour
{
	[Token(Token = "0x6001235")]
	[Address(RVA = "0xA72648", Offset = "0xA72648", VA = "0xA72648")]
	public OcclusionVerifier()
	{
	}
}
[Token(Token = "0x20001F4")]
public class PicoCheckCameras : MonoBehaviour
{
	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] checkCameras;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x83E23C", Offset = "0x83E23C", VA = "0x83E23C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x83E240", Offset = "0x83E240", VA = "0x83E240")]
	private void Update()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x83E3C4", Offset = "0x83E3C4", VA = "0x83E3C4")]
	public PicoCheckCameras()
	{
	}
}
[Token(Token = "0x20001F5")]
public class TentacleTest : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	public enum TailType
	{
		[Token(Token = "0x4001E3D")]
		thin,
		[Token(Token = "0x4001E3E")]
		fish
	}

	[Token(Token = "0x2000464")]
	public enum TailMode
	{
		[Token(Token = "0x4001E40")]
		CurlUpLeft,
		[Token(Token = "0x4001E41")]
		CurlUpRight,
		[Token(Token = "0x4001E42")]
		Wiggle
	}

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TailType tailtype;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TailMode tailMode;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alive;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float angle;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float length;

	[Token(Token = "0x4001164")]
	public const int segmentCount = 30;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] segments;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] targets;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] frequency;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] amplitude;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float offset;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int count;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] vertices;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] uvs;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color[] colours;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[] indices;

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x80A16C", Offset = "0x80A16C", VA = "0x80A16C")]
	private void Start()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x80A4C8", Offset = "0x80A4C8", VA = "0x80A4C8")]
	private void SetTargetAngle(float angle)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x80A514", Offset = "0x80A514", VA = "0x80A514")]
	private void Update()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x80AC5C", Offset = "0x80AC5C", VA = "0x80AC5C")]
	private void Die()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x80AC94", Offset = "0x80AC94", VA = "0x80AC94")]
	public TentacleTest()
	{
	}
}
[Token(Token = "0x20001F6")]
public class TestAnim : MonoBehaviour
{
	[Token(Token = "0x600123E")]
	[Address(RVA = "0x80D6CC", Offset = "0x80D6CC", VA = "0x80D6CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x80D748", Offset = "0x80D748", VA = "0x80D748")]
	public TestAnim()
	{
	}
}
[Token(Token = "0x20001F7")]
public class TestArmatureRescale : MonoBehaviour
{
	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float factor;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x632F1C", Offset = "0x632F1C")]
	public bool _reScale;

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x80D750", Offset = "0x80D750", VA = "0x80D750")]
	public void ReScale()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x80DA3C", Offset = "0x80DA3C", VA = "0x80DA3C")]
	public TestArmatureRescale()
	{
	}
}
[Token(Token = "0x20001F8")]
public class TestControllerRotation : MonoBehaviour
{
	[Token(Token = "0x6001242")]
	[Address(RVA = "0x80DA4C", Offset = "0x80DA4C", VA = "0x80DA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x80DA50", Offset = "0x80DA50", VA = "0x80DA50")]
	private void Update()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x80DA54", Offset = "0x80DA54", VA = "0x80DA54")]
	public TestControllerRotation()
	{
	}
}
[Token(Token = "0x20001F9")]
public class TestDecal : MonoBehaviour
{
	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StaticProxyCollection proxyCollection;

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x80DA5C", Offset = "0x80DA5C", VA = "0x80DA5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x80DB48", Offset = "0x80DB48", VA = "0x80DB48")]
	public TestDecal()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TestIKWalk : MonoBehaviour
{
	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IKController[] limbs;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 limbOutVector;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float footLimit;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float walkSpeed;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startHeight;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gaitAmplitude;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gaitFreq;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask footSupportLayer;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] legSplineOldEnd;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] legSplineCurrentEnd;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] legSplineExtension;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool first;

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x80E0D8", Offset = "0x80E0D8", VA = "0x80E0D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x80E490", Offset = "0x80E490", VA = "0x80E490")]
	private void Update()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x80E2D8", Offset = "0x80E2D8", VA = "0x80E2D8")]
	private Vector3 CalculateNewFootTarget(IKController limb, float offset = 1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x80E970", Offset = "0x80E970", VA = "0x80E970")]
	private Vector3 ProjectNewFootTarget(IKController limb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x80E7F4", Offset = "0x80E7F4", VA = "0x80E7F4")]
	private bool IsFootOutOfBounds(IKController limb)
	{
		return default(bool);
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x80EDD0", Offset = "0x80EDD0", VA = "0x80EDD0")]
	private void UpdateSplineLeg(int iLimb)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x80F168", Offset = "0x80F168", VA = "0x80F168")]
	public TestIKWalk()
	{
	}
}
[Token(Token = "0x20001FB")]
public class TestMinimapDiagram : MonoBehaviour
{
	[Token(Token = "0x600124E")]
	[Address(RVA = "0x80F1E8", Offset = "0x80F1E8", VA = "0x80F1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x80F370", Offset = "0x80F370", VA = "0x80F370")]
	public TestMinimapDiagram()
	{
	}
}
[Token(Token = "0x20001FC")]
public class TestOrbitObj : MonoBehaviour
{
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x811378", Offset = "0x811378", VA = "0x811378")]
	private void Start()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x81137C", Offset = "0x81137C", VA = "0x81137C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x811480", Offset = "0x811480", VA = "0x811480")]
	public TestOrbitObj()
	{
	}
}
[Token(Token = "0x20001FD")]
public class TestRoomLightAnchor : MonoBehaviour
{
	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform sourceRoom;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sector sector;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Renderer, Transform> anchorMap;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> freeAnchors;

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x811490", Offset = "0x811490", VA = "0x811490")]
	private void Start()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x811CE4", Offset = "0x811CE4", VA = "0x811CE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x81181C", Offset = "0x81181C", VA = "0x81181C")]
	private void Add(Renderer r)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x811E28", Offset = "0x811E28", VA = "0x811E28")]
	private void Remove(Renderer r)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x811F64", Offset = "0x811F64", VA = "0x811F64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x811980", Offset = "0x811980", VA = "0x811980")]
	private void UpdateAnchors()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x811F68", Offset = "0x811F68", VA = "0x811F68")]
	private void OnUpdateLightingProfile()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x811F6C", Offset = "0x811F6C", VA = "0x811F6C")]
	public TestRoomLightAnchor()
	{
	}
}
[Token(Token = "0x20001FE")]
public class TestSceneLoad : MonoBehaviour
{
	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool cleanup;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private UnityEngine.SceneManagement.Scene scene;

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x81201C", Offset = "0x81201C", VA = "0x81201C")]
	private void Start()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x812020", Offset = "0x812020", VA = "0x812020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x8120BC", Offset = "0x8120BC", VA = "0x8120BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x812158", Offset = "0x812158", VA = "0x812158")]
	private void OnSceneLoaded(UnityEngine.SceneManagement.Scene scn, LoadSceneMode lMode)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x812594", Offset = "0x812594", VA = "0x812594")]
	public TestSceneLoad()
	{
	}
}
[Token(Token = "0x20001FF")]
public class TestTrailerObjs : MonoBehaviour
{
	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform secDrone;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] gos;

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x81259C", Offset = "0x81259C", VA = "0x81259C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x812634", Offset = "0x812634", VA = "0x812634")]
	private void Start()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x812638", Offset = "0x812638", VA = "0x812638")]
	private void OnFinishMapGeneration()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x8127E0", Offset = "0x8127E0", VA = "0x8127E0")]
	public TestTrailerObjs()
	{
	}
}
[Token(Token = "0x2000200")]
public class TestVisProbes : MonoBehaviour
{
	[Token(Token = "0x6001264")]
	[Address(RVA = "0x8127E8", Offset = "0x8127E8", VA = "0x8127E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x812958", Offset = "0x812958", VA = "0x812958")]
	public TestVisProbes()
	{
	}
}
[Token(Token = "0x2000201")]
public class PrefabLowSwitcher : MonoBehaviour
{
	[Token(Token = "0x6001266")]
	[Address(RVA = "0x84C524", Offset = "0x84C524", VA = "0x84C524")]
	public PrefabLowSwitcher()
	{
	}
}
[Token(Token = "0x2000202")]
public class VariationEdit : MonoBehaviour
{
	[Token(Token = "0x2000465")]
	public class PrefabList : ScriptableObject
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> prefabs;

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xBEA9F8", Offset = "0xBEA9F8", VA = "0xBEA9F8")]
		public PrefabList()
		{
		}
	}

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PrefabList prefabList;

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xBEA9F0", Offset = "0xBEA9F0", VA = "0xBEA9F0")]
	public VariationEdit()
	{
	}
}
[Token(Token = "0x2000203")]
public class Credits : MonoBehaviour
{
	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text text;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float creditsShowTime;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int creditsIndex;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeout;

	[Token(Token = "0x1400003B")]
	public event Action onCreditsEnded
	{
		[Token(Token = "0x6001268")]
		[Address(RVA = "0x862778", Offset = "0x862778", VA = "0x862778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7C4", Offset = "0x63B7C4")]
		add
		{
		}
		[Token(Token = "0x6001269")]
		[Address(RVA = "0x86281C", Offset = "0x86281C", VA = "0x86281C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B7D4", Offset = "0x63B7D4")]
		remove
		{
		}
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x8628C0", Offset = "0x8628C0", VA = "0x8628C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x862984", Offset = "0x862984", VA = "0x862984")]
	private void Update()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x8629D8", Offset = "0x8629D8", VA = "0x8629D8")]
	private void AdvanceSection()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x862A9C", Offset = "0x862A9C", VA = "0x862A9C")]
	private string GetCreditsString(int idx)
	{
		return null;
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x862968", Offset = "0x862968", VA = "0x862968")]
	private void SetText(string txt)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x862B88", Offset = "0x862B88", VA = "0x862B88")]
	public Credits()
	{
	}
}
[Token(Token = "0x2000204")]
public class ItemInfoPanel : MonoBehaviour
{
	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hoverHeight;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text titleText;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text infoText;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas canvas;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 showScale;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer line;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UICraftIngredients craftIngredients;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform item;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer itemRenderer;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Item.Properties itemProperties;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isShowing;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ItemInfoPanel> listPanels;

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x9C6998", Offset = "0x9C6998", VA = "0x9C6998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x9C6AB0", Offset = "0x9C6AB0", VA = "0x9C6AB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x9C6BAC", Offset = "0x9C6BAC", VA = "0x9C6BAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x9C6C64", Offset = "0x9C6C64", VA = "0x9C6C64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x9C6C68", Offset = "0x9C6C68", VA = "0x9C6C68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x9C7214", Offset = "0x9C7214", VA = "0x9C7214")]
	public void Show(Transform item, Item.Properties itemProperties)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x9C7128", Offset = "0x9C7128", VA = "0x9C7128")]
	public void Hide(Transform item)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x9C7478", Offset = "0x9C7478", VA = "0x9C7478")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63B7E4", Offset = "0x63B7E4")]
	public static bool ShowInHand(Hand hand, Transform itemTransform, Item.Properties itemProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x9C7540", Offset = "0x9C7540", VA = "0x9C7540")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63B81C", Offset = "0x63B81C")]
	public static bool HideInHand(Hand hand, Transform itemTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x9C3A3C", Offset = "0x9C3A3C", VA = "0x9C3A3C")]
	public static bool ShowPanel(Transform itemTransform, Item.Properties itemProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x9C3C6C", Offset = "0x9C3C6C", VA = "0x9C3C6C")]
	public static bool HidePanel(Transform itemTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x9C7600", Offset = "0x9C7600", VA = "0x9C7600")]
	public ItemInfoPanel()
	{
	}
}
[Token(Token = "0x2000205")]
public class Tutorial : Singleton<Tutorial>
{
	[Serializable]
	[Token(Token = "0x2000466")]
	public class TutorialState
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> shownTutorials;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x81D080", Offset = "0x81D080", VA = "0x81D080")]
		public TutorialState()
		{
		}
	}

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TutorialPanel panelPrefab;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float showTime;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TutorialPanel> freePanels;

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x81B870", Offset = "0x81B870", VA = "0x81B870")]
	public bool HasBeenShowBefore(string tutoId, bool add = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x81B988", Offset = "0x81B988", VA = "0x81B988")]
	public void MarkAsShown(string tutoId)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x81BA60", Offset = "0x81BA60", VA = "0x81BA60")]
	public TutorialPanel Show(string tutoId, Transform refObj, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x81C370", Offset = "0x81C370", VA = "0x81C370")]
	public TutorialPanel ShowInPlace(string tutoId, Transform refObj, [Optional] Transform panelPos, bool lookAtCamera = false, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x81C5C4", Offset = "0x81C5C4", VA = "0x81C5C4")]
	public TutorialPanel ShowInPlace(string tutoId, Transform refObj, Vector3 pos, Quaternion rot, bool lookAtCamera = false, bool addAsShown = true)
	{
		return null;
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x81C7A8", Offset = "0x81C7A8", VA = "0x81C7A8")]
	public TutorialPanel GetPanel()
	{
		return null;
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x81BBBC", Offset = "0x81BBBC", VA = "0x81BBBC")]
	private TutorialPanel GetFreePanel()
	{
		return null;
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x81C850", Offset = "0x81C850", VA = "0x81C850")]
	private void FreePanel(TutorialPanel panel)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x81C950", Offset = "0x81C950", VA = "0x81C950")]
	public void SetMainTutorials()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x81CAF0", Offset = "0x81CAF0", VA = "0x81CAF0")]
	private void ShowTutorialLocomotion()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x81CB64", Offset = "0x81CB64", VA = "0x81CB64")]
	private void ShowTutorialRotation()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x81CBD8", Offset = "0x81CBD8", VA = "0x81CBD8")]
	private void MissionExitEntrance_onComplete(MissionGoal obj)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x81CD68", Offset = "0x81CD68", VA = "0x81CD68")]
	private void OnShowLookAtMap()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x81CE44", Offset = "0x81CE44", VA = "0x81CE44")]
	private void OnShowLookAtGoals()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x81CF20", Offset = "0x81CF20", VA = "0x81CF20")]
	private void OnShowTutorialFlashlight()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x81CFF4", Offset = "0x81CFF4", VA = "0x81CFF4")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000206")]
public class TutorialPanel : MonoBehaviour
{
	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool lookAtCamera;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool inPlace;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distToCamera;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool detectCollisions;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask collisionMask;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform refObject;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float showAnimSpeed;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float hideAnimSpeed;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioCue showSound;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioCue hideSound;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timer;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UITypewriteText typewriteFX;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshProUGUI tutoText;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Canvas canvas;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RectTransform rectTransform;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer line;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform playerEye;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 wantedLocalPos;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool showing;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float animFactor;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 defaultScale;

	[Token(Token = "0x1400003C")]
	public event Action<TutorialPanel> onHide
	{
		[Token(Token = "0x600128D")]
		[Address(RVA = "0x81C7AC", Offset = "0x81C7AC", VA = "0x81C7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B854", Offset = "0x63B854")]
		add
		{
		}
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x81D0FC", Offset = "0x81D0FC", VA = "0x81D0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B864", Offset = "0x63B864")]
		remove
		{
		}
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x81D1A0", Offset = "0x81D1A0", VA = "0x81D1A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x81D2F4", Offset = "0x81D2F4", VA = "0x81D2F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x81D350", Offset = "0x81D350", VA = "0x81D350")]
	private void Update()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x81D524", Offset = "0x81D524", VA = "0x81D524")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x81BD74", Offset = "0x81BD74", VA = "0x81BD74")]
	public void Show(string text, Transform refObj, bool inPlace = false, [Optional] Vector3? panelPos, [Optional] Quaternion? panelRot, bool lookAtCamera = true)
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x81E1A0", Offset = "0x81E1A0", VA = "0x81E1A0")]
	public void SetTimer(float time)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x81E1A8", Offset = "0x81E1A8", VA = "0x81E1A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x81DFF0", Offset = "0x81DFF0", VA = "0x81DFF0")]
	private void LookAtCamera()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x81E1B0", Offset = "0x81E1B0", VA = "0x81E1B0")]
	public TutorialPanel()
	{
	}
}
[Token(Token = "0x2000207")]
public class TutorialTrigger : MonoBehaviour
{
	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632F74", Offset = "0x632F74")]
	public string tutoId;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x632FAC", Offset = "0x632FAC")]
	public Transform refObject;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform panelPosition;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lookAtCamera;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool autoHide;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int checkTask;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BoxCollider triggerBox;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialPanel tutoPanel;

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x81E1D0", Offset = "0x81E1D0", VA = "0x81E1D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x81E230", Offset = "0x81E230", VA = "0x81E230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x81E338", Offset = "0x81E338", VA = "0x81E338")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x81E3F4", Offset = "0x81E3F4", VA = "0x81E3F4")]
	private void Check()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x81E66C", Offset = "0x81E66C", VA = "0x81E66C")]
	public void Show()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x81E79C", Offset = "0x81E79C", VA = "0x81E79C")]
	public void Hide(bool markAsShown = true)
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x81E874", Offset = "0x81E874", VA = "0x81E874")]
	public TutorialTrigger()
	{
	}
}
[Token(Token = "0x2000208")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D87C", Offset = "0x62D87C")]
public class UIButtonHover : MonoBehaviour
{
	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button button;

	[Token(Token = "0x1400003D")]
	public event Action<Button> onEnter
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x81E88C", Offset = "0x81E88C", VA = "0x81E88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B874", Offset = "0x63B874")]
		add
		{
		}
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x81E930", Offset = "0x81E930", VA = "0x81E930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B884", Offset = "0x63B884")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public event Action<Button> onExit
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x81E9D4", Offset = "0x81E9D4", VA = "0x81E9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B894", Offset = "0x63B894")]
		add
		{
		}
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x81EA78", Offset = "0x81EA78", VA = "0x81EA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8A4", Offset = "0x63B8A4")]
		remove
		{
		}
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x81EB1C", Offset = "0x81EB1C", VA = "0x81EB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x81EE28", Offset = "0x81EE28", VA = "0x81EE28")]
	private void OnHoverStart(BaseEventData evData)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x81EEB0", Offset = "0x81EEB0", VA = "0x81EEB0")]
	private void OnHoverEnd(BaseEventData evData)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x81EF38", Offset = "0x81EF38", VA = "0x81EF38")]
	public UIButtonHover()
	{
	}
}
[Token(Token = "0x2000209")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D8E0", Offset = "0x62D8E0")]
public class UIButtonSounds : MonoBehaviour
{
	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioCue hoverSound;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue clickSound;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventTrigger evTrigger;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button button;

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x8EC36C", Offset = "0x8EC36C", VA = "0x8EC36C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x8EC628", Offset = "0x8EC628", VA = "0x8EC628")]
	public void OnHover(BaseEventData evData)
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x8EC69C", Offset = "0x8EC69C", VA = "0x8EC69C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x8EC6D8", Offset = "0x8EC6D8", VA = "0x8EC6D8")]
	public UIButtonSounds()
	{
	}
}
[Token(Token = "0x200020A")]
public class UICraftBlueprint : MonoBehaviour
{
	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633004", Offset = "0x633004")]
	public Image mainIcon;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI nameText;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICraftIngredients ingredients;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button craftBtn;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button cancelButton;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63303C", Offset = "0x63303C")]
	public CraftRecipes recipes;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CraftRecipes.Blueprint blueprint;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CraftRecipes.IngredientList ownedIngredients;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action onCancel;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action onCraft;

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x8EC6E0", Offset = "0x8EC6E0", VA = "0x8EC6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x8ECB00", Offset = "0x8ECB00", VA = "0x8ECB00")]
	public void ShowBlueprint(CraftRecipes.Blueprint bp, [Optional] CraftRecipes.IngredientList owned)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x8EC830", Offset = "0x8EC830", VA = "0x8EC830")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x8ECFD0", Offset = "0x8ECFD0", VA = "0x8ECFD0")]
	public void OnCraftButton()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x8ECFE4", Offset = "0x8ECFE4", VA = "0x8ECFE4")]
	public void OnCancelButton()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x8ECFF8", Offset = "0x8ECFF8", VA = "0x8ECFF8")]
	public UICraftBlueprint()
	{
	}
}
[Token(Token = "0x200020B")]
public class UICraftIngredients : MonoBehaviour
{
	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftUIData craftUIData;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] entries;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string formatString;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image[] icons;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI[] texts;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633074", Offset = "0x633074")]
	public Image[] ticks;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite tickValid;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tickInvalid;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color tickValidColor;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color tickInvalidColor;

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x8ED000", Offset = "0x8ED000", VA = "0x8ED000")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x8ECB3C", Offset = "0x8ECB3C", VA = "0x8ECB3C")]
	public bool ShowIngredients(CraftRecipes.IngredientList list, [Optional] CraftRecipes.IngredientList owned)
	{
		return default(bool);
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x8ED230", Offset = "0x8ED230", VA = "0x8ED230")]
	private void SetTick(int i, bool valid)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x8ED304", Offset = "0x8ED304", VA = "0x8ED304")]
	public UICraftIngredients()
	{
	}
}
[Token(Token = "0x200020C")]
public class UICraftSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000467")]
	public class GridButton
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button button;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image backIcon;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x8ED8AC", Offset = "0x8ED8AC", VA = "0x8ED8AC")]
		public GridButton()
		{
		}
	}

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftRecipes recipes;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6330AC", Offset = "0x6330AC")]
	public Button leftArrowBtn;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button rightArrowBtn;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GridButton[] buttons;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI emptyText;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<CraftRecipes.Blueprint> onBlueprintSelect;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CraftRecipes.Blueprint> unlockedBlueprints;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int pageOffset;

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x8ED364", Offset = "0x8ED364", VA = "0x8ED364")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x8ED368", Offset = "0x8ED368", VA = "0x8ED368")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x8ED730", Offset = "0x8ED730", VA = "0x8ED730")]
	public void OnLeftArrowBtn()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x8ED758", Offset = "0x8ED758", VA = "0x8ED758")]
	public void OnRightArrowBtn()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x8ED780", Offset = "0x8ED780", VA = "0x8ED780")]
	public void OnGridBtn(int idx)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x8ED830", Offset = "0x8ED830", VA = "0x8ED830")]
	public UICraftSelector()
	{
	}
}
[Token(Token = "0x200020D")]
public class UIDisclaimer : MonoBehaviour
{
	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x8ED8B4", Offset = "0x8ED8B4", VA = "0x8ED8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x8ED9E8", Offset = "0x8ED9E8", VA = "0x8ED9E8")]
	public UIDisclaimer()
	{
	}
}
[Token(Token = "0x200020E")]
public class UIFuel : MonoBehaviour
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fuelCount;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fuelCounterPanel;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fuelStandByPanel;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FuelContainer fuelContainer;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Interactable fuelContainerHandle;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource fuelProcessSound;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource fuelEmptySound;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIGalaxyView galaxyConsole;

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x8EDEB8", Offset = "0x8EDEB8", VA = "0x8EDEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x8EDFD4", Offset = "0x8EDFD4", VA = "0x8EDFD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x8EE09C", Offset = "0x8EE09C", VA = "0x8EE09C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x8EDF08", Offset = "0x8EDF08", VA = "0x8EDF08")]
	public void RefreshCounter(bool delaySoundJump = true)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x8EE164", Offset = "0x8EE164", VA = "0x8EE164")]
	private void OnFuelInserted()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x8EE264", Offset = "0x8EE264", VA = "0x8EE264")]
	private void OnFuelProcessed()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x8EE2C4", Offset = "0x8EE2C4", VA = "0x8EE2C4")]
	public UIFuel()
	{
	}
}
[Token(Token = "0x200020F")]
public class UIGalaxyView : MonoBehaviour
{
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x8EE2CC", Offset = "0x8EE2CC", VA = "0x8EE2CC")]
	public UIGalaxyView()
	{
	}
}
[Token(Token = "0x2000210")]
public class UIGoal : MonoBehaviour
{
	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image backgroundImg;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textName;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color activeColorBackground;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color activeColorText;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color inactiveColorBackground;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color inactiveColorText;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color highlightColorBackground;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string goalId;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isActive;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isHighlighted;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float animTimer;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool animStatus;

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x8EE2D4", Offset = "0x8EE2D4", VA = "0x8EE2D4")]
	public void Set(string goalId, string text, bool isActive)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x8EE3FC", Offset = "0x8EE3FC", VA = "0x8EE3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x8EE4B8", Offset = "0x8EE4B8", VA = "0x8EE4B8")]
	public void SetHighlight(bool highlight)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x8EE55C", Offset = "0x8EE55C", VA = "0x8EE55C")]
	public UIGoal()
	{
	}
}
[Token(Token = "0x2000211")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D944", Offset = "0x62D944")]
public class UIGoalsMenu : TimeIndependentBehaviour
{
	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform goalsList;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIGoal goalUIPrefab;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIGoal goalUITitlePrefab;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxVerticalAngle;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxCameraAngle;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxLookAngle;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float deploySpeed;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioCue noticeSound;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioCue openSound;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioCue closeSound;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button optionsButtonLeft;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button optionsButtonRight;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 scale;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float deployFactor;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Canvas canvas;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider canvasInteractionCollider;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Mission missionGoals;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UIGoal goalsTitle;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<UIGoal> goalsUIList;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float padding;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool hasNotice;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float noticeSoundTimer;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isShowing;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float openSoundTimer;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float closeSoundTimer;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<string> shownGoals;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool forceOpen;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool initialized;

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x8EE564", Offset = "0x8EE564", VA = "0x8EE564")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x8EE5F8", Offset = "0x8EE5F8", VA = "0x8EE5F8")]
	private void OnInitScene()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x8EF02C", Offset = "0x8EF02C", VA = "0x8EF02C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x8EF194", Offset = "0x8EF194", VA = "0x8EF194")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x8EF3AC", Offset = "0x8EF3AC", VA = "0x8EF3AC", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x8EE950", Offset = "0x8EE950", VA = "0x8EE950")]
	private void RefreshList(bool highlightNew)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x8EFBCC", Offset = "0x8EFBCC", VA = "0x8EFBCC")]
	private void OnGoalsChanged(MissionGoal goal)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x8EFBFC", Offset = "0x8EFBFC", VA = "0x8EFBFC")]
	public void OnOptionsButton()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x8EFF78", Offset = "0x8EFF78", VA = "0x8EFF78")]
	public void SetupOptionsButton(bool leftHand)
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x8EFFDC", Offset = "0x8EFFDC", VA = "0x8EFFDC")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x8EFFE4", Offset = "0x8EFFE4", VA = "0x8EFFE4")]
	private void OnPostDeserialization()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x8EFFEC", Offset = "0x8EFFEC", VA = "0x8EFFEC")]
	public UIGoalsMenu()
	{
	}
}
[Token(Token = "0x2000212")]
public class UIIntroArchive : MonoBehaviour
{
	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6330F4", Offset = "0x6330F4")]
	public GameObject mainSelector;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UICraftSelector blueprintSelectorUI;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UICraftBlueprint blueprintUI;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIIntroTextLog textLogUI;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI counterBlueprints;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI counterTextLogs;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject resetConfirmationDialog;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x8F0074", Offset = "0x8F0074", VA = "0x8F0074")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x8F01CC", Offset = "0x8F01CC", VA = "0x8F01CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x8F041C", Offset = "0x8F041C", VA = "0x8F041C")]
	private void RefreshCounters()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x8F05D0", Offset = "0x8F05D0", VA = "0x8F05D0")]
	public void OnEnterBlueprints()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x8F0620", Offset = "0x8F0620", VA = "0x8F0620")]
	public void OnEnterTextLogs()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x8F0670", Offset = "0x8F0670", VA = "0x8F0670")]
	public void OnBlueprintSelection(CraftRecipes.Blueprint bp)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x8F06E4", Offset = "0x8F06E4", VA = "0x8F06E4")]
	public void OnBlueprintCancel()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x8F0740", Offset = "0x8F0740", VA = "0x8F0740")]
	public void OnBlueprintSelectorCancel()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x8F0790", Offset = "0x8F0790", VA = "0x8F0790")]
	public void OnTextLogCancel()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x8F07E0", Offset = "0x8F07E0", VA = "0x8F07E0")]
	public void OnResetData()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x8F0800", Offset = "0x8F0800", VA = "0x8F0800")]
	public void OnResetDataConfirmationYes()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x8F087C", Offset = "0x8F087C", VA = "0x8F087C")]
	public void OnResetDataConfirmationNo()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x8F089C", Offset = "0x8F089C", VA = "0x8F089C")]
	public UIIntroArchive()
	{
	}
}
[Token(Token = "0x2000213")]
public class UIIntroGameOver : MonoBehaviour
{
	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63312C", Offset = "0x63312C")]
	public Transform console;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 deployedPos;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 retractedPos;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool deployed;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633164", Offset = "0x633164")]
	public GameObject gameOverTitleBarEscaped;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject gameOverTitleBarDead;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI gameOverText;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform unlockGrid;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI unlockLogs;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform unlockBlueprintPrefab;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform unlockLOptionPrefab;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CraftRecipes recipes;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Sprite> levelOptionSprites;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UIScreenToggle screenToggleFX;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63319C", Offset = "0x63319C")]
	public GameObject summaryScreen;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image summaryMap;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI summaryText;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI summaryVessel;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIScreenToggle summaryToggleFX;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float deployRate;

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x8F08A4", Offset = "0x8F08A4", VA = "0x8F08A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x8F096C", Offset = "0x8F096C", VA = "0x8F096C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x8F0970", Offset = "0x8F0970", VA = "0x8F0970")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x8F0CA4", Offset = "0x8F0CA4", VA = "0x8F0CA4")]
	public void SetDeployed(bool isDeployed, bool instantaneous = false)
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x8F0CEC", Offset = "0x8F0CEC", VA = "0x8F0CEC")]
	public void ShowGameOver(bool escaped, string text)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x8F171C", Offset = "0x8F171C", VA = "0x8F171C")]
	public UIIntroGameOver()
	{
	}
}
[Token(Token = "0x2000214")]
public class UIIntroMain : MonoBehaviour
{
	[Token(Token = "0x2000468")]
	private enum EStates
	{
		[Token(Token = "0x4001E49")]
		Intro,
		[Token(Token = "0x4001E4A")]
		MainMenu,
		[Token(Token = "0x4001E4B")]
		LevelConfig,
		[Token(Token = "0x4001E4C")]
		Credits
	}

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button startBtn;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIModalText modalDialog;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject backgroundPanel;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6331D4", Offset = "0x6331D4")]
	public GameObject mainPanel;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button continueBtn;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button newGameBtn;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button optionsBtn;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63320C", Offset = "0x63320C")]
	public GameObject levelConfigPanel;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject weaponFrame;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button weaponButton;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject randomFrame;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string[] weaponBlueprints;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] weaponImages;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool randomMods;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633244", Offset = "0x633244")]
	public GameObject creditsPanel;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Credits credits;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button boardBtn;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UIScreenToggle screenToggleFX;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TutorialTrigger tutoInteractConsole;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63327C", Offset = "0x63327C")]
	public GameObject debugPanel;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button debugGodModeBtn;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button debugResourcesBtn;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Button debugKeysBtn;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button debugFuelBtn;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private EStates state;

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x8F1724", Offset = "0x8F1724", VA = "0x8F1724")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x8F17B4", Offset = "0x8F17B4", VA = "0x8F17B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x8F1F58", Offset = "0x8F1F58", VA = "0x8F1F58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x8F2018", Offset = "0x8F2018", VA = "0x8F2018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x8F20E0", Offset = "0x8F20E0", VA = "0x8F20E0")]
	public void Activate()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x8F2138", Offset = "0x8F2138", VA = "0x8F2138")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x8F1AB0", Offset = "0x8F1AB0", VA = "0x8F1AB0")]
	private void SetState(EStates newState)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x8F23B0", Offset = "0x8F23B0", VA = "0x8F23B0")]
	public void OnStartButton()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x8F24EC", Offset = "0x8F24EC", VA = "0x8F24EC")]
	public void OnNewGame()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x8F28EC", Offset = "0x8F28EC", VA = "0x8F28EC")]
	private void OnNewGameConfirm()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x8F2B34", Offset = "0x8F2B34", VA = "0x8F2B34")]
	private void OnNewGameCancel()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x8F2C00", Offset = "0x8F2C00", VA = "0x8F2C00")]
	public void OnContinueGame()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x8F2E90", Offset = "0x8F2E90", VA = "0x8F2E90")]
	private void OnContinueGameDialogClose()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x8F2FC8", Offset = "0x8F2FC8", VA = "0x8F2FC8")]
	public void OnOptions()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x8F3070", Offset = "0x8F3070", VA = "0x8F3070")]
	public void OnCredits()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x8F3078", Offset = "0x8F3078", VA = "0x8F3078")]
	public void OnCreditsEnd()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x8F30B4", Offset = "0x8F30B4", VA = "0x8F30B4")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x8F31C4", Offset = "0x8F31C4", VA = "0x8F31C4")]
	private void OnQuitConfirm()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x8F32F0", Offset = "0x8F32F0", VA = "0x8F32F0")]
	private void OnQuitCancel()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x8F33BC", Offset = "0x8F33BC", VA = "0x8F33BC")]
	public void OnLevelConfigBack()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x8F33C4", Offset = "0x8F33C4", VA = "0x8F33C4")]
	public void OnLevelConfigBoard()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x8F34CC", Offset = "0x8F34CC", VA = "0x8F34CC")]
	public void OnLevelConfigToggle(UIIntroToggle toggle, bool newValue)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x8F358C", Offset = "0x8F358C", VA = "0x8F358C")]
	public void OnLevelConfigRandomToggle(UIIntroToggle toggle, bool newValue)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x8F37E0", Offset = "0x8F37E0", VA = "0x8F37E0")]
	public void OnLevelConfigWeaponBtn()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x8F217C", Offset = "0x8F217C", VA = "0x8F217C")]
	private void RefreshLevelConfigWeapon()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x8F39BC", Offset = "0x8F39BC", VA = "0x8F39BC")]
	private void OnLevelConfigWeaponHoverEnter(Button btn)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x8F3AA8", Offset = "0x8F3AA8", VA = "0x8F3AA8")]
	private void OnLevelConfigWeaponHoverExit(Button btn)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x8F3B44", Offset = "0x8F3B44", VA = "0x8F3B44")]
	private void OnLevelConfigWeaponDialogClose()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x8F33C8", Offset = "0x8F33C8", VA = "0x8F33C8")]
	public void Board()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x8F3BD8", Offset = "0x8F3BD8", VA = "0x8F3BD8")]
	private void SelectRandomMods()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x8F3FC8", Offset = "0x8F3FC8", VA = "0x8F3FC8")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x8F3FCC", Offset = "0x8F3FCC", VA = "0x8F3FCC")]
	public void OnDebugGodModeButton()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x8F3FD0", Offset = "0x8F3FD0", VA = "0x8F3FD0")]
	public void OnDebugResourcesButton()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x8F3FD4", Offset = "0x8F3FD4", VA = "0x8F3FD4")]
	public void OnDebugKeysButton()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x8F3FD8", Offset = "0x8F3FD8", VA = "0x8F3FD8")]
	public void OnDebugFuelButton()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x8F3FDC", Offset = "0x8F3FDC", VA = "0x8F3FDC")]
	public void OnDebugUnlock()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x8F3FE0", Offset = "0x8F3FE0", VA = "0x8F3FE0")]
	public UIIntroMain()
	{
	}
}
[Token(Token = "0x2000215")]
public class UIIntroTextLog : MonoBehaviour
{
	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextLogs textLogs;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioTapeData audioTapeData;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6332B4", Offset = "0x6332B4")]
	public TextMeshProUGUI mainText;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button nextBtn;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button prevBtn;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button playBtn;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text playBtnText;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextLogs.TextLogsState logsState;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string curTextLogId;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action onCancel;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioClip audioTapeClip;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioTapeSound;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int endAudioLogTask;

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x8F3FE8", Offset = "0x8F3FE8", VA = "0x8F3FE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x8F42F4", Offset = "0x8F42F4", VA = "0x8F42F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x8F449C", Offset = "0x8F449C", VA = "0x8F449C")]
	private void CycleLog(bool next = true)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x8F474C", Offset = "0x8F474C", VA = "0x8F474C")]
	public void OnNextButton()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x8F4754", Offset = "0x8F4754", VA = "0x8F4754")]
	public void OnPreviousButton()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x8F475C", Offset = "0x8F475C", VA = "0x8F475C")]
	public void OnCancelButton()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x8F4770", Offset = "0x8F4770", VA = "0x8F4770")]
	public void OnPlayButton()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x8F4A34", Offset = "0x8F4A34", VA = "0x8F4A34")]
	private void OnEndAudioLog()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x8F4ADC", Offset = "0x8F4ADC", VA = "0x8F4ADC")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x8F4B9C", Offset = "0x8F4B9C", VA = "0x8F4B9C")]
	public UIIntroTextLog()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62D9A8", Offset = "0x62D9A8")]
public class UIIntroToggle : MonoBehaviour
{
	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6332EC", Offset = "0x6332EC")]
	public AudioCue hoverSound;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioCue toggleOnSound;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioCue toggleOffSound;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633324", Offset = "0x633324")]
	public LevelOptions.EModifiers levelOptionId;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI descText;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x63335C", Offset = "0x63335C")]
	public Image icon;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite lockedIcon;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLocked;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite randomIcon;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isRandom;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventTrigger evTrigger;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Toggle toggle;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animator;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Sprite defaultIcon;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder sBuilder;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int animChecked;

	[Token(Token = "0x1400003F")]
	public event Action onHover
	{
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x8F4BAC", Offset = "0x8F4BAC", VA = "0x8F4BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8B4", Offset = "0x63B8B4")]
		add
		{
		}
		[Token(Token = "0x6001318")]
		[Address(RVA = "0x8F4C50", Offset = "0x8F4C50", VA = "0x8F4C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8C4", Offset = "0x63B8C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000040")]
	public event Action<UIIntroToggle, bool> onToggle
	{
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x8F1DF8", Offset = "0x8F1DF8", VA = "0x8F1DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8D4", Offset = "0x63B8D4")]
		add
		{
		}
		[Token(Token = "0x600131A")]
		[Address(RVA = "0x8F4CF4", Offset = "0x8F4CF4", VA = "0x8F4CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8E4", Offset = "0x63B8E4")]
		remove
		{
		}
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x8F4D98", Offset = "0x8F4D98", VA = "0x8F4D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x8F4EC8", Offset = "0x8F4EC8", VA = "0x8F4EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x8F51B8", Offset = "0x8F51B8", VA = "0x8F51B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x8F52C4", Offset = "0x8F52C4", VA = "0x8F52C4")]
	public void OnHoverEnter(BaseEventData evData)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x8F5594", Offset = "0x8F5594", VA = "0x8F5594")]
	public void OnHoverExit(BaseEventData evData)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x8F5630", Offset = "0x8F5630", VA = "0x8F5630")]
	private void OnClicked(bool newValue)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x8F5698", Offset = "0x8F5698", VA = "0x8F5698")]
	public void OnChanged(bool newValue)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x8F575C", Offset = "0x8F575C", VA = "0x8F575C")]
	public bool IsChecked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x8F1E9C", Offset = "0x8F1E9C", VA = "0x8F1E9C")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x8F36E8", Offset = "0x8F36E8", VA = "0x8F36E8")]
	public void SetRandom(bool random)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x8F5020", Offset = "0x8F5020", VA = "0x8F5020")]
	private void AddCallback(EventTriggerType type, UnityAction<BaseEventData> callback)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x8F5778", Offset = "0x8F5778", VA = "0x8F5778")]
	public UIIntroToggle()
	{
	}
}
[Token(Token = "0x2000217")]
public class UIModalText : TimeIndependentBehaviour
{
	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image panel;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject noButton;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject yesButton;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject okButton;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int taskId;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 defaultScale;

	[Token(Token = "0x14000041")]
	public event Action onYesBtn
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x8F27A4", Offset = "0x8F27A4", VA = "0x8F27A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B8F4", Offset = "0x63B8F4")]
		add
		{
		}
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x8F29C4", Offset = "0x8F29C4", VA = "0x8F29C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B904", Offset = "0x63B904")]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public event Action onNoBtn
	{
		[Token(Token = "0x600132A")]
		[Address(RVA = "0x8F2848", Offset = "0x8F2848", VA = "0x8F2848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B914", Offset = "0x63B914")]
		add
		{
		}
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x8F2A68", Offset = "0x8F2A68", VA = "0x8F2A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B924", Offset = "0x63B924")]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public event Action onOkBtn
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x8F2DEC", Offset = "0x8F2DEC", VA = "0x8F2DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B934", Offset = "0x63B934")]
		add
		{
		}
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x8F2F24", Offset = "0x8F2F24", VA = "0x8F2F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63B944", Offset = "0x63B944")]
		remove
		{
		}
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x8F5850", Offset = "0x8F5850", VA = "0x8F5850", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x8F589C", Offset = "0x8F589C", VA = "0x8F589C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x8F58F8", Offset = "0x8F58F8", VA = "0x8F58F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x8F59B4", Offset = "0x8F59B4", VA = "0x8F59B4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x8F2638", Offset = "0x8F2638", VA = "0x8F2638")]
	public void Show(string str, bool onlyOkButton = false)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x8F5A38", Offset = "0x8F5A38", VA = "0x8F5A38")]
	public void Show(string str, float time)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x8F5B1C", Offset = "0x8F5B1C", VA = "0x8F5B1C")]
	private void OnTimer()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x8F2B0C", Offset = "0x8F2B0C", VA = "0x8F2B0C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x8F5B20", Offset = "0x8F5B20", VA = "0x8F5B20")]
	public void OnYesButton()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x8F5B34", Offset = "0x8F5B34", VA = "0x8F5B34")]
	public void OnNoButton()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x8F5B48", Offset = "0x8F5B48", VA = "0x8F5B48")]
	public void OnOkButton()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x8F5B5C", Offset = "0x8F5B5C", VA = "0x8F5B5C")]
	public UIModalText()
	{
	}
}
[Token(Token = "0x2000218")]
public class UINavApproach : MonoBehaviour
{
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC38", Offset = "0x62EC38")]
	private sealed class <Dock_co>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UINavApproach <>4__this;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x8F6A94", Offset = "0x8F6A94", VA = "0x8F6A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x8F6AFC", Offset = "0x8F6AFC", VA = "0x8F6AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x8F685C", Offset = "0x8F685C", VA = "0x8F685C")]
		[DebuggerHidden]
		public <Dock_co>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x8F68F8", Offset = "0x8F68F8", VA = "0x8F68F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x8F68FC", Offset = "0x8F68FC", VA = "0x8F68FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x8F6A9C", Offset = "0x8F6A9C", VA = "0x8F6A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63340C", Offset = "0x63340C")]
	public Image vesselIcon;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text distanceText;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text relSpeedText;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button boardBtn;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633444", Offset = "0x633444")]
	public DraggableLinear hStick;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DraggableLinear vStick;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63347C", Offset = "0x63347C")]
	public AudioSource mainEngineSound;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6334B4", Offset = "0x6334B4")]
	public Vector2 mainEngineVolume;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6334D4", Offset = "0x6334D4")]
	public Vector2 mainEnginePitch;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource leftEngineSound;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource rightEngineSound;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource brakeEngineSound;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6334F8", Offset = "0x6334F8")]
	public Vector2 sideEnginesVolume;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x633518", Offset = "0x633518")]
	public Vector2 sideEnginesPitch;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource dockMainSound;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource dockServoSound;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource dockPingSound;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63353C", Offset = "0x63353C")]
	public Transform spaceship;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector2 acceleration;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 maxSpeed;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float approachConeAngle;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float autoApproachRange;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float autoApproachSpeed;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float dockSpeed;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve autoApproachSpeedCurve;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Shake cameraShake;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector2 speed;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inAutoApproach;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool hasDocked;

	[Token(Token = "0x400128F")]
	private const float shipMaxDistance = 1000f;

	[Token(Token = "0x4001290")]
	private const float uiDistanceFactor = 350f;

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x8F5B6C", Offset = "0x8F5B6C", VA = "0x8F5B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x8F5BD8", Offset = "0x8F5BD8", VA = "0x8F5BD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x8F5C9C", Offset = "0x8F5C9C", VA = "0x8F5C9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x8F5E28", Offset = "0x8F5E28", VA = "0x8F5E28")]
	private void Update()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x8F65FC", Offset = "0x8F65FC", VA = "0x8F65FC")]
	private void SetEngineSound(AudioSource snd, float rate, Vector2 volumeRange, Vector2 pitchRange)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x8F6784", Offset = "0x8F6784", VA = "0x8F6784")]
	public void SetDocked()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x8F6708", Offset = "0x8F6708", VA = "0x8F6708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B954", Offset = "0x63B954")]
	private IEnumerator Dock_co()
	{
		return null;
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x8F6888", Offset = "0x8F6888", VA = "0x8F6888")]
	public void OnBoard()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x8F68A4", Offset = "0x8F68A4", VA = "0x8F68A4")]
	public UINavApproach()
	{
	}
}
[Token(Token = "0x2000219")]
public class UIOptionsAudio : UIOptionsPanel
{
	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button volumeBtnLeft;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button volumeBtnRight;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI volumeValue;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject volumeSlot;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button musicVolumeBtnLeft;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button musicVolumeBtnRight;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI musicVolumeValue;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject musicVolumeSlot;

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x8F6B04", Offset = "0x8F6B04", VA = "0x8F6B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x8F6FBC", Offset = "0x8F6FBC", VA = "0x8F6FBC", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x8F7010", Offset = "0x8F7010", VA = "0x8F7010", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x8F715C", Offset = "0x8F715C", VA = "0x8F715C", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x8F732C", Offset = "0x8F732C", VA = "0x8F732C")]
	private void OnVolumeBtnLeft()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x8F7564", Offset = "0x8F7564", VA = "0x8F7564")]
	private void OnVolumeBtnRight()
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x8F7628", Offset = "0x8F7628", VA = "0x8F7628")]
	private void OnMusicVolumeBtnLeft()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x8F76EC", Offset = "0x8F76EC", VA = "0x8F76EC")]
	private void OnMusicVolumeBtnRight()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x8F77B0", Offset = "0x8F77B0", VA = "0x8F77B0")]
	public UIOptionsAudio()
	{
	}
}
[Token(Token = "0x200021A")]
public class UIOptionsControls : UIOptionsPanel
{
	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject diagramTouch;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject diagramPico;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject diagramVive;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject diagramIndex;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject diagramWindowsMR;

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x8F77C0", Offset = "0x8F77C0", VA = "0x8F77C0", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x8F77EC", Offset = "0x8F77EC", VA = "0x8F77EC", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x8F7940", Offset = "0x8F7940", VA = "0x8F7940")]
	public UIOptionsControls()
	{
	}
}
[Token(Token = "0x200021B")]
public class UIOptionsLocomotion : UIOptionsPanel
{
	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button moveTypeBtnLeft;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button moveTypeBtnRight;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI moveTypeValue;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject moveTypeSlot;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button moveRefBtnLeft;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button moveRefBtnRight;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI moveRefValue;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject moveRefSlot;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button rotationTypeBtnLeft;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button rotationTypeBtnRight;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI rotationTypeValue;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject rotationTypeSlot;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button rotationSpeedBtnLeft;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button rotationSpeedBtnRight;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI rotationSpeedValue;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject rotationSpeedSlot;

	[Token(Token = "0x40012AE")]
	private const int minRotationSpeed = 1;

	[Token(Token = "0x40012AF")]
	private const int maxRotationSpeed = 7;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button swapControlsBtn;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject swapControlsSlot;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button requireTouchpadPressBtn;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject requireTouchpadPressSlot;

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x8F7948", Offset = "0x8F7948", VA = "0x8F7948")]
	private void Start()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x8F7C88", Offset = "0x8F7C88", VA = "0x8F7C88", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x8F7CB4", Offset = "0x8F7CB4", VA = "0x8F7CB4", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x8F7D98", Offset = "0x8F7D98", VA = "0x8F7D98", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x8F8108", Offset = "0x8F8108", VA = "0x8F8108")]
	private void OnMoveTypeBtnLeft()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x8F81D0", Offset = "0x8F81D0", VA = "0x8F81D0")]
	private void OnMoveTypeBtnRight()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x8F8298", Offset = "0x8F8298", VA = "0x8F8298")]
	private void OnMoveRefBtnLeft()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x8F8360", Offset = "0x8F8360", VA = "0x8F8360")]
	private void OnMoveRefBtnRight()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x8F8428", Offset = "0x8F8428", VA = "0x8F8428")]
	private void OnRotationTypeBtnLeft()
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x8F84F0", Offset = "0x8F84F0", VA = "0x8F84F0")]
	private void OnRotationTypeBtnRight()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x8F85B8", Offset = "0x8F85B8", VA = "0x8F85B8")]
	private void OnRotationSpeedBtnLeft()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x8F8668", Offset = "0x8F8668", VA = "0x8F8668")]
	private void OnRotationSpeedBtnRight()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x8F8718", Offset = "0x8F8718", VA = "0x8F8718")]
	private void OnSwapControlsBtn()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x8F88A4", Offset = "0x8F88A4", VA = "0x8F88A4")]
	public UIOptionsLocomotion()
	{
	}
}
[Token(Token = "0x200021C")]
public class UIOptionsMenu : TimeIndependentBehaviour
{
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC48", Offset = "0x62EC48")]
	private sealed class <OnHMDMounted_co>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIOptionsMenu <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x8FA6A4", Offset = "0x8FA6A4", VA = "0x8FA6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x8FA70C", Offset = "0x8FA70C", VA = "0x8FA70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x8F9B38", Offset = "0x8F9B38", VA = "0x8F9B38")]
		[DebuggerHidden]
		public <OnHMDMounted_co>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x8FA378", Offset = "0x8FA378", VA = "0x8FA378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x8FA37C", Offset = "0x8FA37C", VA = "0x8FA37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x8FA6AC", Offset = "0x8FA6AC", VA = "0x8FA6AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633574", Offset = "0x633574")]
	public VRCanvasInteractable selectorCanvas;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button resumeBtn;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button preferencesBtn;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button locomotionBtn;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button controlsBtn;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button audioBtn;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button videoBtn;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button exitGameBtn;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject selectorBlocker;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6335AC", Offset = "0x6335AC")]
	public UIOptionsPanel preferencesPanel;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIOptionsPanel locomotionPanel;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIOptionsPanel controlsPanel;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIOptionsPanel videoPanel;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIOptionsPanel audioPanel;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6335E4", Offset = "0x6335E4")]
	public AudioCue openSound;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioCue closeSound;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x63361C", Offset = "0x63361C")]
	public RectTransform tipPanel;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIModalText modalDialog;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 selectorScale;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 panelScale;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 tipScale;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float animProgress;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool closing;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool animating;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private UIOptionsPanel activePanel;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool justOpened;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int numBlockers;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isMainScene;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool hasAddedPause;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine recenterCoroutine;

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x8F88AC", Offset = "0x8F88AC", VA = "0x8F88AC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x8F8B9C", Offset = "0x8F8B9C", VA = "0x8F8B9C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x8F8C70", Offset = "0x8F8C70", VA = "0x8F8C70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x8EFCA4", Offset = "0x8EFCA4", VA = "0x8EFCA4")]
	public void Show()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x8F8D5C", Offset = "0x8F8D5C", VA = "0x8F8D5C")]
	private void UpdateExitBtnText()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x8F937C", Offset = "0x8F937C", VA = "0x8F937C")]
	public void Hide(bool animate = true)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x8F989C", Offset = "0x8F989C", VA = "0x8F989C")]
	private void OnHMDUnmounted()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x8F98D4", Offset = "0x8F98D4", VA = "0x8F98D4")]
	private void OnHMDMounted()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x8F9ABC", Offset = "0x8F9ABC", VA = "0x8F9ABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63B9B8", Offset = "0x63B9B8")]
	private IEnumerator OnHMDMounted_co()
	{
		return null;
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x8F9A0C", Offset = "0x8F9A0C", VA = "0x8F9A0C")]
	private void Recenter()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x8F9B64", Offset = "0x8F9B64", VA = "0x8F9B64", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x8F9154", Offset = "0x8F9154", VA = "0x8F9154")]
	private void UpdateAnim()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x8F8F30", Offset = "0x8F8F30", VA = "0x8F8F30")]
	private void SetPanel(UIOptionsPanel newPanel)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x8F9BE8", Offset = "0x8F9BE8", VA = "0x8F9BE8")]
	private void OnResumeBtn()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x8F9BF0", Offset = "0x8F9BF0", VA = "0x8F9BF0")]
	private void OnPreferencesPanelBtn()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x8F9BF8", Offset = "0x8F9BF8", VA = "0x8F9BF8")]
	private void OnLocomotionPanelBtn()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x8F9C00", Offset = "0x8F9C00", VA = "0x8F9C00")]
	private void OnControlsBtn()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x8F9C08", Offset = "0x8F9C08", VA = "0x8F9C08")]
	private void OnVideoPanelBtn()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x8F9C10", Offset = "0x8F9C10", VA = "0x8F9C10")]
	private void OnAudioPanelBtn()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x8F9C18", Offset = "0x8F9C18", VA = "0x8F9C18")]
	private void OnExitGameBtn()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x8F9E0C", Offset = "0x8F9E0C", VA = "0x8F9E0C")]
	private void OnExitGameConfirm()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x8FA220", Offset = "0x8FA220", VA = "0x8FA220")]
	private void OnExitGameCancel()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x8FA2C4", Offset = "0x8FA2C4", VA = "0x8FA2C4")]
	private void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x8FA0C0", Offset = "0x8FA0C0", VA = "0x8FA0C0")]
	private void ShowModal(string text, [Optional] Action onYesBtn, [Optional] Action onNoBtn)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x8F9734", Offset = "0x8F9734", VA = "0x8F9734")]
	private void HideModal([Optional] Action onYesBtn, [Optional] Action onNoBtn)
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x8F9090", Offset = "0x8F9090", VA = "0x8F9090")]
	private void AddBlocker()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x8F9670", Offset = "0x8F9670", VA = "0x8F9670")]
	private void RemoveBlocker()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x8FA370", Offset = "0x8FA370", VA = "0x8FA370")]
	public UIOptionsMenu()
	{
	}
}
[Token(Token = "0x200021D")]
public class UIOptionsPanel : MonoBehaviour
{
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC58", Offset = "0x62EC58")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIOptionsPanel <>4__this;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tipId;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x8FACA4", Offset = "0x8FACA4", VA = "0x8FACA4")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x8FAD9C", Offset = "0x8FAD9C", VA = "0x8FAD9C")]
		internal void <SetHoverTip>b__0(BaseEventData evData)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x8FADBC", Offset = "0x8FADBC", VA = "0x8FADBC")]
		internal void <SetHoverTip>b__1(BaseEventData evData)
		{
		}
	}

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool needsCommit;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI tipText;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blocker;

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x8F6FE8", Offset = "0x8F6FE8", VA = "0x8F6FE8", Slot = "4")]
	public virtual void Show()
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x8F70A0", Offset = "0x8F70A0", VA = "0x8F70A0", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x8FA2C8", Offset = "0x8FA2C8", VA = "0x8FA2C8")]
	public void SetBlocker(bool active = true)
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x8FA714", Offset = "0x8FA714", VA = "0x8FA714", Slot = "6")]
	public virtual void RefreshData()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x8F73F0", Offset = "0x8F73F0", VA = "0x8F73F0")]
	protected int OnButtonArrow(int curValue, TextMeshProUGUI text, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x8FA718", Offset = "0x8FA718", VA = "0x8FA718")]
	protected void SetButtonArrowValue(int curValue, TextMeshProUGUI text)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x8F7204", Offset = "0x8F7204", VA = "0x8F7204")]
	protected void SetButtonArrowValue(int curValue, TextMeshProUGUI text, int min, int max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x8FA75C", Offset = "0x8FA75C", VA = "0x8FA75C")]
	protected int OnButtonArrow(int curValue, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x6001381")]
	protected T OnButtonArrow<T>(T curValue, TextMeshProUGUI text, string translatePrefix, T min, T max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return (T)null;
	}

	[Token(Token = "0x6001382")]
	protected void SetButtonArrowValue<T>(T curValue, TextMeshProUGUI text, string translatePrefix)
	{
	}

	[Token(Token = "0x6001383")]
	protected void SetButtonArrowValue<T>(T curValue, TextMeshProUGUI text, string translatePrefix, T min, T max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x8FA89C", Offset = "0x8FA89C", VA = "0x8FA89C")]
	protected int OnButtonArrowFormat(int curValue, TextMeshProUGUI text, string formatTranslateId, int min, int max, int step = 1, [Optional] Button leftArrow, [Optional] Button rightArrow)
	{
		return default(int);
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x8FAA5C", Offset = "0x8FAA5C", VA = "0x8FAA5C")]
	protected void SetButtonArrowValueFormat(int curValue, TextMeshProUGUI text, string formatTranslateId)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x8FAB28", Offset = "0x8FAB28", VA = "0x8FAB28")]
	protected void SetButtonArrowValueFormat(int curValue, TextMeshProUGUI text, string formatTranslateId, int min, int max, Button leftArrow, Button rightArrow)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x8F8878", Offset = "0x8F8878", VA = "0x8F8878")]
	protected bool OnCheckbox(bool curValue, Button btn, string yesTextId = "UI_YES", string noTextId = "UI_NO")
	{
		return default(bool);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x8F7F24", Offset = "0x8F7F24", VA = "0x8F7F24")]
	protected void SetCheckboxValue(bool curValue, Button btn, string yesTextId = "UI_YES", string noTextId = "UI_NO")
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x8F6C94", Offset = "0x8F6C94", VA = "0x8F6C94")]
	protected void SetHoverTip(GameObject go, string tipId)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x8FACAC", Offset = "0x8FACAC", VA = "0x8FACAC")]
	private void OnHoverStart(string tipId)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x8FAD40", Offset = "0x8FAD40", VA = "0x8FAD40")]
	private void OnHoverEnd()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x8F77B8", Offset = "0x8F77B8", VA = "0x8F77B8")]
	public UIOptionsPanel()
	{
	}
}
[Token(Token = "0x200021E")]
public class UIOptionsPreferences : UIOptionsPanel
{
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC68", Offset = "0x62EC68")]
	private sealed class <OnForcedHeightBtn_co>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIOptionsPreferences <>4__this;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x8FBE6C", Offset = "0x8FBE6C", VA = "0x8FBE6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x8FBED4", Offset = "0x8FBED4", VA = "0x8FBED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x8FBD00", Offset = "0x8FBD00", VA = "0x8FBD00")]
		[DebuggerHidden]
		public <OnForcedHeightBtn_co>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x8FBD3C", Offset = "0x8FBD3C", VA = "0x8FBD3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x8FBD40", Offset = "0x8FBD40", VA = "0x8FBD40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x8FBE74", Offset = "0x8FBE74", VA = "0x8FBE74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button languageBtnLeft;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button languageBtnRight;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI languageValue;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject languageSlot;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button braceletBtnLeft;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button braceletBtnRight;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI braceletValue;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject braceletSlot;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button toggleGrabBtn;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject toggleGrabSlot;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button tutorialsBtn;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject tutorialsSlot;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button forcedHeightBtn;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject forcedHeightSlot;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string[] validLanguages;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int languageIndex;

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x8FADD4", Offset = "0x8FADD4", VA = "0x8FADD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x8FB178", Offset = "0x8FB178", VA = "0x8FB178", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x8FB1A4", Offset = "0x8FB1A4", VA = "0x8FB1A4", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x8FB210", Offset = "0x8FB210", VA = "0x8FB210", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x8FB080", Offset = "0x8FB080", VA = "0x8FB080")]
	private void InitLangIndex()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x8FB3D4", Offset = "0x8FB3D4", VA = "0x8FB3D4")]
	private void OnLanguageBtnLeft()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x8FB5C0", Offset = "0x8FB5C0", VA = "0x8FB5C0")]
	private void OnLanguageBtnRight()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x8FB4A8", Offset = "0x8FB4A8", VA = "0x8FB4A8")]
	private void ChangeLanguage(string newLanguage)
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x8FB69C", Offset = "0x8FB69C", VA = "0x8FB69C")]
	private void OnBraceletBtnLeft()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x8FB7E4", Offset = "0x8FB7E4", VA = "0x8FB7E4")]
	private void OnBraceletBtnRight()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x8FB92C", Offset = "0x8FB92C", VA = "0x8FB92C")]
	private void OnToggleGripBtn()
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x8FBA68", Offset = "0x8FBA68", VA = "0x8FBA68")]
	private void OnTutorialsBtn()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x8FBB24", Offset = "0x8FBB24", VA = "0x8FBB24")]
	private void OnForcedHeightBtn()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x8FBC84", Offset = "0x8FBC84", VA = "0x8FBC84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63BA1C", Offset = "0x63BA1C")]
	private IEnumerator OnForcedHeightBtn_co()
	{
		return null;
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x8FBD2C", Offset = "0x8FBD2C", VA = "0x8FBD2C")]
	public UIOptionsPreferences()
	{
	}
}
[Token(Token = "0x200021F")]
public class UIOptionsVideo : UIOptionsPanel
{
	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button qualityBtnLeft;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button qualityBtnRight;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI qualityValue;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject qualitySlot;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button resolutionBtnLeft;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button resolutionBtnRight;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI resolutionValue;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject resolutionSlot;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button antialiasingBtnLeft;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button antialiasingBtnRight;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI antialiasingValue;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject antialiasingSlot;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button applyBtn;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool dirtySettings;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int curQualityLevel;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int curResolution;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Config.VideoCfg.MSAALevel curAntialiasing;

	[Token(Token = "0x40012F6")]
	private const int minQualityLevel = 0;

	[Token(Token = "0x40012F7")]
	private const int maxQualityLevel = 3;

	[Token(Token = "0x40012F8")]
	private const int minResolution = 50;

	[Token(Token = "0x40012F9")]
	private const int maxResolution = 150;

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x8FBEDC", Offset = "0x8FBEDC", VA = "0x8FBEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x8FC178", Offset = "0x8FC178", VA = "0x8FC178", Slot = "4")]
	public override void Show()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x8FC1A4", Offset = "0x8FC1A4", VA = "0x8FC1A4", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x8FC210", Offset = "0x8FC210", VA = "0x8FC210", Slot = "6")]
	public override void RefreshData()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x8FC384", Offset = "0x8FC384", VA = "0x8FC384")]
	private void SetDirty()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x8FC3DC", Offset = "0x8FC3DC", VA = "0x8FC3DC")]
	private void OnQualityBtnLeft()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x8FC484", Offset = "0x8FC484", VA = "0x8FC484")]
	private void OnQualityBtnRight()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x8FC52C", Offset = "0x8FC52C", VA = "0x8FC52C")]
	private void OnResolutionBtnLeft()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x8FC5C4", Offset = "0x8FC5C4", VA = "0x8FC5C4")]
	private void OnResolutionBtnRight()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x8FC65C", Offset = "0x8FC65C", VA = "0x8FC65C")]
	private void OnAntialiasingBtnLeft()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x8FC704", Offset = "0x8FC704", VA = "0x8FC704")]
	private void OnAntialiasingBtnRight()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x8FC7AC", Offset = "0x8FC7AC", VA = "0x8FC7AC")]
	private void OnApplyBtn()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x8FC7B0", Offset = "0x8FC7B0", VA = "0x8FC7B0")]
	public UIOptionsVideo()
	{
	}
}
[Token(Token = "0x2000220")]
public class UIScreenToggle : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC78", Offset = "0x62EC78")]
	private sealed class <Flicker_co>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScreenToggle <>4__this;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <wasEnabled>5__2;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x8FD2F8", Offset = "0x8FD2F8", VA = "0x8FD2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x8FD360", Offset = "0x8FD360", VA = "0x8FD360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x8FD1B0", Offset = "0x8FD1B0", VA = "0x8FD1B0")]
		[DebuggerHidden]
		public <Flicker_co>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x8FD1F0", Offset = "0x8FD1F0", VA = "0x8FD1F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x8FD1F4", Offset = "0x8FD1F4", VA = "0x8FD1F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x8FD300", Offset = "0x8FD300", VA = "0x8FD300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animSpeed;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float openScaleY;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float target;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentFactor;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas canvas;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer renderer;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63362C", Offset = "0x63362C")]
	public bool _toggleTest;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isFlickering;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x8FCDF0", Offset = "0x8FCDF0", VA = "0x8FCDF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x8FCED8", Offset = "0x8FCED8", VA = "0x8FCED8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x8F0B88", Offset = "0x8F0B88", VA = "0x8F0B88")]
	public void Toggle(bool newState, bool instantaneous = false)
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x8F0B74", Offset = "0x8F0B74", VA = "0x8F0B74")]
	public bool IsToggled()
	{
		return default(bool);
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x8FD0D4", Offset = "0x8FD0D4", VA = "0x8FD0D4")]
	public void ToggleTest()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x8FD0FC", Offset = "0x8FD0FC", VA = "0x8FD0FC")]
	public void Flicker()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x8FD134", Offset = "0x8FD134", VA = "0x8FD134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63BA80", Offset = "0x63BA80")]
	private IEnumerator Flicker_co()
	{
		return null;
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x8FD1DC", Offset = "0x8FD1DC", VA = "0x8FD1DC")]
	public UIScreenToggle()
	{
	}
}
[Token(Token = "0x2000221")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DA0C", Offset = "0x62DA0C")]
public class UISetHoverColors : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
{
	[Serializable]
	[Token(Token = "0x200046E")]
	public class HoverColor
	{
		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Graphic graphic;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color highlightedColor;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color normalColor;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color disabledColor;

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x8FD52C", Offset = "0x8FD52C", VA = "0x8FD52C")]
		public HoverColor()
		{
		}
	}

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HoverColor[] hoverColors;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool interactable;

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x8FD368", Offset = "0x8FD368", VA = "0x8FD368")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x8FD3E0", Offset = "0x8FD3E0", VA = "0x8FD3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x8FD4D0", Offset = "0x8FD4D0", VA = "0x8FD4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x8FD514", Offset = "0x8FD514", VA = "0x8FD514", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x8FD51C", Offset = "0x8FD51C", VA = "0x8FD51C", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x8FD3E8", Offset = "0x8FD3E8", VA = "0x8FD3E8")]
	private void UpdateColors(bool highlighted)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x8FD524", Offset = "0x8FD524", VA = "0x8FD524")]
	public UISetHoverColors()
	{
	}
}
[Token(Token = "0x2000222")]
public class UITypewriteText : MonoBehaviour
{
	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeInterval;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startDelay;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnEnable;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool playOnStart;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text text;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text textTMP;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string targetText;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string currentText;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onFinish;

	[Token(Token = "0x17000114")]
	private string Text
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x8FD534", Offset = "0x8FD534", VA = "0x8FD534")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x8FD628", Offset = "0x8FD628", VA = "0x8FD628")]
		set
		{
		}
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x8FD728", Offset = "0x8FD728", VA = "0x8FD728")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x8FD7AC", Offset = "0x8FD7AC", VA = "0x8FD7AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x8FD89C", Offset = "0x8FD89C", VA = "0x8FD89C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x8FD914", Offset = "0x8FD914", VA = "0x8FD914")]
	private void Update()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x8FD830", Offset = "0x8FD830", VA = "0x8FD830")]
	private void StartFX()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x8FDACC", Offset = "0x8FDACC", VA = "0x8FDACC")]
	public void SetFinished()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x8FDB14", Offset = "0x8FDB14", VA = "0x8FDB14")]
	public UITypewriteText()
	{
	}
}
[Token(Token = "0x2000223")]
public class UIVesselInfo : MonoBehaviour
{
	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text nameTxt;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text registrationTxt;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text typeTxt;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text sizeTxt;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text lifeSupportTxt;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text orbitTxt;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text boardStatusTxt;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image shipPicture;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button boardBtn;

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x8FDB28", Offset = "0x8FDB28", VA = "0x8FDB28")]
	public void SetVessel(GalaxyMap gm, int vesselId)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x8FDE24", Offset = "0x8FDE24", VA = "0x8FDE24")]
	public void OnBoard()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x8FDE28", Offset = "0x8FDE28", VA = "0x8FDE28")]
	public UIVesselInfo()
	{
	}
}
[Token(Token = "0x2000224")]
public struct Barycentric
{
	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float u;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float v;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float w;

	[Token(Token = "0x17000115")]
	public bool IsInside
	{
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x6B3DB4", Offset = "0x6B3DB4", VA = "0x6B3DB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x6B3D58", Offset = "0x6B3D58", VA = "0x6B3D58")]
	public Barycentric(float aU, float aV, float aW)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x6B3D64", Offset = "0x6B3D64", VA = "0x6B3D64")]
	public Barycentric(Vector2 aV1, Vector2 aV2, Vector2 aV3, Vector2 aP)
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x6B3D6C", Offset = "0x6B3D6C", VA = "0x6B3D6C")]
	public Barycentric(Vector3 aV1, Vector3 aV2, Vector3 aV3, Vector3 aP)
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x6B3D94", Offset = "0x6B3D94", VA = "0x6B3D94")]
	public Barycentric(Vector4 aV1, Vector4 aV2, Vector4 aV3, Vector4 aP)
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x6B3DA4", Offset = "0x6B3DA4", VA = "0x6B3DA4")]
	public Barycentric(Color aV1, Color aV2, Color aV3, Color aP)
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x6B3DFC", Offset = "0x6B3DFC", VA = "0x6B3DFC")]
	public Vector2 Interpolate(Vector2 v1, Vector2 v2, Vector2 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x6B3E04", Offset = "0x6B3E04", VA = "0x6B3E04")]
	public Vector3 Interpolate(Vector3 v1, Vector3 v2, Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x6B3E1C", Offset = "0x6B3E1C", VA = "0x6B3E1C")]
	public Vector4 Interpolate(Vector4 v1, Vector4 v2, Vector4 v3)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x6B3E2C", Offset = "0x6B3E2C", VA = "0x6B3E2C")]
	public Color Interpolate(Color v1, Color v2, Color v3)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000225")]
public class CameraPathFollowing : MonoBehaviour
{
	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633670", Offset = "0x633670")]
	public Transform[] wayPoints;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAt;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6336A8", Offset = "0x6336A8")]
	public Vector3 startPos;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion startRot;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 endPos;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion endRot;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6336E0", Offset = "0x6336E0")]
	public float speed;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float progress;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPlaying;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x633718", Offset = "0x633718")]
	public bool _addWaypoint;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x63376C", Offset = "0x63376C")]
	public bool _setStart;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x6337C0", Offset = "0x6337C0")]
	public bool _setEnd;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x633814", Offset = "0x633814")]
	public bool _play;

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x82F1EC", Offset = "0x82F1EC", VA = "0x82F1EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x82F434", Offset = "0x82F434", VA = "0x82F434")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x82F500", Offset = "0x82F500", VA = "0x82F500")]
	private void AddWaypoint()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x82F644", Offset = "0x82F644", VA = "0x82F644")]
	private void SetStart()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x82F6A0", Offset = "0x82F6A0", VA = "0x82F6A0")]
	private void SetEnd()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x82F424", Offset = "0x82F424", VA = "0x82F424")]
	private void Play()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x82F6FC", Offset = "0x82F6FC", VA = "0x82F6FC")]
	public CameraPathFollowing()
	{
	}
}
[Token(Token = "0x2000226")]
public class CubemapScreenshot : MonoBehaviour
{
	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x865520", Offset = "0x865520", VA = "0x865520")]
	public static void SaveScreenshot(Camera ownerCamera, Cubemap outCubemap, bool hdr = true)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x865B90", Offset = "0x865B90", VA = "0x865B90")]
	public static bool SaveToTexture(Cubemap cubemap, string pathName, bool hdr = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x86619C", Offset = "0x86619C", VA = "0x86619C")]
	public CubemapScreenshot()
	{
	}
}
[Token(Token = "0x2000227")]
public class EnableIfCmdLine : MonoBehaviour
{
	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cmdLineArg;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x87B530", Offset = "0x87B530", VA = "0x87B530")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x87B5F0", Offset = "0x87B5F0", VA = "0x87B5F0")]
	public EnableIfCmdLine()
	{
	}
}
[Token(Token = "0x2000228")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textMesh;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showFPS;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode toggleFPSKey;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string toggleFPSButton;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float counter;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fps;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastTime;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float accum;

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x87EF14", Offset = "0x87EF14", VA = "0x87EF14")]
	private void Start()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x87EF88", Offset = "0x87EF88", VA = "0x87EF88")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x87F0D4", Offset = "0x87F0D4", VA = "0x87F0D4")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000229")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vertical;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool invert;

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x97A5F4", Offset = "0x97A5F4", VA = "0x97A5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x97A804", Offset = "0x97A804", VA = "0x97A804")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x200022A")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inverted;

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x97A80C", Offset = "0x97A80C", VA = "0x97A80C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x97A810", Offset = "0x97A810", VA = "0x97A810")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x97AA20", Offset = "0x97AA20", VA = "0x97AA20")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x200022B")]
public class ObjExporter
{
	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xA71F28", Offset = "0xA71F28", VA = "0xA71F28")]
	public static string MeshToString(MeshFilter mf)
	{
		return null;
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xA72510", Offset = "0xA72510", VA = "0xA72510")]
	public static void MeshToFile(MeshFilter mf, string filename)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xA72640", Offset = "0xA72640", VA = "0xA72640")]
	public ObjExporter()
	{
	}
}
[Token(Token = "0x200022C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DA70", Offset = "0x62DA70")]
public class ParticleAlign : MonoBehaviour
{
	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem pSystem;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform alignTo;

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x83BEE0", Offset = "0x83BEE0", VA = "0x83BEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x83BEE4", Offset = "0x83BEE4", VA = "0x83BEE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x83C160", Offset = "0x83C160", VA = "0x83C160")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x83C28C", Offset = "0x83C28C", VA = "0x83C28C")]
	public ParticleAlign()
	{
	}
}
[Token(Token = "0x200022D")]
public class ParticleDie : MonoBehaviour
{
	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x83C294", Offset = "0x83C294", VA = "0x83C294")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x83C2F4", Offset = "0x83C2F4", VA = "0x83C2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x83C398", Offset = "0x83C398", VA = "0x83C398")]
	public ParticleDie()
	{
	}
}
[Token(Token = "0x200022E")]
[ExecuteInEditMode]
public class PrefabInstance : MonoBehaviour
{
	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x84BD6C", Offset = "0x84BD6C", VA = "0x84BD6C")]
	public PrefabInstance()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62DAE4", Offset = "0x62DAE4")]
public class RandomNamesList : ScriptableObject
{
	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset sourceText;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<string> shuffledNames;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] listNames;

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x8E61B0", Offset = "0x8E61B0", VA = "0x8E61B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x8E6268", Offset = "0x8E6268", VA = "0x8E6268")]
	public void Reset()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x8E62F0", Offset = "0x8E62F0", VA = "0x8E62F0")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x8E63C8", Offset = "0x8E63C8", VA = "0x8E63C8")]
	public RandomNamesList()
	{
	}
}
[Token(Token = "0x2000230")]
public class Screenshot : MonoBehaviour
{
	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int width;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int height;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int supersize;

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x94D2BC", Offset = "0x94D2BC", VA = "0x94D2BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x94D30C", Offset = "0x94D30C", VA = "0x94D30C")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x94D5AC", Offset = "0x94D5AC", VA = "0x94D5AC")]
	public Screenshot()
	{
	}
}
[Token(Token = "0x2000231")]
public class SetCameraDepthTexture : MonoBehaviour
{
	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode mode;

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x1364C98", Offset = "0x1364C98", VA = "0x1364C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x1364D48", Offset = "0x1364D48", VA = "0x1364D48")]
	public SetCameraDepthTexture()
	{
	}
}
[Token(Token = "0x2000232")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DB28", Offset = "0x62DB28")]
public class SetLODGroupCulled : MonoBehaviour
{
	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] culledPercentage;

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x1364D50", Offset = "0x1364D50", VA = "0x1364D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x1364E80", Offset = "0x1364E80", VA = "0x1364E80")]
	public SetLODGroupCulled()
	{
	}
}
[Token(Token = "0x2000233")]
public class SetZWrite : MonoBehaviour
{
	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x1365024", Offset = "0x1365024", VA = "0x1365024")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x13650A0", Offset = "0x13650A0", VA = "0x13650A0")]
	public SetZWrite()
	{
	}
}
[Token(Token = "0x2000234")]
public class SmoothFollowing : MonoBehaviour
{
	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool smooth;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63385C", Offset = "0x63385C")]
	public float posRate;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633874", Offset = "0x633874")]
	public float rotRate;

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x136CE78", Offset = "0x136CE78", VA = "0x136CE78")]
	private void Start()
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x136CF64", Offset = "0x136CF64", VA = "0x136CF64")]
	private void Update()
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x136D218", Offset = "0x136D218", VA = "0x136D218")]
	public SmoothFollowing()
	{
	}
}
namespace Triangulator
{
	[Token(Token = "0x2000235")]
	public class Delauney
	{
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x817EB0", Offset = "0x817EB0", VA = "0x817EB0")]
		public static List<Triangulator.Geometry.Triangle> Triangulate(List<Triangulator.Geometry.Point> Vertex)
		{
			return null;
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x818B40", Offset = "0x818B40", VA = "0x818B40")]
		public static void TriangulateEdges(List<Vector2> points, List<Pair<int, int>> edges)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x81883C", Offset = "0x81883C", VA = "0x81883C")]
		private static bool InCircle(Triangulator.Geometry.Point p, Triangulator.Geometry.Point p1, Triangulator.Geometry.Point p2, Triangulator.Geometry.Point p3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x818F14", Offset = "0x818F14", VA = "0x818F14")]
		public Delauney()
		{
		}
	}
}
namespace Triangulator.Geometry
{
	[Token(Token = "0x2000236")]
	public class Edge : IEquatable<Edge>
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int p1;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int p2;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x818AAC", Offset = "0x818AAC", VA = "0x818AAC")]
		public Edge(int point1, int point2)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x818F1C", Offset = "0x818F1C", VA = "0x818F1C")]
		public Edge()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x818AE4", Offset = "0x818AE4", VA = "0x818AE4", Slot = "4")]
		public bool Equals(Edge other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000237")]
	public class Point
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double _X;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double _Y;

		[Token(Token = "0x17000116")]
		public double X
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x818F44", Offset = "0x818F44", VA = "0x818F44")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x818F4C", Offset = "0x818F4C", VA = "0x818F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public double Y
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x818F54", Offset = "0x818F54", VA = "0x818F54")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x818F5C", Offset = "0x818F5C", VA = "0x818F5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8187F8", Offset = "0x8187F8", VA = "0x8187F8")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x818F64", Offset = "0x818F64", VA = "0x818F64")]
		public bool Equals2D(Point other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000238")]
	public class Point<T> : Point
	{
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _attr;

		[Token(Token = "0x17000118")]
		public T Attribute
		{
			[Token(Token = "0x600140C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600140D")]
			set
			{
			}
		}

		[Token(Token = "0x600140A")]
		public Point(double x, double y, T attribute)
		{
		}

		[Token(Token = "0x600140B")]
		public Point(double x, double y)
		{
		}
	}
	[Token(Token = "0x2000239")]
	public struct Triangle
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int p1;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int p2;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int p3;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x6B3BE8", Offset = "0x6B3BE8", VA = "0x6B3BE8")]
		public Triangle(int point1, int point2, int point3)
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x200023A")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63388C", Offset = "0x63388C")]
		public float arcDuration;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6338C4", Offset = "0x6338C4")]
		public float segmentBreak;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6338FC", Offset = "0x6338FC")]
		public float arcSpeed;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool useCustomGravity;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 customGravity;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arcTimeOffset;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float prevThickness;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int prevSegmentCount;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool showArc;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 startPos;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool useGravity;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool arcInvalid;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xBE9A9C", Offset = "0xBE9A9C", VA = "0xBE9A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xBE9AC4", Offset = "0xBE9AC4", VA = "0xBE9AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xBE9B10", Offset = "0xBE9B10", VA = "0xBE9B10")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xBE9ED8", Offset = "0xBE9ED8", VA = "0xBE9ED8")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xBE9F2C", Offset = "0xBE9F2C", VA = "0xBE9F2C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xBE9F44", Offset = "0xBE9F44", VA = "0xBE9F44")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xBEA000", Offset = "0xBEA000", VA = "0xBEA000")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xBEA520", Offset = "0xBEA520", VA = "0xBEA520")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xBEA628", Offset = "0xBEA628", VA = "0xBEA628")]
		public void AdjustArc(Vector3 offset, Vector3 startPos, Vector3 endPos)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xBEA86C", Offset = "0xBEA86C", VA = "0xBEA86C")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xBEA218", Offset = "0xBEA218", VA = "0xBEA218")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xBEA3B4", Offset = "0xBEA3B4", VA = "0xBEA3B4")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xBE9F7C", Offset = "0xBE9F7C", VA = "0xBE9F7C")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xBEA958", Offset = "0xBEA958", VA = "0xBEA958")]
		public TeleportArc()
		{
		}
	}
}
namespace Inspector
{
	[Token(Token = "0x200023B")]
	public class ArrayElementTitleAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Varname;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x9B7D58", Offset = "0x9B7D58", VA = "0x9B7D58")]
		public ArrayElementTitleAttribute(string ElementTitleVar)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class BitMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type propType;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x9B7D8C", Offset = "0x9B7D8C", VA = "0x9B7D8C")]
		public BitMaskAttribute(Type aType)
		{
		}
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62DB8C", Offset = "0x62DB8C")]
	public class ButtonAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float kDefaultButtonWidth;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string MethodName;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _buttonWidth;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _buttonText;

		[Token(Token = "0x17000119")]
		public float ButtonWidth
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x9B7DC0", Offset = "0x9B7DC0", VA = "0x9B7DC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x9B7DC8", Offset = "0x9B7DC8", VA = "0x9B7DC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public string ButtonText
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x9B7DD0", Offset = "0x9B7DD0", VA = "0x9B7DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x9B7DD8", Offset = "0x9B7DD8", VA = "0x9B7DD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x9B7DE0", Offset = "0x9B7DE0", VA = "0x9B7DE0")]
		public ButtonAttribute(string MethodName)
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x62DBA0", Offset = "0x62DBA0")]
	public class RoomTranslateAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string MethodName;

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x9B7EE0", Offset = "0x9B7EE0", VA = "0x9B7EE0")]
		public RoomTranslateAttribute(string MethodName)
		{
		}
	}
}
namespace VRInteraction
{
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DBB4", Offset = "0x62DBB4")]
	public class AimingGrabPoint : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform mainObject;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Interactable interactable;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Highlightable highlightable;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion aimRotation;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isAiming;

		[Token(Token = "0x1700011B")]
		public bool IsAiming
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xBD9024", Offset = "0xBD9024", VA = "0xBD9024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xBD902C", Offset = "0xBD902C", VA = "0xBD902C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xBD90B0", Offset = "0xBD90B0", VA = "0xBD90B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xBD96C8", Offset = "0xBD96C8", VA = "0xBD96C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xBD9CD4", Offset = "0xBD9CD4", VA = "0xBD9CD4")]
		private void OnMainAttached(Hand hand)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xBD9D60", Offset = "0xBD9D60", VA = "0xBD9D60")]
		private void OnMainReleased(Hand hand)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xBD9D7C", Offset = "0xBD9D7C", VA = "0xBD9D7C")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xBDA458", Offset = "0xBDA458", VA = "0xBDA458")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xBDA818", Offset = "0xBDA818", VA = "0xBDA818")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xBDA8AC", Offset = "0xBDA8AC", VA = "0xBDA8AC")]
		private void OnMainAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xBDADF0", Offset = "0xBDADF0", VA = "0xBDADF0")]
		public AimingGrabPoint()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DC18", Offset = "0x62DC18")]
	public class ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioClip playingClip;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float clipStrength;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool clipLoop;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] samples;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int sampleOffset;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float startTime;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float endTime;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float length;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int cleanup;

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xBDADF8", Offset = "0xBDADF8", VA = "0xBDADF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xBDAE58", Offset = "0xBDAE58", VA = "0xBDAE58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xBDB064", Offset = "0xBDB064", VA = "0xBDB064")]
		public void PlayClip(AudioClip clip, float strength = 1f, bool loop = false)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xBDB0F0", Offset = "0xBDB0F0", VA = "0xBDB0F0")]
		public void StopClip()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xBDB188", Offset = "0xBDB188", VA = "0xBDB188")]
		public void PlayPulse(float strength)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xBDB128", Offset = "0xBDB128", VA = "0xBDB128")]
		private void SetVibration(float strength)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xBDB1B0", Offset = "0xBDB1B0", VA = "0xBDB1B0")]
		public ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ControllerVelocity : MonoBehaviour
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int velNumFrames;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int angNumFrames;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sampleCount;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] velocities;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] angularVelocities;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isRecording;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xBDB224", Offset = "0xBDB224", VA = "0xBDB224")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xBDB2A8", Offset = "0xBDB2A8", VA = "0xBDB2A8")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xBDB310", Offset = "0xBDB310", VA = "0xBDB310")]
		public void EndRecording()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xBDB318", Offset = "0xBDB318", VA = "0xBDB318")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xBDB4D0", Offset = "0xBDB4D0", VA = "0xBDB4D0")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xBDB320", Offset = "0xBDB320", VA = "0xBDB320")]
		private Vector3 GetAverage(Vector3[] samples)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xBDB4D8", Offset = "0xBDB4D8", VA = "0xBDB4D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xBDB878", Offset = "0xBDB878", VA = "0xBDB878")]
		public ControllerVelocity()
		{
		}
	}
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DC7C", Offset = "0x62DC7C")]
	public class DraggableLinear : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPos;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPos;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633944", Offset = "0x633944")]
		public float posRate;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rateOffset;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isDragging;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool usingGrabBtn;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxHandInteractionDistance;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLocalParentPositioning;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63395C", Offset = "0x63395C")]
		public bool hasMomentum;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float momentumFriction;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int numChangeRateSamples;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] changeRateSamples;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleRateIdx;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float changeRate;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633994", Offset = "0x633994")]
		public bool hasSpring;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float springPoint;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float springStrength;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6339DC", Offset = "0x6339DC")]
		public AudioCue snapStartAudio;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioCue snapEndAudio;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioCue dragPulseAudio;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float dragPulseInterval;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastDragPulse;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool canPlaySnapStart;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool canPlaySnapEnd;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioCue dragLoopAudio;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource dragLoopSound;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float dragLoopMaxChangeRate;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x633A14", Offset = "0x633A14")]
		public Vector2 dragLoopVolRate;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x633A34", Offset = "0x633A34")]
		public Vector2 dragLoopPitchRate;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633A54", Offset = "0x633A54")]
		public float hapticsDragPulsesStrength;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float hapticsSnapStrength;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<DraggableLinear> onSnap;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Hand lockedHand;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 handStartInteractionPos;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int updateTask;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float dragLoopLastRate;

		[Token(Token = "0x1700011C")]
		public bool IsDragging
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xBDB88C", Offset = "0xBDB88C", VA = "0xBDB88C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xBDB894", Offset = "0xBDB894", VA = "0xBDB894")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xBDB93C", Offset = "0xBDB93C", VA = "0xBDB93C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xBDBC04", Offset = "0xBDBC04", VA = "0xBDBC04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xBDBC6C", Offset = "0xBDBC6C", VA = "0xBDBC6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xBDBD7C", Offset = "0xBDBD7C", VA = "0xBDBD7C")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xBDC7A4", Offset = "0xBDC7A4", VA = "0xBDC7A4")]
		public void StopDragging(Hand hand)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xBDCDDC", Offset = "0xBDCDDC", VA = "0xBDCDDC")]
		private void UpdateTask()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xBDD1DC", Offset = "0xBDD1DC", VA = "0xBDD1DC")]
		public void SetSpringPoint(float point)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xBDC620", Offset = "0xBDC620", VA = "0xBDC620")]
		private float GetLinearRate(Transform hand)
		{
			return default(float);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xBDC99C", Offset = "0xBDC99C", VA = "0xBDC99C")]
		private float UpdateLinearMapping(Transform hand, out bool snap)
		{
			return default(float);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xBDCCEC", Offset = "0xBDCCEC", VA = "0xBDCCEC")]
		private float EstimateChangeRate()
		{
			return default(float);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xBDD2BC", Offset = "0xBDD2BC", VA = "0xBDD2BC")]
		public void SetPosRate(float rate)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xBDCB20", Offset = "0xBDCB20", VA = "0xBDCB20")]
		private void PlayDragPulses(float newRate, Hand hand)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xBDD3FC", Offset = "0xBDD3FC", VA = "0xBDD3FC")]
		public DraggableLinear()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DCE0", Offset = "0x62DCE0")]
	public class DraggableRotation : MonoBehaviour
	{
		[Token(Token = "0x200046F")]
		public enum RotAxis
		{
			[Token(Token = "0x4001E61")]
			X,
			[Token(Token = "0x4001E62")]
			Y,
			[Token(Token = "0x4001E63")]
			Z
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC88", Offset = "0x62EC88")]
		private sealed class <ForceOpen_co>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DraggableRotation <>4__this;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Interactable <interactable>5__2;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <wasListeningHands>5__3;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB8")]
				[Address(RVA = "0xBDEF94", Offset = "0xBDEF94", VA = "0xBDEF94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBA")]
				[Address(RVA = "0xBDEFFC", Offset = "0xBDEFFC", VA = "0xBDEFFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xBDECE8", Offset = "0xBDECE8", VA = "0xBDECE8")]
			[DebuggerHidden]
			public <ForceOpen_co>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xBDEE2C", Offset = "0xBDEE2C", VA = "0xBDEE2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xBDEE30", Offset = "0xBDEE30", VA = "0xBDEE30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xBDEF9C", Offset = "0xBDEF9C", VA = "0xBDEF9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startAngle;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endAngle;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotAxis rotAxis;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633A8C", Offset = "0x633A8C")]
		public float rotRate;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isDragging;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool usingGrabBtn;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float movementMultiplier;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool scaleMultiplierByDistance;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x633AA4", Offset = "0x633AA4")]
		public float scaleMultiplierRange;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x633ADC", Offset = "0x633ADC")]
		public Vector3 scaleMultiplierEdgePos;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxHandInteractionDistance;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasMomentum;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float momentumFriction;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int numChangeRateSamples;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] changeRateSamples;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int sampleRateIdx;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float changeRate;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633B14", Offset = "0x633B14")]
		public AudioCue snapStartAudio;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioCue snapEndAudio;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioCue dragPulseAudio;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float dragPulseInterval;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastDragPulse;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool canPlaySnapStart;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool canPlaySnapEnd;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioCue dragLoopAudio;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource dragLoopSound;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float dragLoopMaxChangeRate;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x633B4C", Offset = "0x633B4C")]
		public Vector2 dragLoopVolRate;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x633B6C", Offset = "0x633B6C")]
		public Vector2 dragLoopPitchRate;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x633B8C", Offset = "0x633B8C")]
		public float hapticsDragPulsesStrength;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float hapticsSnapStrength;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 worldRotPlaneNormal;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 localRotPlaneNormal;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 handStartInteractionPos;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action<DraggableRotation> onSnap;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int updateTask;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float dragLoopLastRate;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xBDD4BC", Offset = "0xBDD4BC", VA = "0xBDD4BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xBDD564", Offset = "0xBDD564", VA = "0xBDD564")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xBDD688", Offset = "0xBDD688", VA = "0xBDD688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xBDD6F0", Offset = "0xBDD6F0", VA = "0xBDD6F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xBDD8D8", Offset = "0xBDD8D8", VA = "0xBDD8D8")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xBDE934", Offset = "0xBDE934", VA = "0xBDE934")]
		private void UpdateTask()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xBDEB3C", Offset = "0xBDEB3C", VA = "0xBDEB3C")]
		public void SetRate(float newRate)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xBDD7E4", Offset = "0xBDD7E4", VA = "0xBDD7E4")]
		private void RepositionObject(float rate)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xBDE2E0", Offset = "0xBDE2E0", VA = "0xBDE2E0")]
		private float UpdateAngularMapping(Vector3 handPos, out bool snap)
		{
			return default(float);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xBDE054", Offset = "0xBDE054", VA = "0xBDE054")]
		private Vector3 ProjectToRotationPlane(Vector3 handPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xBDEB44", Offset = "0xBDEB44", VA = "0xBDEB44")]
		private Vector2 GetRotationPlaneVector(Vector3 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xBDE1F0", Offset = "0xBDE1F0", VA = "0xBDE1F0")]
		private float EstimateChangeRate()
		{
			return default(float);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xBDE768", Offset = "0xBDE768", VA = "0xBDE768")]
		private void PlayDragPulses(float newRate, Hand hand)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xBDEC30", Offset = "0xBDEC30", VA = "0xBDEC30")]
		public void ForceOpen(float speed = 5f)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xBDEC5C", Offset = "0xBDEC5C", VA = "0xBDEC5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63BAE4", Offset = "0x63BAE4")]
		private IEnumerator ForceOpen_co(float speed = 5f)
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xBDED14", Offset = "0xBDED14", VA = "0xBDED14")]
		public DraggableRotation()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DD44", Offset = "0x62DD44")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool snapInstantly;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform attachPoint;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform attachPointLeft;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform attachPointRight;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 posOffset;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rotOffset;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool disableCollider;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool disableDefaultRenderer;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int customPose;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<Hand> onGrabbed;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<Hand> onReleased;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioCue grabSound;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Hand attachedHand;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RigidbodyInterpolation rbInterpolation;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int restoreCollisionTask;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CollisionDetectionMode collisionMode;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xBDF004", Offset = "0xBDF004", VA = "0xBDF004")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xBDF144", Offset = "0xBDF144", VA = "0xBDF144")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xBDF5CC", Offset = "0xBDF5CC", VA = "0xBDF5CC")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xBD7E60", Offset = "0xBD7E60", VA = "0xBD7E60")]
		public void AttachToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xBE02B4", Offset = "0xBE02B4", VA = "0xBE02B4")]
		private void OnAttached(Hand hand)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xBE0508", Offset = "0xBE0508", VA = "0xBE0508")]
		private void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xBE05F4", Offset = "0xBE05F4", VA = "0xBE05F4")]
		private void OnReleased(Hand hand)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xBE092C", Offset = "0xBE092C", VA = "0xBE092C")]
		public Hand GetAttachedHand()
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xBDF50C", Offset = "0xBDF50C", VA = "0xBDF50C")]
		private void RestoreCollisionMode()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xBE0934", Offset = "0xBE0934", VA = "0xBE0934")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		public enum ControllerType
		{
			[Token(Token = "0x4001E6B")]
			SixDOF,
			[Token(Token = "0x4001E6C")]
			ThreeDOF,
			[Token(Token = "0x4001E6D")]
			Pointer2D
		}

		[Token(Token = "0x2000472")]
		public enum Handedness
		{
			[Token(Token = "0x4001E6F")]
			Right,
			[Token(Token = "0x4001E70")]
			Left,
			[Token(Token = "0x4001E71")]
			Primary,
			[Token(Token = "0x4001E72")]
			Secondary,
			[Token(Token = "0x4001E73")]
			Any
		}

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerType controllerType;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Handedness handedness;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer defaultRenderer;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hoverRadius;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float hoverRange;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask lineOfSightCollisionMask;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float pointerRange;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask pointerLayerMask;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hand otherHand;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Interactable _hoverObject;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Interactable hoverLocked;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Interactable _attachedObject;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform attachedObjectOldParent;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 attachedTargetPos;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion attachedTargetRot;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float attachSnapSpeedPos;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float attachSnapSpeedRot;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 attachedPosOffset;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion attachedRotOffset;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform overrideTransform;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool overrideOffset;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 overrideOffsetPos;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion overrideOffsetRot;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 controllerOffsetPos;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Quaternion controllerOffsetRot;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ControllerVelocity controllerVelocity;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TrackedClip trackedClip;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ControllerHaptics haptics;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _canInteract;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool toggleGrab;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Collider[] colliderBuffer;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Collider[] colliderBufferRay;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RaycastHit[] raycastBuffer;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool updatingAttachedObj;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool deferDettachObj;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform defaultControllerAnchor;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int customPose;

		[Token(Token = "0x1700011D")]
		public Interactable HoverObject
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0xBE09CC", Offset = "0xBE09CC", VA = "0xBE09CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public Interactable AttachedObject
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xBE09D4", Offset = "0xBE09D4", VA = "0xBE09D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public bool CanInteract
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xBE09DC", Offset = "0xBE09DC", VA = "0xBE09DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xBE09E4", Offset = "0xBE09E4", VA = "0xBE09E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public Vector3 ControllerVelocity
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xBE08F4", Offset = "0xBE08F4", VA = "0xBE08F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000121")]
		public Vector3 ControllerAngularVelocity
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xBE0910", Offset = "0xBE0910", VA = "0xBE0910")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<Hand, Interactable> onObjectAttached
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xBE09F0", Offset = "0xBE09F0", VA = "0xBE09F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB48", Offset = "0x63BB48")]
			add
			{
			}
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xBE0A98", Offset = "0xBE0A98", VA = "0xBE0A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB58", Offset = "0x63BB58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<Hand, Interactable> onObjectReleased
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xBE0B40", Offset = "0xBE0B40", VA = "0xBE0B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB68", Offset = "0x63BB68")]
			add
			{
			}
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xBE0BE8", Offset = "0xBE0BE8", VA = "0xBE0BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB78", Offset = "0x63BB78")]
			remove
			{
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xBE0C90", Offset = "0xBE0C90", VA = "0xBE0C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xBE0DB8", Offset = "0xBE0DB8", VA = "0xBE0DB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xBE2510", Offset = "0xBE2510", VA = "0xBE2510")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xBE28E0", Offset = "0xBE28E0", VA = "0xBE28E0")]
		public void AttachObject(GameObject go, bool useGrabPosition = false, bool snapInstantly = false)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xBDF624", Offset = "0xBDF624", VA = "0xBDF624")]
		public void AttachObject(GameObject go, Vector3 localPos, Quaternion localRot, bool useGrabPosition = false, bool snapInstantly = false)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xBDF364", Offset = "0xBDF364", VA = "0xBDF364")]
		public void ReleaseObject([Optional] GameObject go)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xBE02A0", Offset = "0xBE02A0", VA = "0xBE02A0")]
		public void SetAttachOffset(Vector3 posOffset, Quaternion rotOffset)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xBE2AC8", Offset = "0xBE2AC8", VA = "0xBE2AC8")]
		public bool HasAttachedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xBE2B38", Offset = "0xBE2B38", VA = "0xBE2B38")]
		public Interactable GetAttachedObject()
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xBE2B40", Offset = "0xBE2B40", VA = "0xBE2B40")]
		public void HoverLock(Interactable obj)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xBDBB64", Offset = "0xBDBB64", VA = "0xBDBB64")]
		public void HoverUnlock(Interactable obj)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xBE2B48", Offset = "0xBE2B48", VA = "0xBE2B48")]
		public void OverridePosition(Transform wantedTransform)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xBDAC68", Offset = "0xBDAC68", VA = "0xBDAC68")]
		public void OverrideOffset(Vector3 pos, Quaternion rot, bool addToExistingPostMultiply = true)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xBE04E8", Offset = "0xBE04E8", VA = "0xBE04E8")]
		public void SetDefaultRendererEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xBE2B50", Offset = "0xBE2B50", VA = "0xBE2B50")]
		public bool IsDefaultRendererEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xBDC794", Offset = "0xBDC794", VA = "0xBDC794")]
		public bool GetMainButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xBDC610", Offset = "0xBDC610", VA = "0xBDC610")]
		public bool GetMainButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xBE2B6C", Offset = "0xBE2B6C", VA = "0xBE2B6C")]
		public bool GetMainButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xBE2B7C", Offset = "0xBE2B7C", VA = "0xBE2B7C")]
		public float GetMainButtonValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xBDA5FC", Offset = "0xBDA5FC", VA = "0xBDA5FC")]
		public bool GetGrabButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xBDA60C", Offset = "0xBDA60C", VA = "0xBDA60C")]
		public bool GetGrabButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xBE22F4", Offset = "0xBE22F4", VA = "0xBE22F4")]
		public bool GetGrabButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xBE2B8C", Offset = "0xBE2B8C", VA = "0xBE2B8C")]
		public float GetGrabButtonValue()
		{
			return default(float);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xBE2B9C", Offset = "0xBE2B9C", VA = "0xBE2B9C")]
		public bool IsPointing()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xBE2BA8", Offset = "0xBE2BA8", VA = "0xBE2BA8")]
		public bool IsThumbsUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xBDD3C8", Offset = "0xBDD3C8", VA = "0xBDD3C8")]
		public void PlayHapticPulse(float strength = 1f)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xBDCB04", Offset = "0xBDCB04", VA = "0xBDCB04")]
		public void PlayHapticClip(AudioClip clip, float strength = 1f)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xBE2BB4", Offset = "0xBE2BB4", VA = "0xBE2BB4")]
		public void StopHapticClip()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xBE2BF8", Offset = "0xBE2BF8", VA = "0xBE2BF8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DDA8", Offset = "0x62DDA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DDA8", Offset = "0x62DDA8")]
	public class HandColliderFist : MonoBehaviour
	{
		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform handTransform;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rb;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider collider;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localPos;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion localRot;

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xBE2CC8", Offset = "0xBE2CC8", VA = "0xBE2CC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xBE2E0C", Offset = "0xBE2E0C", VA = "0xBE2E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xBE2E2C", Offset = "0xBE2E2C", VA = "0xBE2E2C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xBE2E30", Offset = "0xBE2E30", VA = "0xBE2E30")]
		private void UpdatePos()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xBE2FA8", Offset = "0xBE2FA8", VA = "0xBE2FA8")]
		public HandColliderFist()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DE34", Offset = "0x62DE34")]
	public class Highlightable : MonoBehaviour
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material hightlightMaterial;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool applyToChildren;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] applyToObjs;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Renderer> excludeObjs;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useHapticFeedback;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioCue audioFeedback;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showOnHover;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool useSecondaryRenderer;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject locked;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool showingHighlight;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Pair<Renderer, Material[]>> oldMaterials;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject secondaryRendererGO;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer secondaryRenderer;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xBE2FB0", Offset = "0xBE2FB0", VA = "0xBE2FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xBE3098", Offset = "0xBE3098", VA = "0xBE3098")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xBE3178", Offset = "0xBE3178", VA = "0xBE3178")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xBD9E24", Offset = "0xBD9E24", VA = "0xBD9E24")]
		public void ShowHighlight([Optional] Hand hand, [Optional] Material replacementMaterial)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xBE3258", Offset = "0xBE3258", VA = "0xBE3258")]
		private void ApplyToRenderer(Renderer renderer, Material highMat)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xBDA61C", Offset = "0xBDA61C", VA = "0xBDA61C")]
		public void StopHighlight([Optional] Hand hand)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xBE33B4", Offset = "0xBE33B4", VA = "0xBE33B4")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xBE33BC", Offset = "0xBE33BC", VA = "0xBE33BC")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xBE33D0", Offset = "0xBE33D0", VA = "0xBE33D0")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xBE33E0", Offset = "0xBE33E0", VA = "0xBE33E0")]
		public bool GetLock(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xBE3480", Offset = "0xBE3480", VA = "0xBE3480")]
		public void ReleaseLock(GameObject go)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xBE3520", Offset = "0xBE3520", VA = "0xBE3520")]
		public Highlightable()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool listenToHands;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool addHightlight;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool useChildrenColliders;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool exclusiveHover;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool uiHover;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool usePreciseDistanceForHover;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool returnToOldParent;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hand.Handedness allowedHands;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxRange;

		[Token(Token = "0x14000046")]
		public event Action<Hand> onHoverBegin
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xBD92F0", Offset = "0xBD92F0", VA = "0xBD92F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB88", Offset = "0x63BB88")]
			add
			{
			}
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xBD98FC", Offset = "0xBD98FC", VA = "0xBD98FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BB98", Offset = "0x63BB98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action<Hand> onHoverUpdate
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xBD9394", Offset = "0xBD9394", VA = "0xBD9394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBA8", Offset = "0x63BBA8")]
			add
			{
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xBD99A0", Offset = "0xBD99A0", VA = "0xBD99A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBB8", Offset = "0x63BBB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action<Hand> onHoverEnd
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xBD9438", Offset = "0xBD9438", VA = "0xBD9438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBC8", Offset = "0x63BBC8")]
			add
			{
			}
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xBD9A44", Offset = "0xBD9A44", VA = "0xBD9A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBD8", Offset = "0x63BBD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action<Hand> onAttached
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xBD94DC", Offset = "0xBD94DC", VA = "0xBD94DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBE8", Offset = "0x63BBE8")]
			add
			{
			}
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xBD9AE8", Offset = "0xBD9AE8", VA = "0xBD9AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BBF8", Offset = "0x63BBF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action<Hand> onAttachedUpdate
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xBD9624", Offset = "0xBD9624", VA = "0xBD9624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC08", Offset = "0x63BC08")]
			add
			{
			}
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xBD9C30", Offset = "0xBD9C30", VA = "0xBD9C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC18", Offset = "0x63BC18")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<Hand> onReleased
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xBD9580", Offset = "0xBD9580", VA = "0xBD9580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC28", Offset = "0x63BC28")]
			add
			{
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xBD9B8C", Offset = "0xBD9B8C", VA = "0xBD9B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC38", Offset = "0x63BC38")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action<Hand> onPointBegin
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xBE3534", Offset = "0xBE3534", VA = "0xBE3534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC48", Offset = "0x63BC48")]
			add
			{
			}
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xBE35D8", Offset = "0xBE35D8", VA = "0xBE35D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC58", Offset = "0x63BC58")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action<Hand> onPointUpdate
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xBE367C", Offset = "0xBE367C", VA = "0xBE367C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC68", Offset = "0x63BC68")]
			add
			{
			}
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xBE3720", Offset = "0xBE3720", VA = "0xBE3720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC78", Offset = "0x63BC78")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action<Hand> onPointEnd
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xBE37C4", Offset = "0xBE37C4", VA = "0xBE37C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC88", Offset = "0x63BC88")]
			add
			{
			}
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xBE3868", Offset = "0xBE3868", VA = "0xBE3868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BC98", Offset = "0x63BC98")]
			remove
			{
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xBE390C", Offset = "0xBE390C", VA = "0xBE390C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xBE249C", Offset = "0xBE249C", VA = "0xBE249C")]
		public void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xBE238C", Offset = "0xBE238C", VA = "0xBE238C")]
		public void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xBE2428", Offset = "0xBE2428", VA = "0xBE2428")]
		public void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xBE29E0", Offset = "0xBE29E0", VA = "0xBE29E0")]
		public void OnAttached(Hand hand)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xBE2318", Offset = "0xBE2318", VA = "0xBE2318")]
		public void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xBE2A54", Offset = "0xBE2A54", VA = "0xBE2A54")]
		public void OnReleased(Hand hand)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xBE39CC", Offset = "0xBE39CC", VA = "0xBE39CC")]
		public void OnPointBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xBE3A40", Offset = "0xBE3A40", VA = "0xBE3A40")]
		public void OnPointUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xBE3AB4", Offset = "0xBE3AB4", VA = "0xBE3AB4")]
		public void OnPointEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xBE3B28", Offset = "0xBE3B28", VA = "0xBE3B28")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class TrackedClip : MonoBehaviour
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask collisionMask;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _clippingFactor;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipRadius;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeOutExtent;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform trackedObj;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer quadRenderer;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedClip backupClipper;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastValidPos;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform playerRoot;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool checkNavigation;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 lastValidAbsolutePos;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool firstUpdate;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHit[] clipRaycasts;

		[Token(Token = "0x17000122")]
		public float ClippingFactor
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xBE3B48", Offset = "0xBE3B48", VA = "0xBE3B48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000123")]
		public bool IsClipped
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xBE2304", Offset = "0xBE2304", VA = "0xBE2304")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xBE3B50", Offset = "0xBE3B50", VA = "0xBE3B50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xBE3C20", Offset = "0xBE3C20", VA = "0xBE3C20")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xBE3C84", Offset = "0xBE3C84", VA = "0xBE3C84")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xBE442C", Offset = "0xBE442C", VA = "0xBE442C")]
		private static bool Clip(Vector3 origin, Vector3 curPos, float radius, float fadeOutExtent, LayerMask mask, out float clippingFactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xBE47F0", Offset = "0xBE47F0", VA = "0xBE47F0")]
		public void SetTrackedObj(Transform newObj)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xBE48D4", Offset = "0xBE48D4", VA = "0xBE48D4")]
		public static void SetTrackedObj(Hand hand, Transform newObj)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xBE2400", Offset = "0xBE2400", VA = "0xBE2400")]
		public Vector3 GetLastValidPosWorld()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xBE4994", Offset = "0xBE4994", VA = "0xBE4994")]
		public void SetLastValidPos(Vector3 newPos)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xBE49CC", Offset = "0xBE49CC", VA = "0xBE49CC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xBE4AB4", Offset = "0xBE4AB4", VA = "0xBE4AB4")]
		public TrackedClip()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DE98", Offset = "0x62DE98")]
	public class Triggable : MonoBehaviour
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onlyOnce;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Hand> onTriggered;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggleState;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool triggableOnAttached;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioCue sound;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Interactable interactable;

		[Token(Token = "0x17000124")]
		public bool CanBeTriggered
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xBE4B3C", Offset = "0xBE4B3C", VA = "0xBE4B3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xBE4B58", Offset = "0xBE4B58", VA = "0xBE4B58")]
			set
			{
			}
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xBE4B78", Offset = "0xBE4B78", VA = "0xBE4B78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xBE4BD8", Offset = "0xBE4BD8", VA = "0xBE4BD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xBE4CC4", Offset = "0xBE4CC4", VA = "0xBE4CC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBE4DB0", Offset = "0xBE4DB0", VA = "0xBE4DB0")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBE4EB8", Offset = "0xBE4EB8", VA = "0xBE4EB8")]
		private void OnAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xBE4DB4", Offset = "0xBE4DB4", VA = "0xBE4DB4")]
		private void CheckTrigger(Hand hand)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xBE4EBC", Offset = "0xBE4EBC", VA = "0xBE4EBC")]
		public Triggable()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DEFC", Offset = "0x62DEFC")]
	public class UIInteractable : MonoBehaviour
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable interactable;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button uiButton;

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xBE8C54", Offset = "0xBE8C54", VA = "0xBE8C54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xBE8CB4", Offset = "0xBE8CB4", VA = "0xBE8CB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xBE8DBC", Offset = "0xBE8DBC", VA = "0xBE8DBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xBE8F90", Offset = "0xBE8F90", VA = "0xBE8F90")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xBE90C8", Offset = "0xBE90C8", VA = "0xBE90C8")]
		private void OnHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xBE91AC", Offset = "0xBE91AC", VA = "0xBE91AC")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xBE9288", Offset = "0xBE9288", VA = "0xBE9288")]
		public UIInteractable()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int velocityFrames;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int angularVelocityFrames;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int velSampleCount;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] velSamples;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int angVelSampleCount;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] angVelSamples;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xBE9290", Offset = "0xBE9290", VA = "0xBE9290")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xBE930C", Offset = "0xBE930C", VA = "0xBE930C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xBE9370", Offset = "0xBE9370", VA = "0xBE9370")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xBE9710", Offset = "0xBE9710", VA = "0xBE9710")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xBE98CC", Offset = "0xBE98CC", VA = "0xBE98CC")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xBE9A88", Offset = "0xBE9A88", VA = "0xBE9A88")]
		public VelocityEstimator()
		{
		}
	}
}
namespace VRInteraction.UI
{
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62DF60", Offset = "0x62DF60")]
	public class VRCanvasInteractable : MonoBehaviour
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string colliderLayer;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Interactable interactable;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas canvas;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float colliderThickness;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float colliderZOffset;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xBE4EC4", Offset = "0xBE4EC4", VA = "0xBE4EC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xBE540C", Offset = "0xBE540C", VA = "0xBE540C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xBE54DC", Offset = "0xBE54DC", VA = "0xBE54DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xBE5740", Offset = "0xBE5740", VA = "0xBE5740")]
		private void OnHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xBE55B8", Offset = "0xBE55B8", VA = "0xBE55B8")]
		private void OnHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xBE5C60", Offset = "0xBE5C60", VA = "0xBE5C60")]
		public VRCanvasInteractable()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class VRInputModule : StandaloneInputModule
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public RectTransform cursorLeft;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public RectTransform cursorRight;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 cursorLeftScale;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 cursorRightScale;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform lookCamera;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Pair<RectTransform, Hand>> activeCanvas;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool leftHandJustRemoved;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool rightHandJustRemoved;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform modalObject;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MouseState mouseState;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<RaycastResult> raycastHits;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<int, VRPointerEventData> VRPointerDataPool;

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xBE59B4", Offset = "0xBE59B4", VA = "0xBE59B4")]
		public void AddActiveCanvas(RectTransform refCanvas, Hand hand)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xBE5A48", Offset = "0xBE5A48", VA = "0xBE5A48")]
		public void RemoveActiveCanvas(RectTransform refCanvas, Hand hand)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xBE5CCC", Offset = "0xBE5CCC", VA = "0xBE5CCC")]
		public void RemoveActiveCanvas(RectTransform refCanvas)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xBE5DD4", Offset = "0xBE5DD4", VA = "0xBE5DD4", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xBE5EC4", Offset = "0xBE5EC4", VA = "0xBE5EC4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xBE6720", Offset = "0xBE6720", VA = "0xBE6720")]
		private MouseState GetVRPointerData(bool rightHand)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBE6F5C", Offset = "0xBE6F5C", VA = "0xBE6F5C")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBE72B4", Offset = "0xBE72B4", VA = "0xBE72B4")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xBE721C", Offset = "0xBE721C", VA = "0xBE721C")]
		protected PointerEventData.FramePressState GetButtonState(Hand hand)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xBE712C", Offset = "0xBE712C", VA = "0xBE712C")]
		protected bool GetPointerData(int id, out VRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xBE72C4", Offset = "0xBE72C4", VA = "0xBE72C4")]
		public static void CopyPointerEventData(VRPointerEventData from, VRPointerEventData to)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xBE735C", Offset = "0xBE735C", VA = "0xBE735C")]
		public static void CopyPointerEventData(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xBE73D4", Offset = "0xBE73D4", VA = "0xBE73D4")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Ray worldRay;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject activeCanvas;

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xBE72BC", Offset = "0xBE72BC", VA = "0xBE72BC")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public static class VRPointerEventDataExtension
	{
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xBE74E4", Offset = "0xBE74E4", VA = "0xBE74E4")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xBE7564", Offset = "0xBE7564", VA = "0xBE7564")]
		public static Ray GetRay(this PointerEventData pointerEventData)
		{
			return default(Ray);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xBE75FC", Offset = "0xBE75FC", VA = "0xBE75FC")]
		public static GameObject GetActiveCanvas(this PointerEventData pointerEventData)
		{
			return null;
		}
	}
	[Token(Token = "0x2000251")]
	public class VRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000473")]
		private struct VRRaycastHit
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;
		}

		[Serializable]
		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EC98", Offset = "0x62EC98")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VRRaycastHit> <>9__7_0;

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xBE8BF4", Offset = "0xBE8BF4", VA = "0xBE8BF4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0xBE8BFC", Offset = "0xBE8BFC", VA = "0xBE8BFC")]
			internal int <GraphicRaycast>b__7_0(VRRaycastHit g1, VRRaycastHit g2)
			{
				return default(int);
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas m_Canvas;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<VRRaycastHit> raycastResults;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<VRRaycastHit> sortedGraphics;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] corners;

		[Token(Token = "0x17000125")]
		private Canvas canvas
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xBE767C", Offset = "0xBE767C", VA = "0xBE767C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xBE7728", Offset = "0xBE7728", VA = "0xBE7728", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xBE7788", Offset = "0xBE7788", VA = "0xBE7788")]
		protected void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xBE7DA0", Offset = "0xBE7DA0", VA = "0xBE7DA0")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<VRRaycastHit> results)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xBE894C", Offset = "0xBE894C", VA = "0xBE894C", Slot = "22")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xBE84BC", Offset = "0xBE84BC", VA = "0xBE84BC")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xBE8A4C", Offset = "0xBE8A4C", VA = "0xBE8A4C")]
		public VRRaycaster()
		{
		}
	}
}
namespace SimpleIK
{
	[Token(Token = "0x2000252")]
	public class IKController : MonoBehaviour
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingDistance;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float learningRate;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distanceThreshold;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKJoint[] joints;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] currentAngles;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform targetObj;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 targetPos;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x136A348", Offset = "0x136A348", VA = "0x136A348")]
		private void Start()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x136A43C", Offset = "0x136A43C", VA = "0x136A43C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x136A72C", Offset = "0x136A72C", VA = "0x136A72C")]
		public Vector3 ForwardKinematics(float[] angles, bool applyTransform = false, bool debugDraw = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x136ABB4", Offset = "0x136ABB4", VA = "0x136ABB4")]
		public float DistanceFromTarget(Vector3 target, float[] angles)
		{
			return default(float);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x136AC80", Offset = "0x136AC80", VA = "0x136AC80")]
		public float PartialGradient(Vector3 target, float[] angles, int i, float samplingDistance)
		{
			return default(float);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x136A514", Offset = "0x136A514", VA = "0x136A514")]
		public void IK(Vector3 target, float[] angles)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x136AD58", Offset = "0x136AD58", VA = "0x136AD58")]
		public IKController()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class IKJoint : MonoBehaviour
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 startOffset;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool constrained;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minAngle;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxAngle;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x136AD60", Offset = "0x136AD60", VA = "0x136AD60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x136AD9C", Offset = "0x136AD9C", VA = "0x136AD9C")]
		public IKJoint()
		{
		}
	}
}
namespace WDG
{
	[Token(Token = "0x2000254")]
	public class Tuple<TItem1, TItem2>
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633C84", Offset = "0x633C84")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633C94", Offset = "0x633C94")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x17000126")]
		public TItem1 Item1
		{
			[Token(Token = "0x600150B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BCD8", Offset = "0x63BCD8")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x600150C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BCE8", Offset = "0x63BCE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public TItem2 Item2
		{
			[Token(Token = "0x600150D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BCF8", Offset = "0x63BCF8")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x600150E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD08", Offset = "0x63BD08")]
			private set
			{
			}
		}

		[Token(Token = "0x600150A")]
		public Tuple(TItem1 item1, TItem2 item2)
		{
		}

		[Token(Token = "0x600150F")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001511")]
		public static bool operator ==(Tuple<TItem1, TItem2> left, Tuple<TItem1, TItem2> right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001512")]
		public static bool operator !=(Tuple<TItem1, TItem2> left, Tuple<TItem1, TItem2> right)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000255")]
	public class Tuple<TItem1, TItem2, TItem3>
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CA4", Offset = "0x633CA4")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CB4", Offset = "0x633CB4")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CC4", Offset = "0x633CC4")]
		private TItem3 <Item3>k__BackingField;

		[Token(Token = "0x17000128")]
		public TItem1 Item1
		{
			[Token(Token = "0x6001514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD18", Offset = "0x63BD18")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x6001515")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD28", Offset = "0x63BD28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public TItem2 Item2
		{
			[Token(Token = "0x6001516")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD38", Offset = "0x63BD38")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x6001517")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD48", Offset = "0x63BD48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public TItem3 Item3
		{
			[Token(Token = "0x6001518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD58", Offset = "0x63BD58")]
			get
			{
				return (TItem3)null;
			}
			[Token(Token = "0x6001519")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD68", Offset = "0x63BD68")]
			private set
			{
			}
		}

		[Token(Token = "0x6001513")]
		public Tuple(TItem1 item1, TItem2 item2, TItem3 item3)
		{
		}

		[Token(Token = "0x600151A")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600151C")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3> left, Tuple<TItem1, TItem2, TItem3> right)
		{
			return default(bool);
		}

		[Token(Token = "0x600151D")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3> left, object right)
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3> left, Tuple<TItem1, TItem2, TItem3> right)
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3> left, object right)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000256")]
	public class Tuple<TItem1, TItem2, TItem3, TItem4>
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CD4", Offset = "0x633CD4")]
		private TItem1 <Item1>k__BackingField;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CE4", Offset = "0x633CE4")]
		private TItem2 <Item2>k__BackingField;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633CF4", Offset = "0x633CF4")]
		private TItem3 <Item3>k__BackingField;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x633D04", Offset = "0x633D04")]
		private TItem4 <Item4>k__BackingField;

		[Token(Token = "0x1700012B")]
		public TItem1 Item1
		{
			[Token(Token = "0x6001521")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD78", Offset = "0x63BD78")]
			get
			{
				return (TItem1)null;
			}
			[Token(Token = "0x6001522")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD88", Offset = "0x63BD88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public TItem2 Item2
		{
			[Token(Token = "0x6001523")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BD98", Offset = "0x63BD98")]
			get
			{
				return (TItem2)null;
			}
			[Token(Token = "0x6001524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDA8", Offset = "0x63BDA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public TItem3 Item3
		{
			[Token(Token = "0x6001525")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDB8", Offset = "0x63BDB8")]
			get
			{
				return (TItem3)null;
			}
			[Token(Token = "0x6001526")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDC8", Offset = "0x63BDC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public TItem4 Item4
		{
			[Token(Token = "0x6001527")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDD8", Offset = "0x63BDD8")]
			get
			{
				return (TItem4)null;
			}
			[Token(Token = "0x6001528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDE8", Offset = "0x63BDE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001520")]
		public Tuple(TItem1 item1, TItem2 item2, TItem3 item3, TItem4 item4)
		{
		}

		[Token(Token = "0x6001529")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600152A")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600152B")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3, TItem4> left, Tuple<TItem1, TItem2, TItem3, TItem4> right)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		public static bool operator ==(Tuple<TItem1, TItem2, TItem3, TItem4> left, object right)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3, TItem4> left, Tuple<TItem1, TItem2, TItem3, TItem4> right)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		public static bool operator !=(Tuple<TItem1, TItem2, TItem3, TItem4> left, object right)
		{
			return default(bool);
		}
	}
}
namespace WDG.Occlusion
{
	[Token(Token = "0x2000257")]
	public struct Frustum
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Plane plane0;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Plane plane1;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Plane plane2;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Plane plane3;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane plane4;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Plane plane5;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int numPlanes;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Plane farPlane;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane[] tempPlanes;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] boundPoints;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] rectPoints;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x6B4C1C", Offset = "0x6B4C1C", VA = "0x6B4C1C")]
		public Frustum(Bounds bounds, Transform transform)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x6B4C50", Offset = "0x6B4C50", VA = "0x6B4C50")]
		public Frustum(float sizeX, float sizeY, Transform rectTransform, Vector3 origin)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x6B4C58", Offset = "0x6B4C58", VA = "0x6B4C58")]
		public Frustum(Camera camera)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x6B4C60", Offset = "0x6B4C60", VA = "0x6B4C60")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x6B4C68", Offset = "0x6B4C68", VA = "0x6B4C68")]
		public bool Contains(IEnumerable<Vector3> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x6B4C70", Offset = "0x6B4C70", VA = "0x6B4C70")]
		public bool Outside(Bounds bounds, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x6B4CA8", Offset = "0x6B4CA8", VA = "0x6B4CA8")]
		public bool Outside(float sizeX, float sizeY, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x6B4CB0", Offset = "0x6B4CB0", VA = "0x6B4CB0")]
		public bool Outside(Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x6B4CB8", Offset = "0x6B4CB8", VA = "0x6B4CB8")]
		private bool Outside(Vector3[] points, Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x98AE84", Offset = "0x98AE84", VA = "0x98AE84")]
		private static void PointsFromBounds(ref Vector3[] points, Bounds bounds, Transform transform)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x98B628", Offset = "0x98B628", VA = "0x98B628")]
		private static void PointsFromRect(ref Vector3[] points, float sizeX, float sizeY, Transform transform)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x6B4CBC", Offset = "0x6B4CBC", VA = "0x6B4CBC")]
		public void DrawFrustum(Color color)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public interface IOcclusion
	{
		[Token(Token = "0x600153C")]
		bool IsVisible();

		[Token(Token = "0x600153D")]
		bool IsPotentiallyVisible();
	}
	[Token(Token = "0x2000259")]
	public class OcclusionGroup
	{
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Renderer, OcclusionManager.Item<Renderer>> renderers;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Light, OcclusionManager.Item<Light>> lights;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<OcclusionTracker, OcclusionManager.Item<OcclusionTracker>> trackers;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IOcclusion container;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Renderer> cacheRenderers;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Light> cacheLights;

		[Token(Token = "0x1400004F")]
		public event Action<Renderer> onAdded
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x98BF68", Offset = "0x98BF68", VA = "0x98BF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BDF8", Offset = "0x63BDF8")]
			add
			{
			}
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x98C00C", Offset = "0x98C00C", VA = "0x98C00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE08", Offset = "0x63BE08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action<Renderer> onRemoved
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x98C0B0", Offset = "0x98C0B0", VA = "0x98C0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE18", Offset = "0x63BE18")]
			add
			{
			}
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x98C154", Offset = "0x98C154", VA = "0x98C154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE28", Offset = "0x63BE28")]
			remove
			{
			}
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x98C1F8", Offset = "0x98C1F8", VA = "0x98C1F8")]
		public OcclusionGroup(IOcclusion owner)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x98C2F8", Offset = "0x98C2F8", VA = "0x98C2F8")]
		public void Add(Renderer r)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x98C5E8", Offset = "0x98C5E8", VA = "0x98C5E8")]
		public void Remove(Renderer r)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x98C758", Offset = "0x98C758", VA = "0x98C758")]
		public void Add(Light l)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x98C960", Offset = "0x98C960", VA = "0x98C960")]
		public void Remove(Light l)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x98CAB4", Offset = "0x98CAB4", VA = "0x98CAB4")]
		public void Add(OcclusionTracker t)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x98CDC0", Offset = "0x98CDC0", VA = "0x98CDC0")]
		public void Remove(OcclusionTracker t)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x98CF14", Offset = "0x98CF14", VA = "0x98CF14")]
		public bool Contains(Renderer r)
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x98CF7C", Offset = "0x98CF7C", VA = "0x98CF7C")]
		public bool Contains(Light l)
		{
			return default(bool);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x98CFE4", Offset = "0x98CFE4", VA = "0x98CFE4")]
		public bool Contains(OcclusionTracker t)
		{
			return default(bool);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x98D04C", Offset = "0x98D04C", VA = "0x98D04C")]
		public void AddHierarchy(GameObject go, LayerMask layerMask, bool onlyStatic, bool includeInactive = false)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x98D588", Offset = "0x98D588", VA = "0x98D588")]
		public void SetVisibility(bool visible, bool potentiallyVisible)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x98DB38", Offset = "0x98DB38", VA = "0x98DB38")]
		public void SetPotentiallyVisible(bool potentiallyVisible)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x98C534", Offset = "0x98C534", VA = "0x98C534")]
		private static void ApplyVisibility(OcclusionManager.Item<Renderer> item)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x98C8AC", Offset = "0x98C8AC", VA = "0x98C8AC")]
		private static void ApplyVisibility(OcclusionManager.Item<Light> item)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x98CCE8", Offset = "0x98CCE8", VA = "0x98CCE8")]
		private static void ApplyVisibility(OcclusionManager.Item<OcclusionTracker> item)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x98C478", Offset = "0x98C478", VA = "0x98C478")]
		public bool IsContainerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x98CC28", Offset = "0x98CC28", VA = "0x98CC28")]
		public bool IsContainerPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x98DD58", Offset = "0x98DD58", VA = "0x98DD58")]
		public void CleanupNullItems()
		{
		}

		[Token(Token = "0x6001555")]
		private void CleanupNullItems<T>(Dictionary<T, OcclusionManager.Item<T>> dict, bool isRenderer, bool isLight, bool isTracker) where T : Component
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x98DE00", Offset = "0x98DE00", VA = "0x98DE00")]
		public IEnumerable<Renderer> GetRenderers()
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public class OcclusionManager : Singleton<OcclusionManager>
	{
		[Token(Token = "0x2000475")]
		public class Item<T> where T : Component
		{
			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T obj;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int groupCount;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int visibilityCount;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool vibilityDirty;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int potVisibilityCount;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool potVisibilityDirty;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<OcclusionGroup> listGroups;

			[Token(Token = "0x6001EBE")]
			public Item(T obj)
			{
			}

			[Token(Token = "0x6001EBF")]
			public void Reset(T obj)
			{
			}

			[Token(Token = "0x6001EC0")]
			public bool IsVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC1")]
			public bool IsPotentiallyVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC2")]
			public void ResetVisibilityCount()
			{
			}

			[Token(Token = "0x6001EC3")]
			public void SetVisibility(bool visible)
			{
			}

			[Token(Token = "0x6001EC4")]
			public void SetPotentialVisibility(bool potVisible)
			{
			}

			[Token(Token = "0x6001EC5")]
			public void AddToGroup(OcclusionGroup g)
			{
			}

			[Token(Token = "0x6001EC6")]
			public void RemoveFromGroup(OcclusionGroup g)
			{
			}

			[Token(Token = "0x6001EC7")]
			public bool IsReferenced()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC8")]
			public int GetGroupCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001EC9")]
			public int GetVisibilityCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001ECA")]
			public int GetPotentialVisibilityCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001ECB")]
			private bool UpdateGroupsVisibility()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECC")]
			private bool UpdateGroupsPotVisibility()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool forceVisible;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool drawFrustums;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float cleanupTime;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Sector> sectors;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Portal> portals;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Sector> startSectors;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Renderer, Item<Renderer>> renderers;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Light, Item<Light>> lights;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<OcclusionTracker, Item<OcclusionTracker>> trackers;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Item<Renderer>> renderersPool;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Item<Light>> lightsPool;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Item<OcclusionTracker>> trackersPool;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Item<Renderer>> renderersToCleanup;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Item<Light>> lightsToCleanup;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Item<OcclusionTracker>> trackersToCleanup;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int cleanUpSector;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x98DF08", Offset = "0x98DF08", VA = "0x98DF08", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x98DFC0", Offset = "0x98DFC0", VA = "0x98DFC0")]
		public void Update()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x98EA10", Offset = "0x98EA10", VA = "0x98EA10")]
		public void AddSector(Sector s)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x98EA78", Offset = "0x98EA78", VA = "0x98EA78")]
		public void RemoveSector(Sector s)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x98EAE0", Offset = "0x98EAE0", VA = "0x98EAE0")]
		public void AddPortal(Portal p)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x98EE64", Offset = "0x98EE64", VA = "0x98EE64")]
		public void RemovePortal(Portal p)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x98E1D4", Offset = "0x98E1D4", VA = "0x98E1D4")]
		private void PrepareProcessing()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x98E394", Offset = "0x98E394", VA = "0x98E394")]
		private void Process()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x98E760", Offset = "0x98E760", VA = "0x98E760")]
		private void EndProcessing()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x98F250", Offset = "0x98F250", VA = "0x98F250")]
		public Sector GetSector(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x98F37C", Offset = "0x98F37C", VA = "0x98F37C")]
		public List<Sector> GetSectors()
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x98C408", Offset = "0x98C408", VA = "0x98C408")]
		public Item<Renderer> AddRenderer(Renderer r, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x98C6E8", Offset = "0x98C6E8", VA = "0x98C6E8")]
		public void RemoveRenderer(Renderer r, OcclusionGroup g)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x98C83C", Offset = "0x98C83C", VA = "0x98C83C")]
		public Item<Light> AddLight(Light l, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x98CA44", Offset = "0x98CA44", VA = "0x98CA44")]
		public void RemoveLight(Light l, OcclusionGroup g)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x98CBB8", Offset = "0x98CBB8", VA = "0x98CBB8")]
		public Item<OcclusionTracker> AddTracker(OcclusionTracker t, OcclusionGroup g)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x98CEA4", Offset = "0x98CEA4", VA = "0x98CEA4")]
		public void RemoveTracker(OcclusionTracker t, OcclusionGroup g)
		{
		}

		[Token(Token = "0x6001569")]
		private Item<T> AddItem<T>(T obj, Dictionary<T, Item<T>> dict, List<Item<T>> pool, OcclusionGroup g) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		private void RemoveItem<T>(T obj, Dictionary<T, Item<T>> dict, List<Item<T>> cleanupList, OcclusionGroup g) where T : Component
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x98E908", Offset = "0x98E908", VA = "0x98E908")]
		private void CleanupItems()
		{
		}

		[Token(Token = "0x600156C")]
		private void CleanupItems<T>(Dictionary<T, Item<T>> dict, List<Item<T>> cleanupList, List<Item<T>> pool) where T : Component
		{
		}

		[Token(Token = "0x600156D")]
		private Item<T> GetNewItemFromPool<T>(List<Item<T>> pool, T newObj) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		private void FreeItemIntoPool<T>(List<Item<T>> pool, Item<T> item) where T : Component
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x98F384", Offset = "0x98F384", VA = "0x98F384")]
		private void ResetItemsVisibility()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x98F640", Offset = "0x98F640", VA = "0x98F640")]
		public OcclusionManager()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class OcclusionTracker : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		public enum PopulateType
		{
			[Token(Token = "0x4001E80")]
			No,
			[Token(Token = "0x4001E81")]
			OnlyActive,
			[Token(Token = "0x4001E82")]
			IncludeInactive
		}

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreOcclusion;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ignoreChildren;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool useThisAsRoot;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool forceAddToSector;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _forceAlwaysVisible;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool checkForSubTrackers;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool checkInvisibilityBug;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int checkInvisibilityTask;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Renderer> disableRenderersOnHidden;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PopulateType autoPopulateRenderers;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MonoBehaviour> disableComponentsOnHidden;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> disableObjsOnHidden;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isVisible;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _potentiallyVisible;

		[Token(Token = "0x1700012F")]
		public bool ForceAlwaysVisible
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x98F88C", Offset = "0x98F88C", VA = "0x98F88C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x98F894", Offset = "0x98F894", VA = "0x98F894")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public bool IsVisible
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x99011C", Offset = "0x99011C", VA = "0x99011C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public bool PotentiallyVisible
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x990124", Offset = "0x990124", VA = "0x990124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000051")]
		public event Action<bool> onVisible
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x98FBFC", Offset = "0x98FBFC", VA = "0x98FBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE38", Offset = "0x63BE38")]
			add
			{
			}
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x98FCA0", Offset = "0x98FCA0", VA = "0x98FCA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE48", Offset = "0x63BE48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event Action<bool> onInvisible
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x98FD44", Offset = "0x98FD44", VA = "0x98FD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE58", Offset = "0x63BE58")]
			add
			{
			}
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x98FDE8", Offset = "0x98FDE8", VA = "0x98FDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE68", Offset = "0x63BE68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action<bool> onPotentiallyVisibleChange
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x98FE8C", Offset = "0x98FE8C", VA = "0x98FE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE78", Offset = "0x63BE78")]
			add
			{
			}
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x98FF30", Offset = "0x98FF30", VA = "0x98FF30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE88", Offset = "0x63BE88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Action<bool, bool> onVisibilityChange
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x98FFD4", Offset = "0x98FFD4", VA = "0x98FFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BE98", Offset = "0x63BE98")]
			add
			{
			}
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x990078", Offset = "0x990078", VA = "0x990078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BEA8", Offset = "0x63BEA8")]
			remove
			{
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x98DA3C", Offset = "0x98DA3C", VA = "0x98DA3C")]
		public bool SetVisible(bool visible, bool potentiallyVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x98DCAC", Offset = "0x98DCAC", VA = "0x98DCAC")]
		public bool SetPotentiallyVisible(bool potentiallyVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x99012C", Offset = "0x99012C", VA = "0x99012C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x990278", Offset = "0x990278", VA = "0x990278")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x990330", Offset = "0x990330", VA = "0x990330")]
		private void Start()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x990424", Offset = "0x990424", VA = "0x990424")]
		public void PopulateRenderers()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x990A4C", Offset = "0x990A4C", VA = "0x990A4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x9910A0", Offset = "0x9910A0", VA = "0x9910A0")]
		private void CheckInvisibilityBugUpdateTask()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x98F8CC", Offset = "0x98F8CC", VA = "0x98F8CC")]
		private void ApplyVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x99132C", Offset = "0x99132C", VA = "0x99132C")]
		public void ForceRemoveFromOcclusionSector()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x991410", Offset = "0x991410", VA = "0x991410")]
		public OcclusionTracker()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class Portal : MonoBehaviour, IOcclusion
	{
		[Token(Token = "0x2000477")]
		public enum State
		{
			[Token(Token = "0x4001E84")]
			Unchecked,
			[Token(Token = "0x4001E85")]
			Visible
		}

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isOpen;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 size;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private State currentState;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State lastState;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool potentiallyVisible;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Sector> sectors;

		[Token(Token = "0x14000055")]
		public event Action onVisible
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x991430", Offset = "0x991430", VA = "0x991430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BEB8", Offset = "0x63BEB8")]
			add
			{
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x9914D4", Offset = "0x9914D4", VA = "0x9914D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BEC8", Offset = "0x63BEC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action onInvisible
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x991578", Offset = "0x991578", VA = "0x991578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BED8", Offset = "0x63BED8")]
			add
			{
			}
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x99161C", Offset = "0x99161C", VA = "0x99161C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BEE8", Offset = "0x63BEE8")]
			remove
			{
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x9916C0", Offset = "0x9916C0", VA = "0x9916C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x991720", Offset = "0x991720", VA = "0x991720")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x9917CC", Offset = "0x9917CC", VA = "0x9917CC", Slot = "4")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x9917F0", Offset = "0x9917F0", VA = "0x9917F0")]
		public bool IsVisibleIgnoreOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x991800", Offset = "0x991800", VA = "0x991800", Slot = "5")]
		public bool IsPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x98E380", Offset = "0x98E380", VA = "0x98E380")]
		public void SetVisibilityState(State newState = State.Unchecked)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x991808", Offset = "0x991808", VA = "0x991808")]
		public void Process(Camera cam, Sector origin, bool forceLODIfClosed = false)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x991AF8", Offset = "0x991AF8", VA = "0x991AF8")]
		public void SetPotentiallyVisible(Sector origin, bool requireOpen = true)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x991CA0", Offset = "0x991CA0", VA = "0x991CA0")]
		public bool OutOfView(Frustum frustum)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x98F128", Offset = "0x98F128", VA = "0x98F128")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x98EDFC", Offset = "0x98EDFC", VA = "0x98EDFC")]
		public void LinkSector(Sector s)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x991CE0", Offset = "0x991CE0", VA = "0x991CE0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x992018", Offset = "0x992018", VA = "0x992018")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class Sector : MonoBehaviour, IOcclusion
	{
		[Token(Token = "0x2000478")]
		public enum State
		{
			[Token(Token = "0x4001E87")]
			Unchecked,
			[Token(Token = "0x4001E88")]
			Visible
		}

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OcclusionGroup group;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask dynamicLayerMask;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private State currentState;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State lastState;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool potentiallyVisible;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool lastPotentiallyVisible;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoxCollider collider;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Frustum boundsFrustum;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Portal> portals;

		[Token(Token = "0x14000057")]
		public event Action onVisible
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x9920CC", Offset = "0x9920CC", VA = "0x9920CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BEF8", Offset = "0x63BEF8")]
			add
			{
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x992170", Offset = "0x992170", VA = "0x992170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BF08", Offset = "0x63BF08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event Action onInvisible
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x992214", Offset = "0x992214", VA = "0x992214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BF18", Offset = "0x63BF18")]
			add
			{
			}
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x9922B8", Offset = "0x9922B8", VA = "0x9922B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63BF28", Offset = "0x63BF28")]
			remove
			{
			}
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x99235C", Offset = "0x99235C", VA = "0x99235C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x9923BC", Offset = "0x9923BC", VA = "0x9923BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x992468", Offset = "0x992468", VA = "0x992468")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x98ED8C", Offset = "0x98ED8C", VA = "0x98ED8C")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x9925CC", Offset = "0x9925CC", VA = "0x9925CC")]
		private Bounds GetLocalBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x9871FC", Offset = "0x9871FC", VA = "0x9871FC", Slot = "4")]
		public bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x9926D8", Offset = "0x9926D8", VA = "0x9926D8", Slot = "5")]
		public bool IsPotentiallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x98E36C", Offset = "0x98E36C", VA = "0x98E36C")]
		public void SetVisibilityState(State newState = State.Unchecked)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x991C94", Offset = "0x991C94", VA = "0x991C94")]
		public void SetPotentiallyVisible()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x98EECC", Offset = "0x98EECC", VA = "0x98EECC")]
		public void ProcessPortals(Camera cam, Portal originPortal, Frustum? frustum, bool forceLODNeighbors = false)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x98F18C", Offset = "0x98F18C", VA = "0x98F18C")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x9926E0", Offset = "0x9926E0", VA = "0x9926E0")]
		public void DisplayContents(bool visible, bool potentiallyVisible)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x98ED94", Offset = "0x98ED94", VA = "0x98ED94")]
		public void LinkPortal(Portal p)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x992700", Offset = "0x992700", VA = "0x992700")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x99273C", Offset = "0x99273C", VA = "0x99273C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x990494", Offset = "0x990494", VA = "0x990494")]
		public void AddDynamicObject(GameObject go, bool ignoreMask = false)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x990B74", Offset = "0x990B74", VA = "0x990B74")]
		public void RemoveDynamicObject(GameObject go, bool ignoreMask = false)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x992778", Offset = "0x992778", VA = "0x992778")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9928EC", Offset = "0x9928EC", VA = "0x9928EC")]
		private void DrawEditorRoom(Bounds bounds, Transform transform, Color color)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x993014", Offset = "0x993014", VA = "0x993014")]
		public Sector()
		{
		}
	}
}
namespace AITasks
{
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62DFD4", Offset = "0x62DFD4")]
	public class BlinkTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float pulseDuration;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float closestDistance;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scareChance;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioCue scareSound;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IAgent agent;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform agentTransform;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AgentWalk agentWalk;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AgentVision agentVision;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool getCloser;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool spawnedBehind;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 startPos;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 destPos;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool didTeleport;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float originalDistToPlayerSq;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool removedFog;

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x953618", Offset = "0x953618", VA = "0x953618")]
		public static bool CanUseTask(Transform agTransform, AgentVision agVision, bool getCloser = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x953778", Offset = "0x953778", VA = "0x953778")]
		public void Init(IAgent agent, Transform agTransform, AgentWalk agWalk, AgentVision agVision, bool getCloser = true)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x9537FC", Offset = "0x9537FC", VA = "0x9537FC", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x95419C", Offset = "0x95419C", VA = "0x95419C", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9541A4", Offset = "0x9541A4", VA = "0x9541A4", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9543AC", Offset = "0x9543AC", VA = "0x9543AC", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x954880", Offset = "0x954880", VA = "0x954880")]
		public BlinkTask()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62E018", Offset = "0x62E018")]
	public class ChaseTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AgentWalk agentWalk;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AgentVision agentVision;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AgentAwareness agentAwareness;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentLightSense agentLightSense;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float speedFactor;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attackRange;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool getInMeleeRange;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool chasingVisible;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _canAttack;

		[Token(Token = "0x17000132")]
		public bool CanAttack
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x9548A0", Offset = "0x9548A0", VA = "0x9548A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9548A8", Offset = "0x9548A8", VA = "0x9548A8")]
		public void Init(AgentWalk agWalk, AgentVision agVision, AgentAwareness agAwareness, AgentLightSense agLightSense, float attackRange, float speedFactor, bool getInMeleeRange = true)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x954938", Offset = "0x954938", VA = "0x954938", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x954E48", Offset = "0x954E48", VA = "0x954E48", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9552E4", Offset = "0x9552E4", VA = "0x9552E4", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x955344", Offset = "0x955344", VA = "0x955344", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x95534C", Offset = "0x95534C", VA = "0x95534C")]
		public ChaseTask()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62E05C", Offset = "0x62E05C")]
	public class DeathTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float deathCooldownMin;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deathCooldownMax;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableCollidersOnDisappear;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _disappear;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool canRise;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float deadTimer;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform transform;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentWalk agentWalk;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeltFX meltFX;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RagdollController ragdoll;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Health agentHealth;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventHub evHub;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Collider> bodyColliders;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider tpCollider;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider moveCollider;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator animator;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool halfMeltDown;

		[Token(Token = "0x17000133")]
		public bool Disappear
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x955364", Offset = "0x955364", VA = "0x955364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x95536C", Offset = "0x95536C", VA = "0x95536C")]
		public void Init(AgentWalk agWalk, MeltFX meltFX, RagdollController ragdoll, List<Collider> bodyColliders, Collider tpCollider, Collider moveCollider, Health agHealth, EventHub evHub, [Optional] Animator animator, bool halfMeltDown = true)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x955484", Offset = "0x955484", VA = "0x955484", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x955ADC", Offset = "0x955ADC", VA = "0x955ADC", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x955E94", Offset = "0x955E94", VA = "0x955E94", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x956224", Offset = "0x956224", VA = "0x956224", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x956238", Offset = "0x956238", VA = "0x956238")]
		public DeathTask()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public interface IAITask
	{
		[Token(Token = "0x60015C6")]
		bool OnEnter(IFSMTimer fsm);

		[Token(Token = "0x60015C7")]
		bool OnUpdate(IFSMTimer fsm);

		[Token(Token = "0x60015C8")]
		void OnExit(IFSMTimer fsm);

		[Token(Token = "0x60015C9")]
		bool OnTimer(IFSMTimer fsm);
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62E0A0", Offset = "0x62E0A0")]
	public class InvestigateTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float reactMinTime;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float reactMaxTime;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitMinTime;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waitMaxTime;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 position;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isReacting;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool investigating;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AgentWalk agentWalk;

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x956254", Offset = "0x956254", VA = "0x956254")]
		public void Init(AgentWalk agWalk, Vector3 pos)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x9562A0", Offset = "0x9562A0", VA = "0x9562A0", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x95638C", Offset = "0x95638C", VA = "0x95638C", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x9567BC", Offset = "0x9567BC", VA = "0x9567BC", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x9567C0", Offset = "0x9567C0", VA = "0x9567C0", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x956814", Offset = "0x956814", VA = "0x956814")]
		public bool InvestigatePosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x956864", Offset = "0x956864", VA = "0x956864")]
		public InvestigateTask()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x62E0E4", Offset = "0x62E0E4")]
	public class RepositionTask : ScriptableObject, IAITask
	{
		[Token(Token = "0x2000479")]
		public enum ERotate
		{
			[Token(Token = "0x4001E8A")]
			LookAtTarget,
			[Token(Token = "0x4001E8B")]
			Forward,
			[Token(Token = "0x4001E8C")]
			DontRotate
		}

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minRange;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxRange;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactor;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ERotate rotationBehavior;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotationSpeed;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool inDestination;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AgentWalk agentWalk;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AgentVision agentVision;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool oldRotate;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x956880", Offset = "0x956880", VA = "0x956880")]
		public void Init(AgentWalk agentWalk, AgentVision agentVision)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x9568B4", Offset = "0x9568B4", VA = "0x9568B4", Slot = "4")]
		public bool OnEnter(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x956D30", Offset = "0x956D30", VA = "0x956D30", Slot = "5")]
		public bool OnUpdate(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x956E64", Offset = "0x956E64", VA = "0x956E64", Slot = "6")]
		public void OnExit(IFSMTimer fsm)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x956E94", Offset = "0x956E94", VA = "0x956E94", Slot = "7")]
		public bool OnTimer(IFSMTimer fsm)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x956E9C", Offset = "0x956E9C", VA = "0x956E9C")]
		public RepositionTask()
		{
		}
	}
}
namespace TexPacker
{
	[Token(Token = "0x2000264")]
	public enum TextureChannel
	{
		[Token(Token = "0x40014F5")]
		ChannelRed,
		[Token(Token = "0x40014F6")]
		ChannelGreen,
		[Token(Token = "0x40014F7")]
		ChannelBlue,
		[Token(Token = "0x40014F8")]
		ChannelAlpha
	}
	[Token(Token = "0x2000265")]
	public class TextureChannelInput
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextureChannel output;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x812960", Offset = "0x812960", VA = "0x812960")]
		public TextureChannelInput()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x812968", Offset = "0x812968", VA = "0x812968")]
		public TextureChannelInput(TextureChannel output, bool enabled = false)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public enum TextureFormat
	{
		[Token(Token = "0x40014FC")]
		JPG,
		[Token(Token = "0x40014FD")]
		PNG,
		[Token(Token = "0x40014FE")]
		EXR
	}
	[Token(Token = "0x2000267")]
	public class TextureInput
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<TextureChannel, TextureChannelInput> _inputs;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x8129A8", Offset = "0x8129A8", VA = "0x8129A8")]
		public TextureInput()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x812B0C", Offset = "0x812B0C", VA = "0x812B0C")]
		public TextureChannelInput GetChannelInput(TextureChannel channel)
		{
			return null;
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x812B74", Offset = "0x812B74", VA = "0x812B74")]
		public void SetChannelInput(TextureChannel channel, TextureChannelInput channelInput)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class TexturePacker
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _shaderName;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _material;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TextureInput> _texInputs;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int resolution;

		[Token(Token = "0x17000134")]
		public List<TextureInput> texInputs
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x812BE4", Offset = "0x812BE4", VA = "0x812BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x812BEC", Offset = "0x812BEC", VA = "0x812BEC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x812CD8", Offset = "0x812CD8", VA = "0x812CD8")]
		public void Add(TextureInput entry)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x812D40", Offset = "0x812D40", VA = "0x812D40")]
		public void Remove(TextureInput input)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x812DA8", Offset = "0x812DA8", VA = "0x812DA8")]
		private string GetPropertyName(int i, string param)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x812E2C", Offset = "0x812E2C", VA = "0x812E2C")]
		public void ClearProperties()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x812F34", Offset = "0x812F34", VA = "0x812F34")]
		private Vector4 GetInputs(TextureInput texInput)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x81300C", Offset = "0x81300C", VA = "0x81300C")]
		private Matrix4x4 GetOutputs(TextureInput texInput)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x813158", Offset = "0x813158", VA = "0x813158")]
		public Texture2D Create()
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x813594", Offset = "0x813594", VA = "0x813594")]
		public TexturePacker()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public static class TextureUtility
	{
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x8133DC", Offset = "0x8133DC", VA = "0x8133DC")]
		public static Texture2D GenerateTexture(int width, int height, Material mat)
		{
			return null;
		}
	}
}
namespace Puppet3D
{
	[Token(Token = "0x200026A")]
	[ExecuteInEditMode]
	public class DrivenKey : MonoBehaviour
	{
		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrivenObject[] DriverColection;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DriverEnabled;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Blend;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string BlendName;

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x84D77C", Offset = "0x84D77C", VA = "0x84D77C")]
		public void Run()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x84DA8C", Offset = "0x84DA8C", VA = "0x84DA8C")]
		public DrivenKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public class DrivenObject
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] DrivenGOs;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] StartPositions;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] EndPositions;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion[] StartRotations;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion[] EndRotations;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Blend;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string BlendName;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x84DB10", Offset = "0x84DB10", VA = "0x84DB10")]
		public DrivenObject(GameObject[] objs)
		{
		}
	}
	[Token(Token = "0x200026C")]
	[ExecuteInEditMode]
	public class FABRIKControl : MonoBehaviour
	{
		[Token(Token = "0x200047A")]
		public class BoneInfo
		{
			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Pos;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float L;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform Source;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion Offset;

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x84FAA8", Offset = "0x84FAA8", VA = "0x84FAA8")]
			public BoneInfo(Transform TransSet, Transform SourceSet)
			{
			}
		}

		[Token(Token = "0x200047B")]
		public class BoneInfoChain
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Effector;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Root;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 EffectorPos;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IKControl ikControl;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ik;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<BoneInfo> _boneInfos;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float _MinDistance;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<BoneInfoChain> _childBoneChains;

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x84DF74", Offset = "0x84DF74", VA = "0x84DF74")]
			public BoneInfoChain(Transform root)
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x84E5F0", Offset = "0x84E5F0", VA = "0x84E5F0")]
			public void Print()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x84EB84", Offset = "0x84EB84", VA = "0x84EB84")]
			public Vector3 Backward()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x84F0C4", Offset = "0x84F0C4", VA = "0x84F0C4")]
			public void Forward(Vector3 newRootPos, bool isRoot = false)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x84FD98", Offset = "0x84FD98", VA = "0x84FD98")]
			private bool MinDistanceCheck()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x84FE84", Offset = "0x84FE84", VA = "0x84FE84")]
			public bool IsTooFar()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x84FF70", Offset = "0x84FF70", VA = "0x84FF70")]
			private float SumDistances()
			{
				return default(float);
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x84E908", Offset = "0x84E908", VA = "0x84E908")]
			public void SetInitialBones()
			{
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x84F788", Offset = "0x84F788", VA = "0x84F788")]
			public void SetBones()
			{
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x850018", Offset = "0x850018", VA = "0x850018")]
			public void StrechedSolve()
			{
			}
		}

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoneInfoChain BoneChain;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x84DEC4", Offset = "0x84DEC4", VA = "0x84DEC4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x84DF6C", Offset = "0x84DF6C", VA = "0x84DF6C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x84DF70", Offset = "0x84DF70", VA = "0x84DF70")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x84DEC8", Offset = "0x84DEC8", VA = "0x84DEC8")]
		public void Init()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x84EB18", Offset = "0x84EB18", VA = "0x84EB18")]
		public void Update()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x84FAA0", Offset = "0x84FAA0", VA = "0x84FAA0")]
		public FABRIKControl()
		{
		}
	}
	[Token(Token = "0x200026D")]
	[ExecuteInEditMode]
	public class GlobalControl : Control
	{
		[Serializable]
		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ECA8", Offset = "0x62ECA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, int> <>9__36_0;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, float> <>9__36_1;

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xCDD54C", Offset = "0xCDD54C", VA = "0xCDD54C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xCDD554", Offset = "0xCDD554", VA = "0xCDD554")]
			internal int <CombineAllMeshes>b__36_0(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(int);
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xCDD5A4", Offset = "0xCDD5A4", VA = "0xCDD5A4")]
			internal float <CombineAllMeshes>b__36_1(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BonesVisiblity;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ControlsVisiblity;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SplineControl> _SplineControls;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IKControl> _Ikhandles;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParentControl> _ParentControls;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<IKFKBlend> _IKFKBlends;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<DrivenKey> _DrivenKeys;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633DC4", Offset = "0x633DC4")]
		public float Body;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633DDC", Offset = "0x633DDC")]
		public float ArmLeft;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633DF4", Offset = "0x633DF4")]
		public float ArmRight;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633E0C", Offset = "0x633E0C")]
		public float LegLeft;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633E24", Offset = "0x633E24")]
		public float LegRight;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<Control> _Controls;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<Bone> _Bones;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool AutoRefresh;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool ControlsEnabled;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool lateUpdate;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public int _flipCorrection;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float HandleRadius;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SplineControl[] _SplineControlsArray;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IKControl[] _IkhandlesArray;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ParentControl[] _ParentControlsArray;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Mesh _mesh;

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x8505A0", Offset = "0x8505A0", VA = "0x8505A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x8508CC", Offset = "0x8508CC", VA = "0x8508CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x8508E0", Offset = "0x8508E0", VA = "0x8508E0")]
		public void Refresh(bool ikfkblends = true)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x851038", Offset = "0x851038", VA = "0x851038")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x85080C", Offset = "0x85080C", VA = "0x85080C")]
		public void InitializeArrays()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x851108", Offset = "0x851108", VA = "0x851108")]
		public void Init()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x851110", Offset = "0x851110", VA = "0x851110")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x851114", Offset = "0x851114", VA = "0x851114")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x85138C", Offset = "0x85138C", VA = "0x85138C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x851510", Offset = "0x851510", VA = "0x851510")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x851A7C", Offset = "0x851A7C", VA = "0x851A7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x851528", Offset = "0x851528", VA = "0x851528")]
		public void Run()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x8509F8", Offset = "0x8509F8", VA = "0x8509F8")]
		public void TraverseHierarchy(Transform root)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x851BC8", Offset = "0x851BC8", VA = "0x851BC8")]
		private void CombineAllMeshes()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x851A94", Offset = "0x851A94", VA = "0x851A94")]
		private void FaceCamera()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x852F3C", Offset = "0x852F3C", VA = "0x852F3C")]
		public GlobalControl()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class IKControl : MonoBehaviour
	{
		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x633E6C", Offset = "0x633E6C")]
		public float IKFK;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FKVisibility;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool IKVisibility;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 AimDirection;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform poleVector;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 UpDirection;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] scaleStart;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform topJointTransformIK;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform middleJointTransformIK;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform bottomJointTransformIK;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 OffsetScale;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform IK_CTRL;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 root2IK;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 root2IK2MiddleJoint;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public int numberIkBonesIndex;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int numberOfBones;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int iterations;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Transform IKHandle;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Transform endTransform;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform startTransform;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public List<Vector3> bindPose;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public List<Transform> bindBones;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool limitBones;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Quaternion Offset;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation2;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Quaternion middleJointTransform_OffsetRotation;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[HideInInspector]
		public Vector3 bottomJointTransform_OffsetRotation;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool bottomJointTransformMatchesIK_CTRLRotation;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool debug;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float angle;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float topJointTransform_Length;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float middleJointTransform_Length;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float arm_Length;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float IK_CTRLDistance;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float adyacent;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public bool DisableRotateAround;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public Transform topJointTransform;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Transform middleJointTransform;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Transform bottomJointTransform;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public Transform topJointTransformFK;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Transform middleJointTransformFK;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public Transform bottomJointTransformFK;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public FK[] fks;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public List<Transform> angleLimitTransform;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public List<Vector2> angleLimits;

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xCDDF28", Offset = "0xCDDF28", VA = "0xCDDF28")]
		public void CalculateIK()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xCDEAC0", Offset = "0xCDEAC0", VA = "0xCDEAC0")]
		private bool IsNaN(Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xCDEB34", Offset = "0xCDEB34", VA = "0xCDEB34")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xCDECA8", Offset = "0xCDECA8", VA = "0xCDECA8")]
		public void CalculateMultiIK()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xCDEDCC", Offset = "0xCDEDCC", VA = "0xCDEDCC")]
		private void CalculateMultiIK_run()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xCDEE88", Offset = "0xCDEE88", VA = "0xCDEE88")]
		private void RotateTowardsIK_CTRL(Transform startTransform)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xCDF1CC", Offset = "0xCDF1CC", VA = "0xCDF1CC")]
		public static float SignedAngle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xCDF310", Offset = "0xCDF310", VA = "0xCDF310")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xCDF398", Offset = "0xCDF398", VA = "0xCDF398")]
		public IKControl()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[ExecuteInEditMode]
	public class IKFKBlend : MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		public enum IKFKType
		{
			[Token(Token = "0x4001E9E")]
			ArmL,
			[Token(Token = "0x4001E9F")]
			ArmR,
			[Token(Token = "0x4001EA0")]
			LegL,
			[Token(Token = "0x4001EA1")]
			LegR,
			[Token(Token = "0x4001EA2")]
			Body
		}

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6340C4", Offset = "0x6340C4")]
		public float IKFK;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform IK;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FK;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 PositionOffset;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion RotationOffset;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ContrstrainPosition;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IKFKType GroupID;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float L;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ConstrainedControl;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 _constrainedControlPosOffset;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffset;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffsetDif;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Transform Handle;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public GlobalControl GlobalControl;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool OverrideWithRig;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _initialRotation;

		[Token(Token = "0x17000135")]
		private Transform GlobalControlTrans
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xCDF528", Offset = "0xCDF528", VA = "0xCDF528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xCDF544", Offset = "0xCDF544", VA = "0xCDF544")]
		public void Init()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xCDF780", Offset = "0xCDF780", VA = "0xCDF780")]
		public void Run()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xCDFB24", Offset = "0xCDFB24", VA = "0xCDFB24")]
		public void RunConstrianedControls()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xCDFDB8", Offset = "0xCDFDB8", VA = "0xCDFDB8")]
		public IKFKBlend()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class ParentControl : Control
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bone;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 HandleScale;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh OverrideMesh;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 OverrideMeshOffset;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool Point;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool Orient;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool Scale;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool ConstrianedPosition;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ConstrianedOrient;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool MaintainOffset;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 OffsetPos;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 OffsetScale;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion OffsetOrient;

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xCDFF74", Offset = "0xCDFF74", VA = "0xCDFF74")]
		public void ParentControlRun()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xCE0218", Offset = "0xCE0218", VA = "0xCE0218")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xCE051C", Offset = "0xCE051C", VA = "0xCE051C")]
		public ParentControl()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[ExecuteInEditMode]
	public class SkinWeightControl : MonoBehaviour
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Bone0;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Bone1;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Bone2;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Bone3;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int boneIndex0;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int boneIndex1;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int boneIndex2;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int boneIndex3;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Weight0;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Weight1;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Weight2;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Weight3;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh mesh;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertNumber;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] handles;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3[] verts;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh skinnedMesh;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool autoUpdate;

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xCE090C", Offset = "0xCE090C", VA = "0xCE090C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xCE0910", Offset = "0xCE0910", VA = "0xCE0910")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xCE0CB4", Offset = "0xCE0CB4", VA = "0xCE0CB4")]
		public SkinWeightControl()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[ExecuteInEditMode]
	public class SplineControl : MonoBehaviour
	{
		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> _splineCTRLS;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numberBones;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> outCoordinates;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> bones;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 UpDirection;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RotationOffsetX;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RotateEnds;

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xCE0F70", Offset = "0xCE0F70", VA = "0xCE0F70")]
		private string GetUniqueName(string name)
		{
			return null;
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xCE1194", Offset = "0xCE1194", VA = "0xCE1194")]
		public void Run()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xCE1638", Offset = "0xCE1638", VA = "0xCE1638")]
		public static bool CatmullRom(List<Transform> inCoordinates, out List<Vector3> outCoordinates, int samples)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xCE1900", Offset = "0xCE1900", VA = "0xCE1900")]
		public static Vector3 PointOnCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xCE19D8", Offset = "0xCE19D8", VA = "0xCE19D8")]
		public SplineControl()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[ExecuteInEditMode]
	public class Bakedmesh : MonoBehaviour
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer skin;

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x84C9A8", Offset = "0x84C9A8", VA = "0x84C9A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x84CA18", Offset = "0x84CA18", VA = "0x84CA18")]
		private void Update()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x84CE50", Offset = "0x84CE50", VA = "0x84CE50")]
		public Bakedmesh()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class Guides : MonoBehaviour
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Biped;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds Bounds;

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xCDDD40", Offset = "0xCDDD40", VA = "0xCDDD40")]
		public Guides()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[ExecuteInEditMode]
	public class StoreData : MonoBehaviour
	{
		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Data;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 OriginalSpritePosition;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool Editable;

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xCE1B0C", Offset = "0xCE1B0C", VA = "0xCE1B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xCE1C08", Offset = "0xCE1C08", VA = "0xCE1C08")]
		public StoreData()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class Voxel
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Bone0;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Bone1;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Bone2;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Bone3;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Weight0;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Weight1;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Weight2;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Weight3;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] NeighbourIndexes;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds bounds;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool Inside;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 Scale;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool Set;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xCE1D34", Offset = "0xCE1D34", VA = "0xCE1D34")]
		public Voxel()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[ExecuteInEditMode]
	public class Bone : MonoBehaviour
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color Color;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowJoint;

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x84CE58", Offset = "0x84CE58", VA = "0x84CE58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x84CF28", Offset = "0x84CF28", VA = "0x84CF28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x84CF2C", Offset = "0x84CF2C", VA = "0x84CF2C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x84CF38", Offset = "0x84CF38", VA = "0x84CF38")]
		private void DrawThisBone(Color col)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x84D6CC", Offset = "0x84D6CC", VA = "0x84D6CC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x84D724", Offset = "0x84D724", VA = "0x84D724")]
		private void OnHideGizmos()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x84D728", Offset = "0x84D728", VA = "0x84D728")]
		public Bone()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class Control : MonoBehaviour
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool Active;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x84D76C", Offset = "0x84D76C", VA = "0x84D76C")]
		public Control()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[ExecuteInEditMode]
	public class FK : Control
	{
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Transparency;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HandleSize;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x850280", Offset = "0x850280", VA = "0x850280")]
		private void Start()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x850284", Offset = "0x850284", VA = "0x850284")]
		private void Update()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x850340", Offset = "0x850340", VA = "0x850340")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x850344", Offset = "0x850344", VA = "0x850344")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x850588", Offset = "0x850588", VA = "0x850588")]
		public FK()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[ExecuteInEditMode]
	public class Guide : MonoBehaviour
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandlePos;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool SnapToCentre;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Mirror;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Guide MirroredGuide;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Color _Color;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xCDD5E8", Offset = "0xCDD5E8", VA = "0xCDD5E8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xCDD810", Offset = "0xCDD810", VA = "0xCDD810")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xCDDB84", Offset = "0xCDDB84", VA = "0xCDDB84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xCDDB88", Offset = "0xCDDB88", VA = "0xCDDB88")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xCDDD24", Offset = "0xCDDD24", VA = "0xCDDD24")]
		public Guide()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class IK : Control
	{
		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleSize;

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xCDDD48", Offset = "0xCDDD48", VA = "0xCDDD48")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xCDDF18", Offset = "0xCDDF18", VA = "0xCDDF18")]
		public IK()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[ExecuteInEditMode]
	public class IKHidden : MonoBehaviour
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xCDFEB0", Offset = "0xCDFEB0", VA = "0xCDFEB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xCDFF6C", Offset = "0xCDFF6C", VA = "0xCDFF6C")]
		public IKHidden()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[ExecuteInEditMode]
	public class Pole : Control
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleRadius;

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xCE05E0", Offset = "0xCE05E0", VA = "0xCE05E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xCE05E4", Offset = "0xCE05E4", VA = "0xCE05E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xCE05E8", Offset = "0xCE05E8", VA = "0xCE05E8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xCE0658", Offset = "0xCE0658", VA = "0xCE0658")]
		public Pole()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[ExecuteInEditMode]
	public class Spline : Control
	{
		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandleSize;

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xCE0CBC", Offset = "0xCE0CBC", VA = "0xCE0CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xCE0CC0", Offset = "0xCE0CC0", VA = "0xCE0CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xCE0CC4", Offset = "0xCE0CC4", VA = "0xCE0CC4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xCE0EF8", Offset = "0xCE0EF8", VA = "0xCE0EF8")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[ExecuteInEditMode]
	public class VertexWeight : MonoBehaviour
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HandleRadius;

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xCE1CBC", Offset = "0xCE1CBC", VA = "0xCE1CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xCE1CC0", Offset = "0xCE1CC0", VA = "0xCE1CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xCE1CC4", Offset = "0xCE1CC4", VA = "0xCE1CC4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xCE1D20", Offset = "0xCE1D20", VA = "0xCE1D20")]
		public VertexWeight()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class Puppet3DAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string axisName;

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xCE0668", Offset = "0xCE0668", VA = "0xCE0668")]
		private void Start()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xCE06D8", Offset = "0xCE06D8", VA = "0xCE06D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xCE089C", Offset = "0xCE089C", VA = "0xCE089C")]
		public Puppet3DAnimatorController()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class Puppet3DSortingLayer : MonoBehaviour
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector2 offsetAmount;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector2[] uvsDefault;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Bounds bounds;

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xCE0904", Offset = "0xCE0904", VA = "0xCE0904")]
		public Puppet3DSortingLayer()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000282")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x40015BD")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001646")]
		[Address(RVA = "0x829FF8", Offset = "0x829FF8", VA = "0x829FF8")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001647")]
		[Address(RVA = "0x82A068", Offset = "0x82A068", VA = "0x82A068")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0x82A0D8", Offset = "0x82A0D8", VA = "0x82A0D8")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001649")]
		[Address(RVA = "0x82A1BC", Offset = "0x82A1BC", VA = "0x82A1BC")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x600164A")]
		[Address(RVA = "0x82A230", Offset = "0x82A230", VA = "0x82A230")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x600164B")]
		[Address(RVA = "0x82A2A0", Offset = "0x82A2A0", VA = "0x82A2A0")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x600164C")]
		[Address(RVA = "0x82A31C", Offset = "0x82A31C", VA = "0x82A31C")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x82A38C", Offset = "0x82A38C", VA = "0x82A38C")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x82A398", Offset = "0x82A398", VA = "0x82A398")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x82A3D4", Offset = "0x82A3D4", VA = "0x82A3D4")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x82A3D8", Offset = "0x82A3D8", VA = "0x82A3D8")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6001651")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001652")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000283")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62ECB8", Offset = "0x62ECB8")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x62ECCC", Offset = "0x62ECCC")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000480")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x2000481")]
		public struct GSALine
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x2000482")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000483")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000484")]
		public struct GSARect
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x40015BE")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x82A684", Offset = "0x82A684", VA = "0x82A684")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x82A714", Offset = "0x82A714", VA = "0x82A714")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6001655")]
		[Address(RVA = "0x82A788", Offset = "0x82A788", VA = "0x82A788")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0x82A80C", Offset = "0x82A80C", VA = "0x82A80C")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6001657")]
		[Address(RVA = "0x82A890", Offset = "0x82A890", VA = "0x82A890")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x82A910", Offset = "0x82A910", VA = "0x82A910")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x82A990", Offset = "0x82A990", VA = "0x82A990")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x82AA0C", Offset = "0x82AA0C", VA = "0x82AA0C")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x82AA8C", Offset = "0x82AA8C", VA = "0x82AA8C")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x600165C")]
		[Address(RVA = "0x82AB0C", Offset = "0x82AB0C", VA = "0x82AB0C")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0x82AB9C", Offset = "0x82AB9C", VA = "0x82AB9C")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x82AC44", Offset = "0x82AC44", VA = "0x82AC44")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x82AC48", Offset = "0x82AC48", VA = "0x82AC48")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x82AC4C", Offset = "0x82AC4C", VA = "0x82AC4C")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x82AC50", Offset = "0x82AC50", VA = "0x82AC50")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x82AC54", Offset = "0x82AC54", VA = "0x82AC54")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x82AC58", Offset = "0x82AC58", VA = "0x82AC58")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x82ACE0", Offset = "0x82ACE0", VA = "0x82ACE0")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x82ACE4", Offset = "0x82ACE4", VA = "0x82ACE4")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x82ACE8", Offset = "0x82ACE8", VA = "0x82ACE8")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x82ACEC", Offset = "0x82ACEC", VA = "0x82ACEC")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x82ACF4", Offset = "0x82ACF4", VA = "0x82ACF4")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000284")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x40015C0")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x40015C1")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000136")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x82A3DC", Offset = "0x82A3DC", VA = "0x82A3DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x82A4AC", Offset = "0x82A4AC", VA = "0x82A4AC")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x82A4B0", Offset = "0x82A4B0", VA = "0x82A4B0")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x82A4B4", Offset = "0x82A4B4", VA = "0x82A4B4")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x82A4B8", Offset = "0x82A4B8", VA = "0x82A4B8")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x82A460", Offset = "0x82A460", VA = "0x82A460")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000485")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000486")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000487")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000488")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x17000137")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x82C144", Offset = "0x82C144", VA = "0x82C144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x82C1D4", Offset = "0x82C1D4", VA = "0x82C1D4")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x82C1DC", Offset = "0x82C1DC", VA = "0x82C1DC")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x82C1E4", Offset = "0x82C1E4", VA = "0x82C1E4")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x82C32C", Offset = "0x82C32C", VA = "0x82C32C")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x82C5AC", Offset = "0x82C5AC", VA = "0x82C5AC")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x82C630", Offset = "0x82C630", VA = "0x82C630")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x82C688", Offset = "0x82C688", VA = "0x82C688")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x82B374", Offset = "0x82B374", VA = "0x82B374")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x63BF38", Offset = "0x63BF38")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x82BA8C", Offset = "0x82BA8C", VA = "0x82BA8C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x63BF9C", Offset = "0x63BF9C")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x82C1CC", Offset = "0x82C1CC", VA = "0x82C1CC")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000286")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xF185D4", Offset = "0xF185D4", VA = "0xF185D4")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class ControllerHand
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xF18350", Offset = "0xF18350", VA = "0xF18350")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public enum ControllerState
	{
		[Token(Token = "0x40015E6")]
		Error = -1,
		[Token(Token = "0x40015E7")]
		DisConnected,
		[Token(Token = "0x40015E8")]
		Connected
	}
	[Token(Token = "0x2000289")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40015EA")]
		APP = 1,
		[Token(Token = "0x40015EB")]
		TOUCHPAD,
		[Token(Token = "0x40015EC")]
		HOME,
		[Token(Token = "0x40015ED")]
		VOLUMEUP,
		[Token(Token = "0x40015EE")]
		VOLUMEDOWN,
		[Token(Token = "0x40015EF")]
		TRIGGER,
		[Token(Token = "0x40015F0")]
		A,
		[Token(Token = "0x40015F1")]
		B,
		[Token(Token = "0x40015F2")]
		X,
		[Token(Token = "0x40015F3")]
		Y,
		[Token(Token = "0x40015F4")]
		Left,
		[Token(Token = "0x40015F5")]
		Right,
		[Token(Token = "0x40015F6")]
		Thumbrest
	}
	[Token(Token = "0x200028A")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40015F8")]
		No,
		[Token(Token = "0x40015F9")]
		SwipeUp,
		[Token(Token = "0x40015FA")]
		SwipeDown,
		[Token(Token = "0x40015FB")]
		SwipeLeft,
		[Token(Token = "0x40015FC")]
		SwipeRight
	}
	[Token(Token = "0x200028B")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40015FE")]
		No,
		[Token(Token = "0x40015FF")]
		ClickUp,
		[Token(Token = "0x4001600")]
		ClickDown,
		[Token(Token = "0x4001601")]
		ClickLeft,
		[Token(Token = "0x4001602")]
		ClickRight
	}
	[Token(Token = "0x200028C")]
	public struct Controller
	{
		[Token(Token = "0x4001603")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xF13B2C", Offset = "0xF13B2C", VA = "0xF13B2C")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xF13C28", Offset = "0xF13C28", VA = "0xF13C28")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xF13DAC", Offset = "0xF13DAC", VA = "0xF13DAC")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xF13FDC", Offset = "0xF13FDC", VA = "0xF13FDC")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xF140E0", Offset = "0xF140E0", VA = "0xF140E0")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xF141F8", Offset = "0xF141F8", VA = "0xF141F8")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xF1430C", Offset = "0xF1430C", VA = "0xF1430C")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xF143DC", Offset = "0xF143DC", VA = "0xF143DC")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xF144AC", Offset = "0xF144AC", VA = "0xF144AC")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xF1457C", Offset = "0xF1457C", VA = "0xF1457C")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xF1464C", Offset = "0xF1464C", VA = "0xF1464C")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xF14B98", Offset = "0xF14B98", VA = "0xF14B98")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xF150E4", Offset = "0xF150E4", VA = "0xF150E4")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xF15630", Offset = "0xF15630", VA = "0xF15630")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xF15974", Offset = "0xF15974", VA = "0xF15974")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xF15CB8", Offset = "0xF15CB8", VA = "0xF15CB8")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xF15FFC", Offset = "0xF15FFC", VA = "0xF15FFC")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xF16548", Offset = "0xF16548", VA = "0xF16548")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xF16A94", Offset = "0xF16A94", VA = "0xF16A94")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xF16C60", Offset = "0xF16C60", VA = "0xF16C60")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xF16D20", Offset = "0xF16D20", VA = "0xF16D20")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xF16D94", Offset = "0xF16D94", VA = "0xF16D94")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xF16E50", Offset = "0xF16E50", VA = "0xF16E50")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xF16EC4", Offset = "0xF16EC4", VA = "0xF16EC4")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xF16F38", Offset = "0xF16F38", VA = "0xF16F38")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xF16FAC", Offset = "0xF16FAC", VA = "0xF16FAC")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xF17028", Offset = "0xF17028", VA = "0xF17028")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xF170A4", Offset = "0xF170A4", VA = "0xF170A4")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xF17140", Offset = "0xF17140", VA = "0xF17140")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xF171BC", Offset = "0xF171BC", VA = "0xF171BC")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xF17238", Offset = "0xF17238", VA = "0xF17238")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xF172B4", Offset = "0xF172B4", VA = "0xF172B4")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xF17330", Offset = "0xF17330", VA = "0xF17330")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xF173A4", Offset = "0xF173A4", VA = "0xF173A4")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xF17418", Offset = "0xF17418", VA = "0xF17418")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xF174E8", Offset = "0xF174E8", VA = "0xF174E8")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xF1755C", Offset = "0xF1755C", VA = "0xF1755C")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xF175D8", Offset = "0xF175D8", VA = "0xF175D8")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xF1764C", Offset = "0xF1764C", VA = "0xF1764C")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xF176C8", Offset = "0xF176C8", VA = "0xF176C8")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xF17744", Offset = "0xF17744", VA = "0xF17744")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xF177C0", Offset = "0xF177C0", VA = "0xF177C0")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xF17834", Offset = "0xF17834", VA = "0xF17834")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xF178A8", Offset = "0xF178A8", VA = "0xF178A8")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xF17934", Offset = "0xF17934", VA = "0xF17934")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xF179B0", Offset = "0xF179B0", VA = "0xF179B0")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xF17A2C", Offset = "0xF17A2C", VA = "0xF17A2C")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xF17AA0", Offset = "0xF17AA0", VA = "0xF17AA0")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xF17B14", Offset = "0xF17B14", VA = "0xF17B14")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xF17B88", Offset = "0xF17B88", VA = "0xF17B88")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xF17C04", Offset = "0xF17C04", VA = "0xF17C04")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x6C7688", Offset = "0x6C7688", VA = "0x6C7688")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x6C768C", Offset = "0x6C768C", VA = "0x6C768C")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x6C7690", Offset = "0x6C7690", VA = "0x6C7690")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xF17DE4", Offset = "0xF17DE4", VA = "0xF17DE4")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xF17EA0", Offset = "0xF17EA0", VA = "0xF17EA0")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xF17F54", Offset = "0xF17F54", VA = "0xF17F54")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xF17FF8", Offset = "0xF17FF8", VA = "0xF17FF8")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xF18098", Offset = "0xF18098", VA = "0xF18098")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xF18138", Offset = "0xF18138", VA = "0xF18138")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xF181DC", Offset = "0xF181DC", VA = "0xF181DC")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xF18258", Offset = "0xF18258", VA = "0xF18258")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xF182D4", Offset = "0xF182D4", VA = "0xF182D4")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xF17EA4", Offset = "0xF17EA4", VA = "0xF17EA4")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xF17F58", Offset = "0xF17F58", VA = "0xF17F58")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xF17FFC", Offset = "0xF17FFC", VA = "0xF17FFC")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xF1809C", Offset = "0xF1809C", VA = "0xF1809C")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xF1813C", Offset = "0xF1813C", VA = "0xF1813C")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xF17DE8", Offset = "0xF17DE8", VA = "0xF17DE8")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x200028D")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001605")]
		Controller0,
		[Token(Token = "0x4001606")]
		Controller1
	}
	[Token(Token = "0x200028E")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001608")]
		Goblin,
		[Token(Token = "0x4001609")]
		Neo,
		[Token(Token = "0x400160A")]
		G2,
		[Token(Token = "0x400160B")]
		Neo2,
		[Token(Token = "0x400160C")]
		Neo3,
		[Token(Token = "0x400160D")]
		NewController
	}
	[Token(Token = "0x200028F")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x400160F")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001610")]
		PUI_VERSION,
		[Token(Token = "0x4001611")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001612")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001613")]
		CUSTOMER_SN,
		[Token(Token = "0x4001614")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001615")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001616")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001617")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001618")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001619")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x400161A")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x400161B")]
		DEVICE_IP
	}
	[Token(Token = "0x2000290")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x400161D")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x400161E")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000291")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001620")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001621")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000292")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001623")]
		S_ON,
		[Token(Token = "0x4001624")]
		S_OFF
	}
	[Token(Token = "0x2000293")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001626")]
		SINGLE_CLICK,
		[Token(Token = "0x4001627")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001628")]
		LONG_PRESS
	}
	[Token(Token = "0x2000294")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x400162A")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x400162B")]
		VALUE_HOME_BACK,
		[Token(Token = "0x400162C")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x400162D")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x400162E")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x400162F")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001630")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001631")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x2000295")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001633")]
		THREE = 3,
		[Token(Token = "0x4001634")]
		TEN = 10,
		[Token(Token = "0x4001635")]
		THIRTY = 30,
		[Token(Token = "0x4001636")]
		SIXTY = 60,
		[Token(Token = "0x4001637")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001638")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001639")]
		NEVER = -1
	}
	[Token(Token = "0x2000296")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x400163B")]
		FIFTEEN = 15,
		[Token(Token = "0x400163C")]
		THIRTY = 30,
		[Token(Token = "0x400163D")]
		SIXTY = 60,
		[Token(Token = "0x400163E")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x400163F")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001640")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001641")]
		NEVER = -1
	}
	[Token(Token = "0x2000297")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001643")]
		SFS_USB,
		[Token(Token = "0x4001644")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001645")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001646")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001647")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001648")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001649")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x400164A")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x400164B")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x400164C")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x400164D")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x400164E")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x400164F")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001650")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x2000298")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001652")]
		MTP,
		[Token(Token = "0x4001653")]
		CHARGE
	}
	[Token(Token = "0x2000299")]
	public struct ToBService
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xF217F8", Offset = "0xF217F8", VA = "0xF217F8")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xF219D4", Offset = "0xF219D4", VA = "0xF219D4")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xF21AAC", Offset = "0xF21AAC", VA = "0xF21AAC")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF21B8C", Offset = "0xF21B8C", VA = "0xF21B8C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xF21C6C", Offset = "0xF21C6C", VA = "0xF21C6C")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xF21D68", Offset = "0xF21D68", VA = "0xF21D68")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xF21EDC", Offset = "0xF21EDC", VA = "0xF21EDC")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF21FFC", Offset = "0xF21FFC", VA = "0xF21FFC")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF221AC", Offset = "0xF221AC", VA = "0xF221AC")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF2233C", Offset = "0xF2233C", VA = "0xF2233C")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF223C0", Offset = "0xF223C0", VA = "0xF223C0")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF22540", Offset = "0xF22540", VA = "0xF22540")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF22794", Offset = "0xF22794", VA = "0xF22794")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF22908", Offset = "0xF22908", VA = "0xF22908")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF22A28", Offset = "0xF22A28", VA = "0xF22A28")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF22B24", Offset = "0xF22B24", VA = "0xF22B24")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF22CD0", Offset = "0xF22CD0", VA = "0xF22CD0")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF22E1C", Offset = "0xF22E1C", VA = "0xF22E1C")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF22F10", Offset = "0xF22F10", VA = "0xF22F10")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF23004", Offset = "0xF23004", VA = "0xF23004")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF230F8", Offset = "0xF230F8", VA = "0xF230F8")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF231EC", Offset = "0xF231EC", VA = "0xF231EC")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF232E0", Offset = "0xF232E0", VA = "0xF232E0")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xF233D4", Offset = "0xF233D4", VA = "0xF233D4")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xF234C8", Offset = "0xF234C8", VA = "0xF234C8")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xF235BC", Offset = "0xF235BC", VA = "0xF235BC")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xF236B0", Offset = "0xF236B0", VA = "0xF236B0")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xF237A4", Offset = "0xF237A4", VA = "0xF237A4")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xF238D8", Offset = "0xF238D8", VA = "0xF238D8")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x400165C")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x400165D")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x400165E")]
		SEENSOR_COUNT,
		[Token(Token = "0x400165F")]
		ABILITY6DOF,
		[Token(Token = "0x4001660")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001661")]
		TRACKING_MODE,
		[Token(Token = "0x4001662")]
		LOG_LEVEL,
		[Token(Token = "0x4001663")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001664")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001665")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001666")]
		iShowFPS,
		[Token(Token = "0x4001667")]
		SensorMode,
		[Token(Token = "0x4001668")]
		LOGICFLOW,
		[Token(Token = "0x4001669")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x400166A")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x400166B")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x400166C")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x400166D")]
		isEnableBoundary,
		[Token(Token = "0x400166E")]
		Enable_Activity_Rotation,
		[Token(Token = "0x400166F")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001670")]
		GetWaitFrameNum,
		[Token(Token = "0x4001671")]
		GetResetFrameNum,
		[Token(Token = "0x4001672")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001673")]
		RotControllerMode
	}
	[Token(Token = "0x200029B")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001675")]
		IPD,
		[Token(Token = "0x4001676")]
		VFOV,
		[Token(Token = "0x4001677")]
		HFOV,
		[Token(Token = "0x4001678")]
		NECK_MODEL_X,
		[Token(Token = "0x4001679")]
		NECK_MODEL_Y,
		[Token(Token = "0x400167A")]
		NECK_MODEL_Z,
		[Token(Token = "0x400167B")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x200029C")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x400167D")]
		X_1 = 1,
		[Token(Token = "0x400167E")]
		X_2 = 2,
		[Token(Token = "0x400167F")]
		X_4 = 4,
		[Token(Token = "0x4001680")]
		X_8 = 8
	}
	[Token(Token = "0x200029D")]
	public enum PlatForm
	{
		[Token(Token = "0x4001682")]
		Android = 1,
		[Token(Token = "0x4001683")]
		IOS,
		[Token(Token = "0x4001684")]
		Win,
		[Token(Token = "0x4001685")]
		Notsupport
	}
	[Token(Token = "0x200029E")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001687")]
		BD_0 = 0,
		[Token(Token = "0x4001688")]
		BD_16 = 16,
		[Token(Token = "0x4001689")]
		BD_24 = 24
	}
	[Token(Token = "0x200029F")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x400168B")]
		Normal,
		[Token(Token = "0x400168C")]
		High
	}
	[Token(Token = "0x20002A0")]
	public enum Sensorindex
	{
		[Token(Token = "0x400168E")]
		Default,
		[Token(Token = "0x400168F")]
		FirstSensor,
		[Token(Token = "0x4001690")]
		SecondSensor
	}
	[Token(Token = "0x20002A1")]
	public enum Eye
	{
		[Token(Token = "0x4001692")]
		LeftEye,
		[Token(Token = "0x4001693")]
		RightEye,
		[Token(Token = "0x4001694")]
		BothEye
	}
	[Token(Token = "0x20002A2")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001696")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001697")]
		TYPE_COLOR,
		[Token(Token = "0x4001698")]
		TYPE_TEXT,
		[Token(Token = "0x4001699")]
		TYPE_FONT,
		[Token(Token = "0x400169A")]
		TYPE_VALUE,
		[Token(Token = "0x400169B")]
		TYPE_DRAWABLE,
		[Token(Token = "0x400169C")]
		TYPE_OBJECT,
		[Token(Token = "0x400169D")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20002A3")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x400169F")]
		EyeLevel,
		[Token(Token = "0x40016A0")]
		FloorLevel,
		[Token(Token = "0x40016A1")]
		StageLevel
	}
	[Token(Token = "0x20002A4")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x40016A3")]
		Low,
		[Token(Token = "0x40016A4")]
		Med,
		[Token(Token = "0x40016A5")]
		High,
		[Token(Token = "0x40016A6")]
		Top_High
	}
	[Token(Token = "0x20002A5")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x40016A8")]
		MultiPass,
		[Token(Token = "0x40016A9")]
		SinglePass
	}
	[Token(Token = "0x20002A6")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x40016AB")]
		kGazePointValid = 1,
		[Token(Token = "0x40016AC")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40016AD")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40016AE")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40016AF")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20002A7")]
	public enum TrackingMode
	{
		[Token(Token = "0x40016B1")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x40016B2")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x40016B3")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20002A8")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20002A9")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20002AA")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20002AB")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20002AC")]
	public struct EyeSetting
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20002AD")]
	public struct Sensor
	{
		[Token(Token = "0x40016D7")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF1AEA8", Offset = "0xF1AEA8", VA = "0xF1AEA8")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF1AF28", Offset = "0xF1AF28", VA = "0xF1AF28")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF1AFBC", Offset = "0xF1AFBC", VA = "0xF1AFBC")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF1B03C", Offset = "0xF1B03C", VA = "0xF1B03C")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF1B0BC", Offset = "0xF1B0BC", VA = "0xF1B0BC")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF1B13C", Offset = "0xF1B13C", VA = "0xF1B13C")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF1B1BC", Offset = "0xF1B1BC", VA = "0xF1B1BC")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF1B23C", Offset = "0xF1B23C", VA = "0xF1B23C")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF1B314", Offset = "0xF1B314", VA = "0xF1B314")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF1B3F8", Offset = "0xF1B3F8", VA = "0xF1B3F8")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF1B46C", Offset = "0xF1B46C", VA = "0xF1B46C")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF1B4E0", Offset = "0xF1B4E0", VA = "0xF1B4E0")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF1B588", Offset = "0xF1B588", VA = "0xF1B588")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF1B630", Offset = "0xF1B630", VA = "0xF1B630")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF1B6A4", Offset = "0xF1B6A4", VA = "0xF1B6A4")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF1B720", Offset = "0xF1B720", VA = "0xF1B720")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF1B810", Offset = "0xF1B810", VA = "0xF1B810")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF1B898", Offset = "0xF1B898", VA = "0xF1B898")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF1B89C", Offset = "0xF1B89C", VA = "0xF1B89C")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF1B8A0", Offset = "0xF1B8A0", VA = "0xF1B8A0")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF1BA94", Offset = "0xF1BA94", VA = "0xF1BA94")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF1BCF0", Offset = "0xF1BCF0", VA = "0xF1BCF0")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF1BCF4", Offset = "0xF1BCF4", VA = "0xF1BCF4")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF1BEEC", Offset = "0xF1BEEC", VA = "0xF1BEEC")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF1BEF0", Offset = "0xF1BEF0", VA = "0xF1BEF0")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF1BEF4", Offset = "0xF1BEF4", VA = "0xF1BEF4")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF1BF70", Offset = "0xF1BF70", VA = "0xF1BF70")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF1BF74", Offset = "0xF1BF74", VA = "0xF1BF74")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF1BF78", Offset = "0xF1BF78", VA = "0xF1BF78")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF1BF84", Offset = "0xF1BF84", VA = "0xF1BF84")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF1BF88", Offset = "0xF1BF88", VA = "0xF1BF88")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF1BF8C", Offset = "0xF1BF8C", VA = "0xF1BF8C")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF1BF90", Offset = "0xF1BF90", VA = "0xF1BF90")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF1B8A4", Offset = "0xF1B8A4", VA = "0xF1B8A4")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF1C1F0", Offset = "0xF1C1F0", VA = "0xF1C1F0")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF1BAE8", Offset = "0xF1BAE8", VA = "0xF1BAE8")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF1BCF8", Offset = "0xF1BCF8", VA = "0xF1BCF8")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF1C41C", Offset = "0xF1C41C", VA = "0xF1C41C")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF1C420", Offset = "0xF1C420", VA = "0xF1C420")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF1C8B4", Offset = "0xF1C8B4", VA = "0xF1C8B4")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002AE")]
	public struct Render
	{
		[Token(Token = "0x40016D8")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF19660", Offset = "0xF19660", VA = "0xF19660")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF19730", Offset = "0xF19730", VA = "0xF19730")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF197BC", Offset = "0xF197BC", VA = "0xF197BC")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF1983C", Offset = "0xF1983C", VA = "0xF1983C")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF198B0", Offset = "0xF198B0", VA = "0xF198B0")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF19940", Offset = "0xF19940", VA = "0xF19940")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF199CC", Offset = "0xF199CC", VA = "0xF199CC")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF19A58", Offset = "0xF19A58", VA = "0xF19A58")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF19B20", Offset = "0xF19B20", VA = "0xF19B20")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF19C00", Offset = "0xF19C00", VA = "0xF19C00")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001710")]
		[Address(RVA = "0xF19D3C", Offset = "0xF19D3C", VA = "0xF19D3C")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF19DC4", Offset = "0xF19DC4", VA = "0xF19DC4")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF19E9C", Offset = "0xF19E9C", VA = "0xF19E9C")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF19F44", Offset = "0xF19F44", VA = "0xF19F44")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF19FE8", Offset = "0xF19FE8", VA = "0xF19FE8")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF1A068", Offset = "0xF1A068", VA = "0xF1A068")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001716")]
		[Address(RVA = "0xF1A0DC", Offset = "0xF1A0DC", VA = "0xF1A0DC")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001717")]
		[Address(RVA = "0xF1A188", Offset = "0xF1A188", VA = "0xF1A188")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF1A208", Offset = "0xF1A208", VA = "0xF1A208")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF1A288", Offset = "0xF1A288", VA = "0xF1A288")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF1A318", Offset = "0xF1A318", VA = "0xF1A318")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF1A3A8", Offset = "0xF1A3A8", VA = "0xF1A3A8")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF1A428", Offset = "0xF1A428", VA = "0xF1A428")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF1A4D8", Offset = "0xF1A4D8", VA = "0xF1A4D8")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF1A4DC", Offset = "0xF1A4DC", VA = "0xF1A4DC")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF1A4E0", Offset = "0xF1A4E0", VA = "0xF1A4E0")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF1A594", Offset = "0xF1A594", VA = "0xF1A594")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63C000", Offset = "0x63C000")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF1A598", Offset = "0xF1A598", VA = "0xF1A598")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF1A59C", Offset = "0xF1A59C", VA = "0xF1A59C")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF1A6A0", Offset = "0xF1A6A0", VA = "0xF1A6A0")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF1A6A4", Offset = "0xF1A6A4", VA = "0xF1A6A4")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF1A7E0", Offset = "0xF1A7E0", VA = "0xF1A7E0")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF1A7E4", Offset = "0xF1A7E4", VA = "0xF1A7E4")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xF1A7E8", Offset = "0xF1A7E8", VA = "0xF1A7E8")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xF1A7EC", Offset = "0xF1A7EC", VA = "0xF1A7EC")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF1A878", Offset = "0xF1A878", VA = "0xF1A878")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF1A87C", Offset = "0xF1A87C", VA = "0xF1A87C")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF1A9BC", Offset = "0xF1A9BC", VA = "0xF1A9BC")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF1A9C0", Offset = "0xF1A9C0", VA = "0xF1A9C0")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF1AE8C", Offset = "0xF1AE8C", VA = "0xF1AE8C")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF1AE90", Offset = "0xF1AE90", VA = "0xF1AE90")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF1AE94", Offset = "0xF1AE94", VA = "0xF1AE94")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF1AE98", Offset = "0xF1AE98", VA = "0xF1AE98")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF1AE9C", Offset = "0xF1AE9C", VA = "0xF1AE9C")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF1AEA4", Offset = "0xF1AEA4", VA = "0xF1AEA4")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public struct System
	{
		[Token(Token = "0x40016D9")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40016DA")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF1C8B8", Offset = "0xF1C8B8", VA = "0xF1C8B8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF1C948", Offset = "0xF1C948", VA = "0xF1C948")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF1C9BC", Offset = "0xF1C9BC", VA = "0xF1C9BC")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF1CA30", Offset = "0xF1CA30", VA = "0xF1CA30")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001737")]
		[Address(RVA = "0xF1CAA4", Offset = "0xF1CAA4", VA = "0xF1CAA4")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF1CB18", Offset = "0xF1CB18", VA = "0xF1CB18")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF1CB8C", Offset = "0xF1CB8C", VA = "0xF1CB8C")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF1CBFC", Offset = "0xF1CBFC", VA = "0xF1CBFC")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF1CC7C", Offset = "0xF1CC7C", VA = "0xF1CC7C")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF1CE6C", Offset = "0xF1CE6C", VA = "0xF1CE6C")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF1CEF4", Offset = "0xF1CEF4", VA = "0xF1CEF4")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF1CF68", Offset = "0xF1CF68", VA = "0xF1CF68")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF1CFDC", Offset = "0xF1CFDC", VA = "0xF1CFDC")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF1D05C", Offset = "0xF1D05C", VA = "0xF1D05C")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF1D0E4", Offset = "0xF1D0E4", VA = "0xF1D0E4")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF1D164", Offset = "0xF1D164", VA = "0xF1D164")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF1D1D4", Offset = "0xF1D1D4", VA = "0xF1D1D4")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF1D254", Offset = "0xF1D254", VA = "0xF1D254")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF1D2EC", Offset = "0xF1D2EC", VA = "0xF1D2EC")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF1D37C", Offset = "0xF1D37C", VA = "0xF1D37C")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF1D40C", Offset = "0xF1D40C", VA = "0xF1D40C")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF1D47C", Offset = "0xF1D47C", VA = "0xF1D47C")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF1D504", Offset = "0xF1D504", VA = "0xF1D504")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF1D580", Offset = "0xF1D580", VA = "0xF1D580")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF195EC", Offset = "0xF195EC", VA = "0xF195EC")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x600174C")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xF1BF98", Offset = "0xF1BF98", VA = "0xF1BF98")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF1D608", Offset = "0xF1D608", VA = "0xF1D608")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF1D860", Offset = "0xF1D860", VA = "0xF1D860")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF1D8F4", Offset = "0xF1D8F4", VA = "0xF1D8F4")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xF1D93C", Offset = "0xF1D93C", VA = "0xF1D93C")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF1D944", Offset = "0xF1D944", VA = "0xF1D944")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF187E4", Offset = "0xF187E4", VA = "0xF187E4")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF18C20", Offset = "0xF18C20", VA = "0xF18C20")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF1D94C", Offset = "0xF1D94C", VA = "0xF1D94C")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF1DA34", Offset = "0xF1DA34", VA = "0xF1DA34")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF1DB40", Offset = "0xF1DB40", VA = "0xF1DB40")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF1DC4C", Offset = "0xF1DC4C", VA = "0xF1DC4C")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xF1DD58", Offset = "0xF1DD58", VA = "0xF1DD58")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xF1DFF8", Offset = "0xF1DFF8", VA = "0xF1DFF8")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xF1E244", Offset = "0xF1E244", VA = "0xF1E244")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xF1E350", Offset = "0xF1E350", VA = "0xF1E350")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF1E45C", Offset = "0xF1E45C", VA = "0xF1E45C")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF1E568", Offset = "0xF1E568", VA = "0xF1E568")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF1E680", Offset = "0xF1E680", VA = "0xF1E680")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF1E78C", Offset = "0xF1E78C", VA = "0xF1E78C")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF1E8A8", Offset = "0xF1E8A8", VA = "0xF1E8A8")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF1ECC8", Offset = "0xF1ECC8", VA = "0xF1ECC8")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF1ED88", Offset = "0xF1ED88", VA = "0xF1ED88")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xF1ED90", Offset = "0xF1ED90", VA = "0xF1ED90")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xF1ED94", Offset = "0xF1ED94", VA = "0xF1ED94")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xF1ED98", Offset = "0xF1ED98", VA = "0xF1ED98")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF1ED9C", Offset = "0xF1ED9C", VA = "0xF1ED9C")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xF1EE18", Offset = "0xF1EE18", VA = "0xF1EE18")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF1EF60", Offset = "0xF1EF60", VA = "0xF1EF60")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF1EF64", Offset = "0xF1EF64", VA = "0xF1EF64")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF1EFF8", Offset = "0xF1EFF8", VA = "0xF1EFF8")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF1F08C", Offset = "0xF1F08C", VA = "0xF1F08C")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF1F090", Offset = "0xF1F090", VA = "0xF1F090")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF1F094", Offset = "0xF1F094", VA = "0xF1F094")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF1F09C", Offset = "0xF1F09C", VA = "0xF1F09C")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF1F0A0", Offset = "0xF1F0A0", VA = "0xF1F0A0")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF1F0A4", Offset = "0xF1F0A4", VA = "0xF1F0A4")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF1F30C", Offset = "0xF1F30C", VA = "0xF1F30C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF1F538", Offset = "0xF1F538", VA = "0xF1F538")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF1F808", Offset = "0xF1F808", VA = "0xF1F808")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF1FB78", Offset = "0xF1FB78", VA = "0xF1FB78")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF1FC88", Offset = "0xF1FC88", VA = "0xF1FC88")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF1FDDC", Offset = "0xF1FDDC", VA = "0xF1FDDC")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF200FC", Offset = "0xF200FC", VA = "0xF200FC")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF20104", Offset = "0xF20104", VA = "0xF20104")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF20108", Offset = "0xF20108", VA = "0xF20108")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF2010C", Offset = "0xF2010C", VA = "0xF2010C")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF20110", Offset = "0xF20110", VA = "0xF20110")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF20114", Offset = "0xF20114", VA = "0xF20114")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF20118", Offset = "0xF20118", VA = "0xF20118")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF20308", Offset = "0xF20308", VA = "0xF20308")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF204F8", Offset = "0xF204F8", VA = "0xF204F8")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF206F0", Offset = "0xF206F0", VA = "0xF206F0")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF208E8", Offset = "0xF208E8", VA = "0xF208E8")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF20AD8", Offset = "0xF20AD8", VA = "0xF20AD8")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF20CD0", Offset = "0xF20CD0", VA = "0xF20CD0")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF20F40", Offset = "0xF20F40", VA = "0xF20F40")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF211A8", Offset = "0xF211A8", VA = "0xF211A8")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF21398", Offset = "0xF21398", VA = "0xF21398")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xF21608", Offset = "0xF21608", VA = "0xF21608")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B0")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000489")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001ECB")]
			OuterBoundary,
			[Token(Token = "0x4001ECC")]
			PlayArea
		}

		[Token(Token = "0x200048A")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x200048B")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001ED2")]
			HandLeft,
			[Token(Token = "0x4001ED3")]
			HandRight,
			[Token(Token = "0x4001ED4")]
			Head
		}

		[Token(Token = "0x200048C")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4001ED6")]
			PVR_NOREASON,
			[Token(Token = "0x4001ED7")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x4001ED8")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4001ED9")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4001EDA")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4001EDB")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x40016DB")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xB2D29C", Offset = "0xB2D29C", VA = "0xB2D29C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x600178B")]
		[Address(RVA = "0xB2D30C", Offset = "0xB2D30C", VA = "0xB2D30C")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xB2D380", Offset = "0xB2D380", VA = "0xB2D380")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x600178D")]
		[Address(RVA = "0xB2D400", Offset = "0xB2D400", VA = "0xB2D400")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x600178E")]
		[Address(RVA = "0xB2D474", Offset = "0xB2D474", VA = "0xB2D474")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x600178F")]
		[Address(RVA = "0xB2D4F0", Offset = "0xB2D4F0", VA = "0xB2D4F0")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001790")]
		[Address(RVA = "0xB2D56C", Offset = "0xB2D56C", VA = "0xB2D56C")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001791")]
		[Address(RVA = "0xB2D5E8", Offset = "0xB2D5E8", VA = "0xB2D5E8")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001792")]
		[Address(RVA = "0xB2D6EC", Offset = "0xB2D6EC", VA = "0xB2D6EC")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xB2D814", Offset = "0xB2D814", VA = "0xB2D814")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0xB2D8A0", Offset = "0xB2D8A0", VA = "0xB2D8A0")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001795")]
		[Address(RVA = "0xB2D948", Offset = "0xB2D948", VA = "0xB2D948")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xB2D9C4", Offset = "0xB2D9C4", VA = "0xB2D9C4")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xB2DA44", Offset = "0xB2DA44", VA = "0xB2DA44")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0xB2DAC0", Offset = "0xB2DAC0", VA = "0xB2DAC0")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001799")]
		[Address(RVA = "0xB2DB48", Offset = "0xB2DB48", VA = "0xB2DB48")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0xB2DBE0", Offset = "0xB2DBE0", VA = "0xB2DBE0")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600179B")]
		[Address(RVA = "0xB2DC60", Offset = "0xB2DC60", VA = "0xB2DC60")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x600179C")]
		[Address(RVA = "0xB2DCF0", Offset = "0xB2DCF0", VA = "0xB2DCF0")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xB2DD70", Offset = "0xB2DD70", VA = "0xB2DD70")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xB2DDE4", Offset = "0xB2DDE4", VA = "0xB2DDE4")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xB2DDE8", Offset = "0xB2DDE8", VA = "0xB2DDE8")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xB2DDEC", Offset = "0xB2DDEC", VA = "0xB2DDEC")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xB2DDF4", Offset = "0xB2DDF4", VA = "0xB2DDF4")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xB2DDF8", Offset = "0xB2DDF8", VA = "0xB2DDF8")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xB2DDFC", Offset = "0xB2DDFC", VA = "0xB2DDFC")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xB2DE00", Offset = "0xB2DE00", VA = "0xB2DE00")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xB2DE04", Offset = "0xB2DE04", VA = "0xB2DE04")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xB2DF48", Offset = "0xB2DF48", VA = "0xB2DF48")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xB2E098", Offset = "0xB2E098", VA = "0xB2E098")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xB2E274", Offset = "0xB2E274", VA = "0xB2E274")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xB2E2D0", Offset = "0xB2E2D0", VA = "0xB2E2D0")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xB2E2D4", Offset = "0xB2E2D4", VA = "0xB2E2D4")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xB2E2DC", Offset = "0xB2E2DC", VA = "0xB2E2DC")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xB2E2E0", Offset = "0xB2E2E0", VA = "0xB2E2E0")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xB2E2E8", Offset = "0xB2E2E8", VA = "0xB2E2E8")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xB2E2EC", Offset = "0xB2E2EC", VA = "0xB2E2EC")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xB2E430", Offset = "0xB2E430", VA = "0xB2E430")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xB2E574", Offset = "0xB2E574", VA = "0xB2E574")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xB2E754", Offset = "0xB2E754", VA = "0xB2E754")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xB2E88C", Offset = "0xB2E88C", VA = "0xB2E88C")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xB2E9B0", Offset = "0xB2E9B0", VA = "0xB2E9B0")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xB2EAD4", Offset = "0xB2EAD4", VA = "0xB2EAD4")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B1")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xF185FC", Offset = "0xF185FC", VA = "0xF185FC")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xF18918", Offset = "0xF18918", VA = "0xF18918")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xF18CA8", Offset = "0xF18CA8", VA = "0xF18CA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63C038", Offset = "0x63C038")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xF18FB0", Offset = "0xF18FB0", VA = "0xF18FB0")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF192CC", Offset = "0xF192CC", VA = "0xF192CC")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF195E8", Offset = "0xF195E8", VA = "0xF195E8")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B2")]
	public enum DeviceCommand
	{
		[Token(Token = "0x40016DD")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x40016DE")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20002B3")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x40016E0")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x40016E1")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x40016E2")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x40016E3")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x40016E4")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20002B4")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x40016E5")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xF2395C", Offset = "0xF2395C", VA = "0xF2395C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xF239EC", Offset = "0xF239EC", VA = "0xF239EC")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF23A68", Offset = "0xF23A68", VA = "0xF23A68")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF23ADC", Offset = "0xF23ADC", VA = "0xF23ADC")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF23B64", Offset = "0xF23B64", VA = "0xF23B64")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF23B68", Offset = "0xF23B68", VA = "0xF23B68")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF23B6C", Offset = "0xF23B6C", VA = "0xF23B6C")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xF23B70", Offset = "0xF23B70", VA = "0xF23B70")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xF23E10", Offset = "0xF23E10", VA = "0xF23E10")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xF24038", Offset = "0xF24038", VA = "0xF24038")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF24238", Offset = "0xF24238", VA = "0xF24238")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xF24480", Offset = "0xF24480", VA = "0xF24480")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF245EC", Offset = "0xF245EC", VA = "0xF245EC")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF24728", Offset = "0xF24728", VA = "0xF24728")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF24938", Offset = "0xF24938", VA = "0xF24938")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF24C28", Offset = "0xF24C28", VA = "0xF24C28")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF24E74", Offset = "0xF24E74", VA = "0xF24E74")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF23BA8", Offset = "0xF23BA8", VA = "0xF23BA8")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xF23E30", Offset = "0xF23E30", VA = "0xF23E30")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xF2403C", Offset = "0xF2403C", VA = "0xF2403C")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF2423C", Offset = "0xF2423C", VA = "0xF2423C")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF2506C", Offset = "0xF2506C", VA = "0xF2506C")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF252B8", Offset = "0xF252B8", VA = "0xF252B8")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xF254B0", Offset = "0xF254B0", VA = "0xF254B0")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF25698", Offset = "0xF25698", VA = "0xF25698")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF25880", Offset = "0xF25880", VA = "0xF25880")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xF25A58", Offset = "0xF25A58", VA = "0xF25A58")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xF25C30", Offset = "0xF25C30", VA = "0xF25C30")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xF25E0C", Offset = "0xF25E0C", VA = "0xF25E0C")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF25E14", Offset = "0xF25E14", VA = "0xF25E14")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF245F0", Offset = "0xF245F0", VA = "0xF245F0")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF24484", Offset = "0xF24484", VA = "0xF24484")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20002B5")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xB26C0C", Offset = "0xB26C0C", VA = "0xB26C0C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xB26C74", Offset = "0xB26C74", VA = "0xB26C74")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xB26C78", Offset = "0xB26C78", VA = "0xB26C78")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xB26E1C", Offset = "0xB26E1C", VA = "0xB26E1C")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xB26F90", Offset = "0xB26F90", VA = "0xB26F90")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public static class Achievements
	{
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xB26FF8", Offset = "0xB26FF8", VA = "0xB26FF8")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xB27608", Offset = "0xB27608", VA = "0xB27608")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xB278C8", Offset = "0xB278C8", VA = "0xB278C8")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xB27B68", Offset = "0xB27B68", VA = "0xB27B68")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xB27E00", Offset = "0xB27E00", VA = "0xB27E00")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xB28010", Offset = "0xB28010", VA = "0xB28010")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xB282B0", Offset = "0xB282B0", VA = "0xB282B0")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xB28508", Offset = "0xB28508", VA = "0xB28508")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xB28760", Offset = "0xB28760", VA = "0xB28760")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xB28B20", Offset = "0xB28B20", VA = "0xB28B20")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public enum AchievementType
	{
		[Token(Token = "0x40016ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6341BC", Offset = "0x6341BC")]
		Unknown,
		[Token(Token = "0x40016EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6341F4", Offset = "0x6341F4")]
		Simple,
		[Token(Token = "0x40016EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x63422C", Offset = "0x63422C")]
		Bitfield,
		[Token(Token = "0x40016F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x634264", Offset = "0x634264")]
		Count
	}
	[Token(Token = "0x20002B8")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xB27100", Offset = "0xB27100", VA = "0xB27100")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xB26CD4", Offset = "0xB26CD4", VA = "0xB26CD4")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xB26E78", Offset = "0xB26E78", VA = "0xB26E78")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xB295C4", Offset = "0xB295C4", VA = "0xB295C4")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xB296E4", Offset = "0xB296E4", VA = "0xB296E4")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xB297E4", Offset = "0xB297E4", VA = "0xB297E4")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xB298E4", Offset = "0xB298E4", VA = "0xB298E4")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xB27728", Offset = "0xB27728", VA = "0xB27728")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xB279E8", Offset = "0xB279E8", VA = "0xB279E8")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xB27C70", Offset = "0xB27C70", VA = "0xB27C70")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xB27F08", Offset = "0xB27F08", VA = "0xB27F08")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xB28128", Offset = "0xB28128", VA = "0xB28128")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xB283C8", Offset = "0xB283C8", VA = "0xB283C8")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xB28620", Offset = "0xB28620", VA = "0xB28620")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xB288D8", Offset = "0xB288D8", VA = "0xB288D8")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xB299E4", Offset = "0xB299E4", VA = "0xB299E4")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xB29B88", Offset = "0xB29B88", VA = "0xB29B88")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xB29C80", Offset = "0xB29C80", VA = "0xB29C80")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xB294CC", Offset = "0xB294CC", VA = "0xB294CC")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xB29D78", Offset = "0xB29D78", VA = "0xB29D78")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xB29E78", Offset = "0xB29E78", VA = "0xB29E78")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xB29F78", Offset = "0xB29F78", VA = "0xB29F78")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xB2A078", Offset = "0xB2A078", VA = "0xB2A078")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xB2A1D8", Offset = "0xB2A1D8", VA = "0xB2A1D8")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB2A2D8", Offset = "0xB2A2D8", VA = "0xB2A2D8")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB2A3D8", Offset = "0xB2A3D8", VA = "0xB2A3D8")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB2A4D8", Offset = "0xB2A4D8", VA = "0xB2A4D8")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB2A5D8", Offset = "0xB2A5D8", VA = "0xB2A5D8")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB2A6D8", Offset = "0xB2A6D8", VA = "0xB2A6D8")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB2A814", Offset = "0xB2A814", VA = "0xB2A814")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xB2A884", Offset = "0xB2A884", VA = "0xB2A884")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xB2A984", Offset = "0xB2A984", VA = "0xB2A984")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xB2AAE4", Offset = "0xB2AAE4", VA = "0xB2AAE4")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xB2ABE4", Offset = "0xB2ABE4", VA = "0xB2ABE4")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xB2AD98", Offset = "0xB2AD98", VA = "0xB2AD98")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xB2AE98", Offset = "0xB2AE98", VA = "0xB2AE98")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xB2AF98", Offset = "0xB2AF98", VA = "0xB2AF98")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xB2B098", Offset = "0xB2B098", VA = "0xB2B098")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xB2B198", Offset = "0xB2B198", VA = "0xB2B198")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xB2B298", Offset = "0xB2B298", VA = "0xB2B298")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xB2B398", Offset = "0xB2B398", VA = "0xB2B398")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xB2B498", Offset = "0xB2B498", VA = "0xB2B498")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xB2B598", Offset = "0xB2B598", VA = "0xB2B598")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xB2B698", Offset = "0xB2B698", VA = "0xB2B698")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xB2B9DC", Offset = "0xB2B9DC", VA = "0xB2B9DC")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001819")]
		[Address(RVA = "0xB28DE8", Offset = "0xB28DE8", VA = "0xB28DE8")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xB2BB18", Offset = "0xB2BB18", VA = "0xB2BB18")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x600181B")]
		[Address(RVA = "0xB29088", Offset = "0xB29088", VA = "0xB29088")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xB29328", Offset = "0xB29328", VA = "0xB29328")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62E218", Offset = "0x62E218")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000138")]
		public int Count
		{
			[Token(Token = "0x600181D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000139")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600181E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013A")]
		public T Item
		{
			[Token(Token = "0x6001820")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001821")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public bool HasNextPage
		{
			[Token(Token = "0x600182C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x600182D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public string NextUrl
		{
			[Token(Token = "0x600182E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public string PreviousUrl
		{
			[Token(Token = "0x600182F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181F")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001822")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001823")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001824")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001825")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001826")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001828")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600182A")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x600182B")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x200048D")]
		private class RequestCallback
		{
			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xB2C1B8", Offset = "0xB2C1B8", VA = "0xB2C1B8")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xB2C1C0", Offset = "0xB2C1C0", VA = "0xB2C1C0")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xB2C1F4", Offset = "0xB2C1F4", VA = "0xB2C1F4", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x200048E")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001EEF")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001EF0")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xB2BBE8", Offset = "0xB2BBE8", VA = "0xB2BBE8")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xB2BD58", Offset = "0xB2BD58", VA = "0xB2BD58")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xB2BFD4", Offset = "0xB2BFD4", VA = "0xB2BFD4")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xB2C06C", Offset = "0xB2C06C", VA = "0xB2C06C")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xB2BE34", Offset = "0xB2BE34", VA = "0xB2BE34")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB2C598", Offset = "0xB2C598", VA = "0xB2C598")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB2C694", Offset = "0xB2C694", VA = "0xB2C694")]
		private void Update()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB2C720", Offset = "0xB2C720", VA = "0xB2C720")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB2C77C", Offset = "0xB2C77C", VA = "0xB2C77C")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x200048F")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700013F")]
		public T Data
		{
			[Token(Token = "0x600183C")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600183B")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600183D")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20002C2")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000490")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000491")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001EDF")]
			Unknown = 0u,
			[Token(Token = "0x4001EE0")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001EE1")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001EE2")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001EE3")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001EE4")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001EE5")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001EE6")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001EE7")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001EE8")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001EE9")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4001EEA")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000492")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63429C", Offset = "0x63429C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000140")]
		public MessageType Type
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xB2C9A0", Offset = "0xB2C9A0", VA = "0xB2C9A0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000141")]
		public bool IsError
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xB2C9A8", Offset = "0xB2C9A8", VA = "0xB2C9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public long RequestID
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xB2C9B8", Offset = "0xB2C9B8", VA = "0xB2C9B8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000143")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xB2CBE0", Offset = "0xB2CBE0", VA = "0xB2CBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C080", Offset = "0x63C080")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xB2CB88", Offset = "0xB2CB88", VA = "0xB2CB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C070", Offset = "0x63C070")]
			set
			{
			}
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xB2C78C", Offset = "0xB2C78C", VA = "0xB2C78C")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xB2C9C0", Offset = "0xB2C9C0", VA = "0xB2C9C0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB2C9C8", Offset = "0xB2C9C8", VA = "0xB2C9C8", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB2C9D0", Offset = "0xB2C9D0", VA = "0xB2C9D0", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB2C9D8", Offset = "0xB2C9D8", VA = "0xB2C9D8", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB2C9E0", Offset = "0xB2C9E0", VA = "0xB2C9E0", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB2C9E8", Offset = "0xB2C9E8", VA = "0xB2C9E8")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB2BDD4", Offset = "0xB2BDD4", VA = "0xB2BDD4")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C3")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x600184B")]
		[Address(RVA = "0xB28CE4", Offset = "0xB28CE4", VA = "0xB28CE4")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB28D44", Offset = "0xB28D44", VA = "0xB28D44", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB28D88", Offset = "0xB28D88", VA = "0xB28D88", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C4")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB28F84", Offset = "0xB28F84", VA = "0xB28F84")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB28FE4", Offset = "0xB28FE4", VA = "0xB28FE4", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB29028", Offset = "0xB29028", VA = "0xB29028", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C5")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB29224", Offset = "0xB29224", VA = "0xB29224")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xB29284", Offset = "0xB29284", VA = "0xB29284", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xB292C8", Offset = "0xB292C8", VA = "0xB292C8", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C6")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0xB293C4", Offset = "0xB293C4", VA = "0xB293C4")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xB29424", Offset = "0xB29424", VA = "0xB29424", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xB29468", Offset = "0xB29468", VA = "0xB29468", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class Error
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xB28C98", Offset = "0xB28C98", VA = "0xB28C98")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6001858")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6001859")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class Request
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6342AC", Offset = "0x6342AC")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x17000144")]
		public long RequestID
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xB2D170", Offset = "0xB2D170", VA = "0xB2D170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C090", Offset = "0x63C090")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xB2D178", Offset = "0xB2D178", VA = "0xB2D178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C0A0", Offset = "0x63C0A0")]
			set
			{
			}
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xB2D144", Offset = "0xB2D144", VA = "0xB2D144")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xB2D180", Offset = "0xB2D180", VA = "0xB2D180")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xB2D208", Offset = "0xB2D208", VA = "0xB2D208", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xB2C69C", Offset = "0xB2C69C", VA = "0xB2C69C")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace UnitySA.Characters.FirstPerson
{
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E250", Offset = "0x62E250")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E250", Offset = "0x62E250")]
	public class FPCtrl : MonoBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6342EC", Offset = "0x6342EC")]
		private float m_RunstepLenghten;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MLook m_MouseLook;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVZoom m_FovKick;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveCtrlBob m_HeadBob;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpCtrlBob m_JumpBob;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_Camera;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Jump;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_YRotation;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 m_Input;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_StepCycle;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NextStep;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_Jumping;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xCA8DA8", Offset = "0xCA8DA8", VA = "0xCA8DA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xCA8FF4", Offset = "0xCA8FF4", VA = "0xCA8FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xCA913C", Offset = "0xCA913C", VA = "0xCA913C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xCA9694", Offset = "0xCA9694", VA = "0xCA9694")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xCA9790", Offset = "0xCA9790", VA = "0xCA9790")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xCA94F8", Offset = "0xCA94F8", VA = "0xCA94F8")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xCA90E8", Offset = "0xCA90E8", VA = "0xCA90E8")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xCA9E54", Offset = "0xCA9E54", VA = "0xCA9E54")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xCA9FD4", Offset = "0xCA9FD4", VA = "0xCA9FD4")]
		public FPCtrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class MLook
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xCA8FA0", Offset = "0xCA8FA0", VA = "0xCA8FA0")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xCA9B7C", Offset = "0xCA9B7C", VA = "0xCA9B7C")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xCAA41C", Offset = "0xCAA41C", VA = "0xCAA41C")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xCA9954", Offset = "0xCA9954", VA = "0xCA9954")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xCAA450", Offset = "0xCAA450", VA = "0xCAA450")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xCAA354", Offset = "0xCAA354", VA = "0xCAA354")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xCAA4CC", Offset = "0xCAA4CC", VA = "0xCAA4CC")]
		public MLook()
		{
		}
	}
}
namespace UnitySA.Utility
{
	[Serializable]
	[Token(Token = "0x20002CC")]
	public class CurveCtrlBob
	{
		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xCA8EFC", Offset = "0xCA8EFC", VA = "0xCA8EFC")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xCA9964", Offset = "0xCA9964", VA = "0xCA9964")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xCAA108", Offset = "0xCAA108", VA = "0xCAA108")]
		public CurveCtrlBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class FOVZoom
	{
		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ECE0", Offset = "0x62ECE0")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F00")]
				[Address(RVA = "0xBD3B34", Offset = "0xBD3B34", VA = "0xBD3B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F02")]
				[Address(RVA = "0xBD3B9C", Offset = "0xBD3B9C", VA = "0xBD3B9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xBD3998", Offset = "0xBD3998", VA = "0xBD3998")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xBD39C4", Offset = "0xBD39C4", VA = "0xBD39C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xBD39C8", Offset = "0xBD39C8", VA = "0xBD39C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xBD3B3C", Offset = "0xBD3B3C", VA = "0xBD3B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ECF0", Offset = "0x62ECF0")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000254")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F06")]
				[Address(RVA = "0xBD3928", Offset = "0xBD3928", VA = "0xBD3928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000255")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F08")]
				[Address(RVA = "0xBD3990", Offset = "0xBD3990", VA = "0xBD3990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xBD3778", Offset = "0xBD3778", VA = "0xBD3778")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xBD37A4", Offset = "0xBD37A4", VA = "0xBD37A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xBD37A8", Offset = "0xBD37A8", VA = "0xBD37A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xBD3930", Offset = "0xBD3930", VA = "0xBD3930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xCA8EB0", Offset = "0xCA8EB0", VA = "0xCA8EB0")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xCAA500", Offset = "0xCAA500", VA = "0xCAA500")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xCAA5E0", Offset = "0xCAA5E0", VA = "0xCAA5E0")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xCA9B00", Offset = "0xCA9B00", VA = "0xCA9B00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C0B0", Offset = "0x63C0B0")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xCA9A84", Offset = "0xCA9A84", VA = "0xCA9A84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C114", Offset = "0x63C114")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xCAA0EC", Offset = "0xCAA0EC", VA = "0xCAA0EC")]
		public FOVZoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CE")]
	public class LerpCtrlBob
	{
		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED00", Offset = "0x62ED00")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCtrlBob <>4__this;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F0C")]
				[Address(RVA = "0xBD3E58", Offset = "0xBD3E58", VA = "0xBD3E58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0E")]
				[Address(RVA = "0xBD3EC0", Offset = "0xBD3EC0", VA = "0xBD3EC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xBD3C28", Offset = "0xBD3C28", VA = "0xBD3C28")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xBD3C5C", Offset = "0xBD3C5C", VA = "0xBD3C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xBD3C60", Offset = "0xBD3C60", VA = "0xBD3C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xBD3E60", Offset = "0xBD3E60", VA = "0xBD3E60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xBD3BA4", Offset = "0xBD3BA4", VA = "0xBD3BA4")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xBD3BAC", Offset = "0xBD3BAC", VA = "0xBD3BAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63C178", Offset = "0x63C178")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xBD3C54", Offset = "0xBD3C54", VA = "0xBD3C54")]
		public LerpCtrlBob()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Demo
{
	[Token(Token = "0x20002CF")]
	public class AdvancedBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactParticles;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CastRadius;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x997030", Offset = "0x997030", VA = "0x997030")]
		private void Start()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x997108", Offset = "0x997108", VA = "0x997108")]
		private void Update()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x9975E8", Offset = "0x9975E8", VA = "0x9975E8")]
		public AdvancedBulletHoles()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class BasicBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool t;

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x9975F8", Offset = "0x9975F8", VA = "0x9975F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x9976AC", Offset = "0x9976AC", VA = "0x9976AC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x9978F0", Offset = "0x9978F0", VA = "0x9978F0")]
		public BasicBulletHoles()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public static class BezierUtil
	{
		[Token(Token = "0x6001883")]
		[Address(RVA = "0x9978F8", Offset = "0x9978F8", VA = "0x9978F8")]
		public static List<Vector3> InterpolatePath(List<Vector3> path, int segments, float radius, float angleThreshold)
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x997E10", Offset = "0x997E10", VA = "0x997E10")]
		public static Vector3[] GetBezierApproximation(Vector3[] controlPoints, int outputSegmentCount)
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x997EF0", Offset = "0x997EF0", VA = "0x997EF0")]
		public static Vector3 GetBezierPoint(float t, Vector3[] controlPoints, int index, int count)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002D2")]
	public static class LineUtil
	{
		[Token(Token = "0x6001886")]
		[Address(RVA = "0x9980D0", Offset = "0x9980D0", VA = "0x9980D0")]
		public static void DrawPath(float thickness, Material material, List<Vector3> path)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x998274", Offset = "0x998274", VA = "0x998274")]
		private static void DrawLine(float thickness, Vector3 start, Vector3 end)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E2DC", Offset = "0x62E2DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E2DC", Offset = "0x62E2DC")]
	public class PathAgent : MonoBehaviour
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PathThickness;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6343DC", Offset = "0x6343DC")]
		public float NormalPathOffset;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x634414", Offset = "0x634414")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634414", Offset = "0x634414")]
		public float Radius;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63446C", Offset = "0x63446C")]
		public float AngleThreshold;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DrawGizmos;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EasyDecal TargetAimDecal;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetPointDecalPrefab;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> path;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent agent;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 decalOffset;

		[Token(Token = "0x4001765")]
		private const int MAXDISTANCE = 50;

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x9984F0", Offset = "0x9984F0", VA = "0x9984F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x998598", Offset = "0x998598", VA = "0x998598")]
		private void Update()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x998AA4", Offset = "0x998AA4", VA = "0x998AA4")]
		private void SetTarget(Ray mouseRay)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x998630", Offset = "0x998630", VA = "0x998630")]
		private void CreatePath(Ray mouseRay)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x998C98", Offset = "0x998C98", VA = "0x998C98")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x998DBC", Offset = "0x998DBC", VA = "0x998DBC")]
		public PathAgent()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ProxyRegister : MonoBehaviour
	{
		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StaticProxyCollection ProxyCollection;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x998E88", Offset = "0x998E88", VA = "0x998E88")]
		private void Start()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x998F40", Offset = "0x998F40", VA = "0x998F40")]
		public ProxyRegister()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class Sinoid : MonoBehaviour
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngularVelocity;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SineFreq;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Amplitude;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accuTime;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x998F48", Offset = "0x998F48", VA = "0x998F48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x998F84", Offset = "0x998F84", VA = "0x998F84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x999170", Offset = "0x999170", VA = "0x999170")]
		public Sinoid()
		{
		}
	}
}
namespace Forge3D
{
	[Token(Token = "0x20002D6")]
	public class F3DAudioController : MonoBehaviour
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DAudioController instance;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer_01;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timer_02;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform audioSource;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6344A4", Offset = "0x6344A4")]
		public AudioClip[] vulcanHit;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip vulcanShot;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float vulcanDelay;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float vulcanHitDelay;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6344DC", Offset = "0x6344DC")]
		public AudioClip[] soloGunHit;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip soloGunShot;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float soloGunDelay;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float soloGunHitDelay;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634514", Offset = "0x634514")]
		public AudioClip[] sniperHit;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip sniperShot;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float sniperDelay;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float sniperHitDelay;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63454C", Offset = "0x63454C")]
		public AudioClip[] shotGunHit;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip shotGunShot;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float shotGunDelay;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float shotGunHitDelay;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634584", Offset = "0x634584")]
		public AudioClip[] seekerHit;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip seekerShot;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float seekerDelay;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float seekerHitDelay;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6345BC", Offset = "0x6345BC")]
		public AudioClip[] railgunHit;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip railgunShot;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float railgunDelay;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float railgunHitDelay;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6345F4", Offset = "0x6345F4")]
		public AudioClip[] plasmagunHit;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip plasmagunShot;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float plasmagunDelay;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float plasmagunHitDelay;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63462C", Offset = "0x63462C")]
		public AudioClip plasmabeamOpen;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip plasmabeamLoop;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip plasmabeamClose;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634664", Offset = "0x634664")]
		public AudioClip plasmabeamHeavyOpen;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip plasmabeamHeavyLoop;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip plasmabeamHeavyClose;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63469C", Offset = "0x63469C")]
		public AudioClip lightningGunOpen;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip lightningGunLoop;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip lightningGunClose;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6346D4", Offset = "0x6346D4")]
		public AudioClip flameGunOpen;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip flameGunLoop;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip flameGunClose;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63470C", Offset = "0x63470C")]
		public AudioClip[] laserImpulseHit;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioClip laserImpulseShot;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float laserImpulseDelay;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float laserImpulseHitDelay;

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xAB1498", Offset = "0xAB1498", VA = "0xAB1498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xAB14F0", Offset = "0xAB14F0", VA = "0xAB14F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xAB153C", Offset = "0xAB153C", VA = "0xAB153C")]
		public void VulcanShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xAB1CF8", Offset = "0xAB1CF8", VA = "0xAB1CF8")]
		public void VulcanHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xAB1EEC", Offset = "0xAB1EEC", VA = "0xAB1EEC")]
		public void SoloGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xAB2098", Offset = "0xAB2098", VA = "0xAB2098")]
		public void SoloGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xAB2290", Offset = "0xAB2290", VA = "0xAB2290")]
		public void SniperShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xAB243C", Offset = "0xAB243C", VA = "0xAB243C")]
		public void SniperHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xAB2630", Offset = "0xAB2630", VA = "0xAB2630")]
		public void ShotGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xAB27DC", Offset = "0xAB27DC", VA = "0xAB27DC")]
		public void ShotGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xAB29D0", Offset = "0xAB29D0", VA = "0xAB29D0")]
		public void SeekerShot(Vector3 pos)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xAB2B7C", Offset = "0xAB2B7C", VA = "0xAB2B7C")]
		public void SeekerHit(Vector3 pos)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xAB2D70", Offset = "0xAB2D70", VA = "0xAB2D70")]
		public void RailGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xAB2F1C", Offset = "0xAB2F1C", VA = "0xAB2F1C")]
		public void RailGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xAB3110", Offset = "0xAB3110", VA = "0xAB3110")]
		public void PlasmaGunShot(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xAB32BC", Offset = "0xAB32BC", VA = "0xAB32BC")]
		public void PlasmaGunHit(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xAB34B4", Offset = "0xAB34B4", VA = "0xAB34B4")]
		public void PlasmaBeamLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xAB377C", Offset = "0xAB377C", VA = "0xAB377C")]
		public void PlasmaBeamClose(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xAB3928", Offset = "0xAB3928", VA = "0xAB3928")]
		public void PlasmaBeamHeavyLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xAB3BF0", Offset = "0xAB3BF0", VA = "0xAB3BF0")]
		public void PlasmaBeamHeavyClose(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xAB3D9C", Offset = "0xAB3D9C", VA = "0xAB3D9C")]
		public void LightningGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xAB4084", Offset = "0xAB4084", VA = "0xAB4084")]
		public void LightningGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xAB4230", Offset = "0xAB4230", VA = "0xAB4230")]
		public void FlameGunLoop(Vector3 pos, Transform loopParent)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xAB4518", Offset = "0xAB4518", VA = "0xAB4518")]
		public void FlameGunClose(Vector3 pos)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xAB46C4", Offset = "0xAB46C4", VA = "0xAB46C4")]
		public void LaserImpulseShot(Vector3 pos)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xAB4870", Offset = "0xAB4870", VA = "0xAB4870")]
		public void LaserImpulseHit(Vector3 pos)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xAB4A6C", Offset = "0xAB4A6C", VA = "0xAB4A6C")]
		public F3DAudioController()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E368", Offset = "0x62E368")]
	public class F3DBeam : MonoBehaviour
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public F3DFXType fxType;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool OneShot;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture[] BeamFrames;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FrameStep;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float beamScale;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxBeamLength;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rayImpact;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayMuzzle;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastHit hitPoint;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RaycastHit2D hitPoint2D;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int frameNo;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int FrameTimerID;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float beamLength;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float initialBeamOffset;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float fxOffset;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float animateUVTime;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xAB4A74", Offset = "0xAB4A74", VA = "0xAB4A74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xAB4B48", Offset = "0xAB4B48", VA = "0xAB4B48")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xAB5840", Offset = "0xAB5840", VA = "0xAB5840")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xAB4B9C", Offset = "0xAB4B9C", VA = "0xAB4B9C")]
		private void Raycast()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xAB5D18", Offset = "0xAB5D18", VA = "0xAB5D18")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xAB571C", Offset = "0xAB571C", VA = "0xAB571C")]
		private void Animate()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xAB5A64", Offset = "0xAB5A64", VA = "0xAB5A64")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xAB5E64", Offset = "0xAB5E64", VA = "0xAB5E64")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xAB5E6C", Offset = "0xAB5E6C", VA = "0xAB5E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xAB5F50", Offset = "0xAB5F50", VA = "0xAB5F50")]
		public F3DBeam()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E3CC", Offset = "0x62E3CC")]
	public class F3DCurvedBeam : MonoBehaviour
	{
		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform dest;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float beamScale;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float UVTime;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int curvePoints;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float curveHeight;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialBeamOffset;

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xAB60F4", Offset = "0xAB60F4", VA = "0xAB60F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xAB6180", Offset = "0xAB6180", VA = "0xAB6180")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xAB6544", Offset = "0xAB6544", VA = "0xAB6544")]
		public F3DCurvedBeam()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class F3DDespawn : MonoBehaviour
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DespawnDelay;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DespawnOnMouseUp;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource aSrc;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xAB654C", Offset = "0xAB654C", VA = "0xAB654C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xAB65AC", Offset = "0xAB65AC", VA = "0xAB65AC")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xAB6674", Offset = "0xAB6674", VA = "0xAB6674")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xAB6678", Offset = "0xAB6678", VA = "0xAB6678")]
		public void DespawnOnTimer()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xAB6724", Offset = "0xAB6724", VA = "0xAB6724")]
		public void Despawn()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xAB6A2C", Offset = "0xAB6A2C", VA = "0xAB6A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xAB6AE4", Offset = "0xAB6AE4", VA = "0xAB6AE4")]
		public F3DDespawn()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public enum F3DFXType
	{
		[Token(Token = "0x40017BB")]
		Vulcan,
		[Token(Token = "0x40017BC")]
		SoloGun,
		[Token(Token = "0x40017BD")]
		Sniper,
		[Token(Token = "0x40017BE")]
		ShotGun,
		[Token(Token = "0x40017BF")]
		Seeker,
		[Token(Token = "0x40017C0")]
		RailGun,
		[Token(Token = "0x40017C1")]
		PlasmaGun,
		[Token(Token = "0x40017C2")]
		PlasmaBeam,
		[Token(Token = "0x40017C3")]
		PlasmaBeamHeavy,
		[Token(Token = "0x40017C4")]
		LightningGun,
		[Token(Token = "0x40017C5")]
		FlameRed,
		[Token(Token = "0x40017C6")]
		LaserImpulse
	}
	[Token(Token = "0x20002DB")]
	public class F3DFXController : MonoBehaviour
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DFXController instance;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] fxTypeName;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int curSocket;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int timerID;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634744", Offset = "0x634744")]
		public Transform[] TurretSocket;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem[] ShellParticles;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public F3DFXType DefaultFXType;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63477C", Offset = "0x63477C")]
		public Transform vulcanProjectile;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform vulcanMuzzle;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform vulcanImpact;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float vulcanOffset;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6347B4", Offset = "0x6347B4")]
		public Transform soloGunProjectile;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform soloGunMuzzle;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform soloGunImpact;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float soloGunOffset;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6347EC", Offset = "0x6347EC")]
		public Transform sniperBeam;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform sniperMuzzle;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform sniperImpact;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float sniperOffset;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634824", Offset = "0x634824")]
		public Transform shotGunProjectile;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform shotGunMuzzle;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform shotGunImpact;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float shotGunOffset;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63485C", Offset = "0x63485C")]
		public Transform seekerProjectile;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform seekerMuzzle;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform seekerImpact;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float seekerOffset;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634894", Offset = "0x634894")]
		public Transform railgunBeam;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform railgunMuzzle;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform railgunImpact;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float railgunOffset;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6348CC", Offset = "0x6348CC")]
		public Transform plasmagunProjectile;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform plasmagunMuzzle;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Transform plasmagunImpact;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float plasmaGunOffset;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634904", Offset = "0x634904")]
		public Transform plasmaBeam;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float plasmaOffset;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x63493C", Offset = "0x63493C")]
		public Transform plasmaBeamHeavy;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float plasmaBeamHeavyOffset;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634974", Offset = "0x634974")]
		public Transform lightningGunBeam;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lightingGunBeamOffset;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6349AC", Offset = "0x6349AC")]
		public Transform flameRed;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float flameOffset;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6349E4", Offset = "0x6349E4")]
		public Transform laserImpulseProjectile;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform laserImpulseMuzzle;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform laserImpulseImpact;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float laserImpulseOffset;

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xAB6B4C", Offset = "0xAB6B4C", VA = "0xAB6B4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xAB6BA4", Offset = "0xAB6BA4", VA = "0xAB6BA4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xAB73F8", Offset = "0xAB73F8", VA = "0xAB73F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xAB731C", Offset = "0xAB731C", VA = "0xAB731C")]
		private void NextWeapon()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xAB7308", Offset = "0xAB7308", VA = "0xAB7308")]
		private void PrevWeapon()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xAB7454", Offset = "0xAB7454", VA = "0xAB7454")]
		private void AdvanceSocket()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xAB7488", Offset = "0xAB7488", VA = "0xAB7488")]
		public void Fire()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xABA038", Offset = "0xABA038", VA = "0xABA038")]
		public void Stop()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xAB78F0", Offset = "0xAB78F0", VA = "0xAB78F0")]
		private void Vulcan()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xABA774", Offset = "0xABA774", VA = "0xABA774")]
		public void VulcanImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xAB7D84", Offset = "0xAB7D84", VA = "0xAB7D84")]
		private void SoloGun()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xABA8B8", Offset = "0xABA8B8", VA = "0xABA8B8")]
		public void SoloGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xAB81D8", Offset = "0xAB81D8", VA = "0xAB81D8")]
		private void Sniper()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xAB5920", Offset = "0xAB5920", VA = "0xAB5920")]
		public void SniperImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xAB85BC", Offset = "0xAB85BC", VA = "0xAB85BC")]
		private void ShotGun()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xAB893C", Offset = "0xAB893C", VA = "0xAB893C")]
		private void Seeker()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xABA9FC", Offset = "0xABA9FC", VA = "0xABA9FC")]
		public void SeekerImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xAB8CEC", Offset = "0xAB8CEC", VA = "0xAB8CEC")]
		private void RailGun()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xAB5BD4", Offset = "0xAB5BD4", VA = "0xAB5BD4")]
		public void RailgunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xAB90D0", Offset = "0xAB90D0", VA = "0xAB90D0")]
		private void PlasmaGun()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xABAB40", Offset = "0xABAB40", VA = "0xABAB40")]
		public void PlasmaGunImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xAB9480", Offset = "0xAB9480", VA = "0xAB9480")]
		private void PlasmaBeam()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xAB9688", Offset = "0xAB9688", VA = "0xAB9688")]
		private void PlasmaBeamHeavy()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xAB9890", Offset = "0xAB9890", VA = "0xAB9890")]
		private void LightningGun()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xAB9A8C", Offset = "0xAB9A8C", VA = "0xAB9A8C")]
		private void FlameRed()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xAB9C88", Offset = "0xAB9C88", VA = "0xAB9C88")]
		private void LaserImpulse()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xABAC84", Offset = "0xABAC84", VA = "0xABAC84")]
		public void LaserImpulseImpact(Vector3 pos)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xABADC8", Offset = "0xABADC8", VA = "0xABADC8")]
		public F3DFXController()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class F3DFlameThrower : MonoBehaviour
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light pLight;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem heat;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lightState;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool despawn;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem ps;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xABB194", Offset = "0xABB194", VA = "0xABB194")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xABB1F4", Offset = "0xABB1F4", VA = "0xABB1F4")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xABB224", Offset = "0xABB224", VA = "0xABB224")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xABB228", Offset = "0xABB228", VA = "0xABB228")]
		private void OnDespawn()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xABB2D4", Offset = "0xABB2D4", VA = "0xABB2D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xABB53C", Offset = "0xABB53C", VA = "0xABB53C")]
		public F3DFlameThrower()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E430", Offset = "0x62E430")]
	public class F3DLightning : MonoBehaviour
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] BeamFrames;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FrameStep;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomizeFrames;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Points;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxBeamLength;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float beamScale;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool AnimateUV;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float UVTime;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool Oscillate;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Amplitude;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float OscillateTime;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rayImpact;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform rayMuzzle;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit hitPoint;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int frameNo;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int FrameTimerID;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int OscillateTimerID;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float beamLength;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float initialBeamOffset;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xABB544", Offset = "0xABB544", VA = "0xABB544")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xABB618", Offset = "0xABB618", VA = "0xABB618")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xABB800", Offset = "0xABB800", VA = "0xABB800")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xABB8A8", Offset = "0xABB8A8", VA = "0xABB8A8")]
		private void Raycast()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xABBF80", Offset = "0xABBF80", VA = "0xABBF80")]
		private float GetRandomNoise()
		{
			return default(float);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xABBF90", Offset = "0xABBF90", VA = "0xABBF90")]
		private void OnFrameStep()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xABC040", Offset = "0xABC040", VA = "0xABC040")]
		private void OnOscillate()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xABB6FC", Offset = "0xABB6FC", VA = "0xABB6FC")]
		private void Animate()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xABBE10", Offset = "0xABBE10", VA = "0xABBE10")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xABC264", Offset = "0xABC264", VA = "0xABC264")]
		private void Update()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xABC320", Offset = "0xABC320", VA = "0xABC320")]
		public F3DLightning()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class F3DMissile : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		public enum MissileType
		{
			[Token(Token = "0x4001EF8")]
			Unguided,
			[Token(Token = "0x4001EF9")]
			Guided,
			[Token(Token = "0x4001EFA")]
			Predictive
		}

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissileType missileType;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask layerMask;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float detonationDistance;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lifeTime;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float despawnDelay;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocity;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float alignSpeed;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RaycastAdvance;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool DelayDespawn;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem[] particles;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private new Transform transform;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isHit;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isFXSpawned;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 targetLastPos;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 step;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xABC550", Offset = "0xABC550", VA = "0xABC550")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xABC5F8", Offset = "0xABC5F8", VA = "0xABC5F8")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xABC694", Offset = "0xABC694", VA = "0xABC694")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xABC698", Offset = "0xABC698", VA = "0xABC698")]
		private void Delay()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xABC838", Offset = "0xABC838", VA = "0xABC838")]
		private void OnMissileDestroy()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xABC8D0", Offset = "0xABC8D0", VA = "0xABC8D0")]
		private void OnHit()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xABC928", Offset = "0xABC928", VA = "0xABC928")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xABD200", Offset = "0xABD200", VA = "0xABD200")]
		public F3DMissile()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[ExecuteInEditMode]
	public class F3DParticleScale : MonoBehaviour
	{
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x634A1C", Offset = "0x634A1C")]
		public float ParticleScale;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ScaleGameobject;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float prevScale;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xABD7FC", Offset = "0xABD7FC", VA = "0xABD7FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xABD808", Offset = "0xABD808", VA = "0xABD808")]
		private void ScaleShurikenSystems(float scaleFactor)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xABD80C", Offset = "0xABD80C", VA = "0xABD80C")]
		private void ScaleTrailRenderers(float scaleFactor)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xABD8F8", Offset = "0xABD8F8", VA = "0xABD8F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xABD8FC", Offset = "0xABD8FC", VA = "0xABD8FC")]
		public F3DParticleScale()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class F3DPoolOld : MonoBehaviour
	{
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DPoolOld instance;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634A34", Offset = "0x634A34")]
		public Transform[] poolItems;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] poolLength;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x634A6C", Offset = "0x634A6C")]
		public Transform audioSourcePrefab;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] audioPoolItems;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] audioPoolLength;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Transform, Transform[]> pool;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<AudioClip, AudioSource[]> audioPool;

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xABFC70", Offset = "0xABFC70", VA = "0xABFC70")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xAC0228", Offset = "0xAC0228", VA = "0xAC0228")]
		public Transform Spawn(Transform obj, Vector3 pos, Quaternion rot, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xAC0404", Offset = "0xAC0404", VA = "0xAC0404")]
		public AudioSource SpawnAudi2o(AudioClip clip, Vector3 pos, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xAC05BC", Offset = "0xAC05BC", VA = "0xAC05BC")]
		public void Despawn(Transform obj)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xAC0638", Offset = "0xAC0638", VA = "0xAC0638")]
		public F3DPoolOld()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class F3DPredictTrajectory : MonoBehaviour
	{
		[Token(Token = "0x6001901")]
		[Address(RVA = "0xABD068", Offset = "0xABD068", VA = "0xABD068")]
		public static Vector3 Predict(Vector3 sPos, Vector3 tPos, Vector3 tLastPos, float pSpeed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xAC0640", Offset = "0xAC0640", VA = "0xAC0640")]
		private static float GetProjFlightTime(Vector3 dist, Vector3 tVel, float pSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xAC07AC", Offset = "0xAC07AC", VA = "0xAC07AC")]
		public F3DPredictTrajectory()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class F3DProjectile : MonoBehaviour
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public F3DFXType fxType;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifeTime;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float despawnDelay;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocity;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RaycastAdvance;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DelayDespawn;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem[] delayedParticles;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem[] particles;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private new Transform transform;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit hitPoint;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isHit;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool isFXSpawned;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timer;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fxOffset;

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xAC07B4", Offset = "0xAC07B4", VA = "0xAC07B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xAC0838", Offset = "0xAC0838", VA = "0xAC0838")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xAC0850", Offset = "0xAC0850", VA = "0xAC0850")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xAC0854", Offset = "0xAC0854", VA = "0xAC0854")]
		private void Delay()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xAC09F4", Offset = "0xAC09F4", VA = "0xAC09F4")]
		private void OnProjectileDestroy()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xAC0A8C", Offset = "0xAC0A8C", VA = "0xAC0A8C")]
		private void ApplyForce(float force)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xAC0BF8", Offset = "0xAC0BF8", VA = "0xAC0BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xAC121C", Offset = "0xAC121C", VA = "0xAC121C")]
		public void SetOffset(float offset)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xAC1224", Offset = "0xAC1224", VA = "0xAC1224")]
		public F3DProjectile()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class F3DPulsewave : MonoBehaviour
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FadeOutDelay;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FadeOutTime;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleTime;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 ScaleSize;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DebugLoop;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private new Transform transform;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int timerID;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isFadeOut;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool isEnabled;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color defaultColor;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color color;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int tintColorRef;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xAC1240", Offset = "0xAC1240", VA = "0xAC1240")]
		private void Awake()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xAC1310", Offset = "0xAC1310", VA = "0xAC1310")]
		private void Start()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xAC1320", Offset = "0xAC1320", VA = "0xAC1320")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xAC1454", Offset = "0xAC1454", VA = "0xAC1454")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xAC14C4", Offset = "0xAC14C4", VA = "0xAC14C4")]
		private void OnFadeOut()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xAC14D0", Offset = "0xAC14D0", VA = "0xAC14D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xAC168C", Offset = "0xAC168C", VA = "0xAC168C")]
		public F3DPulsewave()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class F3DRandomize : MonoBehaviour
	{
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultScale;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool RandomScale;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool RandomRotation;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MinScale;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxScale;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinRotation;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxRotaion;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xAC169C", Offset = "0xAC169C", VA = "0xAC169C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xAC171C", Offset = "0xAC171C", VA = "0xAC171C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xAC189C", Offset = "0xAC189C", VA = "0xAC189C")]
		public F3DRandomize()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class F3DRift : MonoBehaviour
	{
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MorphSpeed;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MorphFactor;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 dScale;

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xAC18A4", Offset = "0xAC18A4", VA = "0xAC18A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xAC18E0", Offset = "0xAC18E0", VA = "0xAC18E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xAC1A88", Offset = "0xAC1A88", VA = "0xAC1A88")]
		public F3DRift()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class F3DShotgun : MonoBehaviour
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleCollisionEvent[] collisionEvents;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem ps;

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xAC1A90", Offset = "0xAC1A90", VA = "0xAC1A90")]
		private void Start()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xAC1AF0", Offset = "0xAC1AF0", VA = "0xAC1AF0")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xAC1D6C", Offset = "0xAC1D6C", VA = "0xAC1D6C")]
		public F3DShotgun()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class F3DTime : MonoBehaviour
	{
		[Token(Token = "0x2000497")]
		private class Timer
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isActive;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float rate;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ticks;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ticksElapsed;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float last;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xAC1E98", Offset = "0xAC1E98", VA = "0xAC1E98")]
			public Timer(int id_, float rate_, int ticks_, Action callback_)
			{
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xAC2160", Offset = "0xAC2160", VA = "0xAC2160")]
			public void Tick()
			{
			}
		}

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DTime time;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Timer> timers;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> removalPending;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int idCounter;

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xAC1DD8", Offset = "0xAC1DD8", VA = "0xAC1DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xAB78E4", Offset = "0xAB78E4", VA = "0xAB78E4")]
		public int AddTimer(float rate, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xAB5DA4", Offset = "0xAB5DA4", VA = "0xAB5DA4")]
		public int AddTimer(float rate, int ticks, Action callBack)
		{
			return default(int);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xAB58B8", Offset = "0xAB58B8", VA = "0xAB58B8")]
		public void RemoveTimer(int timerId)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xAC1F18", Offset = "0xAC1F18", VA = "0xAC1F18")]
		private void Remove()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xAC20CC", Offset = "0xAC20CC", VA = "0xAC20CC")]
		private void Tick()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xAC2238", Offset = "0xAC2238", VA = "0xAC2238")]
		private void Update()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xAC225C", Offset = "0xAC225C", VA = "0xAC225C")]
		public F3DTime()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class F3DTurret2 : MonoBehaviour
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hub;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform barrel;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit hitInfo;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isFiring;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float hubAngle;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float barrelAngle;

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xAC2504", Offset = "0xAC2504", VA = "0xAC2504")]
		private Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xAC25E0", Offset = "0xAC25E0", VA = "0xAC25E0")]
		private float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xAC2724", Offset = "0xAC2724", VA = "0xAC2724")]
		private void Track()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xAC2D90", Offset = "0xAC2D90", VA = "0xAC2D90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xAC2E58", Offset = "0xAC2E58", VA = "0xAC2E58")]
		public F3DTurret2()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class F3DWarpJump : MonoBehaviour
	{
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem WarpSpark;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ShipPos;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ShipJumpSpeed;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 ShipJumpStartPoint;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 ShipJumpEndPoint;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool SendOnSpawned;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool isWarping;

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xAC2E60", Offset = "0xAC2E60", VA = "0xAC2E60")]
		private void Start()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xAC2ECC", Offset = "0xAC2ECC", VA = "0xAC2ECC")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xAC2FC4", Offset = "0xAC2FC4", VA = "0xAC2FC4")]
		private void OnWarp()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xAC2FD0", Offset = "0xAC2FD0", VA = "0xAC2FD0")]
		private void ShiftShipPosition()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xAC310C", Offset = "0xAC310C", VA = "0xAC310C")]
		private void Update()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xAC311C", Offset = "0xAC311C", VA = "0xAC311C")]
		public F3DWarpJump()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class F3DWarpJumpTunnel : MonoBehaviour
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private new Transform transform;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float StartDelay;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FadeDelay;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ScaleTo;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ScaleTime;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ColorTime;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ColorFadeTime;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RotationSpeed;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool grow;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float alpha;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int alphaID;

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xAC3124", Offset = "0xAC3124", VA = "0xAC3124")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xAC31C4", Offset = "0xAC31C4", VA = "0xAC31C4")]
		public void OnSpawned()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xAC33D8", Offset = "0xAC33D8", VA = "0xAC33D8")]
		private void ToggleGrow()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xAC33E8", Offset = "0xAC33E8", VA = "0xAC33E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xAC35B4", Offset = "0xAC35B4", VA = "0xAC35B4")]
		public F3DWarpJumpTunnel()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class F3DWarpTunnel : MonoBehaviour
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRotationSpeed;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AdaptationFactor;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float speed;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float newSpeed;

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xAC35BC", Offset = "0xAC35BC", VA = "0xAC35BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xAC35C4", Offset = "0xAC35C4", VA = "0xAC35C4")]
		private void OnDirectionChange()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xAC3690", Offset = "0xAC3690", VA = "0xAC3690")]
		private void Update()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xAC3858", Offset = "0xAC3858", VA = "0xAC3858")]
		public F3DWarpTunnel()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class F3DMath : MonoBehaviour
	{
		[Token(Token = "0x6001939")]
		[Address(RVA = "0xABC328", Offset = "0xABC328", VA = "0xABC328")]
		public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xABC404", Offset = "0xABC404", VA = "0xABC404")]
		public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xABC548", Offset = "0xABC548", VA = "0xABC548")]
		public F3DMath()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class F3DBurnoutExample : MonoBehaviour
	{
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] turretParts;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int BurnoutID;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xAB5F58", Offset = "0xAB5F58", VA = "0xAB5F58")]
		private void Start()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xAB5FD0", Offset = "0xAB5FD0", VA = "0xAB5FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xAB60EC", Offset = "0xAB60EC", VA = "0xAB60EC")]
		public F3DBurnoutExample()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class F3DDummyEvent : MonoBehaviour
	{
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xAB6AEC", Offset = "0xAB6AEC", VA = "0xAB6AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xAB6B44", Offset = "0xAB6B44", VA = "0xAB6B44")]
		public F3DDummyEvent()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class F3DMissileLauncher : MonoBehaviour
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DMissileLauncher instance;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform missilePrefab;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform explosionPrefab;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private F3DMissile.MissileType missileType;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text missileTypeLabel;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xABD224", Offset = "0xABD224", VA = "0xABD224")]
		private void Start()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xABCF4C", Offset = "0xABCF4C", VA = "0xABCF4C")]
		public void SpawnExplosion(Vector3 position)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xABD2A8", Offset = "0xABD2A8", VA = "0xABD2A8")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xABD5A4", Offset = "0xABD5A4", VA = "0xABD5A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xABD5A8", Offset = "0xABD5A8", VA = "0xABD5A8")]
		public F3DMissileLauncher()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class F3DNebula : MonoBehaviour
	{
		[Token(Token = "0x6001946")]
		[Address(RVA = "0xABD5B0", Offset = "0xABD5B0", VA = "0xABD5B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xABD5B4", Offset = "0xABD5B4", VA = "0xABD5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xABD7F4", Offset = "0xABD7F4", VA = "0xABD7F4")]
		public F3DNebula()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class F3DTrailExample : MonoBehaviour
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Mult;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TimeMult;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPos;

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xAC2264", Offset = "0xAC2264", VA = "0xAC2264")]
		private void Start()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xAC22A0", Offset = "0xAC22A0", VA = "0xAC22A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xAC23E4", Offset = "0xAC23E4", VA = "0xAC23E4")]
		public F3DTrailExample()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class F3DTurnTable : MonoBehaviour
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xAC23EC", Offset = "0xAC23EC", VA = "0xAC23EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xAC23F0", Offset = "0xAC23F0", VA = "0xAC23F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xAC24FC", Offset = "0xAC24FC", VA = "0xAC24FC")]
		public F3DTurnTable()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class F3DPool : MonoBehaviour
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string poolName;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform[] templates;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] templatesParent;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] poolLength;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int[] poolLengthCurrent;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int[] poolLengthMax;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string broadcastSpawnName;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string broadcastDespawnName;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int objectsPerUpdate;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool needBroadcasting;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool optimizeSpawn;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public int targetFPS;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool pooling;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool needDebugging;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[HideInInspector]
		public bool needSort;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[HideInInspector]
		public bool needParenting;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float normalValue;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Transform, List<Transform>> readyObjects;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<Transform, List<Transform>> occupiedObjects;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool installing;

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xABD914", Offset = "0xABD914", VA = "0xABD914")]
		public int GetTemplatesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xABD92C", Offset = "0xABD92C", VA = "0xABD92C")]
		private bool CheckForExistingTemplate(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xAB67D0", Offset = "0xAB67D0", VA = "0xAB67D0")]
		public bool Despawn(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xABDA04", Offset = "0xABDA04", VA = "0xABDA04")]
		public bool Despawn(Transform obj, Transform template)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xABDC3C", Offset = "0xABDC3C", VA = "0xABDC3C")]
		public int GetTemplatePosition(Transform obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xAB16E8", Offset = "0xAB16E8", VA = "0xAB16E8")]
		public Transform SpawnAudio(Transform obj, AudioClip clip, Vector3 pos, Transform par)
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xABDD14", Offset = "0xABDD14", VA = "0xABDD14")]
		public Transform Spawn(Transform obj, Transform par, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xABA1D0", Offset = "0xABA1D0", VA = "0xABA1D0")]
		public Transform Spawn(Transform obj, Vector3 pos, Quaternion rot, Transform par)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xABE2B8", Offset = "0xABE2B8", VA = "0xABE2B8")]
		public Transform Spawn(Transform obj, [Optional] Vector3 pos, [Optional] Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xABE7F8", Offset = "0xABE7F8", VA = "0xABE7F8")]
		public void SetTemplates(Transform[] newArray)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xABE800", Offset = "0xABE800", VA = "0xABE800")]
		public void SetLength(int[] newPoolLenght)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xABE808", Offset = "0xABE808", VA = "0xABE808")]
		public void SetLengthMax(int[] newPoolLengthMax)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xABE810", Offset = "0xABE810", VA = "0xABE810")]
		private void CalculateObjectsPerUpdate()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xABE874", Offset = "0xABE874", VA = "0xABE874")]
		private void DelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xABEB74", Offset = "0xABEB74", VA = "0xABEB74")]
		private void NonDelayedSpawnInInstall()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xABEC6C", Offset = "0xABEC6C", VA = "0xABEC6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xABE994", Offset = "0xABE994", VA = "0xABE994")]
		private Transform InstantiateItem(Transform temp, Transform par, int templatePosition)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xABECBC", Offset = "0xABECBC", VA = "0xABECBC")]
		public void Install()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xABEFC0", Offset = "0xABEFC0", VA = "0xABEFC0")]
		public F3DPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F4")]
	public class F3DPoolContainer
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string poolName;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] templates;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] poolLength;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] poolLengthMax;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string broadcastSpawnName;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string broadcastDespawnName;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool delayedSpawnInInstall;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int objectsPerUpdate;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool needBroadcasting;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool optimizeSpawn;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int targetFPS;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool pooling;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool needSort;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool needParenting;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool needDebug;

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xABF180", Offset = "0xABF180", VA = "0xABF180")]
		public F3DPoolContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F5")]
	public class F3DPoolManager : MonoBehaviour
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static F3DPoolManager instance;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, F3DPool> Pools;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string databaseName;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int selectedItem;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] haveToShowArr;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<F3DPool> curPools;

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xABF294", Offset = "0xABF294", VA = "0xABF294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xABF9A8", Offset = "0xABF9A8", VA = "0xABF9A8")]
		public F3DPool GetPool(string valueName)
		{
			return null;
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xABF30C", Offset = "0xABF30C", VA = "0xABF30C")]
		private void InstallManager()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xABFAB0", Offset = "0xABFAB0", VA = "0xABFAB0")]
		public int GetPoolsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xABFB04", Offset = "0xABFB04", VA = "0xABFB04")]
		public F3DPoolManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public class F3DPoolManagerDB : ScriptableObject
	{
		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> poolsName;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<F3DPoolContainer> pools;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string namer;

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xABFC10", Offset = "0xABFC10", VA = "0xABFC10")]
		public F3DPoolManagerDB()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20002F7")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xC9FE34", Offset = "0xC9FE34", VA = "0xC9FE34")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xCA0D44", Offset = "0xCA0D44", VA = "0xCA0D44")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xCA842C", Offset = "0xCA842C", VA = "0xCA842C")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xCA8460", Offset = "0xCA8460", VA = "0xCA8460")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000498")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000499")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001F0D")]
			DepthTexture,
			[Token(Token = "0x4001F0E")]
			DepthNormalsTexture,
			[Token(Token = "0x4001F0F")]
			GBuffer
		}

		[Token(Token = "0x40018B6")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x40018B7")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000145")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x901C9C", Offset = "0x901C9C", VA = "0x901C9C")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000146")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x901D48", Offset = "0x901D48", VA = "0x901D48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		public override bool active
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x901DE0", Offset = "0x901DE0", VA = "0x901DE0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x901E5C", Offset = "0x901E5C", VA = "0x901E5C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x901E98", Offset = "0x901E98", VA = "0x901E98", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x901EE0", Offset = "0x901EE0", VA = "0x901EE0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x901F44", Offset = "0x901F44", VA = "0x901F44", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x902900", Offset = "0x902900", VA = "0x902900")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x200049A")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x40018B9")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000148")]
		public override bool active
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xC97508", Offset = "0xC97508", VA = "0xC97508", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xC97584", Offset = "0xC97584", VA = "0xC97584")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xC98444", Offset = "0xC98444", VA = "0xC98444")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x200049B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x200049C")]
		private enum Pass
		{
			[Token(Token = "0x4001F22")]
			Depth,
			[Token(Token = "0x4001F23")]
			Normals,
			[Token(Token = "0x4001F24")]
			MovecOpacity,
			[Token(Token = "0x4001F25")]
			MovecImaging,
			[Token(Token = "0x4001F26")]
			MovecArrows
		}

		[Token(Token = "0x200049D")]
		private class ArrowArray
		{
			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635054", Offset = "0x635054")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635064", Offset = "0x635064")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x635074", Offset = "0x635074")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x17000258")]
			public Mesh mesh
			{
				[Token(Token = "0x6001F14")]
				[Address(RVA = "0xC9992C", Offset = "0xC9992C", VA = "0xC9992C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D87C", Offset = "0x63D87C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F15")]
				[Address(RVA = "0xC99934", Offset = "0xC99934", VA = "0xC99934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D88C", Offset = "0x63D88C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000259")]
			public int columnCount
			{
				[Token(Token = "0x6001F16")]
				[Address(RVA = "0xC9993C", Offset = "0xC9993C", VA = "0xC9993C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D89C", Offset = "0x63D89C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001F17")]
				[Address(RVA = "0xC99944", Offset = "0xC99944", VA = "0xC99944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D8AC", Offset = "0x63D8AC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700025A")]
			public int rowCount
			{
				[Token(Token = "0x6001F18")]
				[Address(RVA = "0xC9994C", Offset = "0xC9994C", VA = "0xC9994C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D8BC", Offset = "0x63D8BC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001F19")]
				[Address(RVA = "0xC99954", Offset = "0xC99954", VA = "0xC99954")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63D8CC", Offset = "0x63D8CC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xC99438", Offset = "0xC99438", VA = "0xC99438")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xC99408", Offset = "0xC99408", VA = "0xC99408")]
			public void Release()
			{
			}

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xC99400", Offset = "0xC99400", VA = "0xC99400")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x40018BC")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x17000149")]
		public override bool active
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xC98888", Offset = "0xC98888", VA = "0xC98888", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC98904", Offset = "0xC98904", VA = "0xC98904", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xC98974", Offset = "0xC98974", VA = "0xC98974", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xC989D4", Offset = "0xC989D4", VA = "0xC989D4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xC98A1C", Offset = "0xC98A1C", VA = "0xC98A1C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xC98B54", Offset = "0xC98B54", VA = "0xC98B54")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xC98C68", Offset = "0xC98C68", VA = "0xC98C68")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xC98D28", Offset = "0xC98D28", VA = "0xC98D28")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xC992F0", Offset = "0xC992F0", VA = "0xC992F0")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xC99894", Offset = "0xC99894", VA = "0xC99894", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xC998DC", Offset = "0xC998DC", VA = "0xC998DC")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x200049E")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x1700014A")]
		public override bool active
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xC99C04", Offset = "0xC99C04", VA = "0xC99C04", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC99C80", Offset = "0xC99C80", VA = "0xC99C80", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC99CB0", Offset = "0xC99CB0", VA = "0xC99CB0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xC99F74", Offset = "0xC99F74", VA = "0xC99F74")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x200049F")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x40018BF")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x40018C0")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x40018C1")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x1700014B")]
		public override bool active
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xC9A158", Offset = "0xC9A158", VA = "0xC9A158", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xC9A1C8", Offset = "0xC9A1C8", VA = "0xC9A1C8")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xC9A1F4", Offset = "0xC9A1F4", VA = "0xC9A1F4")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xC9A2B4", Offset = "0xC9A2B4", VA = "0xC9A2B4")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xC9A3A8", Offset = "0xC9A3A8", VA = "0xC9A3A8")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC9A49C", Offset = "0xC9A49C", VA = "0xC9A49C")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xC9A598", Offset = "0xC9A598", VA = "0xC9A598")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xC9A624", Offset = "0xC9A624", VA = "0xC9A624")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xC9A7A4", Offset = "0xC9A7A4", VA = "0xC9A7A4")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xC9A8D4", Offset = "0xC9A8D4", VA = "0xC9A8D4")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xC9A97C", Offset = "0xC9A97C", VA = "0xC9A97C")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xC9AA20", Offset = "0xC9AA20", VA = "0xC9AA20")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xC9AB88", Offset = "0xC9AB88", VA = "0xC9AB88")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xC9AC24", Offset = "0xC9AC24", VA = "0xC9AC24")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xC9ACCC", Offset = "0xC9ACCC", VA = "0xC9ACCC")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xC9AD00", Offset = "0xC9AD00", VA = "0xC9AD00")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xC9B2CC", Offset = "0xC9B2CC", VA = "0xC9B2CC")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xC9B378", Offset = "0xC9B378", VA = "0xC9B378")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xC9B3A8", Offset = "0xC9B3A8", VA = "0xC9B3A8")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xC9BC30", Offset = "0xC9BC30", VA = "0xC9BC30", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xC9BE70", Offset = "0xC9BE70", VA = "0xC9BE70")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xC9BFB8", Offset = "0xC9BFB8", VA = "0xC9BFB8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xC9C03C", Offset = "0xC9C03C", VA = "0xC9C03C")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x20004A0")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x40018C4")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x40018C6")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x1700014C")]
		public override bool active
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xC9CFC4", Offset = "0xC9CFC4", VA = "0xC9CFC4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xC9D034", Offset = "0xC9D034", VA = "0xC9D034", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xC9D03C", Offset = "0xC9D03C", VA = "0xC9D03C")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xC9D108", Offset = "0xC9D108", VA = "0xC9D108")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xC9D1B4", Offset = "0xC9D1B4", VA = "0xC9D1B4")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xC9D294", Offset = "0xC9D294", VA = "0xC9D294")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xC9D2E4", Offset = "0xC9D2E4", VA = "0xC9D2E4")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xC9DB0C", Offset = "0xC9DB0C", VA = "0xC9DB0C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xC9DB9C", Offset = "0xC9DB9C", VA = "0xC9DB9C")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x20004A1")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x40018C9")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x1700014D")]
		public override bool active
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xC9DE40", Offset = "0xC9DE40", VA = "0xC9DE40", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xC9DEB0", Offset = "0xC9DEB0", VA = "0xC9DEB0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xC9DEBC", Offset = "0xC9DEBC", VA = "0xC9DEBC")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xC9DFFC", Offset = "0xC9DFFC", VA = "0xC9DFFC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xC9E1D8", Offset = "0xC9E1D8", VA = "0xC9E1D8")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x20004A2")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x40018D2")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x40018D3")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x40018D4")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x1700014E")]
		public override bool active
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xC9E2D8", Offset = "0xC9E2D8", VA = "0xC9E2D8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xC9E354", Offset = "0xC9E354", VA = "0xC9E354")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xC9E360", Offset = "0xC9E360", VA = "0xC9E360", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xC9E36C", Offset = "0xC9E36C", VA = "0xC9E36C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xC9E47C", Offset = "0xC9E47C", VA = "0xC9E47C")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xC9E5A0", Offset = "0xC9E5A0", VA = "0xC9E5A0")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xC9EF8C", Offset = "0xC9EF8C", VA = "0xC9EF8C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xC9F108", Offset = "0xC9F108", VA = "0xC9F108")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x20004A3")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x40018D5")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x1700014F")]
		public override bool active
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xC9F388", Offset = "0xC9F388", VA = "0xC9F388", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xC9F414", Offset = "0xC9F414", VA = "0xC9F414", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xC9F45C", Offset = "0xC9F45C", VA = "0xC9F45C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xC9F464", Offset = "0xC9F464", VA = "0xC9F464", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xC9F46C", Offset = "0xC9F46C", VA = "0xC9F46C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xC9F91C", Offset = "0xC9F91C", VA = "0xC9F91C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20004A4")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x17000150")]
		public override bool active
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xC9FA84", Offset = "0xC9FA84", VA = "0xC9FA84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xC9FAFC", Offset = "0xC9FAFC", VA = "0xC9FAFC")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xC9FD60", Offset = "0xC9FD60", VA = "0xC9FD60")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x20004A5")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x17000151")]
		public override bool active
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xC9FE68", Offset = "0xC9FE68", VA = "0xC9FE68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xC9FEF4", Offset = "0xC9FEF4", VA = "0xC9FEF4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xC9FF24", Offset = "0xC9FF24", VA = "0xC9FF24", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xCA0300", Offset = "0xCA0300", VA = "0xCA0300")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x20004A6")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x20004A7")]
		private enum Pass
		{
			[Token(Token = "0x4001F79")]
			VelocitySetup,
			[Token(Token = "0x4001F7A")]
			TileMax1,
			[Token(Token = "0x4001F7B")]
			TileMax2,
			[Token(Token = "0x4001F7C")]
			TileMaxV,
			[Token(Token = "0x4001F7D")]
			NeighborMax,
			[Token(Token = "0x4001F7E")]
			Reconstruction,
			[Token(Token = "0x4001F7F")]
			FrameCompression,
			[Token(Token = "0x4001F80")]
			FrameBlendingChroma,
			[Token(Token = "0x4001F81")]
			FrameBlendingRaw
		}

		[Token(Token = "0x20004A8")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xCA0DEC", Offset = "0xCA0DEC", VA = "0xCA0DEC")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xCA2F04", Offset = "0xCA2F04", VA = "0xCA2F04")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xCA0FE8", Offset = "0xCA0FE8", VA = "0xCA0FE8")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0xCA170C", Offset = "0xCA170C", VA = "0xCA170C")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x20004A9")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x200050F")]
			private struct Frame
			{
				[Token(Token = "0x4002102")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4002103")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4002104")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4002105")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6002009")]
				[Address(RVA = "0x6C0274", Offset = "0x6C0274", VA = "0x6C0274")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x600200A")]
				[Address(RVA = "0x6C027C", Offset = "0x6C027C", VA = "0x6C027C")]
				public void Release()
				{
				}

				[Token(Token = "0x600200B")]
				[Address(RVA = "0x6C0284", Offset = "0x6C0284", VA = "0x6C0284")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x600200C")]
				[Address(RVA = "0x6C02B8", Offset = "0x6C02B8", VA = "0x6C02B8")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xCA0EA4", Offset = "0xCA0EA4", VA = "0xCA0EA4")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xCA106C", Offset = "0xCA106C", VA = "0xCA106C")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xCA25BC", Offset = "0xCA25BC", VA = "0xCA25BC")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xCA205C", Offset = "0xCA205C", VA = "0xCA205C")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xCA2758", Offset = "0xCA2758", VA = "0xCA2758")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xCA2790", Offset = "0xCA2790", VA = "0xCA2790")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xCA2DA8", Offset = "0xCA2DA8", VA = "0xCA2DA8")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x17000152")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xCA0D78", Offset = "0xCA0D78", VA = "0xCA0D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xCA0E30", Offset = "0xCA0E30", VA = "0xCA0E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public override bool active
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xCA0F24", Offset = "0xCA0F24", VA = "0xCA0F24", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xCA0FF0", Offset = "0xCA0FF0", VA = "0xCA0FF0", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xCA1038", Offset = "0xCA1038", VA = "0xCA1038")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xCA10F4", Offset = "0xCA10F4", VA = "0xCA10F4", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xCA10FC", Offset = "0xCA10FC", VA = "0xCA10FC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xCA1104", Offset = "0xCA1104", VA = "0xCA1104", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xCA1110", Offset = "0xCA1110", VA = "0xCA1110", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xCA26F0", Offset = "0xCA26F0", VA = "0xCA26F0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xCA2700", Offset = "0xCA2700", VA = "0xCA2700")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x20004AA")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x20004AB")]
		private enum PassIndex
		{
			[Token(Token = "0x4001FAC")]
			RayTraceStep,
			[Token(Token = "0x4001FAD")]
			CompositeFinal,
			[Token(Token = "0x4001FAE")]
			Blur,
			[Token(Token = "0x4001FAF")]
			CompositeSSR,
			[Token(Token = "0x4001FB0")]
			MinMipGeneration,
			[Token(Token = "0x4001FB1")]
			HitPointToReflections,
			[Token(Token = "0x4001FB2")]
			BilateralKeyPack,
			[Token(Token = "0x4001FB3")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001FB4")]
			PoissonBlur
		}

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x17000155")]
		public override bool active
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xCA6044", Offset = "0xCA6044", VA = "0xCA6044", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xCA603C", Offset = "0xCA603C", VA = "0xCA603C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xCA60C4", Offset = "0xCA60C4", VA = "0xCA60C4", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xCA61EC", Offset = "0xCA61EC", VA = "0xCA61EC", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xCA6234", Offset = "0xCA6234", VA = "0xCA6234", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xCA623C", Offset = "0xCA623C", VA = "0xCA623C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xCA39D4", Offset = "0xCA39D4", VA = "0xCA39D4")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20004AC")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x40018DF")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x40018E0")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634BB4", Offset = "0x634BB4")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x17000156")]
		public override bool active
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xCA7A88", Offset = "0xCA7A88", VA = "0xCA7A88", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000157")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xCA7B28", Offset = "0xCA7B28", VA = "0xCA7B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C1DC", Offset = "0x63C1DC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xCA7B30", Offset = "0xCA7B30", VA = "0xCA7B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C1EC", Offset = "0x63C1EC")]
			private set
			{
			}
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xCA7B20", Offset = "0xCA7B20", VA = "0xCA7B20", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xCA5A44", Offset = "0xCA5A44", VA = "0xCA5A44")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xCA44E4", Offset = "0xCA44E4", VA = "0xCA44E4")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xCA5000", Offset = "0xCA5000", VA = "0xCA5000")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xCA8258", Offset = "0xCA8258", VA = "0xCA8258")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xCA7B38", Offset = "0xCA7B38", VA = "0xCA7B38")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCA7C00", Offset = "0xCA7C00", VA = "0xCA7C00")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xCA80C4", Offset = "0xCA80C4", VA = "0xCA80C4")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xCA829C", Offset = "0xCA829C", VA = "0xCA829C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xCA3A54", Offset = "0xCA3A54", VA = "0xCA3A54")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x20004AD")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x17000158")]
		public override bool active
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xCA8468", Offset = "0xCA8468", VA = "0xCA8468", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xCA8598", Offset = "0xCA8598", VA = "0xCA8598", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xCA56F8", Offset = "0xCA56F8", VA = "0xCA56F8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xCA3AD0", Offset = "0xCA3AD0", VA = "0xCA3AD0")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x20004AE")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000159")]
		public override bool active
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xCA8818", Offset = "0xCA8818", VA = "0xCA8818", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xCA8888", Offset = "0xCA8888", VA = "0xCA8888", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xCA3B20", Offset = "0xCA3B20", VA = "0xCA3B20")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030B")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x20004AF")]
		public enum SampleCount
		{
			[Token(Token = "0x4001FC2")]
			Lowest = 3,
			[Token(Token = "0x4001FC3")]
			Low = 6,
			[Token(Token = "0x4001FC4")]
			Medium = 10,
			[Token(Token = "0x4001FC5")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x20004B0")]
		public struct Settings
		{
			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635084", Offset = "0x635084")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635084", Offset = "0x635084")]
			public float intensity;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x6350D8", Offset = "0x6350D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6350D8", Offset = "0x6350D8")]
			public float radius;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63512C", Offset = "0x63512C")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635164", Offset = "0x635164")]
			public bool downsampling;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63519C", Offset = "0x63519C")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6351D4", Offset = "0x6351D4")]
			public bool ambientOnly;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63520C", Offset = "0x63520C")]
			public bool highPrecision;

			[Token(Token = "0x1700025B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F35")]
				[Address(RVA = "0x902BC8", Offset = "0x902BC8", VA = "0x902BC8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015A")]
		public Settings settings
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x902B9C", Offset = "0x902B9C", VA = "0x902B9C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x902BAC", Offset = "0x902BAC", VA = "0x902BAC")]
			set
			{
			}
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x902BB8", Offset = "0x902BB8", VA = "0x902BB8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x902BE0", Offset = "0x902BE0", VA = "0x902BE0")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030C")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x20004B1")]
		public enum Method
		{
			[Token(Token = "0x4001FCE")]
			Fxaa,
			[Token(Token = "0x4001FCF")]
			Taa
		}

		[Token(Token = "0x20004B2")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001FD1")]
			ExtremePerformance,
			[Token(Token = "0x4001FD2")]
			Performance,
			[Token(Token = "0x4001FD3")]
			Default,
			[Token(Token = "0x4001FD4")]
			Quality,
			[Token(Token = "0x4001FD5")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x20004B3")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635244", Offset = "0x635244")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635244", Offset = "0x635244")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635298", Offset = "0x635298")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635298", Offset = "0x635298")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6352F4", Offset = "0x6352F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6352F4", Offset = "0x6352F4")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20004B4")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63534C", Offset = "0x63534C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63534C", Offset = "0x63534C")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6353A4", Offset = "0x6353A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6353A4", Offset = "0x6353A4")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6353F8", Offset = "0x6353F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6353F8", Offset = "0x6353F8")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63544C", Offset = "0x63544C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63544C", Offset = "0x63544C")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20004B5")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x1700025C")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6001F38")]
				[Address(RVA = "0xC974E0", Offset = "0xC974E0", VA = "0xC974E0")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6354A8", Offset = "0x6354A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6354A8", Offset = "0x6354A8")]
			public float jitterSpread;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635500", Offset = "0x635500")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635500", Offset = "0x635500")]
			public float sharpen;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635554", Offset = "0x635554")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635554", Offset = "0x635554")]
			public float stationaryBlending;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6355AC", Offset = "0x6355AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6355AC", Offset = "0x6355AC")]
			public float motionBlending;

			[Token(Token = "0x1700025D")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6001F39")]
				[Address(RVA = "0xC974E8", Offset = "0xC974E8", VA = "0xC974E8")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004B7")]
		public struct Settings
		{
			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x1700025E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F3A")]
				[Address(RVA = "0xC972B0", Offset = "0xC972B0", VA = "0xC972B0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015B")]
		public Settings settings
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xC9726C", Offset = "0xC9726C", VA = "0xC9726C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xC97280", Offset = "0xC97280", VA = "0xC97280")]
			set
			{
			}
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xC97294", Offset = "0xC97294", VA = "0xC97294", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xC972CC", Offset = "0xC972CC", VA = "0xC972CC")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030D")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004B8")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x635604", Offset = "0x635604")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635604", Offset = "0x635604")]
			public float intensity;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x635654", Offset = "0x635654")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635654", Offset = "0x635654")]
			public float threshold;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6356A4", Offset = "0x6356A4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6356A4", Offset = "0x6356A4")]
			public float softKnee;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6356F8", Offset = "0x6356F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6356F8", Offset = "0x6356F8")]
			public float radius;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63574C", Offset = "0x63574C")]
			public bool antiFlicker;

			[Token(Token = "0x1700025F")]
			public float thresholdLinear
			{
				[Token(Token = "0x6001F3C")]
				[Address(RVA = "0x6BFF64", Offset = "0x6BFF64", VA = "0x6BFF64")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F3B")]
				[Address(RVA = "0x6BFF5C", Offset = "0x6BFF5C", VA = "0x6BFF5C")]
				set
				{
				}
			}

			[Token(Token = "0x17000260")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001F3D")]
				[Address(RVA = "0xC98838", Offset = "0xC98838", VA = "0xC98838")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635784", Offset = "0x635784")]
			public Texture texture;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x6357BC", Offset = "0x6357BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6357BC", Offset = "0x6357BC")]
			public float intensity;

			[Token(Token = "0x17000261")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0xC98854", Offset = "0xC98854", VA = "0xC98854")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public struct Settings
		{
			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000262")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F3F")]
				[Address(RVA = "0xC986E0", Offset = "0xC986E0", VA = "0xC986E0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015C")]
		public Settings settings
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xC98658", Offset = "0xC98658", VA = "0xC98658")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xC98670", Offset = "0xC98670", VA = "0xC98670")]
			set
			{
			}
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xC98694", Offset = "0xC98694", VA = "0xC98694", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xC98764", Offset = "0xC98764", VA = "0xC98764")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030E")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004BB")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63580C", Offset = "0x63580C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63580C", Offset = "0x63580C")]
			public float scale;

			[Token(Token = "0x17000263")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001F40")]
				[Address(RVA = "0xC99BE0", Offset = "0xC99BE0", VA = "0xC99BE0")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635860", Offset = "0x635860")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635860", Offset = "0x635860")]
			public float sourceOpacity;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6358B4", Offset = "0x6358B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6358B4", Offset = "0x6358B4")]
			public float motionImageOpacity;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x635908", Offset = "0x635908")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635908", Offset = "0x635908")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635958", Offset = "0x635958")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635958", Offset = "0x635958")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6359AC", Offset = "0x6359AC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6359AC", Offset = "0x6359AC")]
			public int motionVectorsResolution;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x635A04", Offset = "0x635A04")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A04", Offset = "0x635A04")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x17000264")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6001F41")]
				[Address(RVA = "0xC99BE8", Offset = "0xC99BE8", VA = "0xC99BE8")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x20004BD")]
		public enum Mode
		{
			[Token(Token = "0x4001FF8")]
			None,
			[Token(Token = "0x4001FF9")]
			Depth,
			[Token(Token = "0x4001FFA")]
			Normals,
			[Token(Token = "0x4001FFB")]
			MotionVectors,
			[Token(Token = "0x4001FFC")]
			AmbientOcclusion,
			[Token(Token = "0x4001FFD")]
			EyeAdaptation,
			[Token(Token = "0x4001FFE")]
			FocusPlane,
			[Token(Token = "0x4001FFF")]
			PreGradingLog,
			[Token(Token = "0x4002000")]
			LogLut,
			[Token(Token = "0x4002001")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x20004BE")]
		public struct Settings
		{
			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x17000265")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F42")]
				[Address(RVA = "0xC99B8C", Offset = "0xC99B8C", VA = "0xC99B8C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015D")]
		public Settings settings
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0xC99B20", Offset = "0xC99B20", VA = "0xC99B20")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xC99B30", Offset = "0xC99B30", VA = "0xC99B30")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool willInterrupt
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xC99B40", Offset = "0xC99B40", VA = "0xC99B40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xC99B64", Offset = "0xC99B64", VA = "0xC99B64", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xC988F4", Offset = "0xC988F4", VA = "0xC988F4")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xC99BB4", Offset = "0xC99BB4", VA = "0xC99BB4")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030F")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004BF")]
		public struct Settings
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A54", Offset = "0x635A54")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635A8C", Offset = "0x635A8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635A8C", Offset = "0x635A8C")]
			public float intensity;

			[Token(Token = "0x17000266")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F43")]
				[Address(RVA = "0xC9A0BC", Offset = "0xC9A0BC", VA = "0xC9A0BC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700015F")]
		public Settings settings
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0xC9A048", Offset = "0xC9A048", VA = "0xC9A048")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xC9A054", Offset = "0xC9A054", VA = "0xC9A054")]
			set
			{
			}
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xC9A064", Offset = "0xC9A064", VA = "0xC9A064", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xC9A0F4", Offset = "0xC9A0F4", VA = "0xC9A0F4")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000310")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x20004C0")]
		public enum Tonemapper
		{
			[Token(Token = "0x4002008")]
			None,
			[Token(Token = "0x4002009")]
			ACES,
			[Token(Token = "0x400200A")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x20004C1")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635AE0", Offset = "0x635AE0")]
			public Tonemapper tonemapper;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635B18", Offset = "0x635B18")]
			public float neutralBlackIn;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635B38", Offset = "0x635B38")]
			public float neutralWhiteIn;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635B50", Offset = "0x635B50")]
			public float neutralBlackOut;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635B70", Offset = "0x635B70")]
			public float neutralWhiteOut;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635B88", Offset = "0x635B88")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635BA4", Offset = "0x635BA4")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000267")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6001F44")]
				[Address(RVA = "0xC9CF9C", Offset = "0xC9CF9C", VA = "0xC9CF9C")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C2")]
		public struct BasicSettings
		{
			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635BBC", Offset = "0x635BBC")]
			public float postExposure;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635BF4", Offset = "0x635BF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635BF4", Offset = "0x635BF4")]
			public float temperature;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635C50", Offset = "0x635C50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635C50", Offset = "0x635C50")]
			public float tint;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635CAC", Offset = "0x635CAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635CAC", Offset = "0x635CAC")]
			public float hueShift;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635D08", Offset = "0x635D08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635D08", Offset = "0x635D08")]
			public float saturation;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635D5C", Offset = "0x635D5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635D5C", Offset = "0x635D5C")]
			public float contrast;

			[Token(Token = "0x17000268")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6001F45")]
				[Address(RVA = "0xC9C668", Offset = "0xC9C668", VA = "0xC9C668")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C3")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000269")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001F46")]
				[Address(RVA = "0xC9C678", Offset = "0xC9C678", VA = "0xC9C678")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C4")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635DC0", Offset = "0x635DC0")]
			public Color slope;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635DF8", Offset = "0x635DF8")]
			public Color power;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635E30", Offset = "0x635E30")]
			public Color offset;

			[Token(Token = "0x1700026A")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001F47")]
				[Address(RVA = "0xC9C7C4", Offset = "0xC9C7C4", VA = "0xC9C7C4")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C5")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635E68", Offset = "0x635E68")]
			public Color lift;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635EA0", Offset = "0x635EA0")]
			public Color gamma;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x635ED8", Offset = "0x635ED8")]
			public Color gain;

			[Token(Token = "0x1700026B")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001F48")]
				[Address(RVA = "0xC9C850", Offset = "0xC9C850", VA = "0xC9C850")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x20004C6")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4002023")]
			Linear,
			[Token(Token = "0x4002024")]
			Log
		}

		[Serializable]
		[Token(Token = "0x20004C7")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x1700026C")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001F49")]
				[Address(RVA = "0xC9C748", Offset = "0xC9C748", VA = "0xC9C748")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C8")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x1700026D")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001F4A")]
				[Address(RVA = "0xC9C8DC", Offset = "0xC9C8DC", VA = "0xC9C8DC")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004C9")]
		public struct Settings
		{
			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700026E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F4B")]
				[Address(RVA = "0xC9C4BC", Offset = "0xC9C4BC", VA = "0xC9C4BC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634C24", Offset = "0x634C24")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634C34", Offset = "0x634C34")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x17000160")]
		public Settings settings
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xC9C3EC", Offset = "0xC9C3EC", VA = "0xC9C3EC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xC9C3FC", Offset = "0xC9C3FC", VA = "0xC9C3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool isDirty
		{
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xC9C43C", Offset = "0xC9C43C", VA = "0xC9C43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C1FC", Offset = "0x63C1FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xC9C444", Offset = "0xC9C444", VA = "0xC9C444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C20C", Offset = "0x63C20C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xC9C450", Offset = "0xC9C450", VA = "0xC9C450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C21C", Offset = "0x63C21C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xC9C458", Offset = "0xC9C458", VA = "0xC9C458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C22C", Offset = "0x63C22C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xC9C468", Offset = "0xC9C468", VA = "0xC9C468", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xC9C60C", Offset = "0xC9C60C", VA = "0xC9C60C", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xC9C618", Offset = "0xC9C618", VA = "0xC9C618")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000311")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20004CA")]
		public enum KernelSize
		{
			[Token(Token = "0x400203B")]
			Small,
			[Token(Token = "0x400203C")]
			Medium,
			[Token(Token = "0x400203D")]
			Large,
			[Token(Token = "0x400203E")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20004CB")]
		public struct Settings
		{
			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x635F80", Offset = "0x635F80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635F80", Offset = "0x635F80")]
			public float focusDistance;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x635FD4", Offset = "0x635FD4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x635FD4", Offset = "0x635FD4")]
			public float aperture;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636030", Offset = "0x636030")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636030", Offset = "0x636030")]
			public float focalLength;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636088", Offset = "0x636088")]
			public bool useCameraFov;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6360C0", Offset = "0x6360C0")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700026F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F4C")]
				[Address(RVA = "0xC9DDE4", Offset = "0xC9DDE4", VA = "0xC9DDE4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000163")]
		public Settings settings
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xC9DD90", Offset = "0xC9DD90", VA = "0xC9DD90")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xC9DDA4", Offset = "0xC9DDA4", VA = "0xC9DDA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xC9DDB8", Offset = "0xC9DDB8", VA = "0xC9DDB8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xC9DE10", Offset = "0xC9DE10", VA = "0xC9DE10")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000312")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		public struct Settings
		{
			[Token(Token = "0x17000270")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F4D")]
				[Address(RVA = "0xC9E2C4", Offset = "0xC9E2C4", VA = "0xC9E2C4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000164")]
		public Settings settings
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xC9E2AC", Offset = "0xC9E2AC", VA = "0xC9E2AC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xC9E2B4", Offset = "0xC9E2B4", VA = "0xC9E2B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xC9E2BC", Offset = "0xC9E2BC", VA = "0xC9E2BC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xC9E2CC", Offset = "0xC9E2CC", VA = "0xC9E2CC")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000313")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x20004CD")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4002045")]
			Progressive,
			[Token(Token = "0x4002046")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x20004CE")]
		public struct Settings
		{
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6360F8", Offset = "0x6360F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6360F8", Offset = "0x6360F8")]
			public float lowPercent;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636150", Offset = "0x636150")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636150", Offset = "0x636150")]
			public float highPercent;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6361A8", Offset = "0x6361A8")]
			public float minLuminance;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6361E0", Offset = "0x6361E0")]
			public float maxLuminance;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x636218", Offset = "0x636218")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636218", Offset = "0x636218")]
			public float keyValue;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636268", Offset = "0x636268")]
			public bool dynamicKeyValue;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6362A0", Offset = "0x6362A0")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x6362D8", Offset = "0x6362D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6362D8", Offset = "0x6362D8")]
			public float speedUp;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x636328", Offset = "0x636328")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636328", Offset = "0x636328")]
			public float speedDown;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636378", Offset = "0x636378")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636378", Offset = "0x636378")]
			public int logMin;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6363CC", Offset = "0x6363CC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6363CC", Offset = "0x6363CC")]
			public int logMax;

			[Token(Token = "0x17000271")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F4E")]
				[Address(RVA = "0xC9F300", Offset = "0xC9F300", VA = "0xC9F300")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000165")]
		public Settings settings
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xC9F288", Offset = "0xC9F288", VA = "0xC9F288")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xC9F2A0", Offset = "0xC9F2A0", VA = "0xC9F2A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xC9F2C0", Offset = "0xC9F2C0", VA = "0xC9F2C0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xC9F344", Offset = "0xC9F344", VA = "0xC9F344")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000314")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004CF")]
		public struct Settings
		{
			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636420", Offset = "0x636420")]
			public bool excludeSkybox;

			[Token(Token = "0x17000272")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F4F")]
				[Address(RVA = "0xC9FA6C", Offset = "0xC9FA6C", VA = "0xC9FA6C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000166")]
		public Settings settings
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xC9FA50", Offset = "0xC9FA50", VA = "0xC9FA50")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xC9FA58", Offset = "0xC9FA58", VA = "0xC9FA58")]
			set
			{
			}
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xC9FA60", Offset = "0xC9FA60", VA = "0xC9FA60", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xC9FA74", Offset = "0xC9FA74", VA = "0xC9FA74")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000315")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004D0")]
		public struct Settings
		{
			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636458", Offset = "0x636458")]
			public bool colored;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636490", Offset = "0x636490")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636490", Offset = "0x636490")]
			public float intensity;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6364E4", Offset = "0x6364E4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6364E4", Offset = "0x6364E4")]
			public float size;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63653C", Offset = "0x63653C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63653C", Offset = "0x63653C")]
			public float luminanceContribution;

			[Token(Token = "0x17000273")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F50")]
				[Address(RVA = "0xCA0440", Offset = "0xCA0440", VA = "0xCA0440")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000167")]
		public Settings settings
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xCA0414", Offset = "0xCA0414", VA = "0xCA0414")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xCA0424", Offset = "0xCA0424", VA = "0xCA0424")]
			set
			{
			}
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xCA0430", Offset = "0xCA0430", VA = "0xCA0430", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xCA0458", Offset = "0xCA0458", VA = "0xCA0458")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004D1")]
		public struct Settings
		{
			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636590", Offset = "0x636590")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636590", Offset = "0x636590")]
			public float shutterAngle;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6365E8", Offset = "0x6365E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6365E8", Offset = "0x6365E8")]
			public int sampleCount;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636640", Offset = "0x636640")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636640", Offset = "0x636640")]
			public float frameBlending;

			[Token(Token = "0x17000274")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F51")]
				[Address(RVA = "0xCA32E8", Offset = "0xCA32E8", VA = "0xCA32E8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000168")]
		public Settings settings
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xCA32B8", Offset = "0xCA32B8", VA = "0xCA32B8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xCA32C8", Offset = "0xCA32C8", VA = "0xCA32C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xCA32D4", Offset = "0xCA32D4", VA = "0xCA32D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xCA32F8", Offset = "0xCA32F8", VA = "0xCA32F8")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000317")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x20004D2")]
		public enum SSRResolution
		{
			[Token(Token = "0x400205B")]
			High = 0,
			[Token(Token = "0x400205C")]
			Low = 2
		}

		[Token(Token = "0x20004D3")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x400205E")]
			PhysicallyBased,
			[Token(Token = "0x400205F")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x20004D4")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636694", Offset = "0x636694")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636694", Offset = "0x636694")]
			public float reflectionMultiplier;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6366E8", Offset = "0x6366E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6366E8", Offset = "0x6366E8")]
			public float fadeDistance;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636740", Offset = "0x636740")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636740", Offset = "0x636740")]
			public float fresnelFade;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636794", Offset = "0x636794")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636794", Offset = "0x636794")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x20004D5")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6367EC", Offset = "0x6367EC")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636824", Offset = "0x636824")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63685C", Offset = "0x63685C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x63685C", Offset = "0x63685C")]
			public float maxDistance;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6368B8", Offset = "0x6368B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6368B8", Offset = "0x6368B8")]
			public int iterationCount;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636910", Offset = "0x636910")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636910", Offset = "0x636910")]
			public int stepSize;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636964", Offset = "0x636964")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636964", Offset = "0x636964")]
			public float widthModifier;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6369BC", Offset = "0x6369BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6369BC", Offset = "0x6369BC")]
			public float reflectionBlur;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636A14", Offset = "0x636A14")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x20004D6")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636A4C", Offset = "0x636A4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636A4C", Offset = "0x636A4C")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x20004D7")]
		public struct Settings
		{
			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000275")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F52")]
				[Address(RVA = "0xCA7A34", Offset = "0xCA7A34", VA = "0xCA7A34")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000169")]
		public Settings settings
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xCA79A4", Offset = "0xCA79A4", VA = "0xCA79A4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xCA79C4", Offset = "0xCA79C4", VA = "0xCA79C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xCA79E4", Offset = "0xCA79E4", VA = "0xCA79E4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xCA5F28", Offset = "0xCA5F28", VA = "0xCA5F28")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000318")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		public struct Settings
		{
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636AA0", Offset = "0x636AA0")]
			public Texture2D lut;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636AD8", Offset = "0x636AD8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636AD8", Offset = "0x636AD8")]
			public float contribution;

			[Token(Token = "0x17000276")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F53")]
				[Address(RVA = "0xCA87E4", Offset = "0xCA87E4", VA = "0xCA87E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700016A")]
		public Settings settings
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xCA8774", Offset = "0xCA8774", VA = "0xCA8774")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xCA8780", Offset = "0xCA8780", VA = "0xCA8780")]
			set
			{
			}
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xCA8790", Offset = "0xCA8790", VA = "0xCA8790", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xCA5F7C", Offset = "0xCA5F7C", VA = "0xCA5F7C")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000319")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x20004D9")]
		public enum Mode
		{
			[Token(Token = "0x4002073")]
			Classic,
			[Token(Token = "0x4002074")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x20004DA")]
		public struct Settings
		{
			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636B2C", Offset = "0x636B2C")]
			public Mode mode;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x636B64", Offset = "0x636B64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636B64", Offset = "0x636B64")]
			public Color color;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636BB4", Offset = "0x636BB4")]
			public Vector2 center;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636BEC", Offset = "0x636BEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636BEC", Offset = "0x636BEC")]
			public float intensity;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636C40", Offset = "0x636C40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636C40", Offset = "0x636C40")]
			public float smoothness;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636C98", Offset = "0x636C98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636C98", Offset = "0x636C98")]
			public float roundness;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636CEC", Offset = "0x636CEC")]
			public Texture mask;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x636D24", Offset = "0x636D24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636D24", Offset = "0x636D24")]
			public float opacity;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x636D78", Offset = "0x636D78")]
			public bool rounded;

			[Token(Token = "0x17000277")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F54")]
				[Address(RVA = "0xCA8CD8", Offset = "0xCA8CD8", VA = "0xCA8CD8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700016B")]
		public Settings settings
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xCA8C38", Offset = "0xCA8C38", VA = "0xCA8C38")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xCA8C58", Offset = "0xCA8C58", VA = "0xCA8C58")]
			set
			{
			}
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xCA8C84", Offset = "0xCA8C84", VA = "0xCA8C84", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xCA5FDC", Offset = "0xCA5FDC", VA = "0xCA5FDC")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62E4A4", Offset = "0x62E4A4")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62E4A4", Offset = "0x62E4A4")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xCA3310", Offset = "0xCA3310", VA = "0xCA3310")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xCA3B70", Offset = "0xCA3B70", VA = "0xCA3B70")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xCA47AC", Offset = "0xCA47AC", VA = "0xCA47AC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xCA48AC", Offset = "0xCA48AC", VA = "0xCA48AC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xCA49D4", Offset = "0xCA49D4", VA = "0xCA49D4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xCA5544", Offset = "0xCA5544", VA = "0xCA5544")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xCA5824", Offset = "0xCA5824", VA = "0xCA5824")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xCA59F8", Offset = "0xCA59F8", VA = "0xCA59F8")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xCA4234", Offset = "0xCA4234", VA = "0xCA4234")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xCA4114", Offset = "0xCA4114", VA = "0xCA4114")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6001A35")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6001A36")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6001A37")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6001A39")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xCA5A50", Offset = "0xCA5A50", VA = "0xCA5A50")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x1700016C")]
		public abstract bool active
		{
			[Token(Token = "0x6001A3D")]
			get;
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xCA5AF8", Offset = "0xCA5AF8", VA = "0xCA5AF8", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xCA5B00", Offset = "0xCA5B00", VA = "0xCA5B00", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xCA5B04", Offset = "0xCA5B04", VA = "0xCA5B04", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A40")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xCA5B08", Offset = "0xCA5B08", VA = "0xCA5B08")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634CD4", Offset = "0x634CD4")]
		private T <model>k__BackingField;

		[Token(Token = "0x1700016D")]
		public T model
		{
			[Token(Token = "0x6001A42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C23C", Offset = "0x63C23C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C24C", Offset = "0x63C24C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001A44")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6001A45")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6001A46")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6001A47")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6001A48")]
		public abstract string GetName();

		[Token(Token = "0x6001A49")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6001A4A")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6001A4B")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6001A4C")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x634CE4", Offset = "0x634CE4")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x1700016E")]
		public bool interrupted
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xCA5B10", Offset = "0xCA5B10", VA = "0xCA5B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C25C", Offset = "0x63C25C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xCA5B18", Offset = "0xCA5B18", VA = "0xCA5B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x63C26C", Offset = "0x63C26C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xC98B28", Offset = "0xC98B28", VA = "0xC98B28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public bool isHdr
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xC9F900", Offset = "0xC9F900", VA = "0xC9F900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public int width
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xC98178", Offset = "0xC98178", VA = "0xC98178")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		public int height
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xC98194", Offset = "0xC98194", VA = "0xC98194")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000173")]
		public Rect viewport
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xC9BF9C", Offset = "0xC9BF9C", VA = "0xC9BF9C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC992E4", Offset = "0xC992E4", VA = "0xC992E4")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xCA40B4", Offset = "0xCA40B4", VA = "0xCA40B4")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xCA39CC", Offset = "0xCA39CC", VA = "0xCA39CC")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x634CF4", Offset = "0x634CF4")]
		private bool m_Enabled;

		[Token(Token = "0x17000174")]
		public bool enabled
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xCA5B24", Offset = "0xCA5B24", VA = "0xCA5B24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xCA5B2C", Offset = "0xCA5B2C", VA = "0xCA5B2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A59")]
		public abstract void Reset();

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xCA5B48", Offset = "0xCA5B48", VA = "0xCA5B48", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC972EC", Offset = "0xC972EC", VA = "0xC972EC")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xCA5B4C", Offset = "0xCA5B4C", VA = "0xCA5B4C")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000322")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC9C374", Offset = "0xC9C374", VA = "0xC9C374")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xC9B04C", Offset = "0xC9B04C", VA = "0xC9B04C")]
		public void Cache()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC9B240", Offset = "0xC9B240", VA = "0xC9B240")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000323")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x17000175")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xC9F8E0", Offset = "0xC9F8E0", VA = "0xC9F8E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000176")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xCA046C", Offset = "0xCA046C", VA = "0xCA046C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xCA049C", Offset = "0xCA049C", VA = "0xCA049C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public static Mesh quad
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xCA05DC", Offset = "0xCA05DC", VA = "0xCA05DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xCA0924", Offset = "0xCA0924", VA = "0xCA0924")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xCA0A28", Offset = "0xCA0A28", VA = "0xCA0A28")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC9995C", Offset = "0xC9995C", VA = "0xC9995C")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xCA0BC4", Offset = "0xCA0BC4", VA = "0xCA0BC4")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xCA0C14", Offset = "0xCA0C14", VA = "0xCA0C14")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xC97FA8", Offset = "0xC97FA8", VA = "0xC97FA8")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xCA0C90", Offset = "0xCA0C90", VA = "0xCA0C90", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xCA3950", Offset = "0xCA3950", VA = "0xCA3950")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xCA4EE0", Offset = "0xCA4EE0", VA = "0xCA4EE0")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xC98224", Offset = "0xC98224", VA = "0xC98224")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xC98318", Offset = "0xC98318", VA = "0xC98318")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xCA5494", Offset = "0xCA5494", VA = "0xCA5494")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xCA59F4", Offset = "0xCA59F4", VA = "0xCA59F4", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace UnityEngine.AI
{
	[Token(Token = "0x2000326")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E560", Offset = "0x62E560")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62E560", Offset = "0x62E560")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62E560", Offset = "0x62E560")]
	public class NavMeshLink : MonoBehaviour
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_StartPoint;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_EndPoint;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_Width;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_CostModifier;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_Bidirectional;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_AutoUpdatePosition;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private NavMeshLinkInstance m_LinkInstance;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshLink> s_Tracked;

		[Token(Token = "0x17000179")]
		public int agentTypeID
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x8FDE30", Offset = "0x8FDE30", VA = "0x8FDE30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x8FDE38", Offset = "0x8FDE38", VA = "0x8FDE38")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public Vector3 startPoint
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x8FDE94", Offset = "0x8FDE94", VA = "0x8FDE94")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x8FDEA0", Offset = "0x8FDEA0", VA = "0x8FDEA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public Vector3 endPoint
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x8FDED4", Offset = "0x8FDED4", VA = "0x8FDED4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x8FDEE0", Offset = "0x8FDEE0", VA = "0x8FDEE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public float width
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x8FDF14", Offset = "0x8FDF14", VA = "0x8FDF14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x8FDF1C", Offset = "0x8FDF1C", VA = "0x8FDF1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public int costModifier
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x8FDF4C", Offset = "0x8FDF4C", VA = "0x8FDF4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x8FDF54", Offset = "0x8FDF54", VA = "0x8FDF54")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool bidirectional
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x8FDF84", Offset = "0x8FDF84", VA = "0x8FDF84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x8FDF8C", Offset = "0x8FDF8C", VA = "0x8FDF8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool autoUpdate
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x8FDFC0", Offset = "0x8FDFC0", VA = "0x8FDFC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x8FDFC8", Offset = "0x8FDFC8", VA = "0x8FDFC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public int area
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x8FE094", Offset = "0x8FE094", VA = "0x8FE094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x8FE09C", Offset = "0x8FE09C", VA = "0x8FE09C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x8FE0CC", Offset = "0x8FE0CC", VA = "0x8FE0CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x8FE468", Offset = "0x8FE468", VA = "0x8FE468")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x8FDE68", Offset = "0x8FDE68", VA = "0x8FDE68")]
		public void UpdateLink()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x8FE31C", Offset = "0x8FE31C", VA = "0x8FE31C")]
		private static void AddTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x8FE4D8", Offset = "0x8FE4D8", VA = "0x8FE4D8")]
		private static void RemoveTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x8FDFD0", Offset = "0x8FDFD0", VA = "0x8FDFD0")]
		private void SetAutoUpdate(bool value)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x8FE15C", Offset = "0x8FE15C", VA = "0x8FE15C")]
		private void AddLink()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x8FE614", Offset = "0x8FE614", VA = "0x8FE614")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x8FE77C", Offset = "0x8FE77C", VA = "0x8FE77C")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x8FE7A8", Offset = "0x8FE7A8", VA = "0x8FE7A8")]
		private static void UpdateTrackedInstances()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x8FE8E0", Offset = "0x8FE8E0", VA = "0x8FE8E0")]
		public NavMeshLink()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62E5E8", Offset = "0x62E5E8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62E5E8", Offset = "0x62E5E8")]
	public class NavMeshModifier : MonoBehaviour
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_OverrideArea;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IgnoreFromBuild;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifier> s_NavMeshModifiers;

		[Token(Token = "0x17000181")]
		public bool overrideArea
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x8FEA7C", Offset = "0x8FEA7C", VA = "0x8FEA7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x8FEA84", Offset = "0x8FEA84", VA = "0x8FEA84")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public int area
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x8FEA90", Offset = "0x8FEA90", VA = "0x8FEA90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x8FEA98", Offset = "0x8FEA98", VA = "0x8FEA98")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool ignoreFromBuild
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x8FEAA0", Offset = "0x8FEAA0", VA = "0x8FEAA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x8FEAA8", Offset = "0x8FEAA8", VA = "0x8FEAA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public static List<NavMeshModifier> activeModifiers
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x8FEAB4", Offset = "0x8FEAB4", VA = "0x8FEAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x8FEB1C", Offset = "0x8FEB1C", VA = "0x8FEB1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x8FEBEC", Offset = "0x8FEBEC", VA = "0x8FEBEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x8FEC70", Offset = "0x8FEC70", VA = "0x8FEC70")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x8FED0C", Offset = "0x8FED0C", VA = "0x8FED0C")]
		public NavMeshModifier()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62E65C", Offset = "0x62E65C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62E65C", Offset = "0x62E65C")]
	public class NavMeshModifierVolume : MonoBehaviour
	{
		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifierVolume> s_NavMeshModifiers;

		[Token(Token = "0x17000185")]
		public Vector3 size
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x8FEE48", Offset = "0x8FEE48", VA = "0x8FEE48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x8FEE54", Offset = "0x8FEE54", VA = "0x8FEE54")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public Vector3 center
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x8FEE60", Offset = "0x8FEE60", VA = "0x8FEE60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x8FEE6C", Offset = "0x8FEE6C", VA = "0x8FEE6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public int area
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x8FEE78", Offset = "0x8FEE78", VA = "0x8FEE78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x8FEE80", Offset = "0x8FEE80", VA = "0x8FEE80")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public static List<NavMeshModifierVolume> activeModifiers
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x8FEE88", Offset = "0x8FEE88", VA = "0x8FEE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x8FEEF0", Offset = "0x8FEEF0", VA = "0x8FEEF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x8FEFC0", Offset = "0x8FEFC0", VA = "0x8FEFC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x8FF044", Offset = "0x8FF044", VA = "0x8FF044")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x8FF0E0", Offset = "0x8FF0E0", VA = "0x8FF0E0")]
		public NavMeshModifierVolume()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public enum CollectObjects
	{
		[Token(Token = "0x400194B")]
		All,
		[Token(Token = "0x400194C")]
		Volume,
		[Token(Token = "0x400194D")]
		Children
	}
	[Token(Token = "0x200032A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x62E6D0", Offset = "0x62E6D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62E6D0", Offset = "0x62E6D0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x62E6D0", Offset = "0x62E6D0")]
	public class NavMeshSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED10", Offset = "0x62ED10")]
		private sealed class <>c
		{
			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<NavMeshModifierVolume> <>9__76_0;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<NavMeshModifier> <>9__77_0;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<NavMeshBuildSource> <>9__77_1;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<NavMeshBuildSource> <>9__77_2;

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x901A3C", Offset = "0x901A3C", VA = "0x901A3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x901A44", Offset = "0x901A44", VA = "0x901A44")]
			internal bool <AppendModifierVolumes>b__76_0(NavMeshModifierVolume x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x901A70", Offset = "0x901A70", VA = "0x901A70")]
			internal bool <CollectSources>b__77_0(NavMeshModifier x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x901A9C", Offset = "0x901A9C", VA = "0x901A9C")]
			internal bool <CollectSources>b__77_1(NavMeshBuildSource x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x901B9C", Offset = "0x901B9C", VA = "0x901B9C")]
			internal bool <CollectSources>b__77_2(NavMeshBuildSource x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CollectObjects m_CollectObjects;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_LayerMask;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private NavMeshCollectGeometry m_UseGeometry;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_DefaultArea;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_IgnoreNavMeshAgent;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool m_IgnoreNavMeshObstacle;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		private bool m_OverrideTileSize;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_TileSize;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_OverrideVoxelSize;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VoxelSize;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_BuildHeightMesh;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x634F50", Offset = "0x634F50")]
		[SerializeField]
		private NavMeshData m_NavMeshData;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshDataInstance m_NavMeshDataInstance;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshSurface> s_NavMeshSurfaces;

		[Token(Token = "0x17000189")]
		public int agentTypeID
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0x8FF288", Offset = "0x8FF288", VA = "0x8FF288")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x8FF290", Offset = "0x8FF290", VA = "0x8FF290")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public CollectObjects collectObjects
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x8FF298", Offset = "0x8FF298", VA = "0x8FF298")]
			get
			{
				return default(CollectObjects);
			}
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x8FF2A0", Offset = "0x8FF2A0", VA = "0x8FF2A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public Vector3 size
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x8FF2A8", Offset = "0x8FF2A8", VA = "0x8FF2A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x8FF2B4", Offset = "0x8FF2B4", VA = "0x8FF2B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public Vector3 center
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x8FF2C0", Offset = "0x8FF2C0", VA = "0x8FF2C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x8FF2CC", Offset = "0x8FF2CC", VA = "0x8FF2CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public LayerMask layerMask
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x8FF2D8", Offset = "0x8FF2D8", VA = "0x8FF2D8")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x8FF2E0", Offset = "0x8FF2E0", VA = "0x8FF2E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public NavMeshCollectGeometry useGeometry
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x8FF2E8", Offset = "0x8FF2E8", VA = "0x8FF2E8")]
			get
			{
				return default(NavMeshCollectGeometry);
			}
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0x8FF2F0", Offset = "0x8FF2F0", VA = "0x8FF2F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public int defaultArea
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x8FF2F8", Offset = "0x8FF2F8", VA = "0x8FF2F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x8FF300", Offset = "0x8FF300", VA = "0x8FF300")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public bool ignoreNavMeshAgent
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x8FF308", Offset = "0x8FF308", VA = "0x8FF308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0x8FF310", Offset = "0x8FF310", VA = "0x8FF310")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public bool ignoreNavMeshObstacle
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x8FF31C", Offset = "0x8FF31C", VA = "0x8FF31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x8FF324", Offset = "0x8FF324", VA = "0x8FF324")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public bool overrideTileSize
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x8FF330", Offset = "0x8FF330", VA = "0x8FF330")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x8FF338", Offset = "0x8FF338", VA = "0x8FF338")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public int tileSize
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x8FF344", Offset = "0x8FF344", VA = "0x8FF344")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x8FF34C", Offset = "0x8FF34C", VA = "0x8FF34C")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public bool overrideVoxelSize
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x8FF354", Offset = "0x8FF354", VA = "0x8FF354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x8FF35C", Offset = "0x8FF35C", VA = "0x8FF35C")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public float voxelSize
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x8FF368", Offset = "0x8FF368", VA = "0x8FF368")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x8FF370", Offset = "0x8FF370", VA = "0x8FF370")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool buildHeightMesh
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x8FF378", Offset = "0x8FF378", VA = "0x8FF378")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x8FF380", Offset = "0x8FF380", VA = "0x8FF380")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public NavMeshData navMeshData
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x8FF38C", Offset = "0x8FF38C", VA = "0x8FF38C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x8FF394", Offset = "0x8FF394", VA = "0x8FF394")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public static List<NavMeshSurface> activeSurfaces
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x8FF39C", Offset = "0x8FF39C", VA = "0x8FF39C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x8FF404", Offset = "0x8FF404", VA = "0x8FF404")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x8FF784", Offset = "0x8FF784", VA = "0x8FF784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x8FF610", Offset = "0x8FF610", VA = "0x8FF610")]
		public void AddData()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x8FF7F8", Offset = "0x8FF7F8", VA = "0x8FF7F8")]
		public void RemoveData()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x8FF960", Offset = "0x8FF960", VA = "0x8FF960")]
		public NavMeshBuildSettings GetBuildSettings()
		{
			return default(NavMeshBuildSettings);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x8FFAEC", Offset = "0x8FFAEC", VA = "0x8FFAEC")]
		public void BuildNavMesh()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x900C94", Offset = "0x900C94", VA = "0x900C94")]
		public AsyncOperation UpdateNavMesh(NavMeshData data)
		{
			return null;
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x8FF470", Offset = "0x8FF470", VA = "0x8FF470")]
		private static void Register(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x8FF824", Offset = "0x8FF824", VA = "0x8FF824")]
		private static void Unregister(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x900DDC", Offset = "0x900DDC", VA = "0x900DDC")]
		private static void UpdateActive()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x900EFC", Offset = "0x900EFC", VA = "0x900EFC")]
		private void AppendModifierVolumes(ref List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x8FFD64", Offset = "0x8FFD64", VA = "0x8FFD64")]
		private List<NavMeshBuildSource> CollectSources()
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x9004C0", Offset = "0x9004C0", VA = "0x9004C0")]
		private static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x90147C", Offset = "0x90147C", VA = "0x90147C")]
		private static Bounds GetWorldBounds(Matrix4x4 mat, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x900568", Offset = "0x900568", VA = "0x900568")]
		private Bounds CalculateWorldBounds(List<NavMeshBuildSource> sources)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x9016C0", Offset = "0x9016C0", VA = "0x9016C0")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x900EB8", Offset = "0x900EB8", VA = "0x900EB8")]
		private void UpdateDataIfTransformChanged()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x901828", Offset = "0x901828", VA = "0x901828")]
		public NavMeshSurface()
		{
		}
	}
}
namespace Metaballs
{
	[Token(Token = "0x200032B")]
	public static class Utils
	{
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xA68344", Offset = "0xA68344", VA = "0xA68344")]
		public static void DestroyChildren(Transform parent)
		{
		}

		[Token(Token = "0x6001AD8")]
		public static T StringToEnumType<T>(string value, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6001AD9")]
		public static List<T> GetComponentsRecursive<T>(Transform t) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		public static T FindComponentInParents<T>(Transform t) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xA684F0", Offset = "0xA684F0", VA = "0xA684F0")]
		public static void ConvertMeshIntoWireFrame(Mesh mesh)
		{
		}
	}
}
namespace AmplifyColor
{
	[Token(Token = "0x200032C")]
	public enum Quality
	{
		[Token(Token = "0x4001962")]
		Mobile,
		[Token(Token = "0x4001963")]
		Standard
	}
	[Token(Token = "0x200032D")]
	public enum Tonemapping
	{
		[Token(Token = "0x4001965")]
		Disabled,
		[Token(Token = "0x4001966")]
		Photographic,
		[Token(Token = "0x4001967")]
		FilmicHable,
		[Token(Token = "0x4001968")]
		FilmicACES
	}
	[Serializable]
	[Token(Token = "0x200032E")]
	public class VersionInfo
	{
		[Token(Token = "0x4001969")]
		public const byte Major = 1;

		[Token(Token = "0x400196A")]
		public const byte Minor = 6;

		[Token(Token = "0x400196B")]
		public const byte Release = 3;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string StageSuffix;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string TrialSuffix;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x17000199")]
		public int Number
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x960A40", Offset = "0x960A40", VA = "0x960A40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x960844", Offset = "0x960844", VA = "0x960844")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x960940", Offset = "0x960940", VA = "0x960940", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x960A60", Offset = "0x960A60", VA = "0x960A60")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x960A98", Offset = "0x960A98", VA = "0x960A98")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x960AE4", Offset = "0x960AE4", VA = "0x960AE4")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x960B54", Offset = "0x960B54", VA = "0x960B54")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public class VolumeEffectField
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float valueSingle;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color valueColor;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool valueBoolean;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 valueVector2;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 valueVector3;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 valueVector4;

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x961608", Offset = "0x961608", VA = "0x961608")]
		public VolumeEffectField(string fieldName, string fieldType)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x962F8C", Offset = "0x962F8C", VA = "0x962F8C")]
		public VolumeEffectField(FieldInfo pi, Component c)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x962E9C", Offset = "0x962E9C", VA = "0x962E9C")]
		public static bool IsValidType(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x9644B8", Offset = "0x9644B8", VA = "0x9644B8")]
		public void UpdateValue(object val)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000330")]
	public class VolumeEffectComponent
	{
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED20", Offset = "0x62ED20")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectFieldFlags fieldFlags;

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x963094", Offset = "0x963094", VA = "0x963094")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x9633EC", Offset = "0x9633EC", VA = "0x9633EC")]
			internal bool <UpdateComponent>b__0(VolumeEffectField s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED30", Offset = "0x62ED30")]
		private sealed class <>c
		{
			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__9_0;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectField, string> <>9__10_0;

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x96338C", Offset = "0x96338C", VA = "0x96338C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x963394", Offset = "0x963394", VA = "0x963394")]
			internal bool <ListAcceptableFields>b__9_0(FieldInfo f)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x9633D4", Offset = "0x9633D4", VA = "0x9633D4")]
			internal string <GetFieldNames>b__10_0(VolumeEffectField r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectField> fields;

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x961490", Offset = "0x961490", VA = "0x961490")]
		public VolumeEffectComponent(string name)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x962D84", Offset = "0x962D84", VA = "0x962D84")]
		public VolumeEffectField AddField(FieldInfo pi, Component c)
		{
			return null;
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x962D8C", Offset = "0x962D8C", VA = "0x962D8C")]
		public VolumeEffectField AddField(FieldInfo pi, Component c, int position)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x96302C", Offset = "0x96302C", VA = "0x96302C")]
		public void RemoveEffectField(VolumeEffectField field)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x961A20", Offset = "0x961A20", VA = "0x961A20")]
		public VolumeEffectComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x961758", Offset = "0x961758", VA = "0x961758")]
		public void UpdateComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x961528", Offset = "0x961528", VA = "0x961528")]
		public VolumeEffectField FindEffectField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x96309C", Offset = "0x96309C", VA = "0x96309C")]
		public static FieldInfo[] ListAcceptableFields(Component c)
		{
			return null;
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x96321C", Offset = "0x96321C", VA = "0x96321C")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class VolumeEffect
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED40", Offset = "0x62ED40")]
		private sealed class <>c
		{
			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Component, bool> <>9__10_0;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponent, string> <>9__11_0;

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x962C4C", Offset = "0x962C4C", VA = "0x962C4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x962C54", Offset = "0x962C54", VA = "0x962C54")]
			internal bool <ListAcceptableComponents>b__10_0(Component comp)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x962D6C", Offset = "0x962D6C", VA = "0x962D6C")]
			internal string <GetComponentNames>b__11_0(VolumeEffectComponent r)
			{
				return null;
			}
		}

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AmplifyColorBase gameObject;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectComponent> components;

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x960C0C", Offset = "0x960C0C", VA = "0x960C0C")]
		public VolumeEffect(AmplifyColorBase effect)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x960CA4", Offset = "0x960CA4", VA = "0x960CA4")]
		public static VolumeEffect BlendValuesToVolumeEffect(VolumeEffectFlags flags, VolumeEffect volume1, VolumeEffect volume2, float blend)
		{
			return null;
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x961658", Offset = "0x961658", VA = "0x961658")]
		public VolumeEffectComponent AddComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x961C30", Offset = "0x961C30", VA = "0x961C30")]
		public void RemoveEffectComponent(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x961C98", Offset = "0x961C98", VA = "0x961C98")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x961E50", Offset = "0x961E50", VA = "0x961E50")]
		public void SetValues(AmplifyColorBase targetColor)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x962434", Offset = "0x962434", VA = "0x962434")]
		public void BlendValues(AmplifyColorBase targetColor, VolumeEffect other, float blendAmount)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x9613B0", Offset = "0x9613B0", VA = "0x9613B0")]
		public VolumeEffectComponent FindEffectComponent(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x96292C", Offset = "0x96292C", VA = "0x96292C")]
		public static Component[] ListAcceptableComponents(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x962ADC", Offset = "0x962ADC", VA = "0x962ADC")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class VolumeEffectContainer
	{
		[Serializable]
		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED50", Offset = "0x62ED50")]
		private sealed class <>c
		{
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffect, AmplifyColorBase> <>9__6_0;

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x964498", Offset = "0x964498", VA = "0x964498")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x9644A0", Offset = "0x9644A0", VA = "0x9644A0")]
			internal AmplifyColorBase <GetStoredEffects>b__6_0(VolumeEffect r)
			{
				return null;
			}
		}

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffect> volumes;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x963F24", Offset = "0x963F24", VA = "0x963F24")]
		public VolumeEffectContainer()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x963FA0", Offset = "0x963FA0", VA = "0x963FA0")]
		public void AddColorEffect(AmplifyColorBase colorEffect)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x964234", Offset = "0x964234", VA = "0x964234")]
		public VolumeEffect AddJustColorEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x964040", Offset = "0x964040", VA = "0x964040")]
		public VolumeEffect FindVolumeEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x9642C0", Offset = "0x9642C0", VA = "0x9642C0")]
		public void RemoveVolumeEffect(VolumeEffect volume)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x964328", Offset = "0x964328", VA = "0x964328")]
		public AmplifyColorBase[] GetStoredEffects()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class VolumeEffectFieldFlags
	{
		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x9637D0", Offset = "0x9637D0", VA = "0x9637D0")]
		public VolumeEffectFieldFlags(FieldInfo pi)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x963628", Offset = "0x963628", VA = "0x963628")]
		public VolumeEffectFieldFlags(VolumeEffectField field)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class VolumeEffectComponentFlags
	{
		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED60", Offset = "0x62ED60")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectField field;

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x963A80", Offset = "0x963A80", VA = "0x963A80")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x963EB4", Offset = "0x963EB4", VA = "0x963EB4")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED70", Offset = "0x62ED70")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo pi;

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x963C50", Offset = "0x963C50", VA = "0x963C50")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x963EE0", Offset = "0x963EE0", VA = "0x963EE0")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED80", Offset = "0x62ED80")]
		private sealed class <>c
		{
			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectFieldFlags, bool> <>9__8_0;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectFieldFlags, string> <>9__8_1;

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x963E7C", Offset = "0x963E7C", VA = "0x963E7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x963E84", Offset = "0x963E84", VA = "0x963E84")]
			internal bool <GetFieldNames>b__8_0(VolumeEffectFieldFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x963E9C", Offset = "0x963E9C", VA = "0x963E9C")]
			internal string <GetFieldNames>b__8_1(VolumeEffectFieldFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectFieldFlags> componentFields;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x963418", Offset = "0x963418", VA = "0x963418")]
		public VolumeEffectComponentFlags(string name)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x9634B0", Offset = "0x9634B0", VA = "0x9634B0")]
		public VolumeEffectComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x963680", Offset = "0x963680", VA = "0x963680")]
		public VolumeEffectComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x963854", Offset = "0x963854", VA = "0x963854")]
		public void UpdateComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x963A88", Offset = "0x963A88", VA = "0x963A88")]
		public void UpdateComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x963C58", Offset = "0x963C58", VA = "0x963C58")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class VolumeEffectFlags
	{
		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED90", Offset = "0x62ED90")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component c;

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x9648C4", Offset = "0x9648C4", VA = "0x9648C4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x965110", Offset = "0x965110", VA = "0x965110")]
			internal bool <AddComponent>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EDA0", Offset = "0x62EDA0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectComponent comp;

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x964AE8", Offset = "0x964AE8", VA = "0x964AE8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x965158", Offset = "0x965158", VA = "0x965158")]
			internal bool <UpdateFlags>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EDB0", Offset = "0x62EDB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectComponentFlags, bool> <>9__7_0;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponentFlags, string> <>9__7_1;

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x9650D8", Offset = "0x9650D8", VA = "0x9650D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x9650E0", Offset = "0x9650E0", VA = "0x9650E0")]
			internal bool <GetComponentNames>b__7_0(VolumeEffectComponentFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x9650F8", Offset = "0x9650F8", VA = "0x9650F8")]
			internal string <GetComponentNames>b__7_1(VolumeEffectComponentFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffectComponentFlags> components;

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x964710", Offset = "0x964710", VA = "0x964710")]
		public VolumeEffectFlags()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x96478C", Offset = "0x96478C", VA = "0x96478C")]
		public void AddComponent(Component c)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x9648CC", Offset = "0x9648CC", VA = "0x9648CC")]
		public void UpdateFlags(VolumeEffect effectVol)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x964AF0", Offset = "0x964AF0", VA = "0x964AF0")]
		public static void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x964C1C", Offset = "0x964C1C", VA = "0x964C1C")]
		public VolumeEffect GenerateEffectData(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x964DD4", Offset = "0x964DD4", VA = "0x964DD4")]
		public VolumeEffectComponentFlags FindComponentFlags(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x964EB4", Offset = "0x964EB4", VA = "0x964EB4")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
}
