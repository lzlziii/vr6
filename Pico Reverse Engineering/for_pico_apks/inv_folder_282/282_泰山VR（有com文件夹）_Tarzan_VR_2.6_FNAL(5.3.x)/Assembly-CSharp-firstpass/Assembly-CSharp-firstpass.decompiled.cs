using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using ES3Internal;
using ES3Types;
using HutongGames.PlayMaker;
using Il2CppDummyDll;
using RootMotion.Dynamics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityStandardAssets.Utility;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1049E24", Offset = "0x1049E24")]
internal sealed class <>f__AnonymousType0<<assembly>j__TPar, <type>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1051668", Offset = "0x1051668")]
	private readonly <assembly>j__TPar <assembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x105167C", Offset = "0x105167C")]
	private readonly <type>j__TPar <type>i__Field;

	[Token(Token = "0x17000001")]
	public <assembly>j__TPar assembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<assembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <type>j__TPar type
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<type>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<assembly>j__TPar assembly, <type>j__TPar type)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class FsmES3File : ScriptableObject
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ES3File file;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x279EDF0", Offset = "0x279EDF0", VA = "0x279EDF0")]
	public FsmES3File()
	{
	}
}
[Token(Token = "0x2000004")]
public class ES3AutoSave : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool saveChildren;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isQuitting;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1CA92A4", Offset = "0x1CA92A4", VA = "0x1CA92A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1CA93FC", Offset = "0x1CA93FC", VA = "0x1CA93FC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1CA9408", Offset = "0x1CA9408", VA = "0x1CA9408")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1CA9574", Offset = "0x1CA9574", VA = "0x1CA9574")]
	public ES3AutoSave()
	{
	}
}
[Token(Token = "0x2000005")]
public class ES3AutoSaveMgr : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x20001F0")]
	public enum LoadEvent
	{
		[Token(Token = "0x40009CA")]
		None,
		[Token(Token = "0x40009CB")]
		Awake,
		[Token(Token = "0x40009CC")]
		Start
	}

	[Token(Token = "0x20001F1")]
	public enum SaveEvent
	{
		[Token(Token = "0x40009CE")]
		None,
		[Token(Token = "0x40009CF")]
		OnApplicationQuit,
		[Token(Token = "0x40009D0")]
		OnApplicationPause
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ES3AutoSaveMgr _instance;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveEvent saveEvent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LoadEvent loadEvent;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ES3SerializableSettings settings;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ES3AutoSave> autoSaves;

	[Token(Token = "0x17000003")]
	public static ES3AutoSaveMgr Instance
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0x1CA957C", Offset = "0x1CA957C", VA = "0x1CA957C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1CA96A4", Offset = "0x1CA96A4", VA = "0x1CA96A4")]
	public void Save()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1CA9804", Offset = "0x1CA9804", VA = "0x1CA9804")]
	public void Load()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1CA98A8", Offset = "0x1CA98A8", VA = "0x1CA98A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1CA98BC", Offset = "0x1CA98BC", VA = "0x1CA98BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1CA9944", Offset = "0x1CA9944", VA = "0x1CA9944")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1CA9958", Offset = "0x1CA9958", VA = "0x1CA9958")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1CA9308", Offset = "0x1CA9308", VA = "0x1CA9308")]
	public static void AddAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1CA9480", Offset = "0x1CA9480", VA = "0x1CA9480")]
	public static void RemoveAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1CA99C4", Offset = "0x1CA99C4", VA = "0x1CA99C4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1CA99C8", Offset = "0x1CA99C8", VA = "0x1CA99C8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1CA99CC", Offset = "0x1CA99CC", VA = "0x1CA99CC")]
	public ES3AutoSaveMgr()
	{
	}
}
[Token(Token = "0x2000006")]
public static class ES3
{
	[Token(Token = "0x20001F2")]
	public enum Location
	{
		[Token(Token = "0x40009D2")]
		File,
		[Token(Token = "0x40009D3")]
		PlayerPrefs,
		[Token(Token = "0x40009D4")]
		Memory,
		[Token(Token = "0x40009D5")]
		Resources
	}

	[Token(Token = "0x20001F3")]
	public enum Directory
	{
		[Token(Token = "0x40009D7")]
		PersistentDataPath,
		[Token(Token = "0x40009D8")]
		DataPath
	}

	[Token(Token = "0x20001F4")]
	public enum EncryptionType
	{
		[Token(Token = "0x40009DA")]
		None,
		[Token(Token = "0x40009DB")]
		AES
	}

	[Token(Token = "0x20001F5")]
	public enum Format
	{
		[Token(Token = "0x40009DD")]
		JSON
	}

	[Token(Token = "0x20001F6")]
	public enum ReferenceMode
	{
		[Token(Token = "0x40009DF")]
		ByRef,
		[Token(Token = "0x40009E0")]
		ByValue,
		[Token(Token = "0x40009E1")]
		ByRefAndValue
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string backupFileSuffix;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string temporaryFileSuffix;

	[Token(Token = "0x6000019")]
	public static void Save<T>(string key, object value)
	{
	}

	[Token(Token = "0x600001A")]
	public static void Save<T>(string key, object value, ES3Settings settings)
	{
	}

	[Token(Token = "0x600001B")]
	public static void Save<T>(string key, object value, string filePath)
	{
	}

	[Token(Token = "0x600001C")]
	public static void Save<T>(string key, object value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1CA4660", Offset = "0x1CA4660", VA = "0x1CA4660")]
	public static void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1CA4820", Offset = "0x1CA4820", VA = "0x1CA4820")]
	public static void SaveRaw(byte[] bytes, string filePath)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1CA48B4", Offset = "0x1CA48B4", VA = "0x1CA48B4")]
	public static void SaveRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1CA46E4", Offset = "0x1CA46E4", VA = "0x1CA46E4")]
	public static void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1CA4DF0", Offset = "0x1CA4DF0", VA = "0x1CA4DF0")]
	public static void SaveRaw(string str)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1CA4F14", Offset = "0x1CA4F14", VA = "0x1CA4F14")]
	public static void SaveRaw(string str, string filePath)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1CA4FA8", Offset = "0x1CA4FA8", VA = "0x1CA4FA8")]
	public static void SaveRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1CA4E74", Offset = "0x1CA4E74", VA = "0x1CA4E74")]
	public static void SaveRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1CA5044", Offset = "0x1CA5044", VA = "0x1CA5044")]
	public static void AppendRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1CA5238", Offset = "0x1CA5238", VA = "0x1CA5238")]
	public static void AppendRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1CA50C8", Offset = "0x1CA50C8", VA = "0x1CA50C8")]
	public static void AppendRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1CA52D4", Offset = "0x1CA52D4", VA = "0x1CA52D4")]
	public static void AppendRaw(string str)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1CA54EC", Offset = "0x1CA54EC", VA = "0x1CA54EC")]
	public static void AppendRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1CA5358", Offset = "0x1CA5358", VA = "0x1CA5358")]
	public static void AppendRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1CA5588", Offset = "0x1CA5588", VA = "0x1CA5588")]
	public static void SaveImage(Texture2D texture, string imagePath)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1CA5788", Offset = "0x1CA5788", VA = "0x1CA5788")]
	public static void SaveImage(Texture2D texture, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1CA561C", Offset = "0x1CA561C", VA = "0x1CA561C")]
	public static void SaveImage(Texture2D texture, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002E")]
	public static T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x600002F")]
	public static T Load<T>(string key, string filePath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000030")]
	public static T Load<T>(string key, string filePath, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000031")]
	public static T Load<T>(string key, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000032")]
	public static T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000033")]
	public static T Load<T>(string key, string filePath, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000034")]
	public static T Load<T>(string key, string filePath, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000035")]
	public static T Load<T>(string key, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000036")]
	public static void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000037")]
	public static void LoadInto<T>(string key, string filePath, T obj) where T : class
	{
	}

	[Token(Token = "0x6000038")]
	public static void LoadInto<T>(string key, string filePath, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000039")]
	public static void LoadInto<T>(string key, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1CA588C", Offset = "0x1CA588C", VA = "0x1CA588C")]
	public static byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1CA5A78", Offset = "0x1CA5A78", VA = "0x1CA5A78")]
	public static byte[] LoadRawBytes(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1CA5AFC", Offset = "0x1CA5AFC", VA = "0x1CA5AFC")]
	public static byte[] LoadRawBytes(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1CA5908", Offset = "0x1CA5908", VA = "0x1CA5908")]
	public static byte[] LoadRawBytes(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1CA5B90", Offset = "0x1CA5B90", VA = "0x1CA5B90")]
	public static string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1CA5CA0", Offset = "0x1CA5CA0", VA = "0x1CA5CA0")]
	public static string LoadRawString(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1CA5D24", Offset = "0x1CA5D24", VA = "0x1CA5D24")]
	public static string LoadRawString(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1CA5C0C", Offset = "0x1CA5C0C", VA = "0x1CA5C0C")]
	public static string LoadRawString(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1CA5DB8", Offset = "0x1CA5DB8", VA = "0x1CA5DB8")]
	public static Texture2D LoadImage(string imagePath)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1CA5EA4", Offset = "0x1CA5EA4", VA = "0x1CA5EA4")]
	public static Texture2D LoadImage(string imagePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1CA5E3C", Offset = "0x1CA5E3C", VA = "0x1CA5E3C")]
	public static Texture2D LoadImage(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1CA5F38", Offset = "0x1CA5F38", VA = "0x1CA5F38")]
	public static Texture2D LoadImage(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1CA5FB0", Offset = "0x1CA5FB0", VA = "0x1CA5FB0")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1CA6044", Offset = "0x1CA6044", VA = "0x1CA6044")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1CA6384", Offset = "0x1CA6384", VA = "0x1CA6384")]
	public static void DeleteFile()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1CA6508", Offset = "0x1CA6508", VA = "0x1CA6508")]
	public static void DeleteFile(string filePath)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1CA658C", Offset = "0x1CA658C", VA = "0x1CA658C")]
	public static void DeleteFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1CA6400", Offset = "0x1CA6400", VA = "0x1CA6400")]
	public static void DeleteFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1CA665C", Offset = "0x1CA665C", VA = "0x1CA665C")]
	public static void CopyFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1CA6890", Offset = "0x1CA6890", VA = "0x1CA6890")]
	public static void CopyFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1CA6708", Offset = "0x1CA6708", VA = "0x1CA6708")]
	public static void CopyFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1CA6964", Offset = "0x1CA6964", VA = "0x1CA6964")]
	public static void RenameFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1CA6BAC", Offset = "0x1CA6BAC", VA = "0x1CA6BAC")]
	public static void RenameFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1CA6A10", Offset = "0x1CA6A10", VA = "0x1CA6A10")]
	public static void RenameFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1CA6C78", Offset = "0x1CA6C78", VA = "0x1CA6C78")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1CA6E6C", Offset = "0x1CA6E6C", VA = "0x1CA6E6C")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1CA6D24", Offset = "0x1CA6D24", VA = "0x1CA6D24")]
	public static void RenameDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1CA6F80", Offset = "0x1CA6F80", VA = "0x1CA6F80")]
	public static void DeleteDirectory(string directoryPath)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1CA70E8", Offset = "0x1CA70E8", VA = "0x1CA70E8")]
	public static void DeleteDirectory(string directoryPath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1CA7004", Offset = "0x1CA7004", VA = "0x1CA7004")]
	public static void DeleteDirectory(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1CA717C", Offset = "0x1CA717C", VA = "0x1CA717C")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1CA73C4", Offset = "0x1CA73C4", VA = "0x1CA73C4")]
	public static void DeleteKey(string key, string filePath)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1CA7458", Offset = "0x1CA7458", VA = "0x1CA7458")]
	public static void DeleteKey(string key, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1CA7200", Offset = "0x1CA7200", VA = "0x1CA7200")]
	public static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1CA7604", Offset = "0x1CA7604", VA = "0x1CA7604")]
	public static bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1CA77E8", Offset = "0x1CA77E8", VA = "0x1CA77E8")]
	public static bool KeyExists(string key, string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1CA787C", Offset = "0x1CA787C", VA = "0x1CA787C")]
	public static bool KeyExists(string key, string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1CA7688", Offset = "0x1CA7688", VA = "0x1CA7688")]
	public static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1CA7918", Offset = "0x1CA7918", VA = "0x1CA7918")]
	public static bool FileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1CA7994", Offset = "0x1CA7994", VA = "0x1CA7994")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1CA7A18", Offset = "0x1CA7A18", VA = "0x1CA7A18")]
	public static bool FileExists(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1CA74F4", Offset = "0x1CA74F4", VA = "0x1CA74F4")]
	public static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1CA7AAC", Offset = "0x1CA7AAC", VA = "0x1CA7AAC")]
	public static bool DirectoryExists(string folderPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1CA7C28", Offset = "0x1CA7C28", VA = "0x1CA7C28")]
	public static bool DirectoryExists(string folderPath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1CA7B30", Offset = "0x1CA7B30", VA = "0x1CA7B30")]
	public static bool DirectoryExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1CA7CBC", Offset = "0x1CA7CBC", VA = "0x1CA7CBC")]
	public static string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1CA80D0", Offset = "0x1CA80D0", VA = "0x1CA80D0")]
	public static string[] GetKeys(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1CA8154", Offset = "0x1CA8154", VA = "0x1CA8154")]
	public static string[] GetKeys(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1CA7D38", Offset = "0x1CA7D38", VA = "0x1CA7D38")]
	public static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1CA81E8", Offset = "0x1CA81E8", VA = "0x1CA81E8")]
	public static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1CA8308", Offset = "0x1CA8308", VA = "0x1CA8308")]
	public static string[] GetFiles(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1CA838C", Offset = "0x1CA838C", VA = "0x1CA838C")]
	public static string[] GetFiles(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1CA8264", Offset = "0x1CA8264", VA = "0x1CA8264")]
	public static string[] GetFiles(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1CA8534", Offset = "0x1CA8534", VA = "0x1CA8534")]
	public static string[] GetDirectories()
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1CA8654", Offset = "0x1CA8654", VA = "0x1CA8654")]
	public static string[] GetDirectories(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1CA86D8", Offset = "0x1CA86D8", VA = "0x1CA86D8")]
	public static string[] GetDirectories(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1CA85B0", Offset = "0x1CA85B0", VA = "0x1CA85B0")]
	public static string[] GetDirectories(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1CA88C0", Offset = "0x1CA88C0", VA = "0x1CA88C0")]
	public static void CreateBackup()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1CA89FC", Offset = "0x1CA89FC", VA = "0x1CA89FC")]
	public static void CreateBackup(string filePath)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1CA8A80", Offset = "0x1CA8A80", VA = "0x1CA8A80")]
	public static void CreateBackup(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1CA893C", Offset = "0x1CA893C", VA = "0x1CA893C")]
	public static void CreateBackup(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1CA8B14", Offset = "0x1CA8B14", VA = "0x1CA8B14")]
	public static bool RestoreBackup(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1CA8C8C", Offset = "0x1CA8C8C", VA = "0x1CA8C8C")]
	public static bool RestoreBackup(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1CA8B98", Offset = "0x1CA8B98", VA = "0x1CA8B98")]
	public static bool RestoreBackup(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1CA8D20", Offset = "0x1CA8D20", VA = "0x1CA8D20")]
	public static DateTime GetTimestamp()
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1CA8EC0", Offset = "0x1CA8EC0", VA = "0x1CA8EC0")]
	public static DateTime GetTimestamp(string filePath)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1CA8F44", Offset = "0x1CA8F44", VA = "0x1CA8F44")]
	public static DateTime GetTimestamp(string filePath, ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1CA8D9C", Offset = "0x1CA8D9C", VA = "0x1CA8D9C")]
	public static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1CA9064", Offset = "0x1CA9064", VA = "0x1CA9064")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000007")]
public class ES3File
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ES3Data> cache;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syncWithFile;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1CAE3C8", Offset = "0x1CAE3C8", VA = "0x1CAE3C8")]
	public ES3File()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1CAE858", Offset = "0x1CAE858", VA = "0x1CAE858")]
	public ES3File(string filePath)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1CAE8D0", Offset = "0x1CAE8D0", VA = "0x1CAE8D0")]
	public ES3File(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1CAE950", Offset = "0x1CAE950", VA = "0x1CAE950")]
	public ES3File(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1CAE958", Offset = "0x1CAE958", VA = "0x1CAE958")]
	public ES3File(bool syncWithFile)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1CAE9CC", Offset = "0x1CAE9CC", VA = "0x1CAE9CC")]
	public ES3File(string filePath, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1CAEA48", Offset = "0x1CAEA48", VA = "0x1CAEA48")]
	public ES3File(string filePath, ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1CAE430", Offset = "0x1CAE430", VA = "0x1CAE430")]
	public ES3File(ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1CAEAD4", Offset = "0x1CAEAD4", VA = "0x1CAEAD4")]
	public ES3File(byte[] bytes)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1CAEB48", Offset = "0x1CAEB48", VA = "0x1CAEB48")]
	public ES3File(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1CAEFD0", Offset = "0x1CAEFD0", VA = "0x1CAEFD0")]
	public void Sync()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1CAF2E4", Offset = "0x1CAF2E4", VA = "0x1CAF2E4")]
	public void Sync(string filePath)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1CAF358", Offset = "0x1CAF358", VA = "0x1CAF358")]
	public void Sync(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1CAEFD8", Offset = "0x1CAEFD8", VA = "0x1CAEFD8")]
	public void Sync(ES3Settings settings)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1CACF20", Offset = "0x1CACF20", VA = "0x1CACF20")]
	public void Clear()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1CAF3D4", Offset = "0x1CAF3D4", VA = "0x1CAF3D4")]
	public string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	public void Save<T>(string key, object value)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1CACF78", Offset = "0x1CACF78", VA = "0x1CACF78")]
	public void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1CAEBDC", Offset = "0x1CAEBDC", VA = "0x1CAEBDC")]
	public void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000093")]
	public T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000094")]
	public T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000095")]
	public void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1CAA714", Offset = "0x1CAA714", VA = "0x1CAA714")]
	public byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1CAF5C4", Offset = "0x1CAF5C4", VA = "0x1CAF5C4")]
	public string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1CAF668", Offset = "0x1CAF668", VA = "0x1CAF668")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1CAF6D0", Offset = "0x1CAF6D0", VA = "0x1CAF6D0")]
	public bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1CAF738", Offset = "0x1CAF738", VA = "0x1CAF738")]
	public int Size()
	{
		return default(int);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1CAF838", Offset = "0x1CAF838", VA = "0x1CAF838")]
	public Type GetKeyType(string key)
	{
		return null;
	}
}
[Token(Token = "0x2000008")]
public class ES3InspectorInfo : MonoBehaviour
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1CAF924", Offset = "0x1CAF924", VA = "0x1CAF924")]
	public ES3InspectorInfo()
	{
	}
}
[Token(Token = "0x2000009")]
public class ES3ReferenceMgr : ES3ReferenceMgrBase, ISerializationCallbackReceiver
{
	[Token(Token = "0x600009D")]
	[Address(RVA = "0x27F6AC4", Offset = "0x27F6AC4", VA = "0x27F6AC4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x27F6AC8", Offset = "0x27F6AC8", VA = "0x27F6AC8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x27F6ACC", Offset = "0x27F6ACC", VA = "0x27F6ACC")]
	public ES3ReferenceMgr()
	{
	}
}
[Token(Token = "0x200000A")]
public class ES3Spreadsheet
{
	[Token(Token = "0x20001F7")]
	protected struct Index
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int col;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int row;

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x12AA048", Offset = "0x12AA048", VA = "0x12AA048")]
		public Index(int col, int row)
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int cols;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int rows;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Index, string> cells;

	[Token(Token = "0x4000014")]
	private const string QUOTE = "\"";

	[Token(Token = "0x4000015")]
	private const char QUOTE_CHAR = '"';

	[Token(Token = "0x4000016")]
	private const char COMMA_CHAR = ',';

	[Token(Token = "0x4000017")]
	private const char NEWLINE_CHAR = '\n';

	[Token(Token = "0x4000018")]
	private const string ESCAPED_QUOTE = "\"\"";

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] CHARS_TO_ESCAPE;

	[Token(Token = "0x17000004")]
	public int ColumnCount
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x27F7310", Offset = "0x27F7310", VA = "0x27F7310")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000005")]
	public int RowCount
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x27F7318", Offset = "0x27F7318", VA = "0x27F7318")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000A2")]
	public void SetCell<T>(int col, int row, object value)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x27F7320", Offset = "0x27F7320", VA = "0x27F7320")]
	private void SetCell(int col, int row, string value)
	{
	}

	[Token(Token = "0x60000A4")]
	public T GetCell<T>(int col, int row)
	{
		return (T)null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x27F73D4", Offset = "0x27F73D4", VA = "0x27F73D4")]
	public void Load(string filePath)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x27F7488", Offset = "0x27F7488", VA = "0x27F7488")]
	public void Load(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x27F7454", Offset = "0x27F7454", VA = "0x27F7454")]
	public void Load(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x27F778C", Offset = "0x27F778C", VA = "0x27F778C")]
	public void LoadRaw(string str)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x27F7850", Offset = "0x27F7850", VA = "0x27F7850")]
	public void LoadRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x27F7510", Offset = "0x27F7510", VA = "0x27F7510")]
	private void Load(Stream stream, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x27F78F4", Offset = "0x27F78F4", VA = "0x27F78F4")]
	public void Save(string filePath)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x27F7C8C", Offset = "0x27F7C8C", VA = "0x27F7C8C")]
	public void Save(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x27F7D08", Offset = "0x27F7D08", VA = "0x27F7D08")]
	public void Save(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x27F7D10", Offset = "0x27F7D10", VA = "0x27F7D10")]
	public void Save(string filePath, bool append)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x27F7D88", Offset = "0x27F7D88", VA = "0x27F7D88")]
	public void Save(string filePath, ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x27F7968", Offset = "0x27F7968", VA = "0x27F7968")]
	public void Save(ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x27F7F80", Offset = "0x27F7F80", VA = "0x27F7F80")]
	private static string Escape(string str, bool isAlreadyWrappedInQuotes = false)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x27F8088", Offset = "0x27F8088", VA = "0x27F8088")]
	private static string Unescape(string str)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x27F7E10", Offset = "0x27F7E10", VA = "0x27F7E10")]
	private string[,] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x27F8164", Offset = "0x27F8164", VA = "0x27F8164")]
	public ES3Spreadsheet()
	{
	}
}
[Token(Token = "0x200000B")]
public abstract class ES3Reader : IDisposable
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1051360", Offset = "0x1051360")]
	public class ES3ReaderPropertyEnumerator
	{
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051648", Offset = "0x1051648")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderPropertyEnumerator <>4__this;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F17")]
				[Address(RVA = "0x27F67E0", Offset = "0x27F67E0", VA = "0x27F67E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F19")]
				[Address(RVA = "0x27F6848", Offset = "0x27F6848", VA = "0x27F6848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x27F6724", Offset = "0x27F6724", VA = "0x27F6724")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x27F6750", Offset = "0x27F6750", VA = "0x27F6750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x27F6754", Offset = "0x27F6754", VA = "0x27F6754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x27F67E8", Offset = "0x27F67E8", VA = "0x27F67E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x27F5C48", Offset = "0x27F5C48", VA = "0x27F5C48")]
		public ES3ReaderPropertyEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x27F66B4", Offset = "0x27F66B4", VA = "0x27F66B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B15C", Offset = "0x105B15C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1051374", Offset = "0x1051374")]
	public class ES3ReaderRawEnumerator
	{
		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051658", Offset = "0x1051658")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderRawEnumerator <>4__this;

			[Token(Token = "0x17000114")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F1D")]
				[Address(RVA = "0x27F6A54", Offset = "0x27F6A54", VA = "0x27F6A54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000115")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1F")]
				[Address(RVA = "0x27F6ABC", Offset = "0x27F6ABC", VA = "0x27F6ABC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x27F68C0", Offset = "0x27F68C0", VA = "0x27F68C0")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x27F68EC", Offset = "0x27F68EC", VA = "0x27F68EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x27F68F0", Offset = "0x27F68F0", VA = "0x27F68F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x27F6A5C", Offset = "0x27F6A5C", VA = "0x27F6A5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x27F5CD8", Offset = "0x27F5CD8", VA = "0x27F5CD8")]
		public ES3ReaderRawEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x27F6850", Offset = "0x27F6850", VA = "0x27F6850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B1C0", Offset = "0x105B1C0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string overridePropertiesName;

	[Token(Token = "0x17000006")]
	public virtual ES3ReaderPropertyEnumerator Properties
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x27F5BE4", Offset = "0x27F5BE4", VA = "0x27F5BE4", Slot = "38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	internal virtual ES3ReaderRawEnumerator RawEnumerator
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x27F5C74", Offset = "0x27F5C74", VA = "0x27F5C74", Slot = "39")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	internal abstract int Read_int();

	[Token(Token = "0x60000B7")]
	internal abstract float Read_float();

	[Token(Token = "0x60000B8")]
	internal abstract bool Read_bool();

	[Token(Token = "0x60000B9")]
	internal abstract char Read_char();

	[Token(Token = "0x60000BA")]
	internal abstract decimal Read_decimal();

	[Token(Token = "0x60000BB")]
	internal abstract double Read_double();

	[Token(Token = "0x60000BC")]
	internal abstract long Read_long();

	[Token(Token = "0x60000BD")]
	internal abstract ulong Read_ulong();

	[Token(Token = "0x60000BE")]
	internal abstract byte Read_byte();

	[Token(Token = "0x60000BF")]
	internal abstract sbyte Read_sbyte();

	[Token(Token = "0x60000C0")]
	internal abstract short Read_short();

	[Token(Token = "0x60000C1")]
	internal abstract ushort Read_ushort();

	[Token(Token = "0x60000C2")]
	internal abstract uint Read_uint();

	[Token(Token = "0x60000C3")]
	internal abstract string Read_string();

	[Token(Token = "0x60000C4")]
	internal abstract byte[] Read_byteArray();

	[Token(Token = "0x60000C5")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058F78", Offset = "0x1058F78")]
	public abstract string ReadPropertyName();

	[Token(Token = "0x60000C6")]
	protected abstract Type ReadKeyPrefix(bool ignore = false);

	[Token(Token = "0x60000C7")]
	protected abstract void ReadKeySuffix();

	[Token(Token = "0x60000C8")]
	internal abstract byte[] ReadElement(bool skip = false);

	[Token(Token = "0x60000C9")]
	internal abstract bool Goto(string key);

	[Token(Token = "0x60000CA")]
	public abstract void Dispose();

	[Token(Token = "0x60000CB")]
	internal abstract bool StartReadObject();

	[Token(Token = "0x60000CC")]
	internal abstract void EndReadObject();

	[Token(Token = "0x60000CD")]
	internal abstract bool StartReadDictionary();

	[Token(Token = "0x60000CE")]
	internal abstract void EndReadDictionary();

	[Token(Token = "0x60000CF")]
	internal abstract bool StartReadDictionaryKey();

	[Token(Token = "0x60000D0")]
	internal abstract void EndReadDictionaryKey();

	[Token(Token = "0x60000D1")]
	internal abstract void StartReadDictionaryValue();

	[Token(Token = "0x60000D2")]
	internal abstract bool EndReadDictionaryValue();

	[Token(Token = "0x60000D3")]
	internal abstract bool StartReadCollection();

	[Token(Token = "0x60000D4")]
	internal abstract void EndReadCollection();

	[Token(Token = "0x60000D5")]
	internal abstract bool StartReadCollectionItem();

	[Token(Token = "0x60000D6")]
	internal abstract bool EndReadCollectionItem();

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x27F5BB8", Offset = "0x27F5BB8", VA = "0x27F5BB8")]
	internal ES3Reader(ES3Settings settings, bool readHeaderAndFooter = true)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x27F5D04", Offset = "0x27F5D04", VA = "0x27F5D04", Slot = "40")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058F8C", Offset = "0x1058F8C")]
	public virtual void Skip()
	{
	}

	[Token(Token = "0x60000DB")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x60000DC")]
	public virtual void ReadInto<T>(object obj)
	{
	}

	[Token(Token = "0x60000DD")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058FA0", Offset = "0x1058FA0")]
	public T ReadProperty<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x60000DE")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058FB4", Offset = "0x1058FB4")]
	public T ReadProperty<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x27F5D18", Offset = "0x27F5D18", VA = "0x27F5D18")]
	internal Type ReadType()
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x27F5E08", Offset = "0x27F5E08", VA = "0x27F5E08")]
	public void SetPrivateProperty(string name, object value, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x27F6000", Offset = "0x27F6000", VA = "0x27F6000")]
	public void SetPrivateField(string name, object value, object objectContainingField)
	{
	}

	[Token(Token = "0x60000E2")]
	public virtual T Read<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E3")]
	public virtual T Read<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E4")]
	public virtual void ReadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x60000E5")]
	protected virtual void ReadObject<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x60000E6")]
	protected virtual T ReadObject<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E7")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058FC8", Offset = "0x1058FC8")]
	public virtual T Read<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058FDC", Offset = "0x1058FDC")]
	public virtual void ReadInto<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x60000E9")]
	private Type ReadTypeFromHeader<T>()
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x27F61F8", Offset = "0x27F61F8", VA = "0x27F61F8")]
	public static ES3Reader Create()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x27F62F4", Offset = "0x27F62F4", VA = "0x27F62F4")]
	public static ES3Reader Create(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x27F637C", Offset = "0x27F637C", VA = "0x27F637C")]
	public static ES3Reader Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x27F6250", Offset = "0x27F6250", VA = "0x27F6250")]
	public static ES3Reader Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x27F644C", Offset = "0x27F644C", VA = "0x27F644C")]
	public static ES3Reader Create(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x27F64AC", Offset = "0x27F64AC", VA = "0x27F64AC")]
	public static ES3Reader Create(byte[] bytes, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x27F6578", Offset = "0x27F6578", VA = "0x27F6578")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x27F6620", Offset = "0x27F6620", VA = "0x27F6620")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings, bool readHeaderAndFooter)
	{
		return null;
	}
}
[Token(Token = "0x200000C")]
public class ES3Settings : ICloneable
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ES3Settings _defaults;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ES3.Location _location;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ES3.EncryptionType encryptionType;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string encryptionPassword;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ES3.Directory directory;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ES3.Format format;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bufferSize;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Encoding encoding;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10516A0", Offset = "0x10516A0")]
	public bool typeChecking;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10516B4", Offset = "0x10516B4")]
	public bool safeReflection;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10516C8", Offset = "0x10516C8")]
	public ES3.ReferenceMode memberReferenceMode;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10516DC", Offset = "0x10516DC")]
	public ES3.ReferenceMode referenceMode;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10516F0", Offset = "0x10516F0")]
	public string[] assemblyNames;

	[Token(Token = "0x17000008")]
	public ES3.Location location
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x27F5B78", Offset = "0x27F5B78", VA = "0x27F5B78")]
		get
		{
			return default(ES3.Location);
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x27F6C78", Offset = "0x27F6C78", VA = "0x27F6C78")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public string FullPath
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x27F6FE0", Offset = "0x27F6FE0", VA = "0x27F6FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x27F6C80", Offset = "0x27F6C80", VA = "0x27F6C80")]
	private void CopyInto(ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x27F5B38", Offset = "0x27F5B38", VA = "0x27F5B38")]
	public ES3Settings()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x27F6354", Offset = "0x27F6354", VA = "0x27F6354")]
	public ES3Settings(string path)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x27F63EC", Offset = "0x27F63EC", VA = "0x27F63EC")]
	public ES3Settings(string path, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x27F6DAC", Offset = "0x27F6DAC", VA = "0x27F6DAC")]
	public ES3Settings(ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x27F6DE4", Offset = "0x27F6DE4", VA = "0x27F6DE4")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x27F6E24", Offset = "0x27F6E24", VA = "0x27F6E24")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x27F6BB0", Offset = "0x27F6BB0", VA = "0x27F6BB0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1058FF0", Offset = "0x1058FF0")]
	public ES3Settings(bool applyDefaults)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x27F6CF4", Offset = "0x27F6CF4", VA = "0x27F6CF4")]
	protected void ApplyDefaults()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x27F6E60", Offset = "0x27F6E60", VA = "0x27F6E60")]
	internal static void LoadDefaults()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x27F7200", Offset = "0x27F7200", VA = "0x27F7200")]
	private static bool IsAbsolute(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x27F72A4", Offset = "0x27F72A4", VA = "0x27F72A4", Slot = "4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059004", Offset = "0x1059004")]
	public object Clone()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1049E34", Offset = "0x1049E34")]
public class ES3SerializableSettings : ES3Settings
{
	[Token(Token = "0x6000102")]
	[Address(RVA = "0x27F6B34", Offset = "0x27F6B34", VA = "0x27F6B34")]
	public ES3SerializableSettings()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x27F6C04", Offset = "0x27F6C04", VA = "0x27F6C04")]
	public ES3SerializableSettings(bool applyDefaults)
	{
	}
}
[Token(Token = "0x200000E")]
public class ES3Cloud : ES3WebClass
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051388", Offset = "0x1051388")]
	private sealed class <Sync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x1CADF84", Offset = "0x1CADF84", VA = "0x1CADF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x1CADFEC", Offset = "0x1CADFEC", VA = "0x1CADFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1CAA214", Offset = "0x1CAA214", VA = "0x1CAA214")]
		[DebuggerHidden]
		public <Sync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1CADE20", Offset = "0x1CADE20", VA = "0x1CADE20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1CADE24", Offset = "0x1CADE24", VA = "0x1CADE24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1CADF8C", Offset = "0x1CADF8C", VA = "0x1CADF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051398", Offset = "0x1051398")]
	private sealed class <UploadFile>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] bytes;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x1CAE358", Offset = "0x1CAE358", VA = "0x1CAE358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x1CAE3C0", Offset = "0x1CAE3C0", VA = "0x1CAE3C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1CAACD0", Offset = "0x1CAACD0", VA = "0x1CAACD0")]
		[DebuggerHidden]
		public <UploadFile>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1CADFF4", Offset = "0x1CADFF4", VA = "0x1CADFF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1CAE0D0", Offset = "0x1CAE0D0", VA = "0x1CAE0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1CAE010", Offset = "0x1CAE010", VA = "0x1CAE010")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1CAE360", Offset = "0x1CAE360", VA = "0x1CAE360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513A8", Offset = "0x10513A8")]
	private sealed class <DownloadFile>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3File es3File;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1CACF80", Offset = "0x1CACF80", VA = "0x1CACF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1CACFE8", Offset = "0x1CACFE8", VA = "0x1CACFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1CAB2E8", Offset = "0x1CAB2E8", VA = "0x1CAB2E8")]
		[DebuggerHidden]
		public <DownloadFile>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1CACB50", Offset = "0x1CACB50", VA = "0x1CACB50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1CACC2C", Offset = "0x1CACC2C", VA = "0x1CACC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1CACB6C", Offset = "0x1CACB6C", VA = "0x1CACB6C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1CACF88", Offset = "0x1CACF88", VA = "0x1CACF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513B8", Offset = "0x10513B8")]
	private sealed class <DownloadFile>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x1CAD3A8", Offset = "0x1CAD3A8", VA = "0x1CAD3A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x1CAD410", Offset = "0x1CAD410", VA = "0x1CAD410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1CAB314", Offset = "0x1CAB314", VA = "0x1CAB314")]
		[DebuggerHidden]
		public <DownloadFile>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1CACFF0", Offset = "0x1CACFF0", VA = "0x1CACFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1CAD0CC", Offset = "0x1CAD0CC", VA = "0x1CAD0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1CAD00C", Offset = "0x1CAD00C", VA = "0x1CAD00C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1CAD3B0", Offset = "0x1CAD3B0", VA = "0x1CAD3B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513C8", Offset = "0x10513C8")]
	private sealed class <DeleteFile>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x1CACAE0", Offset = "0x1CACAE0", VA = "0x1CACAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x1CACB48", Offset = "0x1CACB48", VA = "0x1CACB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1CAB794", Offset = "0x1CAB794", VA = "0x1CAB794")]
		[DebuggerHidden]
		public <DeleteFile>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1CAC444", Offset = "0x1CAC444", VA = "0x1CAC444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1CAC520", Offset = "0x1CAC520", VA = "0x1CAC520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1CAC460", Offset = "0x1CAC460", VA = "0x1CAC460")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1CACAE8", Offset = "0x1CACAE8", VA = "0x1CACAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513D8", Offset = "0x10513D8")]
	private sealed class <RenameFile>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Settings newSettings;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x1CADDB0", Offset = "0x1CADDB0", VA = "0x1CADDB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x1CADE18", Offset = "0x1CADE18", VA = "0x1CADE18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1CABCA4", Offset = "0x1CABCA4", VA = "0x1CABCA4")]
		[DebuggerHidden]
		public <RenameFile>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1CADAD0", Offset = "0x1CADAD0", VA = "0x1CADAD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1CADBAC", Offset = "0x1CADBAC", VA = "0x1CADBAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1CADAEC", Offset = "0x1CADAEC", VA = "0x1CADAEC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1CADDB8", Offset = "0x1CADDB8", VA = "0x1CADDB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513E8", Offset = "0x10513E8")]
	private sealed class <DownloadFilenames>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x1CAD700", Offset = "0x1CAD700", VA = "0x1CAD700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x1CAD768", Offset = "0x1CAD768", VA = "0x1CAD768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1CABE08", Offset = "0x1CABE08", VA = "0x1CABE08")]
		[DebuggerHidden]
		public <DownloadFilenames>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1CAD418", Offset = "0x1CAD418", VA = "0x1CAD418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1CAD4F4", Offset = "0x1CAD4F4", VA = "0x1CAD4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1CAD434", Offset = "0x1CAD434", VA = "0x1CAD434")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1CAD708", Offset = "0x1CAD708", VA = "0x1CAD708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10513F8", Offset = "0x10513F8")]
	private sealed class <DownloadTimestamp>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x1CADA60", Offset = "0x1CADA60", VA = "0x1CADA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x1CADAC8", Offset = "0x1CADAC8", VA = "0x1CADAC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1CAC288", Offset = "0x1CAC288", VA = "0x1CAC288")]
		[DebuggerHidden]
		public <DownloadTimestamp>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1CAD770", Offset = "0x1CAD770", VA = "0x1CAD770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1CAD84C", Offset = "0x1CAD84C", VA = "0x1CAD84C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1CAD78C", Offset = "0x1CAD78C", VA = "0x1CAD78C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1CADA68", Offset = "0x1CADA68", VA = "0x1CADA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Encoding encoding;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] _data;

	[Token(Token = "0x1700000A")]
	public byte[] data
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1CA9B38", Offset = "0x1CA9B38", VA = "0x1CA9B38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public string text
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x1CA9B40", Offset = "0x1CA9B40", VA = "0x1CA9B40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public string[] filenames
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x1CA9B74", Offset = "0x1CA9B74", VA = "0x1CA9B74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public DateTime timestamp
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1CA9C38", Offset = "0x1CA9C38", VA = "0x1CA9C38")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1CA9A6C", Offset = "0x1CA9A6C", VA = "0x1CA9A6C")]
	public ES3Cloud(string url, string apiKey)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1CA9DC0", Offset = "0x1CA9DC0", VA = "0x1CA9DC0")]
	public IEnumerator Sync()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1CA9EC4", Offset = "0x1CA9EC4", VA = "0x1CA9EC4")]
	public IEnumerator Sync(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1CA9F48", Offset = "0x1CA9F48", VA = "0x1CA9F48")]
	public IEnumerator Sync(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1CA9FD0", Offset = "0x1CA9FD0", VA = "0x1CA9FD0")]
	public IEnumerator Sync(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1CAA05C", Offset = "0x1CAA05C", VA = "0x1CAA05C")]
	public IEnumerator Sync(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1CAA0E8", Offset = "0x1CAA0E8", VA = "0x1CAA0E8")]
	public IEnumerator Sync(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1CAA180", Offset = "0x1CAA180", VA = "0x1CAA180")]
	public IEnumerator Sync(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1CA9E34", Offset = "0x1CA9E34", VA = "0x1CA9E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059018", Offset = "0x1059018")]
	private IEnumerator Sync(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1CAA240", Offset = "0x1CAA240", VA = "0x1CAA240")]
	public IEnumerator UploadFile()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1CAA34C", Offset = "0x1CAA34C", VA = "0x1CAA34C")]
	public IEnumerator UploadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1CAA3D0", Offset = "0x1CAA3D0", VA = "0x1CAA3D0")]
	public IEnumerator UploadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1CAA458", Offset = "0x1CAA458", VA = "0x1CAA458")]
	public IEnumerator UploadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1CAA4E4", Offset = "0x1CAA4E4", VA = "0x1CAA4E4")]
	public IEnumerator UploadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1CAA570", Offset = "0x1CAA570", VA = "0x1CAA570")]
	public IEnumerator UploadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1CAA608", Offset = "0x1CAA608", VA = "0x1CAA608")]
	public IEnumerator UploadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1CAA69C", Offset = "0x1CAA69C", VA = "0x1CAA69C")]
	public IEnumerator UploadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1CAAC00", Offset = "0x1CAAC00", VA = "0x1CAAC00")]
	public IEnumerator UploadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1CAAC7C", Offset = "0x1CAAC7C", VA = "0x1CAAC7C")]
	public IEnumerator UploadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1CAA2B4", Offset = "0x1CAA2B4", VA = "0x1CAA2B4")]
	public IEnumerator UploadFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1CAAB68", Offset = "0x1CAAB68", VA = "0x1CAAB68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105907C", Offset = "0x105907C")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1CAACFC", Offset = "0x1CAACFC", VA = "0x1CAACFC")]
	public IEnumerator DownloadFile()
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1CAAE0C", Offset = "0x1CAAE0C", VA = "0x1CAAE0C")]
	public IEnumerator DownloadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1CAAE94", Offset = "0x1CAAE94", VA = "0x1CAAE94")]
	public IEnumerator DownloadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1CAAF20", Offset = "0x1CAAF20", VA = "0x1CAAF20")]
	public IEnumerator DownloadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1CAAFB0", Offset = "0x1CAAFB0", VA = "0x1CAAFB0")]
	public IEnumerator DownloadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1CAB040", Offset = "0x1CAB040", VA = "0x1CAB040")]
	public IEnumerator DownloadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1CAB0DC", Offset = "0x1CAB0DC", VA = "0x1CAB0DC")]
	public IEnumerator DownloadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1CAB174", Offset = "0x1CAB174", VA = "0x1CAB174")]
	public IEnumerator DownloadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1CAB274", Offset = "0x1CAB274", VA = "0x1CAB274")]
	public IEnumerator DownloadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1CAB2E0", Offset = "0x1CAB2E0", VA = "0x1CAB2E0")]
	public IEnumerator DownloadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1CAB1DC", Offset = "0x1CAB1DC", VA = "0x1CAB1DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10590E0", Offset = "0x10590E0")]
	private IEnumerator DownloadFile(ES3File es3File, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1CAAD74", Offset = "0x1CAAD74", VA = "0x1CAAD74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059144", Offset = "0x1059144")]
	private IEnumerator DownloadFile(ES3Settings settings, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1CAB340", Offset = "0x1CAB340", VA = "0x1CAB340")]
	public IEnumerator DeleteFile()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1CAB444", Offset = "0x1CAB444", VA = "0x1CAB444")]
	public IEnumerator DeleteFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1CAB4C8", Offset = "0x1CAB4C8", VA = "0x1CAB4C8")]
	public IEnumerator DeleteFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1CAB550", Offset = "0x1CAB550", VA = "0x1CAB550")]
	public IEnumerator DeleteFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1CAB5DC", Offset = "0x1CAB5DC", VA = "0x1CAB5DC")]
	public IEnumerator DeleteFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1CAB668", Offset = "0x1CAB668", VA = "0x1CAB668")]
	public IEnumerator DeleteFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1CAB700", Offset = "0x1CAB700", VA = "0x1CAB700")]
	public IEnumerator DeleteFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1CAB3B4", Offset = "0x1CAB3B4", VA = "0x1CAB3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10591A8", Offset = "0x10591A8")]
	private IEnumerator DeleteFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1CAB7C0", Offset = "0x1CAB7C0", VA = "0x1CAB7C0")]
	public IEnumerator RenameFile(string filePath, string newFilePath)
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1CAB904", Offset = "0x1CAB904", VA = "0x1CAB904")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1CAB9B4", Offset = "0x1CAB9B4", VA = "0x1CAB9B4")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1CABA68", Offset = "0x1CABA68", VA = "0x1CABA68")]
	public IEnumerator RenameFile(string filePath, string newFilePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1CABB20", Offset = "0x1CABB20", VA = "0x1CABB20")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1CABBE4", Offset = "0x1CABBE4", VA = "0x1CABBE4")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1CAB86C", Offset = "0x1CAB86C", VA = "0x1CAB86C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105920C", Offset = "0x105920C")]
	private IEnumerator RenameFile(ES3Settings settings, ES3Settings newSettings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1CABCD0", Offset = "0x1CABCD0", VA = "0x1CABCD0")]
	public IEnumerator DownloadFilenames()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1CABDA8", Offset = "0x1CABDA8", VA = "0x1CABDA8")]
	public IEnumerator DownloadFilenames(string user)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1CABD24", Offset = "0x1CABD24", VA = "0x1CABD24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059270", Offset = "0x1059270")]
	public IEnumerator DownloadFilenames(string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1CABE34", Offset = "0x1CABE34", VA = "0x1CABE34")]
	public IEnumerator DownloadTimestamp()
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1CABF38", Offset = "0x1CABF38", VA = "0x1CABF38")]
	public IEnumerator DownloadTimestamp(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1CABFBC", Offset = "0x1CABFBC", VA = "0x1CABFBC")]
	public IEnumerator DownloadTimestamp(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1CAC044", Offset = "0x1CAC044", VA = "0x1CAC044")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1CAC0D0", Offset = "0x1CAC0D0", VA = "0x1CAC0D0")]
	public IEnumerator DownloadTimestamp(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1CAC15C", Offset = "0x1CAC15C", VA = "0x1CAC15C")]
	public IEnumerator DownloadTimestamp(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1CAC1F4", Offset = "0x1CAC1F4", VA = "0x1CAC1F4")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1CABEA8", Offset = "0x1CABEA8", VA = "0x1CABEA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10592D4", Offset = "0x10592D4")]
	private IEnumerator DownloadTimestamp(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1CAC2B4", Offset = "0x1CAC2B4", VA = "0x1CAC2B4")]
	private long DateTimeToUnixTimestamp(DateTime dt)
	{
		return default(long);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1CAC3BC", Offset = "0x1CAC3BC", VA = "0x1CAC3BC")]
	private long GetFileTimestamp(ES3Settings settings)
	{
		return default(long);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1CAC428", Offset = "0x1CAC428", VA = "0x1CAC428", Slot = "4")]
	protected override void Reset()
	{
	}
}
[Token(Token = "0x200000F")]
public abstract class ES3Writer : IDisposable
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected HashSet<string> keysToDelete;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool writeHeaderAndFooter;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	internal bool overwriteKeys;

	[Token(Token = "0x6000146")]
	internal abstract void WriteNull();

	[Token(Token = "0x6000147")]
	internal abstract void StartWriteFile();

	[Token(Token = "0x6000148")]
	internal abstract void EndWriteFile();

	[Token(Token = "0x6000149")]
	internal abstract void StartWriteObject(string name);

	[Token(Token = "0x600014A")]
	internal abstract void EndWriteObject(string name);

	[Token(Token = "0x600014B")]
	internal abstract void StartWriteProperty(string name);

	[Token(Token = "0x600014C")]
	internal abstract void EndWriteProperty(string name);

	[Token(Token = "0x600014D")]
	internal abstract void StartWriteCollection(int length);

	[Token(Token = "0x600014E")]
	internal abstract void EndWriteCollection();

	[Token(Token = "0x600014F")]
	internal abstract void StartWriteCollectionItem(int index);

	[Token(Token = "0x6000150")]
	internal abstract void EndWriteCollectionItem(int index);

	[Token(Token = "0x6000151")]
	internal abstract void StartWriteDictionary(int length);

	[Token(Token = "0x6000152")]
	internal abstract void EndWriteDictionary();

	[Token(Token = "0x6000153")]
	internal abstract void StartWriteDictionaryKey(int index);

	[Token(Token = "0x6000154")]
	internal abstract void EndWriteDictionaryKey(int index);

	[Token(Token = "0x6000155")]
	internal abstract void StartWriteDictionaryValue(int index);

	[Token(Token = "0x6000156")]
	internal abstract void EndWriteDictionaryValue(int index);

	[Token(Token = "0x6000157")]
	public abstract void Dispose();

	[Token(Token = "0x6000158")]
	internal abstract void WriteRawProperty(string name, byte[] bytes);

	[Token(Token = "0x6000159")]
	internal abstract void WritePrimitive(int value);

	[Token(Token = "0x600015A")]
	internal abstract void WritePrimitive(float value);

	[Token(Token = "0x600015B")]
	internal abstract void WritePrimitive(bool value);

	[Token(Token = "0x600015C")]
	internal abstract void WritePrimitive(decimal value);

	[Token(Token = "0x600015D")]
	internal abstract void WritePrimitive(double value);

	[Token(Token = "0x600015E")]
	internal abstract void WritePrimitive(long value);

	[Token(Token = "0x600015F")]
	internal abstract void WritePrimitive(ulong value);

	[Token(Token = "0x6000160")]
	internal abstract void WritePrimitive(uint value);

	[Token(Token = "0x6000161")]
	internal abstract void WritePrimitive(byte value);

	[Token(Token = "0x6000162")]
	internal abstract void WritePrimitive(sbyte value);

	[Token(Token = "0x6000163")]
	internal abstract void WritePrimitive(short value);

	[Token(Token = "0x6000164")]
	internal abstract void WritePrimitive(ushort value);

	[Token(Token = "0x6000165")]
	internal abstract void WritePrimitive(char value);

	[Token(Token = "0x6000166")]
	internal abstract void WritePrimitive(string value);

	[Token(Token = "0x6000167")]
	internal abstract void WritePrimitive(byte[] value);

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x279CE14", Offset = "0x279CE14", VA = "0x279CE14")]
	protected ES3Writer(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
	}

	[Token(Token = "0x6000169")]
	public virtual void Write<T>(string key, object value)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x279CEC0", Offset = "0x279CEC0", VA = "0x279CEC0", Slot = "40")]
	internal virtual void Write(string key, Type type, byte[] value)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x279D01C", Offset = "0x279D01C", VA = "0x279D01C", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059338", Offset = "0x1059338")]
	public virtual void Write(Type type, string key, object value)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x279D13C", Offset = "0x279D13C", VA = "0x279D13C", Slot = "42")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x105934C", Offset = "0x105934C")]
	public virtual void Write(object value, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x279D20C", Offset = "0x279D20C", VA = "0x279D20C", Slot = "43")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059360", Offset = "0x1059360")]
	public virtual void Write(object value, ES3Type type, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x279D508", Offset = "0x279D508", VA = "0x279D508", Slot = "44")]
	internal virtual void WriteRef(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x279D66C", Offset = "0x279D66C", VA = "0x279D66C", Slot = "45")]
	public virtual void WriteProperty(string name, object value)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x279D6BC", Offset = "0x279D6BC", VA = "0x279D6BC", Slot = "46")]
	public virtual void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x279D70C", Offset = "0x279D70C", VA = "0x279D70C", Slot = "47")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059374", Offset = "0x1059374")]
	public virtual void WriteProperty(string name, object value, ES3Type type)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x279D76C", Offset = "0x279D76C", VA = "0x279D76C", Slot = "48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059388", Offset = "0x1059388")]
	public virtual void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x6000173")]
	public virtual void WriteProperty<T>(string name, object value)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x279493C", Offset = "0x279493C", VA = "0x279493C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x105939C", Offset = "0x105939C")]
	public void WritePropertyByRef(string name, UnityEngine.Object value)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x279D7C4", Offset = "0x279D7C4", VA = "0x279D7C4")]
	public void WritePrivateProperty(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x279DA20", Offset = "0x279DA20", VA = "0x279DA20")]
	public void WritePrivateField(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x279DC7C", Offset = "0x279DC7C", VA = "0x279DC7C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10593B0", Offset = "0x10593B0")]
	public void WritePrivateProperty(string name, object objectContainingProperty, ES3Type type)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x279DE9C", Offset = "0x279DE9C", VA = "0x279DE9C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10593C4", Offset = "0x10593C4")]
	public void WritePrivateField(string name, object objectContainingField, ES3Type type)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x279E0BC", Offset = "0x279E0BC", VA = "0x279E0BC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10593D8", Offset = "0x10593D8")]
	public void WritePrivatePropertyByRef(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x279E300", Offset = "0x279E300", VA = "0x279E300")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10593EC", Offset = "0x10593EC")]
	public void WritePrivateFieldByRef(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x279CF84", Offset = "0x279CF84", VA = "0x279CF84")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059400", Offset = "0x1059400")]
	public void WriteType(Type type)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x279E544", Offset = "0x279E544", VA = "0x279E544")]
	public static ES3Writer Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x279E5C4", Offset = "0x279E5C4", VA = "0x279E5C4")]
	public static ES3Writer Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x279E5D4", Offset = "0x279E5D4", VA = "0x279E5D4")]
	internal static ES3Writer Create(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys, bool append)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x279E634", Offset = "0x279E634", VA = "0x279E634")]
	internal static ES3Writer Create(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x279E798", Offset = "0x279E798", VA = "0x279E798", Slot = "50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1059414", Offset = "0x1059414")]
	public virtual void MarkKeyForDeletion(string key)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x279E800", Offset = "0x279E800", VA = "0x279E800")]
	protected void Merge()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x279E93C", Offset = "0x279E93C", VA = "0x279E93C")]
	protected void Merge(ES3Reader reader)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x279EC00", Offset = "0x279EC00", VA = "0x279EC00", Slot = "51")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x279EC14", Offset = "0x279EC14", VA = "0x279EC14", Slot = "52")]
	public virtual void Save(bool overwriteKeys)
	{
	}
}
[Token(Token = "0x2000010")]
public class AmbientControllerExample : MonoBehaviour
{
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051408", Offset = "0x1051408")]
	private sealed class <ZoomIn>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmbientControllerExample <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tStamp>5__2;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startFOV>5__3;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startOffset>5__4;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x1CA41E0", Offset = "0x1CA41E0", VA = "0x1CA41E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x1CA4248", Offset = "0x1CA4248", VA = "0x1CA4248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1CA3F0C", Offset = "0x1CA3F0C", VA = "0x1CA3F0C")]
		[DebuggerHidden]
		public <ZoomIn>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1CA3F8C", Offset = "0x1CA3F8C", VA = "0x1CA3F8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1CA3F90", Offset = "0x1CA3F90", VA = "0x1CA3F90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1CA41E8", Offset = "0x1CA41E8", VA = "0x1CA41E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051418", Offset = "0x1051418")]
	private sealed class <ZoomOut>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmbientControllerExample <>4__this;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tStamp>5__2;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startFOV>5__3;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startOffset>5__4;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x1CA44B0", Offset = "0x1CA44B0", VA = "0x1CA44B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x1CA4518", Offset = "0x1CA4518", VA = "0x1CA4518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1CA3F38", Offset = "0x1CA3F38", VA = "0x1CA3F38")]
		[DebuggerHidden]
		public <ZoomOut>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1CA4250", Offset = "0x1CA4250", VA = "0x1CA4250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1CA4254", Offset = "0x1CA4254", VA = "0x1CA4254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1CA44B8", Offset = "0x1CA44B8", VA = "0x1CA44B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cameraRig;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camPanPoint;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light sunLight;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform sunTransform;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeMulti;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve timeCurve;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient sunColor;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve sunIntensity;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve sunAnim;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1051704", Offset = "0x1051704")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material skybox;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve atmosphereThickness;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve exposure;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve ambientIntensity;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gradient fogColor;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve shadowDistance;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1051718", Offset = "0x1051718")]
	public float zoomDuration;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float minFOV;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color CityLights;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float CityLightsSwitchTime;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material[] horizonMaterials;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material terrainMaterial;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float origFOV;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float origOffset;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isZoomed;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int frame;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public float time;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float panTargetLerp;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float tiltTargetLerp;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float pedestaltargetLerp;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public bool input;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Transform sunRotation;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject gui;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float x;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float y;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1CA2F24", Offset = "0x1CA2F24", VA = "0x1CA2F24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1CA33D8", Offset = "0x1CA33D8", VA = "0x1CA33D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1CA3420", Offset = "0x1CA3420", VA = "0x1CA3420")]
	private void DelayedRefresh()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1CA3440", Offset = "0x1CA3440", VA = "0x1CA3440")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1CA3BD4", Offset = "0x1CA3BD4", VA = "0x1CA3BD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1CA30F0", Offset = "0x1CA30F0", VA = "0x1CA30F0")]
	private void EvaluateCurves()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1CA3904", Offset = "0x1CA3904", VA = "0x1CA3904")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059428", Offset = "0x1059428")]
	private IEnumerator ZoomIn()
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1CA3974", Offset = "0x1CA3974", VA = "0x1CA3974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105948C", Offset = "0x105948C")]
	private IEnumerator ZoomOut()
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1CA39E4", Offset = "0x1CA39E4", VA = "0x1CA39E4")]
	private void TimePlus()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1CA3A38", Offset = "0x1CA3A38", VA = "0x1CA3A38")]
	private void TimeMinus()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1CA3A8C", Offset = "0x1CA3A8C", VA = "0x1CA3A8C")]
	private void SwitchCityLights(bool on)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1CA3F64", Offset = "0x1CA3F64", VA = "0x1CA3F64")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1CA3F6C", Offset = "0x1CA3F6C", VA = "0x1CA3F6C")]
	public AmbientControllerExample()
	{
	}
}
[Token(Token = "0x2000011")]
public class ButtonHandler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerExitHandler
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour script;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string invoke;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pointerDown;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1CA4520", Offset = "0x1CA4520", VA = "0x1CA4520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1CA4554", Offset = "0x1CA4554", VA = "0x1CA4554", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1CA4560", Offset = "0x1CA4560", VA = "0x1CA4560", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1CA4568", Offset = "0x1CA4568", VA = "0x1CA4568", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1CA4570", Offset = "0x1CA4570", VA = "0x1CA4570")]
	public ButtonHandler()
	{
	}
}
[Token(Token = "0x2000012")]
public class ButtonSetColorOnClick : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color1;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color2;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1CA4578", Offset = "0x1CA4578", VA = "0x1CA4578")]
	public void SetColor1()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1CA45E8", Offset = "0x1CA45E8", VA = "0x1CA45E8")]
	public void SetColor2()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1CA4658", Offset = "0x1CA4658", VA = "0x1CA4658")]
	public ButtonSetColorOnClick()
	{
	}
}
[Token(Token = "0x2000013")]
public class HorizonControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject horizonParent;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject horizonBaked;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject horizonDisplaced;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject horizonFlat;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] horizonMaterials;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int materialUsedAsReference;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material terrainMaterial;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject objectSwitchGroup;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051758", Offset = "0x1051758")]
	public float maskScrollSpeed;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051778", Offset = "0x1051778")]
	public float layerScrollSpeed;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxDisplacement;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051790", Offset = "0x1051790")]
	public float dispChangeSpeed;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float snowHeightWinter;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float snowHeightTransitionWinter;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool allowKeyboardInput;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector4 mapScaleOffset;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector4 layer1ScaleOffset;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector4 layer2ScaleOffset;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector4 layer3ScaleOffset;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector4 layer4ScaleOffset;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float displacementAmount;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float globalNormalMapIntensity;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float detailNormalMapIntensity;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float fogAmount;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float snowAmount;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float snowHeight;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float snowHeightTransition;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float waterWaves;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector4 mOrig;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector4 l1Orig;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 l2Orig;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector4 l3Orig;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector4 l4Orig;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float dispOrig;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float gnmOrig;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float dnmOrig;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float fogOrig;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float snowOrig;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float snowHOrig;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float snowHTOrig;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float wavesOrig;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool specialkey;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x27A5C04", Offset = "0x27A5C04", VA = "0x27A5C04")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x27A62D0", Offset = "0x27A62D0", VA = "0x27A62D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x27A62F4", Offset = "0x27A62F4", VA = "0x27A62F4")]
	public void EnableHorizon()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x27A69E4", Offset = "0x27A69E4", VA = "0x27A69E4")]
	public void DisableHorizon()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x27A6ACC", Offset = "0x27A6ACC", VA = "0x27A6ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x27A6AD0", Offset = "0x27A6AD0", VA = "0x27A6AD0")]
	public void ScrollMaskLeftRight(float direction)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x27A6C4C", Offset = "0x27A6C4C", VA = "0x27A6C4C")]
	public void ScrollMaskUpDown(float direction)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x27A6CCC", Offset = "0x27A6CCC", VA = "0x27A6CCC")]
	public void ScaleMask(float direction)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x27A6B50", Offset = "0x27A6B50", VA = "0x27A6B50")]
	private void MaskScaleOffset(Vector4 scaleOffset)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x27A6E68", Offset = "0x27A6E68", VA = "0x27A6E68")]
	public void ScrollMapsLeftRight(float direction)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x27A71F4", Offset = "0x27A71F4", VA = "0x27A71F4")]
	public void ScrollMapsUpDown(float direction)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x27A73B0", Offset = "0x27A73B0", VA = "0x27A73B0")]
	public void ScaleMaps(float direction)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x27A7024", Offset = "0x27A7024", VA = "0x27A7024")]
	private void MapsScaleOffset(Vector4 scaleOffsetLayer1, Vector4 scaleOffsetLayer2, Vector4 scaleOffsetLayer3, Vector4 scaleOffsetLayer4)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x27A7654", Offset = "0x27A7654", VA = "0x27A7654")]
	private void ResetMaskPos()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x27A7758", Offset = "0x27A7758", VA = "0x27A7758")]
	public void Displace(float direction)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x27A6DB4", Offset = "0x27A6DB4", VA = "0x27A6DB4")]
	public void SwitchHorizonType()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x27A79BC", Offset = "0x27A79BC", VA = "0x27A79BC")]
	public void Bump(float direction)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x27A7B5C", Offset = "0x27A7B5C", VA = "0x27A7B5C")]
	public void Fog(float direction)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x27A7CD8", Offset = "0x27A7CD8", VA = "0x27A7CD8")]
	public void Snow(float direction)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x27A64BC", Offset = "0x27A64BC", VA = "0x27A64BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x27A7890", Offset = "0x27A7890", VA = "0x27A7890")]
	public bool MapsAreAtDefaultValues()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x27A7F44", Offset = "0x27A7F44", VA = "0x27A7F44")]
	public void ScrollMaskLeft()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x27A7F4C", Offset = "0x27A7F4C", VA = "0x27A7F4C")]
	public void ScrollMaskRight()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x27A7F54", Offset = "0x27A7F54", VA = "0x27A7F54")]
	public void ScrollMaskUp()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x27A7F5C", Offset = "0x27A7F5C", VA = "0x27A7F5C")]
	public void ScrollMaskDown()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x27A7F64", Offset = "0x27A7F64", VA = "0x27A7F64")]
	public void ScaleMaskUp()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x27A7F6C", Offset = "0x27A7F6C", VA = "0x27A7F6C")]
	public void ScaleMaskDown()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x27A7F74", Offset = "0x27A7F74", VA = "0x27A7F74")]
	public void ScrollMapsLeft()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x27A7F7C", Offset = "0x27A7F7C", VA = "0x27A7F7C")]
	public void ScrollMapsRight()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x27A7F84", Offset = "0x27A7F84", VA = "0x27A7F84")]
	public void ScrollMapsUp()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x27A7F8C", Offset = "0x27A7F8C", VA = "0x27A7F8C")]
	public void ScrollMapsDown()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x27A7F94", Offset = "0x27A7F94", VA = "0x27A7F94")]
	public void ScaleMapsUp()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x27A7F9C", Offset = "0x27A7F9C", VA = "0x27A7F9C")]
	public void ScaleMapsDown()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x27A7FA4", Offset = "0x27A7FA4", VA = "0x27A7FA4")]
	public void DisplacePlus()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x27A7FAC", Offset = "0x27A7FAC", VA = "0x27A7FAC")]
	public void DisplaceMinus()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x27A7FB4", Offset = "0x27A7FB4", VA = "0x27A7FB4")]
	public void BumpPlus()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x27A7FBC", Offset = "0x27A7FBC", VA = "0x27A7FBC")]
	public void BumpMinus()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x27A7FC4", Offset = "0x27A7FC4", VA = "0x27A7FC4")]
	public void FogPlus()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x27A7FCC", Offset = "0x27A7FCC", VA = "0x27A7FCC")]
	public void FogMinus()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x27A7FD4", Offset = "0x27A7FD4", VA = "0x27A7FD4")]
	public void SnowPlus()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x27A7FDC", Offset = "0x27A7FDC", VA = "0x27A7FDC")]
	public void SnowMinus()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x27A7FE4", Offset = "0x27A7FE4", VA = "0x27A7FE4")]
	public HorizonControllerExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class MoveSample : MonoBehaviour
{
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x27A8000", Offset = "0x27A8000", VA = "0x27A8000")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x27A82A4", Offset = "0x27A82A4", VA = "0x27A82A4")]
	public MoveSample()
	{
	}
}
[Token(Token = "0x2000015")]
public class RotateSample : MonoBehaviour
{
	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1ED22D0", Offset = "0x1ED22D0", VA = "0x1ED22D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1ED256C", Offset = "0x1ED256C", VA = "0x1ED256C")]
	public RotateSample()
	{
	}
}
[Token(Token = "0x2000016")]
public class SampleInfo : MonoBehaviour
{
	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1ED2574", Offset = "0x1ED2574", VA = "0x1ED2574")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1ED2828", Offset = "0x1ED2828", VA = "0x1ED2828")]
	public SampleInfo()
	{
	}
}
[Token(Token = "0x2000017")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x2000205")]
	private delegate void ApplyTween();

	[Token(Token = "0x2000206")]
	public enum EaseType
	{
		[Token(Token = "0x4000A2D")]
		easeInQuad,
		[Token(Token = "0x4000A2E")]
		easeOutQuad,
		[Token(Token = "0x4000A2F")]
		easeInOutQuad,
		[Token(Token = "0x4000A30")]
		easeInCubic,
		[Token(Token = "0x4000A31")]
		easeOutCubic,
		[Token(Token = "0x4000A32")]
		easeInOutCubic,
		[Token(Token = "0x4000A33")]
		easeInQuart,
		[Token(Token = "0x4000A34")]
		easeOutQuart,
		[Token(Token = "0x4000A35")]
		easeInOutQuart,
		[Token(Token = "0x4000A36")]
		easeInQuint,
		[Token(Token = "0x4000A37")]
		easeOutQuint,
		[Token(Token = "0x4000A38")]
		easeInOutQuint,
		[Token(Token = "0x4000A39")]
		easeInSine,
		[Token(Token = "0x4000A3A")]
		easeOutSine,
		[Token(Token = "0x4000A3B")]
		easeInOutSine,
		[Token(Token = "0x4000A3C")]
		easeInExpo,
		[Token(Token = "0x4000A3D")]
		easeOutExpo,
		[Token(Token = "0x4000A3E")]
		easeInOutExpo,
		[Token(Token = "0x4000A3F")]
		easeInCirc,
		[Token(Token = "0x4000A40")]
		easeOutCirc,
		[Token(Token = "0x4000A41")]
		easeInOutCirc,
		[Token(Token = "0x4000A42")]
		linear,
		[Token(Token = "0x4000A43")]
		spring,
		[Token(Token = "0x4000A44")]
		easeInBounce,
		[Token(Token = "0x4000A45")]
		easeOutBounce,
		[Token(Token = "0x4000A46")]
		easeInOutBounce,
		[Token(Token = "0x4000A47")]
		easeInBack,
		[Token(Token = "0x4000A48")]
		easeOutBack,
		[Token(Token = "0x4000A49")]
		easeInOutBack,
		[Token(Token = "0x4000A4A")]
		easeInElastic,
		[Token(Token = "0x4000A4B")]
		easeOutElastic,
		[Token(Token = "0x4000A4C")]
		easeInOutElastic,
		[Token(Token = "0x4000A4D")]
		punch
	}

	[Token(Token = "0x2000207")]
	public enum LoopType
	{
		[Token(Token = "0x4000A4F")]
		none,
		[Token(Token = "0x4000A50")]
		loop,
		[Token(Token = "0x4000A51")]
		pingPong
	}

	[Token(Token = "0x2000208")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4000A53")]
		_Color,
		[Token(Token = "0x4000A54")]
		_SpecColor,
		[Token(Token = "0x4000A55")]
		_Emission,
		[Token(Token = "0x4000A56")]
		_ReflectColor
	}

	[Token(Token = "0x2000209")]
	public static class Defaults
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x200020A")]
	private class CRSpline
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x3670D28", Offset = "0x3670D28", VA = "0x3670D28")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x3670DB0", Offset = "0x3670DB0", VA = "0x3670DB0")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051428", Offset = "0x1051428")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x36708E8", Offset = "0x36708E8", VA = "0x36708E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x3670950", Offset = "0x3670950", VA = "0x3670950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x36707E4", Offset = "0x36707E4", VA = "0x36707E4")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x3670810", Offset = "0x3670810", VA = "0x3670810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x3670814", Offset = "0x3670814", VA = "0x3670814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x36708F0", Offset = "0x36708F0", VA = "0x36708F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051438", Offset = "0x1051438")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x3670A64", Offset = "0x3670A64", VA = "0x3670A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x3670ACC", Offset = "0x3670ACC", VA = "0x3670ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x3670958", Offset = "0x3670958", VA = "0x3670958")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x3670984", Offset = "0x3670984", VA = "0x3670984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x3670988", Offset = "0x3670988", VA = "0x3670988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x3670A6C", Offset = "0x3670A6C", VA = "0x3670A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051448", Offset = "0x1051448")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x3670774", Offset = "0x3670774", VA = "0x3670774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x36707DC", Offset = "0x36707DC", VA = "0x36707DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x3670698", Offset = "0x3670698", VA = "0x3670698")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x36706C4", Offset = "0x36706C4", VA = "0x36706C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x36706C8", Offset = "0x36706C8", VA = "0x36706C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x367077C", Offset = "0x367077C", VA = "0x367077C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x19AAC58", Offset = "0x19AAC58", VA = "0x19AAC58")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x19AAEDC", Offset = "0x19AAEDC", VA = "0x19AAEDC")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x19ABEA4", Offset = "0x19ABEA4", VA = "0x19ABEA4")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x19AC184", Offset = "0x19AC184", VA = "0x19AC184")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x19ACBE8", Offset = "0x19ACBE8", VA = "0x19ACBE8")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x19ACD98", Offset = "0x19ACD98", VA = "0x19ACD98")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x19AD308", Offset = "0x19AD308", VA = "0x19AD308")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x19AC1F8", Offset = "0x19AC1F8", VA = "0x19AC1F8")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x19AD4E4", Offset = "0x19AD4E4", VA = "0x19AD4E4")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x19ACE0C", Offset = "0x19ACE0C", VA = "0x19ACE0C")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x19AD6C0", Offset = "0x19AD6C0", VA = "0x19AD6C0")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x19AD8EC", Offset = "0x19AD8EC", VA = "0x19AD8EC")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x19ADCF4", Offset = "0x19ADCF4", VA = "0x19ADCF4")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x19ADF20", Offset = "0x19ADF20", VA = "0x19ADF20")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x19AE07C", Offset = "0x19AE07C", VA = "0x19AE07C")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x19AE210", Offset = "0x19AE210", VA = "0x19AE210")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x19AE2C0", Offset = "0x19AE2C0", VA = "0x19AE2C0")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x19AE48C", Offset = "0x19AE48C", VA = "0x19AE48C")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x19AEAEC", Offset = "0x19AEAEC", VA = "0x19AEAEC")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x19AECB8", Offset = "0x19AECB8", VA = "0x19AECB8")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x19AEFD8", Offset = "0x19AEFD8", VA = "0x19AEFD8")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x19AF1A4", Offset = "0x19AF1A4", VA = "0x19AF1A4")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x19AF544", Offset = "0x19AF544", VA = "0x19AF544")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x19AF710", Offset = "0x19AF710", VA = "0x19AF710")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x19B0010", Offset = "0x19B0010", VA = "0x19B0010")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x19B01DC", Offset = "0x19B01DC", VA = "0x19B01DC")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x19AAD10", Offset = "0x19AAD10", VA = "0x19AAD10")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x19B02B8", Offset = "0x19B02B8", VA = "0x19B02B8")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x19B0394", Offset = "0x19B0394", VA = "0x19B0394")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x19B0560", Offset = "0x19B0560", VA = "0x19B0560")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x19B08F8", Offset = "0x19B08F8", VA = "0x19B08F8")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x19B0AC4", Offset = "0x19B0AC4", VA = "0x19B0AC4")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x19B0F70", Offset = "0x19B0F70", VA = "0x19B0F70")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x19B113C", Offset = "0x19B113C", VA = "0x19B113C")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x19B1218", Offset = "0x19B1218", VA = "0x19B1218")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x19B13E4", Offset = "0x19B13E4", VA = "0x19B13E4")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x19B14C0", Offset = "0x19B14C0", VA = "0x19B14C0")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x19B168C", Offset = "0x19B168C", VA = "0x19B168C")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x19B1A2C", Offset = "0x19B1A2C", VA = "0x19B1A2C")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x19B1BF8", Offset = "0x19B1BF8", VA = "0x19B1BF8")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x19B215C", Offset = "0x19B215C", VA = "0x19B215C")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x19B2328", Offset = "0x19B2328", VA = "0x19B2328")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x19B2404", Offset = "0x19B2404", VA = "0x19B2404")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x19B25D0", Offset = "0x19B25D0", VA = "0x19B25D0")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x19B26AC", Offset = "0x19B26AC", VA = "0x19B26AC")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x19B2878", Offset = "0x19B2878", VA = "0x19B2878")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x19B2954", Offset = "0x19B2954", VA = "0x19B2954")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x19B2B20", Offset = "0x19B2B20", VA = "0x19B2B20")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x19B2BFC", Offset = "0x19B2BFC", VA = "0x19B2BFC")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x19B2DC8", Offset = "0x19B2DC8", VA = "0x19B2DC8")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x19B2EA4", Offset = "0x19B2EA4", VA = "0x19B2EA4")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x19B3070", Offset = "0x19B3070", VA = "0x19B3070")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x19B3190", Offset = "0x19B3190", VA = "0x19B3190")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x19B335C", Offset = "0x19B335C", VA = "0x19B335C")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x19B347C", Offset = "0x19B347C", VA = "0x19B347C")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x19B3648", Offset = "0x19B3648", VA = "0x19B3648")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x19B3768", Offset = "0x19B3768", VA = "0x19B3768")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x19B47E8", Offset = "0x19B47E8", VA = "0x19B47E8")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x19B467C", Offset = "0x19B467C", VA = "0x19B467C")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x19B441C", Offset = "0x19B441C", VA = "0x19B441C")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x19B4188", Offset = "0x19B4188", VA = "0x19B4188")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x19B3F94", Offset = "0x19B3F94", VA = "0x19B3F94")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x19B4924", Offset = "0x19B4924", VA = "0x19B4924")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x19B527C", Offset = "0x19B527C", VA = "0x19B527C")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x19BA020", Offset = "0x19BA020", VA = "0x19BA020")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x19B97F4", Offset = "0x19B97F4", VA = "0x19B97F4")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x19B5588", Offset = "0x19B5588", VA = "0x19B5588")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x19B5CB8", Offset = "0x19B5CB8", VA = "0x19B5CB8")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x19B6304", Offset = "0x19B6304", VA = "0x19B6304")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x19B6900", Offset = "0x19B6900", VA = "0x19B6900")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x19B6E50", Offset = "0x19B6E50", VA = "0x19B6E50")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x19B72A4", Offset = "0x19B72A4", VA = "0x19B72A4")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x19B76EC", Offset = "0x19B76EC", VA = "0x19B76EC")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x19B7D1C", Offset = "0x19B7D1C", VA = "0x19B7D1C")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x19B816C", Offset = "0x19B816C", VA = "0x19B816C")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x19B8628", Offset = "0x19B8628", VA = "0x19B8628")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x19B891C", Offset = "0x19B891C", VA = "0x19B891C")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x19B8BE4", Offset = "0x19B8BE4", VA = "0x19B8BE4")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x19B8EAC", Offset = "0x19B8EAC", VA = "0x19B8EAC")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x19B91E4", Offset = "0x19B91E4", VA = "0x19B91E4")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x19B94F0", Offset = "0x19B94F0", VA = "0x19B94F0")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x19BA724", Offset = "0x19BA724", VA = "0x19BA724")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x19BAA24", Offset = "0x19BAA24", VA = "0x19BAA24")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x19BAC54", Offset = "0x19BAC54", VA = "0x19BAC54")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x19BAE48", Offset = "0x19BAE48", VA = "0x19BAE48")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x19BAFE8", Offset = "0x19BAFE8", VA = "0x19BAFE8")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x19BB140", Offset = "0x19BB140", VA = "0x19BB140")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x19BB6A0", Offset = "0x19BB6A0", VA = "0x19BB6A0")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x19BB80C", Offset = "0x19BB80C", VA = "0x19BB80C")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x19BB810", Offset = "0x19BB810", VA = "0x19BB810")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x19BBB88", Offset = "0x19BBB88", VA = "0x19BBB88")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x19BBDAC", Offset = "0x19BBDAC", VA = "0x19BBDAC")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x19BC104", Offset = "0x19BC104", VA = "0x19BC104")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x19BC26C", Offset = "0x19BC26C", VA = "0x19BC26C")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x19BC444", Offset = "0x19BC444", VA = "0x19BC444")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x19BC78C", Offset = "0x19BC78C", VA = "0x19BC78C")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x19BCA38", Offset = "0x19BCA38", VA = "0x19BCA38")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x19BCE68", Offset = "0x19BCE68", VA = "0x19BCE68")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x19BD07C", Offset = "0x19BD07C", VA = "0x19BD07C")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x19BD304", Offset = "0x19BD304", VA = "0x19BD304")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x19BD7D0", Offset = "0x19BD7D0", VA = "0x19BD7D0")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x19BDB30", Offset = "0x19BDB30", VA = "0x19BDB30")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x19BDD90", Offset = "0x19BDD90", VA = "0x19BDD90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10594F0", Offset = "0x10594F0")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x19BDE00", Offset = "0x19BDE00", VA = "0x19BDE00")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x19BE79C", Offset = "0x19BE79C", VA = "0x19BE79C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059554", Offset = "0x1059554")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x19BE80C", Offset = "0x19BE80C", VA = "0x19BE80C")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x19BE8F0", Offset = "0x19BE8F0", VA = "0x19BE8F0")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x19BE9C0", Offset = "0x19BE9C0", VA = "0x19BE9C0")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x19BEA64", Offset = "0x19BEA64", VA = "0x19BEA64")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x19BEC2C", Offset = "0x19BEC2C", VA = "0x19BEC2C")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x19BED38", Offset = "0x19BED38", VA = "0x19BED38")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x19BEBEC", Offset = "0x19BEBEC", VA = "0x19BEBEC")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x19BEE1C", Offset = "0x19BEE1C", VA = "0x19BEE1C")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x19BF8A8", Offset = "0x19BF8A8", VA = "0x19BF8A8")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x19BEEDC", Offset = "0x19BEEDC", VA = "0x19BEEDC")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x19BFA58", Offset = "0x19BFA58", VA = "0x19BFA58")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x19BFC34", Offset = "0x19BFC34", VA = "0x19BFC34")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x19C00E4", Offset = "0x19C00E4", VA = "0x19C00E4")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x19C0310", Offset = "0x19C0310", VA = "0x19C0310")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x19C0974", Offset = "0x19C0974", VA = "0x19C0974")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x19C0B40", Offset = "0x19C0B40", VA = "0x19C0B40")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x19C1128", Offset = "0x19C1128", VA = "0x19C1128")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x19C12F4", Offset = "0x19C12F4", VA = "0x19C12F4")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x19C249C", Offset = "0x19C249C", VA = "0x19C249C")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x19C1B90", Offset = "0x19C1B90", VA = "0x19C1B90")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x19C2668", Offset = "0x19C2668", VA = "0x19C2668")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x19C2834", Offset = "0x19C2834", VA = "0x19C2834")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x19BA5AC", Offset = "0x19BA5AC", VA = "0x19BA5AC")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x19C3118", Offset = "0x19C3118", VA = "0x19C3118")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x19C31C8", Offset = "0x19C31C8", VA = "0x19C31C8")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x19C3260", Offset = "0x19C3260", VA = "0x19C3260")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x19C3398", Offset = "0x19C3398", VA = "0x19C3398")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x19C34B8", Offset = "0x19C34B8", VA = "0x19C34B8")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x19C35C4", Offset = "0x19C35C4", VA = "0x19C35C4")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x19C3828", Offset = "0x19C3828", VA = "0x19C3828")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x19C38EC", Offset = "0x19C38EC", VA = "0x19C38EC")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x19C3A60", Offset = "0x19C3A60", VA = "0x19C3A60")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x19C3BB4", Offset = "0x19C3BB4", VA = "0x19C3BB4")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x19C3C98", Offset = "0x19C3C98", VA = "0x19C3C98")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x19C3D5C", Offset = "0x19C3D5C", VA = "0x19C3D5C")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x19C3ED0", Offset = "0x19C3ED0", VA = "0x19C3ED0")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x19C4024", Offset = "0x19C4024", VA = "0x19C4024")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x19C4108", Offset = "0x19C4108", VA = "0x19C4108")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x19C41CC", Offset = "0x19C41CC", VA = "0x19C41CC")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x19C4340", Offset = "0x19C4340", VA = "0x19C4340")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x19C4494", Offset = "0x19C4494", VA = "0x19C4494")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x19C450C", Offset = "0x19C450C", VA = "0x19C450C")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x19C47E4", Offset = "0x19C47E4", VA = "0x19C47E4")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x19C48A8", Offset = "0x19C48A8", VA = "0x19C48A8")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x19C4A1C", Offset = "0x19C4A1C", VA = "0x19C4A1C")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x19C4B70", Offset = "0x19C4B70", VA = "0x19C4B70")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x19C4C54", Offset = "0x19C4C54", VA = "0x19C4C54")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x19C4D18", Offset = "0x19C4D18", VA = "0x19C4D18")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x19C4E8C", Offset = "0x19C4E8C", VA = "0x19C4E8C")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x19C4FE0", Offset = "0x19C4FE0", VA = "0x19C4FE0")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x19C50C4", Offset = "0x19C50C4", VA = "0x19C50C4")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x19C5188", Offset = "0x19C5188", VA = "0x19C5188")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x19C52FC", Offset = "0x19C52FC", VA = "0x19C52FC")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x19C5450", Offset = "0x19C5450", VA = "0x19C5450")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x19C5540", Offset = "0x19C5540", VA = "0x19C5540")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x19C57FC", Offset = "0x19C57FC", VA = "0x19C57FC")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x19C5954", Offset = "0x19C5954", VA = "0x19C5954")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x19C5D00", Offset = "0x19C5D00", VA = "0x19C5D00")]
	public static void Resume()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x19C5E20", Offset = "0x19C5E20", VA = "0x19C5E20")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x19C6050", Offset = "0x19C6050", VA = "0x19C6050")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x19C619C", Offset = "0x19C619C", VA = "0x19C619C")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x19C6458", Offset = "0x19C6458", VA = "0x19C6458")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x19C6604", Offset = "0x19C6604", VA = "0x19C6604")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x19C6A04", Offset = "0x19C6A04", VA = "0x19C6A04")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x19C6B24", Offset = "0x19C6B24", VA = "0x19C6B24")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x19C6D54", Offset = "0x19C6D54", VA = "0x19C6D54")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x19C6DC8", Offset = "0x19C6DC8", VA = "0x19C6DC8")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x19C6FA4", Offset = "0x19C6FA4", VA = "0x19C6FA4")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x19C7008", Offset = "0x19C7008", VA = "0x19C7008")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x19C7164", Offset = "0x19C7164", VA = "0x19C7164")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x19C739C", Offset = "0x19C739C", VA = "0x19C739C")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x19C771C", Offset = "0x19C771C", VA = "0x19C771C")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x19C72B4", Offset = "0x19C72B4", VA = "0x19C72B4")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x19C7A5C", Offset = "0x19C7A5C", VA = "0x19C7A5C")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x19C75CC", Offset = "0x19C75CC", VA = "0x19C75CC")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x19C794C", Offset = "0x19C794C", VA = "0x19C794C")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x19C7D18", Offset = "0x19C7D18", VA = "0x19C7D18")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x19C80BC", Offset = "0x19C80BC", VA = "0x19C80BC")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x19AC054", Offset = "0x19AC054", VA = "0x19AC054")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x19C8420", Offset = "0x19C8420", VA = "0x19C8420")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x19C844C", Offset = "0x19C844C", VA = "0x19C844C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x19C94B8", Offset = "0x19C94B8", VA = "0x19C94B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10595B8", Offset = "0x10595B8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x19C9528", Offset = "0x19C9528", VA = "0x19C9528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x19C9568", Offset = "0x19C9568", VA = "0x19C9568")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x19C95A8", Offset = "0x19C95A8", VA = "0x19C95A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x19C96BC", Offset = "0x19C96BC", VA = "0x19C96BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x19C9738", Offset = "0x19C9738", VA = "0x19C9738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x19C36A8", Offset = "0x19C36A8", VA = "0x19C36A8")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x19C45F0", Offset = "0x19C45F0", VA = "0x19C45F0")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x19C2A28", Offset = "0x19C2A28", VA = "0x19C2A28")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x19C2CEC", Offset = "0x19C2CEC", VA = "0x19C2CEC")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x19ABD50", Offset = "0x19ABD50", VA = "0x19ABD50")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x19AB3B8", Offset = "0x19AB3B8", VA = "0x19AB3B8")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x19C973C", Offset = "0x19C973C", VA = "0x19C973C")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x19C8488", Offset = "0x19C8488", VA = "0x19C8488")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x19C97BC", Offset = "0x19C97BC", VA = "0x19C97BC")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x19BE878", Offset = "0x19BE878", VA = "0x19BE878")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x19BDF78", Offset = "0x19BDF78", VA = "0x19BDF78")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x19BA33C", Offset = "0x19BA33C", VA = "0x19BA33C")]
	private void Dispose()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x19BE250", Offset = "0x19BE250", VA = "0x19BE250")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x19BE798", Offset = "0x19BE798", VA = "0x19BE798")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x19BEA60", Offset = "0x19BEA60", VA = "0x19BEA60")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x19C96E4", Offset = "0x19C96E4", VA = "0x19C96E4")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x19C9BB0", Offset = "0x19C9BB0", VA = "0x19C9BB0")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x19BA4D8", Offset = "0x19BA4D8", VA = "0x19BA4D8")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x19C9C38", Offset = "0x19C9C38", VA = "0x19C9C38")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x19C9D3C", Offset = "0x19C9D3C", VA = "0x19C9D3C")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x19C9D50", Offset = "0x19C9D50", VA = "0x19C9D50")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x19C9D6C", Offset = "0x19C9D6C", VA = "0x19C9D6C")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x19C9DC0", Offset = "0x19C9DC0", VA = "0x19C9DC0")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x19C9DD8", Offset = "0x19C9DD8", VA = "0x19C9DD8")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x19C9E00", Offset = "0x19C9E00", VA = "0x19C9E00")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x19C9E58", Offset = "0x19C9E58", VA = "0x19C9E58")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x19C9E74", Offset = "0x19C9E74", VA = "0x19C9E74")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x19C9E9C", Offset = "0x19C9E9C", VA = "0x19C9E9C")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x19C9EF8", Offset = "0x19C9EF8", VA = "0x19C9EF8")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x19C9F18", Offset = "0x19C9F18", VA = "0x19C9F18")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x19C9F48", Offset = "0x19C9F48", VA = "0x19C9F48")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x19C9FB0", Offset = "0x19C9FB0", VA = "0x19C9FB0")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x19CA048", Offset = "0x19CA048", VA = "0x19CA048")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x19CA0DC", Offset = "0x19CA0DC", VA = "0x19CA0DC")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x19CA180", Offset = "0x19CA180", VA = "0x19CA180")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x19CA218", Offset = "0x19CA218", VA = "0x19CA218")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x19CA2B0", Offset = "0x19CA2B0", VA = "0x19CA2B0")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x19CA3A0", Offset = "0x19CA3A0", VA = "0x19CA3A0")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x19CA44C", Offset = "0x19CA44C", VA = "0x19CA44C")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x19CA4F8", Offset = "0x19CA4F8", VA = "0x19CA4F8")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x19CA5F0", Offset = "0x19CA5F0", VA = "0x19CA5F0")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x19CA62C", Offset = "0x19CA62C", VA = "0x19CA62C")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x19CA6F8", Offset = "0x19CA6F8", VA = "0x19CA6F8")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x19CA77C", Offset = "0x19CA77C", VA = "0x19CA77C")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x19CA7AC", Offset = "0x19CA7AC", VA = "0x19CA7AC")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x19CA7EC", Offset = "0x19CA7EC", VA = "0x19CA7EC")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x19BD710", Offset = "0x19BD710", VA = "0x19BD710")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x19CA870", Offset = "0x19CA870", VA = "0x19CA870")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x19CA958", Offset = "0x19CA958", VA = "0x19CA958")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x19CAA3C", Offset = "0x19CAA3C", VA = "0x19CAA3C")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000018")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool leftLegRemoved;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rightLegRemoved;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1ED2830", Offset = "0x1ED2830", VA = "0x1ED2830")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1ED2930", Offset = "0x1ED2930", VA = "0x1ED2930")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1ED29BC", Offset = "0x1ED29BC", VA = "0x1ED29BC")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1ED2A84", Offset = "0x1ED2A84", VA = "0x1ED2A84")]
	private bool IsLegMuscle(Muscle m, out bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1ED2C0C", Offset = "0x1ED2C0C", VA = "0x1ED2C0C")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x2000019")]
public class AlphaButtonClickMask : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Image _image;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1CA2A60", Offset = "0x1CA2A60", VA = "0x1CA2A60")]
	public void Start()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1CA2C10", Offset = "0x1CA2C10", VA = "0x1CA2C10", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1CA2F1C", Offset = "0x1CA2F1C", VA = "0x1CA2F1C")]
	public AlphaButtonClickMask()
	{
	}
}
[Token(Token = "0x200001A")]
public class EventSystemChecker : MonoBehaviour
{
	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x279EC68", Offset = "0x279EC68", VA = "0x279EC68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x279ED44", Offset = "0x279ED44", VA = "0x279ED44")]
	public EventSystemChecker()
	{
	}
}
[Token(Token = "0x200001B")]
public class ForcedReset : MonoBehaviour
{
	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x279ED4C", Offset = "0x279ED4C", VA = "0x279ED4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x279EDE8", Offset = "0x279EDE8", VA = "0x279EDE8")]
	public ForcedReset()
	{
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200001C")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x200020E")]
		public enum Mode
		{
			[Token(Token = "0x4000A71")]
			Trigger,
			[Token(Token = "0x4000A72")]
			Replace,
			[Token(Token = "0x4000A73")]
			Activate,
			[Token(Token = "0x4000A74")]
			Enable,
			[Token(Token = "0x4000A75")]
			Animate,
			[Token(Token = "0x4000A76")]
			Deactivate
		}

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode action;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject source;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int triggerCount;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool repeatTrigger;

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x286D80C", Offset = "0x286D80C", VA = "0x286D80C")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x286DC74", Offset = "0x286DC74", VA = "0x286DC74")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x286DC78", Offset = "0x286DC78", VA = "0x286DC78")]
		public ActivateTrigger()
		{
		}
	}
	[Token(Token = "0x200001D")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200020F")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shader original;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Shader replacement;

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x286E5F8", Offset = "0x286E5F8", VA = "0x286E5F8")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000210")]
		public class ReplacementList
		{
			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x286E600", Offset = "0x286E600", VA = "0x286E600")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReplacementList m_ReplacementList;

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x286DC90", Offset = "0x286DC90", VA = "0x286DC90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x286E5F0", Offset = "0x286E5F0", VA = "0x286E5F0")]
		public AutoMobileShaderSwitch()
		{
		}
	}
	[Token(Token = "0x200001E")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000211")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x286E7D0", Offset = "0x286E7D0", VA = "0x286E7D0")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x286E660", Offset = "0x286E660", VA = "0x286E660")]
		private void Start()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x286E688", Offset = "0x286E688", VA = "0x286E688")]
		private void Update()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x286E7C8", Offset = "0x286E7C8", VA = "0x286E7C8")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class CameraRefocus
	{
		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Parent;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Refocus;

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x286E7E0", Offset = "0x286E7E0", VA = "0x286E7E0")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x286E840", Offset = "0x286E840", VA = "0x286E840")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x286E848", Offset = "0x286E848", VA = "0x286E848")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x286E850", Offset = "0x286E850", VA = "0x286E850")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x286E9B0", Offset = "0x286E9B0", VA = "0x286E9B0")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000020")]
	public class CurveControlledBob
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x286EA04", Offset = "0x286EA04", VA = "0x286EA04")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x286EAA8", Offset = "0x286EAA8", VA = "0x286EAA8")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x286EBC8", Offset = "0x286EBC8", VA = "0x286EBC8")]
		public CurveControlledBob()
		{
		}
	}
	[Token(Token = "0x2000021")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051458", Offset = "0x1051458")]
		private sealed class <DragObject>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragRigidbody <>4__this;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <oldDrag>5__2;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <oldAngularDrag>5__3;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Camera <mainCamera>5__4;

			[Token(Token = "0x170000CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E06")]
				[Address(RVA = "0x286F514", Offset = "0x286F514", VA = "0x286F514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E08")]
				[Address(RVA = "0x286F57C", Offset = "0x286F57C", VA = "0x286F57C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x286F29C", Offset = "0x286F29C", VA = "0x286F29C")]
			[DebuggerHidden]
			public <DragObject>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x286F2D0", Offset = "0x286F2D0", VA = "0x286F2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x286F2D4", Offset = "0x286F2D4", VA = "0x286F2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x286F51C", Offset = "0x286F51C", VA = "0x286F51C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000C6")]
		private const float k_Spring = 50f;

		[Token(Token = "0x40000C7")]
		private const float k_Damper = 5f;

		[Token(Token = "0x40000C8")]
		private const float k_Drag = 10f;

		[Token(Token = "0x40000C9")]
		private const float k_AngularDrag = 5f;

		[Token(Token = "0x40000CA")]
		private const float k_Distance = 0.2f;

		[Token(Token = "0x40000CB")]
		private const bool k_AttachToCenterOfMass = false;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringJoint m_SpringJoint;

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x286EE08", Offset = "0x286EE08", VA = "0x286EE08")]
		private void Update()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x286F21C", Offset = "0x286F21C", VA = "0x286F21C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105961C", Offset = "0x105961C")]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x286F16C", Offset = "0x286F16C", VA = "0x286F16C")]
		private Camera FindCamera()
		{
			return null;
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x286F2C8", Offset = "0x286F2C8", VA = "0x286F2C8")]
		public DragRigidbody()
		{
		}
	}
	[Token(Token = "0x2000022")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light sunLight;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minHeight;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minShadowDistance;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minShadowBias;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxHeight;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxShadowDistance;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxShadowBias;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float adaptTime;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_SmoothHeight;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ChangeSpeed;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_OriginalStrength;

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x286F584", Offset = "0x286F584", VA = "0x286F584")]
		private void Start()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x286F5B8", Offset = "0x286F5B8", VA = "0x286F5B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x286F82C", Offset = "0x286F82C", VA = "0x286F82C")]
		public DynamicShadowSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000023")]
	public class FOVKick
	{
		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051468", Offset = "0x1051468")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E0C")]
				[Address(RVA = "0x286FE28", Offset = "0x286FE28", VA = "0x286FE28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E0E")]
				[Address(RVA = "0x286FE90", Offset = "0x286FE90", VA = "0x286FE90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x286F9F8", Offset = "0x286F9F8", VA = "0x286F9F8")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x286FCC4", Offset = "0x286FCC4", VA = "0x286FCC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x286FCC8", Offset = "0x286FCC8", VA = "0x286FCC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x286FE30", Offset = "0x286FE30", VA = "0x286FE30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051478", Offset = "0x1051478")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E12")]
				[Address(RVA = "0x286FC54", Offset = "0x286FC54", VA = "0x286FC54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E14")]
				[Address(RVA = "0x286FCBC", Offset = "0x286FCBC", VA = "0x286FCBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x286FA94", Offset = "0x286FA94", VA = "0x286FA94")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x286FADC", Offset = "0x286FADC", VA = "0x286FADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x286FAE0", Offset = "0x286FAE0", VA = "0x286FAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x286FC5C", Offset = "0x286FC5C", VA = "0x286FC5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x286F860", Offset = "0x286F860", VA = "0x286F860")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x286F8A0", Offset = "0x286F8A0", VA = "0x286F8A0")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x286F980", Offset = "0x286F980", VA = "0x286F980")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x286F988", Offset = "0x286F988", VA = "0x286F988")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059680", Offset = "0x1059680")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x286FA24", Offset = "0x286FA24", VA = "0x286FA24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10596E4", Offset = "0x10596E4")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x286FAC0", Offset = "0x286FAC0", VA = "0x286FAC0")]
		public FOVKick()
		{
		}
	}
	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1049E48", Offset = "0x1049E48")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40000DE")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x40000E2")]
		private const string display = "{0} FPS";

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x286FE98", Offset = "0x286FE98", VA = "0x286FE98")]
		private void Start()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x286FF04", Offset = "0x286FF04", VA = "0x286FF04")]
		private void Update()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x286FFE8", Offset = "0x286FFE8", VA = "0x286FFE8")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000025")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x286FFF0", Offset = "0x286FFF0", VA = "0x286FFF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x28700D0", Offset = "0x28700D0", VA = "0x28700D0")]
		public FollowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000026")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051488", Offset = "0x1051488")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4000A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E18")]
				[Address(RVA = "0x28703C0", Offset = "0x28703C0", VA = "0x28703C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1A")]
				[Address(RVA = "0x2870428", Offset = "0x2870428", VA = "0x2870428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x28701A8", Offset = "0x28701A8", VA = "0x28701A8")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x28701DC", Offset = "0x28701DC", VA = "0x28701DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x28701E0", Offset = "0x28701E0", VA = "0x28701E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x28703C8", Offset = "0x28703C8", VA = "0x28703C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x2870130", Offset = "0x2870130", VA = "0x2870130")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x2870138", Offset = "0x2870138", VA = "0x2870138")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059748", Offset = "0x1059748")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x28701D4", Offset = "0x28701D4", VA = "0x28701D4")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x2000027")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x2000216")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051498", Offset = "0x1051498")]
		private sealed class <ResetCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectResetter <>4__this;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E1E")]
				[Address(RVA = "0x2870830", Offset = "0x2870830", VA = "0x2870830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E20")]
				[Address(RVA = "0x2870898", Offset = "0x2870898", VA = "0x2870898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x28705C8", Offset = "0x28705C8", VA = "0x28705C8")]
			[DebuggerHidden]
			public <ResetCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x28705FC", Offset = "0x28705FC", VA = "0x28705FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x2870600", Offset = "0x2870600", VA = "0x2870600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x2870838", Offset = "0x2870838", VA = "0x2870838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 originalPosition;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion originalRotation;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Transform> originalStructure;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x2870430", Offset = "0x2870430", VA = "0x2870430")]
		private void Start()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x287051C", Offset = "0x287051C", VA = "0x287051C")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x2870548", Offset = "0x2870548", VA = "0x2870548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10597AC", Offset = "0x10597AC")]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x28705F4", Offset = "0x28705F4", VA = "0x28705F4")]
		public ObjectResetter()
		{
		}
	}
	[Token(Token = "0x2000028")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x2000217")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514A8", Offset = "0x10514A8")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystemDestroyer <>4__this;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem[] <systems>5__2;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <stopTime>5__3;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E24")]
				[Address(RVA = "0x2870C94", Offset = "0x2870C94", VA = "0x2870C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E26")]
				[Address(RVA = "0x2870CFC", Offset = "0x2870CFC", VA = "0x2870CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x2870910", Offset = "0x2870910", VA = "0x2870910")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x287095C", Offset = "0x287095C", VA = "0x287095C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x2870960", Offset = "0x2870960", VA = "0x2870960", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x2870C9C", Offset = "0x2870C9C", VA = "0x2870C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDuration;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDuration;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_MaxLifetime;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_EarlyStop;

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x28708A0", Offset = "0x28708A0", VA = "0x28708A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059810", Offset = "0x1059810")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x287093C", Offset = "0x287093C", VA = "0x287093C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x2870948", Offset = "0x2870948", VA = "0x2870948")]
		public ParticleSystemDestroyer()
		{
		}
	}
	[Token(Token = "0x2000029")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x2000218")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x4000A99")]
			Standalone,
			[Token(Token = "0x4000A9A")]
			Mobile
		}

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BuildTargetGroup m_BuildTargetGroup;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_Content;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour[] m_MonoBehaviours;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_ChildrenOfThisObject;

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x2870D04", Offset = "0x2870D04", VA = "0x2870D04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x2870D08", Offset = "0x2870D08", VA = "0x2870D08")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x2870D24", Offset = "0x2870D24", VA = "0x2870D24")]
		private void EnableContent(bool enabled)
		{
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x2871090", Offset = "0x2871090", VA = "0x2871090")]
		public PlatformSpecificContent()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class SimpleActivatorMenu : MonoBehaviour
	{
		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentActiveObject;

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x2871108", Offset = "0x2871108", VA = "0x2871108")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x2871110", Offset = "0x2871110", VA = "0x2871110")]
		public void NextCamera()
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x28711AC", Offset = "0x28711AC", VA = "0x28711AC")]
		public SimpleActivatorMenu()
		{
		}
	}
	[Token(Token = "0x200002B")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 rotationRange;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeed;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampingTime;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool relative;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_TargetAngles;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_FollowAngles;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_FollowVelocity;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x28711B4", Offset = "0x28711B4", VA = "0x28711B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x28711F0", Offset = "0x28711F0", VA = "0x28711F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x287162C", Offset = "0x287162C", VA = "0x287162C")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x28716EC", Offset = "0x28716EC", VA = "0x28716EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x28716F0", Offset = "0x28716F0", VA = "0x28716F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x2871A1C", Offset = "0x2871A1C", VA = "0x2871A1C")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x200002D")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x2000219")]
		public enum Action
		{
			[Token(Token = "0x4000A9C")]
			Activate,
			[Token(Token = "0x4000A9D")]
			Deactivate,
			[Token(Token = "0x4000A9E")]
			Destroy,
			[Token(Token = "0x4000A9F")]
			ReloadLevel,
			[Token(Token = "0x4000AA0")]
			Call
		}

		[Serializable]
		[Token(Token = "0x200021A")]
		public class Entry
		{
			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject target;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float delay;

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x2872164", Offset = "0x2872164", VA = "0x2872164")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200021B")]
		public class Entries
		{
			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry[] entries;

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x2871D98", Offset = "0x2871D98", VA = "0x2871D98")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514B8", Offset = "0x10514B8")]
		private sealed class <Activate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0x2871E6C", Offset = "0x2871E6C", VA = "0x2871E6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2E")]
				[Address(RVA = "0x2871ED4", Offset = "0x2871ED4", VA = "0x2871ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x2871CAC", Offset = "0x2871CAC", VA = "0x2871CAC")]
			[DebuggerHidden]
			public <Activate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x2871DA0", Offset = "0x2871DA0", VA = "0x2871DA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x2871DA4", Offset = "0x2871DA4", VA = "0x2871DA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x2871E74", Offset = "0x2871E74", VA = "0x2871E74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514C8", Offset = "0x10514C8")]
		private sealed class <Deactivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170000D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0x2871FA8", Offset = "0x2871FA8", VA = "0x2871FA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E34")]
				[Address(RVA = "0x2872010", Offset = "0x2872010", VA = "0x2872010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x2871CD8", Offset = "0x2871CD8", VA = "0x2871CD8")]
			[DebuggerHidden]
			public <Deactivate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x2871EDC", Offset = "0x2871EDC", VA = "0x2871EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x2871EE0", Offset = "0x2871EE0", VA = "0x2871EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x2871FB0", Offset = "0x2871FB0", VA = "0x2871FB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514D8", Offset = "0x10514D8")]
		private sealed class <ReloadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170000DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E38")]
				[Address(RVA = "0x28720F4", Offset = "0x28720F4", VA = "0x28720F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3A")]
				[Address(RVA = "0x287215C", Offset = "0x287215C", VA = "0x287215C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x2871D04", Offset = "0x2871D04", VA = "0x2871D04")]
			[DebuggerHidden]
			public <ReloadLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x2872018", Offset = "0x2872018", VA = "0x2872018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x287201C", Offset = "0x287201C", VA = "0x287201C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x28720FC", Offset = "0x28720FC", VA = "0x28720FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Entries entries;

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x2871A30", Offset = "0x2871A30", VA = "0x2871A30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x2871B5C", Offset = "0x2871B5C", VA = "0x2871B5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059874", Offset = "0x1059874")]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x2871BCC", Offset = "0x2871BCC", VA = "0x2871BCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x10598D8", Offset = "0x10598D8")]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x2871C3C", Offset = "0x2871C3C", VA = "0x2871C3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105993C", Offset = "0x105993C")]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x2871D30", Offset = "0x2871D30", VA = "0x2871D30")]
		public TimedObjectActivator()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_TimeOut;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_DetachChildren;

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x287216C", Offset = "0x287216C", VA = "0x287216C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x28721C4", Offset = "0x28721C4", VA = "0x28721C4")]
		private void DestroyNow()
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x2872264", Offset = "0x2872264", VA = "0x2872264")]
		public TimedObjectDestructor()
		{
		}
	}
	[Token(Token = "0x200002F")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200021F")]
		public class WaypointList
		{
			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] items;

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x199C40C", Offset = "0x199C40C", VA = "0x199C40C")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x2000220")]
		public struct RoutePoint
		{
			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x12753EC", Offset = "0x12753EC", VA = "0x12753EC")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointList waypointList;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numPoints;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] points;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] distances;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051890", Offset = "0x1051890")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int p0n;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int p1n;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int p2n;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int p3n;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float i;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P0;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P1;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 P2;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 P3;

		[Token(Token = "0x1700000E")]
		public float Length
		{
			[Token(Token = "0x600030A")]
			[Address(RVA = "0x2872274", Offset = "0x2872274", VA = "0x2872274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599A0", Offset = "0x10599A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600030B")]
			[Address(RVA = "0x287227C", Offset = "0x287227C", VA = "0x287227C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599B0", Offset = "0x10599B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x600030C")]
			[Address(RVA = "0x2872284", Offset = "0x2872284", VA = "0x2872284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x28722A0", Offset = "0x28722A0", VA = "0x28722A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x28725C8", Offset = "0x28725C8", VA = "0x28725C8")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x28726F8", Offset = "0x28726F8", VA = "0x28726F8")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x2872A50", Offset = "0x2872A50", VA = "0x2872A50")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x28722FC", Offset = "0x28722FC", VA = "0x28722FC")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x2872DB8", Offset = "0x2872DB8", VA = "0x2872DB8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x2873038", Offset = "0x2873038", VA = "0x2873038")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x2872DC0", Offset = "0x2872DC0", VA = "0x2872DC0")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x2873040", Offset = "0x2873040", VA = "0x2873040")]
		public WaypointCircuit()
		{
		}
	}
	[Token(Token = "0x2000030")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x2000221")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4000AB3")]
			SmoothAlongRoute,
			[Token(Token = "0x4000AB4")]
			PointToPoint
		}

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051910", Offset = "0x1051910")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051920", Offset = "0x1051920")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051930", Offset = "0x1051930")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform target;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float progressDistance;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int progressNum;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float speed;

		[Token(Token = "0x17000010")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x6000316")]
			[Address(RVA = "0x199C46C", Offset = "0x199C46C", VA = "0x199C46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599C0", Offset = "0x10599C0")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6000317")]
			[Address(RVA = "0x199C480", Offset = "0x199C480", VA = "0x199C480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599D0", Offset = "0x10599D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0x199C494", Offset = "0x199C494", VA = "0x199C494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599E0", Offset = "0x10599E0")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6000319")]
			[Address(RVA = "0x199C4A8", Offset = "0x199C4A8", VA = "0x199C4A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10599F0", Offset = "0x10599F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0x199C4BC", Offset = "0x199C4BC", VA = "0x199C4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059A00", Offset = "0x1059A00")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x199C4D0", Offset = "0x199C4D0", VA = "0x199C4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059A10", Offset = "0x1059A10")]
			private set
			{
			}
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x199C4E4", Offset = "0x199C4E4", VA = "0x199C4E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x199C5C8", Offset = "0x199C5C8", VA = "0x199C5C8")]
		public void Reset()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x199C6A4", Offset = "0x199C6A4", VA = "0x199C6A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x199CC0C", Offset = "0x199CC0C", VA = "0x199CC0C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x199CDE8", Offset = "0x199CDE8", VA = "0x199CDE8")]
		public WaypointProgressTracker()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x2000031")]
	[ExecuteInEditMode]
	public class WaterBasic : MonoBehaviour
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material mat;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WaveSpeed;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int WaveScale;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int WaveOffset;

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x19A1648", Offset = "0x19A1648", VA = "0x19A1648")]
		private void Start()
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x19A167C", Offset = "0x19A167C", VA = "0x19A167C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x19A18C8", Offset = "0x19A18C8", VA = "0x19A18C8")]
		public WaterBasic()
		{
		}
	}
	[Token(Token = "0x2000032")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1049EBC", Offset = "0x1049EBC")]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x199D478", Offset = "0x199D478", VA = "0x199D478")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x199D49C", Offset = "0x199D49C", VA = "0x199D49C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x199D4FC", Offset = "0x199D4FC", VA = "0x199D4FC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x199D55C", Offset = "0x199D55C", VA = "0x199D55C")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x2000033")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1049F30", Offset = "0x1049F30")]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x199D564", Offset = "0x199D564", VA = "0x199D564")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x2000034")]
	public class MeshContainer
	{
		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x199D56C", Offset = "0x199D56C", VA = "0x199D56C")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x199D5C0", Offset = "0x199D5C0", VA = "0x199D5C0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x2000035")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1049FA4", Offset = "0x1049FA4")]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x199D604", Offset = "0x199D604", VA = "0x199D604")]
		public void Start()
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x199D6F4", Offset = "0x199D6F4", VA = "0x199D6F4")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x199D9FC", Offset = "0x199D9FC", VA = "0x199D9FC")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x199DAB0", Offset = "0x199DAB0", VA = "0x199DAB0")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x199DBB8", Offset = "0x199DBB8", VA = "0x199DBB8")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x199E480", Offset = "0x199E480", VA = "0x199E480")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x199E4E0", Offset = "0x199E4E0", VA = "0x199E4E0")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x199E5D8", Offset = "0x199E5D8", VA = "0x199E5D8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x199E638", Offset = "0x199E638", VA = "0x199E638")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x199DD20", Offset = "0x199DD20", VA = "0x199DD20")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x199E698", Offset = "0x199E698", VA = "0x199E698")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x199EB98", Offset = "0x199EB98", VA = "0x199EB98")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x199E6FC", Offset = "0x199E6FC", VA = "0x199E6FC")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x199EDD0", Offset = "0x199EDD0", VA = "0x199EDD0")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x199E9B4", Offset = "0x199E9B4", VA = "0x199E9B4")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x199EDF0", Offset = "0x199EDF0", VA = "0x199EDF0")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A018", Offset = "0x104A018")]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x199EE64", Offset = "0x199EE64", VA = "0x199EE64")]
		public void Start()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x199EF50", Offset = "0x199EF50", VA = "0x199EF50")]
		public void Update()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x199F178", Offset = "0x199F178", VA = "0x199F178")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x2000037")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x2000222")]
		public enum WaterMode
		{
			[Token(Token = "0x4000AB6")]
			Simple,
			[Token(Token = "0x4000AB7")]
			Reflective,
			[Token(Token = "0x4000AB8")]
			Refractive
		}

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x199F180", Offset = "0x199F180", VA = "0x199F180")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x19A0D24", Offset = "0x19A0D24", VA = "0x19A0D24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x19A1010", Offset = "0x19A1010", VA = "0x19A1010")]
		private void Update()
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x19A0640", Offset = "0x19A0640", VA = "0x19A0640")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x199FC38", Offset = "0x199FC38", VA = "0x199FC38")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x199FC24", Offset = "0x199FC24", VA = "0x199FC24")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x199FADC", Offset = "0x199FADC", VA = "0x199FADC")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x19A0B40", Offset = "0x19A0B40", VA = "0x19A0B40")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x19A089C", Offset = "0x19A089C", VA = "0x19A089C")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x19A129C", Offset = "0x19A129C", VA = "0x19A129C")]
		public Water()
		{
		}
	}
	[Token(Token = "0x2000038")]
	public enum WaterQuality
	{
		[Token(Token = "0x400014A")]
		High = 2,
		[Token(Token = "0x400014B")]
		Medium = 1,
		[Token(Token = "0x400014C")]
		Low = 0
	}
	[Token(Token = "0x2000039")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x19A1378", Offset = "0x19A1378", VA = "0x19A1378")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x19A14F8", Offset = "0x19A14F8", VA = "0x19A14F8")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x19A15AC", Offset = "0x19A15AC", VA = "0x19A15AC")]
		public void Update()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x19A1630", Offset = "0x19A1630", VA = "0x19A1630")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x200003A")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x19A1974", Offset = "0x19A1974", VA = "0x19A1974")]
		public void Start()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x19A1978", Offset = "0x19A1978", VA = "0x19A1978")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x19A1B1C", Offset = "0x19A1B1C", VA = "0x19A1B1C")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x19A1C24", Offset = "0x19A1C24", VA = "0x19A1C24")]
		public WaterTile()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x200003B")]
	public enum AAMode
	{
		[Token(Token = "0x4000153")]
		FXAA2,
		[Token(Token = "0x4000154")]
		FXAA3Console,
		[Token(Token = "0x4000155")]
		FXAA1PresetA,
		[Token(Token = "0x4000156")]
		FXAA1PresetB,
		[Token(Token = "0x4000157")]
		NFAA,
		[Token(Token = "0x4000158")]
		SSAA,
		[Token(Token = "0x4000159")]
		DLAA
	}
	[Token(Token = "0x200003C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A0BC", Offset = "0x104A0BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A0BC", Offset = "0x104A0BC")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AAMode mode;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool showGeneratedNormals;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offsetScale;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blurRadius;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeThresholdMin;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float edgeThreshold;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgeSharpness;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool dlaaSharp;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader ssaaShader;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material ssaa;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dlaaShader;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dlaa;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader nfaaShader;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material nfaa;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader shaderFXAAII;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material materialFXAAII;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material materialFXAAIII;

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1EDA4F4", Offset = "0x1EDA4F4", VA = "0x1EDA4F4")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1EDA558", Offset = "0x1EDA558", VA = "0x1EDA558", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1EDA644", Offset = "0x1EDA644", VA = "0x1EDA644")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1EDAB8C", Offset = "0x1EDAB8C", VA = "0x1EDAB8C")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x200003D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A154", Offset = "0x104A154")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A154", Offset = "0x104A154")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000223")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4000ABA")]
			Ghosting,
			[Token(Token = "0x4000ABB")]
			Anamorphic,
			[Token(Token = "0x4000ABC")]
			Combined
		}

		[Token(Token = "0x2000224")]
		public enum TweakMode
		{
			[Token(Token = "0x4000ABE")]
			Basic,
			[Token(Token = "0x4000ABF")]
			Complex
		}

		[Token(Token = "0x2000225")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4000AC1")]
			Auto,
			[Token(Token = "0x4000AC2")]
			On,
			[Token(Token = "0x4000AC3")]
			Off
		}

		[Token(Token = "0x2000226")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4000AC5")]
			Screen,
			[Token(Token = "0x4000AC6")]
			Add
		}

		[Token(Token = "0x2000227")]
		public enum BloomQuality
		{
			[Token(Token = "0x4000AC8")]
			Cheap,
			[Token(Token = "0x4000AC9")]
			High
		}

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode tweakMode;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BloomQuality quality;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color bloomThresholdColor;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int bloomBlurIterations;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float flareRotation;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float hollyStretchWidth;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lensflareIntensity;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lensflareThreshold;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lensFlareSaturation;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorA;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorB;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color flareColorC;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color flareColorD;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader screenBlendShader;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material screenBlend;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1EDABB0", Offset = "0x1EDABB0", VA = "0x1EDABB0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1EDAC50", Offset = "0x1EDAC50", VA = "0x1EDAC50")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1EDC00C", Offset = "0x1EDC00C", VA = "0x1EDC00C")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1EDBE0C", Offset = "0x1EDBE0C", VA = "0x1EDBE0C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1EDBB14", Offset = "0x1EDBB14", VA = "0x1EDBB14")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1EDBA30", Offset = "0x1EDBA30", VA = "0x1EDBA30")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1EDBC00", Offset = "0x1EDBC00", VA = "0x1EDBC00")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1EDC0D4", Offset = "0x1EDC0D4", VA = "0x1EDC0D4")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x200003E")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x400018F")]
		Ghosting,
		[Token(Token = "0x4000190")]
		Anamorphic,
		[Token(Token = "0x4000191")]
		Combined
	}
	[Token(Token = "0x200003F")]
	public enum TweakMode34
	{
		[Token(Token = "0x4000193")]
		Basic,
		[Token(Token = "0x4000194")]
		Complex
	}
	[Token(Token = "0x2000040")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x4000196")]
		Auto,
		[Token(Token = "0x4000197")]
		On,
		[Token(Token = "0x4000198")]
		Off
	}
	[Token(Token = "0x2000041")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x400019A")]
		Screen,
		[Token(Token = "0x400019B")]
		Add
	}
	[Token(Token = "0x2000042")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A1EC", Offset = "0x104A1EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A1EC", Offset = "0x104A1EC")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bloomBlurIterations;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool lensflares;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float hollyStretchWidth;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lensflareIntensity;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareThreshold;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color flareColorA;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color flareColorB;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color flareColorC;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color flareColorD;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader vignetteShader;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material vignetteMaterial;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader separableBlurShader;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader screenBlendShader;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material screenBlend;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x2858C7C", Offset = "0x2858C7C", VA = "0x2858C7C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x2859260", Offset = "0x2859260", VA = "0x2859260")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x285A1AC", Offset = "0x285A1AC", VA = "0x285A1AC")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x2859FBC", Offset = "0x2859FBC", VA = "0x2859FBC")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x2859D40", Offset = "0x2859D40", VA = "0x2859D40")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x2859E68", Offset = "0x2859E68", VA = "0x2859E68")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x285A260", Offset = "0x285A260", VA = "0x285A260")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x2000043")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A284", Offset = "0x104A284")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A284", Offset = "0x104A284")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000228")]
		public enum Resolution
		{
			[Token(Token = "0x4000ACB")]
			Low,
			[Token(Token = "0x4000ACC")]
			High
		}

		[Token(Token = "0x2000229")]
		public enum BlurType
		{
			[Token(Token = "0x4000ACE")]
			Standard,
			[Token(Token = "0x4000ACF")]
			Sgx
		}

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051960", Offset = "0x1051960")]
		public float threshold;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051978", Offset = "0x1051978")]
		public float intensity;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051990", Offset = "0x1051990")]
		public float blurSize;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Resolution resolution;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10519A8", Offset = "0x10519A8")]
		public int blurIterations;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurType blurType;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader fastBloomShader;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fastBloomMaterial;

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x285A408", Offset = "0x285A408", VA = "0x285A408", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x285A460", Offset = "0x285A460", VA = "0x285A460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x285A510", Offset = "0x285A510", VA = "0x285A510")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x285A8DC", Offset = "0x285A8DC", VA = "0x285A8DC")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x2000044")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A31C", Offset = "0x104A31C")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10519C0", Offset = "0x10519C0")]
		public int iterations;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10519D8", Offset = "0x10519D8")]
		public float blurSpread;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000013")]
		protected Material material
		{
			[Token(Token = "0x6000368")]
			[Address(RVA = "0x285A8FC", Offset = "0x285A8FC", VA = "0x285A8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x285AA34", Offset = "0x285AA34", VA = "0x285AA34")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x285AB30", Offset = "0x285AB30", VA = "0x285AB30")]
		protected void Start()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x285ABF0", Offset = "0x285ABF0", VA = "0x285ABF0")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x285AD94", Offset = "0x285AD94", VA = "0x285AD94")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x285AF0C", Offset = "0x285AF0C", VA = "0x285AF0C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x285B078", Offset = "0x285B078", VA = "0x285B078")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x2000045")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A368", Offset = "0x104A368")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A368", Offset = "0x104A368")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x200022A")]
		public enum BlurType
		{
			[Token(Token = "0x4000AD1")]
			StandardGauss,
			[Token(Token = "0x4000AD2")]
			SgxGauss
		}

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10519F0", Offset = "0x10519F0")]
		public int downsample;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A08", Offset = "0x1051A08")]
		public float blurSize;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A20", Offset = "0x1051A20")]
		public int blurIterations;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlurType blurType;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x285B094", Offset = "0x285B094", VA = "0x285B094", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x285B0EC", Offset = "0x285B0EC", VA = "0x285B0EC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x285B19C", Offset = "0x285B19C", VA = "0x285B19C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x285B540", Offset = "0x285B540", VA = "0x285B540")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x2000046")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A400", Offset = "0x104A400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A400", Offset = "0x104A400")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x200022B")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4000AD4")]
			CameraMotion,
			[Token(Token = "0x4000AD5")]
			LocalBlur,
			[Token(Token = "0x4000AD6")]
			Reconstruction,
			[Token(Token = "0x4000AD7")]
			ReconstructionDX11,
			[Token(Token = "0x4000AD8")]
			ReconstructionDisc
		}

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool preview;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 previewScale;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float movementScale;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float rotationScale;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxVelocity;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minVelocity;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float velocityScale;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float softZDistance;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int velocityDownsample;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask excludeLayers;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject tmpCam;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shader;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader replacementClear;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material motionBlurMaterial;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D noiseTexture;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float jitter;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool showVelocity;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float showVelocityScale;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4[] currentStereoViewProjMat;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Matrix4x4[] prevStereoViewProjMat;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int prevFrameCount;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool wasActive;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 prevFramePos;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera _camera;

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x285B558", Offset = "0x285B558", VA = "0x285B558")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x285B7F4", Offset = "0x285B7F4", VA = "0x285B7F4")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x285BA50", Offset = "0x285BA50", VA = "0x285BA50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x285BB10", Offset = "0x285BB10", VA = "0x285BB10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x285BC74", Offset = "0x285BC74", VA = "0x285BC74", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x285BD58", Offset = "0x285BD58", VA = "0x285BD58")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x285B8F4", Offset = "0x285B8F4", VA = "0x285B8F4")]
		private void Remember()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x285D700", Offset = "0x285D700", VA = "0x285D700")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x285D614", Offset = "0x285D614", VA = "0x285D614")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x285D6F0", Offset = "0x285D6F0", VA = "0x285D6F0")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x285DA3C", Offset = "0x285DA3C", VA = "0x285DA3C")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x2000047")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A498", Offset = "0x104A498")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x200022C")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4000ADA")]
			Simple,
			[Token(Token = "0x4000ADB")]
			Advanced
		}

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve redChannel;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useDepthCorrection;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve zCurve;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccMaterial;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material ccDepthMaterial;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Texture2D zCurveTex;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float saturation;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool selectiveCc;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color selectiveFromColor;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color selectiveToColor;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool updateTextures;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x285DB88", Offset = "0x285DB88", VA = "0x285DB88")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x285DBC4", Offset = "0x285DBC4", VA = "0x285DBC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x285DBC8", Offset = "0x285DBC8", VA = "0x285DBC8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x285DE28", Offset = "0x285DE28", VA = "0x285DE28")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x285E21C", Offset = "0x285E21C", VA = "0x285E21C")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x285E220", Offset = "0x285E220", VA = "0x285E220")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x285E51C", Offset = "0x285E51C", VA = "0x285E51C")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x2000048")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A4E4", Offset = "0x104A4E4")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material material;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture3D converted3DLut;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string basedOnTempTex;

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x285EB4C", Offset = "0x285EB4C", VA = "0x285EB4C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x285EBA0", Offset = "0x285EBA0", VA = "0x285EBA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x285EC48", Offset = "0x285EC48", VA = "0x285EC48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x285ECF0", Offset = "0x285ECF0", VA = "0x285ECF0")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x285EEEC", Offset = "0x285EEEC", VA = "0x285EEEC")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x285EFE0", Offset = "0x285EFE0", VA = "0x285EFE0")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x285F2EC", Offset = "0x285F2EC", VA = "0x285F2EC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x285F4D8", Offset = "0x285F4D8", VA = "0x285F4D8")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x2000049")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A530", Offset = "0x104A530")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x285F52C", Offset = "0x285F52C", VA = "0x285F52C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x285F6A8", Offset = "0x285F6A8", VA = "0x285F6A8")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x200004A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A57C", Offset = "0x104A57C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A57C", Offset = "0x104A57C")]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A38", Offset = "0x1051A38")]
		public float intensity;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A50", Offset = "0x1051A50")]
		public float threshold;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A6C", Offset = "0x1051A6C")]
		public float blurSpread;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x285F6B8", Offset = "0x285F6B8", VA = "0x285F6B8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x285F728", Offset = "0x285F728", VA = "0x285F728")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x285FA90", Offset = "0x285FA90", VA = "0x285FA90")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x200004B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A614", Offset = "0x104A614")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051A84", Offset = "0x1051A84")]
		public float adaptationSpeed;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051AA0", Offset = "0x1051AA0")]
		public float limitMinimum;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051AB8", Offset = "0x1051AB8")]
		public float limitMaximum;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x17000014")]
		protected Material materialLum
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0x285FAA4", Offset = "0x285FAA4", VA = "0x285FAA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		protected Material materialReduce
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x285FB68", Offset = "0x285FB68", VA = "0x285FB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0x285FC2C", Offset = "0x285FC2C", VA = "0x285FC2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		protected Material materialApply
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x285FCF0", Offset = "0x285FCF0", VA = "0x285FCF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x285FDB4", Offset = "0x285FDB4", VA = "0x285FDB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x285FE48", Offset = "0x285FE48", VA = "0x285FE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x285FF98", Offset = "0x285FF98", VA = "0x285FF98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x28601C0", Offset = "0x28601C0", VA = "0x28601C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x286041C", Offset = "0x286041C", VA = "0x286041C")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x286062C", Offset = "0x286062C", VA = "0x286062C")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x200004C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A660", Offset = "0x104A660")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A660", Offset = "0x104A660")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensity;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int softness;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spread;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader depthFetchShader;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material depthFetchMaterial;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader creaseApplyShader;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x28606A4", Offset = "0x28606A4", VA = "0x28606A4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x286071C", Offset = "0x286071C", VA = "0x286071C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x2860AC4", Offset = "0x2860AC4", VA = "0x2860AC4")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x200004D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A6F8", Offset = "0x104A6F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A6F8", Offset = "0x104A6F8")]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x200022D")]
		public enum BlurType
		{
			[Token(Token = "0x4000ADD")]
			DiscBlur,
			[Token(Token = "0x4000ADE")]
			DX11
		}

		[Token(Token = "0x200022E")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4000AE0")]
			Low,
			[Token(Token = "0x4000AE1")]
			Medium,
			[Token(Token = "0x4000AE2")]
			High
		}

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool visualizeFocus;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float focalLength;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalSize;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float aperture;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform focalTransform;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxBlurSize;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool highResolution;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlurType blurType;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool nearBlur;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float foregroundOverlap;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dofHdrShader;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader dx11BokehShader;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dx11BokehThreshold;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float dx11BokehScale;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float dx11BokehIntensity;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float focalDistance01;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float internalBlurWidth;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera cachedCamera;

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x2860ADC", Offset = "0x2860ADC", VA = "0x2860ADC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x2860C7C", Offset = "0x2860C7C", VA = "0x2860C7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x2860CF4", Offset = "0x2860CF4", VA = "0x2860CF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x2860DFC", Offset = "0x2860DFC", VA = "0x2860DFC")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x2860B60", Offset = "0x2860B60", VA = "0x2860B60")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x2860E40", Offset = "0x2860E40", VA = "0x2860E40")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x2860F9C", Offset = "0x2860F9C", VA = "0x2860F9C")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x28612BC", Offset = "0x28612BC", VA = "0x28612BC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x2862914", Offset = "0x2862914", VA = "0x2862914")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x200004E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A790", Offset = "0x104A790")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A790", Offset = "0x104A790")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x200022F")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4000AE4")]
			OnlyBackground = 1,
			[Token(Token = "0x4000AE5")]
			BackgroundAndForeground
		}

		[Token(Token = "0x2000230")]
		public enum DofResolution
		{
			[Token(Token = "0x4000AE7")]
			High = 2,
			[Token(Token = "0x4000AE8")]
			Medium,
			[Token(Token = "0x4000AE9")]
			Low
		}

		[Token(Token = "0x2000231")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4000AEB")]
			Low = 1,
			[Token(Token = "0x4000AEC")]
			High = 2,
			[Token(Token = "0x4000AED")]
			VeryHigh = 4
		}

		[Token(Token = "0x2000232")]
		public enum BokehDestination
		{
			[Token(Token = "0x4000AEF")]
			Background = 1,
			[Token(Token = "0x4000AF0")]
			Foreground,
			[Token(Token = "0x4000AF1")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public DofResolution resolution;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool simpleTweakMode;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalPoint;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smoothness;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float focalZDistance;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float focalZStartCurve;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float focalZEndCurve;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float focalStartCurve;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float focalEndCurve;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float focalDistance01;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform objectFocus;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float focalSize;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxBlurSpread;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofBlurShader;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dofShader;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dofMaterial;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool visualize;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float widthOverHeight;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float oneOverBaseSize;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool bokeh;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool bokehSupport;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader bokehShader;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float bokehScale;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float bokehIntensity;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int bokehDownsample;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material bokehMaterial;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Camera _camera;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTexture bokehSource;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x2862968", Offset = "0x2862968", VA = "0x2862968")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x2862A3C", Offset = "0x2862A3C", VA = "0x2862A3C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x2862B40", Offset = "0x2862B40", VA = "0x2862B40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x2862D6C", Offset = "0x2862D6C", VA = "0x2862D6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x2862DE4", Offset = "0x2862DE4", VA = "0x2862DE4")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x2862F40", Offset = "0x2862F40", VA = "0x2862F40")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x2862F64", Offset = "0x2862F64", VA = "0x2862F64")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x2862F88", Offset = "0x2862F88", VA = "0x2862F88")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x2863D6C", Offset = "0x2863D6C", VA = "0x2863D6C")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x2864420", Offset = "0x2864420", VA = "0x2864420")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x2864888", Offset = "0x2864888", VA = "0x2864888")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x2863C20", Offset = "0x2863C20", VA = "0x2863C20")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x2864008", Offset = "0x2864008", VA = "0x2864008")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x28646DC", Offset = "0x28646DC", VA = "0x28646DC")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x28638EC", Offset = "0x28638EC", VA = "0x28638EC")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x2864D70", Offset = "0x2864D70", VA = "0x2864D70")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x200004F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A828", Offset = "0x104A828")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A828", Offset = "0x104A828")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x2000233")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4000AF3")]
			TriangleDepthNormals,
			[Token(Token = "0x4000AF4")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4000AF5")]
			SobelDepth,
			[Token(Token = "0x4000AF6")]
			SobelDepthThin,
			[Token(Token = "0x4000AF7")]
			TriangleLuminance
		}

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeDetectMode mode;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sensitivityDepth;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sensitivityNormals;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lumThreshold;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeExp;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sampleDist;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgesOnly;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader edgeDetectShader;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x2864E48", Offset = "0x2864E48", VA = "0x2864E48", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x2864F80", Offset = "0x2864F80", VA = "0x2864F80")]
		private new void Start()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x2864EC0", Offset = "0x2864EC0", VA = "0x2864EC0")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x2864F8C", Offset = "0x2864F8C", VA = "0x2864F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x2864F90", Offset = "0x2864F90", VA = "0x2864F90")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x286517C", Offset = "0x286517C", VA = "0x286517C")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x2000050")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A8C0", Offset = "0x104A8C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A8C0", Offset = "0x104A8C0")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051AD0", Offset = "0x1051AD0")]
		public float strengthX;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051AE8", Offset = "0x1051AE8")]
		public float strengthY;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fishEyeShader;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fisheyeMaterial;

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x28651CC", Offset = "0x28651CC", VA = "0x28651CC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x2865224", Offset = "0x2865224", VA = "0x2865224")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x2865394", Offset = "0x2865394", VA = "0x2865394")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x2000051")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104A958", Offset = "0x104A958")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A958", Offset = "0x104A958")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051B00", Offset = "0x1051B00")]
		public bool distanceFog;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051B38", Offset = "0x1051B38")]
		public bool excludeFarPixels;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051B70", Offset = "0x1051B70")]
		public bool useRadialDistance;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051BA8", Offset = "0x1051BA8")]
		public bool heightFog;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051BE0", Offset = "0x1051BE0")]
		public float height;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051C18", Offset = "0x1051C18")]
		public float heightDensity;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051C34", Offset = "0x1051C34")]
		public float startDistance;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fogShader;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fogMaterial;

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x28653A8", Offset = "0x28653A8", VA = "0x28653A8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x2865400", Offset = "0x2865400", VA = "0x2865400")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x2865C28", Offset = "0x2865C28", VA = "0x2865C28")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x2865D98", Offset = "0x2865D98", VA = "0x2865D98")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x2000052")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104A9F0", Offset = "0x104A9F0")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051C6C", Offset = "0x1051C6C")]
		public float rampOffset;

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x2865DB8", Offset = "0x2865DB8", VA = "0x2865DB8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x2865E94", Offset = "0x2865E94", VA = "0x2865E94")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x2000053")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AA3C", Offset = "0x104AA3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AA3C", Offset = "0x104AA3C")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x17000018")]
		protected Material material
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x285F5E4", Offset = "0x285F5E4", VA = "0x285F5E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x2865E9C", Offset = "0x2865E9C", VA = "0x2865E9C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x2865F4C", Offset = "0x2865F4C", VA = "0x2865F4C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x285F6B0", Offset = "0x285F6B0", VA = "0x285F6B0")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AAC4", Offset = "0x104AAC4")]
	public class ImageEffects
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x2865FFC", Offset = "0x2865FFC", VA = "0x2865FFC")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x2866278", Offset = "0x2866278", VA = "0x2866278")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1059A40", Offset = "0x1059A40")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x28662F0", Offset = "0x28662F0", VA = "0x28662F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1059A78", Offset = "0x1059A78")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x2866370", Offset = "0x2866370", VA = "0x2866370")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x2000055")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AAFC", Offset = "0x104AAFC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AAFC", Offset = "0x104AAFC")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051C84", Offset = "0x1051C84")]
		public float blurAmount;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x2866378", Offset = "0x2866378", VA = "0x2866378", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x286637C", Offset = "0x286637C", VA = "0x286637C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x28663F0", Offset = "0x28663F0", VA = "0x28663F0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x2866774", Offset = "0x2866774", VA = "0x2866774")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x2000056")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AB94", Offset = "0x104AB94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AB94", Offset = "0x104AB94")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensityMultiplier;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float generalIntensity;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blackIntensity;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float whiteIntensity;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float midGrey;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dx11Grain;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float softness;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool monochrome;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 intensities;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 tiling;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float monochromeTiling;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode filterMode;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D noiseTexture;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader noiseShader;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material noiseMaterial;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x2866788", Offset = "0x2866788", VA = "0x2866788", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x2866800", Offset = "0x2866800", VA = "0x2866800")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x2867120", Offset = "0x2867120", VA = "0x2867120")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x286749C", Offset = "0x286749C", VA = "0x286749C")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x2000057")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AC2C", Offset = "0x104AC2C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AC2C", Offset = "0x104AC2C")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051CA0", Offset = "0x1051CA0")]
		public float grainIntensityMin;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051CB8", Offset = "0x1051CB8")]
		public float grainIntensityMax;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051CD0", Offset = "0x1051CD0")]
		public float grainSize;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051CF0", Offset = "0x1051CF0")]
		public float scratchIntensityMin;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D08", Offset = "0x1051D08")]
		public float scratchIntensityMax;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D20", Offset = "0x1051D20")]
		public float scratchFPS;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D38", Offset = "0x1051D38")]
		public float scratchJitter;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x17000019")]
		protected Material material
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x28676E4", Offset = "0x28676E4", VA = "0x28676E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x28675A4", Offset = "0x28675A4", VA = "0x28675A4")]
		protected void Start()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x2867840", Offset = "0x2867840", VA = "0x2867840")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x2867944", Offset = "0x2867944", VA = "0x2867944")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x2867A80", Offset = "0x2867A80", VA = "0x2867A80")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x2867DC8", Offset = "0x2867DC8", VA = "0x2867DC8")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x2000058")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104ACC4", Offset = "0x104ACC4")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> createdMaterials;

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x2858E3C", Offset = "0x2858E3C", VA = "0x2858E3C")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x2867E28", Offset = "0x2867E28", VA = "0x2867E28")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x2868004", Offset = "0x2868004", VA = "0x2868004")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x2868010", Offset = "0x2868010", VA = "0x2868010")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x2868014", Offset = "0x2868014", VA = "0x2868014")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x28680C4", Offset = "0x28680C4", VA = "0x28680C4")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x28680CC", Offset = "0x28680CC", VA = "0x28680CC", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x285DBB8", Offset = "0x285DBB8", VA = "0x285DBB8")]
		protected void Start()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x2858D34", Offset = "0x2858D34", VA = "0x2858D34")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x285BCFC", Offset = "0x285BCFC", VA = "0x285BCFC")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x286817C", Offset = "0x286817C", VA = "0x286817C")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x28591B8", Offset = "0x28591B8", VA = "0x28591B8")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x2868184", Offset = "0x2868184", VA = "0x2868184")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x2867DFC", Offset = "0x2867DFC", VA = "0x2867DFC")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x2868384", Offset = "0x2868384", VA = "0x2868384")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x285A38C", Offset = "0x285A38C", VA = "0x285A38C")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x2000059")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AD38", Offset = "0x104AD38")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x2868700", Offset = "0x2868700", VA = "0x2868700")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x286876C", Offset = "0x286876C", VA = "0x286876C")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x28689E8", Offset = "0x28689E8", VA = "0x28689E8")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x2868D60", Offset = "0x2868D60", VA = "0x2868D60")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x2868F0C", Offset = "0x2868F0C", VA = "0x2868F0C")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x200005A")]
	internal class Quads
	{
		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x2868F14", Offset = "0x2868F14", VA = "0x2868F14")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x2862B9C", Offset = "0x2862B9C", VA = "0x2862B9C")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x2864AB0", Offset = "0x2864AB0", VA = "0x2864AB0")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x2869038", Offset = "0x2869038", VA = "0x2869038")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x286956C", Offset = "0x286956C", VA = "0x286956C")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x200005B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104ADAC", Offset = "0x104ADAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104ADAC", Offset = "0x104ADAC")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x2000234")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4000AF9")]
			Additive,
			[Token(Token = "0x4000AFA")]
			ScreenBlend,
			[Token(Token = "0x4000AFB")]
			Multiply,
			[Token(Token = "0x4000AFC")]
			Overlay,
			[Token(Token = "0x4000AFD")]
			AlphaBlend
		}

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D texture;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader overlayShader;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material overlayMaterial;

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x2869578", Offset = "0x2869578", VA = "0x2869578", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x28695D0", Offset = "0x28695D0", VA = "0x28695D0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x2869738", Offset = "0x2869738", VA = "0x2869738")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x200005C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AE44", Offset = "0x104AE44")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AE44", Offset = "0x104AE44")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D50", Offset = "0x1051D50")]
		public float intensity;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D68", Offset = "0x1051D68")]
		public float radius;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D84", Offset = "0x1051D84")]
		public int blurIterations;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051D9C", Offset = "0x1051D9C")]
		public float blurFilterDistance;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051DB4", Offset = "0x1051DB4")]
		public int downsample;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D rand;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader aoShader;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material aoMaterial;

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x2869748", Offset = "0x2869748", VA = "0x2869748", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x28697A0", Offset = "0x28697A0", VA = "0x28697A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x2869848", Offset = "0x2869848", VA = "0x2869848")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x286A05C", Offset = "0x286A05C", VA = "0x286A05C")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x200005D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AEDC", Offset = "0x104AEDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AEDC", Offset = "0x104AEDC")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000235")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4000AFF")]
			Low,
			[Token(Token = "0x4000B00")]
			Medium,
			[Token(Token = "0x4000B01")]
			High
		}

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051DCC", Offset = "0x1051DCC")]
		public float m_Radius;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051DE8", Offset = "0x1051DE8")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E00", Offset = "0x1051E00")]
		public int m_Blur;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E18", Offset = "0x1051E18")]
		public int m_Downsampling;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E30", Offset = "0x1051E30")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E4C", Offset = "0x1051E4C")]
		public float m_MinZ;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x286A078", Offset = "0x286A078", VA = "0x286A078")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x286A128", Offset = "0x286A128", VA = "0x286A128")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x286A1C4", Offset = "0x286A1C4", VA = "0x286A1C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x286A1CC", Offset = "0x286A1CC", VA = "0x286A1CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x286A360", Offset = "0x286A360", VA = "0x286A360")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x286A2A4", Offset = "0x286A2A4", VA = "0x286A2A4")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x286A3D4", Offset = "0x286A3D4", VA = "0x286A3D4")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x286AA90", Offset = "0x286AA90", VA = "0x286AA90")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x200005E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AF74", Offset = "0x104AF74")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x286AAC4", Offset = "0x286AAC4", VA = "0x286AAC4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x286AB54", Offset = "0x286AB54", VA = "0x286AB54")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x200005F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104AFC0", Offset = "0x104AFC0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104AFC0", Offset = "0x104AFC0")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x2000236")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4000B03")]
			Low,
			[Token(Token = "0x4000B04")]
			Normal,
			[Token(Token = "0x4000B05")]
			High
		}

		[Token(Token = "0x2000237")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4000B07")]
			Screen,
			[Token(Token = "0x4000B08")]
			Add
		}

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sunTransform;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int radialBlurIterations;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color sunColor;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color sunThreshold;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float sunShaftIntensity;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxRadius;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useDepthTexture;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader sunShaftsShader;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader simpleClearShader;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material simpleClearMaterial;

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x286AB5C", Offset = "0x286AB5C", VA = "0x286AB5C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x286ABC4", Offset = "0x286ABC4", VA = "0x286ABC4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x286B3B0", Offset = "0x286B3B0", VA = "0x286B3B0")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B058", Offset = "0x104B058")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B058", Offset = "0x104B058")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x2000238")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4000B0A")]
			TiltShiftMode,
			[Token(Token = "0x4000B0B")]
			IrisMode
		}

		[Token(Token = "0x2000239")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4000B0D")]
			Preview,
			[Token(Token = "0x4000B0E")]
			Low,
			[Token(Token = "0x4000B0F")]
			Normal,
			[Token(Token = "0x4000B10")]
			High
		}

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TiltShiftMode mode;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TiltShiftQuality quality;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E68", Offset = "0x1051E68")]
		public float blurArea;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E80", Offset = "0x1051E80")]
		public float maxBlurSize;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051E98", Offset = "0x1051E98")]
		public int downsample;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader tiltShiftShader;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x286B444", Offset = "0x286B444", VA = "0x286B444", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x286B49C", Offset = "0x286B49C", VA = "0x286B49C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x286B72C", Offset = "0x286B72C", VA = "0x286B72C")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x2000061")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B0E0", Offset = "0x104B0E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B0E0", Offset = "0x104B0E0")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x200023A")]
		public enum TonemapperType
		{
			[Token(Token = "0x4000B12")]
			SimpleReinhard,
			[Token(Token = "0x4000B13")]
			UserCurve,
			[Token(Token = "0x4000B14")]
			Hable,
			[Token(Token = "0x4000B15")]
			Photographic,
			[Token(Token = "0x4000B16")]
			OptimizedHejiDawson,
			[Token(Token = "0x4000B17")]
			AdaptiveReinhard,
			[Token(Token = "0x4000B18")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x200023B")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x4000B1A")]
			Square16 = 0x10,
			[Token(Token = "0x4000B1B")]
			Square32 = 0x20,
			[Token(Token = "0x4000B1C")]
			Square64 = 0x40,
			[Token(Token = "0x4000B1D")]
			Square128 = 0x80,
			[Token(Token = "0x4000B1E")]
			Square256 = 0x100,
			[Token(Token = "0x4000B1F")]
			Square512 = 0x200,
			[Token(Token = "0x4000B20")]
			Square1024 = 0x400
		}

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TonemapperType type;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D curveTex;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float exposureAdjustment;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float middleGrey;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float white;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float adaptionSpeed;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader tonemapper;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material tonemapMaterial;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture rt;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x286B744", Offset = "0x286B744", VA = "0x286B744", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x286B880", Offset = "0x286B880", VA = "0x286B880")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x286BB28", Offset = "0x286BB28", VA = "0x286BB28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x286BC80", Offset = "0x286BC80", VA = "0x286BC80")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x286BD70", Offset = "0x286BD70", VA = "0x286BD70")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x286C57C", Offset = "0x286C57C", VA = "0x286C57C")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x2000062")]
	internal class Triangles
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x286C5A8", Offset = "0x286C5A8", VA = "0x286C5A8")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x286C6E4", Offset = "0x286C6E4", VA = "0x286C6E4")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x286C8B4", Offset = "0x286C8B4", VA = "0x286C8B4")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x286CB74", Offset = "0x286CB74", VA = "0x286CB74")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x286CFA4", Offset = "0x286CFA4", VA = "0x286CFA4")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x2000063")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B178", Offset = "0x104B178")]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051EB0", Offset = "0x1051EB0")]
		public float angle;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x286CFB0", Offset = "0x286CFB0", VA = "0x286CFB0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x286CFF4", Offset = "0x286CFF4", VA = "0x286CFF4")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x2000064")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B1C4", Offset = "0x104B1C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B1C4", Offset = "0x104B1C4")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x200023C")]
		public enum AberrationMode
		{
			[Token(Token = "0x4000B22")]
			Simple,
			[Token(Token = "0x4000B23")]
			Advanced
		}

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AberrationMode mode;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float chromaticAberration;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float axialAberration;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blur;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blurSpread;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float luminanceDependency;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float blurDistance;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader vignetteShader;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader separableBlurShader;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader chromAberrationShader;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x286D070", Offset = "0x286D070", VA = "0x286D070", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x286D0F4", Offset = "0x286D0F4", VA = "0x286D0F4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x286D720", Offset = "0x286D720", VA = "0x286D720")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x2000065")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B25C", Offset = "0x104B25C")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x286D74C", Offset = "0x286D74C", VA = "0x286D74C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x286D790", Offset = "0x286D790", VA = "0x286D790")]
		public Vortex()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000066")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x1ED6A74", Offset = "0x1ED6A74", VA = "0x1ED6A74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1ED6D04", Offset = "0x1ED6D04", VA = "0x1ED6D04")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1ED6E84", Offset = "0x1ED6E84", VA = "0x1ED6E84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1ED6F04", Offset = "0x1ED6F04", VA = "0x1ED6F04", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x1ED6FEC", Offset = "0x1ED6FEC", VA = "0x1ED6FEC", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1ED7094", Offset = "0x1ED7094", VA = "0x1ED7094")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1ED7100", Offset = "0x1ED7100", VA = "0x1ED7100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1ED7104", Offset = "0x1ED7104", VA = "0x1ED7104")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1ED71EC", Offset = "0x1ED71EC", VA = "0x1ED71EC")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1ED72D4", Offset = "0x1ED72D4", VA = "0x1ED72D4")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1ED73BC", Offset = "0x1ED73BC", VA = "0x1ED73BC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1ED74A4", Offset = "0x1ED74A4", VA = "0x1ED74A4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1ED758C", Offset = "0x1ED758C", VA = "0x1ED758C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1ED7590", Offset = "0x1ED7590", VA = "0x1ED7590")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000068")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200023D")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4000B25")]
			Hardware,
			[Token(Token = "0x4000B26")]
			Touch
		}

		[Token(Token = "0x200023E")]
		public class VirtualAxis
		{
			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582B4", Offset = "0x10582B4")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582C4", Offset = "0x10582C4")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170000DD")]
			public string name
			{
				[Token(Token = "0x6000E3D")]
				[Address(RVA = "0x1ED83F8", Offset = "0x1ED83F8", VA = "0x1ED83F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B904", Offset = "0x105B904")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E3E")]
				[Address(RVA = "0x1ED8400", Offset = "0x1ED8400", VA = "0x1ED8400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B914", Offset = "0x105B914")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DE")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000E3F")]
				[Address(RVA = "0x1ED8408", Offset = "0x1ED8408", VA = "0x1ED8408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B924", Offset = "0x105B924")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000E40")]
				[Address(RVA = "0x1ED8410", Offset = "0x1ED8410", VA = "0x1ED8410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B934", Offset = "0x105B934")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DF")]
			public float GetValue
			{
				[Token(Token = "0x6000E45")]
				[Address(RVA = "0x1ED8464", Offset = "0x1ED8464", VA = "0x1ED8464")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000E0")]
			public float GetValueRaw
			{
				[Token(Token = "0x6000E46")]
				[Address(RVA = "0x1ED846C", Offset = "0x1ED846C", VA = "0x1ED846C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x1ED6BE0", Offset = "0x1ED6BE0", VA = "0x1ED6BE0")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x1ED841C", Offset = "0x1ED841C", VA = "0x1ED841C")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x1ED6E9C", Offset = "0x1ED6E9C", VA = "0x1ED6E9C")]
			public void Remove()
			{
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x1ED845C", Offset = "0x1ED845C", VA = "0x1ED845C")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200023F")]
		public class VirtualButton
		{
			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582D4", Offset = "0x10582D4")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10582E4", Offset = "0x10582E4")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x170000E1")]
			public string name
			{
				[Token(Token = "0x6000E47")]
				[Address(RVA = "0x1ED8474", Offset = "0x1ED8474", VA = "0x1ED8474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B944", Offset = "0x105B944")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0x1ED847C", Offset = "0x1ED847C", VA = "0x1ED847C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B954", Offset = "0x105B954")]
				private set
				{
				}
			}

			[Token(Token = "0x170000E2")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000E49")]
				[Address(RVA = "0x1ED8484", Offset = "0x1ED8484", VA = "0x1ED8484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B964", Offset = "0x105B964")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0x1ED848C", Offset = "0x1ED848C", VA = "0x1ED848C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B974", Offset = "0x105B974")]
				private set
				{
				}
			}

			[Token(Token = "0x170000E3")]
			public bool GetButton
			{
				[Token(Token = "0x6000E50")]
				[Address(RVA = "0x1ED85EC", Offset = "0x1ED85EC", VA = "0x1ED85EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000E4")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6000E51")]
				[Address(RVA = "0x1ED85F4", Offset = "0x1ED85F4", VA = "0x1ED85F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000E5")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6000E52")]
				[Address(RVA = "0x1ED8624", Offset = "0x1ED8624", VA = "0x1ED8624")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x1ED8498", Offset = "0x1ED8498", VA = "0x1ED8498")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1ED84D4", Offset = "0x1ED84D4", VA = "0x1ED84D4")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1ED851C", Offset = "0x1ED851C", VA = "0x1ED851C")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x1ED8558", Offset = "0x1ED8558", VA = "0x1ED8558")]
			public void Released()
			{
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x1ED8584", Offset = "0x1ED8584", VA = "0x1ED8584")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700001A")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0x1ED8078", Offset = "0x1ED8078", VA = "0x1ED8078")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x1ED7598", Offset = "0x1ED7598", VA = "0x1ED7598")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1ED7638", Offset = "0x1ED7638", VA = "0x1ED7638")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x1ED6B68", Offset = "0x1ED6B68", VA = "0x1ED6B68")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x1ED7750", Offset = "0x1ED7750", VA = "0x1ED7750")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x1ED6C14", Offset = "0x1ED6C14", VA = "0x1ED6C14")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x1ED7958", Offset = "0x1ED7958", VA = "0x1ED7958")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x1ED7AF8", Offset = "0x1ED7AF8", VA = "0x1ED7AF8")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x1ED7C48", Offset = "0x1ED7C48", VA = "0x1ED7C48")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x1ED6C8C", Offset = "0x1ED6C8C", VA = "0x1ED6C8C")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x1ED39F8", Offset = "0x1ED39F8", VA = "0x1ED39F8")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x1ED7E7C", Offset = "0x1ED7E7C", VA = "0x1ED7E7C")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x1ED7DEC", Offset = "0x1ED7DEC", VA = "0x1ED7DEC")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x1ED7EE4", Offset = "0x1ED7EE4", VA = "0x1ED7EE4")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x1ED2F58", Offset = "0x1ED2F58", VA = "0x1ED2F58")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1ED7F64", Offset = "0x1ED7F64", VA = "0x1ED7F64")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1ED716C", Offset = "0x1ED716C", VA = "0x1ED716C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x1ED7254", Offset = "0x1ED7254", VA = "0x1ED7254")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1ED733C", Offset = "0x1ED733C", VA = "0x1ED733C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1ED750C", Offset = "0x1ED750C", VA = "0x1ED750C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1ED7424", Offset = "0x1ED7424", VA = "0x1ED7424")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1ED7FE4", Offset = "0x1ED7FE4", VA = "0x1ED7FE4")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1ED80F4", Offset = "0x1ED80F4", VA = "0x1ED80F4")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1ED81F0", Offset = "0x1ED81F0", VA = "0x1ED81F0")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x1ED82F8", Offset = "0x1ED82F8", VA = "0x1ED82F8")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000069")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1ED8654", Offset = "0x1ED8654", VA = "0x1ED8654")]
		private void Update()
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1ED8658", Offset = "0x1ED8658", VA = "0x1ED8658")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1ED86D8", Offset = "0x1ED86D8", VA = "0x1ED86D8")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000240")]
		public enum AxisOption
		{
			[Token(Token = "0x4000B30")]
			Both,
			[Token(Token = "0x4000B31")]
			OnlyHorizontal,
			[Token(Token = "0x4000B32")]
			OnlyVertical
		}

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1ED86E0", Offset = "0x1ED86E0", VA = "0x1ED86E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1ED8820", Offset = "0x1ED8820", VA = "0x1ED8820")]
		private void Start()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1ED885C", Offset = "0x1ED885C", VA = "0x1ED885C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1ED86E4", Offset = "0x1ED86E4", VA = "0x1ED86E4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1ED894C", Offset = "0x1ED894C", VA = "0x1ED894C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x1ED8B0C", Offset = "0x1ED8B0C", VA = "0x1ED8B0C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1ED8B54", Offset = "0x1ED8B54", VA = "0x1ED8B54", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x1ED8B58", Offset = "0x1ED8B58", VA = "0x1ED8B58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x1ED8BA8", Offset = "0x1ED8BA8", VA = "0x1ED8BA8")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200006B")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x1ED8C18", Offset = "0x1ED8C18", VA = "0x1ED8C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x1ED8C28", Offset = "0x1ED8C28", VA = "0x1ED8C28")]
		private void Start()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x1ED8C20", Offset = "0x1ED8C20", VA = "0x1ED8C20")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x1ED8D18", Offset = "0x1ED8D18", VA = "0x1ED8D18")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x1ED8F94", Offset = "0x1ED8F94", VA = "0x1ED8F94")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x2000241")]
		public enum AxisOptions
		{
			[Token(Token = "0x4000B34")]
			ForwardAxis,
			[Token(Token = "0x4000B35")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000242")]
		public class AxisMapping
		{
			[Token(Token = "0x2000298")]
			public enum MappingType
			{
				[Token(Token = "0x4000C83")]
				NamedAxis,
				[Token(Token = "0x4000C84")]
				MousePositionX,
				[Token(Token = "0x4000C85")]
				MousePositionY,
				[Token(Token = "0x4000C86")]
				MousePositionZ
			}

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x1ED9E44", Offset = "0x1ED9E44", VA = "0x1ED9E44")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x1ED9AD0", Offset = "0x1ED9AD0", VA = "0x1ED9AD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x1ED9B90", Offset = "0x1ED9B90", VA = "0x1ED9B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1ED9E1C", Offset = "0x1ED9E1C", VA = "0x1ED9E1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1ED9E34", Offset = "0x1ED9E34", VA = "0x1ED9E34")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B2B8", Offset = "0x104B2B8")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000243")]
		public enum AxisOption
		{
			[Token(Token = "0x4000B39")]
			Both,
			[Token(Token = "0x4000B3A")]
			OnlyHorizontal,
			[Token(Token = "0x4000B3B")]
			OnlyVertical
		}

		[Token(Token = "0x2000244")]
		public enum ControlStyle
		{
			[Token(Token = "0x4000B3D")]
			Absolute,
			[Token(Token = "0x4000B3E")]
			Relative,
			[Token(Token = "0x4000B3F")]
			Swipe
		}

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1ED9E4C", Offset = "0x1ED9E4C", VA = "0x1ED9E4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x1ED9F8C", Offset = "0x1ED9F8C", VA = "0x1ED9F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1ED9E50", Offset = "0x1ED9E50", VA = "0x1ED9E50")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x1EDA008", Offset = "0x1EDA008", VA = "0x1EDA008")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x1EDA074", Offset = "0x1EDA074", VA = "0x1EDA074", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x1EDA124", Offset = "0x1EDA124", VA = "0x1EDA124")]
		private void Update()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x1EDA2F8", Offset = "0x1EDA2F8", VA = "0x1EDA2F8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1EDA370", Offset = "0x1EDA370", VA = "0x1EDA370")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1EDA464", Offset = "0x1EDA464", VA = "0x1EDA464")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x200006E")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051ECC", Offset = "0x1051ECC")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x1700001B")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x1EDA4DC", Offset = "0x1EDA4DC", VA = "0x1EDA4DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059AE0", Offset = "0x1059AE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600046C")]
			[Address(RVA = "0x1EDA4E8", Offset = "0x1EDA4E8", VA = "0x1EDA4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059AF0", Offset = "0x1059AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1ED76E8", Offset = "0x1ED76E8", VA = "0x1ED76E8")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1ED77C8", Offset = "0x1ED77C8", VA = "0x1ED77C8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1ED7830", Offset = "0x1ED7830", VA = "0x1ED7830")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1ED79D0", Offset = "0x1ED79D0", VA = "0x1ED79D0")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x1ED7BB0", Offset = "0x1ED7BB0", VA = "0x1ED7BB0")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x1ED7CC0", Offset = "0x1ED7CC0", VA = "0x1ED7CC0")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x1ED7D58", Offset = "0x1ED7D58", VA = "0x1ED7D58")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x1ED81A4", Offset = "0x1ED81A4", VA = "0x1ED81A4")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1ED82A4", Offset = "0x1ED82A4", VA = "0x1ED82A4")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1ED83A8", Offset = "0x1ED83A8", VA = "0x1ED83A8")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6000477")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6000478")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6000479")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600047A")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x600047B")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x600047C")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x600047D")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x600047E")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x600047F")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6000480")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6000481")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x1ED9748", Offset = "0x1ED9748", VA = "0x1ED9748")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x200006F")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0x1ED8F9C", Offset = "0x1ED8F9C", VA = "0x1ED8F9C")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1ED9030", Offset = "0x1ED9030", VA = "0x1ED9030")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x1ED90BC", Offset = "0x1ED90BC", VA = "0x1ED90BC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1ED9158", Offset = "0x1ED9158", VA = "0x1ED9158", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x1ED9210", Offset = "0x1ED9210", VA = "0x1ED9210", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x1ED92BC", Offset = "0x1ED92BC", VA = "0x1ED92BC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x1ED935C", Offset = "0x1ED935C", VA = "0x1ED935C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x1ED93FC", Offset = "0x1ED93FC", VA = "0x1ED93FC", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x1ED9498", Offset = "0x1ED9498", VA = "0x1ED9498", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1ED9540", Offset = "0x1ED9540", VA = "0x1ED9540", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x1ED95F0", Offset = "0x1ED95F0", VA = "0x1ED95F0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1ED96A0", Offset = "0x1ED96A0", VA = "0x1ED96A0", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x1ED973C", Offset = "0x1ED973C", VA = "0x1ED973C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x1ED7630", Offset = "0x1ED7630", VA = "0x1ED7630")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000070")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x1ED9808", Offset = "0x1ED9808", VA = "0x1ED9808", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1ED981C", Offset = "0x1ED981C", VA = "0x1ED981C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x1ED9828", Offset = "0x1ED9828", VA = "0x1ED9828", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1ED9834", Offset = "0x1ED9834", VA = "0x1ED9834", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1ED9840", Offset = "0x1ED9840", VA = "0x1ED9840", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1ED98AC", Offset = "0x1ED98AC", VA = "0x1ED98AC", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x1ED9918", Offset = "0x1ED9918", VA = "0x1ED9918", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x1ED9984", Offset = "0x1ED9984", VA = "0x1ED9984", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x1ED99F0", Offset = "0x1ED99F0", VA = "0x1ED99F0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x1ED9A5C", Offset = "0x1ED9A5C", VA = "0x1ED9A5C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x1ED9AC8", Offset = "0x1ED9AC8", VA = "0x1ED9AC8", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1ED7634", Offset = "0x1ED7634", VA = "0x1ED7634")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.Vehicles.Ball
{
	[Token(Token = "0x2000071")]
	public class Ball : MonoBehaviour
	{
		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovePower;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseTorque;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MaxAngularVelocity;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x400033A")]
		private const float k_GroundRayLength = 1f;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x199CE04", Offset = "0x199CE04", VA = "0x199CE04")]
		private void Start()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x199CE78", Offset = "0x199CE78", VA = "0x199CE78")]
		public void Move(Vector3 moveDirection, bool jump)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x199D074", Offset = "0x199D074", VA = "0x199D074")]
		public Ball()
		{
		}
	}
	[Token(Token = "0x2000072")]
	public class BallUserControl : MonoBehaviour
	{
		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Ball ball;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 move;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cam;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 camForward;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool jump;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x199D098", Offset = "0x199D098", VA = "0x199D098")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x199D18C", Offset = "0x199D18C", VA = "0x199D18C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x199D434", Offset = "0x199D434", VA = "0x199D434")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x199D470", Offset = "0x199D470", VA = "0x199D470")]
		public BallUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.ThirdPerson
{
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B31C", Offset = "0x104B31C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B31C", Offset = "0x104B31C")]
	public class AICharacterControl : MonoBehaviour
	{
		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051F1C", Offset = "0x1051F1C")]
		private NavMeshAgent <agent>k__BackingField;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051F2C", Offset = "0x1051F2C")]
		private ThirdPersonCharacter <character>k__BackingField;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x1700001C")]
		public NavMeshAgent agent
		{
			[Token(Token = "0x60004A4")]
			[Address(RVA = "0x1ED5520", Offset = "0x1ED5520", VA = "0x1ED5520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B00", Offset = "0x1059B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0x1ED5528", Offset = "0x1ED5528", VA = "0x1ED5528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B10", Offset = "0x1059B10")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public ThirdPersonCharacter character
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x1ED5530", Offset = "0x1ED5530", VA = "0x1ED5530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B20", Offset = "0x1059B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0x1ED5538", Offset = "0x1ED5538", VA = "0x1ED5538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B30", Offset = "0x1059B30")]
			private set
			{
			}
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1ED5540", Offset = "0x1ED5540", VA = "0x1ED5540")]
		private void Start()
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1ED55DC", Offset = "0x1ED55DC", VA = "0x1ED55DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x1ED58B8", Offset = "0x1ED58B8", VA = "0x1ED58B8")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1ED58C0", Offset = "0x1ED58C0", VA = "0x1ED58C0")]
		public AICharacterControl()
		{
		}
	}
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B3A8", Offset = "0x104B3A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B3A8", Offset = "0x104B3A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B3A8", Offset = "0x104B3A8")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1051F6C", Offset = "0x1051F6C")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x4000350")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1ED58C8", Offset = "0x1ED58C8", VA = "0x1ED58C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x1ED5700", Offset = "0x1ED5700", VA = "0x1ED5700")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1ED5E50", Offset = "0x1ED5E50", VA = "0x1ED5E50")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1ED60EC", Offset = "0x1ED60EC", VA = "0x1ED60EC")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1ED62A4", Offset = "0x1ED62A4", VA = "0x1ED62A4")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x1ED5D3C", Offset = "0x1ED5D3C", VA = "0x1ED5D3C")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1ED5BFC", Offset = "0x1ED5BFC", VA = "0x1ED5BFC")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1ED5B2C", Offset = "0x1ED5B2C", VA = "0x1ED5B2C")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1ED64F0", Offset = "0x1ED64F0", VA = "0x1ED64F0")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1ED5998", Offset = "0x1ED5998", VA = "0x1ED5998")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1ED6620", Offset = "0x1ED6620", VA = "0x1ED6620")]
		public ThirdPersonCharacter()
		{
		}
	}
	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B45C", Offset = "0x104B45C")]
	public class ThirdPersonUserControl : MonoBehaviour
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ThirdPersonCharacter m_Character;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1ED6640", Offset = "0x1ED6640", VA = "0x1ED6640")]
		private void Start()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x1ED6748", Offset = "0x1ED6748", VA = "0x1ED6748")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1ED67C8", Offset = "0x1ED67C8", VA = "0x1ED67C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x1ED6A6C", Offset = "0x1ED6A6C", VA = "0x1ED6A6C")]
		public ThirdPersonUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B4C0", Offset = "0x104B4C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B4C0", Offset = "0x104B4C0")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105201C", Offset = "0x105201C")]
		private float m_RunstepLenghten;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVKick m_FovKick;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveControlledBob m_HeadBob;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpControlledBob m_JumpBob;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_Camera;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jump;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_YRotation;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_Input;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_StepCycle;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_NextStep;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_Jumping;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x1ED2C8C", Offset = "0x1ED2C8C", VA = "0x1ED2C8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x1ED2DEC", Offset = "0x1ED2DEC", VA = "0x1ED2DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1ED2FD8", Offset = "0x1ED2FD8", VA = "0x1ED2FD8")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1ED302C", Offset = "0x1ED302C", VA = "0x1ED302C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1ED3590", Offset = "0x1ED3590", VA = "0x1ED3590")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1ED35D0", Offset = "0x1ED35D0", VA = "0x1ED35D0")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1ED38AC", Offset = "0x1ED38AC", VA = "0x1ED38AC")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1ED36D4", Offset = "0x1ED36D4", VA = "0x1ED36D4")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1ED33F0", Offset = "0x1ED33F0", VA = "0x1ED33F0")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1ED2F04", Offset = "0x1ED2F04", VA = "0x1ED2F04")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1ED3D50", Offset = "0x1ED3D50", VA = "0x1ED3D50")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1ED3ED0", Offset = "0x1ED3ED0", VA = "0x1ED3ED0")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x2000077")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurveControlledBob motionBob;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StrideInterval;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105212C", Offset = "0x105212C")]
		public float RunningStrideLengthen;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1ED3FA8", Offset = "0x1ED3FA8", VA = "0x1ED3FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1ED4004", Offset = "0x1ED4004", VA = "0x1ED4004")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1ED421C", Offset = "0x1ED421C", VA = "0x1ED421C")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000078")]
	public class MouseLook
	{
		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1ED2D98", Offset = "0x1ED2D98", VA = "0x1ED2D98")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1ED3A60", Offset = "0x1ED3A60", VA = "0x1ED3A60")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1ED436C", Offset = "0x1ED436C", VA = "0x1ED436C")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1ED389C", Offset = "0x1ED389C", VA = "0x1ED389C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1ED43A0", Offset = "0x1ED43A0", VA = "0x1ED43A0")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1ED42A4", Offset = "0x1ED42A4", VA = "0x1ED42A4")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1ED441C", Offset = "0x1ED441C", VA = "0x1ED441C")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B54C", Offset = "0x104B54C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B54C", Offset = "0x104B54C")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000245")]
		public class MovementSettings
		{
			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x1ED519C", Offset = "0x1ED519C", VA = "0x1ED519C")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1ED534C", Offset = "0x1ED534C", VA = "0x1ED534C")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000246")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058304", Offset = "0x1058304")]
			public float shellOffset;

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1ED5504", Offset = "0x1ED5504", VA = "0x1ED5504")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x1700001E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x1ED41F8", Offset = "0x1ED41F8", VA = "0x1ED41F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700001F")]
		public bool Grounded
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x1ED4450", Offset = "0x1ED4450", VA = "0x1ED4450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000020")]
		public bool Jumping
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x1ED4458", Offset = "0x1ED4458", VA = "0x1ED4458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000021")]
		public bool Running
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x1ED4214", Offset = "0x1ED4214", VA = "0x1ED4214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1ED4460", Offset = "0x1ED4460", VA = "0x1ED4460")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1ED450C", Offset = "0x1ED450C", VA = "0x1ED450C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1ED47A0", Offset = "0x1ED47A0", VA = "0x1ED47A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1ED4E64", Offset = "0x1ED4E64", VA = "0x1ED4E64")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1ED4F1C", Offset = "0x1ED4F1C", VA = "0x1ED4F1C")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1ED4DB4", Offset = "0x1ED4DB4", VA = "0x1ED4DB4")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1ED4598", Offset = "0x1ED4598", VA = "0x1ED4598")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x1ED4BCC", Offset = "0x1ED4BCC", VA = "0x1ED4BCC")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x1ED5268", Offset = "0x1ED5268", VA = "0x1ED5268")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace VLB
{
	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104B5D8", Offset = "0x104B5D8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B5D8", Offset = "0x104B5D8")]
	public class BeamGeometry : MonoBehaviour
	{
		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052144", Offset = "0x1052144")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052154", Offset = "0x1052154")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052164", Offset = "0x1052164")]
		private Material <material>k__BackingField;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052174", Offset = "0x1052174")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x17000022")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x19A1C2C", Offset = "0x19A1C2C", VA = "0x19A1C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B40", Offset = "0x1059B40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x19A1C34", Offset = "0x19A1C34", VA = "0x19A1C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B50", Offset = "0x1059B50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000023")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x19A1C3C", Offset = "0x19A1C3C", VA = "0x19A1C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B60", Offset = "0x1059B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x19A1C44", Offset = "0x19A1C44", VA = "0x19A1C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B70", Offset = "0x1059B70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public Material material
		{
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x19A1C4C", Offset = "0x19A1C4C", VA = "0x19A1C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B80", Offset = "0x1059B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0x19A1C54", Offset = "0x19A1C54", VA = "0x19A1C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059B90", Offset = "0x1059B90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000025")]
		public Mesh coneMesh
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x19A1C5C", Offset = "0x19A1C5C", VA = "0x19A1C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059BA0", Offset = "0x1059BA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x19A1C64", Offset = "0x19A1C64", VA = "0x19A1C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059BB0", Offset = "0x1059BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public bool visible
		{
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x19A1C6C", Offset = "0x19A1C6C", VA = "0x19A1C6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x19A1C88", Offset = "0x19A1C88", VA = "0x19A1C88")]
			set
			{
			}
		}

		[Token(Token = "0x17000027")]
		public int sortingLayerID
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x19A1CA8", Offset = "0x19A1CA8", VA = "0x19A1CA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x19A1CC4", Offset = "0x19A1CC4", VA = "0x19A1CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000028")]
		public int sortingOrder
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x19A1CE0", Offset = "0x19A1CE0", VA = "0x19A1CE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x19A1CFC", Offset = "0x19A1CFC", VA = "0x19A1CFC")]
			set
			{
			}
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x19A1D18", Offset = "0x19A1D18", VA = "0x19A1D18")]
		private void Start()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x19A1DD8", Offset = "0x19A1DD8", VA = "0x19A1DD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x19A1E80", Offset = "0x19A1E80", VA = "0x19A1E80")]
		private static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x19A1E88", Offset = "0x19A1E88", VA = "0x19A1E88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x19A1E8C", Offset = "0x19A1E8C", VA = "0x19A1E8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x19A1E90", Offset = "0x19A1E90", VA = "0x19A1E90")]
		public void Initialize(VolumetricLightBeam master, Shader shader)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x19A2340", Offset = "0x19A2340", VA = "0x19A2340")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x19A3AB4", Offset = "0x19A3AB4", VA = "0x19A3AB4")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x19A31DC", Offset = "0x19A31DC", VA = "0x19A31DC")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x19A43D4", Offset = "0x19A43D4", VA = "0x19A43D4")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x19A44C0", Offset = "0x19A44C0", VA = "0x19A44C0")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x19A451C", Offset = "0x19A451C", VA = "0x19A451C")]
		private void OnBeginCameraRendering(Camera cam)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x19A4818", Offset = "0x19A4818", VA = "0x19A4818")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x19A4520", Offset = "0x19A4520", VA = "0x19A4520")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x19A4A4C", Offset = "0x19A4A4C", VA = "0x19A4A4C")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B648", Offset = "0x104B648")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int geometryLayerID;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool forceSinglePass;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader1Pass;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10521BC", Offset = "0x10521BC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10521BC", Offset = "0x10521BC")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader2Pass;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sharedMeshSides;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sharedMeshSegments;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105223C", Offset = "0x105223C")]
		public float globalNoiseScale;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int noise3DSize;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000029")]
		public Shader beamShader
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0x19A4A54", Offset = "0x19A4A54", VA = "0x19A4A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x19A4A70", Offset = "0x19A4A70", VA = "0x19A4A70")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700002B")]
		public static Config Instance
		{
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0x19A257C", Offset = "0x19A257C", VA = "0x19A257C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x19A4AA8", Offset = "0x19A4AA8", VA = "0x19A4AA8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x19A4C60", Offset = "0x19A4C60", VA = "0x19A4C60")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x19A4DF4", Offset = "0x19A4DF4", VA = "0x19A4DF4")]
		public Config()
		{
		}
	}
	[Token(Token = "0x200007C")]
	public static class Consts
	{
		[Token(Token = "0x40003AF")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x40003B0")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x40003B1")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x40003B2")]
		public const string HelpUrlDynamicOcclusion = "http://saladgamer.com/vlb-doc/comp-dynocclusion/";

		[Token(Token = "0x40003B3")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x40003B4")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x40003B7")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x40003B8")]
		public const float Alpha = 1f;

		[Token(Token = "0x40003B9")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x40003BA")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x40003BB")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x40003BC")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x40003BD")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x40003BE")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x40003BF")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x40003C0")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x40003C1")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x40003C2")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x40003C3")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x40003C4")]
		public const bool GeomCap = false;

		[Token(Token = "0x40003C5")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x40003C6")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x40003C7")]
		public const float FadeStart = 0f;

		[Token(Token = "0x40003C8")]
		public const float FadeEnd = 3f;

		[Token(Token = "0x40003C9")]
		public const float FadeMinThreshold = 0.01f;

		[Token(Token = "0x40003CA")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x40003CB")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x40003CC")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x40003CD")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x40003CE")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x40003CF")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x40003D0")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x40003D1")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x40003D2")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x40003D3")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x40003D4")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x40003D5")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x40003D7")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x40003DB")]
		public const float DynOcclusionMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x40003DC")]
		public const float DynOcclusionMinSurfaceRatioMin = 50f;

		[Token(Token = "0x40003DD")]
		public const float DynOcclusionMinSurfaceRatioMax = 100f;

		[Token(Token = "0x40003DE")]
		public const float DynOcclusionMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x40003DF")]
		public const float DynOcclusionMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x40003E0")]
		public const float DynOcclusionMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x40003E1")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x40003E2")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x40003E3")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x40003E4")]
		public const bool ConfigGeometryForceSinglePassDefault = false;

		[Token(Token = "0x40003E5")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x40003E6")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x40003E7")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x1700002C")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x19A21A8", Offset = "0x19A21A8", VA = "0x19A21A8")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x200007D")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B680", Offset = "0x104B680")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B680", Offset = "0x104B680")]
	public class DynamicOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000247")]
		private enum Direction
		{
			[Token(Token = "0x4000B4E")]
			Up,
			[Token(Token = "0x4000B4F")]
			Right,
			[Token(Token = "0x4000B50")]
			Down,
			[Token(Token = "0x4000B51")]
			Left
		}

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minOccluderArea;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int waitFrameCount;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minSurfaceRatio;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxSurfaceDot;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float planeOffset;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_FrameCountToWait;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_RangeMultiplier;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x19A502C", Offset = "0x19A502C", VA = "0x19A502C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x19A50C4", Offset = "0x19A50C4", VA = "0x19A50C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x19A511C", Offset = "0x19A511C", VA = "0x19A511C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x19A514C", Offset = "0x19A514C", VA = "0x19A514C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x19A522C", Offset = "0x19A522C", VA = "0x19A522C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x19A56B0", Offset = "0x19A56B0", VA = "0x19A56B0")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x19A57AC", Offset = "0x19A57AC", VA = "0x19A57AC")]
		private RaycastHit GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x19A5AD8", Offset = "0x19A5AD8", VA = "0x19A5AD8")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x19A5CD8", Offset = "0x19A5CD8", VA = "0x19A5CD8")]
		private bool IsHitValid(RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x19A526C", Offset = "0x19A526C", VA = "0x19A526C")]
		private void ProcessRaycasts()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x19A5E28", Offset = "0x19A5E28", VA = "0x19A5E28")]
		private void SetHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x19A5134", Offset = "0x19A5134", VA = "0x19A5134")]
		private void SetHitNull()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x19A5F54", Offset = "0x19A5F54", VA = "0x19A5F54")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x19A608C", Offset = "0x19A608C", VA = "0x19A608C")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x19A630C", Offset = "0x19A630C", VA = "0x19A630C")]
		public DynamicOcclusion()
		{
		}
	}
	[Token(Token = "0x200007E")]
	public enum ColorMode
	{
		[Token(Token = "0x40003F4")]
		Flat,
		[Token(Token = "0x40003F5")]
		Gradient
	}
	[Token(Token = "0x200007F")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x40003F7")]
		Linear,
		[Token(Token = "0x40003F8")]
		Quadratic,
		[Token(Token = "0x40003F9")]
		Blend
	}
	[Token(Token = "0x2000080")]
	public enum BlendingMode
	{
		[Token(Token = "0x40003FB")]
		Additive,
		[Token(Token = "0x40003FC")]
		SoftAdditive,
		[Token(Token = "0x40003FD")]
		TraditionalTransparency
	}
	[Token(Token = "0x2000081")]
	public enum MeshType
	{
		[Token(Token = "0x40003FF")]
		Shared,
		[Token(Token = "0x4000400")]
		Custom
	}
	[Token(Token = "0x2000082")]
	public enum RenderQueue
	{
		[Token(Token = "0x4000402")]
		Custom = 0,
		[Token(Token = "0x4000403")]
		Background = 1000,
		[Token(Token = "0x4000404")]
		Geometry = 2000,
		[Token(Token = "0x4000405")]
		AlphaTest = 2450,
		[Token(Token = "0x4000406")]
		GeometryLast = 2500,
		[Token(Token = "0x4000407")]
		Transparent = 3000,
		[Token(Token = "0x4000408")]
		Overlay = 4000
	}
	[Token(Token = "0x2000083")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x400040A")]
		Surface,
		[Token(Token = "0x400040B")]
		Beam
	}
	[Token(Token = "0x2000084")]
	public static class GlobalMesh
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x1700002D")]
		public static Mesh mesh
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x19A3054", Offset = "0x19A3054", VA = "0x19A3054")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x2000085")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x19A636C", Offset = "0x19A636C", VA = "0x19A636C")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public static class MeshGenerator
	{
		[Token(Token = "0x400040D")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x1700002E")]
		private static bool duplicateBackFaces
		{
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x19A6374", Offset = "0x19A6374", VA = "0x19A6374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x19A63E0", Offset = "0x19A63E0", VA = "0x19A63E0")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x19A649C", Offset = "0x19A649C", VA = "0x19A649C")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x19A26A4", Offset = "0x19A26A4", VA = "0x19A26A4")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x19A64AC", Offset = "0x19A64AC", VA = "0x19A64AC")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap)
		{
			return default(int);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x19A64E0", Offset = "0x19A64E0", VA = "0x19A64E0")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap)
		{
			return default(int);
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x19A6520", Offset = "0x19A6520", VA = "0x19A6520")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x19A65B0", Offset = "0x19A65B0", VA = "0x19A65B0")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000087")]
	public static class Noise3D
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x4000411")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x4000412")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700002F")]
		public static bool isSupported
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x19A4064", Offset = "0x19A4064", VA = "0x19A4064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000030")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x19A66E4", Offset = "0x19A66E4", VA = "0x19A66E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000031")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x19A6644", Offset = "0x19A6644", VA = "0x19A6644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x19A677C", Offset = "0x19A677C", VA = "0x19A677C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x1059BC0", Offset = "0x1059BC0")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x19A41B4", Offset = "0x19A41B4", VA = "0x19A41B4")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x19A67D8", Offset = "0x19A67D8", VA = "0x19A67D8")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000088")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B728", Offset = "0x104B728")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B728", Offset = "0x104B728")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x4000415")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh m_Mesh;

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x19A6B20", Offset = "0x19A6B20", VA = "0x19A6B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x19A6D3C", Offset = "0x19A6D3C", VA = "0x19A6D3C")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public static class Utils
	{
		[Token(Token = "0x2000248")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x4000B53")]
			High = 64,
			[Token(Token = "0x4000B54")]
			Low = 8,
			[Token(Token = "0x4000B55")]
			Undef = 0
		}

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x4000418")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x19A221C", Offset = "0x19A221C", VA = "0x19A221C")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x6000528")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000529")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600052A")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x19A6D54", Offset = "0x19A6D54", VA = "0x19A6D54")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x19A6E38", Offset = "0x19A6E38", VA = "0x19A6E38")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x19A6E64", Offset = "0x19A6E64", VA = "0x19A6E64")]
		public static Vector2 xz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x19A6E94", Offset = "0x19A6E94", VA = "0x19A6E94")]
		public static Vector2 yz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x19A6EC8", Offset = "0x19A6EC8", VA = "0x19A6EC8")]
		public static Vector2 yx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x19A6F00", Offset = "0x19A6F00", VA = "0x19A6F00")]
		public static Vector2 zx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x19A6F34", Offset = "0x19A6F34", VA = "0x19A6F34")]
		public static Vector2 zy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x19A6F64", Offset = "0x19A6F64", VA = "0x19A6F64")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x19A59EC", Offset = "0x19A59EC", VA = "0x19A59EC")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x19A6FB8", Offset = "0x19A6FB8", VA = "0x19A6FB8")]
		public static Color Opaque(this Color self)
		{
			return default(Color);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x19A6FEC", Offset = "0x19A6FEC", VA = "0x19A6FEC")]
		public static void GizmosDrawPlane(Vector3 normal, Vector3 position, Color color, float size = 1f)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x19A60A4", Offset = "0x19A60A4", VA = "0x19A60A4")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x19A7400", Offset = "0x19A7400", VA = "0x19A7400")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x19A3DF4", Offset = "0x19A3DF4", VA = "0x19A3DF4")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x19A7548", Offset = "0x19A7548", VA = "0x19A7548")]
		public static Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x19A7650", Offset = "0x19A7650", VA = "0x19A7650")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x19A744C", Offset = "0x19A744C", VA = "0x19A744C")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x19A3D24", Offset = "0x19A3D24", VA = "0x19A3D24")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x19A76FC", Offset = "0x19A76FC", VA = "0x19A76FC")]
		public static void MarkCurrentSceneDirty()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public static class Version
	{
		[Token(Token = "0x4000419")]
		public const int Current = 1510;
	}
	[Token(Token = "0x200008B")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B7D0", Offset = "0x104B7D0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B7D0", Offset = "0x104B7D0")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		public enum Direction
		{
			[Token(Token = "0x4000B57")]
			Beam,
			[Token(Token = "0x4000B58")]
			Random
		}

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052278", Offset = "0x1052278")]
		public float alpha;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052290", Offset = "0x1052290")]
		public float size;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction direction;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10522B0", Offset = "0x10522B0")]
		public float spawnMaxDistance;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingEnabled;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cullingMaxDistance;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10522C8", Offset = "0x10522C8")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000032")]
		public bool isCulled
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x19A7704", Offset = "0x19A7704", VA = "0x19A7704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059CE0", Offset = "0x1059CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x19A770C", Offset = "0x19A770C", VA = "0x19A770C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059CF0", Offset = "0x1059CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x19A7718", Offset = "0x19A7718", VA = "0x19A7718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000034")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x19A7784", Offset = "0x19A7784", VA = "0x19A7784")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000035")]
		public int particlesMaxCount
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x19A7818", Offset = "0x19A7818", VA = "0x19A7818")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000036")]
		public Camera mainCamera
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0x19A78C4", Offset = "0x19A78C4", VA = "0x19A78C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x19A7B1C", Offset = "0x19A7B1C", VA = "0x19A7B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x19A7B84", Offset = "0x19A7B84", VA = "0x19A7B84")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x19A7DF0", Offset = "0x19A7DF0", VA = "0x19A7DF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x19A7D34", Offset = "0x19A7D34", VA = "0x19A7D34")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x19A83B4", Offset = "0x19A83B4", VA = "0x19A83B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x19A8454", Offset = "0x19A8454", VA = "0x19A8454")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x19A8514", Offset = "0x19A8514", VA = "0x19A8514")]
		private void Update()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x19A7DF4", Offset = "0x19A7DF4", VA = "0x19A7DF4")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x19A8548", Offset = "0x19A8548", VA = "0x19A8548")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x19A88A8", Offset = "0x19A88A8", VA = "0x19A88A8")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x200008C")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104B878", Offset = "0x104B878")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514E8", Offset = "0x10514E8")]
		private sealed class <CoPlaytimeUpdate>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x170000E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5A")]
				[Address(RVA = "0x19A9DF4", Offset = "0x19A9DF4", VA = "0x19A9DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E5C")]
				[Address(RVA = "0x19A9E5C", Offset = "0x19A9E5C", VA = "0x19A9E5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x19A98B4", Offset = "0x19A98B4", VA = "0x19A98B4")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x19A9D6C", Offset = "0x19A9D6C", VA = "0x19A9D6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x19A9D70", Offset = "0x19A9D70", VA = "0x19A9D70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x19A9DFC", Offset = "0x19A9DFC", VA = "0x19A9DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool colorFromLight;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x10522D8", Offset = "0x10522D8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10522D8", Offset = "0x10522D8")]
		public Color color;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105232C", Offset = "0x105232C")]
		public float alphaInside;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1052344", Offset = "0x1052344")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052344", Offset = "0x1052344")]
		public float alphaOutside;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BlendingMode blendingMode;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1052398", Offset = "0x1052398")]
		public bool spotAngleFromLight;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10523D0", Offset = "0x10523D0")]
		public float spotAngle;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10523F0", Offset = "0x10523F0")]
		public float coneRadiusStart;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshType geomMeshType;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1052428", Offset = "0x1052428")]
		public int geomCustomSides;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int geomCustomSegments;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool geomCap;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool fadeEndFromLight;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052460", Offset = "0x1052460")]
		public float attenuationCustomBlending;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float fadeStart;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float fadeEnd;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float depthBlendDistance;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float cameraClippingDistance;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052478", Offset = "0x1052478")]
		public float glareFrontal;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052490", Offset = "0x1052490")]
		public float glareBehind;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x10524A8", Offset = "0x10524A8")]
		public float boostDistanceInside;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x10524E0", Offset = "0x10524E0")]
		public float fresnelPowInside;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1052518", Offset = "0x1052518")]
		public float fresnelPow;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool noiseEnabled;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052550", Offset = "0x1052550")]
		public float noiseIntensity;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052568", Offset = "0x1052568")]
		public float noiseScaleLocal;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Plane m_PlaneWS;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1052594", Offset = "0x1052594")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Light _CachedLight;

		[Token(Token = "0x17000037")]
		public float coneAngle
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x19A3C2C", Offset = "0x19A3C2C", VA = "0x19A3C2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000038")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x19A3BA0", Offset = "0x19A3BA0", VA = "0x19A3BA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000039")]
		public float coneVolume
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x19A8954", Offset = "0x19A8954", VA = "0x19A8954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003A")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0x19A3CCC", Offset = "0x19A3CCC", VA = "0x19A3CCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003B")]
		public int geomSides
		{
			[Token(Token = "0x6000554")]
			[Address(RVA = "0x19A89A8", Offset = "0x19A89A8", VA = "0x19A89A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000555")]
			[Address(RVA = "0x19A8A30", Offset = "0x19A8A30", VA = "0x19A8A30")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public int geomSegments
		{
			[Token(Token = "0x6000556")]
			[Address(RVA = "0x19A8AB0", Offset = "0x19A8AB0", VA = "0x19A8AB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000557")]
			[Address(RVA = "0x19A8B38", Offset = "0x19A8B38", VA = "0x19A8B38")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x6000558")]
			[Address(RVA = "0x19A403C", Offset = "0x19A403C", VA = "0x19A403C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003E")]
		public int sortingLayerID
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0x19A8BB8", Offset = "0x19A8BB8", VA = "0x19A8BB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600055A")]
			[Address(RVA = "0x19A8BC0", Offset = "0x19A8BC0", VA = "0x19A8BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public string sortingLayerName
		{
			[Token(Token = "0x600055B")]
			[Address(RVA = "0x19A8C70", Offset = "0x19A8C70", VA = "0x19A8C70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600055C")]
			[Address(RVA = "0x19A8C7C", Offset = "0x19A8C7C", VA = "0x19A8C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public int sortingOrder
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0x19A8CAC", Offset = "0x19A8CAC", VA = "0x19A8CAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600055E")]
			[Address(RVA = "0x19A8CB4", Offset = "0x19A8CB4", VA = "0x19A8CB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x19A8D64", Offset = "0x19A8D64", VA = "0x19A8D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x19A8D6C", Offset = "0x19A8D6C", VA = "0x19A8D6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x19A8DCC", Offset = "0x19A8DCC", VA = "0x19A8DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000043")]
		public bool hasGeometry
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0x19A870C", Offset = "0x19A870C", VA = "0x19A870C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000044")]
		public Bounds bounds
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x19A877C", Offset = "0x19A877C", VA = "0x19A877C")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000045")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x6000567")]
			[Address(RVA = "0x19A3F44", Offset = "0x19A3F44", VA = "0x19A3F44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000046")]
		public string meshStats
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x19A8F00", Offset = "0x19A8F00", VA = "0x19A8F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public int meshVerticesCount
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0x19A9088", Offset = "0x19A9088", VA = "0x19A9088")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000048")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x600056A")]
			[Address(RVA = "0x19A9164", Offset = "0x19A9164", VA = "0x19A9164")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000049")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x600056B")]
			[Address(RVA = "0x19A9258", Offset = "0x19A9258", VA = "0x19A9258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x19A61C4", Offset = "0x19A61C4", VA = "0x19A61C4")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x19A6280", Offset = "0x19A6280", VA = "0x19A6280")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x19A8DDC", Offset = "0x19A8DDC", VA = "0x19A8DDC")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x19A9350", Offset = "0x19A9350", VA = "0x19A9350")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x19A48B0", Offset = "0x19A48B0", VA = "0x19A48B0")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x19A93B0", Offset = "0x19A93B0", VA = "0x19A93B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1059D00", Offset = "0x1059D00")]
		public void Generate()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x19A93BC", Offset = "0x19A93BC", VA = "0x19A93BC", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x19A9674", Offset = "0x19A9674", VA = "0x19A9674", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x19A9708", Offset = "0x19A9708", VA = "0x19A9708")]
		private void Start()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x19A9714", Offset = "0x19A9714", VA = "0x19A9714")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x19A97AC", Offset = "0x19A97AC", VA = "0x19A97AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x19A8D78", Offset = "0x19A8D78", VA = "0x19A8D78")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x19A9844", Offset = "0x19A9844", VA = "0x19A9844")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1059D38", Offset = "0x1059D38")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x19A98E0", Offset = "0x19A98E0", VA = "0x19A98E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x19A98E4", Offset = "0x19A98E4", VA = "0x19A98E4")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x19A99A4", Offset = "0x19A99A4", VA = "0x19A99A4")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x19A9A88", Offset = "0x19A9A88", VA = "0x19A9A88")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x19A9644", Offset = "0x19A9644", VA = "0x19A9644")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x19A9590", Offset = "0x19A9590", VA = "0x19A9590")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x19A9C60", Offset = "0x19A9C60", VA = "0x19A9C60")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B8E4", Offset = "0x104B8E4")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x19A9E64", Offset = "0x19A9E64", VA = "0x19A9E64")]
		private void Update()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x19A9E68", Offset = "0x19A9E68", VA = "0x19A9E68")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B948", Offset = "0x104B948")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInsideBeam;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_Collider;

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x19A9E78", Offset = "0x19A9E78", VA = "0x19A9E78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x19A9F34", Offset = "0x19A9F34", VA = "0x19A9F34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x19A9FF0", Offset = "0x19A9FF0", VA = "0x19A9FF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x19A9FF8", Offset = "0x19A9FF8", VA = "0x19A9FF8")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x19AA0B4", Offset = "0x19AA0B4", VA = "0x19AA0B4")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104B9EC", Offset = "0x104B9EC")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x19AA0BC", Offset = "0x19AA0BC", VA = "0x19AA0BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x19AA18C", Offset = "0x19AA18C", VA = "0x19AA18C")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedNormal;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorSlow;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedFactorFast;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedClimb;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationH;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationV;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_UseMouseView;

		[Token(Token = "0x1700004A")]
		private bool useMouseView
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x19AA194", Offset = "0x19AA194", VA = "0x19AA194")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000587")]
			[Address(RVA = "0x19AA19C", Offset = "0x19AA19C", VA = "0x19AA19C")]
			set
			{
			}
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x19AA1D8", Offset = "0x19AA1D8", VA = "0x19AA1D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x19AA270", Offset = "0x19AA270", VA = "0x19AA270")]
		private void Update()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x19AA274", Offset = "0x19AA274", VA = "0x19AA274")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052610", Offset = "0x1052610")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052654", Offset = "0x1052654")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x19AA298", Offset = "0x19AA298", VA = "0x19AA298")]
		public void Generate()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x19AAA4C", Offset = "0x19AAA4C", VA = "0x19AAA4C")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x2000092")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x10526D8", Offset = "0x10526D8")]
		public Vector3 EulerSpeed;

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x19AAA68", Offset = "0x19AAA68", VA = "0x19AAA68")]
		private void Update()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x19AABE0", Offset = "0x19AABE0", VA = "0x19AABE0")]
		public Rotater()
		{
		}
	}
}
namespace UnityEventReferenceViewer.Example
{
	[Token(Token = "0x2000093")]
	public class BehaviourOne : MonoBehaviour
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1ED2C14", Offset = "0x1ED2C14", VA = "0x1ED2C14")]
		public void Foo()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1ED2C18", Offset = "0x1ED2C18", VA = "0x1ED2C18")]
		public void Bar()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1ED2C1C", Offset = "0x1ED2C1C", VA = "0x1ED2C1C")]
		public void IntMethod(int input)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1ED2C20", Offset = "0x1ED2C20", VA = "0x1ED2C20")]
		public BehaviourOne()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000094")]
	public class GenericEvent : UnityEvent<int>
	{
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1ED2C3C", Offset = "0x1ED2C3C", VA = "0x1ED2C3C")]
		public GenericEvent()
		{
		}
	}
	[Token(Token = "0x2000095")]
	public class BehaviourTwo : MonoBehaviour
	{
		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GenericEvent onExampleGenericEvent;

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1ED2C28", Offset = "0x1ED2C28", VA = "0x1ED2C28")]
		public void Spam()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1ED2C2C", Offset = "0x1ED2C2C", VA = "0x1ED2C2C")]
		public void Eggs()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1ED2C30", Offset = "0x1ED2C30", VA = "0x1ED2C30")]
		public void IntEggs(float input)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1ED2C34", Offset = "0x1ED2C34", VA = "0x1ED2C34")]
		public BehaviourTwo()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BA50", Offset = "0x104BA50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BA50", Offset = "0x104BA50")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200024B")]
		public enum Mode
		{
			[Token(Token = "0x4000B5D")]
			AnimationClips,
			[Token(Token = "0x4000B5E")]
			AnimationStates,
			[Token(Token = "0x4000B5F")]
			PlayableDirector,
			[Token(Token = "0x4000B60")]
			Realtime
		}

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052720", Offset = "0x1052720")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052720", Offset = "0x1052720")]
		public int frameRate;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052778", Offset = "0x1052778")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052778", Offset = "0x1052778")]
		public float keyReductionError;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10527D0", Offset = "0x10527D0")]
		public Mode mode;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052808", Offset = "0x1052808")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052840", Offset = "0x1052840")]
		public string[] animationStates;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052878", Offset = "0x1052878")]
		public bool loop;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10528B0", Offset = "0x10528B0")]
		public string saveToFolder;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10528E8", Offset = "0x10528E8")]
		public string appendName;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052920", Offset = "0x1052920")]
		public string saveName;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052958", Offset = "0x1052958")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052968", Offset = "0x1052968")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10529E8", Offset = "0x10529E8")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x1700004B")]
		public bool isBaking
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x27A93F4", Offset = "0x27A93F4", VA = "0x27A93F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059E7C", Offset = "0x1059E7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x27A93FC", Offset = "0x27A93FC", VA = "0x27A93FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059E8C", Offset = "0x1059E8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public float bakingProgress
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x27A9408", Offset = "0x27A9408", VA = "0x27A9408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059E9C", Offset = "0x1059E9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x27A9410", Offset = "0x27A9410", VA = "0x27A9410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059EAC", Offset = "0x1059EAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		protected float clipLength
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x27A9418", Offset = "0x27A9418", VA = "0x27A9418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059EBC", Offset = "0x1059EBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x27A9420", Offset = "0x27A9420", VA = "0x27A9420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059ECC", Offset = "0x1059ECC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x27A92C4", Offset = "0x27A92C4", VA = "0x27A92C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1059D9C", Offset = "0x1059D9C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x27A9310", Offset = "0x27A9310", VA = "0x27A9310")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1059DD4", Offset = "0x1059DD4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x27A935C", Offset = "0x27A935C", VA = "0x27A935C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1059E0C", Offset = "0x1059E0C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x27A93A8", Offset = "0x27A93A8", VA = "0x27A93A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1059E44", Offset = "0x1059E44")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60005A0")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60005A1")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60005A2")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60005A3")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x60005A4")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x27A9428", Offset = "0x27A9428", VA = "0x27A9428")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x27A942C", Offset = "0x27A942C", VA = "0x27A942C")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x27A9430", Offset = "0x27A9430", VA = "0x27A9430")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x27A9434", Offset = "0x27A9434", VA = "0x27A9434")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10529F8", Offset = "0x10529F8")]
		public bool markAsLegacy;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052A30", Offset = "0x1052A30")]
		public Transform root;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052A68", Offset = "0x1052A68")]
		public Transform rootNode;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052AA0", Offset = "0x1052AA0")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052AD8", Offset = "0x1052AD8")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1ECBC0C", Offset = "0x1ECBC0C", VA = "0x1ECBC0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1ECBFD8", Offset = "0x1ECBFD8", VA = "0x1ECBFD8", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1ECBFE0", Offset = "0x1ECBFE0", VA = "0x1ECBFE0", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1ECC0F0", Offset = "0x1ECC0F0", VA = "0x1ECC0F0", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1ECC16C", Offset = "0x1ECC16C", VA = "0x1ECC16C", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1ECC1E8", Offset = "0x1ECC1E8", VA = "0x1ECC1E8", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1ECBE28", Offset = "0x1ECBE28", VA = "0x1ECBE28")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1ECBF00", Offset = "0x1ECBF00", VA = "0x1ECBF00")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x1ECC264", Offset = "0x1ECC264", VA = "0x1ECC264")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class TQ
	{
		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1ED09E8", Offset = "0x1ED09E8", VA = "0x1ED09E8")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class AvatarUtility
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x27A82AC", Offset = "0x27A82AC", VA = "0x27A82AC")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x27A84C0", Offset = "0x27A84C0", VA = "0x27A84C0")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x27A84A0", Offset = "0x27A84A0", VA = "0x27A84A0")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x27A8B40", Offset = "0x27A8B40", VA = "0x27A8B40")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public static class BakerUtilities
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x27AA578", Offset = "0x27AA578", VA = "0x27AA578")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x27ABA4C", Offset = "0x27ABA4C", VA = "0x27ABA4C")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x27A9F8C", Offset = "0x27A9F8C", VA = "0x27A9F8C")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x27AA5C0", Offset = "0x27AA5C0", VA = "0x27AA5C0")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x27A9AC4", Offset = "0x27A9AC4", VA = "0x27A9AC4")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200009B")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x27A94F4", Offset = "0x27A94F4", VA = "0x27A94F4")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x27A9740", Offset = "0x27A9740", VA = "0x27A9740")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x27A9614", Offset = "0x27A9614", VA = "0x27A9614")]
		public void Reset()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x27A9878", Offset = "0x27A9878", VA = "0x27A9878")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x27A9D20", Offset = "0x27A9D20", VA = "0x27A9D20")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x27A9E1C", Offset = "0x27A9E1C", VA = "0x27A9E1C")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x27A9F18", Offset = "0x27A9F18", VA = "0x27A9F18")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x27A9E90", Offset = "0x27A9E90", VA = "0x27A9E90")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x27AA1D8", Offset = "0x27AA1D8", VA = "0x27AA1D8")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x27AA28C", Offset = "0x27AA28C", VA = "0x27AA28C")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009C")]
	public class BakerMuscle
	{
		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x27AA5C4", Offset = "0x27AA5C4", VA = "0x27AA5C4")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x27AA634", Offset = "0x27AA634", VA = "0x27AA634")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x27AAD1C", Offset = "0x27AAD1C", VA = "0x27AAD1C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x27AADD0", Offset = "0x27AADD0", VA = "0x27AADD0")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x27AACBC", Offset = "0x27AACBC", VA = "0x27AACBC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x27AAEB4", Offset = "0x27AAEB4", VA = "0x27AAEB4")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x27AAEFC", Offset = "0x27AAEFC", VA = "0x27AAEFC")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009D")]
	public class BakerTransform
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x27AAF04", Offset = "0x27AAF04", VA = "0x27AAF04")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x27AB098", Offset = "0x27AB098", VA = "0x27AB098")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x27AB0AC", Offset = "0x27AB0AC", VA = "0x27AB0AC")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x27AB33C", Offset = "0x27AB33C", VA = "0x27AB33C")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x27AAFA0", Offset = "0x27AAFA0", VA = "0x27AAFA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x27AB588", Offset = "0x27AB588", VA = "0x27AB588")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x27AB5FC", Offset = "0x27AB5FC", VA = "0x27AB5FC")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x27AB848", Offset = "0x27AB848", VA = "0x27AB848")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052B10", Offset = "0x1052B10")]
		public bool bakeHandIK;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052B48", Offset = "0x1052B48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052B48", Offset = "0x1052B48")]
		public float IKKeyReductionError;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052BA0", Offset = "0x1052BA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052BA0", Offset = "0x1052BA0")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1ECD19C", Offset = "0x1ECD19C", VA = "0x1ECD19C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1ECD5C8", Offset = "0x1ECD5C8", VA = "0x1ECD5C8", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1ECD5E4", Offset = "0x1ECD5E4", VA = "0x1ECD5E4", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1ECD704", Offset = "0x1ECD704", VA = "0x1ECD704", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1ECD7E0", Offset = "0x1ECD7E0", VA = "0x1ECD7E0", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1ECD9B0", Offset = "0x1ECD9B0", VA = "0x1ECD9B0", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1ECDCD8", Offset = "0x1ECDCD8", VA = "0x1ECDCD8")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1ECDDB4", Offset = "0x1ECDDB4", VA = "0x1ECDDB4")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200024C")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000B62")]
			Update,
			[Token(Token = "0x4000B63")]
			FixedUpdate,
			[Token(Token = "0x4000B64")]
			LateUpdate,
			[Token(Token = "0x4000B65")]
			FixedLateUpdate
		}

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052BF4", Offset = "0x1052BF4")]
		public bool smoothFollow;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052C2C", Offset = "0x1052C2C")]
		public float rotationSensitivity;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052C64", Offset = "0x1052C64")]
		public float distance;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1052C9C", Offset = "0x1052C9C")]
		public LayerMask blockingLayers;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1052CD4", Offset = "0x1052CD4")]
		public float blockedOffset;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052CEC", Offset = "0x1052CEC")]
		private float <x>k__BackingField;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052CFC", Offset = "0x1052CFC")]
		private float <y>k__BackingField;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052D0C", Offset = "0x1052D0C")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x1700004E")]
		public float x
		{
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0x202AF3C", Offset = "0x202AF3C", VA = "0x202AF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059EDC", Offset = "0x1059EDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0x202AF44", Offset = "0x202AF44", VA = "0x202AF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059EEC", Offset = "0x1059EEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public float y
		{
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0x202AF4C", Offset = "0x202AF4C", VA = "0x202AF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059EFC", Offset = "0x1059EFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x202AF54", Offset = "0x202AF54", VA = "0x202AF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059F0C", Offset = "0x1059F0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float distanceTarget
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0x202AF5C", Offset = "0x202AF5C", VA = "0x202AF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059F1C", Offset = "0x1059F1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0x202AF64", Offset = "0x202AF64", VA = "0x202AF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059F2C", Offset = "0x1059F2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000051")]
		private float zoomAdd
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x202BA10", Offset = "0x202BA10", VA = "0x202BA10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x202AF6C", Offset = "0x202AF6C", VA = "0x202AF6C")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x202AFA8", Offset = "0x202AFA8", VA = "0x202AFA8")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x202AFB0", Offset = "0x202AFB0", VA = "0x202AFB0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x202B0CC", Offset = "0x202B0CC", VA = "0x202B0CC", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x202B128", Offset = "0x202B128", VA = "0x202B128", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x202B190", Offset = "0x202B190", VA = "0x202B190", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x202B1F4", Offset = "0x202B1F4", VA = "0x202B1F4")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x202B100", Offset = "0x202B100", VA = "0x202B100")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x202B374", Offset = "0x202B374", VA = "0x202B374")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x202B960", Offset = "0x202B960", VA = "0x202B960")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x202BA84", Offset = "0x202BA84", VA = "0x202BA84")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x202BB94", Offset = "0x202BB94", VA = "0x202BB94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x202BBCC", Offset = "0x202BBCC", VA = "0x202BBCC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x202BD84", Offset = "0x202BD84", VA = "0x202BD84")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x202BE34", Offset = "0x202BE34", VA = "0x202BE34")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A1")]
	public enum Axis
	{
		[Token(Token = "0x40004DA")]
		X,
		[Token(Token = "0x40004DB")]
		Y,
		[Token(Token = "0x40004DC")]
		Z
	}
	[Token(Token = "0x20000A2")]
	public class AxisTools
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x27A8B48", Offset = "0x27A8B48", VA = "0x27A8B48")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x27A8C00", Offset = "0x27A8C00", VA = "0x27A8C00")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x27A8CAC", Offset = "0x27A8CAC", VA = "0x27A8CAC")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x27A8E90", Offset = "0x27A8E90", VA = "0x27A8E90")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x27A8DC8", Offset = "0x27A8DC8", VA = "0x27A8DC8")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x27A8FAC", Offset = "0x27A8FAC", VA = "0x27A8FAC")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x27A8FF4", Offset = "0x27A8FF4", VA = "0x27A8FF4")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x27A92BC", Offset = "0x27A92BC", VA = "0x27A92BC")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A3")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x200024D")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x2024A9C", Offset = "0x2024A9C", VA = "0x2024A9C")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000052")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x2024828", Offset = "0x2024828", VA = "0x2024828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0x2024B14", Offset = "0x2024B14", VA = "0x2024B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x20247DC", Offset = "0x20247DC", VA = "0x20247DC")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x200024E")]
		public enum BoneType
		{
			[Token(Token = "0x4000B6A")]
			Unassigned,
			[Token(Token = "0x4000B6B")]
			Spine,
			[Token(Token = "0x4000B6C")]
			Head,
			[Token(Token = "0x4000B6D")]
			Arm,
			[Token(Token = "0x4000B6E")]
			Leg,
			[Token(Token = "0x4000B6F")]
			Tail,
			[Token(Token = "0x4000B70")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200024F")]
		public enum BoneSide
		{
			[Token(Token = "0x4000B72")]
			Center,
			[Token(Token = "0x4000B73")]
			Left,
			[Token(Token = "0x4000B74")]
			Right
		}

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x2024D88", Offset = "0x2024D88", VA = "0x2024D88")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x2025088", Offset = "0x2025088", VA = "0x2025088")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x20252D8", Offset = "0x20252D8", VA = "0x20252D8")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x202535C", Offset = "0x202535C", VA = "0x202535C")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x2025408", Offset = "0x2025408", VA = "0x2025408")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x2024F38", Offset = "0x2024F38", VA = "0x2024F38")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x2025238", Offset = "0x2025238", VA = "0x2025238")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x2025C48", Offset = "0x2025C48", VA = "0x2025C48")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x2025A60", Offset = "0x2025A60", VA = "0x2025A60")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x2025B54", Offset = "0x2025B54", VA = "0x2025B54")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x2025628", Offset = "0x2025628", VA = "0x2025628")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x20256DC", Offset = "0x20256DC", VA = "0x20256DC")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x2025790", Offset = "0x2025790", VA = "0x2025790")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x2025844", Offset = "0x2025844", VA = "0x2025844")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x20258F8", Offset = "0x20258F8", VA = "0x20258F8")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x20259AC", Offset = "0x20259AC", VA = "0x20259AC")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x2025E5C", Offset = "0x2025E5C", VA = "0x2025E5C")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x202553C", Offset = "0x202553C", VA = "0x202553C")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x2025DCC", Offset = "0x2025DCC", VA = "0x2025DCC")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x2025ECC", Offset = "0x2025ECC", VA = "0x2025ECC")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x2025FA4", Offset = "0x2025FA4", VA = "0x2025FA4")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x2025D50", Offset = "0x2025D50", VA = "0x2025D50")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x2025CD8", Offset = "0x2025CD8", VA = "0x2025CD8")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000A5")]
	public class BipedReferences
	{
		[Token(Token = "0x2000250")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170000E8")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000E5F")]
				[Address(RVA = "0x202AF34", Offset = "0x202AF34", VA = "0x202AF34")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1289B44", Offset = "0x1289B44", VA = "0x1289B44")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x17000054")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000618")]
			[Address(RVA = "0x2027B18", Offset = "0x2027B18", VA = "0x2027B18", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000055")]
		public bool isEmpty
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x2027F04", Offset = "0x2027F04", VA = "0x2027F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x2027F14", Offset = "0x2027F14", VA = "0x2027F14", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x2028340", Offset = "0x2028340", VA = "0x2028340", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x2028778", Offset = "0x2028778", VA = "0x2028778")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x2028D88", Offset = "0x2028D88", VA = "0x2028D88")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x20289C4", Offset = "0x20289C4", VA = "0x20289C4")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x2029538", Offset = "0x2029538", VA = "0x2029538")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x202962C", Offset = "0x202962C", VA = "0x202962C")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x2029B84", Offset = "0x2029B84", VA = "0x2029B84")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x2029988", Offset = "0x2029988", VA = "0x2029988")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x2029800", Offset = "0x2029800", VA = "0x2029800")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x20296CC", Offset = "0x20296CC", VA = "0x20296CC")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x2029A8C", Offset = "0x2029A8C", VA = "0x2029A8C")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x2029C80", Offset = "0x2029C80", VA = "0x2029C80")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x202A720", Offset = "0x202A720", VA = "0x202A720")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x202A204", Offset = "0x202A204", VA = "0x202A204")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x202AA14", Offset = "0x202AA14", VA = "0x202AA14")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x202A544", Offset = "0x202A544", VA = "0x202A544")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x202AA1C", Offset = "0x202AA1C", VA = "0x202AA1C")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x202AA24", Offset = "0x202AA24", VA = "0x202AA24")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x202ABE4", Offset = "0x202ABE4", VA = "0x202ABE4")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x202ADFC", Offset = "0x202ADFC", VA = "0x202ADFC")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x2028954", Offset = "0x2028954", VA = "0x2028954")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x20000A6")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x202BE50", Offset = "0x202BE50", VA = "0x202BE50")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x202BE58", Offset = "0x202BE58", VA = "0x202BE58")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x202BF98", Offset = "0x202BF98", VA = "0x202BF98")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	public class Hierarchy
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1ECC2CC", Offset = "0x1ECC2CC", VA = "0x1ECC2CC")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1ECC4CC", Offset = "0x1ECC4CC", VA = "0x1ECC4CC")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1ECC364", Offset = "0x1ECC364", VA = "0x1ECC364")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1ECC5F0", Offset = "0x1ECC5F0", VA = "0x1ECC5F0")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1ECC714", Offset = "0x1ECC714", VA = "0x1ECC714")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1ECC9BC", Offset = "0x1ECC9BC", VA = "0x1ECC9BC")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1ECCAD8", Offset = "0x1ECCAD8", VA = "0x1ECCAD8")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1ECCC60", Offset = "0x1ECCC60", VA = "0x1ECCC60")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1ECCFF4", Offset = "0x1ECCFF4", VA = "0x1ECCFF4")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1ECCDE0", Offset = "0x1ECCDE0", VA = "0x1ECCDE0")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1ECD194", Offset = "0x1ECD194", VA = "0x1ECD194")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1ECDE68", Offset = "0x1ECDE68", VA = "0x1ECDE68")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1ECDED8", Offset = "0x1ECDED8", VA = "0x1ECDED8")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public enum InterpolationMode
	{
		[Token(Token = "0x400050A")]
		None,
		[Token(Token = "0x400050B")]
		InOutCubic,
		[Token(Token = "0x400050C")]
		InOutQuintic,
		[Token(Token = "0x400050D")]
		InOutSine,
		[Token(Token = "0x400050E")]
		InQuintic,
		[Token(Token = "0x400050F")]
		InQuartic,
		[Token(Token = "0x4000510")]
		InCubic,
		[Token(Token = "0x4000511")]
		InQuadratic,
		[Token(Token = "0x4000512")]
		InElastic,
		[Token(Token = "0x4000513")]
		InElasticSmall,
		[Token(Token = "0x4000514")]
		InElasticBig,
		[Token(Token = "0x4000515")]
		InSine,
		[Token(Token = "0x4000516")]
		InBack,
		[Token(Token = "0x4000517")]
		OutQuintic,
		[Token(Token = "0x4000518")]
		OutQuartic,
		[Token(Token = "0x4000519")]
		OutCubic,
		[Token(Token = "0x400051A")]
		OutInCubic,
		[Token(Token = "0x400051B")]
		OutInQuartic,
		[Token(Token = "0x400051C")]
		OutElastic,
		[Token(Token = "0x400051D")]
		OutElasticSmall,
		[Token(Token = "0x400051E")]
		OutElasticBig,
		[Token(Token = "0x400051F")]
		OutSine,
		[Token(Token = "0x4000520")]
		OutBack,
		[Token(Token = "0x4000521")]
		OutBackCubic,
		[Token(Token = "0x4000522")]
		OutBackQuartic,
		[Token(Token = "0x4000523")]
		BackInCubic,
		[Token(Token = "0x4000524")]
		BackInQuartic
	}
	[Token(Token = "0x20000AB")]
	public class Interp
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1ECDF48", Offset = "0x1ECDF48", VA = "0x1ECDF48")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1ECE9B0", Offset = "0x1ECE9B0", VA = "0x1ECE9B0")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1ECEAB8", Offset = "0x1ECEAB8", VA = "0x1ECEAB8")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1ECE2B4", Offset = "0x1ECE2B4", VA = "0x1ECE2B4")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1ECE2C0", Offset = "0x1ECE2C0", VA = "0x1ECE2C0")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1ECE2E4", Offset = "0x1ECE2E4", VA = "0x1ECE2E4")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1ECE320", Offset = "0x1ECE320", VA = "0x1ECE320")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1ECE338", Offset = "0x1ECE338", VA = "0x1ECE338")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1ECE34C", Offset = "0x1ECE34C", VA = "0x1ECE34C")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1ECE360", Offset = "0x1ECE360", VA = "0x1ECE360")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1ECE370", Offset = "0x1ECE370", VA = "0x1ECE370")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1ECE3B8", Offset = "0x1ECE3B8", VA = "0x1ECE3B8")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1ECE3F0", Offset = "0x1ECE3F0", VA = "0x1ECE3F0")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1ECE418", Offset = "0x1ECE418", VA = "0x1ECE418")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1ECEBB4", Offset = "0x1ECEBB4", VA = "0x1ECEBB4")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1ECE44C", Offset = "0x1ECE44C", VA = "0x1ECE44C")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1ECE474", Offset = "0x1ECE474", VA = "0x1ECE474")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1ECE4A4", Offset = "0x1ECE4A4", VA = "0x1ECE4A4")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1ECE4D8", Offset = "0x1ECE4D8", VA = "0x1ECE4D8")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1ECE51C", Offset = "0x1ECE51C", VA = "0x1ECE51C")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1ECE580", Offset = "0x1ECE580", VA = "0x1ECE580")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1ECE5E4", Offset = "0x1ECE5E4", VA = "0x1ECE5E4")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1ECE638", Offset = "0x1ECE638", VA = "0x1ECE638")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1ECE68C", Offset = "0x1ECE68C", VA = "0x1ECE68C")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x1ECE724", Offset = "0x1ECE724", VA = "0x1ECE724")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1ECE7B8", Offset = "0x1ECE7B8", VA = "0x1ECE7B8")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1ECEBE8", Offset = "0x1ECEBE8", VA = "0x1ECEBE8")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1ECE85C", Offset = "0x1ECE85C", VA = "0x1ECE85C")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1ECE940", Offset = "0x1ECE940", VA = "0x1ECE940")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1ECE970", Offset = "0x1ECE970", VA = "0x1ECE970")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1ECECD0", Offset = "0x1ECECD0", VA = "0x1ECECD0")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1ECECD8", Offset = "0x1ECECD8", VA = "0x1ECECD8")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1ECED48", Offset = "0x1ECED48", VA = "0x1ECED48")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1ECA95C", Offset = "0x1ECA95C", VA = "0x1ECA95C")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1ECEDB8", Offset = "0x1ECEDB8", VA = "0x1ECEDB8")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1ECEE84", Offset = "0x1ECEE84", VA = "0x1ECEE84")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1ECEDD0", Offset = "0x1ECEDD0", VA = "0x1ECEDD0")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1ECEE9C", Offset = "0x1ECEE9C", VA = "0x1ECEE9C")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1ECEF40", Offset = "0x1ECEF40", VA = "0x1ECEF40")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1ECEF6C", Offset = "0x1ECEF6C", VA = "0x1ECEF6C")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1ECEFBC", Offset = "0x1ECEFBC", VA = "0x1ECEFBC")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1ECF028", Offset = "0x1ECF028", VA = "0x1ECF028")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1ECF11C", Offset = "0x1ECF11C", VA = "0x1ECF11C")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1ECF1F4", Offset = "0x1ECF1F4", VA = "0x1ECF1F4")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1ECF254", Offset = "0x1ECF254", VA = "0x1ECF254")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AE")]
	public static class QuaTools
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1ECF284", Offset = "0x1ECF284", VA = "0x1ECF284")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1ECF3D0", Offset = "0x1ECF3D0", VA = "0x1ECF3D0")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1ECF51C", Offset = "0x1ECF51C", VA = "0x1ECF51C")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1ECF630", Offset = "0x1ECF630", VA = "0x1ECF630")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1ECF744", Offset = "0x1ECF744", VA = "0x1ECF744")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1ECF8D0", Offset = "0x1ECF8D0", VA = "0x1ECF8D0")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1ECF9A0", Offset = "0x1ECF9A0", VA = "0x1ECF9A0")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1ECFAF4", Offset = "0x1ECFAF4", VA = "0x1ECFAF4")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1ECFD78", Offset = "0x1ECFD78", VA = "0x1ECFD78")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1ECFF8C", Offset = "0x1ECFF8C", VA = "0x1ECFF8C")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1ED010C", Offset = "0x1ED010C", VA = "0x1ED010C")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1ED027C", Offset = "0x1ED027C", VA = "0x1ED027C")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1ED038C", Offset = "0x1ED038C", VA = "0x1ED038C")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000AF")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000056")]
		public static T instance
		{
			[Token(Token = "0x600067A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067B")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600067C")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052D2C", Offset = "0x1052D2C")]
		public bool fixTransforms;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000057")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x1ED0520", Offset = "0x1ED0520", VA = "0x1ED0520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		private bool isAnimated
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0x1ED081C", Offset = "0x1ED081C", VA = "0x1ED081C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1ED03E8", Offset = "0x1ED03E8", VA = "0x1ED03E8")]
		public void Disable()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1ED0480", Offset = "0x1ED0480", VA = "0x1ED0480", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1ED0484", Offset = "0x1ED0484", VA = "0x1ED0484", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1ED0488", Offset = "0x1ED0488", VA = "0x1ED0488", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1ED048C", Offset = "0x1ED048C", VA = "0x1ED048C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1ED051C", Offset = "0x1ED051C", VA = "0x1ED051C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1ED04C4", Offset = "0x1ED04C4", VA = "0x1ED04C4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x1ED07D0", Offset = "0x1ED07D0", VA = "0x1ED07D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1ED0610", Offset = "0x1ED0610", VA = "0x1ED0610")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1ED08D8", Offset = "0x1ED08D8", VA = "0x1ED08D8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1ED0934", Offset = "0x1ED0934", VA = "0x1ED0934")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x1ED0990", Offset = "0x1ED0990", VA = "0x1ED0990")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x1ED09D8", Offset = "0x1ED09D8", VA = "0x1ED09D8")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1ED0A58", Offset = "0x1ED0A58", VA = "0x1ED0A58")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1ED0B10", Offset = "0x1ED0B10", VA = "0x1ED0B10")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1ED0BC8", Offset = "0x1ED0BC8", VA = "0x1ED0BC8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1ED0C80", Offset = "0x1ED0C80", VA = "0x1ED0C80")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public static class V3Tools
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1ED0C88", Offset = "0x1ED0C88", VA = "0x1ED0C88")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1ED0D80", Offset = "0x1ED0D80", VA = "0x1ED0D80")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1ED0E78", Offset = "0x1ED0E78", VA = "0x1ED0E78")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1ED0F70", Offset = "0x1ED0F70", VA = "0x1ED0F70")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1ED1070", Offset = "0x1ED1070", VA = "0x1ED1070")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1ED1294", Offset = "0x1ED1294", VA = "0x1ED1294")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1ED14D0", Offset = "0x1ED14D0", VA = "0x1ED14D0")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1ED1720", Offset = "0x1ED1720", VA = "0x1ED1720")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1ED1920", Offset = "0x1ED1920", VA = "0x1ED1920")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1ED1AFC", Offset = "0x1ED1AFC", VA = "0x1ED1AFC")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1ED1C30", Offset = "0x1ED1C30", VA = "0x1ED1C30")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000B3")]
	public static class Warning
	{
		[Token(Token = "0x2000251")]
		public delegate void Logger(string message);

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1ED1D88", Offset = "0x1ED1D88", VA = "0x1ED1D88")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1ED21D8", Offset = "0x1ED21D8", VA = "0x1ED21D8")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x20000B4")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x203819C", Offset = "0x203819C", VA = "0x203819C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x2038274", Offset = "0x2038274", VA = "0x2038274")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x2000252")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x2000253")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x2000254")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x2000255")]
		public struct PuppetEvent
		{
			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105833C", Offset = "0x105833C")]
			public string switchToBehaviour;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058374", Offset = "0x1058374")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10583AC", Offset = "0x10583AC")]
			public UnityEvent unityEvent;

			[Token(Token = "0x4000B7A")]
			private const string empty = "";

			[Token(Token = "0x170000E9")]
			public bool switchBehaviour
			{
				[Token(Token = "0x6000E70")]
				[Address(RVA = "0x1289D10", Offset = "0x1289D10", VA = "0x1289D10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x1289D18", Offset = "0x1289D18", VA = "0x1289D18")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000256")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string animationState;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float crossfadeTime;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int layer;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4000B7F")]
			private const string empty = "";

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x203991C", Offset = "0x203991C", VA = "0x203991C")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x20399F0", Offset = "0x20399F0", VA = "0x20399F0")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x2039AF4", Offset = "0x2039AF4", VA = "0x2039AF4")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x2039BD4", Offset = "0x2039BD4", VA = "0x2039BD4")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1052D84", Offset = "0x1052D84")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool initiated;

		[Token(Token = "0x17000059")]
		public bool forceActive
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x20384FC", Offset = "0x20384FC", VA = "0x20384FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059FAC", Offset = "0x1059FAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x2038504", Offset = "0x2038504", VA = "0x2038504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1059FBC", Offset = "0x1059FBC")]
			protected set
			{
			}
		}

		[Token(Token = "0x60006A0")]
		public abstract void OnReactivate();

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x203827C", Offset = "0x203827C", VA = "0x203827C", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x2038280", Offset = "0x2038280", VA = "0x2038280", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x2038284", Offset = "0x2038284", VA = "0x2038284", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x2038288", Offset = "0x2038288", VA = "0x2038288", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x203828C", Offset = "0x203828C", VA = "0x203828C", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x2038290", Offset = "0x2038290", VA = "0x2038290", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x2038294", Offset = "0x2038294", VA = "0x2038294", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x2038298", Offset = "0x2038298", VA = "0x2038298", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x203829C", Offset = "0x203829C", VA = "0x203829C", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x20384B8", Offset = "0x20384B8", VA = "0x20384B8", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x20384C8", Offset = "0x20384C8", VA = "0x20384C8", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x20384CC", Offset = "0x20384CC", VA = "0x20384CC", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x20384D0", Offset = "0x20384D0", VA = "0x20384D0", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x20384D4", Offset = "0x20384D4", VA = "0x20384D4", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x20384D8", Offset = "0x20384D8", VA = "0x20384D8", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x20384DC", Offset = "0x20384DC", VA = "0x20384DC", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x20384E0", Offset = "0x20384E0", VA = "0x20384E0", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x20384E4", Offset = "0x20384E4", VA = "0x20384E4", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x20384E8", Offset = "0x20384E8", VA = "0x20384E8", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x20384EC", Offset = "0x20384EC", VA = "0x20384EC", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x20384F0", Offset = "0x20384F0", VA = "0x20384F0", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x20384F4", Offset = "0x20384F4", VA = "0x20384F4", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x20384F8", Offset = "0x20384F8", VA = "0x20384F8", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2038510", Offset = "0x2038510", VA = "0x2038510")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2038568", Offset = "0x2038568", VA = "0x2038568")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x20385CC", Offset = "0x20385CC", VA = "0x20385CC")]
		public void OnRead()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2038630", Offset = "0x2038630", VA = "0x2038630")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x2038694", Offset = "0x2038694", VA = "0x2038694")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x20389F0", Offset = "0x20389F0", VA = "0x20389F0")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x2038DC8", Offset = "0x2038DC8", VA = "0x2038DC8")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x2038E70", Offset = "0x2038E70", VA = "0x2038E70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2038E80", Offset = "0x2038E80", VA = "0x2038E80")]
		public void Activate()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x2038FA0", Offset = "0x2038FA0", VA = "0x2038FA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2038FF0", Offset = "0x2038FF0", VA = "0x2038FF0")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x20390A0", Offset = "0x20390A0", VA = "0x20390A0")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x2039150", Offset = "0x2039150", VA = "0x2039150")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x2039200", Offset = "0x2039200", VA = "0x2039200", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x2039240", Offset = "0x2039240", VA = "0x2039240")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x20393D8", Offset = "0x20393D8", VA = "0x20393D8")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x2039580", Offset = "0x2039580", VA = "0x2039580")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x20396B4", Offset = "0x20396B4", VA = "0x20396B4", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x203962C", Offset = "0x203962C", VA = "0x203962C")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x2039914", Offset = "0x2039914", VA = "0x2039914")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BAC0", Offset = "0x104BAC0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BAC0", Offset = "0x104BAC0")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x2000257")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10514F8", Offset = "0x10514F8")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fader>5__2;

			[Token(Token = "0x170000EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E79")]
				[Address(RVA = "0x203ABD4", Offset = "0x203ABD4", VA = "0x203ABD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E7B")]
				[Address(RVA = "0x203AC3C", Offset = "0x203AC3C", VA = "0x203AC3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x203A1B0", Offset = "0x203A1B0", VA = "0x203A1B0")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x203A9F0", Offset = "0x203A9F0", VA = "0x203A9F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x203A9F4", Offset = "0x203A9F4", VA = "0x203A9F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x203ABDC", Offset = "0x203ABDC", VA = "0x203ABDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1052D94", Offset = "0x1052D94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052D94", Offset = "0x1052D94")]
		public string stateName;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052DF4", Offset = "0x1052DF4")]
		public float transitionDuration;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052E2C", Offset = "0x1052E2C")]
		public int layer;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052E64", Offset = "0x1052E64")]
		public float fixedTime;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1052E9C", Offset = "0x1052E9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052E9C", Offset = "0x1052E9C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052EFC", Offset = "0x1052EFC")]
		public string blendParameter;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052F34", Offset = "0x1052F34")]
		public float writheHeight;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052F6C", Offset = "0x1052F6C")]
		public float writheYVelocity;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052FA4", Offset = "0x1052FA4")]
		public float blendSpeed;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1052FDC", Offset = "0x1052FDC")]
		public float blendMappingSpeed;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1053014", Offset = "0x1053014")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053014", Offset = "0x1053014")]
		public bool canEnd;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053074", Offset = "0x1053074")]
		public float minTime;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10530AC", Offset = "0x10530AC")]
		public float maxEndVelocity;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10530E4", Offset = "0x10530E4")]
		public PuppetEvent onEnd;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float timer;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool endTriggered;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x203A054", Offset = "0x203A054", VA = "0x203A054")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1059FCC", Offset = "0x1059FCC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x203A0A0", Offset = "0x203A0A0", VA = "0x203A0A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A004", Offset = "0x105A004")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x203A0EC", Offset = "0x203A0EC", VA = "0x203A0EC", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x203A19C", Offset = "0x203A19C", VA = "0x203A19C", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x203A1A4", Offset = "0x203A1A4", VA = "0x203A1A4", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x203A12C", Offset = "0x203A12C", VA = "0x203A12C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A03C", Offset = "0x105A03C")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x203A1DC", Offset = "0x203A1DC", VA = "0x203A1DC", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x203A72C", Offset = "0x203A72C", VA = "0x203A72C", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x203A8CC", Offset = "0x203A8CC", VA = "0x203A8CC", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x203A578", Offset = "0x203A578", VA = "0x203A578")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x203A400", Offset = "0x203A400", VA = "0x203A400")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x203A934", Offset = "0x203A934", VA = "0x203A934", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x203A95C", Offset = "0x203A95C", VA = "0x203A95C")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BB20", Offset = "0x104BB20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BB20", Offset = "0x104BB20")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000258")]
		public enum State
		{
			[Token(Token = "0x4000B85")]
			Puppet,
			[Token(Token = "0x4000B86")]
			Unpinned,
			[Token(Token = "0x4000B87")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x2000259")]
		public enum NormalMode
		{
			[Token(Token = "0x4000B89")]
			Active,
			[Token(Token = "0x4000B8A")]
			Unmapped,
			[Token(Token = "0x4000B8B")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x200025A")]
		public class MasterProps
		{
			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NormalMode normalMode;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mappingBlendSpeed;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float activateOnImpulse;

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x1F2C4DC", Offset = "0x1F2C4DC", VA = "0x1F2C4DC")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200025B")]
		public struct MuscleProps
		{
			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10583E4", Offset = "0x10583E4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10583E4", Offset = "0x10583E4")]
			public float unpinParents;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058438", Offset = "0x1058438")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058438", Offset = "0x1058438")]
			public float unpinChildren;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105848C", Offset = "0x105848C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105848C", Offset = "0x105848C")]
			public float unpinGroup;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10584E0", Offset = "0x10584E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10584E0", Offset = "0x10584E0")]
			public float minMappingWeight;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058534", Offset = "0x1058534")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058534", Offset = "0x1058534")]
			public float maxMappingWeight;

			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058588", Offset = "0x1058588")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058588", Offset = "0x1058588")]
			public float minPinWeight;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10585DC", Offset = "0x10585DC")]
			public bool disableColliders;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058614", Offset = "0x1058614")]
			public float regainPinSpeed;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105864C", Offset = "0x105864C")]
			public float collisionResistance;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058684", Offset = "0x1058684")]
			public float knockOutDistance;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10586BC", Offset = "0x10586BC")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10586F4", Offset = "0x10586F4")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x200025C")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105873C", Offset = "0x105873C")]
			public Muscle.Group[] groups;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058774", Offset = "0x1058774")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x200025D")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10587AC", Offset = "0x10587AC")]
			public float multiplier;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10587E4", Offset = "0x10587E4")]
			public float collisionThreshold;
		}

		[Token(Token = "0x200025E")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x105311C", Offset = "0x105311C")]
		public MasterProps masterProps;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053154", Offset = "0x1053154")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105318C", Offset = "0x105318C")]
		public LayerMask collisionLayers;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10531C4", Offset = "0x10531C4")]
		public float collisionThreshold;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Weight collisionResistance;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10531FC", Offset = "0x10531FC")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053234", Offset = "0x1053234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053234", Offset = "0x1053234")]
		public int maxCollisions;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053288", Offset = "0x1053288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053288", Offset = "0x1053288")]
		public float regainPinSpeed;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10532E0", Offset = "0x10532E0")]
		public float boostFalloff;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1053318", Offset = "0x1053318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053318", Offset = "0x1053318")]
		public MuscleProps defaults;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053378", Offset = "0x1053378")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x10533B0", Offset = "0x10533B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10533B0", Offset = "0x10533B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10533B0", Offset = "0x10533B0")]
		public float knockOutDistance;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105342C", Offset = "0x105342C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105342C", Offset = "0x105342C")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053480", Offset = "0x1053480")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10534B8", Offset = "0x10534B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10534B8", Offset = "0x10534B8")]
		public float pinWeightThreshold;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105350C", Offset = "0x105350C")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053544", Offset = "0x1053544")]
		public bool dropProps;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x105357C", Offset = "0x105357C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105357C", Offset = "0x105357C")]
		public bool canGetUp;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10535DC", Offset = "0x10535DC")]
		public float getUpDelay;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053614", Offset = "0x1053614")]
		public float blendToAnimationTime;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105364C", Offset = "0x105364C")]
		public float maxGetUpVelocity;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053684", Offset = "0x1053684")]
		public float minGetUpDuration;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10536BC", Offset = "0x10536BC")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10536F4", Offset = "0x10536F4")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105372C", Offset = "0x105372C")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053764", Offset = "0x1053764")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105379C", Offset = "0x105379C")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x10537D4", Offset = "0x10537D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10537D4", Offset = "0x10537D4")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053834", Offset = "0x1053834")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105386C", Offset = "0x105386C")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10538A4", Offset = "0x10538A4")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10538DC", Offset = "0x10538DC")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053914", Offset = "0x1053914")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105394C", Offset = "0x105394C")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float unpinnedTimer;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float getUpTimer;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 hipsForward;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 hipsUp;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool getUpTargetFixed;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int collisions;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool eventsEnabled;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastKnockOutDistance;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool getupDisabled;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[HideInInspector]
		public int grabbing;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool hasBoosted;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Vector3 getUpPosition;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private bool dropPropFlag;

		[Token(Token = "0x1700005A")]
		public State state
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x203ACDC", Offset = "0x203ACDC", VA = "0x203ACDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A110", Offset = "0x105A110")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x203ACE4", Offset = "0x203ACE4", VA = "0x203ACE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A120", Offset = "0x105A120")]
			private set
			{
			}
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x203AC44", Offset = "0x203AC44", VA = "0x203AC44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A0A0", Offset = "0x105A0A0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x203AC90", Offset = "0x203AC90", VA = "0x203AC90")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A0D8", Offset = "0x105A0D8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x203ACEC", Offset = "0x203ACEC", VA = "0x203ACEC", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x203AFA0", Offset = "0x203AFA0", VA = "0x203AFA0")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x203B00C", Offset = "0x203B00C", VA = "0x203B00C", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x203B17C", Offset = "0x203B17C", VA = "0x203B17C", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x203B6E4", Offset = "0x203B6E4", VA = "0x203B6E4", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x203B798", Offset = "0x203B798", VA = "0x203B798", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x203B83C", Offset = "0x203B83C", VA = "0x203B83C", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x203B844", Offset = "0x203B844", VA = "0x203B844", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x203B8D0", Offset = "0x203B8D0", VA = "0x203B8D0", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x203B8DC", Offset = "0x203B8DC", VA = "0x203B8DC", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x203C1A4", Offset = "0x203C1A4", VA = "0x203C1A4", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x203C4CC", Offset = "0x203C4CC", VA = "0x203C4CC")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x203C5B4", Offset = "0x203C5B4", VA = "0x203C5B4", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x203C334", Offset = "0x203C334", VA = "0x203C334")]
		private void BlendMuscleMapping(int muscleIndex, ref bool to)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x203C9B8", Offset = "0x203C9B8", VA = "0x203C9B8", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x203C9F8", Offset = "0x203C9F8", VA = "0x203C9F8", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x203C980", Offset = "0x203C980", VA = "0x203C980")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x203CA30", Offset = "0x203CA30", VA = "0x203CA30")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x203CA68", Offset = "0x203CA68", VA = "0x203CA68", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x203CA7C", Offset = "0x203CA7C", VA = "0x203CA7C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x203CC64", Offset = "0x203CC64", VA = "0x203CC64")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x203CCF4", Offset = "0x203CCF4", VA = "0x203CCF4")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x203CEDC", Offset = "0x203CEDC", VA = "0x203CEDC")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x203D120", Offset = "0x203D120", VA = "0x203D120")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x203CD38", Offset = "0x203CD38", VA = "0x203CD38")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x203D198", Offset = "0x203D198", VA = "0x203D198")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x203D23C", Offset = "0x203D23C", VA = "0x203D23C")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x203CE0C", Offset = "0x203CE0C", VA = "0x203CE0C")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x203D2AC", Offset = "0x203D2AC", VA = "0x203D2AC")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x203D350", Offset = "0x203D350", VA = "0x203D350")]
		public void Unpin()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x203D3CC", Offset = "0x203D3CC", VA = "0x203D3CC", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x203D5A4", Offset = "0x203D5A4", VA = "0x203D5A4", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x203D9C8", Offset = "0x203D9C8", VA = "0x203D9C8")]
		private float GetImpulse(MuscleCollision m, ref float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x203D4A8", Offset = "0x203D4A8", VA = "0x203D4A8")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x203DD38", Offset = "0x203DD38", VA = "0x203DD38")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x203DB50", Offset = "0x203DB50", VA = "0x203DB50")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x203DF84", Offset = "0x203DF84", VA = "0x203DF84")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x203CFFC", Offset = "0x203CFFC", VA = "0x203CFFC")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x203DBE8", Offset = "0x203DBE8", VA = "0x203DBE8")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x203E0FC", Offset = "0x203E0FC", VA = "0x203E0FC")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x203C0BC", Offset = "0x203C0BC", VA = "0x203C0BC")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x203342C", Offset = "0x203342C", VA = "0x203342C")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x203E1DC", Offset = "0x203E1DC", VA = "0x203E1DC")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x203ADCC", Offset = "0x203ADCC", VA = "0x203ADCC")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x203E26C", Offset = "0x203E26C", VA = "0x203E26C", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x203E274", Offset = "0x203E274", VA = "0x203E274", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x203E314", Offset = "0x203E314", VA = "0x203E314")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BB80", Offset = "0x104BB80")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float loseBalanceAngle;

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1F2C4EC", Offset = "0x1F2C4EC", VA = "0x1F2C4EC", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1F2C510", Offset = "0x1F2C510", VA = "0x1F2C510", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1F2C514", Offset = "0x1F2C514", VA = "0x1F2C514", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1F2C518", Offset = "0x1F2C518", VA = "0x1F2C518", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1F2C51C", Offset = "0x1F2C51C", VA = "0x1F2C51C", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1F2C558", Offset = "0x1F2C558", VA = "0x1F2C558", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1F2C55C", Offset = "0x1F2C55C", VA = "0x1F2C55C", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1F2C564", Offset = "0x1F2C564", VA = "0x1F2C564", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1F2C56C", Offset = "0x1F2C56C", VA = "0x1F2C56C")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200025F")]
		public class Settings
		{
			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105881C", Offset = "0x105881C")]
			public float damperForSpring;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058854", Offset = "0x1058854")]
			public float maxForceMlp;

			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105888C", Offset = "0x105888C")]
			public float IMlp;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10588C4", Offset = "0x10588C4")]
			public float velocityF;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10588FC", Offset = "0x10588FC")]
			public Vector3 copOffset;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058934", Offset = "0x1058934")]
			public float torqueMlp;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105896C", Offset = "0x105896C")]
			public float maxTorqueMag;

			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x1ECA30C", Offset = "0x1ECA30C", VA = "0x1ECA30C")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105397C", Offset = "0x105397C")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105398C", Offset = "0x105398C")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105399C", Offset = "0x105399C")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539AC", Offset = "0x10539AC")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539BC", Offset = "0x10539BC")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539CC", Offset = "0x10539CC")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Settings settings;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] copPoints;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody Ibody;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 I;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion toJointSpace;

		[Token(Token = "0x1700005B")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x1EC9AF8", Offset = "0x1EC9AF8", VA = "0x1EC9AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A130", Offset = "0x105A130")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x1EC9B00", Offset = "0x1EC9B00", VA = "0x1EC9B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A140", Offset = "0x105A140")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public Vector3 dir
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x1EC9B08", Offset = "0x1EC9B08", VA = "0x1EC9B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A150", Offset = "0x105A150")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x1EC9B14", Offset = "0x1EC9B14", VA = "0x1EC9B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A160", Offset = "0x105A160")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public Vector3 dirVel
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0x1EC9B20", Offset = "0x1EC9B20", VA = "0x1EC9B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A170", Offset = "0x105A170")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600071C")]
			[Address(RVA = "0x1EC9B2C", Offset = "0x1EC9B2C", VA = "0x1EC9B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A180", Offset = "0x105A180")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Vector3 cop
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x1EC9B38", Offset = "0x1EC9B38", VA = "0x1EC9B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A190", Offset = "0x105A190")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x1EC9B44", Offset = "0x1EC9B44", VA = "0x1EC9B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1A0", Offset = "0x105A1A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public Vector3 com
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x1EC9B50", Offset = "0x1EC9B50", VA = "0x1EC9B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1B0", Offset = "0x105A1B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000720")]
			[Address(RVA = "0x1EC9B5C", Offset = "0x1EC9B5C", VA = "0x1EC9B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1C0", Offset = "0x105A1C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Vector3 comV
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x1EC9B68", Offset = "0x1EC9B68", VA = "0x1EC9B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1D0", Offset = "0x105A1D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000722")]
			[Address(RVA = "0x1EC9B74", Offset = "0x1EC9B74", VA = "0x1EC9B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1E0", Offset = "0x105A1E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1EC9B80", Offset = "0x1EC9B80", VA = "0x1EC9B80")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1EC9C84", Offset = "0x1EC9C84", VA = "0x1EC9C84")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1ECA25C", Offset = "0x1ECA25C", VA = "0x1ECA25C")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1ECA328", Offset = "0x1ECA328", VA = "0x1ECA328")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1ECA358", Offset = "0x1ECA358", VA = "0x1ECA358")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1ECA394", Offset = "0x1ECA394", VA = "0x1ECA394")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1ECA3CC", Offset = "0x1ECA3CC", VA = "0x1ECA3CC")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1ECA304", Offset = "0x1ECA304", VA = "0x1ECA304")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000260")]
		public enum Mode
		{
			[Token(Token = "0x4000BAA")]
			FeetCentroid,
			[Token(Token = "0x4000BAB")]
			CenterOfPressure
		}

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocityDamper;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocityLerpSpeed;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocityMax;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539DC", Offset = "0x10539DC")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539EC", Offset = "0x10539EC")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10539FC", Offset = "0x10539FC")]
		private float <angle>k__BackingField;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A0C", Offset = "0x1053A0C")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A1C", Offset = "0x1053A1C")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A2C", Offset = "0x1053A2C")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A3C", Offset = "0x1053A3C")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A4C", Offset = "0x1053A4C")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053A5C", Offset = "0x1053A5C")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LayerMask groundLayers;

		[Token(Token = "0x17000061")]
		public Vector3 position
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x1ECA404", Offset = "0x1ECA404", VA = "0x1ECA404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A1F0", Offset = "0x105A1F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x1ECA410", Offset = "0x1ECA410", VA = "0x1ECA410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A200", Offset = "0x105A200")]
			private set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public Vector3 direction
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x1ECA41C", Offset = "0x1ECA41C", VA = "0x1ECA41C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A210", Offset = "0x105A210")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x1ECA428", Offset = "0x1ECA428", VA = "0x1ECA428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A220", Offset = "0x105A220")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public float angle
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x1ECA434", Offset = "0x1ECA434", VA = "0x1ECA434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A230", Offset = "0x105A230")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x1ECA43C", Offset = "0x1ECA43C", VA = "0x1ECA43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A240", Offset = "0x105A240")]
			private set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0x1ECA444", Offset = "0x1ECA444", VA = "0x1ECA444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A250", Offset = "0x105A250")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x1ECA450", Offset = "0x1ECA450", VA = "0x1ECA450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A260", Offset = "0x105A260")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0x1ECA45C", Offset = "0x1ECA45C", VA = "0x1ECA45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A270", Offset = "0x105A270")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x1ECA468", Offset = "0x1ECA468", VA = "0x1ECA468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A280", Offset = "0x105A280")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0x1ECA474", Offset = "0x1ECA474", VA = "0x1ECA474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A290", Offset = "0x105A290")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x1ECA480", Offset = "0x1ECA480", VA = "0x1ECA480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2A0", Offset = "0x105A2A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x6000737")]
			[Address(RVA = "0x1ECA48C", Offset = "0x1ECA48C", VA = "0x1ECA48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2B0", Offset = "0x105A2B0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x1ECA498", Offset = "0x1ECA498", VA = "0x1ECA498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2C0", Offset = "0x105A2C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool isGrounded
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0x1ECA4A4", Offset = "0x1ECA4A4", VA = "0x1ECA4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2D0", Offset = "0x105A2D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600073A")]
			[Address(RVA = "0x1ECA4AC", Offset = "0x1ECA4AC", VA = "0x1ECA4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2E0", Offset = "0x105A2E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public float lastGroundedTime
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0x1ECA4B8", Offset = "0x1ECA4B8", VA = "0x1ECA4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A2F0", Offset = "0x105A2F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600073C")]
			[Address(RVA = "0x1ECA4C0", Offset = "0x1ECA4C0", VA = "0x1ECA4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A300", Offset = "0x105A300")]
			private set
			{
			}
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1ECA4C8", Offset = "0x1ECA4C8", VA = "0x1ECA4C8")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1ECA79C", Offset = "0x1ECA79C", VA = "0x1ECA79C")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1ECA83C", Offset = "0x1ECA83C", VA = "0x1ECA83C")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1ECAB54", Offset = "0x1ECAB54", VA = "0x1ECAB54")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1ECAC7C", Offset = "0x1ECAC7C", VA = "0x1ECAC7C")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1ECB0FC", Offset = "0x1ECB0FC", VA = "0x1ECB0FC")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1ECB8B8", Offset = "0x1ECB8B8", VA = "0x1ECB8B8")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1ECA9B4", Offset = "0x1ECA9B4", VA = "0x1ECA9B4")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1ECB490", Offset = "0x1ECB490", VA = "0x1ECB490")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1ECAD98", Offset = "0x1ECAD98", VA = "0x1ECAD98")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1ECB678", Offset = "0x1ECB678", VA = "0x1ECB678")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1ECB928", Offset = "0x1ECB928", VA = "0x1ECB928")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1ECB4F4", Offset = "0x1ECB4F4", VA = "0x1ECB4F4")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1ECAF68", Offset = "0x1ECAF68", VA = "0x1ECAF68")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1ECBAE0", Offset = "0x1ECBAE0", VA = "0x1ECBAE0")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public class Booster
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053A8C", Offset = "0x1053A8C")]
		public bool fullBody;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053AC4", Offset = "0x1053AC4")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053AFC", Offset = "0x1053AFC")]
		public Muscle.Group[] groups;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053B34", Offset = "0x1053B34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1053B34", Offset = "0x1053B34")]
		public float immunity;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053B88", Offset = "0x1053B88")]
		public float impulseMlp;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053BC0", Offset = "0x1053BC0")]
		public float boostParents;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053BF8", Offset = "0x1053BF8")]
		public float boostChildren;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1053C30", Offset = "0x1053C30")]
		public float delay;

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1F30E34", Offset = "0x1F30E34", VA = "0x1F30E34")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1F3104C", Offset = "0x1F3104C", VA = "0x1F3104C")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1F31134", Offset = "0x1F31134", VA = "0x1F31134")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1F31F30", Offset = "0x1F31F30", VA = "0x1F31F30")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x2000261")]
		public enum Group
		{
			[Token(Token = "0x4000BAD")]
			Hips,
			[Token(Token = "0x4000BAE")]
			Spine,
			[Token(Token = "0x4000BAF")]
			Head,
			[Token(Token = "0x4000BB0")]
			Arm,
			[Token(Token = "0x4000BB1")]
			Hand,
			[Token(Token = "0x4000BB2")]
			Leg,
			[Token(Token = "0x4000BB3")]
			Foot,
			[Token(Token = "0x4000BB4")]
			Tail,
			[Token(Token = "0x4000BB5")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x2000262")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10589A4", Offset = "0x10589A4")]
			public bool ignoreAll;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10589DC", Offset = "0x10589DC")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058A14", Offset = "0x1058A14")]
			public Group[] groups;

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x1F37F04", Offset = "0x1F37F04", VA = "0x1F37F04")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000263")]
		public class Props
		{
			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058A4C", Offset = "0x1058A4C")]
			public Group group;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058A84", Offset = "0x1058A84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058A84", Offset = "0x1058A84")]
			public float mappingWeight;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058AD8", Offset = "0x1058AD8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058AD8", Offset = "0x1058AD8")]
			public float pinWeight;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058B2C", Offset = "0x1058B2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058B2C", Offset = "0x1058B2C")]
			public float muscleWeight;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058B80", Offset = "0x1058B80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058B80", Offset = "0x1058B80")]
			public float muscleDamper;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058BD4", Offset = "0x1058BD4")]
			public bool mapPosition;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058C0C", Offset = "0x1058C0C")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058C44", Offset = "0x1058C44")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x1F37E68", Offset = "0x1F37E68", VA = "0x1F37E68")]
			public Props()
			{
			}

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x1F37F7C", Offset = "0x1F37F7C", VA = "0x1F37F7C")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x1F365B4", Offset = "0x1F365B4", VA = "0x1F365B4")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000264")]
		public struct State
		{
			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x170000EC")]
			public static State Default
			{
				[Token(Token = "0x6000E86")]
				[Address(RVA = "0x1F33138", Offset = "0x1F33138", VA = "0x1F33138")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x1286C5C", Offset = "0x1286C5C", VA = "0x1286C5C")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000265")]
		public class TargetChild
		{
			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x1F34DE4", Offset = "0x1F34DE4", VA = "0x1F34DE4")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x1F37538", Offset = "0x1F37538", VA = "0x1F37538")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Props props;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053D58", Offset = "0x1053D58")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053D68", Offset = "0x1053D68")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053D78", Offset = "0x1053D78")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053D88", Offset = "0x1053D88")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053D98", Offset = "0x1053D98")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053DA8", Offset = "0x1053DA8")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053DB8", Offset = "0x1053DB8")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		public Transform additionalPinTarget;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		public float additionalPinWeight;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		public int index;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053ED8", Offset = "0x1053ED8")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053EE8", Offset = "0x1053EE8")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053EF8", Offset = "0x1053EF8")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053F08", Offset = "0x1053F08")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053F18", Offset = "0x1053F18")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053F28", Offset = "0x1053F28")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rebuildParent;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private JointDrive slerpDrive;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastRotationDamper;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion toParentSpace;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Transform targetParent;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool directTargetParent;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool initiated;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Collider[] _colliders;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float lastReadTime;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float lastWriteTime;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool[] disabledColliders;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x1700006A")]
		public Transform transform
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0x1F32CC8", Offset = "0x1F32CC8", VA = "0x1F32CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A310", Offset = "0x105A310")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000751")]
			[Address(RVA = "0x1F32CD0", Offset = "0x1F32CD0", VA = "0x1F32CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A320", Offset = "0x105A320")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x1F32CD8", Offset = "0x1F32CD8", VA = "0x1F32CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A330", Offset = "0x105A330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x1F32CE0", Offset = "0x1F32CE0", VA = "0x1F32CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A340", Offset = "0x105A340")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x1F32CE8", Offset = "0x1F32CE8", VA = "0x1F32CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A350", Offset = "0x105A350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x1F32CF0", Offset = "0x1F32CF0", VA = "0x1F32CF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A360", Offset = "0x105A360")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x1F32CF8", Offset = "0x1F32CF8", VA = "0x1F32CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A370", Offset = "0x105A370")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x1F32D04", Offset = "0x1F32D04", VA = "0x1F32D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A380", Offset = "0x105A380")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x1F32D10", Offset = "0x1F32D10", VA = "0x1F32D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A390", Offset = "0x105A390")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x1F32D1C", Offset = "0x1F32D1C", VA = "0x1F32D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3A0", Offset = "0x105A3A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public Collider[] colliders
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x1F32D28", Offset = "0x1F32D28", VA = "0x1F32D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600075B")]
			[Address(RVA = "0x1F32D30", Offset = "0x1F32D30", VA = "0x1F32D30")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x1F32D38", Offset = "0x1F32D38", VA = "0x1F32D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3B0", Offset = "0x105A3B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x1F32D44", Offset = "0x1F32D44", VA = "0x1F32D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3C0", Offset = "0x105A3C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x1F32D50", Offset = "0x1F32D50", VA = "0x1F32D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3D0", Offset = "0x105A3D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x1F32D58", Offset = "0x1F32D58", VA = "0x1F32D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3E0", Offset = "0x105A3E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x1F32D60", Offset = "0x1F32D60", VA = "0x1F32D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A3F0", Offset = "0x105A3F0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x1F32D74", Offset = "0x1F32D74", VA = "0x1F32D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A400", Offset = "0x105A400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x1F32F6C", Offset = "0x1F32F6C", VA = "0x1F32F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A410", Offset = "0x105A410")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000764")]
			[Address(RVA = "0x1F32F74", Offset = "0x1F32F74", VA = "0x1F32F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A420", Offset = "0x105A420")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x1F32F7C", Offset = "0x1F32F7C", VA = "0x1F32F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A430", Offset = "0x105A430")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000766")]
			[Address(RVA = "0x1F32F84", Offset = "0x1F32F84", VA = "0x1F32F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A440", Offset = "0x105A440")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0x1F32F8C", Offset = "0x1F32F8C", VA = "0x1F32F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A450", Offset = "0x105A450")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x1F32F9C", Offset = "0x1F32F9C", VA = "0x1F32F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A460", Offset = "0x105A460")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x1F32FAC", Offset = "0x1F32FAC", VA = "0x1F32FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A470", Offset = "0x105A470")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x1F32FC0", Offset = "0x1F32FC0", VA = "0x1F32FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A480", Offset = "0x105A480")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x1F32FD4", Offset = "0x1F32FD4", VA = "0x1F32FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A490", Offset = "0x105A490")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600076C")]
			[Address(RVA = "0x1F32FE8", Offset = "0x1F32FE8", VA = "0x1F32FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4A0", Offset = "0x105A4A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		private Quaternion localRotation
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x1F34678", Offset = "0x1F34678", VA = "0x1F34678")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000079")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x1F34818", Offset = "0x1F34818", VA = "0x1F34818")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700007A")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1F34760", Offset = "0x1F34760", VA = "0x1F34760")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700007B")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x1F34968", Offset = "0x1F34968", VA = "0x1F34968")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1F32D88", Offset = "0x1F32D88", VA = "0x1F32D88")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1F32FFC", Offset = "0x1F32FFC", VA = "0x1F32FFC")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1F33158", Offset = "0x1F33158", VA = "0x1F33158", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1F342E0", Offset = "0x1F342E0", VA = "0x1F342E0")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1F34500", Offset = "0x1F34500", VA = "0x1F34500")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1F351F4", Offset = "0x1F351F4", VA = "0x1F351F4")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1F352FC", Offset = "0x1F352FC", VA = "0x1F352FC")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1F34EA0", Offset = "0x1F34EA0", VA = "0x1F34EA0")]
		private void AddColliders(Transform t, ref Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1F350EC", Offset = "0x1F350EC", VA = "0x1F350EC")]
		private void AddCompoundColliders(Transform t, ref Collider[] colliders)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1F353A8", Offset = "0x1F353A8", VA = "0x1F353A8")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1F35580", Offset = "0x1F35580", VA = "0x1F35580")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1F35780", Offset = "0x1F35780", VA = "0x1F35780")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1F359EC", Offset = "0x1F359EC", VA = "0x1F359EC")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1F35A8C", Offset = "0x1F35A8C", VA = "0x1F35A8C")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1F35AF8", Offset = "0x1F35AF8", VA = "0x1F35AF8")]
		public void Reset()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1F35D24", Offset = "0x1F35D24", VA = "0x1F35D24")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1F3442C", Offset = "0x1F3442C", VA = "0x1F3442C")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1F34A88", Offset = "0x1F34A88", VA = "0x1F34A88")]
		public void Read()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1F35F48", Offset = "0x1F35F48", VA = "0x1F35F48")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1F360F4", Offset = "0x1F360F4", VA = "0x1F360F4")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1F36494", Offset = "0x1F36494", VA = "0x1F36494", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1F36D38", Offset = "0x1F36D38", VA = "0x1F36D38")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1F36D74", Offset = "0x1F36D74", VA = "0x1F36D74")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1F36DB4", Offset = "0x1F36DB4", VA = "0x1F36DB4")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1F371B8", Offset = "0x1F371B8", VA = "0x1F371B8")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1F371E4", Offset = "0x1F371E4", VA = "0x1F371E4")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1F373BC", Offset = "0x1F373BC", VA = "0x1F373BC")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1F36780", Offset = "0x1F36780", VA = "0x1F36780")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1F37584", Offset = "0x1F37584", VA = "0x1F37584")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1F36B54", Offset = "0x1F36B54", VA = "0x1F36B54")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1F37B18", Offset = "0x1F37B18", VA = "0x1F37B18")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1F37A24", Offset = "0x1F37A24", VA = "0x1F37A24")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1F36374", Offset = "0x1F36374", VA = "0x1F36374")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1F37CA8", Offset = "0x1F37CA8", VA = "0x1F37CA8")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public struct MuscleCollision
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStay;

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1286CA0", Offset = "0x1286CA0", VA = "0x1286CA0")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public struct MuscleHit
	{
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1286CB4", Offset = "0x1286CB4", VA = "0x1286CB4")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BBB8", Offset = "0x104BBB8")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x4000619")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x400061A")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x400061B")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1F3805C", Offset = "0x1F3805C", VA = "0x1F3805C")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1F38160", Offset = "0x1F38160", VA = "0x1F38160")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1F38344", Offset = "0x1F38344", VA = "0x1F38344")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1F385B8", Offset = "0x1F385B8", VA = "0x1F385B8")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public static class PhysXTools
	{
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1F385C0", Offset = "0x1F385C0", VA = "0x1F385C0")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1F3865C", Offset = "0x1F3865C", VA = "0x1F3865C")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1F3875C", Offset = "0x1F3875C", VA = "0x1F3875C")]
		public static void Predict(ref Vector3 position, ref Quaternion rotation, ref Vector3 velocity, ref Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1F38A4C", Offset = "0x1F38A4C", VA = "0x1F38A4C")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1F38C88", Offset = "0x1F38C88", VA = "0x1F38C88")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1F38E80", Offset = "0x1F38E80", VA = "0x1F38E80")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1F39078", Offset = "0x1F39078", VA = "0x1F39078")]
		public static void DivByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1F391B8", Offset = "0x1F391B8", VA = "0x1F391B8")]
		public static void ScaleByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1F392F4", Offset = "0x1F392F4", VA = "0x1F392F4")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1F37798", Offset = "0x1F37798", VA = "0x1F37798")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1F39458", Offset = "0x1F39458", VA = "0x1F39458")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1F39708", Offset = "0x1F39708", VA = "0x1F39708")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1F399BC", Offset = "0x1F399BC", VA = "0x1F399BC")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1F39C28", Offset = "0x1F39C28", VA = "0x1F39C28")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1F39CFC", Offset = "0x1F39CFC", VA = "0x1F39CFC")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1F34614", Offset = "0x1F34614", VA = "0x1F34614")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1F39178", Offset = "0x1F39178", VA = "0x1F39178")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000C3")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool visualize;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layers;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053FE8", Offset = "0x1053FE8")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1053FF8", Offset = "0x1053FF8")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054008", Offset = "0x1054008")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054018", Offset = "0x1054018")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool fixedFrame;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 P;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int count;

		[Token(Token = "0x1700007C")]
		public Vector3 center
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x1F39E4C", Offset = "0x1F39E4C", VA = "0x1F39E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4B0", Offset = "0x105A4B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x1F39E58", Offset = "0x1F39E58", VA = "0x1F39E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4C0", Offset = "0x105A4C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public bool inContact
		{
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x1F39E64", Offset = "0x1F39E64", VA = "0x1F39E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4D0", Offset = "0x105A4D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x1F39E6C", Offset = "0x1F39E6C", VA = "0x1F39E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4E0", Offset = "0x105A4E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Vector3 bottom
		{
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0x1F39E78", Offset = "0x1F39E78", VA = "0x1F39E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A4F0", Offset = "0x105A4F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x1F39E84", Offset = "0x1F39E84", VA = "0x1F39E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A500", Offset = "0x105A500")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Rigidbody r
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x1F39E90", Offset = "0x1F39E90", VA = "0x1F39E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A510", Offset = "0x105A510")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x1F39E98", Offset = "0x1F39E98", VA = "0x1F39E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A520", Offset = "0x105A520")]
			private set
			{
			}
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1F39EA0", Offset = "0x1F39EA0", VA = "0x1F39EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1F39F1C", Offset = "0x1F39F1C", VA = "0x1F39F1C")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1F3A13C", Offset = "0x1F3A13C", VA = "0x1F3A13C")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1F3A140", Offset = "0x1F3A140", VA = "0x1F3A140")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1F3A148", Offset = "0x1F3A148", VA = "0x1F3A148")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1F3A1DC", Offset = "0x1F3A1DC", VA = "0x1F3A1DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1F39F20", Offset = "0x1F39F20", VA = "0x1F39F20")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1F3A28C", Offset = "0x1F3A28C", VA = "0x1F3A28C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1F3A2B0", Offset = "0x1F3A2B0", VA = "0x1F3A2B0")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054028", Offset = "0x1054028")]
		public int propType;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054060", Offset = "0x1054060")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054060", Offset = "0x1054060")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10540C0", Offset = "0x10540C0")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10540F8", Offset = "0x10540F8")]
		public bool forceLayers;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054130", Offset = "0x1054130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054130", Offset = "0x1054130")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054190", Offset = "0x1054190")]
		public Transform additionalPinTarget;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10541C8", Offset = "0x10541C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10541C8", Offset = "0x10541C8")]
		public float additionalPinWeight;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x105421C", Offset = "0x105421C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105421C", Offset = "0x105421C")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105427C", Offset = "0x105427C")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10542B4", Offset = "0x10542B4")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10542C4", Offset = "0x10542C4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] colliders;

		[Token(Token = "0x17000080")]
		public bool isPickedUp
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x1F3A2B8", Offset = "0x1F3A2B8", VA = "0x1F3A2B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public PropRoot propRoot
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x1F3A328", Offset = "0x1F3A328", VA = "0x1F3A328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A530", Offset = "0x105A530")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x1F3A330", Offset = "0x1F3A330", VA = "0x1F3A330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A540", Offset = "0x105A540")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public bool initiated
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x1F3A5FC", Offset = "0x1F3A5FC", VA = "0x1F3A5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A550", Offset = "0x105A550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x1F3A604", Offset = "0x1F3A604", VA = "0x1F3A604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A560", Offset = "0x105A560")]
			private set
			{
			}
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1F3A338", Offset = "0x1F3A338", VA = "0x1F3A338")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1F3A5C0", Offset = "0x1F3A5C0", VA = "0x1F3A5C0")]
		public void Drop()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1F3A5F4", Offset = "0x1F3A5F4", VA = "0x1F3A5F4")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1F3A610", Offset = "0x1F3A610", VA = "0x1F3A610", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1F3A614", Offset = "0x1F3A614", VA = "0x1F3A614", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1F3A618", Offset = "0x1F3A618", VA = "0x1F3A618", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1F3A61C", Offset = "0x1F3A61C", VA = "0x1F3A61C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1F3A878", Offset = "0x1F3A878", VA = "0x1F3A878")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1F3A4E8", Offset = "0x1F3A4E8", VA = "0x1F3A4E8")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1F3A9C4", Offset = "0x1F3A9C4", VA = "0x1F3A9C4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1F3AB74", Offset = "0x1F3AB74", VA = "0x1F3AB74")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105430C", Offset = "0x105430C")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054344", Offset = "0x1054344")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054344", Offset = "0x1054344")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10543A4", Offset = "0x10543A4")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Muscle _muscle;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x17000083")]
		public Muscle muscle
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x1F3AC00", Offset = "0x1F3AC00", VA = "0x1F3AC00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0x1F3ACD4", Offset = "0x1F3ACD4", VA = "0x1F3ACD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A570", Offset = "0x105A570")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x1F3ACDC", Offset = "0x1F3ACDC", VA = "0x1F3ACDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A580", Offset = "0x105A580")]
			private set
			{
			}
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1F3ACE4", Offset = "0x1F3ACE4", VA = "0x1F3ACE4")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1F3B120", Offset = "0x1F3B120", VA = "0x1F3B120")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1F3B2A8", Offset = "0x1F3B2A8", VA = "0x1F3B2A8")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1F3B508", Offset = "0x1F3B508", VA = "0x1F3B508")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1F3B550", Offset = "0x1F3B550", VA = "0x1F3B550")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1F3C138", Offset = "0x1F3C138", VA = "0x1F3C138")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1F3C3F0", Offset = "0x1F3C3F0", VA = "0x1F3C3F0")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BBF0", Offset = "0x104BBF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BBF0", Offset = "0x104BBF0")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10543B4", Offset = "0x10543B4")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10543EC", Offset = "0x10543EC")]
		public Rigidbody connectTo;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054424", Offset = "0x1054424")]
		public Prop currentProp;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop lastProp;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1F3C4A8", Offset = "0x1F3C4A8", VA = "0x1F3C4A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A590", Offset = "0x105A590")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1F3C4F4", Offset = "0x1F3C4F4", VA = "0x1F3C4F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A5C8", Offset = "0x105A5C8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1F3C540", Offset = "0x1F3C540", VA = "0x1F3C540")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1F3C60C", Offset = "0x1F3C60C", VA = "0x1F3C60C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1F3C6E0", Offset = "0x1F3C6E0", VA = "0x1F3C6E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1F3C818", Offset = "0x1F3C818", VA = "0x1F3C818")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1F3CA30", Offset = "0x1F3CA30", VA = "0x1F3CA30")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1F3D5A8", Offset = "0x1F3D5A8", VA = "0x1F3D5A8")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BC50", Offset = "0x104BC50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BC50", Offset = "0x104BC50")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1F3D5B0", Offset = "0x1F3D5B0", VA = "0x1F3D5B0", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1F3D5B4", Offset = "0x1F3D5B4", VA = "0x1F3D5B4", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1F3D5B8", Offset = "0x1F3D5B8", VA = "0x1F3D5B8", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1F3D5BC", Offset = "0x1F3D5BC", VA = "0x1F3D5BC")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BCB0", Offset = "0x104BCB0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BCB0", Offset = "0x104BCB0")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000267")]
		public enum Mode
		{
			[Token(Token = "0x4000BD1")]
			Active,
			[Token(Token = "0x4000BD2")]
			Kinematic,
			[Token(Token = "0x4000BD3")]
			Disabled
		}

		[Token(Token = "0x2000268")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000269")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x200026A")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000BD5")]
			Normal,
			[Token(Token = "0x4000BD6")]
			AnimatePhysics,
			[Token(Token = "0x4000BD7")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x200026B")]
		public enum State
		{
			[Token(Token = "0x4000BD9")]
			Alive,
			[Token(Token = "0x4000BDA")]
			Dead,
			[Token(Token = "0x4000BDB")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x200026C")]
		public struct StateSettings
		{
			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058C7C", Offset = "0x1058C7C")]
			public float killDuration;

			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058CB4", Offset = "0x1058CB4")]
			public float deadMuscleWeight;

			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058CEC", Offset = "0x1058CEC")]
			public float deadMuscleDamper;

			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058D24", Offset = "0x1058D24")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058D5C", Offset = "0x1058D5C")]
			public bool freezePermanently;

			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058D94", Offset = "0x1058D94")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x4000BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058DCC", Offset = "0x1058DCC")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x170000ED")]
			public static StateSettings Default
			{
				[Token(Token = "0x6000E97")]
				[Address(RVA = "0x1EC4F00", Offset = "0x1EC4F00", VA = "0x1EC4F00")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x1285834", Offset = "0x1285834", VA = "0x1285834")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051508", Offset = "0x1051508")]
		private sealed class <DisabledToActive>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E9B")]
				[Address(RVA = "0x1EC47AC", Offset = "0x1EC47AC", VA = "0x1EC47AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0x1EC4814", Offset = "0x1EC4814", VA = "0x1EC4814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x1EC44DC", Offset = "0x1EC44DC", VA = "0x1EC44DC")]
			[DebuggerHidden]
			public <DisabledToActive>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1EC4508", Offset = "0x1EC4508", VA = "0x1EC4508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x1EC450C", Offset = "0x1EC450C", VA = "0x1EC450C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x1EC47B4", Offset = "0x1EC47B4", VA = "0x1EC47B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051518", Offset = "0x1051518")]
		private sealed class <KinematicToActive>d__179 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EA1")]
				[Address(RVA = "0x1EC4A74", Offset = "0x1EC4A74", VA = "0x1EC4A74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA3")]
				[Address(RVA = "0x1EC4ADC", Offset = "0x1EC4ADC", VA = "0x1EC4ADC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x1EC481C", Offset = "0x1EC481C", VA = "0x1EC481C")]
			[DebuggerHidden]
			public <KinematicToActive>d__179(int <>1__state)
			{
			}

			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1EC4848", Offset = "0x1EC4848", VA = "0x1EC4848", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x1EC484C", Offset = "0x1EC484C", VA = "0x1EC484C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1EC4A7C", Offset = "0x1EC4A7C", VA = "0x1EC4A7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051528", Offset = "0x1051528")]
		private sealed class <ActiveToDisabled>d__180 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EA7")]
				[Address(RVA = "0x1EC3BC0", Offset = "0x1EC3BC0", VA = "0x1EC3BC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA9")]
				[Address(RVA = "0x1EC3C28", Offset = "0x1EC3C28", VA = "0x1EC3C28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1EC3A08", Offset = "0x1EC3A08", VA = "0x1EC3A08")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__180(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x1EC3A34", Offset = "0x1EC3A34", VA = "0x1EC3A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x1EC3A38", Offset = "0x1EC3A38", VA = "0x1EC3A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1EC3BC8", Offset = "0x1EC3BC8", VA = "0x1EC3BC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051538", Offset = "0x1051538")]
		private sealed class <ActiveToKinematic>d__181 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAD")]
				[Address(RVA = "0x1EC3E20", Offset = "0x1EC3E20", VA = "0x1EC3E20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EAF")]
				[Address(RVA = "0x1EC3E88", Offset = "0x1EC3E88", VA = "0x1EC3E88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x1EC3C30", Offset = "0x1EC3C30", VA = "0x1EC3C30")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__181(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x1EC3C5C", Offset = "0x1EC3C5C", VA = "0x1EC3C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1EC3C60", Offset = "0x1EC3C60", VA = "0x1EC3C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x1EC3E28", Offset = "0x1EC3E28", VA = "0x1EC3E28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051548", Offset = "0x1051548")]
		private sealed class <AliveToDead>d__232 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool freeze;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <range>5__2;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <mW>5__3;

			[Token(Token = "0x170000F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EB3")]
				[Address(RVA = "0x1EC446C", Offset = "0x1EC446C", VA = "0x1EC446C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB5")]
				[Address(RVA = "0x1EC44D4", Offset = "0x1EC44D4", VA = "0x1EC44D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x1EC3E90", Offset = "0x1EC3E90", VA = "0x1EC3E90")]
			[DebuggerHidden]
			public <AliveToDead>d__232(int <>1__state)
			{
			}

			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x1EC3EBC", Offset = "0x1EC3EBC", VA = "0x1EC3EBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x1EC3EC0", Offset = "0x1EC3EC0", VA = "0x1EC3EC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x1EC4474", Offset = "0x1EC4474", VA = "0x1EC4474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105445C", Offset = "0x105445C")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetRoot;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054494", Offset = "0x1054494")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054494", Offset = "0x1054494")]
		public State state;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x10544F4", Offset = "0x10544F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10544F4", Offset = "0x10544F4")]
		public StateSettings stateSettings;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054570", Offset = "0x1054570")]
		public Mode mode;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10545A8", Offset = "0x10545A8")]
		public float blendTime;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10545E0", Offset = "0x10545E0")]
		public bool fixTargetTransforms;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054618", Offset = "0x1054618")]
		public int solverIterationCount;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054650", Offset = "0x1054650")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054688", Offset = "0x1054688")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054688", Offset = "0x1054688")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054688", Offset = "0x1054688")]
		public float mappingWeight;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054700", Offset = "0x1054700")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054700", Offset = "0x1054700")]
		public float pinWeight;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054754", Offset = "0x1054754")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054754", Offset = "0x1054754")]
		public float muscleWeight;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x10547A8", Offset = "0x10547A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10547A8", Offset = "0x10547A8")]
		public float muscleSpring;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054808", Offset = "0x1054808")]
		public float muscleDamper;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054840", Offset = "0x1054840")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054840", Offset = "0x1054840")]
		public float pinPow;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054894", Offset = "0x1054894")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054894", Offset = "0x1054894")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10548EC", Offset = "0x10548EC")]
		public bool angularPinning;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054924", Offset = "0x1054924")]
		public bool updateJointAnchors;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105495C", Offset = "0x105495C")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054994", Offset = "0x1054994")]
		public bool angularLimits;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10549CC", Offset = "0x10549CC")]
		public bool internalCollisions;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054A04", Offset = "0x1054A04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054A04", Offset = "0x1054A04")]
		public Muscle[] muscles;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Animator _targetAnimator;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054A9C", Offset = "0x1054A9C")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054AAC", Offset = "0x1054AAC")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054ABC", Offset = "0x1054ABC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		[SerializeField]
		[HideInInspector]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool fixedFrame;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int lastSolverIterationCount;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isLegacy;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool animatorDisabled;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool awakeFailed;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		private bool interpolated;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool freezeFlag;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool hasBeenDisabled;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool teleport;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 teleportPosition;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion teleportRotation;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool rebuildFlag;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int postSimulateOptimization;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int optimizationStep;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int fixedUpdateOptimizer;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool readInFixedUpdate;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int lateUpdateMuscleOptimization;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054B34", Offset = "0x1054B34")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Mode activeMode;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Mode lastMode;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float mappingBlend;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054B44", Offset = "0x1054B44")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private State activeState;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private State lastState;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private bool targetMappedStateStored;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
		private bool hasProp;

		[Token(Token = "0x17000085")]
		public Animator targetAnimator
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x1F3D7C8", Offset = "0x1F3D7C8", VA = "0x1F3D7C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x1F3D910", Offset = "0x1F3D910", VA = "0x1F3D910")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public Animation targetAnimation
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x1F3D918", Offset = "0x1F3D918", VA = "0x1F3D918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A750", Offset = "0x105A750")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x1F3D920", Offset = "0x1F3D920", VA = "0x1F3D920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A760", Offset = "0x105A760")]
			private set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0x1F3D928", Offset = "0x1F3D928", VA = "0x1F3D928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A770", Offset = "0x105A770")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x1F3D930", Offset = "0x1F3D930", VA = "0x1F3D930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A780", Offset = "0x105A780")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool isActive
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x1F3D938", Offset = "0x1F3D938", VA = "0x1F3D938")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public bool initiated
		{
			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x1F3D9CC", Offset = "0x1F3D9CC", VA = "0x1F3D9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A790", Offset = "0x105A790")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x1F3D9D4", Offset = "0x1F3D9D4", VA = "0x1F3D9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A7A0", Offset = "0x105A7A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0x1F3D9E0", Offset = "0x1F3D9E0", VA = "0x1F3D9E0")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x1700008B")]
		public bool controlsAnimator
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x1F3DB1C", Offset = "0x1F3DB1C", VA = "0x1F3DB1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public bool isBlending
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x1F3D9A8", Offset = "0x1F3D9A8", VA = "0x1F3D9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		private bool autoSimulate
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x1F3E5D4", Offset = "0x1F3E5D4", VA = "0x1F3E5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x1F3DA20", Offset = "0x1F3DA20", VA = "0x1F3DA20")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x1F457DC", Offset = "0x1F457DC", VA = "0x1F457DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A890", Offset = "0x105A890")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x1F457E4", Offset = "0x1F457E4", VA = "0x1F457E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105A8A0", Offset = "0x105A8A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool isSwitchingState
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x1F3DB7C", Offset = "0x1F3DB7C", VA = "0x1F3DB7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public bool isKilling
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x1F48DF4", Offset = "0x1F48DF4", VA = "0x1F48DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AA40", Offset = "0x105AA40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x1F48DFC", Offset = "0x1F48DFC", VA = "0x1F48DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AA50", Offset = "0x105AA50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public bool isAlive
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0x1F42BD0", Offset = "0x1F42BD0", VA = "0x1F42BD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public bool isFrozen
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x1F417D8", Offset = "0x1F417D8", VA = "0x1F417D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1F3D5C0", Offset = "0x1F3D5C0", VA = "0x1F3D5C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A600", Offset = "0x105A600")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1F3D60C", Offset = "0x1F3D60C", VA = "0x1F3D60C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A638", Offset = "0x105A638")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1F3D658", Offset = "0x1F3D658", VA = "0x1F3D658")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A670", Offset = "0x105A670")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1F3D6A4", Offset = "0x1F3D6A4", VA = "0x1F3D6A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A6A8", Offset = "0x105A6A8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1F3D6F0", Offset = "0x1F3D6F0", VA = "0x1F3D6F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A6E0", Offset = "0x105A6E0")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1F3D73C", Offset = "0x1F3D73C", VA = "0x1F3D73C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A718", Offset = "0x105A718")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1F3D788", Offset = "0x1F3D788", VA = "0x1F3D788")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1F3DB90", Offset = "0x1F3DB90", VA = "0x1F3DB90")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1F3E46C", Offset = "0x1F3E46C", VA = "0x1F3E46C")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1F3E550", Offset = "0x1F3E550", VA = "0x1F3E550")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1F3E5DC", Offset = "0x1F3E5DC", VA = "0x1F3E5DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1F3E684", Offset = "0x1F3E684", VA = "0x1F3E684")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1F3EE00", Offset = "0x1F3EE00", VA = "0x1F3EE00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1F3F824", Offset = "0x1F3F824", VA = "0x1F3F824")]
		public void Start()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1F3F8CC", Offset = "0x1F3F8CC", VA = "0x1F3F8CC")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1F3EE44", Offset = "0x1F3EE44", VA = "0x1F3EE44")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1F40A20", Offset = "0x1F40A20", VA = "0x1F40A20")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1F40B1C", Offset = "0x1F40B1C", VA = "0x1F40B1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1F40C10", Offset = "0x1F40C10", VA = "0x1F40C10")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1F40C9C", Offset = "0x1F40C9C", VA = "0x1F40C9C")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1F40FCC", Offset = "0x1F40FCC", VA = "0x1F40FCC")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1F418CC", Offset = "0x1F418CC", VA = "0x1F418CC")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1F42084", Offset = "0x1F42084", VA = "0x1F42084", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1F42634", Offset = "0x1F42634", VA = "0x1F42634", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1F42718", Offset = "0x1F42718", VA = "0x1F42718", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1F4289C", Offset = "0x1F4289C", VA = "0x1F4289C", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1F41C68", Offset = "0x1F41C68", VA = "0x1F41C68")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1F3DBD0", Offset = "0x1F3DBD0", VA = "0x1F3DBD0")]
		private void Read()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1F41648", Offset = "0x1F41648", VA = "0x1F41648")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1F42BE0", Offset = "0x1F42BE0", VA = "0x1F42BE0")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1F42E88", Offset = "0x1F42E88", VA = "0x1F42E88")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1F40934", Offset = "0x1F40934", VA = "0x1F40934")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1F417E8", Offset = "0x1F417E8", VA = "0x1F417E8")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1F431B8", Offset = "0x1F431B8", VA = "0x1F431B8")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1F430E4", Offset = "0x1F430E4", VA = "0x1F430E4")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1F43268", Offset = "0x1F43268", VA = "0x1F43268")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1F43008", Offset = "0x1F43008", VA = "0x1F43008")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1F432F4", Offset = "0x1F432F4", VA = "0x1F432F4")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1F40950", Offset = "0x1F40950", VA = "0x1F40950")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1F41820", Offset = "0x1F41820", VA = "0x1F41820")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1F43390", Offset = "0x1F43390", VA = "0x1F43390")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1F3BAF0", Offset = "0x1F3BAF0", VA = "0x1F3BAF0")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1F3BB2C", Offset = "0x1F3BB2C", VA = "0x1F3BB2C")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1F3B3A4", Offset = "0x1F3B3A4", VA = "0x1F3B3A4")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1F3BF20", Offset = "0x1F3BF20", VA = "0x1F3BF20")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1F3CC6C", Offset = "0x1F3CC6C", VA = "0x1F3CC6C")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1F43E84", Offset = "0x1F43E84", VA = "0x1F43E84")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1F311B4", Offset = "0x1F311B4", VA = "0x1F311B4")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1F441EC", Offset = "0x1F441EC", VA = "0x1F441EC")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1F4428C", Offset = "0x1F4428C", VA = "0x1F4428C")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1F4432C", Offset = "0x1F4432C", VA = "0x1F4432C")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1F443CC", Offset = "0x1F443CC", VA = "0x1F443CC")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1F4446C", Offset = "0x1F4446C", VA = "0x1F4446C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A7B0", Offset = "0x105A7B0")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1F4457C", Offset = "0x1F4457C", VA = "0x1F4457C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A7E8", Offset = "0x105A7E8")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1F446F0", Offset = "0x1F446F0", VA = "0x1F446F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A820", Offset = "0x105A820")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1F4482C", Offset = "0x1F4482C", VA = "0x1F4482C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105A858", Offset = "0x105A858")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1F40824", Offset = "0x1F40824", VA = "0x1F40824")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1F43A30", Offset = "0x1F43A30", VA = "0x1F43A30")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1F414A4", Offset = "0x1F414A4", VA = "0x1F414A4")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1F415A0", Offset = "0x1F415A0", VA = "0x1F415A0")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1F449A0", Offset = "0x1F449A0", VA = "0x1F449A0")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1F44DE4", Offset = "0x1F44DE4", VA = "0x1F44DE4")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1F44C64", Offset = "0x1F44C64", VA = "0x1F44C64")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1F45274", Offset = "0x1F45274", VA = "0x1F45274")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1F4564C", Offset = "0x1F4564C", VA = "0x1F4564C")]
		private void AddIndexesRecursive(int index, ref int[] indexes)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1F4405C", Offset = "0x1F4405C", VA = "0x1F4405C")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1F44124", Offset = "0x1F44124", VA = "0x1F44124")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1F457BC", Offset = "0x1F457BC", VA = "0x1F457BC")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1F457C4", Offset = "0x1F457C4", VA = "0x1F457C4")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1F457D0", Offset = "0x1F457D0", VA = "0x1F457D0")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1F457F0", Offset = "0x1F457F0", VA = "0x1F457F0")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1F45890", Offset = "0x1F45890", VA = "0x1F45890", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1F459F4", Offset = "0x1F459F4", VA = "0x1F459F4")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1F45B48", Offset = "0x1F45B48", VA = "0x1F45B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A8B0", Offset = "0x105A8B0")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1F45BB8", Offset = "0x1F45BB8", VA = "0x1F45BB8")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1F45C5C", Offset = "0x1F45C5C", VA = "0x1F45C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A914", Offset = "0x105A914")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1F45CCC", Offset = "0x1F45CCC", VA = "0x1F45CCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A978", Offset = "0x105A978")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1F45D3C", Offset = "0x1F45D3C", VA = "0x1F45D3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105A9DC", Offset = "0x105A9DC")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1F45DAC", Offset = "0x1F45DAC", VA = "0x1F45DAC")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1F45E7C", Offset = "0x1F45E7C", VA = "0x1F45E7C")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1F462B0", Offset = "0x1F462B0", VA = "0x1F462B0")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1F46564", Offset = "0x1F46564", VA = "0x1F46564")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1F46698", Offset = "0x1F46698", VA = "0x1F46698")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1F46784", Offset = "0x1F46784", VA = "0x1F46784")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1F460DC", Offset = "0x1F460DC", VA = "0x1F460DC")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1F4680C", Offset = "0x1F4680C", VA = "0x1F4680C")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1F43B50", Offset = "0x1F43B50", VA = "0x1F43B50")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1F3AC78", Offset = "0x1F3AC78", VA = "0x1F3AC78")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1F40EDC", Offset = "0x1F40EDC", VA = "0x1F40EDC")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1F46338", Offset = "0x1F46338", VA = "0x1F46338")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x1F45F04", Offset = "0x1F45F04", VA = "0x1F45F04")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1F46868", Offset = "0x1F46868", VA = "0x1F46868")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1F43E90", Offset = "0x1F43E90", VA = "0x1F43E90")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1F46A40", Offset = "0x1F46A40", VA = "0x1F46A40")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1F47608", Offset = "0x1F47608", VA = "0x1F47608")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1F46B34", Offset = "0x1F46B34", VA = "0x1F46B34")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1F47768", Offset = "0x1F47768", VA = "0x1F47768")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1F47F64", Offset = "0x1F47F64", VA = "0x1F47F64")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1F4894C", Offset = "0x1F4894C", VA = "0x1F4894C")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1F47B90", Offset = "0x1F47B90", VA = "0x1F47B90")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1F48638", Offset = "0x1F48638", VA = "0x1F48638")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1F48E08", Offset = "0x1F48E08", VA = "0x1F48E08")]
		public void Kill()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1F48E14", Offset = "0x1F48E14", VA = "0x1F48E14")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1F48E30", Offset = "0x1F48E30", VA = "0x1F48E30")]
		public void Freeze()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1F48E3C", Offset = "0x1F48E3C", VA = "0x1F48E3C")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1F48E58", Offset = "0x1F48E58", VA = "0x1F48E58")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1F48E60", Offset = "0x1F48E60", VA = "0x1F48E60", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1F48F60", Offset = "0x1F48F60", VA = "0x1F48F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AA60", Offset = "0x105AA60")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1F41E00", Offset = "0x1F41E00", VA = "0x1F41E00")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1F48FE4", Offset = "0x1F48FE4", VA = "0x1F48FE4")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1F3EB20", Offset = "0x1F3EB20", VA = "0x1F3EB20")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1F490F4", Offset = "0x1F490F4", VA = "0x1F490F4")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1F49100", Offset = "0x1F49100", VA = "0x1F49100")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1F49320", Offset = "0x1F49320", VA = "0x1F49320")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1F3EC20", Offset = "0x1F3EC20", VA = "0x1F3EC20")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1F493F4", Offset = "0x1F493F4", VA = "0x1F493F4")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1F494B0", Offset = "0x1F494B0", VA = "0x1F494B0")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1F4957C", Offset = "0x1F4957C", VA = "0x1F4957C")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1F4096C", Offset = "0x1F4096C", VA = "0x1F4096C")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1F405A8", Offset = "0x1F405A8", VA = "0x1F405A8")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1F49DDC", Offset = "0x1F49DDC", VA = "0x1F49DDC")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1F49C70", Offset = "0x1F49C70", VA = "0x1F49C70")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1F4986C", Offset = "0x1F4986C", VA = "0x1F4986C")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1F49E54", Offset = "0x1F49E54", VA = "0x1F49E54")]
		private void AddToParentsRecursive(ConfigurableJoint joint, ref int[] indexes)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1F49FCC", Offset = "0x1F49FCC", VA = "0x1F49FCC")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, ref int[] indexes, ref bool[] childFlags)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1F49B64", Offset = "0x1F49B64", VA = "0x1F49B64")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1F4A2AC", Offset = "0x1F4A2AC", VA = "0x1F4A2AC")]
		private void AssignKinshipsDownRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1F4A410", Offset = "0x1F4A410", VA = "0x1F4A410")]
		private void AssignKinshipsUpRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1F4A1D0", Offset = "0x1F4A1D0", VA = "0x1F4A1D0")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1F3FC50", Offset = "0x1F3FC50", VA = "0x1F3FC50")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1F43BAC", Offset = "0x1F43BAC", VA = "0x1F43BAC")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1F43AC0", Offset = "0x1F43AC0", VA = "0x1F43AC0")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1F4A674", Offset = "0x1F4A674", VA = "0x1F4A674")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C9")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x40006A0")]
		Sever,
		[Token(Token = "0x40006A1")]
		Explode,
		[Token(Token = "0x40006A2")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x20000CA")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x40006A4")]
		Sever,
		[Token(Token = "0x40006A5")]
		Explode
	}
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x104BD10", Offset = "0x104BD10")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000272")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Muscle.Props props;

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x1EC54DC", Offset = "0x1EC54DC", VA = "0x1EC54DC")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054B64", Offset = "0x1054B64")]
		public PuppetMaster.State state;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendTime;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixTargetTransforms;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int solverIterationCount;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visualizeTargetPose;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054B9C", Offset = "0x1054B9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054B9C", Offset = "0x1054B9C")]
		public float mappingWeight;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054BF0", Offset = "0x1054BF0")]
		public float pinWeight;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054C08", Offset = "0x1054C08")]
		public float muscleWeight;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054C20", Offset = "0x1054C20")]
		public float muscleSpring;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float muscleDamper;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054C58", Offset = "0x1054C58")]
		public float pinPow;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054C70", Offset = "0x1054C70")]
		public float pinDistanceFalloff;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool angularPinning;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool updateJointAnchors;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool angularLimits;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool internalCollisions;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054C8C", Offset = "0x1054C8C")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1EC4F70", Offset = "0x1EC4F70", VA = "0x1EC4F70")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1EC52F4", Offset = "0x1EC52F4", VA = "0x1EC52F4")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1EC5428", Offset = "0x1EC5428", VA = "0x1EC5428")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054CC4", Offset = "0x1054CC4")]
		public Transform meshRoot;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054CFC", Offset = "0x1054CFC")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054D34", Offset = "0x1054D34")]
		public bool forceLayers;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054D6C", Offset = "0x1054D6C")]
		public float mass;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054DA4", Offset = "0x1054DA4")]
		public int propType;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054DDC", Offset = "0x1054DDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054DDC", Offset = "0x1054DDC")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1054E3C", Offset = "0x1054E3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054E3C", Offset = "0x1054E3C")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054E9C", Offset = "0x1054E9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1054E9C", Offset = "0x1054E9C")]
		public float additionalPinWeight;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1054EF0", Offset = "0x1054EF0")]
		public float additionalPinMass;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054F28", Offset = "0x1054F28")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054F38", Offset = "0x1054F38")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultLayer;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform defaultParent;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _mass;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _drag;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _angularDrag;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _useGravity;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _isKinematic;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] emptyColliders;

		[Token(Token = "0x17000094")]
		public bool isPickedUp
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x1EC54E4", Offset = "0x1EC54E4", VA = "0x1EC54E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AAC4", Offset = "0x105AAC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x1EC54EC", Offset = "0x1EC54EC", VA = "0x1EC54EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AAD4", Offset = "0x105AAD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000095")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x1EC55A8", Offset = "0x1EC55A8", VA = "0x1EC55A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AAE4", Offset = "0x105AAE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000883")]
			[Address(RVA = "0x1EC55B0", Offset = "0x1EC55B0", VA = "0x1EC55B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AAF4", Offset = "0x105AAF4")]
			private set
			{
			}
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1EC54F8", Offset = "0x1EC54F8", VA = "0x1EC54F8")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1EC55A0", Offset = "0x1EC55A0", VA = "0x1EC55A0", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1EC55A4", Offset = "0x1EC55A4", VA = "0x1EC55A4", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1EC55B8", Offset = "0x1EC55B8", VA = "0x1EC55B8")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1EC5B18", Offset = "0x1EC5B18", VA = "0x1EC5B18")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1EC6094", Offset = "0x1EC6094", VA = "0x1EC6094", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1EC61E0", Offset = "0x1EC61E0", VA = "0x1EC61E0", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1EC63F4", Offset = "0x1EC63F4", VA = "0x1EC63F4", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1EC59A8", Offset = "0x1EC59A8", VA = "0x1EC59A8")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1EC5F50", Offset = "0x1EC5F50", VA = "0x1EC5F50")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1EC64E0", Offset = "0x1EC64E0", VA = "0x1EC64E0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1EC664C", Offset = "0x1EC664C", VA = "0x1EC664C")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BD64", Offset = "0x104BD64")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x2000273")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x4000BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1058E3C", Offset = "0x1058E3C")]
			public int puppetsPerFrame;

			[Token(Token = "0x4000BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int index;

			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x1EC6D2C", Offset = "0x1EC6D2C", VA = "0x1EC6D2C")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x1EC6B98", Offset = "0x1EC6B98", VA = "0x1EC6B98")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x1EC6848", Offset = "0x1EC6848", VA = "0x1EC6848")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054F48", Offset = "0x1054F48")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool collisionStayMessages;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool collisionExitMessages;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054F80", Offset = "0x1054F80")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054F90", Offset = "0x1054F90")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1054FA0", Offset = "0x1054FA0")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x17000096")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x1EC66EC", Offset = "0x1EC66EC", VA = "0x1EC66EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB04", Offset = "0x105AB04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x1EC66F4", Offset = "0x1EC66F4", VA = "0x1EC66F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB14", Offset = "0x105AB14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x1EC66FC", Offset = "0x1EC66FC", VA = "0x1EC66FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB24", Offset = "0x105AB24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x1EC6704", Offset = "0x1EC6704", VA = "0x1EC6704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB34", Offset = "0x105AB34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x1EC670C", Offset = "0x1EC670C", VA = "0x1EC670C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB44", Offset = "0x105AB44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x1EC6714", Offset = "0x1EC6714", VA = "0x1EC6714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AB54", Offset = "0x105AB54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x1EC671C", Offset = "0x1EC671C", VA = "0x1EC671C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1EC6724", Offset = "0x1EC6724", VA = "0x1EC6724")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1EC67BC", Offset = "0x1EC67BC", VA = "0x1EC67BC")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1EC6824", Offset = "0x1EC6824", VA = "0x1EC6824")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1EC6960", Offset = "0x1EC6960", VA = "0x1EC6960")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1EC6984", Offset = "0x1EC6984", VA = "0x1EC6984")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1EC69A8", Offset = "0x1EC69A8", VA = "0x1EC69A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1EC6BB4", Offset = "0x1EC6BB4", VA = "0x1EC6BB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1EC6C24", Offset = "0x1EC6C24", VA = "0x1EC6C24")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1EC6D58", Offset = "0x1EC6D58", VA = "0x1EC6D58")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1EC73E0", Offset = "0x1EC73E0", VA = "0x1EC73E0")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1EC7CCC", Offset = "0x1EC7CCC", VA = "0x1EC7CCC")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1EC7D84", Offset = "0x1EC7D84", VA = "0x1EC7D84")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000CF")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x2000274")]
		public enum Mode
		{
			[Token(Token = "0x4000BFB")]
			Float,
			[Token(Token = "0x4000BFC")]
			Curve
		}

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float floatValue;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1ECBAF4", Offset = "0x1ECBAF4", VA = "0x1ECBAF4")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1ECBB60", Offset = "0x1ECBB60", VA = "0x1ECBB60")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1ECBBDC", Offset = "0x1ECBBDC", VA = "0x1ECBBDC")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000D0")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialVelocity;

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1F310C4", Offset = "0x1F310C4", VA = "0x1F310C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1F3112C", Offset = "0x1F3112C", VA = "0x1F3112C")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BD9C", Offset = "0x104BD9C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BD9C", Offset = "0x104BD9C")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x2000275")]
		public struct Options
		{
			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1058E58", Offset = "0x1058E58")]
			public bool spine;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1058E90", Offset = "0x1058E90")]
			public JointType joints;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1058EC8", Offset = "0x1058EC8")]
			public float colliderLengthOverlap;

			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x170000F8")]
			public static Options Default
			{
				[Token(Token = "0x6000EBA")]
				[Address(RVA = "0x1F2C890", Offset = "0x1F2C890", VA = "0x1F2C890")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBuild;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedRagdollReferences references;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Options options;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1F2C57C", Offset = "0x1F2C57C", VA = "0x1F2C57C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105AB64", Offset = "0x105AB64")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1F2C5C8", Offset = "0x1F2C5C8", VA = "0x1F2C5C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105AB9C", Offset = "0x105AB9C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1F2C614", Offset = "0x1F2C614", VA = "0x1F2C614")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105ABD4", Offset = "0x105ABD4")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1F2C660", Offset = "0x1F2C660", VA = "0x1F2C660")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1F2C99C", Offset = "0x1F2C99C", VA = "0x1F2C99C")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1F2D2B0", Offset = "0x1F2D2B0", VA = "0x1F2D2B0")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1F2EC58", Offset = "0x1F2EC58", VA = "0x1F2EC58")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1F2EF50", Offset = "0x1F2EF50", VA = "0x1F2EF50")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1F2F584", Offset = "0x1F2F584", VA = "0x1F2F584")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1F2DEEC", Offset = "0x1F2DEEC", VA = "0x1F2DEEC")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1F2E350", Offset = "0x1F2E350", VA = "0x1F2E350")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1F2F734", Offset = "0x1F2F734", VA = "0x1F2F734")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1F2FE38", Offset = "0x1F2FE38", VA = "0x1F2FE38")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1F301F0", Offset = "0x1F301F0", VA = "0x1F301F0")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1F2EB74", Offset = "0x1F2EB74", VA = "0x1F2EB74")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1F2C8C8", Offset = "0x1F2C8C8", VA = "0x1F2C8C8")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1F302EC", Offset = "0x1F302EC", VA = "0x1F302EC")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform hips;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform spine;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform chest;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperLeg;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerLeg;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFoot;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightUpperLeg;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightLowerLeg;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightFoot;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftUpperArm;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftLowerArm;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform leftHand;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightUpperArm;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightLowerArm;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rightHand;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1286B30", Offset = "0x1286B30", VA = "0x1286B30")]
		public bool IsValid(ref string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1286B38", Offset = "0x1286B38", VA = "0x1286B38")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1286B40", Offset = "0x1286B40", VA = "0x1286B40")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1286B4C", Offset = "0x1286B4C", VA = "0x1286B4C")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1286B58", Offset = "0x1286B58", VA = "0x1286B58")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1F30B74", Offset = "0x1F30B74", VA = "0x1F30B74")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1F30D90", Offset = "0x1F30D90", VA = "0x1F30D90")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x20000D3")]
	public static class JointConverter
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1F31F38", Offset = "0x1F31F38", VA = "0x1F31F38")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1F32414", Offset = "0x1F32414", VA = "0x1F32414")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1F326C8", Offset = "0x1F326C8", VA = "0x1F326C8")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1F32814", Offset = "0x1F32814", VA = "0x1F32814")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1F321D4", Offset = "0x1F321D4", VA = "0x1F321D4")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1F329BC", Offset = "0x1F329BC", VA = "0x1F329BC")]
		private static void ConvertJoint(ref ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1F32AF4", Offset = "0x1F32AF4", VA = "0x1F32AF4")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1F32BB0", Offset = "0x1F32BB0", VA = "0x1F32BB0")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1F32B58", Offset = "0x1F32B58", VA = "0x1F32B58")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1F32C14", Offset = "0x1F32C14", VA = "0x1F32C14")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1F32C74", Offset = "0x1F32C74", VA = "0x1F32C74")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x20000D4")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000276")]
		public enum ColliderType
		{
			[Token(Token = "0x4000C0C")]
			Box,
			[Token(Token = "0x4000C0D")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x2000277")]
		public enum JointType
		{
			[Token(Token = "0x4000C0F")]
			Configurable,
			[Token(Token = "0x4000C10")]
			Character
		}

		[Serializable]
		[Token(Token = "0x2000278")]
		public enum Direction
		{
			[Token(Token = "0x4000C12")]
			X,
			[Token(Token = "0x4000C13")]
			Y,
			[Token(Token = "0x4000C14")]
			Z
		}

		[Token(Token = "0x2000279")]
		public struct CreateJointParams
		{
			[Token(Token = "0x2000299")]
			public struct Limits
			{
				[Token(Token = "0x4000C87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x4000C88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x4000C89")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x4000C8A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x6000F20")]
				[Address(RVA = "0x12858C0", Offset = "0x12858C0", VA = "0x12858C0")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Limits limits;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public JointType type;

			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x12858A0", Offset = "0x12858A0", VA = "0x12858A0")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1EC7EDC", Offset = "0x1EC7EDC", VA = "0x1EC7EDC")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1EC80DC", Offset = "0x1EC80DC", VA = "0x1EC80DC")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1EC8310", Offset = "0x1EC8310", VA = "0x1EC8310")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1EC888C", Offset = "0x1EC888C", VA = "0x1EC888C")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1EC8704", Offset = "0x1EC8704", VA = "0x1EC8704")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1EC8C84", Offset = "0x1EC8C84", VA = "0x1EC8C84")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1EC8CB4", Offset = "0x1EC8CB4", VA = "0x1EC8CB4")]
		protected static void Vector3Abs(ref Vector3 v)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1EC8D34", Offset = "0x1EC8D34", VA = "0x1EC8D34")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1EC8DEC", Offset = "0x1EC8DEC", VA = "0x1EC8DEC")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1EC8734", Offset = "0x1EC8734", VA = "0x1EC8734")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1EC8EA4", Offset = "0x1EC8EA4", VA = "0x1EC8EA4")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1EC91BC", Offset = "0x1EC91BC", VA = "0x1EC91BC")]
		protected static Rigidbody GetConnectedBody(Transform bone, ref Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1EC937C", Offset = "0x1EC937C", VA = "0x1EC937C")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1EC999C", Offset = "0x1EC999C", VA = "0x1EC999C")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1EC99D0", Offset = "0x1EC99D0", VA = "0x1EC99D0")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x104BDFC", Offset = "0x104BDFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104BDFC", Offset = "0x104BDFC")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027A")]
		public enum Mode
		{
			[Token(Token = "0x4000C1C")]
			Colliders,
			[Token(Token = "0x4000C1D")]
			Joints
		}

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1EC9A04", Offset = "0x1EC9A04", VA = "0x1EC9A04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105AC0C", Offset = "0x105AC0C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1EC9A50", Offset = "0x1EC9A50", VA = "0x1EC9A50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105AC44", Offset = "0x105AC44")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1EC9A9C", Offset = "0x1EC9A9C", VA = "0x1EC9A9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x105AC7C", Offset = "0x105AC7C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1EC9AE8", Offset = "0x1EC9AE8", VA = "0x1EC9AE8")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20000D6")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027B")]
		public class Offset
		{
			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x20328C0", Offset = "0x20328C0", VA = "0x20328C0")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x2032B4C", Offset = "0x2032B4C", VA = "0x2032B4C")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x20327F0", Offset = "0x20327F0", VA = "0x20327F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x2032848", Offset = "0x2032848", VA = "0x2032848")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x2032A68", Offset = "0x2032A68", VA = "0x2032A68")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x2032B44", Offset = "0x2032B44", VA = "0x2032B44")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BE5C", Offset = "0x104BE5C")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x202BFCC", Offset = "0x202BFCC", VA = "0x202BFCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x202C024", Offset = "0x202C024", VA = "0x202C024")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x202C080", Offset = "0x202C080", VA = "0x202C080")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keyCode;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ball;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 force;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mass;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x202C094", Offset = "0x202C094", VA = "0x202C094")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x202C098", Offset = "0x202C098", VA = "0x202C098")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int groundLayer;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationTarget;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float torque;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float skidDrag;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float turnSensitivity;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody r;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isGrounded;

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x202C134", Offset = "0x202C134", VA = "0x202C134")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x202C18C", Offset = "0x202C18C", VA = "0x202C18C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x202C35C", Offset = "0x202C35C", VA = "0x202C35C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x202C680", Offset = "0x202C680", VA = "0x202C680")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x202C6DC", Offset = "0x202C6DC", VA = "0x202C6DC")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x202C738", Offset = "0x202C738", VA = "0x202C738")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x202C790", Offset = "0x202C790", VA = "0x202C790")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x1700009A")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x202CCF8", Offset = "0x202CCF8", VA = "0x202CCF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x202CD7C", Offset = "0x202CD7C", VA = "0x202CD7C", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x202D278", Offset = "0x202D278", VA = "0x202D278")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x200027C")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x200029A")]
			public class Anim
			{
				[Token(Token = "0x4000C8B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string stateName;

				[Token(Token = "0x4000C8C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int layer;

				[Token(Token = "0x4000C8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public float transitionDuration;

				[Token(Token = "0x4000C8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fixedTime;

				[Token(Token = "0x6000F21")]
				[Address(RVA = "0x202EA70", Offset = "0x202EA70", VA = "0x202EA70")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputActionIndex;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minFrequency;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Anim anim;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Booster[] boosters;

			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x202EA60", Offset = "0x202EA60", VA = "0x202EA60")]
			public Action()
			{
			}
		}

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1054FF0", Offset = "0x1054FF0")]
		public Action[] actions;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastActionMoveMag;

		[Token(Token = "0x1700009B")]
		public Action currentAction
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x202D22C", Offset = "0x202D22C", VA = "0x202D22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x202E480", Offset = "0x202E480", VA = "0x202E480", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x202E508", Offset = "0x202E508", VA = "0x202E508", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x202E790", Offset = "0x202E790", VA = "0x202E790")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x202EA50", Offset = "0x202EA50", VA = "0x202EA50")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055048", Offset = "0x1055048")]
		public PropMuscle propMuscle;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1055080", Offset = "0x1055080")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x1700009C")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x202EA78", Offset = "0x202EA78", VA = "0x202EA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105ACB4", Offset = "0x105ACB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x202EA80", Offset = "0x202EA80", VA = "0x202EA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105ACC4", Offset = "0x105ACC4")]
			private set
			{
			}
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x202E48C", Offset = "0x202E48C", VA = "0x202E48C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x202EC0C", Offset = "0x202EC0C", VA = "0x202EC0C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x202EE4C", Offset = "0x202EE4C", VA = "0x202EE4C", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x202F514", Offset = "0x202F514", VA = "0x202F514", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x202EA5C", Offset = "0x202EA5C", VA = "0x202EA5C")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055090", Offset = "0x1055090")]
		public Transform ragdollPrefab;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10550C8", Offset = "0x10550C8")]
		public string instanceName;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055100", Offset = "0x1055100")]
		public int characterControllerLayer;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055138", Offset = "0x1055138")]
		public int ragdollLayer;

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x2031690", Offset = "0x2031690", VA = "0x2031690")]
		private void Start()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x20317E8", Offset = "0x20317E8", VA = "0x20317E8")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055170", Offset = "0x1055170")]
		public GameObject prefab;

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x2031840", Offset = "0x2031840", VA = "0x2031840")]
		private void Start()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x2031984", Offset = "0x2031984", VA = "0x2031984")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x2031988", Offset = "0x2031988", VA = "0x2031988")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051558", Offset = "0x1051558")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EC2")]
				[Address(RVA = "0x2031D6C", Offset = "0x2031D6C", VA = "0x2031D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EC4")]
				[Address(RVA = "0x2031DD4", Offset = "0x2031DD4", VA = "0x2031DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x2031AA0", Offset = "0x2031AA0", VA = "0x2031AA0")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x2031C98", Offset = "0x2031C98", VA = "0x2031C98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x2031C9C", Offset = "0x2031C9C", VA = "0x2031C9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x2031D74", Offset = "0x2031D74", VA = "0x2031D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051568", Offset = "0x1051568")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EC8")]
				[Address(RVA = "0x2032028", Offset = "0x2032028", VA = "0x2032028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECA")]
				[Address(RVA = "0x2032090", Offset = "0x2032090", VA = "0x2032090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x2031B3C", Offset = "0x2031B3C", VA = "0x2031B3C")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x2031F3C", Offset = "0x2031F3C", VA = "0x2031F3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x2031F40", Offset = "0x2031F40", VA = "0x2031F40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x2032030", Offset = "0x2032030", VA = "0x2032030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051578", Offset = "0x1051578")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ECE")]
				[Address(RVA = "0x2031ECC", Offset = "0x2031ECC", VA = "0x2031ECC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED0")]
				[Address(RVA = "0x2031F34", Offset = "0x2031F34", VA = "0x2031F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x2031BD8", Offset = "0x2031BD8", VA = "0x2031BD8")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x2031DDC", Offset = "0x2031DDC", VA = "0x2031DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x2031DE0", Offset = "0x2031DE0", VA = "0x2031DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x2031ED4", Offset = "0x2031ED4", VA = "0x2031ED4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10551A8", Offset = "0x10551A8")]
		public HumanoidBaker baker;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10551E0", Offset = "0x10551E0")]
		public float bakeTime;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055218", Offset = "0x1055218")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055250", Offset = "0x1055250")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055288", Offset = "0x1055288")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10552C0", Offset = "0x10552C0")]
		public float deadMuscleWeight;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isDead;

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x2031990", Offset = "0x2031990", VA = "0x2031990")]
		private void Start()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x2031A2C", Offset = "0x2031A2C", VA = "0x2031A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x2031A30", Offset = "0x2031A30", VA = "0x2031A30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105ACD4", Offset = "0x105ACD4")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x2031ACC", Offset = "0x2031ACC", VA = "0x2031ACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AD38", Offset = "0x105AD38")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x2031B68", Offset = "0x2031B68", VA = "0x2031B68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AD9C", Offset = "0x105AD9C")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x2031C04", Offset = "0x2031C04", VA = "0x2031C04")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051588", Offset = "0x1051588")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Destructor <>4__this;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED4")]
				[Address(RVA = "0x2032260", Offset = "0x2032260", VA = "0x2032260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED6")]
				[Address(RVA = "0x20322C8", Offset = "0x20322C8", VA = "0x20322C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x2032134", Offset = "0x2032134", VA = "0x2032134")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x2032170", Offset = "0x2032170", VA = "0x2032170", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x2032174", Offset = "0x2032174", VA = "0x2032174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x2032268", Offset = "0x2032268", VA = "0x2032268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x2032098", Offset = "0x2032098", VA = "0x2032098")]
		private void Start()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x20320C4", Offset = "0x20320C4", VA = "0x20320C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AE00", Offset = "0x105AE00")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x2032160", Offset = "0x2032160", VA = "0x2032160")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051598", Offset = "0x1051598")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000101")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDA")]
				[Address(RVA = "0x2032780", Offset = "0x2032780", VA = "0x2032780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000102")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0x20327E8", Offset = "0x20327E8", VA = "0x20327E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x20323E0", Offset = "0x20323E0", VA = "0x20323E0")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x2032694", Offset = "0x2032694", VA = "0x2032694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x2032698", Offset = "0x2032698", VA = "0x2032698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x2032788", Offset = "0x2032788", VA = "0x2032788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10515A8", Offset = "0x10515A8")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000103")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE0")]
				[Address(RVA = "0x2032624", Offset = "0x2032624", VA = "0x2032624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000104")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE2")]
				[Address(RVA = "0x203268C", Offset = "0x203268C", VA = "0x203268C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x203247C", Offset = "0x203247C", VA = "0x203247C")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x2032534", Offset = "0x2032534", VA = "0x2032534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x2032538", Offset = "0x2032538", VA = "0x2032538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x203262C", Offset = "0x203262C", VA = "0x203262C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10552F8", Offset = "0x10552F8")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055330", Offset = "0x1055330")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055368", Offset = "0x1055368")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10553A0", Offset = "0x10553A0")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDead;

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x20322D0", Offset = "0x20322D0", VA = "0x20322D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x203236C", Offset = "0x203236C", VA = "0x203236C")]
		private void Update()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x2032370", Offset = "0x2032370", VA = "0x2032370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AE64", Offset = "0x105AE64")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x203240C", Offset = "0x203240C", VA = "0x203240C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AEC8", Offset = "0x105AEC8")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x20324A8", Offset = "0x20324A8", VA = "0x20324A8")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BEC0", Offset = "0x104BEC0")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minCollisionImpulse;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emission;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float emissionImpulseAdd;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEmission;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particles;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x2032B54", Offset = "0x2032B54", VA = "0x2032B54")]
		private void Start()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x2032C24", Offset = "0x2032C24", VA = "0x2032C24")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x2032EE0", Offset = "0x2032EE0", VA = "0x2032EE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x2032FD0", Offset = "0x2032FD0", VA = "0x2032FD0")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10553D8", Offset = "0x10553D8")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055410", Offset = "0x1055410")]
		public UserControlMelee userControl;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055448", Offset = "0x1055448")]
		public int grabLayer;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool grabbed;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider c;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider otherCollider;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextGrabTime;

		[Token(Token = "0x4000738")]
		private const float massMlp = 5f;

		[Token(Token = "0x4000739")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x2032FF0", Offset = "0x2032FF0", VA = "0x2032FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x2033060", Offset = "0x2033060", VA = "0x2033060")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x2033C08", Offset = "0x2033C08", VA = "0x2033C08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x2033C0C", Offset = "0x2033C0C", VA = "0x2033C0C")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055480", Offset = "0x1055480")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10554B8", Offset = "0x10554B8")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x2033C14", Offset = "0x2033C14", VA = "0x2033C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x2033C18", Offset = "0x2033C18", VA = "0x2033C18")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BF24", Offset = "0x104BF24")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x10554F0", Offset = "0x10554F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10554F0", Offset = "0x10554F0")]
		public Transform characterController;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055550", Offset = "0x1055550")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055550", Offset = "0x1055550")]
		public int characterControllerLayer;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10555B0", Offset = "0x10555B0")]
		public int ragdollLayer;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10555E8", Offset = "0x10555E8")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055620", Offset = "0x1055620")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x2033C64", Offset = "0x2033C64", VA = "0x2033C64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x2033E60", Offset = "0x2033E60", VA = "0x2033E60")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x2033E68", Offset = "0x2033E68", VA = "0x2033E68")]
		private void Update()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x2033F64", Offset = "0x2033F64", VA = "0x2033F64")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mass;

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x2034980", Offset = "0x2034980", VA = "0x2034980")]
		private void Awake()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x2034A68", Offset = "0x2034A68", VA = "0x2034A68")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Planet planet;

		[Token(Token = "0x4000748")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _r;

		[Token(Token = "0x1700009D")]
		private Rigidbody r
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x2034A78", Offset = "0x2034A78", VA = "0x2034A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x2034B10", Offset = "0x2034B10", VA = "0x2034B10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x2034BF0", Offset = "0x2034BF0", VA = "0x2034BF0")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x2034DC0", Offset = "0x2034DC0", VA = "0x2034DC0")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055658", Offset = "0x1055658")]
		public PuppetMasterProp prop;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055690", Offset = "0x1055690")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10556C8", Offset = "0x10556C8")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055700", Offset = "0x1055700")]
		public bool pickUpOnAwake;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool right;

		[Token(Token = "0x1700009E")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x2034E04", Offset = "0x2034E04", VA = "0x2034E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x2034DC8", Offset = "0x2034DC8", VA = "0x2034DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x2034E20", Offset = "0x2034E20", VA = "0x2034E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x2034E24", Offset = "0x2034E24", VA = "0x2034E24")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x2000283")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10515B8", Offset = "0x10515B8")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropMelee <>4__this;

			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4000C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE6")]
				[Address(RVA = "0x2035368", Offset = "0x2035368", VA = "0x2035368", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE8")]
				[Address(RVA = "0x20353D0", Offset = "0x20353D0", VA = "0x20353D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x2034EFC", Offset = "0x2034EFC", VA = "0x2034EFC")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x2035140", Offset = "0x2035140", VA = "0x2035140", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x2035144", Offset = "0x2035144", VA = "0x2035144", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x2035370", Offset = "0x2035370", VA = "0x2035370", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1055738", Offset = "0x1055738")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055738", Offset = "0x1055738")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055798", Offset = "0x1055798")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10557D0", Offset = "0x10557D0")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055808", Offset = "0x1055808")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055808", Offset = "0x1055808")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105585C", Offset = "0x105585C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105585C", Offset = "0x105585C")]
		public float actionMassMlp;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10558B4", Offset = "0x10558B4")]
		public Vector3 COMOffset;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float defaultColliderRadius;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float defaultMass;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float defaultAddMass;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody r;

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x2034E34", Offset = "0x2034E34", VA = "0x2034E34")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x2034E7C", Offset = "0x2034E7C", VA = "0x2034E7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AF2C", Offset = "0x105AF2C")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x2034F28", Offset = "0x2034F28", VA = "0x2034F28", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x2035038", Offset = "0x2035038", VA = "0x2035038", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x20350B0", Offset = "0x20350B0", VA = "0x20350B0", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x2035128", Offset = "0x2035128", VA = "0x2035128")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMasterProp prop;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask characterLayers;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x20353D8", Offset = "0x20353D8", VA = "0x20353D8")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x203555C", Offset = "0x203555C", VA = "0x203555C")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10558EC", Offset = "0x10558EC")]
		public Rigidbody target;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055924", Offset = "0x1055924")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105595C", Offset = "0x105595C")]
		public Transform bodyTarget;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x2035564", Offset = "0x2035564", VA = "0x2035564")]
		private void Start()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x203560C", Offset = "0x203560C", VA = "0x203560C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x2035830", Offset = "0x2035830", VA = "0x2035830")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10515C8", Offset = "0x10515C8")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000107")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EEC")]
				[Address(RVA = "0x2035C00", Offset = "0x2035C00", VA = "0x2035C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000108")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EEE")]
				[Address(RVA = "0x2035C68", Offset = "0x2035C68", VA = "0x2035C68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x20358B8", Offset = "0x20358B8", VA = "0x20358B8")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x2035AF0", Offset = "0x2035AF0", VA = "0x2035AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x2035AF4", Offset = "0x2035AF4", VA = "0x2035AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x2035C08", Offset = "0x2035C08", VA = "0x2035C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1055994", Offset = "0x1055994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055994", Offset = "0x1055994")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10559F4", Offset = "0x10559F4")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055A2C", Offset = "0x1055A2C")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055A64", Offset = "0x1055A64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055A64", Offset = "0x1055A64")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055AB8", Offset = "0x1055AB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055AB8", Offset = "0x1055AB8")]
		public float actionMassMlp;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055B0C", Offset = "0x1055B0C")]
		public Vector3 COMOffset;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultColliderRadius;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float defaultMass;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x202E92C", Offset = "0x202E92C", VA = "0x202E92C")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x2035838", Offset = "0x2035838", VA = "0x2035838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105AF90", Offset = "0x105AF90")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x20358E4", Offset = "0x20358E4", VA = "0x20358E4", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x2035950", Offset = "0x2035950", VA = "0x2035950", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x2035A74", Offset = "0x2035A74", VA = "0x2035A74", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x2035AD8", Offset = "0x2035AD8", VA = "0x2035AD8")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055B44", Offset = "0x1055B44")]
		public float masterScale;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int muscleIndex;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055B60", Offset = "0x1055B60")]
		public float muscleScale;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x2035C70", Offset = "0x2035C70", VA = "0x2035C70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x2035CB0", Offset = "0x2035CB0", VA = "0x2035CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x203604C", Offset = "0x203604C", VA = "0x203604C")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem blood;

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x2036060", Offset = "0x2036060", VA = "0x2036060")]
		private void Update()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x2036340", Offset = "0x2036340", VA = "0x2036340")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055B7C", Offset = "0x1055B7C")]
		public Transform pool;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055BB4", Offset = "0x1055BB4")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055BEC", Offset = "0x1055BEC")]
		public string idleAnimation;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform puppetRoot;

		[Token(Token = "0x1700009F")]
		private bool isPooled
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x2036350", Offset = "0x2036350", VA = "0x2036350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x20363E8", Offset = "0x20363E8", VA = "0x20363E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x2036448", Offset = "0x2036448", VA = "0x2036448")]
		private void Update()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x203644C", Offset = "0x203644C", VA = "0x203644C")]
		private void Pool()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x2036470", Offset = "0x2036470", VA = "0x2036470")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x203659C", Offset = "0x203659C", VA = "0x203659C")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 euler;

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x20365A4", Offset = "0x20365A4", VA = "0x20365A4")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x203668C", Offset = "0x203668C", VA = "0x203668C")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PuppetMasterProp prop;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x203702C", Offset = "0x203702C", VA = "0x203702C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2037030", Offset = "0x2037030", VA = "0x2037030")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x2037040", Offset = "0x2037040", VA = "0x2037040")]
		private void Update()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x203745C", Offset = "0x203745C", VA = "0x203745C")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAttacking;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float attackTimer;

		[Token(Token = "0x170000A0")]
		private Transform moveTarget
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x20378C0", Offset = "0x20378C0", VA = "0x20378C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x2037914", Offset = "0x2037914", VA = "0x2037914", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x2037BC4", Offset = "0x2037BC4", VA = "0x2037BC4")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x2037DD8", Offset = "0x2037DD8", VA = "0x2037DD8")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode hitKey;

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x2037DF4", Offset = "0x2037DF4", VA = "0x2037DF4", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x203818C", Offset = "0x203818C", VA = "0x203818C")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000A1")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x202C7D8", Offset = "0x202C7D8", VA = "0x202C7D8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x202C7B4", Offset = "0x202C7B4", VA = "0x202C7B4", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x202C7E0", Offset = "0x202C7E0", VA = "0x202C7E0")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x202C8A4", Offset = "0x202C8A4", VA = "0x202C8A4", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x202CA1C", Offset = "0x202CA1C", VA = "0x202CA1C", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x202CCD0", Offset = "0x202CCD0", VA = "0x202CCD0", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x202CA2C", Offset = "0x202CA2C", VA = "0x202CA2C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x202CCE0", Offset = "0x202CCE0", VA = "0x202CCE0")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BF88", Offset = "0x104BF88")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x202D2C0", Offset = "0x202D2C0", VA = "0x202D2C0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x202D320", Offset = "0x202D320", VA = "0x202D320", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x202D44C", Offset = "0x202D44C", VA = "0x202D44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x202D5C8", Offset = "0x202D5C8", VA = "0x202D5C8")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104BFEC", Offset = "0x104BFEC")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1055C54", Offset = "0x1055C54")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x40007A0")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x40007A1")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x170000A2")]
		public override bool animationGrounded
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x202D680", Offset = "0x202D680", VA = "0x202D680", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x202D5E0", Offset = "0x202D5E0", VA = "0x202D5E0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x202D664", Offset = "0x202D664", VA = "0x202D664", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x202CE78", Offset = "0x202CE78", VA = "0x202CE78", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x202D770", Offset = "0x202D770", VA = "0x202D770")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x202D29C", Offset = "0x202D29C", VA = "0x202D29C")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C050", Offset = "0x104C050")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C050", Offset = "0x104C050")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055C98", Offset = "0x1055C98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055C98", Offset = "0x1055C98")]
		public Transform gravityTarget;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055CF8", Offset = "0x1055CF8")]
		public float gravityMultiplier;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x40007AD")]
		protected const float half = 0.5f;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x600095F")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x202D924", Offset = "0x202D924", VA = "0x202D924")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x202DAA8", Offset = "0x202DAA8", VA = "0x202DAA8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x202DC40", Offset = "0x202DC40", VA = "0x202DC40", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x202DEB8", Offset = "0x202DEB8", VA = "0x202DEB8")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x202DF7C", Offset = "0x202DF7C", VA = "0x202DF7C")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x202E164", Offset = "0x202E164", VA = "0x202E164")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x202E314", Offset = "0x202E314", VA = "0x202E314")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x202E338", Offset = "0x202E338", VA = "0x202E338")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x202E35C", Offset = "0x202E35C", VA = "0x202E35C")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x202E460", Offset = "0x202E460", VA = "0x202E460")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000285")]
		public enum MoveMode
		{
			[Token(Token = "0x4000C45")]
			Directional,
			[Token(Token = "0x4000C46")]
			Strafe
		}

		[Token(Token = "0x2000286")]
		public struct AnimState
		{
			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4000C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x2000287")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10515D8", Offset = "0x10515D8")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000109")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF2")]
				[Address(RVA = "0x2031620", Offset = "0x2031620", VA = "0x2031620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF4")]
				[Address(RVA = "0x2031688", Offset = "0x2031688", VA = "0x2031688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x20314B4", Offset = "0x20314B4", VA = "0x20314B4")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x20314E0", Offset = "0x20314E0", VA = "0x20314E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x20314E4", Offset = "0x20314E4", VA = "0x20314E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x2031628", Offset = "0x2031628", VA = "0x2031628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055D30", Offset = "0x1055D30")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055D68", Offset = "0x1055D68")]
		public MoveMode moveMode;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055DA0", Offset = "0x1055DA0")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055DD8", Offset = "0x1055DD8")]
		public bool smoothJump;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055E10", Offset = "0x1055E10")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1055E48", Offset = "0x1055E48")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1055E80", Offset = "0x1055E80")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x170000A3")]
		public bool onGround
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x202F888", Offset = "0x202F888", VA = "0x202F888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105AFF4", Offset = "0x105AFF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x202F890", Offset = "0x202F890", VA = "0x202F890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B004", Offset = "0x105B004")]
			private set
			{
			}
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x202EA88", Offset = "0x202EA88", VA = "0x202EA88", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x202F89C", Offset = "0x202F89C", VA = "0x202F89C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x202ED10", Offset = "0x202ED10", VA = "0x202ED10", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x202F92C", Offset = "0x202F92C", VA = "0x202F92C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x202E974", Offset = "0x202E974", VA = "0x202E974", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x2030B24", Offset = "0x2030B24", VA = "0x2030B24", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x202FF38", Offset = "0x202FF38", VA = "0x202FF38")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x2030C04", Offset = "0x2030C04", VA = "0x2030C04")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x20311F4", Offset = "0x20311F4", VA = "0x20311F4")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x2030868", Offset = "0x2030868", VA = "0x2030868")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x202F0A4", Offset = "0x202F0A4", VA = "0x202F0A4", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x2031294", Offset = "0x2031294", VA = "0x2031294")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x202F53C", Offset = "0x202F53C", VA = "0x202F53C", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x2031420", Offset = "0x2031420", VA = "0x2031420")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B014", Offset = "0x105B014")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x2030448", Offset = "0x2030448", VA = "0x2030448")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x202F754", Offset = "0x202F754", VA = "0x202F754")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x104C0DC", Offset = "0x104C0DC")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000288")]
		public enum RotationMode
		{
			[Token(Token = "0x4000C55")]
			Smooth,
			[Token(Token = "0x4000C56")]
			Linear
		}

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055E90", Offset = "0x1055E90")]
		public CameraController cameraController;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055EC8", Offset = "0x1055EC8")]
		public float accelerationTime;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055F00", Offset = "0x1055F00")]
		public float turnTime;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055F38", Offset = "0x1055F38")]
		public bool walkByDefault;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055F70", Offset = "0x1055F70")]
		public RotationMode rotationMode;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055FA8", Offset = "0x1055FA8")]
		public float moveSpeed;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1055FE0", Offset = "0x1055FE0")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170000A4")]
		public bool isGrounded
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x2036694", Offset = "0x2036694", VA = "0x2036694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B078", Offset = "0x105B078")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x203669C", Offset = "0x203669C", VA = "0x203669C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B088", Offset = "0x105B088")]
			private set
			{
			}
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x20366A8", Offset = "0x20366A8", VA = "0x20366A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x2036730", Offset = "0x2036730", VA = "0x2036730")]
		private void Update()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x2036E2C", Offset = "0x2036E2C", VA = "0x2036E2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x2036784", Offset = "0x2036784", VA = "0x2036784")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x2036B84", Offset = "0x2036B84", VA = "0x2036B84")]
		private void Move()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x2036E6C", Offset = "0x2036E6C", VA = "0x2036E6C")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x2036F64", Offset = "0x2036F64", VA = "0x2036F64")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x2037004", Offset = "0x2037004", VA = "0x2037004")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x2037564", Offset = "0x2037564", VA = "0x2037564", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x20375DC", Offset = "0x20375DC", VA = "0x20375DC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x2037870", Offset = "0x2037870", VA = "0x2037870")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x2037894", Offset = "0x2037894", VA = "0x2037894")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x2000289")]
		public struct State
		{
			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x20375A4", Offset = "0x20375A4", VA = "0x20375A4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x2037E28", Offset = "0x2037E28", VA = "0x2037E28", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x20378B0", Offset = "0x20378B0", VA = "0x20378B0")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x600098D")]
		[Address(RVA = "0x202C088", Offset = "0x202C088", VA = "0x202C088")]
		private void Update()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x202C08C", Offset = "0x202C08C", VA = "0x202C08C")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x203746C", Offset = "0x203746C", VA = "0x203746C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x20374A0", Offset = "0x20374A0", VA = "0x20374A0")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x2037550", Offset = "0x2037550", VA = "0x2037550")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000100")]
	public class Navigator
	{
		[Token(Token = "0x200028A")]
		public enum State
		{
			[Token(Token = "0x4000C5D")]
			Idle,
			[Token(Token = "0x4000C5E")]
			Seeking,
			[Token(Token = "0x4000C5F")]
			OnPath
		}

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1055FF0", Offset = "0x1055FF0")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056028", Offset = "0x1056028")]
		public float cornerRadius;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056060", Offset = "0x1056060")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056098", Offset = "0x1056098")]
		public float maxSampleDistance;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10560D0", Offset = "0x10560D0")]
		public float nextPathInterval;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1056108", Offset = "0x1056108")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1056118", Offset = "0x1056118")]
		private State <state>k__BackingField;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170000A5")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x2033F6C", Offset = "0x2033F6C", VA = "0x2033F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B098", Offset = "0x105B098")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x2033F78", Offset = "0x2033F78", VA = "0x2033F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B0A8", Offset = "0x105B0A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public State state
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x2033F84", Offset = "0x2033F84", VA = "0x2033F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B0B8", Offset = "0x105B0B8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x2033F8C", Offset = "0x2033F8C", VA = "0x2033F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x105B0C8", Offset = "0x105B0C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x2033F94", Offset = "0x2033F94", VA = "0x2033F94")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x2034068", Offset = "0x2034068", VA = "0x2034068")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x20345AC", Offset = "0x20345AC", VA = "0x20345AC")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x203461C", Offset = "0x203461C", VA = "0x203461C")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x2034474", Offset = "0x2034474", VA = "0x2034474")]
		private void Stop()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x20344E8", Offset = "0x20344E8", VA = "0x20344E8")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x2034764", Offset = "0x2034764", VA = "0x2034764")]
		public void Visualize()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x2034914", Offset = "0x2034914", VA = "0x2034914")]
		public Navigator()
		{
		}
	}
}
namespace Horizon
{
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C140", Offset = "0x104C140")]
	public class HorizonCompensateZFighting : MonoBehaviour
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minCamHeight;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minOffsetY;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxCamHeight;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxOffsetY;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentOffset;

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x279EE8C", Offset = "0x279EE8C", VA = "0x279EE8C")]
		private void Update()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x279F080", Offset = "0x279F080", VA = "0x279F080")]
		public HorizonCompensateZFighting()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C178", Offset = "0x104C178")]
	public class HorizonCopyMaterialProps : MonoBehaviour
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject source;

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x279F094", Offset = "0x279F094", VA = "0x279F094")]
		public void Sync(bool enabled_only_flag)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x27A0500", Offset = "0x27A0500", VA = "0x27A0500")]
		private void CopyFloat(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x27A0B34", Offset = "0x27A0B34", VA = "0x27A0B34")]
		private void CopyFloat(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x27A06FC", Offset = "0x27A06FC", VA = "0x27A06FC")]
		private void CopyColor(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x27A0AA8", Offset = "0x27A0AA8", VA = "0x27A0AA8")]
		private void CopyColor(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x27A0674", Offset = "0x27A0674", VA = "0x27A0674")]
		private void CopyVector(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x27A0C68", Offset = "0x27A0C68", VA = "0x27A0C68")]
		private void CopyVector(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x27A0588", Offset = "0x27A0588", VA = "0x27A0588")]
		private void CopyTexture(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x27A0900", Offset = "0x27A0900", VA = "0x27A0900")]
		private void CopyTexture(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x27A0BC0", Offset = "0x27A0BC0", VA = "0x27A0BC0")]
		private void CopyTextureTilingOffset(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x27A09FC", Offset = "0x27A09FC", VA = "0x27A09FC")]
		private void CopyTextureTilingOffset(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x27A04A4", Offset = "0x27A04A4", VA = "0x27A04A4")]
		private bool CheckEnabled(string propName, Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x27A0784", Offset = "0x27A0784", VA = "0x27A0784")]
		private float CheckType(string propName, Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x27A07D8", Offset = "0x27A07D8", VA = "0x27A07D8")]
		private bool CompareTextures(string sourcePropName, Material sourceMaterial, string targetPropName, Material targetMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x27A0CF4", Offset = "0x27A0CF4", VA = "0x27A0CF4")]
		public HorizonCopyMaterialProps()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x104C1B0", Offset = "0x104C1B0")]
	[SelectionBase]
	[ExecuteInEditMode]
	public class HorizonMaster : MonoBehaviour
	{
		[Token(Token = "0x200028B")]
		[HideInInspector]
		public enum LayerCount
		{
			[Token(Token = "0x4000C61")]
			One = 1,
			[Token(Token = "0x4000C62")]
			Two,
			[Token(Token = "0x4000C63")]
			Three,
			[Token(Token = "0x4000C64")]
			Four
		}

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Material> hMats;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPreset;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool childUsesDisplacement;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool childUsesTesselation;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool childUsesCliffs;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool childUsesTransition;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[HideInInspector]
		public bool horizonChildAvailable;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[HideInInspector]
		public bool drawGizmos;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color gizmoColor;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool updateHorizonMaster;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool showWireF;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Material getFromMaterialMat;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool setFeatures;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool getFeatures;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool getMatSettings;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int objectNumber;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] children;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool showFeatures;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool showScaling;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[HideInInspector]
		public bool showMainSettings;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[HideInInspector]
		public bool showDetailSettings;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool showWaterSettings;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		public bool showFogSettings;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[HideInInspector]
		public bool showSnowSettings;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[HideInInspector]
		public bool showDispSettings;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool showCliffSettings;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool showTools;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public LayerCount hFeatLayerCount;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int layerCount;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public bool hFeatNormalmaps;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[HideInInspector]
		public bool hFeatEmissivness;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[HideInInspector]
		public bool hFeatDetailTex;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		[HideInInspector]
		public bool hFeatWater;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool hFeatFog;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[HideInInspector]
		public bool hFeatSnow;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[HideInInspector]
		public bool hFeatDirSpec;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[HideInInspector]
		public bool hFeatCubeRefl;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056358", Offset = "0x1056358")]
		public float hSetScaleInner;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float hSetScaleOuter;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10563A8", Offset = "0x10563A8")]
		public float hSetScaleHeight;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector4 hSetMaskScaleOffset;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool hSetLockMask;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Texture hTexMask;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Color hColTint;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Color hColEmissColor;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Color hColAmbOverride;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float hSetIBLExposure;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public float hSetIBLReflExposure;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056468", Offset = "0x1056468")]
		public float hSetAmbvsIBL;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10564A8", Offset = "0x10564A8")]
		public float hSetNMIntensLayers;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public HorizON_LayerProps[] hSetLayerProps;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public Vector4 hSetDetailScaleOffset;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public Texture hTexDetailTexDiff;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Texture hTexDetailTexNM;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056528", Offset = "0x1056528")]
		public float hSetDetailDiffIntens;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056568", Offset = "0x1056568")]
		public float hSetDetailNMIntens;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Texture hTexWaterNM;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector4 hSetWaterScaleOffset;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Color hColWaterColorOpac;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public Color hColWaterSpecGloss;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10565E8", Offset = "0x10565E8")]
		public float hSetWaterBlend;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056628", Offset = "0x1056628")]
		public float hSetWaterWavesIntens;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public float HSetWaterWavesSpeed;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056678", Offset = "0x1056678")]
		public float hSetFogIntens;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public Color hColFogColorAmbBlend;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10566C8", Offset = "0x10566C8")]
		public float hSetFogSpecCubeAdd;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[HideInInspector]
		public float hSetFogStartDist;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public float hSetFogTransDist;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[HideInInspector]
		public float hSetFogStartHeight;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public float hSetFogTransHeight;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		public float hSetFogDistHeightOffset;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056758", Offset = "0x1056758")]
		public float hSetFogEmissPunchThru;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056798", Offset = "0x1056798")]
		public float hsetSnowAmount;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public Color hColSnowDiffColor;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public Color hColSnowSpecGloss;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public float hSetSnowStartHeight;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[HideInInspector]
		public float hSetSnowHeightTrans;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056818", Offset = "0x1056818")]
		public float hSetSnowSlopeDamp;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1056858", Offset = "0x1056858")]
		public float hSetSnowReduceByColor;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public float hSetDispHeight;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[HideInInspector]
		public bool hSetDispRedByVertCol;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		[HideInInspector]
		public bool hSetDispRedByUV;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10568C8", Offset = "0x10568C8")]
		public float hSetDispRedFadeAmount;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public Texture hTexDispHeightmap;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x105691C", Offset = "0x105691C")]
		public float hSetTessSubD;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Texture hTexCliffDiff;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public Vector4 hSetCliffScaleOffset;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public bool hSetCliffAIsEmissMask;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public Texture hTexCliffNM;

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x27A3158", Offset = "0x27A3158", VA = "0x27A3158")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x27A315C", Offset = "0x27A315C", VA = "0x27A315C")]
		public void UpdateMaterials()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x27A5810", Offset = "0x27A5810", VA = "0x27A5810")]
		public HorizonMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000104")]
	public class HorizON_LayerProps
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool showLayerSettings;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector4 hSetLayerScaleOffset;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture hTexLayerDiff;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture hTexLayerNM;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hSetAIsEmissMask;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color hColLayerTint;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x10569A0", Offset = "0x10569A0")]
		public float hSetLayerDetIntens;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x279EDF8", Offset = "0x279EDF8", VA = "0x279EDF8")]
		public HorizON_LayerProps()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class HorizonDecoPainterSettings : MonoBehaviour
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x27A0CFC", Offset = "0x27A0CFC", VA = "0x27A0CFC")]
		public HorizonDecoPainterSettings()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class HorizonDecoParent : MonoBehaviour
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x27A0D04", Offset = "0x27A0D04", VA = "0x27A0D04")]
		public HorizonDecoParent()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class HorizonDisplacementHelper
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float texel_step;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float bounds_percentage_offset;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D heightMap;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D maskMap;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float parallaxValue;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Vector4 mapScaleOffset;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static Vector4 baseMapScaleOffset;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static Vector4 blendColorMap1ScaleOffset;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static Vector4 blendColorMap2ScaleOffset;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static Vector4 blendColorMap3ScaleOffset;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static bool _LAYERCOUNT_TWO;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private static bool _LAYERCOUNT_THREE;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private static bool _LAYERCOUNT_FOUR;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private static bool waterOn;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static float _LocalSpace;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static bool PER_VERTEX_FLAG;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static float VertexColorA;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static float _ReduceByVertexAlpha;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static float texCoordX;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static float texCoordY;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static float _ReduceByUVBorder;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private static float _ReduceByUVBorderLength;

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x27A0D0C", Offset = "0x27A0D0C", VA = "0x27A0D0C")]
		public static void AdjustBounds(GameObject gameObject)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x27A1D14", Offset = "0x27A1D14", VA = "0x27A1D14")]
		public static void DisplaceMesh(GameObject gameObject)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x27A1054", Offset = "0x27A1054", VA = "0x27A1054")]
		public static bool GetProps(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x27A2134", Offset = "0x27A2134", VA = "0x27A2134")]
		private static Vector2 TRANSFORM_TEX(Vector2 uv_in, Vector4 scaleOffset)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x27A2148", Offset = "0x27A2148", VA = "0x27A2148")]
		private static float Displace(Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x27A1BAC", Offset = "0x27A1BAC", VA = "0x27A1BAC")]
		private static float disp(Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x27A1AFC", Offset = "0x27A1AFC", VA = "0x27A1AFC")]
		private static Vector2 getUVs(Vector2 objCenterXZ, Vector2 worldPosXZ)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x27A2594", Offset = "0x27A2594", VA = "0x27A2594")]
		public static void FixSeams(Transform[] inputTransforms)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x27A30EC", Offset = "0x27A30EC", VA = "0x27A30EC")]
		public HorizonDisplacementHelper()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class HorizonPrefabList : MonoBehaviour
	{
		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> prefabList;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool objectMode;

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x27A5B94", Offset = "0x27A5B94", VA = "0x27A5B94")]
		public HorizonPrefabList()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x2000109")]
	public class ES3Type_ES3Prefab : ES3Type
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x280202C", Offset = "0x280202C", VA = "0x280202C")]
		public ES3Type_ES3Prefab()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x28020DC", Offset = "0x28020DC", VA = "0x28020DC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010A")]
	public class ES3Type_ES3PrefabInternal : ES3Type
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x28020E4", Offset = "0x28020E4", VA = "0x28020E4")]
		public ES3Type_ES3PrefabInternal()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x2802194", Offset = "0x2802194", VA = "0x2802194", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010B")]
	public class ES32DArrayType : ES3CollectionType
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x27F8250", Offset = "0x27F8250", VA = "0x27F8250")]
		public ES32DArrayType(Type type)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x27F8340", Offset = "0x27F8340", VA = "0x27F8340", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode unityObjectType)
		{
		}

		[Token(Token = "0x60009CA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x27F8594", Offset = "0x27F8594", VA = "0x27F8594", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010C")]
	public class ES33DArrayType : ES3CollectionType
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x27F87C8", Offset = "0x27F87C8", VA = "0x27F87C8")]
		public ES33DArrayType(Type type)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x27F87CC", Offset = "0x27F87CC", VA = "0x27F87CC", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009CE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x27F8AC8", Offset = "0x27F8AC8", VA = "0x27F8AC8", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010D")]
	public class ES3ArrayType : ES3CollectionType
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x27F8DD8", Offset = "0x27F8DD8", VA = "0x27F8DD8")]
		public ES3ArrayType(Type type)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x27F8DDC", Offset = "0x27F8DDC", VA = "0x27F8DDC")]
		public ES3ArrayType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x27F8E3C", Offset = "0x27F8E3C", VA = "0x27F8E3C", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009D3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x27F8FE8", Offset = "0x27F8FE8", VA = "0x27F8FE8", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x27F923C", Offset = "0x27F923C", VA = "0x27F923C", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200010E")]
	public abstract class ES3CollectionType : ES3Type
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Type elementType;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x60009D7")]
		public abstract void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode);

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x27F8254", Offset = "0x27F8254", VA = "0x27F8254")]
		public ES3CollectionType(Type type)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x27F8E0C", Offset = "0x27F8E0C", VA = "0x27F8E0C")]
		public ES3CollectionType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x27F9824", Offset = "0x27F9824", VA = "0x27F9824", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009DB")]
		protected virtual bool ReadICollection<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009DC")]
		protected virtual void ReadICollectionInto<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x27F9834", Offset = "0x27F9834", VA = "0x27F9834", Slot = "10")]
		public virtual object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x27F9A20", Offset = "0x27F9A20", VA = "0x27F9A20", Slot = "11")]
		public virtual void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class ES3DictionaryType : ES3Type
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Type keyType;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type valueType;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x27FA2BC", Offset = "0x27FA2BC", VA = "0x27FA2BC")]
		public ES3DictionaryType(Type type)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x27FA3D4", Offset = "0x27FA3D4", VA = "0x27FA3D4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x27FA3F8", Offset = "0x27FA3F8", VA = "0x27FA3F8")]
		public void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009E2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009E4")]
		public Dictionary<TKey, TVal> ReadKVP<TKey, TVal>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		public void ReadKVP<TKey, TVal>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x27FA830", Offset = "0x27FA830", VA = "0x27FA830")]
		public object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x27FAA68", Offset = "0x27FAA68", VA = "0x27FAA68")]
		public void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class ES3HashSetType : ES3CollectionType
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x27FAD90", Offset = "0x27FAD90", VA = "0x27FAD90")]
		public ES3HashSetType(Type type)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x27FAD94", Offset = "0x27FAD94", VA = "0x27FAD94", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009EA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class ES3ListType : ES3CollectionType
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x27FB364", Offset = "0x27FB364", VA = "0x27FB364")]
		public ES3ListType(Type type)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x27FB368", Offset = "0x27FB368", VA = "0x27FB368")]
		public ES3ListType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x27FB398", Offset = "0x27FB398", VA = "0x27FB398", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009EF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x27FB78C", Offset = "0x27FB78C", VA = "0x27FB78C", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x27FB964", Offset = "0x27FB964", VA = "0x27FB964", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class ES3QueueType : ES3CollectionType
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x27FC020", Offset = "0x27FC020", VA = "0x27FC020")]
		public ES3QueueType(Type type)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x27FC024", Offset = "0x27FC024", VA = "0x27FC024", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009F5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x27FC408", Offset = "0x27FC408", VA = "0x27FC408", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x27FC6C8", Offset = "0x27FC6C8", VA = "0x27FC6C8", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class ES3StackType : ES3CollectionType
	{
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x27FD5B0", Offset = "0x27FD5B0", VA = "0x27FD5B0")]
		public ES3StackType(Type type)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x27FD5B4", Offset = "0x27FD5B4", VA = "0x27FD5B4", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x60009FB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x27FD998", Offset = "0x27FD998", VA = "0x27FD998", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x27FDC58", Offset = "0x27FDC58", VA = "0x27FDC58", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000114")]
	public abstract class ES3ComponentType : ES3UnityObjectType
	{
		[Token(Token = "0x4000898")]
		protected const string gameObjectPropertyName = "goID";

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x27F9C80", Offset = "0x27F9C80", VA = "0x27F9C80")]
		public ES3ComponentType(Type type)
		{
		}

		[Token(Token = "0x6000A00")]
		protected abstract void WriteComponent(object obj, ES3Writer writer);

		[Token(Token = "0x6000A01")]
		protected abstract void ReadComponent<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x27F9C88", Offset = "0x27F9C88", VA = "0x27F9C88", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A03")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A04")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x27F9F00", Offset = "0x27F9F00", VA = "0x27F9F00")]
		private static Component GetOrAddComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x27FA12C", Offset = "0x27FA12C", VA = "0x27FA12C")]
		public static Component CreateComponent(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x27FA06C", Offset = "0x27FA06C", VA = "0x27FA06C")]
		public static Component GetOrCreateComponentIfNotExists(GameObject go, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public abstract class ES3ObjectType : ES3Type
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x27FBE8C", Offset = "0x27FBE8C", VA = "0x27FBE8C")]
		public ES3ObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A09")]
		protected abstract void WriteObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A0A")]
		protected abstract object ReadObject<T>(ES3Reader reader);

		[Token(Token = "0x6000A0B")]
		protected virtual void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x27FBE90", Offset = "0x27FBE90", VA = "0x27FBE90", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A0D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public abstract class ES3ScriptableObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x27FCDDC", Offset = "0x27FCDDC", VA = "0x27FCDDC")]
		public ES3ScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A10")]
		protected abstract void WriteScriptableObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A11")]
		protected abstract void ReadScriptableObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x27FD3DC", Offset = "0x27FD3DC", VA = "0x27FD3DC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A13")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A14")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x104C20C", Offset = "0x104C20C")]
	[ES3DoNotStrip]
	public abstract class ES3Type
	{
		[Token(Token = "0x4000899")]
		public const string typeFieldName = "__type";

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Member[] members;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPrimitive;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isValueType;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool isCollection;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool isDictionary;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isES3TypeUnityObject;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isReflectedType;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isUnsupported;

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x27F9764", Offset = "0x27F9764", VA = "0x27F9764")]
		protected ES3Type(Type type)
		{
		}

		[Token(Token = "0x6000A16")]
		public abstract void Write(object obj, ES3Writer writer);

		[Token(Token = "0x6000A17")]
		public abstract object Read<T>(ES3Reader reader);

		[Token(Token = "0x6000A18")]
		public virtual void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x27FBEE8", Offset = "0x27FBEE8", VA = "0x27FBEE8")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1A")]
		protected void ReadUsingDerivedType<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x27FE168", Offset = "0x27FE168", VA = "0x27FE168")]
		internal string ReadPropertyName(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x27FCC20", Offset = "0x27FCC20", VA = "0x27FCC20")]
		protected void WriteProperties(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x27FE1A0", Offset = "0x27FE1A0", VA = "0x27FE1A0")]
		protected object ReadProperties(ES3Reader reader, object obj)
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x27FCC10", Offset = "0x27FCC10", VA = "0x27FCC10")]
		protected void GetMembers(bool safe)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x27FCE48", Offset = "0x27FCE48", VA = "0x27FCE48")]
		protected void GetMembers(bool safe, string[] memberNames)
		{
		}
	}
	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x104C248", Offset = "0x104C248")]
	public class ES3PropertiesAttribute : Attribute
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] members;

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x27FBFF4", Offset = "0x27FBFF4", VA = "0x27FBFF4")]
		public ES3PropertiesAttribute(params string[] members)
		{
		}
	}
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x104C25C", Offset = "0x104C25C")]
	public class ES3DoNotStripAttribute : PreserveAttribute
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x27FAD88", Offset = "0x27FAD88", VA = "0x27FAD88")]
		public ES3DoNotStripAttribute()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public abstract class ES3UnityObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x2796308", Offset = "0x2796308", VA = "0x2796308")]
		public ES3UnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A23")]
		protected abstract void WriteUnityObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A24")]
		protected abstract void ReadUnityObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A25")]
		protected abstract object ReadUnityObject<T>(ES3Reader reader);

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x279CC00", Offset = "0x279CC00", VA = "0x279CC00", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x279CC14", Offset = "0x279CC14", VA = "0x279CC14", Slot = "13")]
		public virtual void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000A28")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A29")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011B")]
	public class ES3Type_DateTime : ES3Type
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x2801D80", Offset = "0x2801D80", VA = "0x2801D80")]
		public ES3Type_DateTime()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x2801E30", Offset = "0x2801E30", VA = "0x2801E30", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A2C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class ES3Type_DateTimeArray : ES3ArrayType
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x2801F4C", Offset = "0x2801F4C", VA = "0x2801F4C")]
		public ES3Type_DateTimeArray()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class ES3Type_UIntPtr : ES3Type
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x2799514", Offset = "0x2799514", VA = "0x2799514")]
		public ES3Type_UIntPtr()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x27995D0", Offset = "0x27995D0", VA = "0x27995D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A31")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public class ES3Type_UIntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x279966C", Offset = "0x279966C", VA = "0x279966C")]
		public ES3Type_UIntPtrArray()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class ES3Type_bool : ES3Type
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x279AC98", Offset = "0x279AC98", VA = "0x279AC98")]
		public ES3Type_bool()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x279AD54", Offset = "0x279AD54", VA = "0x279AD54", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A36")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000120")]
	public class ES3Type_boolArray : ES3ArrayType
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x279ADF0", Offset = "0x279ADF0", VA = "0x279ADF0")]
		public ES3Type_boolArray()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class ES3Type_byte : ES3Type
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x279AEC8", Offset = "0x279AEC8", VA = "0x279AEC8")]
		public ES3Type_byte()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x279AF84", Offset = "0x279AF84", VA = "0x279AF84", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A3B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public class ES3Type_byteArray : ES3Type
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x279B020", Offset = "0x279B020", VA = "0x279B020")]
		public ES3Type_byteArray()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x279B0DC", Offset = "0x279B0DC", VA = "0x279B0DC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A3F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class ES3Type_char : ES3Type
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x279B178", Offset = "0x279B178", VA = "0x279B178")]
		public ES3Type_char()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x279B234", Offset = "0x279B234", VA = "0x279B234", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A43")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public class ES3Type_charArray : ES3ArrayType
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x279B2D0", Offset = "0x279B2D0", VA = "0x279B2D0")]
		public ES3Type_charArray()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class ES3Type_decimal : ES3Type
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x279B3A8", Offset = "0x279B3A8", VA = "0x279B3A8")]
		public ES3Type_decimal()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x279B464", Offset = "0x279B464", VA = "0x279B464", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A48")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public class ES3Type_decimalArray : ES3ArrayType
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x279B500", Offset = "0x279B500", VA = "0x279B500")]
		public ES3Type_decimalArray()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class ES3Type_double : ES3Type
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x279B5D8", Offset = "0x279B5D8", VA = "0x279B5D8")]
		public ES3Type_double()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x279B694", Offset = "0x279B694", VA = "0x279B694", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A4D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000128")]
	public class ES3Type_doubleArray : ES3ArrayType
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x279B730", Offset = "0x279B730", VA = "0x279B730")]
		public ES3Type_doubleArray()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class ES3Type_enum : ES3Type
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x279B808", Offset = "0x279B808", VA = "0x279B808")]
		public ES3Type_enum(Type type)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x279B898", Offset = "0x279B898", VA = "0x279B898", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A52")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012A")]
	public class ES3Type_float : ES3Type
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x279B934", Offset = "0x279B934", VA = "0x279B934")]
		public ES3Type_float()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x279B9F0", Offset = "0x279B9F0", VA = "0x279B9F0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A56")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class ES3Type_floatArray : ES3ArrayType
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x279BA8C", Offset = "0x279BA8C", VA = "0x279BA8C")]
		public ES3Type_floatArray()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class ES3Type_int : ES3Type
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x279BB64", Offset = "0x279BB64", VA = "0x279BB64")]
		public ES3Type_int()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x279BC20", Offset = "0x279BC20", VA = "0x279BC20", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A5B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class ES3Type_intArray : ES3ArrayType
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x279BCBC", Offset = "0x279BCBC", VA = "0x279BCBC")]
		public ES3Type_intArray()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class ES3Type_IntPtr : ES3Type
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x28048E8", Offset = "0x28048E8", VA = "0x28048E8")]
		public ES3Type_IntPtr()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x28049A0", Offset = "0x28049A0", VA = "0x28049A0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A60")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class ES3Type_IntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x2804A48", Offset = "0x2804A48", VA = "0x2804A48")]
		public ES3Type_IntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class ES3Type_long : ES3Type
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x279BD94", Offset = "0x279BD94", VA = "0x279BD94")]
		public ES3Type_long()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x279BE50", Offset = "0x279BE50", VA = "0x279BE50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A65")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public class ES3Type_longArray : ES3ArrayType
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x279BEEC", Offset = "0x279BEEC", VA = "0x279BEEC")]
		public ES3Type_longArray()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class ES3Type_sbyte : ES3Type
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x279BFC4", Offset = "0x279BFC4", VA = "0x279BFC4")]
		public ES3Type_sbyte()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x279C080", Offset = "0x279C080", VA = "0x279C080", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A6A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000133")]
	public class ES3Type_sbyteArray : ES3ArrayType
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x279C11C", Offset = "0x279C11C", VA = "0x279C11C")]
		public ES3Type_sbyteArray()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class ES3Type_short : ES3Type
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x279C1F4", Offset = "0x279C1F4", VA = "0x279C1F4")]
		public ES3Type_short()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x279C2B0", Offset = "0x279C2B0", VA = "0x279C2B0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A6F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public class ES3Type_shortArray : ES3ArrayType
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x279C34C", Offset = "0x279C34C", VA = "0x279C34C")]
		public ES3Type_shortArray()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class ES3Type_string : ES3Type
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x279C424", Offset = "0x279C424", VA = "0x279C424")]
		public ES3Type_string()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x279C4E0", Offset = "0x279C4E0", VA = "0x279C4E0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A74")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000137")]
	public class ES3Type_StringArray : ES3ArrayType
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x2796F44", Offset = "0x2796F44", VA = "0x2796F44")]
		public ES3Type_StringArray()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class ES3Type_uint : ES3Type
	{
		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x279C570", Offset = "0x279C570", VA = "0x279C570")]
		public ES3Type_uint()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x279C62C", Offset = "0x279C62C", VA = "0x279C62C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A79")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000139")]
	public class ES3Type_uintArray : ES3ArrayType
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x279C6C8", Offset = "0x279C6C8", VA = "0x279C6C8")]
		public ES3Type_uintArray()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class ES3Type_ulong : ES3Type
	{
		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x279C7A0", Offset = "0x279C7A0", VA = "0x279C7A0")]
		public ES3Type_ulong()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x279C85C", Offset = "0x279C85C", VA = "0x279C85C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200013B")]
	public class ES3Type_ulongArray : ES3ArrayType
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x279C8F8", Offset = "0x279C8F8", VA = "0x279C8F8")]
		public ES3Type_ulongArray()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class ES3Type_ushort : ES3Type
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x279C9D0", Offset = "0x279C9D0", VA = "0x279C9D0")]
		public ES3Type_ushort()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x279CA8C", Offset = "0x279CA8C", VA = "0x279CA8C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A83")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class ES3Type_ushortArray : ES3ArrayType
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x279CB28", Offset = "0x279CB28", VA = "0x279CB28")]
		public ES3Type_ushortArray()
		{
		}
	}
	[Token(Token = "0x200013E")]
	internal class ES3ReflectedComponentType : ES3ComponentType
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x27FCBD8", Offset = "0x27FCBD8", VA = "0x27FCBD8")]
		public ES3ReflectedComponentType(Type type)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x27FCC1C", Offset = "0x27FCC1C", VA = "0x27FCC1C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A88")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013F")]
	internal class ES3ReflectedObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x27FCD6C", Offset = "0x27FCD6C", VA = "0x27FCD6C")]
		public ES3ReflectedObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x27FCDA0", Offset = "0x27FCDA0", VA = "0x27FCDA0", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8B")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000140")]
	internal class ES3ReflectedScriptableObjectType : ES3ScriptableObjectType
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x27FCDA4", Offset = "0x27FCDA4", VA = "0x27FCDA4")]
		public ES3ReflectedScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x27FCDE4", Offset = "0x27FCDE4", VA = "0x27FCDE4", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8F")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000141")]
	internal class ES3ReflectedType : ES3Type
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x27FCDE8", Offset = "0x27FCDE8", VA = "0x27FCDE8")]
		public ES3ReflectedType(Type type)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x27FCE10", Offset = "0x27FCE10", VA = "0x27FCE10")]
		public ES3ReflectedType(Type type, string[] members)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x27FCFD4", Offset = "0x27FCFD4", VA = "0x27FCFD4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A93")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000142")]
	internal class ES3ReflectedUnityObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x27FD368", Offset = "0x27FD368", VA = "0x27FD368")]
		public ES3ReflectedUnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x27FD3A0", Offset = "0x27FD3A0", VA = "0x27FD3A0", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A97")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A98")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000143")]
	internal class ES3ReflectedValueType : ES3Type
	{
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x27FD3A4", Offset = "0x27FD3A4", VA = "0x27FD3A4")]
		public ES3ReflectedValueType(Type type)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x27FD3D8", Offset = "0x27FD3D8", VA = "0x27FD3D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A9C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C294", Offset = "0x104C294")]
	public class ES3Type_BoxCollider : ES3ComponentType
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x27FF520", Offset = "0x27FF520", VA = "0x27FF520")]
		public ES3Type_BoxCollider()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x27FF5D4", Offset = "0x27FF5D4", VA = "0x27FF5D4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C35C", Offset = "0x104C35C")]
	public class ES3Type_BoxCollider2D : ES3ComponentType
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x27FF80C", Offset = "0x27FF80C", VA = "0x27FF80C")]
		public ES3Type_BoxCollider2D()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x27FF8C0", Offset = "0x27FF8C0", VA = "0x27FF8C0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA3")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C434", Offset = "0x104C434")]
	public class ES3Type_Camera : ES3ComponentType
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x27FFB80", Offset = "0x27FFB80", VA = "0x27FFB80")]
		public ES3Type_Camera()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x27FFC34", Offset = "0x27FFC34", VA = "0x27FFC34", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA7")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C6AC", Offset = "0x104C6AC")]
	public class ES3Type_CapsuleCollider : ES3ComponentType
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x2800644", Offset = "0x2800644", VA = "0x2800644")]
		public ES3Type_CapsuleCollider()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x28006F8", Offset = "0x28006F8", VA = "0x28006F8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAB")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class ES3Type_EventSystem : ES3ComponentType
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x280265C", Offset = "0x280265C", VA = "0x280265C")]
		public ES3Type_EventSystem()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x2802710", Offset = "0x2802710", VA = "0x2802710", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAF")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C794", Offset = "0x104C794")]
	public class ES3Type_MeshCollider : ES3ComponentType
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x280D6E8", Offset = "0x280D6E8", VA = "0x280D6E8")]
		public ES3Type_MeshCollider()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x280D79C", Offset = "0x280D79C", VA = "0x280D79C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB3")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class ES3Type_MeshColliderArray : ES3ArrayType
	{
		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x280DA4C", Offset = "0x280DA4C", VA = "0x280DA4C")]
		public ES3Type_MeshColliderArray()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C87C", Offset = "0x104C87C")]
	public class ES3Type_MeshFilter : ES3ComponentType
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x280DB2C", Offset = "0x280DB2C", VA = "0x280DB2C")]
		public ES3Type_MeshFilter()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x280DBE0", Offset = "0x280DBE0", VA = "0x280DBE0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class ES3Type_MeshFilterArray : ES3ArrayType
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x280DCB8", Offset = "0x280DCB8", VA = "0x280DCB8")]
		public ES3Type_MeshFilterArray()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104C8F4", Offset = "0x104C8F4")]
	public class ES3Type_MeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x280DD98", Offset = "0x280DD98", VA = "0x280DD98")]
		public ES3Type_MeshRenderer()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x280DE4C", Offset = "0x280DE4C", VA = "0x280DE4C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ABD")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class ES3Type_MeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x280E4E8", Offset = "0x280E4E8", VA = "0x280E4E8")]
		public ES3Type_MeshRendererArray()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104CA6C", Offset = "0x104CA6C")]
	public class ES3Type_ParticleSystem : ES3ComponentType
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x280F824", Offset = "0x280F824", VA = "0x280F824")]
		public ES3Type_ParticleSystem()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x280F8D8", Offset = "0x280F8D8", VA = "0x280F8D8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC2")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104CC84", Offset = "0x104CC84")]
	public class ES3Type_PolygonCollider2D : ES3ComponentType
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x27923C4", Offset = "0x27923C4", VA = "0x27923C4")]
		public ES3Type_PolygonCollider2D()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x2792478", Offset = "0x2792478", VA = "0x2792478", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC6")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class ES3Type_PolygonCollider2DArray : ES3ArrayType
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x2792920", Offset = "0x2792920", VA = "0x2792920")]
		public ES3Type_PolygonCollider2DArray()
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104CD7C", Offset = "0x104CD7C")]
	public class ES3Type_SphereCollider : ES3ComponentType
	{
		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x2795EA0", Offset = "0x2795EA0", VA = "0x2795EA0")]
		public ES3Type_SphereCollider()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x2795F54", Offset = "0x2795F54", VA = "0x2795F54", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACB")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104CE44", Offset = "0x104CE44")]
	public class ES3Type_Text : ES3ComponentType
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x279733C", Offset = "0x279733C", VA = "0x279733C")]
		public ES3Type_Text()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x27973F0", Offset = "0x27973F0", VA = "0x27973F0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACF")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D02C", Offset = "0x104D02C")]
	public class ES3Type_Transform : ES3ComponentType
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x2798F54", Offset = "0x2798F54", VA = "0x2798F54")]
		public ES3Type_Transform()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x2799008", Offset = "0x2799008", VA = "0x2799008", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD3")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D0D4", Offset = "0x104D0D4")]
	public class ES3Type_AnimationCurve : ES3Type
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x27FE770", Offset = "0x27FE770", VA = "0x27FE770")]
		public ES3Type_AnimationCurve()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x27FE820", Offset = "0x27FE820", VA = "0x27FE820", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D16C", Offset = "0x104D16C")]
	public class ES3Type_AudioClip : ES3UnityObjectType
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x27FE98C", Offset = "0x27FE98C", VA = "0x27FE98C")]
		public ES3Type_AudioClip()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x27FEA40", Offset = "0x27FEA40", VA = "0x27FEA40", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADC")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000ADD")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public class ES3Type_AudioClipArray : ES3ArrayType
	{
		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x27FEC38", Offset = "0x27FEC38", VA = "0x27FEC38")]
		public ES3Type_AudioClipArray()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D224", Offset = "0x104D224")]
	public class ES3Type_BoneWeight : ES3Type
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x27FED18", Offset = "0x27FED18", VA = "0x27FED18")]
		public ES3Type_BoneWeight()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x27FEDC8", Offset = "0x27FEDC8", VA = "0x27FEDC8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class ES3Type_BoneWeightArray : ES3ArrayType
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x27FF138", Offset = "0x27FF138", VA = "0x27FF138")]
		public ES3Type_BoneWeightArray()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D30C", Offset = "0x104D30C")]
	public class ES3Type_Bounds : ES3Type
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x27FF218", Offset = "0x27FF218", VA = "0x27FF218")]
		public ES3Type_Bounds()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x27FF2C8", Offset = "0x27FF2C8", VA = "0x27FF2C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015B")]
	public class ES3Type_BoundsArray : ES3ArrayType
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x27FF440", Offset = "0x27FF440", VA = "0x27FF440")]
		public ES3Type_BoundsArray()
		{
		}
	}
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D394", Offset = "0x104D394")]
	public class ES3Type_CollisionModule : ES3Type
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x2800ABC", Offset = "0x2800ABC", VA = "0x2800ABC")]
		public ES3Type_CollisionModule()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x2800B6C", Offset = "0x2800B6C", VA = "0x2800B6C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D51C", Offset = "0x104D51C")]
	public class ES3Type_Color : ES3Type
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x2801128", Offset = "0x2801128", VA = "0x2801128")]
		public ES3Type_Color()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x28011D8", Offset = "0x28011D8", VA = "0x28011D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015E")]
	public class ES3Type_ColorArray : ES3ArrayType
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x280175C", Offset = "0x280175C", VA = "0x280175C")]
		public ES3Type_ColorArray()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D5C4", Offset = "0x104D5C4")]
	public class ES3Type_Color32 : ES3Type
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x28013B0", Offset = "0x28013B0", VA = "0x28013B0")]
		public ES3Type_Color32()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x2801460", Offset = "0x2801460", VA = "0x2801460", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x2801634", Offset = "0x2801634", VA = "0x2801634")]
		public static bool Equals(Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000160")]
	public class ES3Type_Color32Array : ES3ArrayType
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x280167C", Offset = "0x280167C", VA = "0x280167C")]
		public ES3Type_Color32Array()
		{
		}
	}
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D66C", Offset = "0x104D66C")]
	public class ES3Type_ColorBySpeedModule : ES3Type
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x280183C", Offset = "0x280183C", VA = "0x280183C")]
		public ES3Type_ColorBySpeedModule()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x28018EC", Offset = "0x28018EC", VA = "0x28018EC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AFC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D704", Offset = "0x104D704")]
	public class ES3Type_ColorOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x2801B1C", Offset = "0x2801B1C", VA = "0x2801B1C")]
		public ES3Type_ColorOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x2801BCC", Offset = "0x2801BCC", VA = "0x2801BCC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B01")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D78C", Offset = "0x104D78C")]
	public class ES3Type_EmissionModule : ES3Type
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x28022D8", Offset = "0x28022D8", VA = "0x28022D8")]
		public ES3Type_EmissionModule()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x2802388", Offset = "0x2802388", VA = "0x2802388", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B06")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B07")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D844", Offset = "0x104D844")]
	public class ES3Type_ExternalForcesModule : ES3Type
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x2802718", Offset = "0x2802718", VA = "0x2802718")]
		public ES3Type_ExternalForcesModule()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x28027C8", Offset = "0x28027C8", VA = "0x28027C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D8CC", Offset = "0x104D8CC")]
	public class ES3Type_Flare : ES3Type
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x2802964", Offset = "0x2802964", VA = "0x2802964")]
		public ES3Type_Flare()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x2802A14", Offset = "0x2802A14", VA = "0x2802A14", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B10")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class ES3Type_FlareArray : ES3ArrayType
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x2802AD8", Offset = "0x2802AD8", VA = "0x2802AD8")]
		public ES3Type_FlareArray()
		{
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D944", Offset = "0x104D944")]
	public class ES3Type_Font : ES3UnityObjectType
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x2802BB8", Offset = "0x2802BB8", VA = "0x2802BB8")]
		public ES3Type_Font()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x2802C6C", Offset = "0x2802C6C", VA = "0x2802C6C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B16")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B17")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public class ES3Type_FontArray : ES3ArrayType
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x2802D70", Offset = "0x2802D70", VA = "0x2802D70")]
		public ES3Type_FontArray()
		{
		}
	}
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104D9CC", Offset = "0x104D9CC")]
	public class ES3Type_ForceOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2802E50", Offset = "0x2802E50", VA = "0x2802E50")]
		public ES3Type_ForceOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x2802F00", Offset = "0x2802F00", VA = "0x2802F00", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B1C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B1D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DAC4", Offset = "0x104DAC4")]
	public class ES3Type_GameObject : ES3UnityObjectType
	{
		[Token(Token = "0x40008ED")]
		private const string prefabPropertyName = "es3Prefab";

		[Token(Token = "0x40008EE")]
		private const string transformPropertyName = "transformID";

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2803318", Offset = "0x2803318", VA = "0x2803318")]
		public ES3Type_GameObject()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x28033CC", Offset = "0x28033CC", VA = "0x28033CC", Slot = "13")]
		public override void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000B21")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B22")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2803C50", Offset = "0x2803C50", VA = "0x2803C50")]
		private GameObject CreateNewGameObject(ES3ReferenceMgrBase refMgr, long id)
		{
			return null;
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x2803990", Offset = "0x2803990", VA = "0x2803990")]
		public static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x2803CE8", Offset = "0x2803CE8", VA = "0x2803CE8", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B26")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B27")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200016B")]
	public class ES3Type_GameObjectArray : ES3ArrayType
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x2803CF0", Offset = "0x2803CF0", VA = "0x2803CF0")]
		public ES3Type_GameObjectArray()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DB9C", Offset = "0x104DB9C")]
	public class ES3Type_Gradient : ES3Type
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x2803DD0", Offset = "0x2803DD0", VA = "0x2803DD0")]
		public ES3Type_Gradient()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x2803E80", Offset = "0x2803E80", VA = "0x2803E80", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DC34", Offset = "0x104DC34")]
	public class ES3Type_GradientAlphaKey : ES3Type
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x2803FEC", Offset = "0x2803FEC", VA = "0x2803FEC")]
		public ES3Type_GradientAlphaKey()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x280409C", Offset = "0x280409C", VA = "0x280409C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B31")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	public class ES3Type_GradientAlphaKeyArray : ES3ArrayType
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x28041E0", Offset = "0x28041E0", VA = "0x28041E0")]
		public ES3Type_GradientAlphaKeyArray()
		{
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DCBC", Offset = "0x104DCBC")]
	public class ES3Type_GradientColorKey : ES3Type
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x28042C0", Offset = "0x28042C0", VA = "0x28042C0")]
		public ES3Type_GradientColorKey()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x2804370", Offset = "0x2804370", VA = "0x2804370", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B36")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public class ES3Type_GradientColorKeyArray : ES3ArrayType
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x28044E8", Offset = "0x28044E8", VA = "0x28044E8")]
		public ES3Type_GradientColorKeyArray()
		{
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DD44", Offset = "0x104DD44")]
	public class ES3Type_InheritVelocityModule : ES3Type
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x28045C8", Offset = "0x28045C8", VA = "0x28045C8")]
		public ES3Type_InheritVelocityModule()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x2804678", Offset = "0x2804678", VA = "0x2804678", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DDEC", Offset = "0x104DDEC")]
	public class ES3Type_Keyframe : ES3Type
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2804B28", Offset = "0x2804B28", VA = "0x2804B28")]
		public ES3Type_Keyframe()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2804BD8", Offset = "0x2804BD8", VA = "0x2804BD8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B40")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	public class ES3Type_KeyframeArray : ES3ArrayType
	{
		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x2804DE4", Offset = "0x2804DE4", VA = "0x2804DE4")]
		public ES3Type_KeyframeArray()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DE94", Offset = "0x104DE94")]
	public class ES3Type_LayerMask : ES3Type
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2804EC4", Offset = "0x2804EC4", VA = "0x2804EC4")]
		public ES3Type_LayerMask()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x2804F74", Offset = "0x2804F74", VA = "0x2804F74", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B45")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104DF2C", Offset = "0x104DF2C")]
	public class ES3Type_Light : ES3ComponentType
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x2805088", Offset = "0x2805088", VA = "0x2805088")]
		public ES3Type_Light()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x280513C", Offset = "0x280513C", VA = "0x280513C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B49")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E0F4", Offset = "0x104E0F4")]
	public class ES3Type_LightsModule : ES3Type
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x28058A0", Offset = "0x28058A0", VA = "0x28058A0")]
		public ES3Type_LightsModule()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x2805950", Offset = "0x2805950", VA = "0x2805950", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B4D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E21C", Offset = "0x104E21C")]
	public class ES3Type_LimitVelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x2805E6C", Offset = "0x2805E6C", VA = "0x2805E6C")]
		public ES3Type_LimitVelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x2805F1C", Offset = "0x2805F1C", VA = "0x2805F1C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B52")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E344", Offset = "0x104E344")]
	public class ES3Type_MainModule : ES3Type
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x2806428", Offset = "0x2806428", VA = "0x2806428")]
		public ES3Type_MainModule()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x28064D8", Offset = "0x28064D8", VA = "0x28064D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B57")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E5FC", Offset = "0x104E5FC")]
	public class ES3Type_Material : ES3UnityObjectType
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x2807270", Offset = "0x2807270", VA = "0x2807270")]
		public ES3Type_Material()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x2807324", Offset = "0x2807324", VA = "0x2807324", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B5C")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class ES3Type_MaterialArray : ES3ArrayType
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x280CC90", Offset = "0x280CC90", VA = "0x280CC90")]
		public ES3Type_MaterialArray()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E6B4", Offset = "0x104E6B4")]
	public class ES3Type_Matrix4x4 : ES3Type
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x280CD70", Offset = "0x280CD70", VA = "0x280CD70")]
		public ES3Type_Matrix4x4()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x280CE20", Offset = "0x280CE20", VA = "0x280CE20", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B62")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public class ES3Type_Matrix4x4Array : ES3ArrayType
	{
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x280D050", Offset = "0x280D050", VA = "0x280D050")]
		public ES3Type_Matrix4x4Array()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E75C", Offset = "0x104E75C")]
	public class ES3Type_Mesh : ES3UnityObjectType
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x280D130", Offset = "0x280D130", VA = "0x280D130")]
		public ES3Type_Mesh()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x280D1E4", Offset = "0x280D1E4", VA = "0x280D1E4", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B67")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B68")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E8A4", Offset = "0x104E8A4")]
	public class ES3Type_MinMaxCurve : ES3Type
	{
		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x280E5C8", Offset = "0x280E5C8", VA = "0x280E5C8")]
		public ES3Type_MinMaxCurve()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x280E678", Offset = "0x280E678", VA = "0x280E678", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Preserve]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Preserve]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104E98C", Offset = "0x104E98C")]
	public class ES3Type_MinMaxGradient : ES3Type
	{
		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x280E9A8", Offset = "0x280E9A8", VA = "0x280E9A8")]
		public ES3Type_MinMaxGradient()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x280EA58", Offset = "0x280EA58", VA = "0x280EA58", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B71")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104EA64", Offset = "0x104EA64")]
	public class ES3Type_NoiseModule : ES3Type
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x280ED64", Offset = "0x280ED64", VA = "0x280ED64")]
		public ES3Type_NoiseModule()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x280EE14", Offset = "0x280EE14", VA = "0x280EE14", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B75")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104EC7C", Offset = "0x104EC7C")]
	public class ES3Type_PhysicMaterial : ES3ObjectType
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x2810158", Offset = "0x2810158", VA = "0x2810158")]
		public ES3Type_PhysicMaterial()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x2810208", Offset = "0x2810208", VA = "0x2810208", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B7A")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B7B")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000182")]
	public class ES3Type_PhysicMaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x2792014", Offset = "0x2792014", VA = "0x2792014")]
		public ES3Type_PhysicMaterialArray()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104ED34", Offset = "0x104ED34")]
	public class ES3Type_PhysicsMaterial2D : ES3ObjectType
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x27920EC", Offset = "0x27920EC", VA = "0x27920EC")]
		public ES3Type_PhysicsMaterial2D()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x27921A0", Offset = "0x27921A0", VA = "0x27921A0", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B80")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B81")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000184")]
	public class ES3Type_PhysicsMaterial2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x27922EC", Offset = "0x27922EC", VA = "0x27922EC")]
		public ES3Type_PhysicsMaterial2DArray()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104EDBC", Offset = "0x104EDBC")]
	public class ES3Type_Quaternion : ES3Type
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x27929F8", Offset = "0x27929F8", VA = "0x27929F8")]
		public ES3Type_Quaternion()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x2792AAC", Offset = "0x2792AAC", VA = "0x2792AAC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B86")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000186")]
	public class ES3Type_QuaternionArray : ES3ArrayType
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x2792C84", Offset = "0x2792C84", VA = "0x2792C84")]
		public ES3Type_QuaternionArray()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104EE64", Offset = "0x104EE64")]
	public class ES3Type_Rect : ES3Type
	{
		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x2792D5C", Offset = "0x2792D5C", VA = "0x2792D5C")]
		public ES3Type_Rect()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x2792E10", Offset = "0x2792E10", VA = "0x2792E10", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B8B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104EF0C", Offset = "0x104EF0C")]
	public class ES3Type_RectTransform : ES3ComponentType
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x279300C", Offset = "0x279300C", VA = "0x279300C")]
		public ES3Type_RectTransform()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x27930C0", Offset = "0x27930C0", VA = "0x27930C0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B8F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F034", Offset = "0x104F034")]
	public class ES3Type_RotationBySpeedModule : ES3Type
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x2793594", Offset = "0x2793594", VA = "0x2793594")]
		public ES3Type_RotationBySpeedModule()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x2793648", Offset = "0x2793648", VA = "0x2793648", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B93")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F12C", Offset = "0x104F12C")]
	public class ES3Type_RotationOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x2793A98", Offset = "0x2793A98", VA = "0x2793A98")]
		public ES3Type_RotationOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x2793B4C", Offset = "0x2793B4C", VA = "0x2793B4C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B98")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B99")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F214", Offset = "0x104F214")]
	public class ES3Type_Shader : ES3Type
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x2793F24", Offset = "0x2793F24", VA = "0x2793F24")]
		public ES3Type_Shader()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x2793FD8", Offset = "0x2793FD8", VA = "0x2793FD8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B9D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class ES3Type_ShaderArray : ES3ArrayType
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x2794140", Offset = "0x2794140", VA = "0x2794140")]
		public ES3Type_ShaderArray()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F29C", Offset = "0x104F29C")]
	public class ES3Type_ShapeModule : ES3Type
	{
		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x2794218", Offset = "0x2794218", VA = "0x2794218")]
		public ES3Type_ShapeModule()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x27942CC", Offset = "0x27942CC", VA = "0x27942CC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BA3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F434", Offset = "0x104F434")]
	public class ES3Type_SizeBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x2794A40", Offset = "0x2794A40", VA = "0x2794A40")]
		public ES3Type_SizeBySpeedModule()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x2794AF4", Offset = "0x2794AF4", VA = "0x2794AF4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BA8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F54C", Offset = "0x104F54C")]
	public class ES3Type_SizeOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x2794FE4", Offset = "0x2794FE4", VA = "0x2794FE4")]
		public ES3Type_SizeOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x2795098", Offset = "0x2795098", VA = "0x2795098", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BAD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F654", Offset = "0x104F654")]
	public class ES3Type_SkinnedMeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x2795514", Offset = "0x2795514", VA = "0x2795514")]
		public ES3Type_SkinnedMeshRenderer()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x27955C8", Offset = "0x27955C8", VA = "0x27955C8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BB2")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class ES3Type_SkinnedMeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x2795DC8", Offset = "0x2795DC8", VA = "0x2795DC8")]
		public ES3Type_SkinnedMeshRendererArray()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F82C", Offset = "0x104F82C")]
	public class ES3Type_Sprite : ES3UnityObjectType
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x2796248", Offset = "0x2796248", VA = "0x2796248")]
		public ES3Type_Sprite()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x2796338", Offset = "0x2796338", VA = "0x2796338", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BB7")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000BB8")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104F8E4", Offset = "0x104F8E4")]
	public class ES3Type_SpriteRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x2796620", Offset = "0x2796620", VA = "0x2796620")]
		public ES3Type_SpriteRenderer()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x27966D4", Offset = "0x27966D4", VA = "0x27966D4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BBC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class ES3Type_SpriteRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x2796E6C", Offset = "0x2796E6C", VA = "0x2796E6C")]
		public ES3Type_SpriteRendererArray()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FA8C", Offset = "0x104FA8C")]
	public class ES3Type_SubEmittersModule : ES3Type
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x279701C", Offset = "0x279701C", VA = "0x279701C")]
		public ES3Type_SubEmittersModule()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x27970D0", Offset = "0x27970D0", VA = "0x27970D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BC1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FB24", Offset = "0x104FB24")]
	public class ES3Type_Texture : ES3Type
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x2797A00", Offset = "0x2797A00", VA = "0x2797A00")]
		public ES3Type_Texture()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x2797AB4", Offset = "0x2797AB4", VA = "0x2797AB4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BC6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000BC7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000197")]
	public class ES3Type_TextureArray : ES3ArrayType
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x2798184", Offset = "0x2798184", VA = "0x2798184")]
		public ES3Type_TextureArray()
		{
		}
	}
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FBDC", Offset = "0x104FBDC")]
	public class ES3Type_Texture2D : ES3UnityObjectType
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x2797C24", Offset = "0x2797C24", VA = "0x2797C24")]
		public ES3Type_Texture2D()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x2797CE4", Offset = "0x2797CE4", VA = "0x2797CE4", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BCC")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000BCD")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000199")]
	public class ES3Type_Texture2DArray : ES3ArrayType
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x27980AC", Offset = "0x27980AC", VA = "0x27980AC")]
		public ES3Type_Texture2DArray()
		{
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FC94", Offset = "0x104FC94")]
	public class ES3Type_TextureSheetAnimationModule : ES3Type
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x279825C", Offset = "0x279825C", VA = "0x279825C")]
		public ES3Type_TextureSheetAnimationModule()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x2798310", Offset = "0x2798310", VA = "0x2798310", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BD2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FDDC", Offset = "0x104FDDC")]
	public class ES3Type_TrailModule : ES3Type
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x2798844", Offset = "0x2798844", VA = "0x2798844")]
		public ES3Type_TrailModule()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x27988F8", Offset = "0x27988F8", VA = "0x27988F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BD7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FF34", Offset = "0x104FF34")]
	public class ES3Type_TriggerModule : ES3Type
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x27991AC", Offset = "0x27991AC", VA = "0x27991AC")]
		public ES3Type_TriggerModule()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x2799260", Offset = "0x2799260", VA = "0x2799260", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BDC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x104FFFC", Offset = "0x104FFFC")]
	public class ES3Type_Vector2 : ES3Type
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x2799744", Offset = "0x2799744", VA = "0x2799744")]
		public ES3Type_Vector2()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x27997F8", Offset = "0x27997F8", VA = "0x27997F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BE1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019E")]
	public class ES3Type_Vector2Array : ES3ArrayType
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x279993C", Offset = "0x279993C", VA = "0x279993C")]
		public ES3Type_Vector2Array()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x1050084", Offset = "0x1050084")]
	public class ES3Type_Vector2Int : ES3Type
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x2799A14", Offset = "0x2799A14", VA = "0x2799A14")]
		public ES3Type_Vector2Int()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x2799AC8", Offset = "0x2799AC8", VA = "0x2799AC8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BE6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A0")]
	public class ES3Type_Vector2IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x2799C34", Offset = "0x2799C34", VA = "0x2799C34")]
		public ES3Type_Vector2IntArray()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x105010C", Offset = "0x105010C")]
	public class ES3Type_Vector3 : ES3Type
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x2799D0C", Offset = "0x2799D0C", VA = "0x2799D0C")]
		public ES3Type_Vector3()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x2799DC0", Offset = "0x2799DC0", VA = "0x2799DC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BEB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A2")]
	public class ES3Type_Vector3Array : ES3ArrayType
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x2799F50", Offset = "0x2799F50", VA = "0x2799F50")]
		public ES3Type_Vector3Array()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x10501A4", Offset = "0x10501A4")]
	public class ES3Type_Vector3Int : ES3Type
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x279A028", Offset = "0x279A028", VA = "0x279A028")]
		public ES3Type_Vector3Int()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x279A0DC", Offset = "0x279A0DC", VA = "0x279A0DC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BF0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A4")]
	public class ES3Type_Vector3IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x279A2A4", Offset = "0x279A2A4", VA = "0x279A2A4")]
		public ES3Type_Vector3IntArray()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x105023C", Offset = "0x105023C")]
	public class ES3Type_Vector4 : ES3Type
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x279A37C", Offset = "0x279A37C", VA = "0x279A37C")]
		public ES3Type_Vector4()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x279A430", Offset = "0x279A430", VA = "0x279A430", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BF5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x279A604", Offset = "0x279A604", VA = "0x279A604")]
		public static bool Equals(Vector4 a, Vector4 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A6")]
	public class ES3Type_Vector4Array : ES3ArrayType
	{
		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x279A754", Offset = "0x279A754", VA = "0x279A754")]
		public ES3Type_Vector4Array()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x10502E4", Offset = "0x10502E4")]
	public class ES3Type_VelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x279A82C", Offset = "0x279A82C", VA = "0x279A82C")]
		public ES3Type_VelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x279A8E0", Offset = "0x279A8E0", VA = "0x279A8E0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BFB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
}
namespace ES3Internal
{
	[Token(Token = "0x20001A8")]
	public static class ES3Hash
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1CB0728", Offset = "0x1CB0728", VA = "0x1CB0728")]
		public static string SHA1Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A9")]
	public abstract class EncryptionAlgorithm
	{
		[Token(Token = "0x6000BFF")]
		public abstract void Encrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000C00")]
		public abstract void Decrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1CAFD50", Offset = "0x1CAFD50", VA = "0x1CAFD50")]
		protected static void CopyStream(Stream input, Stream output, int bufferSize)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1CB0238", Offset = "0x1CB0238", VA = "0x1CB0238")]
		protected EncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class AESEncryptionAlgorithm : EncryptionAlgorithm
	{
		[Token(Token = "0x400092D")]
		private const int ivSize = 16;

		[Token(Token = "0x400092E")]
		private const int keySize = 16;

		[Token(Token = "0x400092F")]
		private const int pwIterations = 100;

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1CAF92C", Offset = "0x1CAF92C", VA = "0x1CAF92C", Slot = "4")]
		public override void Encrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1CAFE38", Offset = "0x1CAFE38", VA = "0x1CAFE38", Slot = "5")]
		public override void Decrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1CB0230", Offset = "0x1CB0230", VA = "0x1CB0230")]
		public AESEncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class UnbufferedCryptoStream : MemoryStream
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Stream stream;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool isReadStream;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string password;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int bufferSize;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EncryptionAlgorithm alg;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1CB8234", Offset = "0x1CB8234", VA = "0x1CB8234")]
		public UnbufferedCryptoStream(Stream stream, bool isReadStream, string password, int bufferSize, EncryptionAlgorithm alg)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1CB9AC8", Offset = "0x1CB9AC8", VA = "0x1CB9AC8", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public struct ES3Data
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ES3Type type;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] bytes;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1281D64", Offset = "0x1281D64", VA = "0x1281D64")]
		public ES3Data(Type type, byte[] bytes)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1281D6C", Offset = "0x1281D6C", VA = "0x1281D6C")]
		public ES3Data(ES3Type type, byte[] bytes)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public static class ES3IO
	{
		[Token(Token = "0x200028C")]
		public enum ES3FileMode
		{
			[Token(Token = "0x4000C66")]
			Read,
			[Token(Token = "0x4000C67")]
			Write,
			[Token(Token = "0x4000C68")]
			Append
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1CA8FD8", Offset = "0x1CA8FD8", VA = "0x1CA8FD8")]
		public static DateTime GetTimestamp(string filePath)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1CA5824", Offset = "0x1CA5824", VA = "0x1CA5824")]
		public static string GetExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1CA6620", Offset = "0x1CA6620", VA = "0x1CA6620")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1CA6954", Offset = "0x1CA6954", VA = "0x1CA6954")]
		public static bool FileExists(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1CA6C70", Offset = "0x1CA6C70", VA = "0x1CA6C70")]
		public static void MoveFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1CA695C", Offset = "0x1CA695C", VA = "0x1CA695C")]
		public static void CopyFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1CA6F78", Offset = "0x1CA6F78", VA = "0x1CA6F78")]
		public static void MoveDirectory(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1CB0700", Offset = "0x1CB0700", VA = "0x1CB0700")]
		public static void CreateDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1CA6F30", Offset = "0x1CA6F30", VA = "0x1CA6F30")]
		public static bool DirectoryExists(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1CB05F4", Offset = "0x1CB05F4", VA = "0x1CB05F4")]
		public static string GetDirectoryPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1CA876C", Offset = "0x1CA876C", VA = "0x1CA876C")]
		public static string[] GetDirectories(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1CA6F38", Offset = "0x1CA6F38", VA = "0x1CA6F38")]
		public static void DeleteDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1CA8420", Offset = "0x1CA8420", VA = "0x1CA8420")]
		public static string[] GetFiles(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1CB08C0", Offset = "0x1CB08C0", VA = "0x1CB08C0")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1CB08C8", Offset = "0x1CB08C8", VA = "0x1CB08C8")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1CA4C2C", Offset = "0x1CA4C2C", VA = "0x1CA4C2C")]
		public static void CommitBackup(ES3Settings settings)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class ES3Prefab : MonoBehaviour
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long prefabId;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3RefIdDictionary localRefs;

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1CB3CB8", Offset = "0x1CB3CB8", VA = "0x1CB3CB8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1CB408C", Offset = "0x1CB408C", VA = "0x1CB408C")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1CB410C", Offset = "0x1CB410C", VA = "0x1CB410C")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1CB420C", Offset = "0x1CB420C", VA = "0x1CB420C")]
		public Dictionary<long, long> GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1CB43D0", Offset = "0x1CB43D0", VA = "0x1CB43D0")]
		public void ApplyReferences(Dictionary<long, long> localToGlobal)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1CB41B0", Offset = "0x1CB41B0", VA = "0x1CB41B0")]
		public static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1CB47DC", Offset = "0x1CB47DC", VA = "0x1CB47DC")]
		public ES3Prefab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AF")]
	[DisallowMultipleComponent]
	public abstract class ES3ReferenceMgrBase : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x10515F8", Offset = "0x10515F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__26_0;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, long> <>9__26_1;

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x1CB58F8", Offset = "0x1CB58F8", VA = "0x1CB58F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x1CB5900", Offset = "0x1CB5900", VA = "0x1CB5900")]
			internal bool <RemoveNullValues>b__26_0(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x1CB596C", Offset = "0x1CB596C", VA = "0x1CB596C")]
			internal long <RemoveNullValues>b__26_1(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(long);
			}
		}

		[Token(Token = "0x4000939")]
		public const string referencePropertyName = "_ES3Ref";

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ES3ReferenceMgrBase _current;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static System.Random rng;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool openReferences;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool openPrefabs;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public ES3IdRefDictionary idRef;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES3RefIdDictionary _refId;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ES3Prefab> prefabs;

		[Token(Token = "0x170000A7")]
		public static ES3ReferenceMgrBase Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x1CB3E58", Offset = "0x1CB3E58", VA = "0x1CB3E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public bool IsInitialised
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x1CB491C", Offset = "0x1CB491C", VA = "0x1CB491C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public ES3RefIdDictionary refId
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x1CB4980", Offset = "0x1CB4980", VA = "0x1CB4980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x1CB4B08", Offset = "0x1CB4B08", VA = "0x1CB4B08")]
			set
			{
			}
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1CB4B10", Offset = "0x1CB4B10", VA = "0x1CB4B10")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1CB4CF8", Offset = "0x1CB4CF8", VA = "0x1CB4CF8")]
		public void Merge(ES3ReferenceMgrBase otherMgr)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1CB4EC4", Offset = "0x1CB4EC4", VA = "0x1CB4EC4")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1CB4F48", Offset = "0x1CB4F48", VA = "0x1CB4F48")]
		public UnityEngine.Object Get(long id)
		{
			return null;
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1CB4FD8", Offset = "0x1CB4FD8", VA = "0x1CB4FD8")]
		public ES3Prefab GetPrefab(long id)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1CB50B0", Offset = "0x1CB50B0", VA = "0x1CB50B0")]
		public long GetPrefab(ES3Prefab prefab)
		{
			return default(long);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1CB3FD4", Offset = "0x1CB3FD4", VA = "0x1CB3FD4")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1CB459C", Offset = "0x1CB459C", VA = "0x1CB459C")]
		public void Add(UnityEngine.Object obj, long id)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1CB51B8", Offset = "0x1CB51B8", VA = "0x1CB51B8")]
		public void AddPrefab(ES3Prefab prefab)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1CB5250", Offset = "0x1CB5250", VA = "0x1CB5250")]
		public void Remove(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1CB5308", Offset = "0x1CB5308", VA = "0x1CB5308")]
		public void Remove(long referenceID)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1CB53BC", Offset = "0x1CB53BC", VA = "0x1CB53BC")]
		public void RemoveNullValues()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1CB5644", Offset = "0x1CB5644", VA = "0x1CB5644")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1CB56B8", Offset = "0x1CB56B8", VA = "0x1CB56B8")]
		public bool Contains(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1CB5724", Offset = "0x1CB5724", VA = "0x1CB5724")]
		public bool Contains(long referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1CB578C", Offset = "0x1CB578C", VA = "0x1CB578C")]
		public void ChangeId(long oldId, long newId)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1CB4660", Offset = "0x1CB4660", VA = "0x1CB4660")]
		internal static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1CB5804", Offset = "0x1CB5804", VA = "0x1CB5804")]
		protected ES3ReferenceMgrBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class ES3IdRefDictionary : ES3SerializableDictionary<long, UnityEngine.Object>
	{
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1CB08D0", Offset = "0x1CB08D0", VA = "0x1CB08D0", Slot = "44")]
		protected override bool KeysAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1CB08DC", Offset = "0x1CB08DC", VA = "0x1CB08DC", Slot = "45")]
		protected override bool ValuesAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1CB0954", Offset = "0x1CB0954", VA = "0x1CB0954")]
		public ES3IdRefDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x10503DC", Offset = "0x10503DC")]
	public class ES3RefIdDictionary : ES3SerializableDictionary<UnityEngine.Object, long>
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1CB4898", Offset = "0x1CB4898", VA = "0x1CB4898", Slot = "44")]
		protected override bool KeysAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1CB4910", Offset = "0x1CB4910", VA = "0x1CB4910", Slot = "45")]
		protected override bool ValuesAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1CB4848", Offset = "0x1CB4848", VA = "0x1CB4848")]
		public ES3RefIdDictionary()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public static class ES3Reflection
	{
		[Token(Token = "0x200028E")]
		public struct ES3ReflectedMember
		{
			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FieldInfo fieldInfo;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private PropertyInfo propertyInfo;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isProperty;

			[Token(Token = "0x1700010B")]
			public bool IsNull
			{
				[Token(Token = "0x6000EF9")]
				[Address(RVA = "0x1281DB0", Offset = "0x1281DB0", VA = "0x1281DB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700010C")]
			public string Name
			{
				[Token(Token = "0x6000EFA")]
				[Address(RVA = "0x1281DB8", Offset = "0x1281DB8", VA = "0x1281DB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			public Type MemberType
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0x1281DC0", Offset = "0x1281DC0", VA = "0x1281DC0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			public bool IsPublic
			{
				[Token(Token = "0x6000EFC")]
				[Address(RVA = "0x1281DC8", Offset = "0x1281DC8", VA = "0x1281DC8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700010F")]
			public bool IsProtected
			{
				[Token(Token = "0x6000EFD")]
				[Address(RVA = "0x1281DD0", Offset = "0x1281DD0", VA = "0x1281DD0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1281DD8", Offset = "0x1281DD8", VA = "0x1281DD8")]
			public ES3ReflectedMember(object fieldPropertyInfo)
			{
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1281DE0", Offset = "0x1281DE0", VA = "0x1281DE0")]
			public void SetValue(object obj, object value)
			{
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1281DE8", Offset = "0x1281DE8", VA = "0x1281DE8")]
			public object GetValue(object obj)
			{
				return null;
			}
		}

		[Token(Token = "0x200028F")]
		public class ES3ReflectedMethod
		{
			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MethodInfo method;

			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x1CB78FC", Offset = "0x1CB78FC", VA = "0x1CB78FC")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
			{
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1CB80CC", Offset = "0x1CB80CC", VA = "0x1CB80CC")]
			public object Invoke(object obj, [Optional] object[] parameters)
			{
				return null;
			}
		}

		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051608", Offset = "0x1051608")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type derivedType;

			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1CB780C", Offset = "0x1CB780C", VA = "0x1CB780C")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x1CB7E60", Offset = "0x1CB7E60", VA = "0x1CB7E60")]
			internal bool <GetDerivedTypes>b__2(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051618", Offset = "0x1051618")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__24_0;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Assembly, Type, <>f__AnonymousType0<Assembly, Type>> <>9__24_1;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<Assembly, Type>, Type> <>9__24_3;

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x1CB7D6C", Offset = "0x1CB7D6C", VA = "0x1CB7D6C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x1CB7D74", Offset = "0x1CB7D74", VA = "0x1CB7D74")]
			internal IEnumerable<Type> <GetDerivedTypes>b__24_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x1CB7D98", Offset = "0x1CB7D98", VA = "0x1CB7D98")]
			internal <>f__AnonymousType0<Assembly, Type> <GetDerivedTypes>b__24_1(Assembly assembly, Type type)
			{
				return null;
			}

			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x1CB7E14", Offset = "0x1CB7E14", VA = "0x1CB7E14")]
			internal Type <GetDerivedTypes>b__24_3(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return null;
			}
		}

		[Token(Token = "0x4000941")]
		public const string memberFieldPrefix = "m_";

		[Token(Token = "0x4000942")]
		public const string componentTagFieldName = "tag";

		[Token(Token = "0x4000943")]
		public const string componentNameFieldName = "name";

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Type serializableAttributeType;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Type serializeFieldAttributeType;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Type obsoleteAttributeType;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Type nonSerializedAttributeType;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Assembly[] _assemblies;

		[Token(Token = "0x170000AA")]
		private static Assembly[] Assemblies
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x1CB59B0", Offset = "0x1CB59B0", VA = "0x1CB59B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1CB5C98", Offset = "0x1CB5C98", VA = "0x1CB5C98")]
		public static Type[] GetElementTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1CB5E5C", Offset = "0x1CB5E5C", VA = "0x1CB5E5C")]
		public static List<FieldInfo> GetSerializableFields(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1CB6520", Offset = "0x1CB6520", VA = "0x1CB6520")]
		public static List<PropertyInfo> GetSerializableProperties(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1CB61F0", Offset = "0x1CB61F0", VA = "0x1CB61F0")]
		public static bool TypeIsSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1CB6BE8", Offset = "0x1CB6BE8", VA = "0x1CB6BE8")]
		public static object CreateInstance(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1CB6D58", Offset = "0x1CB6D58", VA = "0x1CB6D58")]
		public static object CreateInstance(Type type, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1CB6EDC", Offset = "0x1CB6EDC", VA = "0x1CB6EDC")]
		public static Array ArrayCreateInstance(Type type, int length)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1CB6F68", Offset = "0x1CB6F68", VA = "0x1CB6F68")]
		public static Array ArrayCreateInstance(Type type, int[] dimensions)
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1CB6F70", Offset = "0x1CB6F70", VA = "0x1CB6F70")]
		public static Type MakeGenericType(Type type, Type genericParam)
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1CB7030", Offset = "0x1CB7030", VA = "0x1CB7030")]
		public static ES3ReflectedMember[] GetSerializableMembers(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1CB73A0", Offset = "0x1CB73A0", VA = "0x1CB73A0")]
		public static ES3ReflectedMember GetES3ReflectedProperty(Type type, string propertyName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1CB7458", Offset = "0x1CB7458", VA = "0x1CB7458")]
		public static ES3ReflectedMember GetES3ReflectedMember(Type type, string fieldName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000C4B")]
		public static IList<T> GetInstances<T>()
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1CB7520", Offset = "0x1CB7520", VA = "0x1CB7520")]
		public static IList<Type> GetDerivedTypes(Type derivedType)
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1CB61D0", Offset = "0x1CB61D0", VA = "0x1CB61D0")]
		public static bool IsAssignableFrom(Type a, Type b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1CB7814", Offset = "0x1CB7814", VA = "0x1CB7814")]
		public static Type GetGenericTypeDefinition(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1CB5E1C", Offset = "0x1CB5E1C", VA = "0x1CB5E1C")]
		public static Type[] GetGenericArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1CB7834", Offset = "0x1CB7834", VA = "0x1CB7834")]
		public static int GetArrayRank(Type type)
		{
			return default(int);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1CB7854", Offset = "0x1CB7854", VA = "0x1CB7854")]
		public static string GetAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1CB7874", Offset = "0x1CB7874", VA = "0x1CB7874")]
		public static ES3ReflectedMethod GetMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1CB6ADC", Offset = "0x1CB6ADC", VA = "0x1CB6ADC")]
		public static bool TypeIsArray(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1CB5E3C", Offset = "0x1CB5E3C", VA = "0x1CB5E3C")]
		public static Type GetElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1CB7978", Offset = "0x1CB7978", VA = "0x1CB7978")]
		public static bool IsAbstract(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1CB7990", Offset = "0x1CB7990", VA = "0x1CB7990")]
		public static bool IsInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1CB5DFC", Offset = "0x1CB5DFC", VA = "0x1CB5DFC")]
		public static bool IsGenericType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1CB6AC4", Offset = "0x1CB6AC4", VA = "0x1CB6AC4")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1CB79A8", Offset = "0x1CB79A8", VA = "0x1CB79A8")]
		public static bool IsEnum(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1CB6AF4", Offset = "0x1CB6AF4", VA = "0x1CB6AF4")]
		public static bool HasParameterlessConstructor(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1CB79C8", Offset = "0x1CB79C8", VA = "0x1CB79C8")]
		public static ConstructorInfo GetParameterlessConstructor(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1CB7A44", Offset = "0x1CB7A44", VA = "0x1CB7A44")]
		public static string GetShortAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1CB743C", Offset = "0x1CB743C", VA = "0x1CB743C")]
		public static PropertyInfo GetProperty(Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1CB74FC", Offset = "0x1CB74FC", VA = "0x1CB74FC")]
		public static FieldInfo GetField(Type type, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1CB69C8", Offset = "0x1CB69C8", VA = "0x1CB69C8")]
		public static bool IsPrimitive(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1CB61C4", Offset = "0x1CB61C4", VA = "0x1CB61C4")]
		public static bool AttributeIsDefined(MemberInfo info, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1CB7B28", Offset = "0x1CB7B28", VA = "0x1CB7B28")]
		public static bool AttributeIsDefined(Type type, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1CB7B4C", Offset = "0x1CB7B4C", VA = "0x1CB7B4C")]
		public static bool ImplementsInterface(Type type, Type interfaceType)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	public abstract class ES3SerializableDictionary<TKey, TVal> : Dictionary<TKey, TVal>, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051628", Offset = "0x1051628")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, bool> <>9__6_0;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, TKey> <>9__6_1;

			[Token(Token = "0x6000F0B")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F0C")]
			internal bool <RemoveNullValues>b__6_0(KeyValuePair<TKey, TVal> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F0D")]
			internal TKey <RemoveNullValues>b__6_1(KeyValuePair<TKey, TVal> pair)
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _Keys;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TVal> _Values;

		[Token(Token = "0x6000C64")]
		protected abstract bool KeysAreEqual(TKey a, TKey b);

		[Token(Token = "0x6000C65")]
		protected abstract bool ValuesAreEqual(TVal a, TVal b);

		[Token(Token = "0x6000C66")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000C67")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000C68")]
		public int RemoveNullValues()
		{
			return default(int);
		}

		[Token(Token = "0x6000C69")]
		public bool ChangeKey(TKey oldKey, TKey newKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		protected ES3SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class ES3JSONReader : ES3Reader
	{
		[Token(Token = "0x400094C")]
		private const char endOfStreamChar = '\uffff';

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamReader baseReader;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1CB09A4", Offset = "0x1CB09A4", VA = "0x1CB09A4")]
		internal ES3JSONReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1CB0BA8", Offset = "0x1CB0BA8", VA = "0x1CB0BA8", Slot = "20")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1CB10A8", Offset = "0x1CB10A8", VA = "0x1CB10A8", Slot = "21")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1CB1244", Offset = "0x1CB1244", VA = "0x1CB1244", Slot = "22")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1CB1254", Offset = "0x1CB1254", VA = "0x1CB1254", Slot = "26")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1CB1500", Offset = "0x1CB1500", VA = "0x1CB1500", Slot = "27")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1CB1508", Offset = "0x1CB1508", VA = "0x1CB1508", Slot = "28")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1CB1518", Offset = "0x1CB1518", VA = "0x1CB1518", Slot = "29")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1CB151C", Offset = "0x1CB151C", VA = "0x1CB151C", Slot = "30")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1CB155C", Offset = "0x1CB155C", VA = "0x1CB155C", Slot = "31")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1CB1564", Offset = "0x1CB1564", VA = "0x1CB1564", Slot = "32")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1CB1568", Offset = "0x1CB1568", VA = "0x1CB1568", Slot = "33")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1CB164C", Offset = "0x1CB164C", VA = "0x1CB164C", Slot = "34")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1CB1654", Offset = "0x1CB1654", VA = "0x1CB1654", Slot = "35")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1CB1658", Offset = "0x1CB1658", VA = "0x1CB1658", Slot = "36")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1CB1698", Offset = "0x1CB1698", VA = "0x1CB1698", Slot = "37")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1CB177C", Offset = "0x1CB177C", VA = "0x1CB177C", Slot = "24")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1CB1810", Offset = "0x1CB1810", VA = "0x1CB1810")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1CB18A8", Offset = "0x1CB18A8", VA = "0x1CB18A8")]
		private void ReadString(StreamWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1CB19FC", Offset = "0x1CB19FC", VA = "0x1CB19FC", Slot = "23")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1CB1998", Offset = "0x1CB1998", VA = "0x1CB1998")]
		private char ReadOrSkipChar(StreamWriter writer, bool skip)
		{
			return default(char);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1CB0DB4", Offset = "0x1CB0DB4", VA = "0x1CB0DB4")]
		private char ReadCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1CB125C", Offset = "0x1CB125C", VA = "0x1CB125C")]
		private bool ReadNullOrCharIgnoreWhitespace(char expectedChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1CB0EB0", Offset = "0x1CB0EB0", VA = "0x1CB0EB0")]
		private char ReadCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1CB1F8C", Offset = "0x1CB1F8C", VA = "0x1CB1F8C")]
		private bool ReadQuotationMarkOrNullIgnoreWhitespace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1CB215C", Offset = "0x1CB215C", VA = "0x1CB215C")]
		private char PeekCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1CB0D20", Offset = "0x1CB0D20", VA = "0x1CB0D20")]
		private char PeekCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1CB2354", Offset = "0x1CB2354", VA = "0x1CB2354")]
		private void SkipWhiteSpace()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1CB0AD8", Offset = "0x1CB0AD8", VA = "0x1CB0AD8")]
		private void SkipOpeningBraceOfFile()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1CB1F54", Offset = "0x1CB1F54", VA = "0x1CB1F54")]
		private static bool IsWhiteSpace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1CB1EE0", Offset = "0x1CB1EE0", VA = "0x1CB1EE0")]
		private static bool IsOpeningBrace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1CB1EF4", Offset = "0x1CB1EF4", VA = "0x1CB1EF4")]
		private static bool IsEndOfValue(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1CB0DA0", Offset = "0x1CB0DA0", VA = "0x1CB0DA0")]
		private static bool IsTerminator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1CB0E84", Offset = "0x1CB0E84", VA = "0x1CB0E84")]
		private static bool IsQuotationMark(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1CB23D4", Offset = "0x1CB23D4", VA = "0x1CB23D4")]
		private static bool IsEndOfStream(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1CB23E4", Offset = "0x1CB23E4", VA = "0x1CB23E4")]
		private string GetValueString()
		{
			return null;
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1CB250C", Offset = "0x1CB250C", VA = "0x1CB250C", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x1CB26C8", Offset = "0x1CB26C8", VA = "0x1CB26C8", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1CB274C", Offset = "0x1CB274C", VA = "0x1CB274C", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x1CB27D0", Offset = "0x1CB27D0", VA = "0x1CB27D0", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1CB27E8", Offset = "0x1CB27E8", VA = "0x1CB27E8", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1CB2860", Offset = "0x1CB2860", VA = "0x1CB2860", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1CB290C", Offset = "0x1CB290C", VA = "0x1CB290C", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1CB29B8", Offset = "0x1CB29B8", VA = "0x1CB29B8", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1CB29D0", Offset = "0x1CB29D0", VA = "0x1CB29D0", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1CB29E8", Offset = "0x1CB29E8", VA = "0x1CB29E8", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1CB2A00", Offset = "0x1CB2A00", VA = "0x1CB2A00", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1CB2A1C", Offset = "0x1CB2A1C", VA = "0x1CB2A1C", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1CB2A38", Offset = "0x1CB2A38", VA = "0x1CB2A38", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1CB2A54", Offset = "0x1CB2A54", VA = "0x1CB2A54", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1CB2A70", Offset = "0x1CB2A70", VA = "0x1CB2A70", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1CB2AF4", Offset = "0x1CB2AF4", VA = "0x1CB2AF4", Slot = "25")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class ES3DefaultSettings : MonoBehaviour
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ES3SerializableSettings settings;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool addMgrToSceneAutomatically;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoUpdateReferences;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1CB0410", Offset = "0x1CB0410", VA = "0x1CB0410")]
		public ES3DefaultSettings()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public enum ES3FileMode
	{
		[Token(Token = "0x4000952")]
		Read,
		[Token(Token = "0x4000953")]
		Write,
		[Token(Token = "0x4000954")]
		Append
	}
	[Token(Token = "0x20001B7")]
	public class ES3FileStream : FileStream
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isDisposed;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1CB0420", Offset = "0x1CB0420", VA = "0x1CB0420")]
		public ES3FileStream(string path, ES3FileMode fileMode, int bufferSize, bool useAsync)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1CB04F4", Offset = "0x1CB04F4", VA = "0x1CB04F4")]
		protected static string GetPath(string path, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1CB05C4", Offset = "0x1CB05C4", VA = "0x1CB05C4")]
		protected static FileMode GetFileMode(ES3FileMode fileMode)
		{
			return default(FileMode);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1CB05E4", Offset = "0x1CB05E4", VA = "0x1CB05E4")]
		protected static FileAccess GetFileAccess(ES3FileMode fileMode)
		{
			return default(FileAccess);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1CB0708", Offset = "0x1CB0708", VA = "0x1CB0708", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	internal class ES3PlayerPrefsStream : MemoryStream
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string path;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool append;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isWriteStream;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDisposed;

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1CB3894", Offset = "0x1CB3894", VA = "0x1CB3894")]
		public ES3PlayerPrefsStream(string path)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1CB39C4", Offset = "0x1CB39C4", VA = "0x1CB39C4")]
		public ES3PlayerPrefsStream(string path, int bufferSize, bool append = false)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1CB38D8", Offset = "0x1CB38D8", VA = "0x1CB38D8")]
		private static byte[] GetData(string path, bool isWriteStream)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1CB3A10", Offset = "0x1CB3A10", VA = "0x1CB3A10", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001B9")]
	internal class ES3ResourcesStream : MemoryStream
	{
		[Token(Token = "0x170000AB")]
		public bool Exists
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x1CB80E8", Offset = "0x1CB80E8", VA = "0x1CB80E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1CB810C", Offset = "0x1CB810C", VA = "0x1CB810C")]
		public ES3ResourcesStream(string path)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1CB813C", Offset = "0x1CB813C", VA = "0x1CB813C")]
		private static byte[] GetData(string path)
		{
			return null;
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1CB8228", Offset = "0x1CB8228", VA = "0x1CB8228", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public static class ES3Stream
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1CA4950", Offset = "0x1CA4950", VA = "0x1CA4950")]
		public static Stream CreateStream(ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1CAF484", Offset = "0x1CAF484", VA = "0x1CAF484")]
		public static Stream CreateStream(Stream stream, ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BB")]
	public class ES3Member
	{
		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isProperty;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Reflection.ES3ReflectedMember reflectedMember;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useReflection;

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1CB3768", Offset = "0x1CB3768", VA = "0x1CB3768")]
		public ES3Member(string name, Type type, bool isProperty)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1CB37AC", Offset = "0x1CB37AC", VA = "0x1CB37AC")]
		public ES3Member(ES3Reflection.ES3ReflectedMember reflectedMember)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public static class ES3TypeMgr
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x1056A18", Offset = "0x1056A18")]
		public static Dictionary<Type, ES3Type> types;

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1CB02FC", Offset = "0x1CB02FC", VA = "0x1CB02FC")]
		public static ES3Type GetOrCreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1CB8BDC", Offset = "0x1CB8BDC", VA = "0x1CB8BDC")]
		public static ES3Type GetES3Type(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1CB8CC0", Offset = "0x1CB8CC0", VA = "0x1CB8CC0")]
		internal static void Add(Type type, ES3Type es3Type)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1CB82DC", Offset = "0x1CB82DC", VA = "0x1CB82DC")]
		internal static ES3Type CreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1CA90E8", Offset = "0x1CA90E8", VA = "0x1CA90E8")]
		internal static void Init()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class ES3WebClass
	{
		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1051638", Offset = "0x1051638")]
		private sealed class <SendWebRequest>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3WebClass <>4__this;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F11")]
				[Address(RVA = "0x1CB8F58", Offset = "0x1CB8F58", VA = "0x1CB8F58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F13")]
				[Address(RVA = "0x1CB8FC0", Offset = "0x1CB8FC0", VA = "0x1CB8FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x1CB8EA4", Offset = "0x1CB8EA4", VA = "0x1CB8EA4")]
			[DebuggerHidden]
			public <SendWebRequest>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x1CB8ED0", Offset = "0x1CB8ED0", VA = "0x1CB8ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x1CB8ED4", Offset = "0x1CB8ED4", VA = "0x1CB8ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x1CB8F60", Offset = "0x1CB8F60", VA = "0x1CB8F60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string url;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string apiKey;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<KeyValuePair<string, string>> formData;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UnityWebRequest _webRequest;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDone;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string error;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long errorCode;

		[Token(Token = "0x170000AC")]
		public float uploadProgress
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x1CB8D98", Offset = "0x1CB8D98", VA = "0x1CB8D98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AD")]
		public float downloadProgress
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x1CB8DB0", Offset = "0x1CB8DB0", VA = "0x1CB8DB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool isError
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x1CB8DC8", Offset = "0x1CB8DC8", VA = "0x1CB8DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1CA9AB0", Offset = "0x1CA9AB0", VA = "0x1CA9AB0")]
		protected ES3WebClass(string url, string apiKey)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1CB8E08", Offset = "0x1CB8E08", VA = "0x1CB8E08")]
		public void AddPOSTField(string fieldName, string value)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1CAC810", Offset = "0x1CAC810", VA = "0x1CAC810")]
		protected string GetUser(string user, string password)
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1CAC6F4", Offset = "0x1CAC6F4", VA = "0x1CAC6F4")]
		protected WWWForm CreateWWWForm()
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1CAC92C", Offset = "0x1CAC92C", VA = "0x1CAC92C")]
		protected bool HandleError(UnityWebRequest webRequest, bool errorIfDataIsDownloaded)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1CAC8B0", Offset = "0x1CAC8B0", VA = "0x1CAC8B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x105B0F8", Offset = "0x105B0F8")]
		protected IEnumerator SendWebRequest(UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1CAC438", Offset = "0x1CAC438", VA = "0x1CAC438", Slot = "4")]
		protected virtual void Reset()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	internal class ES3JSONWriter : ES3Writer
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFirstProperty;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1CB2B10", Offset = "0x1CB2B10", VA = "0x1CB2B10")]
		public ES3JSONWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1CB2B1C", Offset = "0x1CB2B1C", VA = "0x1CB2B1C")]
		internal ES3JSONWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1CB2BCC", Offset = "0x1CB2BCC", VA = "0x1CB2BCC", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1CB2BF0", Offset = "0x1CB2BF0", VA = "0x1CB2BF0", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1CB2C98", Offset = "0x1CB2C98", VA = "0x1CB2C98", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1CB2D18", Offset = "0x1CB2D18", VA = "0x1CB2D18", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1CB2DC0", Offset = "0x1CB2DC0", VA = "0x1CB2DC0", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1CB2E68", Offset = "0x1CB2E68", VA = "0x1CB2E68", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1CB2E8C", Offset = "0x1CB2E8C", VA = "0x1CB2E8C", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1CB2EB0", Offset = "0x1CB2EB0", VA = "0x1CB2EB0", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1CB2ED4", Offset = "0x1CB2ED4", VA = "0x1CB2ED4", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1CB2F6C", Offset = "0x1CB2F6C", VA = "0x1CB2F6C", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1CB3004", Offset = "0x1CB3004", VA = "0x1CB3004", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1CB309C", Offset = "0x1CB309C", VA = "0x1CB309C", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1CB3134", Offset = "0x1CB3134", VA = "0x1CB3134", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1CB3178", Offset = "0x1CB3178", VA = "0x1CB3178", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1CB3204", Offset = "0x1CB3204", VA = "0x1CB3204", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1CB33FC", Offset = "0x1CB33FC", VA = "0x1CB33FC", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1CB3460", Offset = "0x1CB3460", VA = "0x1CB3460")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1CB3494", Offset = "0x1CB3494", VA = "0x1CB3494")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1CB34C8", Offset = "0x1CB34C8", VA = "0x1CB34C8", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1CB3544", Offset = "0x1CB3544", VA = "0x1CB3544", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1CB3574", Offset = "0x1CB3574", VA = "0x1CB3574", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1CB35A4", Offset = "0x1CB35A4", VA = "0x1CB35A4", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1CB35FC", Offset = "0x1CB35FC", VA = "0x1CB35FC", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1CB3600", Offset = "0x1CB3600", VA = "0x1CB3600", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1CB3630", Offset = "0x1CB3630", VA = "0x1CB3630", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1CB365C", Offset = "0x1CB365C", VA = "0x1CB365C", Slot = "12")]
		internal override void StartWriteCollection(int length)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1CB3680", Offset = "0x1CB3680", VA = "0x1CB3680", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1CB36A4", Offset = "0x1CB36A4", VA = "0x1CB36A4", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1CB36D0", Offset = "0x1CB36D0", VA = "0x1CB36D0", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1CB36D4", Offset = "0x1CB36D4", VA = "0x1CB36D4", Slot = "16")]
		internal override void StartWriteDictionary(int length)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1CB36E4", Offset = "0x1CB36E4", VA = "0x1CB36E4", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x1CB36F4", Offset = "0x1CB36F4", VA = "0x1CB36F4", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1CB3720", Offset = "0x1CB3720", VA = "0x1CB3720", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1CB3744", Offset = "0x1CB3744", VA = "0x1CB3744", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1CB3748", Offset = "0x1CB3748", VA = "0x1CB3748", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1CB374C", Offset = "0x1CB374C", VA = "0x1CB374C", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	internal class ES3XMLWriter : ES3Writer
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1CB8FC8", Offset = "0x1CB8FC8", VA = "0x1CB8FC8")]
		public ES3XMLWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1CB8FD4", Offset = "0x1CB8FD4", VA = "0x1CB8FD4")]
		internal ES3XMLWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1CB907C", Offset = "0x1CB907C", VA = "0x1CB907C", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1CB90A0", Offset = "0x1CB90A0", VA = "0x1CB90A0", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1CB90C4", Offset = "0x1CB90C4", VA = "0x1CB90C4", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1CB90EC", Offset = "0x1CB90EC", VA = "0x1CB90EC", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1CB910C", Offset = "0x1CB910C", VA = "0x1CB910C", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1CB9130", Offset = "0x1CB9130", VA = "0x1CB9130", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1CB9154", Offset = "0x1CB9154", VA = "0x1CB9154", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1CB9178", Offset = "0x1CB9178", VA = "0x1CB9178", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1CB919C", Offset = "0x1CB919C", VA = "0x1CB919C", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1CB91C0", Offset = "0x1CB91C0", VA = "0x1CB91C0", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1CB91E4", Offset = "0x1CB91E4", VA = "0x1CB91E4", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1CB9278", Offset = "0x1CB9278", VA = "0x1CB9278", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1CB930C", Offset = "0x1CB930C", VA = "0x1CB930C", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1CB93A4", Offset = "0x1CB93A4", VA = "0x1CB93A4", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1CB943C", Offset = "0x1CB943C", VA = "0x1CB943C", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1CB94C8", Offset = "0x1CB94C8", VA = "0x1CB94C8", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] bytes)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1CB98F4", Offset = "0x1CB98F4", VA = "0x1CB98F4", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1CB98F8", Offset = "0x1CB98F8", VA = "0x1CB98F8", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1CB98FC", Offset = "0x1CB98FC", VA = "0x1CB98FC", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1CB9904", Offset = "0x1CB9904", VA = "0x1CB9904", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1CB9910", Offset = "0x1CB9910", VA = "0x1CB9910", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1CB9560", Offset = "0x1CB9560", VA = "0x1CB9560")]
		protected void StartWriteProperty(string name, [Optional] ICollection<KeyValuePair<string, object>> attributes)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1CB997C", Offset = "0x1CB997C", VA = "0x1CB997C", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1CB9A20", Offset = "0x1CB9A20", VA = "0x1CB9A20", Slot = "12")]
		internal override void StartWriteCollection(int length)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1CB9A24", Offset = "0x1CB9A24", VA = "0x1CB9A24", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1CB9A28", Offset = "0x1CB9A28", VA = "0x1CB9A28", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1CB9A2C", Offset = "0x1CB9A2C", VA = "0x1CB9A2C", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1CB9A30", Offset = "0x1CB9A30", VA = "0x1CB9A30", Slot = "16")]
		internal override void StartWriteDictionary(int length)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1CB9A34", Offset = "0x1CB9A34", VA = "0x1CB9A34", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1CB9A38", Offset = "0x1CB9A38", VA = "0x1CB9A38", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1CB9A3C", Offset = "0x1CB9A3C", VA = "0x1CB9A3C", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1CB9A40", Offset = "0x1CB9A40", VA = "0x1CB9A40", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1CB9A44", Offset = "0x1CB9A44", VA = "0x1CB9A44", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1CB9A48", Offset = "0x1CB9A48", VA = "0x1CB9A48", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1CB9AAC", Offset = "0x1CB9AAC", VA = "0x1CB9AAC", Slot = "22")]
		public override void Dispose()
		{
		}
	}
}
namespace ES3PlayMaker
{
	[Token(Token = "0x20001C0")]
	public abstract class ActionBase : FsmStateAction
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056A2C", Offset = "0x1056A2C")]
		public FsmEvent errorEvent;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056A64", Offset = "0x1056A64")]
		public FsmString errorMessage;

		[Token(Token = "0x6000D0C")]
		public abstract void Enter();

		[Token(Token = "0x6000D0D")]
		public abstract void OnReset();

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1CB9B48", Offset = "0x1CB9B48", VA = "0x1CB9B48", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1CB9C88", Offset = "0x1CB9C88", VA = "0x1CB9C88", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1CB9C40", Offset = "0x1CB9C40", VA = "0x1CB9C40")]
		public void HandleError(string msg)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1CB9CF4", Offset = "0x1CB9CF4", VA = "0x1CB9CF4")]
		protected ActionBase()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public abstract class SettingsAction : ActionBase
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FsmBool overrideDefaultSettings;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056A9C", Offset = "0x1056A9C")]
		public FsmString path;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056AD4", Offset = "0x1056AD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056AD4", Offset = "0x1056AD4")]
		public FsmEnum location;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056B5C", Offset = "0x1056B5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056B5C", Offset = "0x1056B5C")]
		public FsmEnum encryptionType;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056BE4", Offset = "0x1056BE4")]
		public FsmString encryptionPassword;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056C1C", Offset = "0x1056C1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056C1C", Offset = "0x1056C1C")]
		public FsmEnum directory;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056CA4", Offset = "0x1056CA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056CA4", Offset = "0x1056CA4")]
		public FsmEnum format;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056D2C", Offset = "0x1056D2C")]
		public FsmInt bufferSize;

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x27F59C4", Offset = "0x27F59C4", VA = "0x27F59C4", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x27F4A0C", Offset = "0x27F4A0C", VA = "0x27F4A0C")]
		public ES3Settings GetSettings()
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x27F4BF8", Offset = "0x27F4BF8", VA = "0x27F4BF8")]
		protected SettingsAction()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public abstract class ES3FileAction : ActionBase
	{
		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056D64", Offset = "0x1056D64")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056D64", Offset = "0x1056D64")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1056D64", Offset = "0x1056D64")]
		[RequiredField]
		public FsmObject fsmES3File;

		[Token(Token = "0x170000AF")]
		public ES3File es3File
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x1CBB028", Offset = "0x1CBB028", VA = "0x1CBB028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1CBB0BC", Offset = "0x1CBB0BC", VA = "0x1CBB0BC", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1CBB0C4", Offset = "0x1CBB0C4", VA = "0x1CBB0C4")]
		protected ES3FileAction()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public abstract class ES3FileSettingsAction : SettingsAction
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056E20", Offset = "0x1056E20")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1056E20", Offset = "0x1056E20")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x1056E20", Offset = "0x1056E20")]
		[RequiredField]
		public FsmObject fsmES3File;

		[Token(Token = "0x170000B0")]
		public ES3File es3File
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x1CBB910", Offset = "0x1CBB910", VA = "0x1CBB910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1CBB9A4", Offset = "0x1CBB9A4", VA = "0x1CBB9A4", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1CBB248", Offset = "0x1CBB248", VA = "0x1CBB248")]
		protected ES3FileSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10503F0", Offset = "0x10503F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10503F0", Offset = "0x10503F0")]
	public class Save : SettingsAction
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056EDC", Offset = "0x1056EDC")]
		public FsmString key;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056F14", Offset = "0x1056F14")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1056F14", Offset = "0x1056F14")]
		public FsmVar value;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x27F54E8", Offset = "0x27F54E8", VA = "0x27F54E8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x27F5540", Offset = "0x27F5540", VA = "0x27F5540", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x27F5610", Offset = "0x27F5610", VA = "0x27F5610")]
		public Save()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050450", Offset = "0x1050450")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050450", Offset = "0x1050450")]
	public class SaveRaw : SettingsAction
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056F64", Offset = "0x1056F64")]
		public FsmString str;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056F9C", Offset = "0x1056F9C")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1056FD4", Offset = "0x1056FD4")]
		public FsmBool appendNewline;

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x27F57B4", Offset = "0x27F57B4", VA = "0x27F57B4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x27F582C", Offset = "0x27F582C", VA = "0x27F582C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x27F5990", Offset = "0x27F5990", VA = "0x27F5990")]
		public SaveRaw()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10504B0", Offset = "0x10504B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10504B0", Offset = "0x10504B0")]
	public class AppendRaw : SettingsAction
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105700C", Offset = "0x105700C")]
		public FsmString str;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057044", Offset = "0x1057044")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105707C", Offset = "0x105707C")]
		public FsmBool appendNewline;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1CB9CFC", Offset = "0x1CB9CFC", VA = "0x1CB9CFC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1CB9D74", Offset = "0x1CB9D74", VA = "0x1CB9D74", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1CB9ED8", Offset = "0x1CB9ED8", VA = "0x1CB9ED8")]
		public AppendRaw()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050510", Offset = "0x1050510")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050510", Offset = "0x1050510")]
	public class SaveImage : SettingsAction
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10570B4", Offset = "0x10570B4")]
		public FsmString imagePath;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10570EC", Offset = "0x10570EC")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x10570EC", Offset = "0x10570EC")]
		public FsmTexture texture2D;

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x27F5644", Offset = "0x27F5644", VA = "0x27F5644", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x27F569C", Offset = "0x27F569C", VA = "0x27F569C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x27F5780", Offset = "0x27F5780", VA = "0x27F5780")]
		public SaveImage()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050570", Offset = "0x1050570")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050570", Offset = "0x1050570")]
	public class Load : SettingsAction
	{
		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057174", Offset = "0x1057174")]
		public FsmString key;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10571AC", Offset = "0x10571AC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x10571AC", Offset = "0x10571AC")]
		public FsmVar value;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10571FC", Offset = "0x10571FC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x10571FC", Offset = "0x10571FC")]
		public FsmVar defaultValue;

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x27F4838", Offset = "0x27F4838", VA = "0x27F4838", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x27F4894", Offset = "0x27F4894", VA = "0x27F4894", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x27F4BC4", Offset = "0x27F4BC4", VA = "0x27F4BC4")]
		public Load()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10505D0", Offset = "0x10505D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10505D0", Offset = "0x10505D0")]
	public class LoadInto : SettingsAction
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105724C", Offset = "0x105724C")]
		public FsmString key;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057284", Offset = "0x1057284")]
		[RequiredField]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1057284", Offset = "0x1057284")]
		public FsmVar value;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x27F4F20", Offset = "0x27F4F20", VA = "0x27F4F20", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x27F4F78", Offset = "0x27F4F78", VA = "0x27F4F78", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x27F5094", Offset = "0x27F5094", VA = "0x27F5094")]
		public LoadInto()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050630", Offset = "0x1050630")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050630", Offset = "0x1050630")]
	public class LoadRawString : SettingsAction
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10572E4", Offset = "0x10572E4")]
		public FsmString str;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105731C", Offset = "0x105731C")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x27F50C8", Offset = "0x27F50C8", VA = "0x27F50C8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x27F50F8", Offset = "0x27F50F8", VA = "0x27F50F8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x27F51FC", Offset = "0x27F51FC", VA = "0x27F51FC")]
		public LoadRawString()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050690", Offset = "0x1050690")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050690", Offset = "0x1050690")]
	public class LoadImage : SettingsAction
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057354", Offset = "0x1057354")]
		public FsmString imagePath;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105738C", Offset = "0x105738C")]
		public FsmTexture texture2D;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x27F4DE0", Offset = "0x27F4DE0", VA = "0x27F4DE0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x27F4E38", Offset = "0x27F4E38", VA = "0x27F4E38", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x27F4EEC", Offset = "0x27F4EEC", VA = "0x27F4EEC")]
		public LoadImage()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10506F0", Offset = "0x10506F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10506F0", Offset = "0x10506F0")]
	public class LoadAudio : SettingsAction
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10573C4", Offset = "0x10573C4")]
		public FsmString audioFilePath;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x10573FC", Offset = "0x10573FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10573FC", Offset = "0x10573FC")]
		public FsmObject audioClip;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057484", Offset = "0x1057484")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x1057484", Offset = "0x1057484")]
		public FsmEnum audioType;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x27F4C2C", Offset = "0x27F4C2C", VA = "0x27F4C2C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x27F4CB4", Offset = "0x27F4CB4", VA = "0x27F4CB4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x27F4DAC", Offset = "0x27F4DAC", VA = "0x27F4DAC")]
		public LoadAudio()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050750", Offset = "0x1050750")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050750", Offset = "0x1050750")]
	public class KeyExists : SettingsAction
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105750C", Offset = "0x105750C")]
		public FsmString key;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057544", Offset = "0x1057544")]
		public FsmBool exists;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105757C", Offset = "0x105757C")]
		public FsmEvent existsEvent;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10575B4", Offset = "0x10575B4")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1CBC0CC", Offset = "0x1CBC0CC", VA = "0x1CBC0CC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1CBC138", Offset = "0x1CBC138", VA = "0x1CBC138", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1CBC228", Offset = "0x1CBC228", VA = "0x1CBC228")]
		public KeyExists()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10507B0", Offset = "0x10507B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10507B0", Offset = "0x10507B0")]
	public class FileExists : SettingsAction
	{
		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10575EC", Offset = "0x10575EC")]
		public FsmString filePath;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057624", Offset = "0x1057624")]
		public FsmBool exists;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105765C", Offset = "0x105765C")]
		public FsmEvent existsEvent;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057694", Offset = "0x1057694")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1CBBAE8", Offset = "0x1CBBAE8", VA = "0x1CBBAE8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1CBBB54", Offset = "0x1CBBB54", VA = "0x1CBBB54", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1CBBC44", Offset = "0x1CBBC44", VA = "0x1CBBC44")]
		public FileExists()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050810", Offset = "0x1050810")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050810", Offset = "0x1050810")]
	public class DirectoryExists : SettingsAction
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10576CC", Offset = "0x10576CC")]
		public FsmString directoryPath;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057704", Offset = "0x1057704")]
		public FsmBool exists;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105773C", Offset = "0x105773C")]
		public FsmEvent existsEvent;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057774", Offset = "0x1057774")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1CBA3F4", Offset = "0x1CBA3F4", VA = "0x1CBA3F4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1CBA460", Offset = "0x1CBA460", VA = "0x1CBA460", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1CBA550", Offset = "0x1CBA550", VA = "0x1CBA550")]
		public DirectoryExists()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050870", Offset = "0x1050870")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050870", Offset = "0x1050870")]
	public class DeleteKey : SettingsAction
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10577AC", Offset = "0x10577AC")]
		public FsmString key;

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1CBA300", Offset = "0x1CBA300", VA = "0x1CBA300", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1CBA358", Offset = "0x1CBA358", VA = "0x1CBA358", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1CBA3EC", Offset = "0x1CBA3EC", VA = "0x1CBA3EC")]
		public DeleteKey()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10508D0", Offset = "0x10508D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10508D0", Offset = "0x10508D0")]
	public class DeleteFile : SettingsAction
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10577E4", Offset = "0x10577E4")]
		public FsmString filePath;

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1CBA20C", Offset = "0x1CBA20C", VA = "0x1CBA20C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1CBA264", Offset = "0x1CBA264", VA = "0x1CBA264", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1CBA2F8", Offset = "0x1CBA2F8", VA = "0x1CBA2F8")]
		public DeleteFile()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050930", Offset = "0x1050930")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050930", Offset = "0x1050930")]
	public class DeleteDirectory : SettingsAction
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105781C", Offset = "0x105781C")]
		public FsmString directoryPath;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1CBA118", Offset = "0x1CBA118", VA = "0x1CBA118", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1CBA170", Offset = "0x1CBA170", VA = "0x1CBA170", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1CBA204", Offset = "0x1CBA204", VA = "0x1CBA204")]
		public DeleteDirectory()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050990", Offset = "0x1050990")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050990", Offset = "0x1050990")]
	public class CreateBackup : SettingsAction
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057854", Offset = "0x1057854")]
		public FsmString filePath;

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1CBA024", Offset = "0x1CBA024", VA = "0x1CBA024", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1CBA07C", Offset = "0x1CBA07C", VA = "0x1CBA07C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1CBA110", Offset = "0x1CBA110", VA = "0x1CBA110")]
		public CreateBackup()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10509F0", Offset = "0x10509F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10509F0", Offset = "0x10509F0")]
	public class RestoreBackup : SettingsAction
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105788C", Offset = "0x105788C")]
		public FsmString filePath;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10578C4", Offset = "0x10578C4")]
		public FsmBool backupWasRestored;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x27F539C", Offset = "0x27F539C", VA = "0x27F539C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x27F5404", Offset = "0x27F5404", VA = "0x27F5404", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x27F54B4", Offset = "0x27F54B4", VA = "0x27F54B4")]
		public RestoreBackup()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050A50", Offset = "0x1050A50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050A50", Offset = "0x1050A50")]
	public class RenameFile : SettingsAction
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10578FC", Offset = "0x10578FC")]
		public FsmString oldFilePath;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057934", Offset = "0x1057934")]
		public FsmString newFilePath;

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x27F5230", Offset = "0x27F5230", VA = "0x27F5230", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x27F52A0", Offset = "0x27F52A0", VA = "0x27F52A0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x27F5368", Offset = "0x27F5368", VA = "0x27F5368")]
		public RenameFile()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050AB0", Offset = "0x1050AB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050AB0", Offset = "0x1050AB0")]
	public class CopyFile : SettingsAction
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105796C", Offset = "0x105796C")]
		public FsmString oldFilePath;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10579A4", Offset = "0x10579A4")]
		public FsmString newFilePath;

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1CB9EE0", Offset = "0x1CB9EE0", VA = "0x1CB9EE0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1CB9F50", Offset = "0x1CB9F50", VA = "0x1CB9F50", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1CBA01C", Offset = "0x1CBA01C", VA = "0x1CBA01C")]
		public CopyFile()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050B10", Offset = "0x1050B10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050B10", Offset = "0x1050B10")]
	public class GetKeys : SettingsAction
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10579DC", Offset = "0x10579DC")]
		public FsmString filePath;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057A14", Offset = "0x1057A14")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x1057A14", Offset = "0x1057A14")]
		public FsmArray keys;

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1CBBFA8", Offset = "0x1CBBFA8", VA = "0x1CBBFA8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1CBC000", Offset = "0x1CBC000", VA = "0x1CBC000", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1CBC0C4", Offset = "0x1CBC0C4", VA = "0x1CBC0C4")]
		public GetKeys()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050B70", Offset = "0x1050B70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050B70", Offset = "0x1050B70")]
	public class GetKeyCount : SettingsAction
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057A84", Offset = "0x1057A84")]
		public FsmString filePath;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057ABC", Offset = "0x1057ABC")]
		public FsmInt keyCount;

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1CBBE94", Offset = "0x1CBBE94", VA = "0x1CBBE94", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1CBBEEC", Offset = "0x1CBBEEC", VA = "0x1CBBEEC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1CBBFA0", Offset = "0x1CBBFA0", VA = "0x1CBBFA0")]
		public GetKeyCount()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050BD0", Offset = "0x1050BD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050BD0", Offset = "0x1050BD0")]
	public class GetFiles : SettingsAction
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057AF4", Offset = "0x1057AF4")]
		public FsmString directoryPath;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057B2C", Offset = "0x1057B2C")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x1057B2C", Offset = "0x1057B2C")]
		public FsmArray files;

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1CBBD70", Offset = "0x1CBBD70", VA = "0x1CBBD70", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1CBBDC8", Offset = "0x1CBBDC8", VA = "0x1CBBDC8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1CBBE8C", Offset = "0x1CBBE8C", VA = "0x1CBBE8C")]
		public GetFiles()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050C30", Offset = "0x1050C30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050C30", Offset = "0x1050C30")]
	public class GetDirectories : SettingsAction
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057B9C", Offset = "0x1057B9C")]
		public FsmString directoryPath;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057BD4", Offset = "0x1057BD4")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x1057BD4", Offset = "0x1057BD4")]
		public FsmArray directories;

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1CBBC4C", Offset = "0x1CBBC4C", VA = "0x1CBBC4C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1CBBCA4", Offset = "0x1CBBCA4", VA = "0x1CBBCA4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1CBBD68", Offset = "0x1CBBD68", VA = "0x1CBBD68")]
		public GetDirectories()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050C90", Offset = "0x1050C90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050C90", Offset = "0x1050C90")]
	public class ES3FileCreate : ES3FileSettingsAction
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057C44", Offset = "0x1057C44")]
		public FsmString filePath;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057C7C", Offset = "0x1057C7C")]
		public FsmBool syncWithFile;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1CBB0F4", Offset = "0x1CBB0F4", VA = "0x1CBB0F4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1CBB15C", Offset = "0x1CBB15C", VA = "0x1CBB15C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1CBB240", Offset = "0x1CBB240", VA = "0x1CBB240")]
		public ES3FileCreate()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050CF0", Offset = "0x1050CF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050CF0", Offset = "0x1050CF0")]
	public class ES3FileSync : ES3FileSettingsAction
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057CB4", Offset = "0x1057CB4")]
		public FsmString filePath;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1CBBA18", Offset = "0x1CBBA18", VA = "0x1CBBA18", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1CBBA70", Offset = "0x1CBBA70", VA = "0x1CBBA70", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1CBBAE0", Offset = "0x1CBBAE0", VA = "0x1CBBAE0")]
		public ES3FileSync()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050D50", Offset = "0x1050D50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050D50", Offset = "0x1050D50")]
	public class ES3FileSave : ES3FileAction
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057CEC", Offset = "0x1057CEC")]
		public FsmString key;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057D24", Offset = "0x1057D24")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1057D24", Offset = "0x1057D24")]
		public FsmVar value;

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1CBB808", Offset = "0x1CBB808", VA = "0x1CBB808", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1CBB860", Offset = "0x1CBB860", VA = "0x1CBB860", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1CBB908", Offset = "0x1CBB908", VA = "0x1CBB908")]
		public ES3FileSave()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050DB0", Offset = "0x1050DB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050DB0", Offset = "0x1050DB0")]
	public class ES3FileLoad : ES3FileAction
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057D74", Offset = "0x1057D74")]
		public FsmString key;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057DAC", Offset = "0x1057DAC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1057DAC", Offset = "0x1057DAC")]
		public FsmVar value;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057DFC", Offset = "0x1057DFC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1057DFC", Offset = "0x1057DFC")]
		public FsmVar defaultValue;

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1CBB470", Offset = "0x1CBB470", VA = "0x1CBB470", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1CBB4CC", Offset = "0x1CBB4CC", VA = "0x1CBB4CC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1CBB604", Offset = "0x1CBB604", VA = "0x1CBB604")]
		public ES3FileLoad()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050E10", Offset = "0x1050E10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050E10", Offset = "0x1050E10")]
	public class ES3FileLoadInto : ES3FileAction
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057E4C", Offset = "0x1057E4C")]
		public FsmString key;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057E84", Offset = "0x1057E84")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x1057E84", Offset = "0x1057E84")]
		public FsmVar value;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1CBB60C", Offset = "0x1CBB60C", VA = "0x1CBB60C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1CBB664", Offset = "0x1CBB664", VA = "0x1CBB664", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1CBB70C", Offset = "0x1CBB70C", VA = "0x1CBB70C")]
		public ES3FileLoadInto()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050E70", Offset = "0x1050E70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050E70", Offset = "0x1050E70")]
	public class ES3FileLoadRawString : ES3FileAction
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057ED4", Offset = "0x1057ED4")]
		public FsmString str;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057F0C", Offset = "0x1057F0C")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1CBB714", Offset = "0x1CBB714", VA = "0x1CBB714", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1CBB744", Offset = "0x1CBB744", VA = "0x1CBB744", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1CBB800", Offset = "0x1CBB800", VA = "0x1CBB800")]
		public ES3FileLoadRawString()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050ED0", Offset = "0x1050ED0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050ED0", Offset = "0x1050ED0")]
	public class ES3FileDeleteKey : ES3FileAction
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057F44", Offset = "0x1057F44")]
		public FsmString key;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1CBB250", Offset = "0x1CBB250", VA = "0x1CBB250", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1CBB2A8", Offset = "0x1CBB2A8", VA = "0x1CBB2A8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1CBB2F0", Offset = "0x1CBB2F0", VA = "0x1CBB2F0")]
		public ES3FileDeleteKey()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050F30", Offset = "0x1050F30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050F30", Offset = "0x1050F30")]
	public class ES3FileKeyExists : ES3FileAction
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057F7C", Offset = "0x1057F7C")]
		public FsmString key;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057FB4", Offset = "0x1057FB4")]
		public FsmBool exists;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1057FEC", Offset = "0x1057FEC")]
		public FsmEvent existsEvent;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058024", Offset = "0x1058024")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1CBB358", Offset = "0x1CBB358", VA = "0x1CBB358", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1CBB3C4", Offset = "0x1CBB3C4", VA = "0x1CBB3C4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1CBB468", Offset = "0x1CBB468", VA = "0x1CBB468")]
		public ES3FileKeyExists()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050F90", Offset = "0x1050F90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050F90", Offset = "0x1050F90")]
	public class ES3FileGetKeys : ES3FileAction
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105805C", Offset = "0x105805C")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x105805C", Offset = "0x105805C")]
		public FsmArray keys;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1CBB2F8", Offset = "0x1CBB2F8", VA = "0x1CBB2F8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1CBB300", Offset = "0x1CBB300", VA = "0x1CBB300", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1CBB350", Offset = "0x1CBB350", VA = "0x1CBB350")]
		public ES3FileGetKeys()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1050FF0", Offset = "0x1050FF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1050FF0", Offset = "0x1050FF0")]
	public class ES3FileClear : ES3FileAction
	{
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1CBB0CC", Offset = "0x1CBB0CC", VA = "0x1CBB0CC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1CBB0D0", Offset = "0x1CBB0D0", VA = "0x1CBB0D0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1CBB0EC", Offset = "0x1CBB0EC", VA = "0x1CBB0EC")]
		public ES3FileClear()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1051050", Offset = "0x1051050")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051050", Offset = "0x1051050")]
	public class ES3FileSize : ES3FileAction
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10580CC", Offset = "0x10580CC")]
		public FsmInt size;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1CBB9B0", Offset = "0x1CBB9B0", VA = "0x1CBB9B0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1CBB9DC", Offset = "0x1CBB9DC", VA = "0x1CBB9DC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1CBBA10", Offset = "0x1CBBA10", VA = "0x1CBBA10")]
		public ES3FileSize()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public abstract class ES3CloudAction : SettingsAction
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058104", Offset = "0x1058104")]
		[RequiredField]
		public FsmString url;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1058150", Offset = "0x1058150")]
		[RequiredField]
		public FsmString apiKey;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105819C", Offset = "0x105819C")]
		public FsmInt errorCode;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ES3Cloud cloud;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1CBA558", Offset = "0x1CBA558", VA = "0x1CBA558", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1CBA5C0", Offset = "0x1CBA5C0", VA = "0x1CBA5C0", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1CBA770", Offset = "0x1CBA770", VA = "0x1CBA770", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1CBA6C0", Offset = "0x1CBA6C0", VA = "0x1CBA6C0")]
		protected void CreateES3Cloud()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1CBA988", Offset = "0x1CBA988", VA = "0x1CBA988")]
		protected ES3CloudAction()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public abstract class ES3CloudUserAction : ES3CloudAction
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FsmString user;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FsmString password;

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1CBAFB8", Offset = "0x1CBAFB8", VA = "0x1CBAFB8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1CBAA44", Offset = "0x1CBAA44", VA = "0x1CBAA44")]
		protected ES3CloudUserAction()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10510B0", Offset = "0x10510B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10510B0", Offset = "0x10510B0")]
	public class ES3CloudSync : ES3CloudUserAction
	{
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1CBAE90", Offset = "0x1CBAE90", VA = "0x1CBAE90", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1CBAEFC", Offset = "0x1CBAEFC", VA = "0x1CBAEFC")]
		public ES3CloudSync()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1051110", Offset = "0x1051110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051110", Offset = "0x1051110")]
	public class ES3CloudUploadFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1CBAF04", Offset = "0x1CBAF04", VA = "0x1CBAF04", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1CBAFB0", Offset = "0x1CBAFB0", VA = "0x1CBAFB0")]
		public ES3CloudUploadFile()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1051170", Offset = "0x1051170")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051170", Offset = "0x1051170")]
	public class ES3CloudDownloadFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1CBAA4C", Offset = "0x1CBAA4C", VA = "0x1CBAA4C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1CBAAF8", Offset = "0x1CBAAF8", VA = "0x1CBAAF8")]
		public ES3CloudDownloadFile()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10511D0", Offset = "0x10511D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10511D0", Offset = "0x10511D0")]
	public class ES3CloudDeleteFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1CBA990", Offset = "0x1CBA990", VA = "0x1CBA990", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1CBAA3C", Offset = "0x1CBAA3C", VA = "0x1CBAA3C")]
		public ES3CloudDeleteFile()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1051230", Offset = "0x1051230")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051230", Offset = "0x1051230")]
	public class ES3CloudRenameFile : ES3CloudUserAction
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10581D4", Offset = "0x10581D4")]
		public FsmString newFilename;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1CBADC0", Offset = "0x1CBADC0", VA = "0x1CBADC0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1CBAE88", Offset = "0x1CBAE88", VA = "0x1CBAE88")]
		public ES3CloudRenameFile()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x1051290", Offset = "0x1051290")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1051290", Offset = "0x1051290")]
	public class ES3CloudDownloadFilenames : ES3CloudUserAction
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105820C", Offset = "0x105820C")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x105820C", Offset = "0x105820C")]
		public FsmArray filenames;

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1CBAB00", Offset = "0x1CBAB00", VA = "0x1CBAB00", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1CBAB08", Offset = "0x1CBAB08", VA = "0x1CBAB08", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1CBAB7C", Offset = "0x1CBAB7C", VA = "0x1CBAB7C", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1CBAC54", Offset = "0x1CBAC54", VA = "0x1CBAC54")]
		public ES3CloudDownloadFilenames()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x10512F0", Offset = "0x10512F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x10512F0", Offset = "0x10512F0")]
	public class ES3CloudDownloadTimestamp : ES3CloudUserAction
	{
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x105827C", Offset = "0x105827C")]
		public FsmString timestamp;

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1CBAC5C", Offset = "0x1CBAC5C", VA = "0x1CBAC5C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1CBACB4", Offset = "0x1CBACB4", VA = "0x1CBACB4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1CBAD28", Offset = "0x1CBAD28", VA = "0x1CBAD28", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1CBADB8", Offset = "0x1CBADB8", VA = "0x1CBADB8")]
		public ES3CloudDownloadTimestamp()
		{
		}
	}
}
