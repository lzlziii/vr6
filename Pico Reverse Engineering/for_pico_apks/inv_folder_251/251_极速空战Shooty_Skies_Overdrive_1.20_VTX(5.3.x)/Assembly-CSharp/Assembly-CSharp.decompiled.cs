using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using Cinemachine;
using Il2CppDummyDll;
using LitJson;
using Microsoft.CodeAnalysis;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using SVGImporter;
using Shakespeare;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.SocialPlatforms;
using UnityEngine.Timeline;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x760398", Offset = "0x760398")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x9961B4", Offset = "0x9961B4", VA = "0x9961B4")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7603D0", Offset = "0x7603D0")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x16036A8", Offset = "0x16036A8", VA = "0x16036A8")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAC2CD0", Offset = "0xAC2CD0", VA = "0xAC2CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xAC2D30", Offset = "0xAC2D30", VA = "0xAC2D30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xAC2D90", Offset = "0xAC2D90", VA = "0xAC2D90")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xAC2F68", Offset = "0xAC2F68", VA = "0xAC2F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xAC2F74", Offset = "0xAC2F74", VA = "0xAC2F74")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xAC2FF4", Offset = "0xAC2FF4", VA = "0xAC2FF4")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAC31D4", Offset = "0xAC31D4", VA = "0xAC31D4")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xAC33B4", Offset = "0xAC33B4", VA = "0xAC33B4")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xAC34DC", Offset = "0xAC34DC", VA = "0xAC34DC")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xAC3604", Offset = "0xAC3604", VA = "0xAC3604")]
	public void UnLock()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xAC379C", Offset = "0xAC379C", VA = "0xAC379C")]
	public void AddCount()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xAC3A98", Offset = "0xAC3A98", VA = "0xAC3A98")]
	public void AddFields()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xAC2EC0", Offset = "0xAC2EC0", VA = "0xAC2EC0")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAC3434", Offset = "0xAC3434", VA = "0xAC3434")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xAC355C", Offset = "0xAC355C", VA = "0xAC355C")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xAC3BD8", Offset = "0xAC3BD8", VA = "0xAC3BD8")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xAC39B4", Offset = "0xAC39B4", VA = "0xAC39B4")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xAC36EC", Offset = "0xAC36EC", VA = "0xAC36EC")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAC3304", Offset = "0xAC3304", VA = "0xAC3304")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAC3124", Offset = "0xAC3124", VA = "0xAC3124")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAC2E08", Offset = "0xAC2E08", VA = "0xAC2E08")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAC3C90", Offset = "0xAC3C90", VA = "0xAC3C90")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xAC44D4", Offset = "0xAC44D4", VA = "0xAC44D4")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xAC4B2C", Offset = "0xAC4B2C", VA = "0xAC4B2C")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xAC4DD8", Offset = "0xAC4DD8", VA = "0xAC4DD8")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xAC5084", Offset = "0xAC5084", VA = "0xAC5084")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xAC5330", Offset = "0xAC5330", VA = "0xAC5330")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xAC5878", Offset = "0xAC5878", VA = "0xAC5878")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xAC5E38", Offset = "0xAC5E38", VA = "0xAC5E38")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xAC60E4", Offset = "0xAC60E4", VA = "0xAC60E4")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xAC619C", Offset = "0xAC619C", VA = "0xAC619C")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x2000005")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum UserHandNess
	{
		[Token(Token = "0x400132A")]
		Right,
		[Token(Token = "0x400132B")]
		Left
	}

	[Token(Token = "0x2000305")]
	public enum GazeType
	{
		[Token(Token = "0x400132D")]
		Never,
		[Token(Token = "0x400132E")]
		DuringMotion,
		[Token(Token = "0x400132F")]
		Always
	}

	[Token(Token = "0x2000306")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001331")]
		Controller,
		[Token(Token = "0x4001332")]
		Wrist,
		[Token(Token = "0x4001333")]
		Elbow,
		[Token(Token = "0x4001334")]
		Shoulder
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7622DC", Offset = "0x7622DC")]
	public float ElbowHeight;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7622F8", Offset = "0x7622F8")]
	public float ElbowDepth;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x762314", Offset = "0x762314")]
	public float PointerTiltAngle;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76232C", Offset = "0x76232C")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76233C", Offset = "0x76233C")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76234C", Offset = "0x76234C")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76235C", Offset = "0x76235C")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76236C", Offset = "0x76236C")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76237C", Offset = "0x76237C")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76238C", Offset = "0x76238C")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76239C", Offset = "0x76239C")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000001")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xB8009C", Offset = "0xB8009C", VA = "0xB8009C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769308", Offset = "0x769308")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xB800F0", Offset = "0xB800F0", VA = "0xB800F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769318", Offset = "0x769318")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xB80160", Offset = "0xB80160", VA = "0xB80160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769328", Offset = "0x769328")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xB801B4", Offset = "0xB801B4", VA = "0xB801B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769338", Offset = "0x769338")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0xB80228", Offset = "0xB80228", VA = "0xB80228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769348", Offset = "0x769348")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600003A")]
		[Address(RVA = "0xB8027C", Offset = "0xB8027C", VA = "0xB8027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769358", Offset = "0x769358")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xB802EC", Offset = "0xB802EC", VA = "0xB802EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769368", Offset = "0x769368")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xB80340", Offset = "0xB80340", VA = "0xB80340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769378", Offset = "0x769378")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xB803B4", Offset = "0xB803B4", VA = "0xB803B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769388", Offset = "0x769388")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xB80408", Offset = "0xB80408", VA = "0xB80408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769398", Offset = "0x769398")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xB80478", Offset = "0xB80478", VA = "0xB80478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693A8", Offset = "0x7693A8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0xB804CC", Offset = "0xB804CC", VA = "0xB804CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693B8", Offset = "0x7693B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xB80540", Offset = "0xB80540", VA = "0xB80540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693C8", Offset = "0x7693C8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xB80594", Offset = "0xB80594", VA = "0xB80594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693D8", Offset = "0x7693D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xB80604", Offset = "0xB80604", VA = "0xB80604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693E8", Offset = "0x7693E8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xB80658", Offset = "0xB80658", VA = "0xB80658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7693F8", Offset = "0x7693F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB7D9E8", Offset = "0xB7D9E8", VA = "0xB7D9E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB7DED4", Offset = "0xB7DED4", VA = "0xB7DED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB7DF44", Offset = "0xB7DF44", VA = "0xB7DF44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB7E430", Offset = "0xB7E430", VA = "0xB7E430")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB7E4D8", Offset = "0xB7E4D8", VA = "0xB7E4D8")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB7E4DC", Offset = "0xB7E4DC", VA = "0xB7E4DC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB7E434", Offset = "0xB7E434", VA = "0xB7E434")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB7E53C", Offset = "0xB7E53C", VA = "0xB7E53C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB7E6C0", Offset = "0xB7E6C0", VA = "0xB7E6C0")]
	private void ShowController()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB7E820", Offset = "0xB7E820", VA = "0xB7E820")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB7E8F4", Offset = "0xB7E8F4", VA = "0xB7E8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB7E4E0", Offset = "0xB7E4E0", VA = "0xB7E4E0")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB7EAF8", Offset = "0xB7EAF8", VA = "0xB7EAF8")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB7EB74", Offset = "0xB7EB74", VA = "0xB7EB74")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB7EBF8", Offset = "0xB7EBF8", VA = "0xB7EBF8")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB7FEB8", Offset = "0xB7FEB8", VA = "0xB7FEB8")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB7ED48", Offset = "0xB7ED48", VA = "0xB7ED48")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB7ED58", Offset = "0xB7ED58", VA = "0xB7ED58")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB7F234", Offset = "0xB7F234", VA = "0xB7F234")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB806CC", Offset = "0xB806CC", VA = "0xB806CC")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000006")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB80740", Offset = "0xB80740", VA = "0xB80740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB80AA8", Offset = "0xB80AA8", VA = "0xB80AA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB80D94", Offset = "0xB80D94", VA = "0xB80D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB8272C", Offset = "0xB8272C", VA = "0xB8272C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB827DC", Offset = "0xB827DC", VA = "0xB827DC")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB8288C", Offset = "0xB8288C", VA = "0xB8288C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB82924", Offset = "0xB82924", VA = "0xB82924")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB82928", Offset = "0xB82928", VA = "0xB82928")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000007")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB82938", Offset = "0xB82938", VA = "0xB82938")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB82B70", Offset = "0xB82B70", VA = "0xB82B70")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB82C10", Offset = "0xB82C10", VA = "0xB82C10")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB82CB0", Offset = "0xB82CB0", VA = "0xB82CB0")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB82D50", Offset = "0xB82D50", VA = "0xB82D50")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB82DF0", Offset = "0xB82DF0", VA = "0xB82DF0")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB82E90", Offset = "0xB82E90", VA = "0xB82E90")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000008")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761574", Offset = "0x761574")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xB84DF8", Offset = "0xB84DF8", VA = "0xB84DF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xB84E60", Offset = "0xB84E60", VA = "0xB84E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB83CD8", Offset = "0xB83CD8", VA = "0xB83CD8")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB84A24", Offset = "0xB84A24", VA = "0xB84A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB84A28", Offset = "0xB84A28", VA = "0xB84A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB84E00", Offset = "0xB84E00", VA = "0xB84E00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000044")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000045")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000046")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x4000047")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB82E98", Offset = "0xB82E98", VA = "0xB82E98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB83004", Offset = "0xB83004", VA = "0xB83004")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB830FC", Offset = "0xB830FC", VA = "0xB830FC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB8339C", Offset = "0xB8339C", VA = "0xB8339C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB83594", Offset = "0xB83594", VA = "0xB83594")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB837C0", Offset = "0xB837C0", VA = "0xB837C0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB83B74", Offset = "0xB83B74", VA = "0xB83B74")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB83108", Offset = "0xB83108", VA = "0xB83108")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB838AC", Offset = "0xB838AC", VA = "0xB838AC")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB83734", Offset = "0xB83734", VA = "0xB83734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769408", Offset = "0x769408")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB83D04", Offset = "0xB83D04", VA = "0xB83D04")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB84358", Offset = "0xB84358", VA = "0xB84358")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB83FB4", Offset = "0xB83FB4", VA = "0xB83FB4")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB8476C", Offset = "0xB8476C", VA = "0xB8476C")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB84878", Offset = "0xB84878", VA = "0xB84878")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB84984", Offset = "0xB84984", VA = "0xB84984")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000009")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB84E68", Offset = "0xB84E68", VA = "0xB84E68")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB852BC", Offset = "0xB852BC", VA = "0xB852BC")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB85D5C", Offset = "0xB85D5C", VA = "0xB85D5C")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB85ADC", Offset = "0xB85ADC", VA = "0xB85ADC")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB85BF8", Offset = "0xB85BF8", VA = "0xB85BF8")]
	public void BindService()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB85EFC", Offset = "0xB85EFC", VA = "0xB85EFC")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB86060", Offset = "0xB86060", VA = "0xB86060")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB861D4", Offset = "0xB861D4", VA = "0xB861D4")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB86310", Offset = "0xB86310", VA = "0xB86310")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB86484", Offset = "0xB86484", VA = "0xB86484")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB86630", Offset = "0xB86630", VA = "0xB86630")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB8684C", Offset = "0xB8684C", VA = "0xB8684C")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB869B0", Offset = "0xB869B0", VA = "0xB869B0")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB86AD4", Offset = "0xB86AD4", VA = "0xB86AD4")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB85968", Offset = "0xB85968", VA = "0xB85968")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB86BFC", Offset = "0xB86BFC", VA = "0xB86BFC")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB86E0C", Offset = "0xB86E0C", VA = "0xB86E0C")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB86F54", Offset = "0xB86F54", VA = "0xB86F54")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB87074", Offset = "0xB87074", VA = "0xB87074")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB871B0", Offset = "0xB871B0", VA = "0xB871B0")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB87340", Offset = "0xB87340", VA = "0xB87340")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB874A4", Offset = "0xB874A4", VA = "0xB874A4")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB8760C", Offset = "0xB8760C", VA = "0xB8760C")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB87770", Offset = "0xB87770", VA = "0xB87770")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB878D8", Offset = "0xB878D8", VA = "0xB878D8")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB87C5C", Offset = "0xB87C5C", VA = "0xB87C5C")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB87E44", Offset = "0xB87E44", VA = "0xB87E44")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB87FD8", Offset = "0xB87FD8", VA = "0xB87FD8")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB8816C", Offset = "0xB8816C", VA = "0xB8816C")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB885A4", Offset = "0xB885A4", VA = "0xB885A4")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB88778", Offset = "0xB88778", VA = "0xB88778")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB8887C", Offset = "0xB8887C", VA = "0xB8887C")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB89100", Offset = "0xB89100", VA = "0xB89100")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB8929C", Offset = "0xB8929C", VA = "0xB8929C")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB89930", Offset = "0xB89930", VA = "0xB89930")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB89FE0", Offset = "0xB89FE0", VA = "0xB89FE0")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB8B5C8", Offset = "0xB8B5C8", VA = "0xB8B5C8")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB8B768", Offset = "0xB8B768", VA = "0xB8B768")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB8D63C", Offset = "0xB8D63C", VA = "0xB8D63C")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB8D800", Offset = "0xB8D800", VA = "0xB8D800")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB8D990", Offset = "0xB8D990", VA = "0xB8D990")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB8DB6C", Offset = "0xB8DB6C", VA = "0xB8DB6C")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB8DD48", Offset = "0xB8DD48", VA = "0xB8DD48")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xB8DE74", Offset = "0xB8DE74", VA = "0xB8DE74")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB8E248", Offset = "0xB8E248", VA = "0xB8E248")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB8E6B4", Offset = "0xB8E6B4", VA = "0xB8E6B4")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB8EAA0", Offset = "0xB8EAA0", VA = "0xB8EAA0")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB8EC04", Offset = "0xB8EC04", VA = "0xB8EC04")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB8EF38", Offset = "0xB8EF38", VA = "0xB8EF38")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB8F0B0", Offset = "0xB8F0B0", VA = "0xB8F0B0")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB8F210", Offset = "0xB8F210", VA = "0xB8F210")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB8F338", Offset = "0xB8F338", VA = "0xB8F338")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB8F4A0", Offset = "0xB8F4A0", VA = "0xB8F4A0")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB8F608", Offset = "0xB8F608", VA = "0xB8F608")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB8F770", Offset = "0xB8F770", VA = "0xB8F770")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB8F898", Offset = "0xB8F898", VA = "0xB8F898")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB8F9C0", Offset = "0xB8F9C0", VA = "0xB8F9C0")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB8FB94", Offset = "0xB8FB94", VA = "0xB8FB94")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB8FCFC", Offset = "0xB8FCFC", VA = "0xB8FCFC")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB8FE64", Offset = "0xB8FE64", VA = "0xB8FE64")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB8FFE0", Offset = "0xB8FFE0", VA = "0xB8FFE0")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB9015C", Offset = "0xB9015C", VA = "0xB9015C")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB902D8", Offset = "0xB902D8", VA = "0xB902D8")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB90440", Offset = "0xB90440", VA = "0xB90440")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB90568", Offset = "0xB90568", VA = "0xB90568")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB90690", Offset = "0xB90690", VA = "0xB90690")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB90814", Offset = "0xB90814", VA = "0xB90814")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB908C8", Offset = "0xB908C8", VA = "0xB908C8")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB909E8", Offset = "0xB909E8", VA = "0xB909E8")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB90B5C", Offset = "0xB90B5C", VA = "0xB90B5C")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB90CD0", Offset = "0xB90CD0", VA = "0xB90CD0")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB90DD8", Offset = "0xB90DD8", VA = "0xB90DD8")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB90F34", Offset = "0xB90F34", VA = "0xB90F34")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB91090", Offset = "0xB91090", VA = "0xB91090")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB911F0", Offset = "0xB911F0", VA = "0xB911F0")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB91358", Offset = "0xB91358", VA = "0xB91358")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB914C0", Offset = "0xB914C0", VA = "0xB914C0")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB91634", Offset = "0xB91634", VA = "0xB91634")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB9178C", Offset = "0xB9178C", VA = "0xB9178C")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x200000A")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000309")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x200030A")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x200030B")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x200030C")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200030D")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200030E")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200030F")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000310")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000311")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000312")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000313")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000314")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000315")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000316")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000317")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000318")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000319")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x200031A")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x200031B")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000009")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB7FC78", Offset = "0xB7FC78", VA = "0xB7FC78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xB7DB14", Offset = "0xB7DB14", VA = "0xB7DB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76946C", Offset = "0x76946C")]
		add
		{
		}
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xB7E070", Offset = "0xB7E070", VA = "0xB7E070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76947C", Offset = "0x76947C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xB91900", Offset = "0xB91900", VA = "0xB91900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76948C", Offset = "0x76948C")]
		add
		{
		}
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xB919F0", Offset = "0xB919F0", VA = "0xB919F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76949C", Offset = "0x76949C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xB7DCF4", Offset = "0xB7DCF4", VA = "0xB7DCF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694AC", Offset = "0x7694AC")]
		add
		{
		}
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xB7E250", Offset = "0xB7E250", VA = "0xB7E250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694BC", Offset = "0x7694BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xB7DDE4", Offset = "0xB7DDE4", VA = "0xB7DDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694CC", Offset = "0x7694CC")]
		add
		{
		}
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xB7E340", Offset = "0xB7E340", VA = "0xB7E340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694DC", Offset = "0x7694DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xB91AE0", Offset = "0xB91AE0", VA = "0xB91AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694EC", Offset = "0x7694EC")]
		add
		{
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xB91BD0", Offset = "0xB91BD0", VA = "0xB91BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7694FC", Offset = "0x7694FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xB91CC0", Offset = "0xB91CC0", VA = "0xB91CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76950C", Offset = "0x76950C")]
		add
		{
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xB91DB0", Offset = "0xB91DB0", VA = "0xB91DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76951C", Offset = "0x76951C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xB91EA0", Offset = "0xB91EA0", VA = "0xB91EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76952C", Offset = "0x76952C")]
		add
		{
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xB91F90", Offset = "0xB91F90", VA = "0xB91F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76953C", Offset = "0x76953C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xB809B8", Offset = "0xB809B8", VA = "0xB809B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76954C", Offset = "0x76954C")]
		add
		{
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xB80CA4", Offset = "0xB80CA4", VA = "0xB80CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76955C", Offset = "0x76955C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xB7DC04", Offset = "0xB7DC04", VA = "0xB7DC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76956C", Offset = "0x76956C")]
		add
		{
		}
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xB7E160", Offset = "0xB7E160", VA = "0xB7E160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76957C", Offset = "0x76957C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xB808C8", Offset = "0xB808C8", VA = "0xB808C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76958C", Offset = "0x76958C")]
		add
		{
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xB80BB4", Offset = "0xB80BB4", VA = "0xB80BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76959C", Offset = "0x76959C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xB92080", Offset = "0xB92080", VA = "0xB92080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695AC", Offset = "0x7695AC")]
		add
		{
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xB92170", Offset = "0xB92170", VA = "0xB92170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695BC", Offset = "0x7695BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xB92260", Offset = "0xB92260", VA = "0xB92260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695CC", Offset = "0x7695CC")]
		add
		{
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xB92350", Offset = "0xB92350", VA = "0xB92350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695DC", Offset = "0x7695DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xB92440", Offset = "0xB92440", VA = "0xB92440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695EC", Offset = "0x7695EC")]
		add
		{
		}
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xB92530", Offset = "0xB92530", VA = "0xB92530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7695FC", Offset = "0x7695FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xB92620", Offset = "0xB92620", VA = "0xB92620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76960C", Offset = "0x76960C")]
		add
		{
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xB92710", Offset = "0xB92710", VA = "0xB92710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76961C", Offset = "0x76961C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xB92800", Offset = "0xB92800", VA = "0xB92800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76962C", Offset = "0x76962C")]
		add
		{
		}
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xB928F0", Offset = "0xB928F0", VA = "0xB928F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76963C", Offset = "0x76963C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xB929E0", Offset = "0xB929E0", VA = "0xB929E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76964C", Offset = "0x76964C")]
		add
		{
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB92AD0", Offset = "0xB92AD0", VA = "0xB92AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76965C", Offset = "0x76965C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB92BC0", Offset = "0xB92BC0", VA = "0xB92BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76966C", Offset = "0x76966C")]
		add
		{
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB92CB0", Offset = "0xB92CB0", VA = "0xB92CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76967C", Offset = "0x76967C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xB92DA0", Offset = "0xB92DA0", VA = "0xB92DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76968C", Offset = "0x76968C")]
		add
		{
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB92E90", Offset = "0xB92E90", VA = "0xB92E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76969C", Offset = "0x76969C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xB92F80", Offset = "0xB92F80", VA = "0xB92F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696AC", Offset = "0x7696AC")]
		add
		{
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xB93070", Offset = "0xB93070", VA = "0xB93070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696BC", Offset = "0x7696BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xB93160", Offset = "0xB93160", VA = "0xB93160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696CC", Offset = "0x7696CC")]
		add
		{
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xB93250", Offset = "0xB93250", VA = "0xB93250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696DC", Offset = "0x7696DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB93340", Offset = "0xB93340", VA = "0xB93340")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB93638", Offset = "0xB93638", VA = "0xB93638")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB936E0", Offset = "0xB936E0", VA = "0xB936E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB951A4", Offset = "0xB951A4", VA = "0xB951A4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB9560C", Offset = "0xB9560C", VA = "0xB9560C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB956E8", Offset = "0xB956E8", VA = "0xB956E8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB95828", Offset = "0xB95828", VA = "0xB95828")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB958CC", Offset = "0xB958CC", VA = "0xB958CC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB959AC", Offset = "0xB959AC", VA = "0xB959AC")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB93594", Offset = "0xB93594", VA = "0xB93594")]
	public void BindService()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB95A8C", Offset = "0xB95A8C", VA = "0xB95A8C")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB95B30", Offset = "0xB95B30", VA = "0xB95B30")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB95BD4", Offset = "0xB95BD4", VA = "0xB95BD4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB95594", Offset = "0xB95594", VA = "0xB95594")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB95C80", Offset = "0xB95C80", VA = "0xB95C80")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB95D24", Offset = "0xB95D24", VA = "0xB95D24")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB95DC8", Offset = "0xB95DC8", VA = "0xB95DC8")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB95E88", Offset = "0xB95E88", VA = "0xB95E88")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB95F2C", Offset = "0xB95F2C", VA = "0xB95F2C")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB95F9C", Offset = "0xB95F9C", VA = "0xB95F9C")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB9600C", Offset = "0xB9600C", VA = "0xB9600C")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB9607C", Offset = "0xB9607C", VA = "0xB9607C")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB960EC", Offset = "0xB960EC", VA = "0xB960EC")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB96198", Offset = "0xB96198", VA = "0xB96198")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB9624C", Offset = "0xB9624C", VA = "0xB9624C")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB96414", Offset = "0xB96414", VA = "0xB96414")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB96488", Offset = "0xB96488", VA = "0xB96488")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB96714", Offset = "0xB96714", VA = "0xB96714")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB9699C", Offset = "0xB9699C", VA = "0xB9699C")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB96C40", Offset = "0xB96C40", VA = "0xB96C40")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB971EC", Offset = "0xB971EC", VA = "0xB971EC")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB972E8", Offset = "0xB972E8", VA = "0xB972E8")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB97720", Offset = "0xB97720", VA = "0xB97720")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB9781C", Offset = "0xB9781C", VA = "0xB9781C")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB97918", Offset = "0xB97918", VA = "0xB97918")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB97A14", Offset = "0xB97A14", VA = "0xB97A14")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB97B10", Offset = "0xB97B10", VA = "0xB97B10")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB97C0C", Offset = "0xB97C0C", VA = "0xB97C0C")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB97D08", Offset = "0xB97D08", VA = "0xB97D08")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB97E04", Offset = "0xB97E04", VA = "0xB97E04")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB97F00", Offset = "0xB97F00", VA = "0xB97F00")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB97FB0", Offset = "0xB97FB0", VA = "0xB97FB0")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB97FB4", Offset = "0xB97FB4", VA = "0xB97FB4")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB97FB8", Offset = "0xB97FB8", VA = "0xB97FB8")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB97FBC", Offset = "0xB97FBC", VA = "0xB97FBC")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB982D8", Offset = "0xB982D8", VA = "0xB982D8")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB98434", Offset = "0xB98434", VA = "0xB98434")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB98584", Offset = "0xB98584", VA = "0xB98584")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB98110", Offset = "0xB98110", VA = "0xB98110")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB986D4", Offset = "0xB986D4", VA = "0xB986D4")]
	private void HideToast()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB9877C", Offset = "0xB9877C", VA = "0xB9877C")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB97428", Offset = "0xB97428", VA = "0xB97428")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB94A98", Offset = "0xB94A98", VA = "0xB94A98")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB946CC", Offset = "0xB946CC", VA = "0xB946CC")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB98790", Offset = "0xB98790", VA = "0xB98790")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB988E0", Offset = "0xB988E0", VA = "0xB988E0")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB98984", Offset = "0xB98984", VA = "0xB98984")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB98A84", Offset = "0xB98A84", VA = "0xB98A84")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x200000B")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761584", Offset = "0x761584")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xC25BF4", Offset = "0xC25BF4", VA = "0xC25BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xC25C5C", Offset = "0xC25C5C", VA = "0xC25C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xC256B4", Offset = "0xC256B4", VA = "0xC256B4")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xC25A64", Offset = "0xC25A64", VA = "0xC25A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xC25A68", Offset = "0xC25A68", VA = "0xC25A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xC25BFC", Offset = "0xC25BFC", VA = "0xC25BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xC25170", Offset = "0xC25170", VA = "0xC25170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xC25384", Offset = "0xC25384", VA = "0xC25384")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC254AC", Offset = "0xC254AC", VA = "0xC254AC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC25520", Offset = "0xC25520", VA = "0xC25520")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC25624", Offset = "0xC25624", VA = "0xC25624")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC254B0", Offset = "0xC254B0", VA = "0xC254B0")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC25628", Offset = "0xC25628", VA = "0xC25628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7696EC", Offset = "0x7696EC")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC256E0", Offset = "0xC256E0", VA = "0xC256E0")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC25844", Offset = "0xC25844", VA = "0xC25844")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC25A54", Offset = "0xC25A54", VA = "0xC25A54")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x200000C")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC25C64", Offset = "0xC25C64", VA = "0xC25C64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC25D38", Offset = "0xC25D38", VA = "0xC25D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC25D58", Offset = "0xC25D58", VA = "0xC25D58")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC25E78", Offset = "0xC25E78", VA = "0xC25E78")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x200000D")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC25E80", Offset = "0xC25E80", VA = "0xC25E80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC25EE0", Offset = "0xC25EE0", VA = "0xC25EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC25F50", Offset = "0xC25F50", VA = "0xC25F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xC25F70", Offset = "0xC25F70", VA = "0xC25F70")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC2629C", Offset = "0xC2629C", VA = "0xC2629C")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x200000E")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200031D")]
	public enum TipBtn
	{
		[Token(Token = "0x400133E")]
		app,
		[Token(Token = "0x400133F")]
		touchpad,
		[Token(Token = "0x4001340")]
		home,
		[Token(Token = "0x4001341")]
		volup,
		[Token(Token = "0x4001342")]
		voldown,
		[Token(Token = "0x4001343")]
		trigger,
		[Token(Token = "0x4001344")]
		grip
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC2AFF4", Offset = "0xC2AFF4", VA = "0xC2AFF4")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC2B16C", Offset = "0xC2B16C", VA = "0xC2B16C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC2B1EC", Offset = "0xC2B1EC", VA = "0xC2B1EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC2B3F0", Offset = "0xC2B3F0", VA = "0xC2B3F0")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC2B83C", Offset = "0xC2B83C", VA = "0xC2B83C")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC2B8E0", Offset = "0xC2B8E0", VA = "0xC2B8E0")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x200000F")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC2B8E8", Offset = "0xC2B8E8", VA = "0xC2B8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xC2B98C", Offset = "0xC2B98C", VA = "0xC2B98C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xC2BE34", Offset = "0xC2BE34", VA = "0xC2BE34")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xC2BAD4", Offset = "0xC2BAD4", VA = "0xC2BAD4")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xC2BFF0", Offset = "0xC2BFF0", VA = "0xC2BFF0")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xC2C340", Offset = "0xC2C340", VA = "0xC2C340")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xC2C6C4", Offset = "0xC2C6C4", VA = "0xC2C6C4")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC2BC28", Offset = "0xC2BC28", VA = "0xC2BC28")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC2BF14", Offset = "0xC2BF14", VA = "0xC2BF14")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC2B9B8", Offset = "0xC2B9B8", VA = "0xC2B9B8")]
	private void Process()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC2C700", Offset = "0xC2C700", VA = "0xC2C700")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC2C8F0", Offset = "0xC2C8F0", VA = "0xC2C8F0")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC2C9DC", Offset = "0xC2C9DC", VA = "0xC2C9DC")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000010")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC2CA98", Offset = "0xC2CA98", VA = "0xC2CA98")]
	private void Start()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC2CB48", Offset = "0xC2CB48", VA = "0xC2CB48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC2CB68", Offset = "0xC2CB68", VA = "0xC2CB68")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC2CC78", Offset = "0xC2CC78", VA = "0xC2CC78")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x2000011")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761594", Offset = "0x761594")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x958424", Offset = "0x958424", VA = "0x958424")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x958CA4", Offset = "0x958CA4", VA = "0x958CA4")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x957C04", Offset = "0x957C04", VA = "0x957C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x957DF0", Offset = "0x957DF0", VA = "0x957DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x9582C0", Offset = "0x9582C0", VA = "0x9582C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x957ED4", Offset = "0x957ED4", VA = "0x957ED4")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x95842C", Offset = "0x95842C", VA = "0x95842C")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x958788", Offset = "0x958788", VA = "0x958788")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x958744", Offset = "0x958744", VA = "0x958744")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x9587DC", Offset = "0x9587DC", VA = "0x9587DC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9588EC", Offset = "0x9588EC", VA = "0x9588EC")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x958BC0", Offset = "0x958BC0", VA = "0x958BC0")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x958C9C", Offset = "0x958C9C", VA = "0x958C9C")]
	public DemoController()
	{
	}
}
[Token(Token = "0x2000012")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x600014D")]
	[Address(RVA = "0x9891C8", Offset = "0x9891C8", VA = "0x9891C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x9891CC", Offset = "0x9891CC", VA = "0x9891CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x989240", Offset = "0x989240", VA = "0x989240")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x2000013")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615A4", Offset = "0x7615A4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x8FF15C", Offset = "0x8FF15C", VA = "0x8FF15C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x8FFD68", Offset = "0x8FFD68", VA = "0x8FFD68")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x8FE854", Offset = "0x8FE854", VA = "0x8FE854")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8FF154", Offset = "0x8FF154", VA = "0x8FF154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8FF158", Offset = "0x8FF158", VA = "0x8FF158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8FE858", Offset = "0x8FE858", VA = "0x8FE858")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x8FF164", Offset = "0x8FF164", VA = "0x8FF164")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8FFBDC", Offset = "0x8FFBDC", VA = "0x8FFBDC")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8FF398", Offset = "0x8FF398", VA = "0x8FF398")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8FF960", Offset = "0x8FF960", VA = "0x8FF960")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x8FFCC8", Offset = "0x8FFCC8", VA = "0x8FFCC8")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000014")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x9C655C", Offset = "0x9C655C", VA = "0x9C655C")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x9C6924", Offset = "0x9C6924", VA = "0x9C6924")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x9C6B5C", Offset = "0x9C6B5C", VA = "0x9C6B5C")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x9C6784", Offset = "0x9C6784", VA = "0x9C6784")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9C6C34", Offset = "0x9C6C34", VA = "0x9C6C34")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x9C6C80", Offset = "0x9C6C80", VA = "0x9C6C80")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x9C6DB4", Offset = "0x9C6DB4", VA = "0x9C6DB4")]
	public Callback()
	{
	}
}
[Token(Token = "0x2000015")]
public class CommonDic
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700000A")]
	public string subject
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x9CB4B0", Offset = "0x9CB4B0", VA = "0x9CB4B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x9CB4B8", Offset = "0x9CB4B8", VA = "0x9CB4B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public string body
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x9CB4C0", Offset = "0x9CB4C0", VA = "0x9CB4C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x9CB4C8", Offset = "0x9CB4C8", VA = "0x9CB4C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string order_id
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x9CB4D0", Offset = "0x9CB4D0", VA = "0x9CB4D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x9CB4D8", Offset = "0x9CB4D8", VA = "0x9CB4D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public string total
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x9CB4E0", Offset = "0x9CB4E0", VA = "0x9CB4E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x9CB4E8", Offset = "0x9CB4E8", VA = "0x9CB4E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public string goods_tag
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x9CB4F0", Offset = "0x9CB4F0", VA = "0x9CB4F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x9CB4F8", Offset = "0x9CB4F8", VA = "0x9CB4F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public string notify_url
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x9CB500", Offset = "0x9CB500", VA = "0x9CB500")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x9CB508", Offset = "0x9CB508", VA = "0x9CB508")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public string pay_code
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x9CB510", Offset = "0x9CB510", VA = "0x9CB510")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x9CB518", Offset = "0x9CB518", VA = "0x9CB518")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public string trade_type
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x9CB520", Offset = "0x9CB520", VA = "0x9CB520")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x9CB528", Offset = "0x9CB528", VA = "0x9CB528")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public string user_token
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x9CB530", Offset = "0x9CB530", VA = "0x9CB530")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x9CB538", Offset = "0x9CB538", VA = "0x9CB538")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public string access_token
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x9CB540", Offset = "0x9CB540", VA = "0x9CB540")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x9CB548", Offset = "0x9CB548", VA = "0x9CB548")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public string open_id
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x9CB550", Offset = "0x9CB550", VA = "0x9CB550")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x9CB558", Offset = "0x9CB558", VA = "0x9CB558")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public string refresh_token
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x9CB560", Offset = "0x9CB560", VA = "0x9CB560")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x9CB568", Offset = "0x9CB568", VA = "0x9CB568")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public string expires_in
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x9CB570", Offset = "0x9CB570", VA = "0x9CB570")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x9CB578", Offset = "0x9CB578", VA = "0x9CB578")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public string isSuccess
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x9CB580", Offset = "0x9CB580", VA = "0x9CB580")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x9CB588", Offset = "0x9CB588", VA = "0x9CB588")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public string loginMsg
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x9CB590", Offset = "0x9CB590", VA = "0x9CB590")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x9CB598", Offset = "0x9CB598", VA = "0x9CB598")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public string user_info
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x9CB5A0", Offset = "0x9CB5A0", VA = "0x9CB5A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x9CB5A8", Offset = "0x9CB5A8", VA = "0x9CB5A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public string order_info
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x9CB5B0", Offset = "0x9CB5B0", VA = "0x9CB5B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x9CB5B8", Offset = "0x9CB5B8", VA = "0x9CB5B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public string code
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x9CB5C0", Offset = "0x9CB5C0", VA = "0x9CB5C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x9CB5C8", Offset = "0x9CB5C8", VA = "0x9CB5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public string msg
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x9CB5D0", Offset = "0x9CB5D0", VA = "0x9CB5D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x9CB5D8", Offset = "0x9CB5D8", VA = "0x9CB5D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public string app_ID
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x9CB5E0", Offset = "0x9CB5E0", VA = "0x9CB5E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x9CB5E8", Offset = "0x9CB5E8", VA = "0x9CB5E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public string app_Key
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x9CB5F0", Offset = "0x9CB5F0", VA = "0x9CB5F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x9CB5F8", Offset = "0x9CB5F8", VA = "0x9CB5F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public string merchant_ID
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x9CB600", Offset = "0x9CB600", VA = "0x9CB600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x9CB608", Offset = "0x9CB608", VA = "0x9CB608")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public string paykey
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x9CB610", Offset = "0x9CB610", VA = "0x9CB610")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x9CB618", Offset = "0x9CB618", VA = "0x9CB618")]
		set
		{
		}
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x9C684C", Offset = "0x9C684C", VA = "0x9C684C")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9CB22C", Offset = "0x9CB22C", VA = "0x9CB22C")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x9CB27C", Offset = "0x9CB27C", VA = "0x9CB27C")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9CB440", Offset = "0x9CB440", VA = "0x9CB440")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x9CADA8", Offset = "0x9CADA8", VA = "0x9CADA8")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x9CAD20", Offset = "0x9CAD20", VA = "0x9CAD20")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x2000016")]
public class LoginSDK
{
	[Token(Token = "0x6000195")]
	[Address(RVA = "0x98E52C", Offset = "0x98E52C", VA = "0x98E52C")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x98E58C", Offset = "0x98E58C", VA = "0x98E58C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x98E5EC", Offset = "0x98E5EC", VA = "0x98E5EC")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000017")]
public class PicoPaymentSDK
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000021")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xA20090", Offset = "0xA20090", VA = "0xA20090")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xA200F8", Offset = "0xA200F8", VA = "0xA200F8")]
		set
		{
		}
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA20168", Offset = "0xA20168", VA = "0xA20168")]
	public static void Login()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA203E0", Offset = "0xA203E0", VA = "0xA203E0")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA20620", Offset = "0xA20620", VA = "0xA20620")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA20860", Offset = "0xA20860", VA = "0xA20860")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA20AD8", Offset = "0xA20AD8", VA = "0xA20AD8")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000018")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xC2AABC", Offset = "0xC2AABC", VA = "0xC2AABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xC2AAF4", Offset = "0xC2AAF4", VA = "0xC2AAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xC2AB04", Offset = "0xC2AB04", VA = "0xC2AB04")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC2AAC0", Offset = "0xC2AAC0", VA = "0xC2AAC0")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC2AAFC", Offset = "0xC2AAFC", VA = "0xC2AAFC")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC2AB0C", Offset = "0xC2AB0C", VA = "0xC2AB0C")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC2AB14", Offset = "0xC2AB14", VA = "0xC2AB14")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC2ABC8", Offset = "0xC2ABC8", VA = "0xC2ABC8")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC2AC60", Offset = "0xC2AC60", VA = "0xC2AC60")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC2ACF8", Offset = "0xC2ACF8", VA = "0xC2ACF8")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC2AD80", Offset = "0xC2AD80", VA = "0xC2AD80")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC2AE00", Offset = "0xC2AE00", VA = "0xC2AE00")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC2AEB0", Offset = "0xC2AEB0", VA = "0xC2AEB0")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC2AF3C", Offset = "0xC2AF3C", VA = "0xC2AF3C")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC2AFEC", Offset = "0xC2AFEC", VA = "0xC2AFEC")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000019")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA1AE5C", Offset = "0xA1AE5C", VA = "0xA1AE5C")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA1AEC8", Offset = "0xA1AEC8", VA = "0xA1AEC8")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA1AF70", Offset = "0xA1AF70", VA = "0xA1AF70")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA1B018", Offset = "0xA1B018", VA = "0xA1B018")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA1B0C0", Offset = "0xA1B0C0", VA = "0xA1B0C0")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA1B128", Offset = "0xA1B128", VA = "0xA1B128")]
	public PLOG()
	{
	}
}
[Token(Token = "0x200001A")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x9C6554", Offset = "0x9C6554", VA = "0x9C6554")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x99F57C", Offset = "0x99F57C", VA = "0x99F57C")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x9A6E38", Offset = "0x9A6E38", VA = "0x9A6E38")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x200001C")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000322")]
	public enum simulationType
	{
		[Token(Token = "0x400134A")]
		Null,
		[Token(Token = "0x400134B")]
		Invalid,
		[Token(Token = "0x400134C")]
		Valid
	}

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000022")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x9A6128", Offset = "0x9A6128", VA = "0x9A6128")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x9A6148", Offset = "0x9A6148", VA = "0x9A6148")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x9A5D74", Offset = "0x9A5D74", VA = "0x9A5D74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x9A6194", Offset = "0x9A6194", VA = "0x9A6194")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x9A5D94", Offset = "0x9A5D94", VA = "0x9A5D94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x9A61E0", Offset = "0x9A61E0", VA = "0x9A61E0")]
		set
		{
		}
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x9A6238", Offset = "0x9A6238", VA = "0x9A6238")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x200001D")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000323")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615B4", Offset = "0x7615B4")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x9A600C", Offset = "0x9A600C", VA = "0x9A600C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x9A6074", Offset = "0x9A6074", VA = "0x9A6074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x9A0B18", Offset = "0x9A0B18", VA = "0x9A0B18")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x9A5EC8", Offset = "0x9A5EC8", VA = "0x9A5EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x9A5ECC", Offset = "0x9A5ECC", VA = "0x9A5ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x9A6014", Offset = "0x9A6014", VA = "0x9A6014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615C4", Offset = "0x7615C4")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x9A1F00", Offset = "0x9A1F00", VA = "0x9A1F00")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x9A4ED0", Offset = "0x9A4ED0", VA = "0x9A4ED0")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615D4", Offset = "0x7615D4")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x9A4FE8", Offset = "0x9A4FE8", VA = "0x9A4FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x9A5050", Offset = "0x9A5050", VA = "0x9A5050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x9A2238", Offset = "0x9A2238", VA = "0x9A2238")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x9A4F20", Offset = "0x9A4F20", VA = "0x9A4F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x9A4F24", Offset = "0x9A4F24", VA = "0x9A4F24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x9A4FF0", Offset = "0x9A4FF0", VA = "0x9A4FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615E4", Offset = "0x7615E4")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x9A5E58", Offset = "0x9A5E58", VA = "0x9A5E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x9A5EC0", Offset = "0x9A5EC0", VA = "0x9A5EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x9A4130", Offset = "0x9A4130", VA = "0x9A4130")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x9A5B24", Offset = "0x9A5B24", VA = "0x9A5B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x9A5B28", Offset = "0x9A5B28", VA = "0x9A5B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x9A5E60", Offset = "0x9A5E60", VA = "0x9A5E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7615F4", Offset = "0x7615F4")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x9A535C", Offset = "0x9A535C", VA = "0x9A535C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x9A53C4", Offset = "0x9A53C4", VA = "0x9A53C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x9A41BC", Offset = "0x9A41BC", VA = "0x9A41BC")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x9A5058", Offset = "0x9A5058", VA = "0x9A5058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x9A505C", Offset = "0x9A505C", VA = "0x9A505C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x9A5364", Offset = "0x9A5364", VA = "0x9A5364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761604", Offset = "0x761604")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x9A5AB4", Offset = "0x9A5AB4", VA = "0x9A5AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x9A5B1C", Offset = "0x9A5B1C", VA = "0x9A5B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x9A4DB4", Offset = "0x9A4DB4", VA = "0x9A4DB4")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x9A53CC", Offset = "0x9A53CC", VA = "0x9A53CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x9A53D0", Offset = "0x9A53D0", VA = "0x9A53D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x9A5ABC", Offset = "0x9A5ABC", VA = "0x9A5ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76280C", Offset = "0x76280C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000025")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x99F284", Offset = "0x99F284", VA = "0x99F284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x99F484", Offset = "0x99F484", VA = "0x99F484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x99F48C", Offset = "0x99F48C", VA = "0x99F48C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x99F4AC", Offset = "0x99F4AC", VA = "0x99F4AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x99F4B4", Offset = "0x99F4B4", VA = "0x99F4B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x99F4D4", Offset = "0x99F4D4", VA = "0x99F4D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x99F4DC", Offset = "0x99F4DC", VA = "0x99F4DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x99F4FC", Offset = "0x99F4FC", VA = "0x99F4FC")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x99F504", Offset = "0x99F504", VA = "0x99F504")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x99F644", Offset = "0x99F644", VA = "0x99F644")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x99F64C", Offset = "0x99F64C", VA = "0x99F64C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x99F66C", Offset = "0x99F66C", VA = "0x99F66C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769750", Offset = "0x769750")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x99F674", Offset = "0x99F674", VA = "0x99F674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769760", Offset = "0x769760")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool ShowFPS
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x99F680", Offset = "0x99F680", VA = "0x99F680")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x99F688", Offset = "0x99F688", VA = "0x99F688")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public bool PVRNeck
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x99F6A8", Offset = "0x99F6A8", VA = "0x99F6A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x99F6B0", Offset = "0x99F6B0", VA = "0x99F6B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x99F6D0", Offset = "0x99F6D0", VA = "0x99F6D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x99F6D8", Offset = "0x99F6D8", VA = "0x99F6D8")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x99F704", Offset = "0x99F704", VA = "0x99F704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769770", Offset = "0x769770")]
		add
		{
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x99F7F4", Offset = "0x99F7F4", VA = "0x99F7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769780", Offset = "0x769780")]
		remove
		{
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x99F524", Offset = "0x99F524", VA = "0x99F524")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x99F5D0", Offset = "0x99F5D0", VA = "0x99F5D0")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x99F608", Offset = "0x99F608", VA = "0x99F608")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x99F8E4", Offset = "0x99F8E4", VA = "0x99F8E4")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x99FA3C", Offset = "0x99FA3C", VA = "0x99FA3C")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x99FC3C", Offset = "0x99FC3C", VA = "0x99FC3C")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x9A03AC", Offset = "0x9A03AC", VA = "0x9A03AC")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x9A072C", Offset = "0x9A072C", VA = "0x9A072C")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x9A09DC", Offset = "0x9A09DC", VA = "0x9A09DC")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x99FFBC", Offset = "0x99FFBC", VA = "0x99FFBC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x9A0B14", Offset = "0x9A0B14", VA = "0x9A0B14")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x9A0304", Offset = "0x9A0304", VA = "0x9A0304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769790", Offset = "0x769790")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9A0B44", Offset = "0x9A0B44", VA = "0x9A0B44")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9A0CF0", Offset = "0x9A0CF0", VA = "0x9A0CF0")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x9A1CA0", Offset = "0x9A1CA0", VA = "0x9A1CA0")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9A1DBC", Offset = "0x9A1DBC", VA = "0x9A1DBC")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9A1088", Offset = "0x9A1088", VA = "0x9A1088")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9A15A0", Offset = "0x9A15A0", VA = "0x9A15A0")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9A197C", Offset = "0x9A197C", VA = "0x9A197C")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9A1F08", Offset = "0x9A1F08", VA = "0x9A1F08")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9A1C14", Offset = "0x9A1C14", VA = "0x9A1C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7697F4", Offset = "0x7697F4")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9A21BC", Offset = "0x9A21BC", VA = "0x9A21BC")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x9A2264", Offset = "0x9A2264", VA = "0x9A2264")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x99F9C0", Offset = "0x99F9C0", VA = "0x99F9C0")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x9A2420", Offset = "0x9A2420", VA = "0x9A2420")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x9A24EC", Offset = "0x9A24EC", VA = "0x9A24EC")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x9A24F4", Offset = "0x9A24F4", VA = "0x9A24F4")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x9A27D8", Offset = "0x9A27D8", VA = "0x9A27D8")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x9A2BAC", Offset = "0x9A2BAC", VA = "0x9A2BAC")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x9A2F50", Offset = "0x9A2F50", VA = "0x9A2F50")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x9A308C", Offset = "0x9A308C", VA = "0x9A308C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x9A40B4", Offset = "0x9A40B4", VA = "0x9A40B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769858", Offset = "0x769858")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x9A415C", Offset = "0x9A415C", VA = "0x9A415C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7698BC", Offset = "0x7698BC")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x9A41E8", Offset = "0x9A41E8", VA = "0x9A41E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x9A44B4", Offset = "0x9A44B4", VA = "0x9A44B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x9A461C", Offset = "0x9A461C", VA = "0x9A461C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x9A4774", Offset = "0x9A4774", VA = "0x9A4774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x9A477C", Offset = "0x9A477C", VA = "0x9A477C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x9A49D8", Offset = "0x9A49D8", VA = "0x9A49D8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x9A4C90", Offset = "0x9A4C90", VA = "0x9A4C90")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x9A4824", Offset = "0x9A4824", VA = "0x9A4824")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9A4DAC", Offset = "0x9A4DAC", VA = "0x9A4DAC")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x9A3A9C", Offset = "0x9A3A9C", VA = "0x9A3A9C")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x9A3CEC", Offset = "0x9A3CEC", VA = "0x9A3CEC")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x9A3690", Offset = "0x9A3690", VA = "0x9A3690")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x9A4C14", Offset = "0x9A4C14", VA = "0x9A4C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769920", Offset = "0x769920")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x9A4DE0", Offset = "0x9A4DE0", VA = "0x9A4DE0")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x200001E")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000205")]
	[Address(RVA = "0x9AEB80", Offset = "0x9AEB80", VA = "0x9AEB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x9AEB84", Offset = "0x9AEB84", VA = "0x9AEB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x9AEBB0", Offset = "0x9AEBB0", VA = "0x9AEBB0")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x200001F")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xC321E4", Offset = "0xC321E4", VA = "0xC321E4")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xC307EC", Offset = "0xC307EC", VA = "0xC307EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xC308A4", Offset = "0xC308A4", VA = "0xC308A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xC314CC", Offset = "0xC314CC", VA = "0xC314CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xC30EA4", Offset = "0xC30EA4", VA = "0xC30EA4")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xC3201C", Offset = "0xC3201C", VA = "0xC3201C")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC31890", Offset = "0xC31890", VA = "0xC31890")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xC31BE8", Offset = "0xC31BE8", VA = "0xC31BE8")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xC31780", Offset = "0xC31780", VA = "0xC31780")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC30B2C", Offset = "0xC30B2C", VA = "0xC30B2C")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC321B8", Offset = "0xC321B8", VA = "0xC321B8")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xC316AC", Offset = "0xC316AC", VA = "0xC316AC")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xC316D8", Offset = "0xC316D8", VA = "0xC316D8")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC321EC", Offset = "0xC321EC", VA = "0xC321EC")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x760408", Offset = "0x760408")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7628BC", Offset = "0x7628BC")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000146")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700002F")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x10F4560", Offset = "0x10F4560", VA = "0x10F4560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769984", Offset = "0x769984")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x10F4568", Offset = "0x10F4568", VA = "0x10F4568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769994", Offset = "0x769994")]
		private set
		{
		}
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10F4570", Offset = "0x10F4570", VA = "0x10F4570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x10F4618", Offset = "0x10F4618", VA = "0x10F4618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10F4B90", Offset = "0x10F4B90", VA = "0x10F4B90")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10F4DC4", Offset = "0x10F4DC4", VA = "0x10F4DC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x10F4EEC", Offset = "0x10F4EEC", VA = "0x10F4EEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x10F5014", Offset = "0x10F5014", VA = "0x10F5014")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10F5098", Offset = "0x10F5098", VA = "0x10F5098")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x10F5284", Offset = "0x10F5284", VA = "0x10F5284")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10F5344", Offset = "0x10F5344", VA = "0x10F5344")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x10F5158", Offset = "0x10F5158", VA = "0x10F5158")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x10F5404", Offset = "0x10F5404", VA = "0x10F5404")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x10F571C", Offset = "0x10F571C", VA = "0x10F571C")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x10F46F0", Offset = "0x10F46F0", VA = "0x10F46F0")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x10F48F0", Offset = "0x10F48F0", VA = "0x10F48F0")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x10EB64C", Offset = "0x10EB64C", VA = "0x10EB64C")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x10F5898", Offset = "0x10F5898", VA = "0x10F5898")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x10F59D4", Offset = "0x10F59D4", VA = "0x10F59D4")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x10F559C", Offset = "0x10F559C", VA = "0x10F559C")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x10F5C54", Offset = "0x10F5C54", VA = "0x10F5C54")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x2000021")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761614", Offset = "0x761614")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x10F93C0", Offset = "0x10F93C0", VA = "0x10F93C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x10F9428", Offset = "0x10F9428", VA = "0x10F9428", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x10F7AF4", Offset = "0x10F7AF4", VA = "0x10F7AF4")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x10F8498", Offset = "0x10F8498", VA = "0x10F8498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x10F849C", Offset = "0x10F849C", VA = "0x10F849C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x10F93C8", Offset = "0x10F93C8", VA = "0x10F93C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761624", Offset = "0x761624")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x10F9570", Offset = "0x10F9570", VA = "0x10F9570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x10F95D8", Offset = "0x10F95D8", VA = "0x10F95D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x10F83E4", Offset = "0x10F83E4", VA = "0x10F83E4")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x10F9430", Offset = "0x10F9430", VA = "0x10F9430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x10F9434", Offset = "0x10F9434", VA = "0x10F9434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x10F9578", Offset = "0x10F9578", VA = "0x10F9578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7629AC", Offset = "0x7629AC")]
	public bool screenFade;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7629E4", Offset = "0x7629E4")]
	public float fadeTime;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762A1C", Offset = "0x762A1C")]
	public Color fadeColor;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000030")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x10EB4B4", Offset = "0x10EB4B4", VA = "0x10EB4B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x10EB5AC", Offset = "0x10EB5AC", VA = "0x10EB5AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x10F5D74", Offset = "0x10F5D74", VA = "0x10F5D74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x10F5D7C", Offset = "0x10F5D7C", VA = "0x10F5D7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x10F5DE0", Offset = "0x10F5DE0", VA = "0x10F5DE0")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x10F5DE8", Offset = "0x10F5DE8", VA = "0x10F5DE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x10F5DFC", Offset = "0x10F5DFC", VA = "0x10F5DFC")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x10F6018", Offset = "0x10F6018", VA = "0x10F6018")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x10F60E0", Offset = "0x10F60E0", VA = "0x10F60E0")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x10F61F8", Offset = "0x10F61F8", VA = "0x10F61F8")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x10F62D8", Offset = "0x10F62D8", VA = "0x10F62D8")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x10F6454", Offset = "0x10F6454", VA = "0x10F6454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x10F6C68", Offset = "0x10F6C68", VA = "0x10F6C68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x10F74A4", Offset = "0x10F74A4", VA = "0x10F74A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x10F74C8", Offset = "0x10F74C8", VA = "0x10F74C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x10F7728", Offset = "0x10F7728", VA = "0x10F7728")]
	private void OnPause()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x10F781C", Offset = "0x10F781C", VA = "0x10F781C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x10F7824", Offset = "0x10F7824", VA = "0x10F7824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x10F798C", Offset = "0x10F798C", VA = "0x10F798C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x10F7A78", Offset = "0x10F7A78", VA = "0x10F7A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7699A4", Offset = "0x7699A4")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x10F7B20", Offset = "0x10F7B20", VA = "0x10F7B20")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x10F7D24", Offset = "0x10F7D24", VA = "0x10F7D24")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10EC454", Offset = "0x10EC454", VA = "0x10EC454")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x10F8030", Offset = "0x10F8030", VA = "0x10F8030")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x10F67D8", Offset = "0x10F67D8", VA = "0x10F67D8")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x10F7828", Offset = "0x10F7828", VA = "0x10F7828")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x10F6C60", Offset = "0x10F6C60", VA = "0x10F6C60")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x10F7414", Offset = "0x10F7414", VA = "0x10F7414")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769A08", Offset = "0x769A08")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x10F828C", Offset = "0x10F828C", VA = "0x10F828C")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x10F72C4", Offset = "0x10F72C4", VA = "0x10F72C4")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x10F8410", Offset = "0x10F8410", VA = "0x10F8410")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200032D")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200032E")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001373")]
		Quad,
		[Token(Token = "0x4001374")]
		Cylinder,
		[Token(Token = "0x4001375")]
		Equirect
	}

	[Token(Token = "0x200032F")]
	public enum OverlayType
	{
		[Token(Token = "0x4001377")]
		Overlay,
		[Token(Token = "0x4001378")]
		Underlay
	}

	[Token(Token = "0x2000330")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x400137A")]
		NotCare,
		[Token(Token = "0x400137B")]
		Nearest,
		[Token(Token = "0x400137C")]
		Linear,
		[Token(Token = "0x400137D")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x400137E")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x400137F")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001380")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x10F95E0", Offset = "0x10F95E0", VA = "0x10F95E0", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x10F9600", Offset = "0x10F9600", VA = "0x10F9600")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10F9B28", Offset = "0x10F9B28", VA = "0x10F9B28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x10F9FDC", Offset = "0x10F9FDC", VA = "0x10F9FDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x10F705C", Offset = "0x10F705C", VA = "0x10F705C")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x10F9974", Offset = "0x10F9974", VA = "0x10F9974")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x10F9B2C", Offset = "0x10F9B2C", VA = "0x10F9B2C")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x10FA060", Offset = "0x10FA060", VA = "0x10FA060")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x10FA110", Offset = "0x10FA110", VA = "0x10FA110")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x10F9340", Offset = "0x10F9340", VA = "0x10F9340")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x10F9380", Offset = "0x10F9380", VA = "0x10F9380")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x10FA124", Offset = "0x10FA124", VA = "0x10FA124")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x2000023")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762A54", Offset = "0x762A54")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000034")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x99FB74", Offset = "0x99FB74", VA = "0x99FB74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x9A6F50", Offset = "0x9A6F50", VA = "0x9A6F50")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x9A7928", Offset = "0x9A7928", VA = "0x9A7928")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000036")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x9A7930", Offset = "0x9A7930", VA = "0x9A7930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769A6C", Offset = "0x769A6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x9A7938", Offset = "0x9A7938", VA = "0x9A7938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769A7C", Offset = "0x769A7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float RtScaleFactor
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x9A7940", Offset = "0x9A7940", VA = "0x9A7940")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x9A7948", Offset = "0x9A7948", VA = "0x9A7948")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x9A7AA8", Offset = "0x9A7AA8", VA = "0x9A7AA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x9A7AB0", Offset = "0x9A7AB0", VA = "0x9A7AB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x9A7AC4", Offset = "0x9A7AC4", VA = "0x9A7AC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x9A7ACC", Offset = "0x9A7ACC", VA = "0x9A7ACC")]
		set
		{
		}
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x9A6E40", Offset = "0x9A6E40", VA = "0x9A6E40")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x9A6FC0", Offset = "0x9A6FC0", VA = "0x9A6FC0")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x9A78A8", Offset = "0x9A78A8", VA = "0x9A78A8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x9A7F58", Offset = "0x9A7F58", VA = "0x9A7F58")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x9A806C", Offset = "0x9A806C", VA = "0x9A806C")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x9A8114", Offset = "0x9A8114", VA = "0x9A8114")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x9A8A9C", Offset = "0x9A8A9C", VA = "0x9A8A9C")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x9A8470", Offset = "0x9A8470", VA = "0x9A8470")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x9A85D0", Offset = "0x9A85D0", VA = "0x9A85D0")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x9A8CC0", Offset = "0x9A8CC0", VA = "0x9A8CC0")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x9A7960", Offset = "0x9A7960", VA = "0x9A7960")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x9A5D5C", Offset = "0x9A5D5C", VA = "0x9A5D5C")]
	public void ReInit()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x9A520C", Offset = "0x9A520C", VA = "0x9A520C")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x9A9220", Offset = "0x9A9220", VA = "0x9A9220")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x9A8730", Offset = "0x9A8730", VA = "0x9A8730")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x9A9448", Offset = "0x9A9448", VA = "0x9A9448")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x9A7AE0", Offset = "0x9A7AE0", VA = "0x9A7AE0")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000024")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x9AC288", Offset = "0x9AC288", VA = "0x9AC288", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x9ACB54", Offset = "0x9ACB54", VA = "0x9ACB54", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x9ACC7C", Offset = "0x9ACC7C", VA = "0x9ACC7C", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x9AD4A0", Offset = "0x9AD4A0", VA = "0x9AD4A0", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x9ACB58", Offset = "0x9ACB58", VA = "0x9ACB58")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x9AD558", Offset = "0x9AD558", VA = "0x9AD558")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x9AC5F8", Offset = "0x9AC5F8", VA = "0x9AC5F8")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x9ACA0C", Offset = "0x9ACA0C", VA = "0x9ACA0C")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x9AD660", Offset = "0x9AD660", VA = "0x9AD660")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x9AD878", Offset = "0x9AD878", VA = "0x9AD878")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x9AD734", Offset = "0x9AD734", VA = "0x9AD734")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x9AD4A8", Offset = "0x9AD4A8", VA = "0x9AD4A8")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x9ADA54", Offset = "0x9ADA54", VA = "0x9ADA54")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x9ACC80", Offset = "0x9ACC80", VA = "0x9ACC80")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x9ADD00", Offset = "0x9ADD00", VA = "0x9ADD00")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x9ADC60", Offset = "0x9ADC60", VA = "0x9ADC60")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x9A913C", Offset = "0x9A913C", VA = "0x9A913C")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x2000025")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000287")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000288")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000289")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x600028A")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x9AE384", Offset = "0x9AE384", VA = "0x9AE384")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x2000026")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x8FDADC", Offset = "0x8FDADC", VA = "0x8FDADC")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x8FDB70", Offset = "0x8FDB70", VA = "0x8FDB70")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x8FDD4C", Offset = "0x8FDD4C", VA = "0x8FDD4C")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000027")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x9AFA00", Offset = "0x9AFA00", VA = "0x9AFA00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x9AFAA8", Offset = "0x9AFAA8", VA = "0x9AFAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x9AFC40", Offset = "0x9AFC40", VA = "0x9AFC40")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000028")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x982AD4", Offset = "0x982AD4", VA = "0x982AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x982C08", Offset = "0x982C08", VA = "0x982C08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x982C94", Offset = "0x982C94", VA = "0x982C94")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x982AD8", Offset = "0x982AD8", VA = "0x982AD8")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x982C44", Offset = "0x982C44", VA = "0x982C44")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x982CAC", Offset = "0x982CAC", VA = "0x982CAC")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000029")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761634", Offset = "0x761634")]
	private sealed class <>c
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xA1ADE8", Offset = "0xA1ADE8", VA = "0xA1ADE8")]
		public <>c()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xA1ADF0", Offset = "0xA1ADF0", VA = "0xA1ADF0")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40001BC")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA1A9A8", Offset = "0xA1A9A8", VA = "0xA1A9A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA1AAE8", Offset = "0xA1AAE8", VA = "0xA1AAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA1AB6C", Offset = "0xA1AB6C", VA = "0xA1AB6C")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA1AD78", Offset = "0xA1AD78", VA = "0xA1AD78")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x200002A")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA0D90C", Offset = "0xA0D90C", VA = "0xA0D90C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA0D968", Offset = "0xA0D968", VA = "0xA0D968")]
	public void Reset()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA0D9C0", Offset = "0xA0D9C0", VA = "0xA0D9C0")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76046C", Offset = "0x76046C")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA0D9C8", Offset = "0xA0D9C8", VA = "0xA0D9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA0DB3C", Offset = "0xA0DB3C", VA = "0xA0DB3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA0DAA4", Offset = "0xA0DAA4", VA = "0xA0DAA4")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA0DB40", Offset = "0xA0DB40", VA = "0xA0DB40")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA0DC40", Offset = "0xA0DC40", VA = "0xA0DC40")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA0DD4C", Offset = "0xA0DD4C", VA = "0xA0DD4C")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x200002C")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x9AFF2C", Offset = "0x9AFF2C", VA = "0x9AFF2C")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x9AFFC0", Offset = "0x9AFFC0", VA = "0x9AFFC0")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x200002D")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xAA3E4C", Offset = "0xAA3E4C", VA = "0xAA3E4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xAA3EE0", Offset = "0xAA3EE0", VA = "0xAA3EE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xAA3F74", Offset = "0xAA3F74", VA = "0xAA3F74")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xAA4240", Offset = "0xAA4240", VA = "0xAA4240")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x200002E")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762A64", Offset = "0x762A64")]
	public bool trackRotation;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762A9C", Offset = "0x762A9C")]
	public bool trackPosition;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700003A")]
	public Ray Gaze
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x99ED90", Offset = "0x99ED90", VA = "0x99ED90")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x99F27C", Offset = "0x99F27C", VA = "0x99F27C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x99EE2C", Offset = "0x99EE2C", VA = "0x99EE2C")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x99F474", Offset = "0x99F474", VA = "0x99F474")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x200002F")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762AD4", Offset = "0x762AD4")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762AE4", Offset = "0x762AE4")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762AF4", Offset = "0x762AF4")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700003B")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x9A676C", Offset = "0x9A676C", VA = "0x9A676C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700003C")]
	public Vector3 Position
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x9A68B0", Offset = "0x9A68B0", VA = "0x9A68B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769A8C", Offset = "0x769A8C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x9A68BC", Offset = "0x9A68BC", VA = "0x9A68BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769A9C", Offset = "0x769A9C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x9A68C8", Offset = "0x9A68C8", VA = "0x9A68C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769AAC", Offset = "0x769AAC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x9A68D4", Offset = "0x9A68D4", VA = "0x9A68D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769ABC", Offset = "0x769ABC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x9A68E0", Offset = "0x9A68E0", VA = "0x9A68E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769ACC", Offset = "0x769ACC")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x9A68FC", Offset = "0x9A68FC", VA = "0x9A68FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769ADC", Offset = "0x769ADC")]
		protected set
		{
		}
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x9A6918", Offset = "0x9A6918", VA = "0x9A6918")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x9A6AD0", Offset = "0x9A6AD0", VA = "0x9A6AD0")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9A6B50", Offset = "0x9A6B50", VA = "0x9A6B50")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x9A6964", Offset = "0x9A6964", VA = "0x9A6964")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x9A6C80", Offset = "0x9A6C80", VA = "0x9A6C80")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000030")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000332")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000333")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x1700003F")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x99F3AC", Offset = "0x99F3AC", VA = "0x99F3AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x9A9510", Offset = "0x9A9510", VA = "0x9A9510")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x9A96BC", Offset = "0x9A96BC", VA = "0x9A96BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769AEC", Offset = "0x769AEC")]
		add
		{
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x9A97AC", Offset = "0x9A97AC", VA = "0x9A97AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769AFC", Offset = "0x769AFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x9A989C", Offset = "0x9A989C", VA = "0x9A989C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B0C", Offset = "0x769B0C")]
		add
		{
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x9A998C", Offset = "0x9A998C", VA = "0x9A998C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B1C", Offset = "0x769B1C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x9A9454", Offset = "0x9A9454", VA = "0x9A9454")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x9A9580", Offset = "0x9A9580", VA = "0x9A9580")]
	public void Init()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x9A4468", Offset = "0x9A4468", VA = "0x9A4468")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x9A9CBC", Offset = "0x9A9CBC", VA = "0x9A9CBC")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x9A9A7C", Offset = "0x9A9A7C", VA = "0x9A9A7C")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x9A5978", Offset = "0x9A5978", VA = "0x9A5978")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x9A489C", Offset = "0x9A489C", VA = "0x9A489C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x9A2A30", Offset = "0x9A2A30", VA = "0x9A2A30")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x9A25F0", Offset = "0x9A25F0", VA = "0x9A25F0")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x9A9DF8", Offset = "0x9A9DF8", VA = "0x9A9DF8")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x9AB454", Offset = "0x9AB454", VA = "0x9AB454")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x9AB2D0", Offset = "0x9AB2D0", VA = "0x9AB2D0")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000031")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9C64D8", Offset = "0x9C64D8", VA = "0x9C64D8")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000334")]
	public struct Lenses
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001387")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001388")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001389")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000335")]
	public struct MaxFOV
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000336")]
	public struct Distortion
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x80BFC8", Offset = "0x80BFC8", VA = "0x80BFC8")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x80BFD0", Offset = "0x80BFD0", VA = "0x80BFD0")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x80BFD8", Offset = "0x80BFD8", VA = "0x80BFD8")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000337")]
	public struct Device
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x10F2960", Offset = "0x10F2960", VA = "0x10F2960")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x10F29F8", Offset = "0x10F29F8", VA = "0x10F29F8")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x10F2AA0", Offset = "0x10F2AA0", VA = "0x10F2AA0")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x10F2DEC", Offset = "0x10F2DEC", VA = "0x10F2DEC")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x10F3018", Offset = "0x10F3018", VA = "0x10F3018")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x10F29F0", Offset = "0x10F29F0", VA = "0x10F29F0")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7604D0", Offset = "0x7604D0")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x99EBE4", Offset = "0x99EBE4", VA = "0x99EBE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x99EC6C", Offset = "0x99EC6C", VA = "0x99EC6C")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x99ED80", Offset = "0x99ED80", VA = "0x99ED80")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x2000034")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC262AC", Offset = "0xC262AC", VA = "0xC262AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC2630C", Offset = "0xC2630C", VA = "0xC2630C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC26440", Offset = "0xC26440", VA = "0xC26440")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC264E8", Offset = "0xC264E8", VA = "0xC264E8")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x2000035")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000338")]
	public enum Mode
	{
		[Token(Token = "0x4001399")]
		Click,
		[Token(Token = "0x400139A")]
		Gaze
	}

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762B24", Offset = "0x762B24")]
	public string ClickInputName;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762B5C", Offset = "0x762B5C")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762B94", Offset = "0x762B94")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762BA4", Offset = "0x762BA4")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000040")]
	public static float gazeFraction
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xC264F0", Offset = "0xC264F0", VA = "0xC264F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B2C", Offset = "0x769B2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xC26540", Offset = "0xC26540", VA = "0xC26540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B3C", Offset = "0x769B3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xC2659C", Offset = "0xC2659C", VA = "0xC2659C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B4C", Offset = "0x769B4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xC265EC", Offset = "0xC265EC", VA = "0xC265EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B5C", Offset = "0x769B5C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC26644", Offset = "0xC26644", VA = "0xC26644", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC26668", Offset = "0xC26668", VA = "0xC26668")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC26868", Offset = "0xC26868", VA = "0xC26868")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC26D5C", Offset = "0xC26D5C", VA = "0xC26D5C")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x760534", Offset = "0x760534")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762BB4", Offset = "0x762BB4")]
	public Transform Crosshair;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xC26DC4", Offset = "0xC26DC4", VA = "0xC26DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC26E24", Offset = "0xC26E24", VA = "0xC26E24")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xC26E8C", Offset = "0xC26E8C", VA = "0xC26E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC26F9C", Offset = "0xC26F9C", VA = "0xC26F9C")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC27094", Offset = "0xC27094", VA = "0xC27094")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000037")]
public enum RenderEventType
{
	[Token(Token = "0x4000205")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000206")]
	Pause,
	[Token(Token = "0x4000207")]
	Resume,
	[Token(Token = "0x4000208")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000209")]
	RightEyeEndFrame,
	[Token(Token = "0x400020A")]
	TimeWarp,
	[Token(Token = "0x400020B")]
	ResetVrModeParms,
	[Token(Token = "0x400020C")]
	ShutdownRenderThread,
	[Token(Token = "0x400020D")]
	BeginEye,
	[Token(Token = "0x400020E")]
	EndEye,
	[Token(Token = "0x400020F")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000210")]
	BoundaryRenderRight,
	[Token(Token = "0x4000211")]
	BothEyeEndFrame,
	[Token(Token = "0x4000212")]
	CameraFrameLeft,
	[Token(Token = "0x4000213")]
	CameraFrameRight,
	[Token(Token = "0x4000214")]
	StartCameraFrame,
	[Token(Token = "0x4000215")]
	StopCameraFrame
}
[Token(Token = "0x2000038")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000339")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000216")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000217")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000218")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000219")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400021A")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400021B")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400021C")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9A4D80", Offset = "0x9A4D80", VA = "0x9A4D80")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9A62BC", Offset = "0x9A62BC", VA = "0x9A62BC")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9A62C4", Offset = "0x9A62C4", VA = "0x9A62C4")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9A62E4", Offset = "0x9A62E4", VA = "0x9A62E4")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x9A62B4", Offset = "0x9A62B4", VA = "0x9A62B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x769B6C", Offset = "0x769B6C")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x9A62F8", Offset = "0x9A62F8", VA = "0x9A62F8")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000039")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x762BEC", Offset = "0x762BEC")]
	public GameObject cursor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9AB62C", Offset = "0x9AB62C", VA = "0x9AB62C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9AB6BC", Offset = "0x9AB6BC", VA = "0x9AB6BC", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x9AB9BC", Offset = "0x9AB9BC", VA = "0x9AB9BC", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9ABA44", Offset = "0x9ABA44", VA = "0x9ABA44", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9ABA80", Offset = "0x9ABA80", VA = "0x9ABA80")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x9ABBE4", Offset = "0x9ABBE4", VA = "0x9ABBE4")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x9ABD84", Offset = "0x9ABD84", VA = "0x9ABD84")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x9AB7C8", Offset = "0x9AB7C8", VA = "0x9AB7C8")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x9ABFAC", Offset = "0x9ABFAC", VA = "0x9ABFAC")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x9AC234", Offset = "0x9AC234", VA = "0x9AC234")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x200003A")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400022B")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x400022C")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x400022D")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000042")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xC2979C", Offset = "0xC2979C", VA = "0xC2979C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xC29850", Offset = "0xC29850", VA = "0xC29850")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xC29CEC", Offset = "0xC29CEC", VA = "0xC29CEC")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC2A3C0", Offset = "0xC2A3C0", VA = "0xC2A3C0")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC2A538", Offset = "0xC2A538", VA = "0xC2A538")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC2A940", Offset = "0xC2A940", VA = "0xC2A940")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC2A678", Offset = "0xC2A678", VA = "0xC2A678")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xC2A8B4", Offset = "0xC2A8B4", VA = "0xC2A8B4")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xC29848", Offset = "0xC29848", VA = "0xC29848")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x200003B")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762C44", Offset = "0x762C44")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762C54", Offset = "0x762C54")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762C64", Offset = "0x762C64")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000043")]
	public int x
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xB7D970", Offset = "0xB7D970", VA = "0xB7D970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769BD0", Offset = "0x769BD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xB7D978", Offset = "0xB7D978", VA = "0xB7D978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769BE0", Offset = "0x769BE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public int y
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xB7D980", Offset = "0xB7D980", VA = "0xB7D980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769BF0", Offset = "0x769BF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xB7D988", Offset = "0xB7D988", VA = "0xB7D988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769C00", Offset = "0x769C00")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int z
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xB7D990", Offset = "0xB7D990", VA = "0xB7D990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769C10", Offset = "0x769C10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xB7D998", Offset = "0xB7D998", VA = "0xB7D998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769C20", Offset = "0x769C20")]
		set
		{
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB7D9A0", Offset = "0xB7D9A0", VA = "0xB7D9A0")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB7D9A8", Offset = "0xB7D9A8", VA = "0xB7D9A8")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x200003C")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC262A4", Offset = "0xC262A4", VA = "0xC262A4")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x200003D")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000233")]
	App = 1,
	[Token(Token = "0x4000234")]
	TouchPad = 2,
	[Token(Token = "0x4000235")]
	Trigger = 4
}
[Token(Token = "0x200003E")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC270F0", Offset = "0xC270F0", VA = "0xC270F0", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC2716C", Offset = "0xC2716C", VA = "0xC2716C")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC2723C", Offset = "0xC2723C", VA = "0xC2723C")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC2730C", Offset = "0xC2730C", VA = "0xC2730C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC27680", Offset = "0xC27680", VA = "0xC27680", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC27740", Offset = "0xC27740", VA = "0xC27740", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC27830", Offset = "0xC27830", VA = "0xC27830", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC278F0", Offset = "0xC278F0", VA = "0xC278F0", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC27AF8", Offset = "0xC27AF8", VA = "0xC27AF8", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC27BA8", Offset = "0xC27BA8", VA = "0xC27BA8", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC27C44", Offset = "0xC27C44", VA = "0xC27C44", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC2886C", Offset = "0xC2886C", VA = "0xC2886C", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC288B4", Offset = "0xC288B4", VA = "0xC288B4", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC28954", Offset = "0xC28954", VA = "0xC28954", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC28A10", Offset = "0xC28A10", VA = "0xC28A10", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC28CEC", Offset = "0xC28CEC", VA = "0xC28CEC", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC28FB8", Offset = "0xC28FB8", VA = "0xC28FB8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC296A0", Offset = "0xC296A0", VA = "0xC296A0")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x200003F")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761644", Offset = "0x761644")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xC2D7A0", Offset = "0xC2D7A0", VA = "0xC2D7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xC2D808", Offset = "0xC2D808", VA = "0xC2D808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xC2D0F0", Offset = "0xC2D0F0", VA = "0xC2D0F0")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xC2D404", Offset = "0xC2D404", VA = "0xC2D404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xC2D408", Offset = "0xC2D408", VA = "0xC2D408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xC2D7A8", Offset = "0xC2D7A8", VA = "0xC2D7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x400023F")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC2CC80", Offset = "0xC2CC80", VA = "0xC2CC80", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC2CC8C", Offset = "0xC2CC8C", VA = "0xC2CC8C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC2CC98", Offset = "0xC2CC98", VA = "0xC2CC98", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC2CCA4", Offset = "0xC2CCA4", VA = "0xC2CCA4", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC2D060", Offset = "0xC2D060", VA = "0xC2D060", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769C30", Offset = "0x769C30")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC2D11C", Offset = "0xC2D11C", VA = "0xC2D11C", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC2D3FC", Offset = "0xC2D3FC", VA = "0xC2D3FC")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000040")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000041")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000042")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000018")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xC2D810", Offset = "0xC2D810", VA = "0xC2D810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769C94", Offset = "0x769C94")]
		add
		{
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xC2D8B4", Offset = "0xC2D8B4", VA = "0xC2D8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CA4", Offset = "0x769CA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xC2D958", Offset = "0xC2D958", VA = "0xC2D958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CB4", Offset = "0x769CB4")]
		add
		{
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xC2D9FC", Offset = "0xC2D9FC", VA = "0xC2D9FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CC4", Offset = "0x769CC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC2DAA0", Offset = "0xC2DAA0", VA = "0xC2DAA0", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC2DAC0", Offset = "0xC2DAC0", VA = "0xC2DAC0", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC2DAE0", Offset = "0xC2DAE0", VA = "0xC2DAE0", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC2DD24", Offset = "0xC2DD24", VA = "0xC2DD24", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC2DD30", Offset = "0xC2DD30", VA = "0xC2DD30", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC2E1A4", Offset = "0xC2E1A4", VA = "0xC2E1A4", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC2E2AC", Offset = "0xC2E2AC", VA = "0xC2E2AC", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC2E430", Offset = "0xC2E430", VA = "0xC2E430", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC2E6FC", Offset = "0xC2E6FC", VA = "0xC2E6FC", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC2E7AC", Offset = "0xC2E7AC", VA = "0xC2E7AC", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC2E7D4", Offset = "0xC2E7D4", VA = "0xC2E7D4")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x2000043")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC2E7E8", Offset = "0xC2E7E8", VA = "0xC2E7E8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC2E8FC", Offset = "0xC2E8FC", VA = "0xC2E8FC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC2E994", Offset = "0xC2E994", VA = "0xC2E994")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000044")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761654", Offset = "0x761654")]
	private sealed class <>c
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xC2F8BC", Offset = "0xC2F8BC", VA = "0xC2F8BC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xC2F8C4", Offset = "0xC2F8C4", VA = "0xC2F8C4")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000252")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000046")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xC2F6B8", Offset = "0xC2F6B8", VA = "0xC2F6B8", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC2E99C", Offset = "0xC2E99C", VA = "0xC2E99C", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC2EB4C", Offset = "0xC2EB4C", VA = "0xC2EB4C", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC2EDE0", Offset = "0xC2EDE0", VA = "0xC2EDE0", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC2F100", Offset = "0xC2F100", VA = "0xC2F100", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC2F774", Offset = "0xC2F774", VA = "0xC2F774")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x2000045")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000046")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000047")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	public enum ClickMethods
	{
		[Token(Token = "0x40013A2")]
		ClickOnButtonUp,
		[Token(Token = "0x40013A3")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0xC2F8D4", Offset = "0xC2F8D4", VA = "0xC2F8D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CD4", Offset = "0x769CD4")]
		add
		{
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xC2F978", Offset = "0xC2F978", VA = "0xC2F978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CE4", Offset = "0x769CE4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xC2FA1C", Offset = "0xC2FA1C", VA = "0xC2FA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769CF4", Offset = "0x769CF4")]
		add
		{
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xC2FAC0", Offset = "0xC2FAC0", VA = "0xC2FAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D04", Offset = "0x769D04")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xC2FB64", Offset = "0xC2FB64", VA = "0xC2FB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D14", Offset = "0x769D14")]
		add
		{
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xC2FC08", Offset = "0xC2FC08", VA = "0xC2FC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D24", Offset = "0x769D24")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xC2FCAC", Offset = "0xC2FCAC", VA = "0xC2FCAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D34", Offset = "0x769D34")]
		add
		{
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xC2FD50", Offset = "0xC2FD50", VA = "0xC2FD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D44", Offset = "0x769D44")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xC2FDF4", Offset = "0xC2FDF4", VA = "0xC2FDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D54", Offset = "0x769D54")]
		add
		{
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xC2FE98", Offset = "0xC2FE98", VA = "0xC2FE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769D64", Offset = "0x769D64")]
		remove
		{
		}
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC2FF3C", Offset = "0xC2FF3C", VA = "0xC2FF3C", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC2FF44", Offset = "0xC2FF44", VA = "0xC2FF44", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC30024", Offset = "0xC30024", VA = "0xC30024", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC300B8", Offset = "0xC300B8", VA = "0xC300B8", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC3014C", Offset = "0xC3014C", VA = "0xC3014C", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC30168", Offset = "0xC30168", VA = "0xC30168", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC30174", Offset = "0xC30174", VA = "0xC30174", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC3025C", Offset = "0xC3025C", VA = "0xC3025C", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC30328", Offset = "0xC30328", VA = "0xC30328", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC303F4", Offset = "0xC303F4", VA = "0xC303F4", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC30440", Offset = "0xC30440", VA = "0xC30440", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC3048C", Offset = "0xC3048C", VA = "0xC3048C", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC3054C", Offset = "0xC3054C", VA = "0xC3054C", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC30560", Offset = "0xC30560", VA = "0xC30560", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC305A4", Offset = "0xC305A4", VA = "0xC305A4", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC30608", Offset = "0xC30608", VA = "0xC30608", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC307E0", Offset = "0xC307E0", VA = "0xC307E0")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000048")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x400027D")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x10F31CC", Offset = "0x10F31CC", VA = "0x10F31CC")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x10F31F0", Offset = "0x10F31F0", VA = "0x10F31F0")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x10F3214", Offset = "0x10F3214", VA = "0x10F3214")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x10F3410", Offset = "0x10F3410", VA = "0x10F3410")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x10F3228", Offset = "0x10F3228", VA = "0x10F3228")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10F337C", Offset = "0x10F337C", VA = "0x10F337C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10F3CC8", Offset = "0x10F3CC8", VA = "0x10F3CC8")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10F3E6C", Offset = "0x10F3E6C", VA = "0x10F3E6C")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x10F35B8", Offset = "0x10F35B8", VA = "0x10F35B8")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10F42FC", Offset = "0x10F42FC", VA = "0x10F42FC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10F34B0", Offset = "0x10F34B0", VA = "0x10F34B0")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10F3C10", Offset = "0x10F3C10", VA = "0x10F3C10")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10F4394", Offset = "0x10F4394", VA = "0x10F4394")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10F3E84", Offset = "0x10F3E84", VA = "0x10F3E84")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10F3A8C", Offset = "0x10F3A8C", VA = "0x10F3A8C")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x10F4310", Offset = "0x10F4310", VA = "0x10F4310")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x10F44C4", Offset = "0x10F44C4", VA = "0x10F44C4")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000049")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x9AE41C", Offset = "0x9AE41C", VA = "0x9AE41C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x9AE4EC", Offset = "0x9AE4EC", VA = "0x9AE4EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x9AE540", Offset = "0x9AE540", VA = "0x9AE540")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x9AE5E0", Offset = "0x9AE5E0", VA = "0x9AE5E0")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x9AE680", Offset = "0x9AE680", VA = "0x9AE680")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x9AE704", Offset = "0x9AE704", VA = "0x9AE704")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x9AE788", Offset = "0x9AE788", VA = "0x9AE788")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x9AE8A0", Offset = "0x9AE8A0", VA = "0x9AE8A0")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x9AE9B8", Offset = "0x9AE9B8", VA = "0x9AE9B8")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x9AEA58", Offset = "0x9AEA58", VA = "0x9AEA58")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x9AEAE8", Offset = "0x9AEAE8", VA = "0x9AEAE8")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x9AE484", Offset = "0x9AE484", VA = "0x9AE484")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x9AE48C", Offset = "0x9AE48C", VA = "0x9AE48C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x9AE538", Offset = "0x9AE538", VA = "0x9AE538")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x9AE4BC", Offset = "0x9AE4BC", VA = "0x9AE4BC")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x9AE530", Offset = "0x9AE530", VA = "0x9AE530")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x9AEB78", Offset = "0x9AEB78", VA = "0x9AEB78")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x200004A")]
public sealed class AchievementDefinition
{
	[Serializable]
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761664", Offset = "0x761664")]
	private sealed class <>c
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__10_0;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xAC0694", Offset = "0xAC0694", VA = "0xAC0694")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xAC069C", Offset = "0xAC069C", VA = "0xAC069C")]
		internal bool <.ctor>b__10_0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string achievementID;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string flavorLocKey;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string behaviourKey;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int goalCount;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string oculusID;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string steamID;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool enabledForOculus;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool enabledForSteam;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float progress;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> args;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xABF534", Offset = "0xABF534", VA = "0xABF534")]
	public AchievementDefinition(Command theCommand)
	{
	}
}
[Token(Token = "0x200004B")]
public sealed class AchievementController : SingletonMono<AchievementController>, IPauseable
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AchievementHandler> handlerPrefabs;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<AchievementHandler> activeHandlers;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameStateList stateList;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AchievementDefinition> achievementsInOrder;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, AchievementDefinition> achievementMap;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AchievementReporter reporter;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xABF48C", Offset = "0xABF48C", VA = "0xABF48C")]
	private void defineAchievement(Command theCommand)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xABF7EC", Offset = "0xABF7EC", VA = "0xABF7EC")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xABF9AC", Offset = "0xABF9AC", VA = "0xABF9AC")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xABFB10", Offset = "0xABFB10", VA = "0xABFB10")]
	private bool areAchievementsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xABFDB8", Offset = "0xABFDB8", VA = "0xABFDB8", Slot = "7")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xABFE04", Offset = "0xABFE04", VA = "0xABFE04", Slot = "8")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xABF8A8", Offset = "0xABF8A8", VA = "0xABF8A8")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xABFE08", Offset = "0xABFE08", VA = "0xABFE08")]
	public void clearState()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xABFDBC", Offset = "0xABFDBC", VA = "0xABFDBC")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xABFFB4", Offset = "0xABFFB4", VA = "0xABFFB4")]
	private AchievementHandler handlerPrefabWithBehaviour(string behaviourKey)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xAC00A4", Offset = "0xAC00A4", VA = "0xAC00A4")]
	public void reportActiveHandlersProgress()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xABFB7C", Offset = "0xABFB7C", VA = "0xABFB7C")]
	private void startAchievements(AchievementReporter reporter)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xAC0310", Offset = "0xAC0310", VA = "0xAC0310")]
	public AchievementController()
	{
	}
}
[Token(Token = "0x200004C")]
public sealed class AchievementControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AchievementController itemToBoot;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xAC0454", Offset = "0xAC0454", VA = "0xAC0454", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xAC0584", Offset = "0xAC0584", VA = "0xAC0584", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xAC0624", Offset = "0xAC0624", VA = "0xAC0624")]
	public AchievementControllerBooter()
	{
	}
}
[Token(Token = "0x200004D")]
public abstract class AchievementHandler : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	private const float TinyFloat = 1E-05f;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementDefinition info;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameStateList stateList;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameStateFlags stateFlags;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int basicCounter;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastReportedProgress;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isCheckingForProgress;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isCompleted;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xAC0294", Offset = "0xAC0294", VA = "0xAC0294")]
	public void loadWithDefinition(AchievementDefinition definition)
	{
	}

	[Token(Token = "0x600039C")]
	public abstract string behaviourKey();

	[Token(Token = "0x600039D")]
	protected abstract void startCheckingForProgress();

	[Token(Token = "0x600039E")]
	protected abstract void stopCheckingForProgress();

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xAC0800", Offset = "0xAC0800", VA = "0xAC0800", Slot = "7")]
	public virtual void validateHandler()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xABFF48", Offset = "0xABFF48", VA = "0xABFF48")]
	public string achievementID()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xAC06A8", Offset = "0xAC06A8", VA = "0xAC06A8")]
	private void load()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xABFF70", Offset = "0xABFF70", VA = "0xABFF70")]
	public void wipeAchievement()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xAC0804", Offset = "0xAC0804", VA = "0xAC0804")]
	private void save()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xAC0974", Offset = "0xAC0974", VA = "0xAC0974")]
	public void incrementCounter(int increment = 1)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xAC09F8", Offset = "0xAC09F8", VA = "0xAC09F8")]
	public void decrementCounter(int decrement = 1)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xAC0A08", Offset = "0xAC0A08", VA = "0xAC0A08", Slot = "8")]
	public virtual int count()
	{
		return default(int);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xAC0A10", Offset = "0xAC0A10", VA = "0xAC0A10")]
	protected void setSpecificCount(int newCount)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xAC09C0", Offset = "0xAC09C0", VA = "0xAC09C0")]
	public void checkProgress()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xAC0A5C", Offset = "0xAC0A5C", VA = "0xAC0A5C", Slot = "9")]
	protected virtual void calculateProgress()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xAC013C", Offset = "0xAC013C", VA = "0xAC013C")]
	public void reportProgressToPlatform(AchievementReporter reporter)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xAC0B34", Offset = "0xAC0B34", VA = "0xAC0B34")]
	private bool shouldReportProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xAC0B84", Offset = "0xAC0B84", VA = "0xAC0B84")]
	public bool shouldShowProgressPopup()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34")]
	public void handleProgressSuccess()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xAC0C60", Offset = "0xAC0C60", VA = "0xAC0C60")]
	public float progress()
	{
		return default(float);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xAC0C7C", Offset = "0xAC0C7C", VA = "0xAC0C7C")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xAC02BC", Offset = "0xAC02BC", VA = "0xAC02BC")]
	public void startAchievement()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xAC0C84", Offset = "0xAC0C84", VA = "0xAC0C84", Slot = "10")]
	public virtual int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xAC0AFC", Offset = "0xAC0AFC", VA = "0xAC0AFC")]
	public void achievementDidComplete()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xAC0C9C", Offset = "0xAC0C9C", VA = "0xAC0C9C")]
	protected AchievementHandler()
	{
	}
}
[Token(Token = "0x200004E")]
public class AchievementHandlerKills : AchievementHandler
{
	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xAC0CA4", Offset = "0xAC0CA4", VA = "0xAC0CA4", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xAC0CEC", Offset = "0xAC0CEC", VA = "0xAC0CEC", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xAC0E2C", Offset = "0xAC0E2C", VA = "0xAC0E2C", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xAC0EFC", Offset = "0xAC0EFC", VA = "0xAC0EFC")]
	private void checkKillsStat()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xAC0F7C", Offset = "0xAC0F7C", VA = "0xAC0F7C")]
	public AchievementHandlerKills()
	{
	}
}
[Token(Token = "0x200004F")]
public class AchievementHandlerMissilesFired : AchievementHandler
{
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xAC0F84", Offset = "0xAC0F84", VA = "0xAC0F84", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xAC0FCC", Offset = "0xAC0FCC", VA = "0xAC0FCC", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xAC110C", Offset = "0xAC110C", VA = "0xAC110C", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xAC11DC", Offset = "0xAC11DC", VA = "0xAC11DC")]
	private void checkMissilesFiredStat()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xAC125C", Offset = "0xAC125C", VA = "0xAC125C")]
	public AchievementHandlerMissilesFired()
	{
	}
}
[Token(Token = "0x2000050")]
public class AchievementHandlerNoShotsBeforeDeath : AchievementHandler
{
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xAC1264", Offset = "0xAC1264", VA = "0xAC1264", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xAC12AC", Offset = "0xAC12AC", VA = "0xAC12AC", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xAC12B4", Offset = "0xAC12B4", VA = "0xAC12B4", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xAC138C", Offset = "0xAC138C", VA = "0xAC138C", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xAC1424", Offset = "0xAC1424", VA = "0xAC1424")]
	private void checkIfNoShotsFired()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xAC1510", Offset = "0xAC1510", VA = "0xAC1510")]
	public AchievementHandlerNoShotsBeforeDeath()
	{
	}
}
[Token(Token = "0x2000051")]
public class AchievementHandlerOverdriveCompletion : AchievementHandler
{
	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xAC1518", Offset = "0xAC1518", VA = "0xAC1518", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xAC1560", Offset = "0xAC1560", VA = "0xAC1560", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xAC1568", Offset = "0xAC1568", VA = "0xAC1568", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xAC16A8", Offset = "0xAC16A8", VA = "0xAC16A8", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xAC1778", Offset = "0xAC1778", VA = "0xAC1778")]
	private void checkForOverdriveCompletion()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xAC17C0", Offset = "0xAC17C0", VA = "0xAC17C0")]
	private bool hasBeatenAWorldInOverdrive()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xAC18A0", Offset = "0xAC18A0", VA = "0xAC18A0")]
	public AchievementHandlerOverdriveCompletion()
	{
	}
}
[Token(Token = "0x2000052")]
public class AchievementHandlerPowerupKeyEvent : AchievementHandler
{
	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xAC18A8", Offset = "0xAC18A8", VA = "0xAC18A8", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xAC18F0", Offset = "0xAC18F0", VA = "0xAC18F0", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xAC1B70", Offset = "0xAC1B70", VA = "0xAC1B70", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xAC1CB0", Offset = "0xAC1CB0", VA = "0xAC1CB0", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xAC1D80", Offset = "0xAC1D80", VA = "0xAC1D80")]
	private void checkKeyEventCount()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xAC1AA8", Offset = "0xAC1AA8", VA = "0xAC1AA8")]
	private PowerupConfig getPowerupConfig()
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xAC1DB8", Offset = "0xAC1DB8", VA = "0xAC1DB8")]
	public AchievementHandlerPowerupKeyEvent()
	{
	}
}
[Token(Token = "0x2000053")]
public class AchievementHandlerTimeAlive : AchievementHandler
{
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xAC1DC0", Offset = "0xAC1DC0", VA = "0xAC1DC0", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xAC1E08", Offset = "0xAC1E08", VA = "0xAC1E08", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xAC1EE0", Offset = "0xAC1EE0", VA = "0xAC1EE0", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xAC1F78", Offset = "0xAC1F78", VA = "0xAC1F78")]
	private void checkTimeAlive()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xAC2034", Offset = "0xAC2034", VA = "0xAC2034")]
	public AchievementHandlerTimeAlive()
	{
	}
}
[Token(Token = "0x2000054")]
public class AchievementHandlerUnlockAllWorldPilots : AchievementHandler
{
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xAC203C", Offset = "0xAC203C", VA = "0xAC203C", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xAC2084", Offset = "0xAC2084", VA = "0xAC2084", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xAC20E4", Offset = "0xAC20E4", VA = "0xAC20E4", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xAC2220", Offset = "0xAC2220", VA = "0xAC2220", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xAC2360", Offset = "0xAC2360", VA = "0xAC2360", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xAC2430", Offset = "0xAC2430", VA = "0xAC2430")]
	private void checkAllPilotsUnlockedInWorld()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xAC2580", Offset = "0xAC2580", VA = "0xAC2580")]
	public AchievementHandlerUnlockAllWorldPilots()
	{
	}
}
[Token(Token = "0x2000055")]
public class AchievementHandlerWorldCompletion : AchievementHandler
{
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xAC2588", Offset = "0xAC2588", VA = "0xAC2588", Slot = "4")]
	public override string behaviourKey()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xAC25D0", Offset = "0xAC25D0", VA = "0xAC25D0", Slot = "7")]
	public override void validateHandler()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xAC2790", Offset = "0xAC2790", VA = "0xAC2790", Slot = "5")]
	protected override void startCheckingForProgress()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xAC28D0", Offset = "0xAC28D0", VA = "0xAC28D0", Slot = "6")]
	protected override void stopCheckingForProgress()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xAC29A0", Offset = "0xAC29A0", VA = "0xAC29A0")]
	private void checkWorldsForCompletion()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xAC2ABC", Offset = "0xAC2ABC", VA = "0xAC2ABC", Slot = "10")]
	public override int goalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xAC2B1C", Offset = "0xAC2B1C", VA = "0xAC2B1C")]
	public AchievementHandlerWorldCompletion()
	{
	}
}
[Token(Token = "0x2000056")]
public sealed class AchievementNativeUIButton : MonoBehaviour
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button TheButton;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SVGImage ButtonIcon;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGAsset IosIcon;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGAsset AndroidIcon;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xAC2B24", Offset = "0xAC2B24", VA = "0xAC2B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xAC2C24", Offset = "0xAC2C24", VA = "0xAC2C24")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xAC2CC0", Offset = "0xAC2CC0", VA = "0xAC2CC0")]
	public AchievementNativeUIButton()
	{
	}
}
[Token(Token = "0x2000057")]
public abstract class AchievementReporter
{
	[Token(Token = "0x60003E8")]
	public abstract bool isAuthenticated();

	[Token(Token = "0x60003E9")]
	public abstract void authenticate(Action authenticateSucess);

	[Token(Token = "0x60003EA")]
	public abstract void reportProgress(AchievementHandler handler, Action onSuccess);

	[Token(Token = "0x60003EB")]
	public abstract bool isAchievementSupported(AchievementDefinition definition);

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xAC2CC8", Offset = "0xAC2CC8", VA = "0xAC2CC8")]
	protected AchievementReporter()
	{
	}
}
[Token(Token = "0x2000058")]
public class SteamAchievementReporter : AchievementReporter
{
	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x16027A8", Offset = "0x16027A8", VA = "0x16027A8", Slot = "5")]
	public override void authenticate(Action authenticateSucess)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x16027AC", Offset = "0x16027AC", VA = "0x16027AC", Slot = "4")]
	public override bool isAuthenticated()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x16027B4", Offset = "0x16027B4", VA = "0x16027B4", Slot = "6")]
	public override void reportProgress(AchievementHandler handler, Action success)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x16027B8", Offset = "0x16027B8", VA = "0x16027B8", Slot = "7")]
	public override bool isAchievementSupported(AchievementDefinition definition)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x16027D4", Offset = "0x16027D4", VA = "0x16027D4")]
	public SteamAchievementReporter()
	{
	}
}
[Token(Token = "0x2000059")]
public class StubAchievementReporter : AchievementReporter
{
	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x16027DC", Offset = "0x16027DC", VA = "0x16027DC", Slot = "4")]
	public override bool isAuthenticated()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x16027E4", Offset = "0x16027E4", VA = "0x16027E4", Slot = "5")]
	public override void authenticate(Action authenticateSucess)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x16027E8", Offset = "0x16027E8", VA = "0x16027E8", Slot = "6")]
	public override void reportProgress(AchievementHandler handler, Action onSuccess)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x16027EC", Offset = "0x16027EC", VA = "0x16027EC", Slot = "7")]
	public override bool isAchievementSupported(AchievementDefinition definition)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x16027F4", Offset = "0x16027F4", VA = "0x16027F4")]
	public StubAchievementReporter()
	{
	}
}
[Token(Token = "0x200005A")]
public class DebugAchievementDisplay : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761674", Offset = "0x761674")]
	private sealed class <updateLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugAchievementDisplay <>4__this;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x953FE8", Offset = "0x953FE8", VA = "0x953FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x954050", Offset = "0x954050", VA = "0x954050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x953B50", Offset = "0x953B50", VA = "0x953B50")]
		[DebuggerHidden]
		public <updateLoop>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x953F10", Offset = "0x953F10", VA = "0x953F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x953F14", Offset = "0x953F14", VA = "0x953F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x953FF0", Offset = "0x953FF0", VA = "0x953FF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text displayLabel;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cloudSaveOutput;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x953AA0", Offset = "0x953AA0", VA = "0x953AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x953B48", Offset = "0x953B48", VA = "0x953B48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x953ACC", Offset = "0x953ACC", VA = "0x953ACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769D74", Offset = "0x769D74")]
	private IEnumerator updateLoop()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x953B7C", Offset = "0x953B7C", VA = "0x953B7C")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x953EA8", Offset = "0x953EA8", VA = "0x953EA8")]
	public DebugAchievementDisplay()
	{
	}
}
[Token(Token = "0x200005B")]
public class AnalyticsController : BootableMonoBehaviour
{
	[Token(Token = "0x200033F")]
	public sealed class Event
	{
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xAC79F0", Offset = "0xAC79F0", VA = "0xAC79F0")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Dictionary<string, object> analyticsDictCache;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AnalyticsProvider> providers;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bootstrapCompleted;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool sendAnalytics;

	[Token(Token = "0x17000047")]
	private static string errorsToLogNextBoot
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xAC650C", Offset = "0xAC650C", VA = "0xAC650C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xAC6564", Offset = "0xAC6564", VA = "0xAC6564")]
		set
		{
		}
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xAC65B8", Offset = "0xAC65B8", VA = "0xAC65B8")]
	public static void addErrorToLogNextBoot(string eventName, string error)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xAC686C", Offset = "0xAC686C", VA = "0xAC686C")]
	private void tryLogErrors()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xAC7054", Offset = "0xAC7054", VA = "0xAC7054")]
	public bool isDataDodgy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xAC705C", Offset = "0xAC705C", VA = "0xAC705C")]
	public int groupIntToIncrement(float seconds)
	{
		return default(int);
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xAC70DC", Offset = "0xAC70DC", VA = "0xAC70DC")]
	public int roundTime(int time, int maxTime)
	{
		return default(int);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xAC7178", Offset = "0xAC7178", VA = "0xAC7178")]
	public float roundTime(float time, float maxTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xAC6CE4", Offset = "0xAC6CE4", VA = "0xAC6CE4")]
	public void initialiseAnalyticsDict()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xAC7280", Offset = "0xAC7280", VA = "0xAC7280", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xAC6C4C", Offset = "0xAC6C4C", VA = "0xAC6C4C")]
	protected bool ready()
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xAC758C", Offset = "0xAC758C", VA = "0xAC758C")]
	public void setUserID(string newUserID)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xAC6D3C", Offset = "0xAC6D3C", VA = "0xAC6D3C")]
	protected bool logEvent(string eventName, Dictionary<string, object> eventData, bool logErrorEvents = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xAC76BC", Offset = "0xAC76BC", VA = "0xAC76BC")]
	protected void flushEvents()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xAC7934", Offset = "0xAC7934", VA = "0xAC7934")]
	public AnalyticsController()
	{
	}
}
[Token(Token = "0x200005C")]
public class AnalyticsProvider
{
	[Token(Token = "0x600040C")]
	[Address(RVA = "0xAC79F8", Offset = "0xAC79F8", VA = "0xAC79F8", Slot = "4")]
	public virtual void bootstrap()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xAC79FC", Offset = "0xAC79FC", VA = "0xAC79FC", Slot = "5")]
	public virtual void setUserID(string userID)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xAC7A00", Offset = "0xAC7A00", VA = "0xAC7A00", Slot = "6")]
	public virtual void setUserProperty(string propertyName, string propertyValue)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xAC7A04", Offset = "0xAC7A04", VA = "0xAC7A04", Slot = "7")]
	public virtual void logEvent(string eventType, Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xAC7A08", Offset = "0xAC7A08", VA = "0xAC7A08", Slot = "8")]
	public virtual void flushEvents()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xAC7A0C", Offset = "0xAC7A0C", VA = "0xAC7A0C")]
	public AnalyticsProvider()
	{
	}
}
[Token(Token = "0x200005D")]
public sealed class AnimationEventScreenShake : MonoBehaviour
{
	[Token(Token = "0x6000412")]
	[Address(RVA = "0xAC7A14", Offset = "0xAC7A14", VA = "0xAC7A14")]
	public void triggerWeakShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xAC7B00", Offset = "0xAC7B00", VA = "0xAC7B00")]
	public void triggerMediumShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xAC7B38", Offset = "0xAC7B38", VA = "0xAC7B38")]
	public void triggerHeavyShakeFromAnimation(float duration)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xAC7A4C", Offset = "0xAC7A4C", VA = "0xAC7A4C")]
	private void doShake(ShakeParams shakeParams)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xAC7B70", Offset = "0xAC7B70", VA = "0xAC7B70")]
	public AnimationEventScreenShake()
	{
	}
}
[Token(Token = "0x200005E")]
public sealed class AnimationPlaySound : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string soundKey;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xAC7B78", Offset = "0xAC7B78", VA = "0xAC7B78")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xAC7C04", Offset = "0xAC7C04", VA = "0xAC7C04")]
	public void PlaySoundWithKey(string theKey)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xAC7C8C", Offset = "0xAC7C8C", VA = "0xAC7C8C")]
	public AnimationPlaySound()
	{
	}
}
[Token(Token = "0x200005F")]
public sealed class AnimationSetUISVG : MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SVGImage SVGImage;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xAC7CEC", Offset = "0xAC7CEC", VA = "0xAC7CEC")]
	public void setSVG(SVGAsset vectorGraphic)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xAC7DEC", Offset = "0xAC7DEC", VA = "0xAC7DEC")]
	public AnimationSetUISVG()
	{
	}
}
[Token(Token = "0x2000060")]
public sealed class AttentionAnimation : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve yOffset;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 position;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float theTime;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool animationShouldPlay;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xAC83E0", Offset = "0xAC83E0", VA = "0xAC83E0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xAC8454", Offset = "0xAC8454", VA = "0xAC8454")]
	public void Update()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xAC84D8", Offset = "0xAC84D8", VA = "0xAC84D8")]
	public AttentionAnimation()
	{
	}
}
[Token(Token = "0x2000061")]
public sealed class BBFloaty : MonoBehaviour
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 magnitude;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationMagnitude;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool enableBaseRoation;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float baseRotation;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool disableRotation;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 rot;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 pos;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float phase;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomTweakage;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool enableSecondaryMovement;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_transform;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 position;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x9BB698", Offset = "0x9BB698", VA = "0x9BB698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x9BB894", Offset = "0x9BB894", VA = "0x9BB894")]
	public void activateSecondaryMovement(bool isActive)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x9BB954", Offset = "0x9BB954", VA = "0x9BB954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x9BBAAC", Offset = "0x9BBAAC", VA = "0x9BBAAC")]
	public BBFloaty()
	{
	}
}
[Token(Token = "0x2000062")]
public sealed class BBFloatyNoRotation : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 magnitude;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float phase;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool randomTweakage;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool enableSecondaryMovement;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_transform;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 position;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x9BBB84", Offset = "0x9BBB84", VA = "0x9BBB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x9BBCBC", Offset = "0x9BBCBC", VA = "0x9BBCBC")]
	public void activateSecondaryMovement(bool isActive)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x9BBD60", Offset = "0x9BBD60", VA = "0x9BBD60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x9BBE50", Offset = "0x9BBE50", VA = "0x9BBE50")]
	public BBFloatyNoRotation()
	{
	}
}
[Token(Token = "0x2000063")]
public sealed class BBSpinner : MonoBehaviour
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startingRotations;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x9BBF28", Offset = "0x9BBF28", VA = "0x9BBF28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x9BC024", Offset = "0x9BC024", VA = "0x9BC024")]
	public void reset()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x9BC05C", Offset = "0x9BC05C", VA = "0x9BC05C")]
	private void Update()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x9BC154", Offset = "0x9BC154", VA = "0x9BC154")]
	public BBSpinner()
	{
	}
}
[Token(Token = "0x2000064")]
public sealed class BBWingFlappy : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve zRotation;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x9BC1DC", Offset = "0x9BC1DC", VA = "0x9BC1DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x9BC274", Offset = "0x9BC274", VA = "0x9BC274")]
	public BBWingFlappy()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public struct ShakeParams
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float strength;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float duration;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x7EFFF8", Offset = "0x7EFFF8", VA = "0x7EFFF8")]
	public ShakeParams(float strength, float duration)
	{
	}
}
[Token(Token = "0x2000066")]
public sealed class CameraShake : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761684", Offset = "0x761684")]
	private sealed class <ShakeRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraShake <>4__this;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsed>5__2;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <magnitude>5__3;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x9C7364", Offset = "0x9C7364", VA = "0x9C7364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x9C73CC", Offset = "0x9C73CC", VA = "0x9C73CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x9C7134", Offset = "0x9C7134", VA = "0x9C7134")]
		[DebuggerHidden]
		public <ShakeRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x9C7170", Offset = "0x9C7170", VA = "0x9C7170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x9C7174", Offset = "0x9C7174", VA = "0x9C7174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x9C736C", Offset = "0x9C736C", VA = "0x9C736C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 shakePosition;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 basePosition;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float shakeWeighting;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool doShake;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x9C6E50", Offset = "0x9C6E50", VA = "0x9C6E50")]
	public static bool isShakeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x9C6E58", Offset = "0x9C6E58", VA = "0x9C6E58")]
	public static void toggleShake()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x9C6EA8", Offset = "0x9C6EA8", VA = "0x9C6EA8")]
	public void updateBasePosition()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x9C6EE4", Offset = "0x9C6EE4", VA = "0x9C6EE4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x9C7000", Offset = "0x9C7000", VA = "0x9C7000")]
	private void CancelShaking()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x9C70A4", Offset = "0x9C70A4", VA = "0x9C70A4")]
	public void shake(ShakeParams shakeParams)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x9C70A8", Offset = "0x9C70A8", VA = "0x9C70A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769DD8", Offset = "0x769DD8")]
	private IEnumerator ShakeRoutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x9C7160", Offset = "0x9C7160", VA = "0x9C7160")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x2000067")]
public class FinalBossDirectorEvents : MonoBehaviour
{
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761694", Offset = "0x761694")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 startPosition;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 targetPos;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FinalBossDirectorEvents <>4__this;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x978BCC", Offset = "0x978BCC", VA = "0x978BCC")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x978C24", Offset = "0x978C24", VA = "0x978C24")]
		internal void <finalBossLerpToSpawnPosition>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector director;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762DD4", Offset = "0x762DD4")]
	public Transform soundEventLocation;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762E0C", Offset = "0x762E0C")]
	public Transform moveTarget;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float moveTime;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762E44", Offset = "0x762E44")]
	public GameObject target;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762E7C", Offset = "0x762E7C")]
	public List<GameObject> itemsToDisableForTournament;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x978704", Offset = "0x978704", VA = "0x978704")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x97886C", Offset = "0x97886C", VA = "0x97886C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x978904", Offset = "0x978904", VA = "0x978904")]
	public void startGameplayProcess()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x97897C", Offset = "0x97897C", VA = "0x97897C")]
	public void playSoundEventWithKey(string soundEventKey)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x9789F8", Offset = "0x9789F8", VA = "0x9789F8")]
	public void finalBossLerpToSpawnPosition()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x978BD4", Offset = "0x978BD4", VA = "0x978BD4")]
	private void disableMe()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x978C14", Offset = "0x978C14", VA = "0x978C14")]
	public FinalBossDirectorEvents()
	{
	}
}
[Token(Token = "0x2000068")]
public class FinalBossIntoStart : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector director;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x978CF4", Offset = "0x978CF4", VA = "0x978CF4")]
	public void startButtonWasPressed()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x978DC4", Offset = "0x978DC4", VA = "0x978DC4")]
	public FinalBossIntoStart()
	{
	}
}
[Token(Token = "0x2000069")]
public class HellBandmateSceneryToggle : MonoBehaviour
{
	[Token(Token = "0x40002DD")]
	private const string SpawnInEffectKey = "Particles/Shooty2_explosion_heavy";

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string assignedBandmateKey;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer visuals;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x8FC914", Offset = "0x8FC914", VA = "0x8FC914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x8FCAE0", Offset = "0x8FCAE0", VA = "0x8FCAE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x8FCBE8", Offset = "0x8FCBE8", VA = "0x8FCBE8")]
	private void reenableEverything()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x8FCD30", Offset = "0x8FCD30", VA = "0x8FCD30")]
	private void checkForLoop(object note)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x8FCE9C", Offset = "0x8FCE9C", VA = "0x8FCE9C")]
	public HellBandmateSceneryToggle()
	{
	}
}
[Token(Token = "0x200006A")]
public class HellDancingCrowdController : MonoBehaviour
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HellDancingCrowdMember[] children;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float loopDuration;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpHeight;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve jumpCurve;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8FCEA4", Offset = "0x8FCEA4", VA = "0x8FCEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8FD068", Offset = "0x8FD068", VA = "0x8FD068")]
	public HellDancingCrowdController()
	{
	}
}
[Token(Token = "0x200006B")]
public class HellDancingCrowdMember : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616A4", Offset = "0x7616A4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float jHeight;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HellDancingCrowdMember <>4__this;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x8FD280", Offset = "0x8FD280", VA = "0x8FD280")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x8FD294", Offset = "0x8FD294", VA = "0x8FD294")]
		internal void <playAnimation>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x8FD350", Offset = "0x8FD350", VA = "0x8FD350")]
		internal void <playAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bootstrapped;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve animCurve;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float jumpHeight;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8FD07C", Offset = "0x8FD07C", VA = "0x8FD07C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8FCF74", Offset = "0x8FCF74", VA = "0x8FCF74")]
	public void staggerAnimation(AnimationCurve jumpCurve, float loopDuration, float height)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8FD084", Offset = "0x8FD084", VA = "0x8FD084")]
	private float randomTweakToValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8FD0A8", Offset = "0x8FD0A8", VA = "0x8FD0A8")]
	private void prepAnimation()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8FD11C", Offset = "0x8FD11C", VA = "0x8FD11C")]
	private void playAnimation(float animationDuration, float jHeight)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8FD288", Offset = "0x8FD288", VA = "0x8FD288")]
	public HellDancingCrowdMember()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x8FD290", Offset = "0x8FD290", VA = "0x8FD290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769E3C", Offset = "0x769E3C")]
	private void <staggerAnimation>b__6_0()
	{
	}
}
[Token(Token = "0x200006C")]
public class HellEasterEgg : MonoBehaviour
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject devilObject;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8FD368", Offset = "0x8FD368", VA = "0x8FD368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8FD48C", Offset = "0x8FD48C", VA = "0x8FD48C")]
	public HellEasterEgg()
	{
	}
}
[Token(Token = "0x200006D")]
public sealed class ModelSwapAnimation : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616B4", Offset = "0x7616B4")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModelSwapAnimation <>4__this;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeForFlash;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xA0BF20", Offset = "0xA0BF20", VA = "0xA0BF20")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xA0C720", Offset = "0xA0C720", VA = "0xA0C720")]
		internal void <flashMaterials>b__0()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xA0C7E4", Offset = "0xA0C7E4", VA = "0xA0C7E4")]
		internal void <flashMaterials>b__1()
		{
		}
	}

	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616C4", Offset = "0x7616C4")]
	private sealed class <flipBook>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModelSwapAnimation <>4__this;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xA0C8EC", Offset = "0xA0C8EC", VA = "0xA0C8EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xA0C954", Offset = "0xA0C954", VA = "0xA0C954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xA0C420", Offset = "0xA0C420", VA = "0xA0C420")]
		[DebuggerHidden]
		public <flipBook>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xA0C800", Offset = "0xA0C800", VA = "0xA0C800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xA0C804", Offset = "0xA0C804", VA = "0xA0C804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xA0C8F4", Offset = "0xA0C8F4", VA = "0xA0C8F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762EB4", Offset = "0x762EB4")]
	public List<GameObject> modelsToSwap;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeshRenderer> renderersToSwap;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762EEC", Offset = "0x762EEC")]
	public float fps;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool loops;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool playOnAwake;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool playOnEnable;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string frameChangeSoundEvent;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762F24", Offset = "0x762F24")]
	public List<MeshRenderer> renderersToFlash;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool preventFlashOnSwapRenderers;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int frameIndex;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentFrame;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material normalMat;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isFlashing;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool modelsArePrepped;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xA0B9CC", Offset = "0xA0B9CC", VA = "0xA0B9CC")]
	public void startFromInactive()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xA0BB2C", Offset = "0xA0BB2C", VA = "0xA0BB2C")]
	public Material getFirstMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xA0BC28", Offset = "0xA0BC28", VA = "0xA0BC28")]
	public void setAlphaOnAllFrames(float alpha)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xA0BCE8", Offset = "0xA0BCE8", VA = "0xA0BCE8")]
	public void loadRenderers()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA0BE00", Offset = "0xA0BE00", VA = "0xA0BE00")]
	public void flashMaterials(float flashValue, float timeForFlash)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA0BF28", Offset = "0xA0BF28", VA = "0xA0BF28")]
	private void changeMaterialFlashOnAllFrames(float flashValue)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xA0C02C", Offset = "0xA0C02C", VA = "0xA0C02C")]
	private void updateMaterial(MeshRenderer renderer, float flashValue)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xA0BA18", Offset = "0xA0BA18", VA = "0xA0BA18")]
	public void prepModels(bool force = false)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA0C0B8", Offset = "0xA0C0B8", VA = "0xA0C0B8")]
	public void resetActiveModels()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xA0C160", Offset = "0xA0C160", VA = "0xA0C160")]
	public void swapInNewFrames(GameObject[] modelsToSwapIn)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xA0C254", Offset = "0xA0C254", VA = "0xA0C254")]
	public void stepFrame()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xA0BAF0", Offset = "0xA0BAF0", VA = "0xA0BAF0")]
	public void startAnimation()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA0C384", Offset = "0xA0C384", VA = "0xA0C384")]
	public void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA0C3BC", Offset = "0xA0C3BC", VA = "0xA0C3BC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA0C3F4", Offset = "0xA0C3F4", VA = "0xA0C3F4")]
	public void stopAnimation()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA0C308", Offset = "0xA0C308", VA = "0xA0C308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769E4C", Offset = "0x769E4C")]
	private IEnumerator flipBook()
	{
		return null;
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA0C44C", Offset = "0xA0C44C", VA = "0xA0C44C")]
	public void setFrame(int index)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA0C5A4", Offset = "0xA0C5A4", VA = "0xA0C5A4")]
	public void moveToFrame(int index)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA0C258", Offset = "0xA0C258", VA = "0xA0C258")]
	public void moveToNextFrame()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA0C650", Offset = "0xA0C650", VA = "0xA0C650")]
	public ModelSwapAnimation()
	{
	}
}
[Token(Token = "0x200006E")]
public sealed class ParabolicMover : MonoBehaviour
{
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616D4", Offset = "0x7616D4")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float roof;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float xDistance;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color theColor;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParabolicMover <>4__this;

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xA1DB78", Offset = "0xA1DB78", VA = "0xA1DB78")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xA1DB80", Offset = "0xA1DB80", VA = "0xA1DB80")]
		internal void <startMovement>b__1(float lerpValue)
		{
		}
	}

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve yMovement;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve alphaMovement;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xExtent;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMin;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMax;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeMin;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeMax;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delayMax;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGImage image;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA1D7DC", Offset = "0xA1D7DC", VA = "0xA1D7DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA1D890", Offset = "0xA1D890", VA = "0xA1D890")]
	private void reset()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA1D978", Offset = "0xA1D978", VA = "0xA1D978")]
	public void startMovement()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA1DA10", Offset = "0xA1DA10", VA = "0xA1DA10")]
	public ParabolicMover()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA1DA30", Offset = "0xA1DA30", VA = "0xA1DA30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769EB0", Offset = "0x769EB0")]
	private void <startMovement>b__11_0()
	{
	}
}
[Token(Token = "0x200006F")]
public sealed class Pulsate : MonoBehaviour
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scaleMagnitude;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpValue;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pulsateOnStart;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isLooping;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool relativeScale;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool doPlayAnimation;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool firstTime;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 theScale;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform myTransform;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xB7D40C", Offset = "0xB7D40C", VA = "0xB7D40C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xB7D45C", Offset = "0xB7D45C", VA = "0xB7D45C")]
	public void stopAnimation()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB7D450", Offset = "0xB7D450", VA = "0xB7D450")]
	public void startAnimation()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB7D4EC", Offset = "0xB7D4EC", VA = "0xB7D4EC")]
	public void restartAnimation()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB7D4FC", Offset = "0xB7D4FC", VA = "0xB7D4FC")]
	public void resetBaseScale()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB7D538", Offset = "0xB7D538", VA = "0xB7D538")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB7D778", Offset = "0xB7D778", VA = "0xB7D778")]
	public Pulsate()
	{
	}
}
[Token(Token = "0x2000070")]
public sealed class SVGPartsCollection
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color partsColor;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SVGImage> parts;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x9B0B6C", Offset = "0x9B0B6C", VA = "0x9B0B6C")]
	public void AddPart(SVGImage svgImage)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x9B0C04", Offset = "0x9B0C04", VA = "0x9B0C04")]
	public void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x9B0C10", Offset = "0x9B0C10", VA = "0x9B0C10")]
	public void ApplyColor()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x9B0CB8", Offset = "0x9B0CB8", VA = "0x9B0CB8")]
	public SVGPartsCollection()
	{
	}
}
[Token(Token = "0x2000071")]
public sealed class SVGColorSetter : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color mainColor;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useMainColor;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform foreGround;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color foreGroundColor;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform midGround;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color midGroundColor;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform backGround;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color backGroundColor;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9B07CC", Offset = "0x9B07CC", VA = "0x9B07CC")]
	public void CopyMainColorToAllColors()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9B07F0", Offset = "0x9B07F0", VA = "0x9B07F0")]
	private void SetAllColors()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9B0A78", Offset = "0x9B0A78", VA = "0x9B0A78")]
	public void PushDownColors()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x9B086C", Offset = "0x9B086C", VA = "0x9B086C")]
	private void SetColors(Transform t, Color c)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x9B0B00", Offset = "0x9B0B00", VA = "0x9B0B00")]
	public SVGColorSetter()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class Simple2DAnimator : MonoBehaviour
{
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616E4", Offset = "0x7616E4")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Simple2DAnimator <>4__this;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playForward;

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1655D38", Offset = "0x1655D38", VA = "0x1655D38")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1655E94", Offset = "0x1655E94", VA = "0x1655E94")]
		internal void <restartAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve xOffset;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve yOffset;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve xScale;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve yScale;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float theTime;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float forwardSpeed;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float reverseSpeed;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool loops;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool playOnEnable;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool deactivateWhenOff;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float duration;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool animationShouldPlay;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool forward;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int xOffsetKeysLength;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int yOffsetKeysLength;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int zRotationKeysLength;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int scaleAllKeysLength;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int xScaleKeysLength;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int yScaleKeysLength;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x16557F8", Offset = "0x16557F8", VA = "0x16557F8")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1655890", Offset = "0x1655890", VA = "0x1655890")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x16558CC", Offset = "0x16558CC", VA = "0x16558CC")]
	public void moveToFront()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1655B98", Offset = "0x1655B98", VA = "0x1655B98")]
	public void moveToEnd()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1655974", Offset = "0x1655974", VA = "0x1655974")]
	public void moveToTime(float time)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1655BA0", Offset = "0x1655BA0", VA = "0x1655BA0")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1655C68", Offset = "0x1655C68", VA = "0x1655C68")]
	public void restartAfterDelay(float delay, bool playForward = true)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x165591C", Offset = "0x165591C", VA = "0x165591C")]
	public void restartAnimation(bool playForward = true)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1655D40", Offset = "0x1655D40", VA = "0x1655D40")]
	public void stop()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1655D8C", Offset = "0x1655D8C", VA = "0x1655D8C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1655E5C", Offset = "0x1655E5C", VA = "0x1655E5C")]
	public Simple2DAnimator()
	{
	}
}
[Token(Token = "0x2000073")]
public class SimpleAnimation : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool getMyTransform;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float duration;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleAnimator myController;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1655EB4", Offset = "0x1655EB4", VA = "0x1655EB4", Slot = "4")]
	public virtual SimpleAnimator controllingAnimator()
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1655F60", Offset = "0x1655F60", VA = "0x1655F60", Slot = "5")]
	public virtual void setDuration(float time)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1655F68", Offset = "0x1655F68", VA = "0x1655F68", Slot = "6")]
	public virtual void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1655F6C", Offset = "0x1655F6C", VA = "0x1655F6C", Slot = "7")]
	public virtual void moveToFront()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1655F7C", Offset = "0x1655F7C", VA = "0x1655F7C", Slot = "8")]
	public virtual void moveToEnd()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1655F8C", Offset = "0x1655F8C", VA = "0x1655F8C", Slot = "9")]
	public virtual void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1655F90", Offset = "0x1655F90", VA = "0x1655F90")]
	public SimpleAnimation()
	{
	}
}
[Token(Token = "0x2000074")]
public sealed class SimpleAnimationAction : SimpleAnimation
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action forwardAction;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverseTrigger;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerReverse;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action reverseAction;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool firstPass;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool direction;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTime;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1655F98", Offset = "0x1655F98", VA = "0x1655F98", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1655FB4", Offset = "0x1655FB4", VA = "0x1655FB4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1656064", Offset = "0x1656064", VA = "0x1656064")]
	public SimpleAnimationAction()
	{
	}
}
[Token(Token = "0x2000075")]
public sealed class SimpleAnimationActivateMultiple : SimpleAnimation
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] targetObjects;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1656080", Offset = "0x1656080", VA = "0x1656080", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x16560D0", Offset = "0x16560D0", VA = "0x16560D0")]
	private void activate(bool activate)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1656174", Offset = "0x1656174", VA = "0x1656174")]
	public SimpleAnimationActivateMultiple()
	{
	}
}
[Token(Token = "0x2000076")]
public sealed class SimpleAnimationActivator : SimpleAnimation
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x165617C", Offset = "0x165617C", VA = "0x165617C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x165620C", Offset = "0x165620C", VA = "0x165620C")]
	public SimpleAnimationActivator()
	{
	}
}
[Token(Token = "0x2000077")]
public sealed class SimpleAnimationActivatorSwap : SimpleAnimation
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject01;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetObject02;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1656214", Offset = "0x1656214", VA = "0x1656214", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1656224", Offset = "0x1656224", VA = "0x1656224", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x16562A0", Offset = "0x16562A0", VA = "0x16562A0")]
	public SimpleAnimationActivatorSwap()
	{
	}
}
[Token(Token = "0x2000078")]
public sealed class SimpleAnimationAdjustPosition : SimpleAnimation
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialXPos;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float initialYPos;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int xOffsetKeysLength;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int yOffsetKeysLength;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x16562A8", Offset = "0x16562A8", VA = "0x16562A8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x165638C", Offset = "0x165638C", VA = "0x165638C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1656430", Offset = "0x1656430", VA = "0x1656430")]
	public SimpleAnimationAdjustPosition()
	{
	}
}
[Token(Token = "0x2000079")]
public sealed class SimpleAnimationBoing : SimpleAnimation
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAllForward;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve scaleAllReverse;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool deactivateAuto;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float scaleThreshold;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool direction;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int scaleAllForwardKeysLength;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int scaleAllReverseKeysLength;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool firstPass;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1656440", Offset = "0x1656440", VA = "0x1656440")]
	public void dumpCurves()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x16564FC", Offset = "0x16564FC", VA = "0x16564FC", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x165654C", Offset = "0x165654C", VA = "0x165654C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1656778", Offset = "0x1656778", VA = "0x1656778")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x16567D0", Offset = "0x16567D0", VA = "0x16567D0")]
	public SimpleAnimationBoing()
	{
	}
}
[Token(Token = "0x200007A")]
public sealed class SimpleAnimationCanvasGroupAlpha : SimpleAnimation
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x16567F8", Offset = "0x16567F8", VA = "0x16567F8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1656878", Offset = "0x1656878", VA = "0x1656878")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x16568B4", Offset = "0x16568B4", VA = "0x16568B4")]
	public SimpleAnimationCanvasGroupAlpha()
	{
	}
}
[Token(Token = "0x200007B")]
public sealed class SimpleAnimationColorLerp : SimpleAnimation
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color color01;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color02;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int lerpCurveKeysLength;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x16568C4", Offset = "0x16568C4", VA = "0x16568C4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1656A18", Offset = "0x1656A18", VA = "0x1656A18")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1656A54", Offset = "0x1656A54", VA = "0x1656A54")]
	public SimpleAnimationColorLerp()
	{
	}
}
[Token(Token = "0x200007C")]
public sealed class SimpleAnimationFollowPosition : SimpleAnimation
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform followTransform;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetTransform;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1656A64", Offset = "0x1656A64", VA = "0x1656A64", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1656AA4", Offset = "0x1656AA4", VA = "0x1656AA4")]
	public SimpleAnimationFollowPosition()
	{
	}
}
[Token(Token = "0x200007D")]
public sealed class SimpleAnimationGateRigidBodyVelocity : SimpleAnimation
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody2D targetRigidbody;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1656AAC", Offset = "0x1656AAC", VA = "0x1656AAC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1656C1C", Offset = "0x1656C1C", VA = "0x1656C1C")]
	public SimpleAnimationGateRigidBodyVelocity()
	{
	}
}
[Token(Token = "0x200007E")]
public sealed class SimpleAnimationMaterialColourLerp : SimpleAnimation
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startColour;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color endColour;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer theRenderer;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string matColourVariable;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int matVariableID;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1656C24", Offset = "0x1656C24", VA = "0x1656C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1656CA0", Offset = "0x1656CA0", VA = "0x1656CA0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1656D74", Offset = "0x1656D74", VA = "0x1656D74")]
	public SimpleAnimationMaterialColourLerp()
	{
	}
}
[Token(Token = "0x200007F")]
public sealed class SimpleAnimationMaterialFloatLerp : SimpleAnimation
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer theRenderer;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string matVariable;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int matVariableID;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1656D7C", Offset = "0x1656D7C", VA = "0x1656D7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1656E0C", Offset = "0x1656E0C", VA = "0x1656E0C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1656EF0", Offset = "0x1656EF0", VA = "0x1656EF0")]
	public SimpleAnimationMaterialFloatLerp()
	{
	}
}
[Token(Token = "0x2000080")]
public sealed class SimpleAnimationMoveToPosition : SimpleAnimation
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool playsForward;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool playsReverse;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool playsLinearInReverse;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool currentDirectionForward;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve linearMovementCurve;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1656EF8", Offset = "0x1656EF8", VA = "0x1656EF8", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1656F04", Offset = "0x1656F04", VA = "0x1656F04", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x16570A8", Offset = "0x16570A8", VA = "0x16570A8")]
	public SimpleAnimationMoveToPosition()
	{
	}
}
[Token(Token = "0x2000081")]
public sealed class SimpleAnimationMoveToPositionWithCurveType : SimpleAnimation
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform reverseStartPoint;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurveType forwardMovementCurve;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AnimationCurveType reverseMovementCurve;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOffset;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool playsForward;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool playsReverse;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool currentDirectionForward;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform startPointToUse;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool offsetCached;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x16570FC", Offset = "0x16570FC", VA = "0x16570FC", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x16572F4", Offset = "0x16572F4", VA = "0x16572F4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1657640", Offset = "0x1657640", VA = "0x1657640")]
	private void offsetKeyTime()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1657748", Offset = "0x1657748", VA = "0x1657748")]
	public SimpleAnimationMoveToPositionWithCurveType()
	{
	}
}
[Token(Token = "0x2000082")]
public sealed class SimpleAnimationMoveToPositionXY : SimpleAnimation
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startPoint;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endPoint;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve xMovementCurve;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve yMovementCurve;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x165776C", Offset = "0x165776C", VA = "0x165776C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x16578EC", Offset = "0x16578EC", VA = "0x16578EC")]
	public SimpleAnimationMoveToPositionXY()
	{
	}
}
[Token(Token = "0x2000083")]
public class SimpleAnimationMoveToWorldPosition : SimpleAnimation
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startPoint;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 endPoint;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool playsForward;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool playsReverse;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool playsLinearInReverse;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	protected bool currentDirectionForward;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected AnimationCurve animationCurveToUse;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected AnimationCurve linearMovementCurve;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x16578F4", Offset = "0x16578F4", VA = "0x16578F4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1657900", Offset = "0x1657900", VA = "0x1657900", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1657A6C", Offset = "0x1657A6C", VA = "0x1657A6C")]
	public SimpleAnimationMoveToWorldPosition()
	{
	}
}
[Token(Token = "0x2000084")]
public sealed class SimpleAnimationMoveToWorldPositionXY : SimpleAnimationMoveToWorldPosition
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve additionalAxisCurve;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve additionalAxisCurveToUse;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1657AC0", Offset = "0x1657AC0", VA = "0x1657AC0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1657C90", Offset = "0x1657C90", VA = "0x1657C90")]
	public SimpleAnimationMoveToWorldPositionXY()
	{
	}
}
[Token(Token = "0x2000085")]
public sealed class SimpleAnimationOnOff : SimpleAnimation
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool state;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObject;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1657C94", Offset = "0x1657C94", VA = "0x1657C94", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1657CB8", Offset = "0x1657CB8", VA = "0x1657CB8")]
	public SimpleAnimationOnOff()
	{
	}
}
[Token(Token = "0x2000086")]
public sealed class SimpleAnimationParticles : SimpleAnimation
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem theParticleSystem;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverseTrigger;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool applicationIsQuitting;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool firstPass;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool direction;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastTime;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1657CC0", Offset = "0x1657CC0", VA = "0x1657CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1657D34", Offset = "0x1657D34", VA = "0x1657D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1657D98", Offset = "0x1657D98", VA = "0x1657D98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1657E0C", Offset = "0x1657E0C", VA = "0x1657E0C")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1657E18", Offset = "0x1657E18", VA = "0x1657E18", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1657E34", Offset = "0x1657E34", VA = "0x1657E34", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1657F44", Offset = "0x1657F44", VA = "0x1657F44")]
	public SimpleAnimationParticles()
	{
	}
}
[Token(Token = "0x2000087")]
public sealed class SimpleAnimationPauseAnotherAnimator : SimpleAnimation
{
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleAnimator targetAnimator;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve pauseCurve;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1657F5C", Offset = "0x1657F5C", VA = "0x1657F5C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x165807C", Offset = "0x165807C", VA = "0x165807C")]
	public SimpleAnimationPauseAnotherAnimator()
	{
	}
}
[Token(Token = "0x2000088")]
public sealed class SimpleAnimationPoolableParticles : SimpleAnimation
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform source;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string forwardTriggerParticleKey;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string reverseTriggerParticleKey;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool applicationIsQuitting;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string particleID;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool firstPass;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool direction;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastTime;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1658084", Offset = "0x1658084", VA = "0x1658084")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x16580F8", Offset = "0x16580F8", VA = "0x16580F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1658258", Offset = "0x1658258", VA = "0x1658258")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x16582CC", Offset = "0x16582CC", VA = "0x16582CC")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x16582D8", Offset = "0x16582D8", VA = "0x16582D8", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x16582F4", Offset = "0x16582F4", VA = "0x16582F4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x16583B4", Offset = "0x16583B4", VA = "0x16583B4")]
	private void playParticle(string particleKey)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x16581B8", Offset = "0x16581B8", VA = "0x16581B8")]
	private void disableParticle()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x16584B0", Offset = "0x16584B0", VA = "0x16584B0")]
	public SimpleAnimationPoolableParticles()
	{
	}
}
[Token(Token = "0x2000089")]
public sealed class SimpleAnimationPosition : SimpleAnimation
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xOffsetKeysLength;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yOffsetKeysLength;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 pos;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x16584CC", Offset = "0x16584CC", VA = "0x16584CC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1658594", Offset = "0x1658594", VA = "0x1658594")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x16585EC", Offset = "0x16585EC", VA = "0x16585EC")]
	public SimpleAnimationPosition()
	{
	}
}
[Token(Token = "0x200008A")]
public sealed class SimpleAnimationPositionRelative : SimpleAnimation
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xOffset;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yOffset;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool updateBasePositionEveryEnable;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int xOffsetKeysLength;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int yOffsetKeysLength;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 initialPos;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialPositionSet;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 pos;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x16585FC", Offset = "0x16585FC", VA = "0x16585FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1658674", Offset = "0x1658674", VA = "0x1658674", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1658678", Offset = "0x1658678", VA = "0x1658678", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1658738", Offset = "0x1658738", VA = "0x1658738")]
	private void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1658600", Offset = "0x1658600", VA = "0x1658600")]
	private void SetInitialPos()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x16587B4", Offset = "0x16587B4", VA = "0x16587B4")]
	public SimpleAnimationPositionRelative()
	{
	}
}
[Token(Token = "0x200008B")]
public sealed class SimpleAnimationRandomizerMaterialLerp : SimpleAnimation
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material randomizerMaterial;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient gradient;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color col;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x16587CC", Offset = "0x16587CC", VA = "0x16587CC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1658884", Offset = "0x1658884", VA = "0x1658884")]
	public SimpleAnimationRandomizerMaterialLerp()
	{
	}
}
[Token(Token = "0x200008C")]
public sealed class SimpleAnimationRawImageAdditiveMaterialAlpha : SimpleAnimation
{
	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage targetImage;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colour;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int alphaKeysLength;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x165888C", Offset = "0x165888C", VA = "0x165888C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1658984", Offset = "0x1658984", VA = "0x1658984")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x16589C0", Offset = "0x16589C0", VA = "0x16589C0")]
	public SimpleAnimationRawImageAdditiveMaterialAlpha()
	{
	}
}
[Token(Token = "0x200008D")]
public sealed class SimpleAnimationRawImageAlpha : SimpleAnimation
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage targetImage;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x16589D0", Offset = "0x16589D0", VA = "0x16589D0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1658A80", Offset = "0x1658A80", VA = "0x1658A80")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1658ABC", Offset = "0x1658ABC", VA = "0x1658ABC")]
	public SimpleAnimationRawImageAlpha()
	{
	}
}
[Token(Token = "0x200008E")]
public sealed class SimpleAnimationRotation : SimpleAnimation
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int zRotationKeysLength;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 oilers;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1658ACC", Offset = "0x1658ACC", VA = "0x1658ACC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1658B70", Offset = "0x1658B70", VA = "0x1658B70")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1658BD0", Offset = "0x1658BD0", VA = "0x1658BD0")]
	public SimpleAnimationRotation()
	{
	}
}
[Token(Token = "0x200008F")]
public sealed class SimpleAnimationRotationRelative : SimpleAnimation
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve zRotation;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 initialRotation;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1658BE0", Offset = "0x1658BE0", VA = "0x1658BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1658C18", Offset = "0x1658C18", VA = "0x1658C18", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1658C94", Offset = "0x1658C94", VA = "0x1658C94")]
	public SimpleAnimationRotationRelative()
	{
	}
}
[Token(Token = "0x2000090")]
public sealed class SimpleAnimationSVGAlpha : SimpleAnimation
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1658C9C", Offset = "0x1658C9C", VA = "0x1658C9C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1658D4C", Offset = "0x1658D4C", VA = "0x1658D4C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1658D88", Offset = "0x1658D88", VA = "0x1658D88")]
	public SimpleAnimationSVGAlpha()
	{
	}
}
[Token(Token = "0x2000091")]
public sealed class SimpleAnimationSVGAlphaNumeric : SimpleAnimation
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage targetImage;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGRenderer targetRenderer;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startAlpha;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float endAlpha;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1658D98", Offset = "0x1658D98", VA = "0x1658D98", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1658F50", Offset = "0x1658F50", VA = "0x1658F50")]
	public SimpleAnimationSVGAlphaNumeric()
	{
	}
}
[Token(Token = "0x2000092")]
public sealed class SimpleAnimationSVGImageMaterialFloatLerp : SimpleAnimation
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage theSVGImage;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string matVariable;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int matVariableID;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1658F58", Offset = "0x1658F58", VA = "0x1658F58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1658F84", Offset = "0x1658F84", VA = "0x1658F84", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1658FF8", Offset = "0x1658FF8", VA = "0x1658FF8")]
	public SimpleAnimationSVGImageMaterialFloatLerp()
	{
	}
}
[Token(Token = "0x2000093")]
public sealed class SimpleAnimationSVGMaterialDissolve : SimpleAnimation
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer svgRenderer;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve materialDissolveCurve;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string cutOffKey;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int materialkDissolveCurveKeysLength;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SVGRendererMaterial;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1659000", Offset = "0x1659000", VA = "0x1659000", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1659088", Offset = "0x1659088", VA = "0x1659088")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1659150", Offset = "0x1659150", VA = "0x1659150")]
	public SimpleAnimationSVGMaterialDissolve()
	{
	}
}
[Token(Token = "0x2000094")]
public sealed class SimpleAnimationSVGRendererAlpha : SimpleAnimation
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer targetImage;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x16591B8", Offset = "0x16591B8", VA = "0x16591B8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x165924C", Offset = "0x165924C", VA = "0x165924C")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1659288", Offset = "0x1659288", VA = "0x1659288")]
	public SimpleAnimationSVGRendererAlpha()
	{
	}
}
[Token(Token = "0x2000095")]
public sealed class SimpleAnimationSVGRendererMaterialAlpha : SimpleAnimation
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer svgRenderer;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string alphaKey;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int alphaKeysLength;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material SVGRendererMaterial;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1659298", Offset = "0x1659298", VA = "0x1659298", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1659320", Offset = "0x1659320", VA = "0x1659320")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x16593E8", Offset = "0x16593E8", VA = "0x16593E8")]
	public SimpleAnimationSVGRendererMaterialAlpha()
	{
	}
}
[Token(Token = "0x2000096")]
public sealed class SimpleAnimationSVGSwap : SimpleAnimation
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGRenderer targetSVGRenderer;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer targetMeshRenderer;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset defaultSVGImage;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SVGAsset swapSVGImage;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool doSwapSortingOrder;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int defaultSortingOrder;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int swapSortingOrder;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasSwapped;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material svgMaterial;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1659450", Offset = "0x1659450", VA = "0x1659450", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x165956C", Offset = "0x165956C", VA = "0x165956C", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x16594F8", Offset = "0x16594F8", VA = "0x16594F8")]
	private void swapSVG(SVGAsset svg)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x165959C", Offset = "0x165959C", VA = "0x165959C")]
	public SimpleAnimationSVGSwap()
	{
	}
}
[Token(Token = "0x2000097")]
public sealed class SimpleAnimationSVGUISwap : SimpleAnimation
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve activationCurve;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGImage targetSVGImage;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SVGAsset defaultSVGImage;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset swapSVGImage;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x16595A4", Offset = "0x16595A4", VA = "0x16595A4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x16596A0", Offset = "0x16596A0", VA = "0x16596A0", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x16595F0", Offset = "0x16595F0", VA = "0x16595F0")]
	private void swapSVG(SVGAsset svg)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x16596E4", Offset = "0x16596E4", VA = "0x16596E4")]
	public SimpleAnimationSVGUISwap()
	{
	}
}
[Token(Token = "0x2000098")]
public sealed class SimpleAnimationScale : SimpleAnimation
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int scaleAllKeysLength;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x16596EC", Offset = "0x16596EC", VA = "0x16596EC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1659804", Offset = "0x1659804", VA = "0x1659804")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1659864", Offset = "0x1659864", VA = "0x1659864")]
	public void testButton()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x16598D4", Offset = "0x16598D4", VA = "0x16598D4")]
	public SimpleAnimationScale()
	{
	}
}
[Token(Token = "0x2000099")]
public sealed class SimpleAnimationScaleCurveType : SimpleAnimation
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurveType forwardScaleCurve;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AnimationCurveType reverseScaleCurve;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool swapCurvesOnReverse;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float timeOffset;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleOffset;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve animationCurveToUse;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curveKeysLength;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x16598E4", Offset = "0x16598E4", VA = "0x16598E4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1659A88", Offset = "0x1659A88", VA = "0x1659A88", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1659A14", Offset = "0x1659A14", VA = "0x1659A14")]
	private void CacheKeysLength()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1659BF0", Offset = "0x1659BF0", VA = "0x1659BF0")]
	private void offsetKeyTime()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1659CEC", Offset = "0x1659CEC", VA = "0x1659CEC")]
	public SimpleAnimationScaleCurveType()
	{
	}
}
[Token(Token = "0x200009A")]
public sealed class SimpleAnimationScaleRelative : SimpleAnimation
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve scaleAll;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int scaleAllKeysLength;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initialScale;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1659D10", Offset = "0x1659D10", VA = "0x1659D10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1659D8C", Offset = "0x1659D8C", VA = "0x1659D8C", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1659F44", Offset = "0x1659F44", VA = "0x1659F44")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1659D54", Offset = "0x1659D54", VA = "0x1659D54")]
	private void SetInitialScale()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1659F84", Offset = "0x1659F84", VA = "0x1659F84")]
	public SimpleAnimationScaleRelative()
	{
	}
}
[Token(Token = "0x200009B")]
public sealed class SimpleAnimationScaleXY : SimpleAnimation
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xScale;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yScale;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xScaleKeysLength;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yScaleKeysLength;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1659F94", Offset = "0x1659F94", VA = "0x1659F94", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x165A054", Offset = "0x165A054", VA = "0x165A054")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x165A0AC", Offset = "0x165A0AC", VA = "0x165A0AC")]
	public SimpleAnimationScaleXY()
	{
	}
}
[Token(Token = "0x200009C")]
public sealed class SimpleAnimationScaleXYRelative : SimpleAnimation
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve xScale;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve yScale;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int xScaleKeysLength;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int yScaleKeysLength;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initialScale;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x165A0BC", Offset = "0x165A0BC", VA = "0x165A0BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x165A124", Offset = "0x165A124", VA = "0x165A124", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x165A208", Offset = "0x165A208", VA = "0x165A208")]
	private void SetUpOnce()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x165A2A8", Offset = "0x165A2A8", VA = "0x165A2A8")]
	public void SetInitialScale(Vector3 scale)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x165A2B4", Offset = "0x165A2B4", VA = "0x165A2B4")]
	public SimpleAnimationScaleXYRelative()
	{
	}
}
[Token(Token = "0x200009D")]
public sealed class SimpleAnimationScreenShake : SimpleAnimation
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 shakeParamValues;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShakeParams shakeParams;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool triggerReverse;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool firstPass;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool direction;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastTime;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x165A2C4", Offset = "0x165A2C4", VA = "0x165A2C4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x165A2E0", Offset = "0x165A2E0", VA = "0x165A2E0", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x165A2E4", Offset = "0x165A2E4", VA = "0x165A2E4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x165A4A8", Offset = "0x165A4A8", VA = "0x165A4A8")]
	public SimpleAnimationScreenShake()
	{
	}
}
[Token(Token = "0x200009E")]
public sealed class SimpleAnimationScrollToCenter : SimpleAnimation
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform scrollContainer;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform objectToPutInCenter;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform centerPoint;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool currentDirectionForward;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 scrollDestination;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 scrollStart;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool vertical;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool horizontal;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x165A50C", Offset = "0x165A50C", VA = "0x165A50C", Slot = "5")]
	public override void setDuration(float time)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x165A514", Offset = "0x165A514", VA = "0x165A514")]
	private void setPositions()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x165A67C", Offset = "0x165A67C", VA = "0x165A67C", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x165A688", Offset = "0x165A688", VA = "0x165A688", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x165A7A0", Offset = "0x165A7A0", VA = "0x165A7A0")]
	public SimpleAnimationScrollToCenter()
	{
	}
}
[Token(Token = "0x200009F")]
public sealed class SimpleAnimationSepcialSandWaterfall : SimpleAnimation
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGRenderer sandBlockRenderer;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer sandWaterfallRenderer;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve blockDissolveCurve;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve sandWaterfallBaseCutOff;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve sandWaterfallTopCutOff;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve sandWaterfallAlpha;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int blockDissolveCurveKeysLength;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int sandWaterfallBaseCutOffKeysLength;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int sandWaterfallTopCutOffKeysLength;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int sandWaterfallAlphaKeysLength;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material sandBlockRendererMaterial;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material sandWaterfallRendererMaterial;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x165A7B4", Offset = "0x165A7B4", VA = "0x165A7B4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x165A9D0", Offset = "0x165A9D0", VA = "0x165A9D0")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x165AB44", Offset = "0x165AB44", VA = "0x165AB44")]
	public SimpleAnimationSepcialSandWaterfall()
	{
	}
}
[Token(Token = "0x20000A0")]
public sealed class SimpleAnimationSound : SimpleAnimation
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerForward;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x762F5C", Offset = "0x762F5C")]
	public float forwardTrigger;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool triggerReverse;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x762F98", Offset = "0x762F98")]
	public float reverseTrigger;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string soundKey;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool loopingSound;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool hasPlayed;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool animationPlayingForward;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastTime;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x165AB54", Offset = "0x165AB54", VA = "0x165AB54", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x165AB70", Offset = "0x165AB70", VA = "0x165AB70", Slot = "8")]
	public override void moveToEnd()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x165AB8C", Offset = "0x165AB8C", VA = "0x165AB8C", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x165AB98", Offset = "0x165AB98", VA = "0x165AB98", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x165ACB8", Offset = "0x165ACB8", VA = "0x165ACB8")]
	public SimpleAnimationSound()
	{
	}
}
[Token(Token = "0x20000A1")]
public sealed class SimpleAnimationSoundOnCurve : SimpleAnimation
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string soundKey;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve soundTiming;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float threshold;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hitTheThreshold;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool quiet;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x165ACD8", Offset = "0x165ACD8", VA = "0x165ACD8", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x165ADC4", Offset = "0x165ADC4", VA = "0x165ADC4")]
	public void setIsQuiet(bool isQuiet)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x165ADD0", Offset = "0x165ADD0", VA = "0x165ADD0")]
	public SimpleAnimationSoundOnCurve()
	{
	}
}
[Token(Token = "0x20000A2")]
public sealed class SimpleAnimationTextAlpha : SimpleAnimation
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text targetImage;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alpha;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int alphaKeysLength;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x165ADE0", Offset = "0x165ADE0", VA = "0x165ADE0", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x165AE90", Offset = "0x165AE90", VA = "0x165AE90")]
	public void CacheKeysLength()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x165AECC", Offset = "0x165AECC", VA = "0x165AECC")]
	public SimpleAnimationTextAlpha()
	{
	}
}
[Token(Token = "0x20000A3")]
public sealed class SimpleAnimationTimeScale : SimpleAnimation
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve lerpCurve;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x165AEDC", Offset = "0x165AEDC", VA = "0x165AEDC", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x165AF04", Offset = "0x165AF04", VA = "0x165AF04")]
	public SimpleAnimationTimeScale()
	{
	}
}
[Token(Token = "0x20000A4")]
public sealed class SimpleAnimationTrailRenderer : SimpleAnimation
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailRenderer trail;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve alphaCurve;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve widthCurve;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string alphaVariable;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock matPropBlock;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int matVariableID;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x165AF0C", Offset = "0x165AF0C", VA = "0x165AF0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x165AF38", Offset = "0x165AF38", VA = "0x165AF38", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x165B044", Offset = "0x165B044", VA = "0x165B044")]
	public SimpleAnimationTrailRenderer()
	{
	}
}
[Token(Token = "0x20000A5")]
public sealed class SimpleAnimationTrigger : SimpleAnimation
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardTrigger;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool triggerForward;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent forwardTriggerEvent;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverseTrigger;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerReverse;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent reverseTriggerEvent;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool firstPass;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool direction;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTime;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x165B0A4", Offset = "0x165B0A4", VA = "0x165B0A4", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x165B0C0", Offset = "0x165B0C0", VA = "0x165B0C0", Slot = "7")]
	public override void moveToFront()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x165B0C4", Offset = "0x165B0C4", VA = "0x165B0C4", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x165B174", Offset = "0x165B174", VA = "0x165B174")]
	public SimpleAnimationTrigger()
	{
	}
}
[Token(Token = "0x20000A6")]
public sealed class SimpleAnimationUIParticles : SimpleAnimation
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage renderImage;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forwardTrigger;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string forwardTriggerParticleKey;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reverseTrigger;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string reverseTriggerParticleKey;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float forwardDisableTrigger;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float reverseDisableTrigger;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool loopingParticle;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool applicationIsQuitting;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string particleID;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool firstPass;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool direction;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastTime;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x165B190", Offset = "0x165B190", VA = "0x165B190")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x165B204", Offset = "0x165B204", VA = "0x165B204")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x165B39C", Offset = "0x165B39C", VA = "0x165B39C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x165B410", Offset = "0x165B410", VA = "0x165B410")]
	private void ApplicationQuitting()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x165B41C", Offset = "0x165B41C", VA = "0x165B41C", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x165B438", Offset = "0x165B438", VA = "0x165B438", Slot = "9")]
	public override void moveToTime(float time)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x165B5B4", Offset = "0x165B5B4", VA = "0x165B5B4")]
	private void playParticle(string particleKey)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x165B2C4", Offset = "0x165B2C4", VA = "0x165B2C4")]
	private void disableParticle()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x165B6B4", Offset = "0x165B6B4", VA = "0x165B6B4")]
	public SimpleAnimationUIParticles()
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class SimpleAnimator : MonoBehaviour
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7616F4", Offset = "0x7616F4")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleAnimator <>4__this;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playForward;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action completion;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x165BFB4", Offset = "0x165BFB4", VA = "0x165BFB4")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x165C41C", Offset = "0x165C41C", VA = "0x165C41C")]
		internal void <restartAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float theTime;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float forwardSpeed;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reverseSpeed;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loops;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool animationShouldPlay;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool forward;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve timeCurve;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SimpleAnimation> animations;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool CollectAllChildrenAnimations;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> childAnimations;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool doneCollected;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int lastCount;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action animationComplete;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x165B6D0", Offset = "0x165B6D0", VA = "0x165B6D0")]
	public void moveToFront()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x165BBCC", Offset = "0x165BBCC", VA = "0x165BBCC")]
	public bool isAtFront()
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x165BC44", Offset = "0x165BC44", VA = "0x165BC44")]
	public bool animationIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x165BC4C", Offset = "0x165BC4C", VA = "0x165BC4C")]
	public void moveToEnd()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x165B7F4", Offset = "0x165B7F4", VA = "0x165B7F4")]
	public void collectAnimations()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x165BD54", Offset = "0x165BD54", VA = "0x165BD54")]
	private void notPlayingCollectAnimations()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x165BDD8", Offset = "0x165BDD8", VA = "0x165BDD8")]
	public void moveToTime(float time)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x165BED0", Offset = "0x165BED0", VA = "0x165BED0")]
	public void restartAfterDelay(float delay, bool playForward = true, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x165BFBC", Offset = "0x165BFBC", VA = "0x165BFBC")]
	public void go(bool forward)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x165C05C", Offset = "0x165C05C", VA = "0x165C05C")]
	public void pause(bool pause)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x165C06C", Offset = "0x165C06C", VA = "0x165C06C")]
	public void playForward()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x165BFFC", Offset = "0x165BFFC", VA = "0x165BFFC")]
	public void goForward([Optional] Action completion)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x165C02C", Offset = "0x165C02C", VA = "0x165C02C")]
	public void goReverse([Optional] Action completion)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1657FD0", Offset = "0x1657FD0", VA = "0x1657FD0")]
	public void restartAnimation(bool playForward = true, [Optional] Action completion)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x165C144", Offset = "0x165C144", VA = "0x165C144")]
	public void triggerRestart(bool playForward = true)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x165C098", Offset = "0x165C098", VA = "0x165C098")]
	public void setDirection(bool playForward)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x165C1F0", Offset = "0x165C1F0", VA = "0x165C1F0")]
	public void stop()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1658074", Offset = "0x1658074", VA = "0x1658074")]
	public void stopAndMoveToFront()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x165C1F8", Offset = "0x165C1F8", VA = "0x165C1F8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x165C2E8", Offset = "0x165C2E8", VA = "0x165C2E8")]
	private void notifyComplete()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x165C328", Offset = "0x165C328", VA = "0x165C328")]
	public SimpleAnimator()
	{
	}
}
[Token(Token = "0x20000A8")]
public sealed class SimpleAnimatorPlayOnAwake : MonoBehaviour
{
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761704", Offset = "0x761704")]
	private sealed class <waitForDelay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleAnimatorPlayOnAwake <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x15F7DF0", Offset = "0x15F7DF0", VA = "0x15F7DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x15F7E58", Offset = "0x15F7E58", VA = "0x15F7E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x15F7CF8", Offset = "0x15F7CF8", VA = "0x15F7CF8")]
		[DebuggerHidden]
		public <waitForDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x15F7D2C", Offset = "0x15F7D2C", VA = "0x15F7D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x15F7D30", Offset = "0x15F7D30", VA = "0x15F7D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x15F7DF8", Offset = "0x15F7DF8", VA = "0x15F7DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayTimeTweakageRange;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x15F7BA0", Offset = "0x15F7BA0", VA = "0x15F7BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x15F7C7C", Offset = "0x15F7C7C", VA = "0x15F7C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769EC0", Offset = "0x769EC0")]
	private IEnumerator waitForDelay()
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x15F7C18", Offset = "0x15F7C18", VA = "0x15F7C18")]
	private void runAnim()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x15F7D24", Offset = "0x15F7D24", VA = "0x15F7D24")]
	public SimpleAnimatorPlayOnAwake()
	{
	}
}
[Token(Token = "0x20000A9")]
public sealed class SimpleAnimatorPlayOnEnable : MonoBehaviour
{
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761714", Offset = "0x761714")]
	private sealed class <waitForDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleAnimatorPlayOnEnable <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x15F8110", Offset = "0x15F8110", VA = "0x15F8110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x15F8178", Offset = "0x15F8178", VA = "0x15F8178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x15F8018", Offset = "0x15F8018", VA = "0x15F8018")]
		[DebuggerHidden]
		public <waitForDelay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x15F804C", Offset = "0x15F804C", VA = "0x15F804C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x15F8050", Offset = "0x15F8050", VA = "0x15F8050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x15F8118", Offset = "0x15F8118", VA = "0x15F8118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayTime;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayTimeTweakageRange;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleAnimator myAnimator;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x15F7E60", Offset = "0x15F7E60", VA = "0x15F7E60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x15F7F9C", Offset = "0x15F7F9C", VA = "0x15F7F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769F24", Offset = "0x769F24")]
	private IEnumerator waitForDelay()
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x15F7F7C", Offset = "0x15F7F7C", VA = "0x15F7F7C")]
	private void runAnim()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x15F8044", Offset = "0x15F8044", VA = "0x15F8044")]
	public SimpleAnimatorPlayOnEnable()
	{
	}
}
[Token(Token = "0x20000AA")]
public sealed class SimpleAnimatorRandomSpeed : SimpleAnimation
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float baseForwardSpeed;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float forwardTweakRange;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float baseReverseSpeed;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverseTweakRange;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleAnimator animator;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x15F8180", Offset = "0x15F8180", VA = "0x15F8180", Slot = "6")]
	public override void setDirection(bool forward)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x15F827C", Offset = "0x15F827C", VA = "0x15F827C")]
	public SimpleAnimatorRandomSpeed()
	{
	}
}
[Token(Token = "0x20000AB")]
public class SimpleModelFlash : MonoBehaviour
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761724", Offset = "0x761724")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleModelFlash <>4__this;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeForFlash;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x15F84D8", Offset = "0x15F84D8", VA = "0x15F84D8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x15F84E8", Offset = "0x15F84E8", VA = "0x15F84E8")]
		internal void <flashMaterials>b__0()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x15F85AC", Offset = "0x15F85AC", VA = "0x15F85AC")]
		internal void <flashMaterials>b__1()
		{
		}
	}

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x762FD4", Offset = "0x762FD4")]
	public List<MeshRenderer> renderersToFlash;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFlashing;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x15F8290", Offset = "0x15F8290", VA = "0x15F8290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x15F83B8", Offset = "0x15F83B8", VA = "0x15F83B8")]
	public void flashMaterials(float flashValue, float timeForFlash)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x15F82B8", Offset = "0x15F82B8", VA = "0x15F82B8")]
	public void changeMaterialFlashOnAllFrames(float flashValue)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x15F84E0", Offset = "0x15F84E0", VA = "0x15F84E0")]
	public SimpleModelFlash()
	{
	}
}
[Token(Token = "0x20000AC")]
public sealed class SpinningFilledImage : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationsPerSecond;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image leadImage;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image leadImageBack;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image lagImageBack;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image lagImageFront;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text countLabel;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float width;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float direction;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fillAmount;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int count;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float randomFactor;

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1600AB4", Offset = "0x1600AB4", VA = "0x1600AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x1600BF4", Offset = "0x1600BF4", VA = "0x1600BF4")]
	public void tryTap()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1600D68", Offset = "0x1600D68", VA = "0x1600D68")]
	public bool isGoodTap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1600D7C", Offset = "0x1600D7C", VA = "0x1600D7C")]
	public SpinningFilledImage()
	{
	}
}
[Token(Token = "0x20000AD")]
public sealed class SuperPiffleHitFlash : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock propBlock;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x16027FC", Offset = "0x16027FC", VA = "0x16027FC")]
	public void superPIffleHitFlash()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1602974", Offset = "0x1602974", VA = "0x1602974")]
	public SuperPiffleHitFlash()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x160297C", Offset = "0x160297C", VA = "0x160297C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769F88", Offset = "0x769F88")]
	private void <superPIffleHitFlash>b__2_0(float lerpValue)
	{
	}
}
[Token(Token = "0x20000AE")]
public class ParameterizedEmitter<T> : SignalEmitter
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T parameter;

	[Token(Token = "0x6000568")]
	public ParameterizedEmitter()
	{
	}
}
[Token(Token = "0x20000AF")]
public class SignalEmitterWithString : ParameterizedEmitter<string>
{
	[Token(Token = "0x6000569")]
	[Address(RVA = "0x165539C", Offset = "0x165539C", VA = "0x165539C")]
	public SignalEmitterWithString()
	{
	}
}
[Token(Token = "0x20000B0")]
public class SignalReceiverWithString : MonoBehaviour, INotificationReceiver
{
	[Serializable]
	[Token(Token = "0x200034B")]
	public class SignalAssetEventPair
	{
		[Serializable]
		[Token(Token = "0x200041E")]
		public class ParameterizedEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x16557A8", Offset = "0x16557A8", VA = "0x16557A8")]
			public ParameterizedEvent()
			{
			}
		}

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SignalAsset signalAsset;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParameterizedEvent events;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x16557A0", Offset = "0x16557A0", VA = "0x16557A0")]
		public SignalAssetEventPair()
		{
		}
	}

	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761734", Offset = "0x761734")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterizedEmitter<string> stringEmitter;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1655760", Offset = "0x1655760", VA = "0x1655760")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1655770", Offset = "0x1655770", VA = "0x1655770")]
		internal bool <OnNotify>b__0(SignalAssetEventPair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SignalAssetEventPair[] signalAssetEventPairs;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x16553EC", Offset = "0x16553EC", VA = "0x16553EC", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1655768", Offset = "0x1655768", VA = "0x1655768")]
	public SignalReceiverWithString()
	{
	}
}
[Token(Token = "0x20000B1")]
public sealed class Vibrate : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761744", Offset = "0x761744")]
	private sealed class <UpdateLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vibrate <>4__this;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x14FEA34", Offset = "0x14FEA34", VA = "0x14FEA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x14FEA9C", Offset = "0x14FEA9C", VA = "0x14FEA9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x14FE834", Offset = "0x14FE834", VA = "0x14FE834")]
		[DebuggerHidden]
		public <UpdateLoop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x14FE888", Offset = "0x14FE888", VA = "0x14FE888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x14FE88C", Offset = "0x14FE88C", VA = "0x14FE88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x14FEA3C", Offset = "0x14FEA3C", VA = "0x14FEA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76300C", Offset = "0x76300C")]
	public float loopTime;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBetweenLoops;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float vibrationMagnitude;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool firstTime;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 baseLocalPosition;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds loopWait;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x14FE5C8", Offset = "0x14FE5C8", VA = "0x14FE5C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x14FE5CC", Offset = "0x14FE5CC", VA = "0x14FE5CC")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x14FE668", Offset = "0x14FE668", VA = "0x14FE668")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x14FE7B8", Offset = "0x14FE7B8", VA = "0x14FE7B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769F98", Offset = "0x769F98")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x14FE860", Offset = "0x14FE860", VA = "0x14FE860")]
	public Vibrate()
	{
	}
}
[Token(Token = "0x20000B2")]
public sealed class animationEventParticle : MonoBehaviour
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystemToPlay;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x15039CC", Offset = "0x15039CC", VA = "0x15039CC")]
	public void AnimationEventPlayParticle()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x15039EC", Offset = "0x15039EC", VA = "0x15039EC")]
	public animationEventParticle()
	{
	}
}
[Token(Token = "0x20000B3")]
public class CharacterScreenCapture : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761754", Offset = "0x761754")]
	private sealed class <WriteRenderTextureToDisk>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterScreenCapture <>4__this;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture renderTexture;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string filename;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x9C8128", Offset = "0x9C8128", VA = "0x9C8128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x9C8190", Offset = "0x9C8190", VA = "0x9C8190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x9C7E30", Offset = "0x9C7E30", VA = "0x9C7E30")]
		[DebuggerHidden]
		public <WriteRenderTextureToDisk>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x9C7E80", Offset = "0x9C7E80", VA = "0x9C7E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x9C7E84", Offset = "0x9C7E84", VA = "0x9C7E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x9C8130", Offset = "0x9C8130", VA = "0x9C8130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material CharacterMaterial;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ModelsToCapture;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera targetCamera;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture targetRenderTexture;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D textureWriter;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int screenWidth;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int screenHeight;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shotDelay;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool takeShot;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timePassed;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool running;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int totalModelCount;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentModel;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 originalPosition;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool fitCamera;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentModelIndex;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string captureName;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool busy;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x9C7530", Offset = "0x9C7530", VA = "0x9C7530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9C7658", Offset = "0x9C7658", VA = "0x9C7658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9C7B68", Offset = "0x9C7B68", VA = "0x9C7B68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9C76C0", Offset = "0x9C76C0", VA = "0x9C76C0")]
	private void SetupNextCharacter()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9C7C70", Offset = "0x9C7C70", VA = "0x9C7C70")]
	private void FitCameraToModel(MeshRenderer mr)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9C7BC4", Offset = "0x9C7BC4", VA = "0x9C7BC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x769FFC", Offset = "0x769FFC")]
	private IEnumerator WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x9C7E5C", Offset = "0x9C7E5C", VA = "0x9C7E5C")]
	public CharacterScreenCapture()
	{
	}
}
[Token(Token = "0x20000B4")]
public class DropInBakeAsset : MonoBehaviour
{
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x95B128", Offset = "0x95B128", VA = "0x95B128")]
	private void Start()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x95B12C", Offset = "0x95B12C", VA = "0x95B12C")]
	private void Update()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x95B130", Offset = "0x95B130", VA = "0x95B130")]
	public DropInBakeAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
public class GlobalShaderLighting : MonoBehaviour
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763044", Offset = "0x763044")]
	public string worldId;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDefaultWorld;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76307C", Offset = "0x76307C")]
	public Color platformSpiteColor;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x7630B4", Offset = "0x7630B4")]
	public Color platformSpiteEmission;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7630CC", Offset = "0x7630CC")]
	public Color ambientColour;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap ambientReflectionProbe;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float ambientIntensity;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float reflectionIntensity;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShaderLightGizmo[] shaderLights;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763104", Offset = "0x763104")]
	public float fadeInValue;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float fadeInYOffset;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76313C", Offset = "0x76313C")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x76313C", Offset = "0x76313C")]
	public Color fogColour;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float fogSize;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float fogChoke;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763190", Offset = "0x763190")]
	public Texture colorLUT;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float colorLUTContribution;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7631C8", Offset = "0x7631C8")]
	public GameObject hideAtRuntime;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x8F71A0", Offset = "0x8F71A0", VA = "0x8F71A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x8F75E8", Offset = "0x8F75E8", VA = "0x8F75E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x8F76B8", Offset = "0x8F76B8", VA = "0x8F76B8")]
	private void hubWasLoaded()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x8F7754", Offset = "0x8F7754", VA = "0x8F7754")]
	private void worldWasLoaded(object note)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x8F7334", Offset = "0x8F7334", VA = "0x8F7334")]
	public void updateShaderLights()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x8F794C", Offset = "0x8F794C", VA = "0x8F794C")]
	private void updateGlobalShaderAmbientParameters()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x8F781C", Offset = "0x8F781C", VA = "0x8F781C")]
	private void updateGlobalShaderLightParameters(string key, Color color, Vector3 dir, float intensity)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x8F79EC", Offset = "0x8F79EC", VA = "0x8F79EC")]
	private void updateGlobalFogParameters()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x8F7A74", Offset = "0x8F7A74", VA = "0x8F7A74")]
	public void updateFadeInParameters(float alpha)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x8F7AEC", Offset = "0x8F7AEC", VA = "0x8F7AEC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x8F7B30", Offset = "0x8F7B30", VA = "0x8F7B30")]
	public GlobalShaderLighting()
	{
	}
}
[Token(Token = "0x20000B6")]
public class IgnoreMeshModification : MonoBehaviour
{
	[Token(Token = "0x6000588")]
	[Address(RVA = "0x8FE720", Offset = "0x8FE720", VA = "0x8FE720")]
	public IgnoreMeshModification()
	{
	}
}
[Token(Token = "0x20000B7")]
public sealed class PrefabBakeContainer : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ObjectSpacer spacer;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<GameObject> objectsToUpdate;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] initialProbePositions;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB7D00C", Offset = "0xB7D00C", VA = "0xB7D00C")]
	public void setUpObjectSpacer(string name)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB7D118", Offset = "0xB7D118", VA = "0xB7D118")]
	public void instantiateAndAddObjectToUpdate(GameObject go)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xB7D188", Offset = "0xB7D188", VA = "0xB7D188")]
	private GameObject instantiatePrefab(GameObject prefabToSpawn, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB7D190", Offset = "0xB7D190", VA = "0xB7D190")]
	public void reset()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xB7D258", Offset = "0xB7D258", VA = "0xB7D258")]
	public PrefabBakeContainer()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ShaderLightGizmo : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lightColour;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lightIntensity;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string lightKey;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 lightDir;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer lightGizmo;

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9B57B4", Offset = "0x9B57B4", VA = "0x9B57B4")]
	public void updateLightGizmo()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9B57D8", Offset = "0x9B57D8", VA = "0x9B57D8")]
	private void setLightCol()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9B58E0", Offset = "0x9B58E0", VA = "0x9B58E0")]
	private void setLightDir()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9B5A34", Offset = "0x9B5A34", VA = "0x9B5A34")]
	public ShaderLightGizmo()
	{
	}
}
[Token(Token = "0x20000B9")]
public class workspaceActivator : MonoBehaviour
{
	[Token(Token = "0x6000592")]
	[Address(RVA = "0x15039F4", Offset = "0x15039F4", VA = "0x15039F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1503A1C", Offset = "0x1503A1C", VA = "0x1503A1C")]
	public workspaceActivator()
	{
	}
}
[Token(Token = "0x20000BA")]
public sealed class AutotestCharacterSelect : AutotestTask
{
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761764", Offset = "0x761764")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button thebutton;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestCharacterSelect <>4__this;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xACA8E0", Offset = "0xACA8E0", VA = "0xACA8E0")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xACABF8", Offset = "0xACABF8", VA = "0xACABF8")]
		internal void <fillActionList>b__0()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xACAC10", Offset = "0xACAC10", VA = "0xACAC10")]
		internal void <fillActionList>b__1()
		{
		}
	}

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> exclusionList;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string iterationPrefix;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastActionIndex;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AutotestAction> pickListActions;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Button> pickListButtons;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xAC9CB4", Offset = "0xAC9CB4", VA = "0xAC9CB4", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xAC9E8C", Offset = "0xAC9E8C", VA = "0xAC9E8C")]
	public void nextActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xACA158", Offset = "0xACA158", VA = "0xACA158")]
	public void randomActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xACA3E4", Offset = "0xACA3E4", VA = "0xACA3E4", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xACA9C0", Offset = "0xACA9C0", VA = "0xACA9C0")]
	private void scrollToButton(Button thebutton)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xACA8E8", Offset = "0xACA8E8", VA = "0xACA8E8")]
	private bool excludeButton(Button theButton)
	{
		return default(bool);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xACA9C4", Offset = "0xACA9C4", VA = "0xACA9C4")]
	public void pickButton()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xACAAEC", Offset = "0xACAAEC", VA = "0xACAAEC")]
	public AutotestCharacterSelect()
	{
	}
}
[Token(Token = "0x20000BB")]
public enum AutotestMode
{
	[Token(Token = "0x40004B1")]
	none,
	[Token(Token = "0x40004B2")]
	autoplay,
	[Token(Token = "0x40004B3")]
	scripted,
	[Token(Token = "0x40004B4")]
	scriptedAutoplay
}
[Token(Token = "0x20000BC")]
public sealed class AutotestController : SingletonMono<AutotestController>
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761774", Offset = "0x761774")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutotestController <>4__this;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button theButton;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__2;

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xACC298", Offset = "0xACC298", VA = "0xACC298")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xACD8A4", Offset = "0xACD8A4", VA = "0xACD8A4")]
		internal void <pressFingerDownOnButton>b__0()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xACDA18", Offset = "0xACDA18", VA = "0xACDA18")]
		internal void <pressFingerDownOnButton>b__1()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xACDAAC", Offset = "0xACDAAC", VA = "0xACDAAC")]
		internal void <pressFingerDownOnButton>b__2()
		{
		}
	}

	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761784", Offset = "0x761784")]
	private sealed class <runThroughWorkQueue>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <doRun>5__2;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action <task>5__3;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xACDFC0", Offset = "0xACDFC0", VA = "0xACDFC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xACE028", Offset = "0xACE028", VA = "0xACE028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xACC588", Offset = "0xACC588", VA = "0xACC588")]
		[DebuggerHidden]
		public <runThroughWorkQueue>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xACDDBC", Offset = "0xACDDBC", VA = "0xACDDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xACDDC0", Offset = "0xACDDC0", VA = "0xACDDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xACDFC8", Offset = "0xACDFC8", VA = "0xACDFC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761794", Offset = "0x761794")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 end;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 start;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xACCFE0", Offset = "0xACCFE0", VA = "0xACCFE0")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xACDAC4", Offset = "0xACDAC4", VA = "0xACDAC4")]
		internal void <moveFingerToPosition>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xACDC30", Offset = "0xACDC30", VA = "0xACDC30")]
		internal void <moveFingerToPosition>b__1()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617A4", Offset = "0x7617A4")]
	private sealed class <reportMemoryLoop>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestController <>4__this;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <longTime>5__2;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xACDD4C", Offset = "0xACDD4C", VA = "0xACDD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xACDDB4", Offset = "0xACDDB4", VA = "0xACDDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xACD654", Offset = "0xACD654", VA = "0xACD654")]
		[DebuggerHidden]
		public <reportMemoryLoop>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xACDC78", Offset = "0xACDC78", VA = "0xACDC78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xACDC7C", Offset = "0xACDC7C", VA = "0xACDC7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xACDD54", Offset = "0xACDD54", VA = "0xACDD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startupDelay;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutotestTask defaultTask;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<Action> workQueue;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AutotestMode mode;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string testBotInstance;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fingerMover;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fingerUp;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fingerDown;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool screenCapEveryButtonDown;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool screenCapLocChanges;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool showFinger;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float actionCountdown;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int actionListCount;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> actionList;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<string> screenCaptureAction;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string cachedFilename;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool didBoot;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool canActivate;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool hasHandledArgs;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Text releaseDisplayText;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Button> sameNamedButtons;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float langCheckCountdown;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int langCheckCounter;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool shouldProcessTestScripts;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xACAC34", Offset = "0xACAC34", VA = "0xACAC34")]
	public static bool isTestbot()
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xACAC3C", Offset = "0xACAC3C", VA = "0xACAC3C")]
	public static bool isReleaseTestbot()
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xACAC44", Offset = "0xACAC44", VA = "0xACAC44")]
	public static void logAction(string actionString)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xACA154", Offset = "0xACA154", VA = "0xACA154")]
	public static void logActionError(string errorString)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xACAC48", Offset = "0xACAC48", VA = "0xACAC48")]
	public static void screenCapture([Optional] string context)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xACAF28", Offset = "0xACAF28", VA = "0xACAF28")]
	public static void performTestAction(AutotestAction theAction)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xACB080", Offset = "0xACB080", VA = "0xACB080")]
	public static void resetActionInterval(float time = 0.5f)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xACB104", Offset = "0xACB104", VA = "0xACB104")]
	public static bool checkForExceptions()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xACB10C", Offset = "0xACB10C", VA = "0xACB10C")]
	public string actionLogFileName()
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xACB19C", Offset = "0xACB19C", VA = "0xACB19C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xACB254", Offset = "0xACB254", VA = "0xACB254")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xACB3E8", Offset = "0xACB3E8", VA = "0xACB3E8")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xACB3F8", Offset = "0xACB3F8", VA = "0xACB3F8")]
	public void tryStartTestbot()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xACBA58", Offset = "0xACBA58", VA = "0xACBA58")]
	public void checkLanguage()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xACB2C0", Offset = "0xACB2C0", VA = "0xACB2C0")]
	public static string findCommandArg(string argKey, string defaultArg)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xACB400", Offset = "0xACB400", VA = "0xACB400")]
	public void tryStart(bool forceSoak = false)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xACC08C", Offset = "0xACC08C", VA = "0xACC08C")]
	private void ensureSetupForVR()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xACBBF4", Offset = "0xACBBF4", VA = "0xACBBF4")]
	public void handleAnyCommandLineArgs()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xACB550", Offset = "0xACB550", VA = "0xACB550")]
	private void addReleaseBuildDisplay()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xACB234", Offset = "0xACB234", VA = "0xACB234")]
	public void activateFinger(bool isActive)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xACC090", Offset = "0xACC090", VA = "0xACC090")]
	public void downFinger()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xACC0F8", Offset = "0xACC0F8", VA = "0xACC0F8")]
	public void upFinger()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xACC160", Offset = "0xACC160", VA = "0xACC160")]
	public void pressFingerDownOnButton(Button theButton)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xACC2F0", Offset = "0xACC2F0", VA = "0xACC2F0")]
	public void runOneQueueLoop()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xACC55C", Offset = "0xACC55C", VA = "0xACC55C")]
	public void runCurrentQueue()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xACC4E0", Offset = "0xACC4E0", VA = "0xACC4E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A060", Offset = "0x76A060")]
	private IEnumerator runThroughWorkQueue()
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xACC5B4", Offset = "0xACC5B4", VA = "0xACC5B4")]
	public void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xAC9E24", Offset = "0xAC9E24", VA = "0xAC9E24")]
	public void queueTask(Action task)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xACC91C", Offset = "0xACC91C", VA = "0xACC91C")]
	public void queueLongWait()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xAC9D90", Offset = "0xAC9D90", VA = "0xAC9D90")]
	public void queueWait()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xACAFE8", Offset = "0xACAFE8", VA = "0xACAFE8")]
	public AutotestActionSignature generateSignature(AutotestAction action)
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xACCAFC", Offset = "0xACCAFC", VA = "0xACCAFC")]
	public Vector3 getCurrentTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xACCBBC", Offset = "0xACCBBC", VA = "0xACCBBC")]
	public AutotestTargetHolder highestPriorityTargetHolder()
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xACC9B0", Offset = "0xACC9B0", VA = "0xACC9B0")]
	public AutotestTask highestPriorityTask()
	{
		return null;
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xACC898", Offset = "0xACC898", VA = "0xACC898")]
	public void changeMode(AutotestMode newMode)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xACC324", Offset = "0xACC324", VA = "0xACC324")]
	public void fillWorkQueue()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xACCD18", Offset = "0xACCD18", VA = "0xACCD18")]
	public void forceEmptyWorkQueue()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xACCD70", Offset = "0xACCD70", VA = "0xACCD70")]
	public void wait()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xACCD94", Offset = "0xACCD94", VA = "0xACCD94")]
	public void waitLong()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xACCDB8", Offset = "0xACCDB8", VA = "0xACCDB8")]
	public void moveFingerToViewportPosition(Vector2 viewportPos, float time = 0.2f)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xACCE9C", Offset = "0xACCE9C", VA = "0xACCE9C")]
	public void moveFingerToPosition(Vector3 end, float time = 0.2f)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xACC2A0", Offset = "0xACC2A0", VA = "0xACC2A0")]
	public void moveFingerToButton(Button theButton, float time)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xACCFE8", Offset = "0xACCFE8", VA = "0xACCFE8")]
	public Button getButton(string buttonName, bool logError = false)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xACA790", Offset = "0xACA790", VA = "0xACA790")]
	public static List<Button> currentlyAvailableButtons(GameObject source)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xACD238", Offset = "0xACD238", VA = "0xACD238")]
	public bool buttonIsShowing(string buttonName, bool checkParentCanvasGroup = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xACD344", Offset = "0xACD344", VA = "0xACD344")]
	public void downButton(Button theButton)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xACAE38", Offset = "0xACAE38", VA = "0xACAE38")]
	public static string currentPanelName()
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xACD4A4", Offset = "0xACD4A4", VA = "0xACD4A4")]
	public void clickButton(Button theButton)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xACB36C", Offset = "0xACB36C", VA = "0xACB36C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A0C4", Offset = "0x76A0C4")]
	private IEnumerator reportMemoryLoop()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xACD680", Offset = "0xACD680", VA = "0xACD680")]
	private void reportMemory()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xACD750", Offset = "0xACD750", VA = "0xACD750")]
	public AutotestController()
	{
	}
}
[Token(Token = "0x20000BD")]
public sealed class AutotestControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutotestController controller;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutotestGifCapture gifCapture;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AutotestScreenCapture screenCapture;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xACE030", Offset = "0xACE030", VA = "0xACE030", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xACE28C", Offset = "0xACE28C", VA = "0xACE28C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xACED78", Offset = "0xACED78", VA = "0xACED78")]
	public AutotestControllerBooter()
	{
	}
}
[Token(Token = "0x20000BE")]
public class AutotestFindEnemyTarget : AutotestTargetHolder
{
	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xACED80", Offset = "0xACED80", VA = "0xACED80", Slot = "5")]
	public override Vector3 getPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xACEE88", Offset = "0xACEE88", VA = "0xACEE88", Slot = "4")]
	public override bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xACEF00", Offset = "0xACEF00", VA = "0xACEF00")]
	public AutotestFindEnemyTarget()
	{
	}
}
[Token(Token = "0x20000BF")]
public sealed class AutotestGifCapture : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617B4", Offset = "0x7617B4")]
	private sealed class <CaptureScreenshot>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestGifCapture <>4__this;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xACFAF4", Offset = "0xACFAF4", VA = "0xACFAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xACFB5C", Offset = "0xACFB5C", VA = "0xACFB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xACF708", Offset = "0xACF708", VA = "0xACF708")]
		[DebuggerHidden]
		public <CaptureScreenshot>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xACF828", Offset = "0xACF828", VA = "0xACF828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xACF82C", Offset = "0xACF82C", VA = "0xACF82C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xACFAFC", Offset = "0xACFAFC", VA = "0xACFAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617C4", Offset = "0x7617C4")]
	private sealed class <WriteAllRenderTexturesToDisk>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestGifCapture <>4__this;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string logString;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stackTrace;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xACFE38", Offset = "0xACFE38", VA = "0xACFE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xACFEA0", Offset = "0xACFEA0", VA = "0xACFEA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xACF734", Offset = "0xACF734", VA = "0xACF734")]
		[DebuggerHidden]
		public <WriteAllRenderTexturesToDisk>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xACFB64", Offset = "0xACFB64", VA = "0xACFB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xACFB68", Offset = "0xACFB68", VA = "0xACFB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xACFE40", Offset = "0xACFE40", VA = "0xACFE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doCapture;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delayBetweenCaptures;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastCaptureTime;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int capturesToKeep;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float captureResolutionScale;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string captureDirectoryRoot;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int totalFramesCaptured;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int nextCaptureIndex;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int nextGifFolderIndex;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool doingCopy;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RenderTexture> renderTextures;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture renderTextureReader;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture2D textureWriter;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xACE284", Offset = "0xACE284", VA = "0xACE284")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xACE2E8", Offset = "0xACE2E8", VA = "0xACE2E8")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xACF1B8", Offset = "0xACF1B8", VA = "0xACF1B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xACF3BC", Offset = "0xACF3BC", VA = "0xACF3BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xACF49C", Offset = "0xACF49C", VA = "0xACF49C")]
	public void forceCapture(string logString)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xACF69C", Offset = "0xACF69C", VA = "0xACF69C")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xACF420", Offset = "0xACF420", VA = "0xACF420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A128", Offset = "0x76A128")]
	private IEnumerator CaptureScreenshot()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xACF5F0", Offset = "0xACF5F0", VA = "0xACF5F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A18C", Offset = "0x76A18C")]
	private IEnumerator WriteAllRenderTexturesToDisk(string logString, string stackTrace)
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xACF760", Offset = "0xACF760", VA = "0xACF760")]
	private void WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xACF820", Offset = "0xACF820", VA = "0xACF820")]
	public AutotestGifCapture()
	{
	}
}
[Token(Token = "0x20000C0")]
public sealed class AutotestJustClose : AutotestTask
{
	[Serializable]
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617D4", Offset = "0x7617D4")]
	private sealed class <>c
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__2_0;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xAD0244", Offset = "0xAD0244", VA = "0xAD0244")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xAD024C", Offset = "0xAD024C", VA = "0xAD024C")]
		internal void <fillActionList>b__2_0()
		{
		}
	}

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pressOwnPanelToClose;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xACFEA8", Offset = "0xACFEA8", VA = "0xACFEA8", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xACFFD0", Offset = "0xACFFD0", VA = "0xACFFD0", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xAD01A4", Offset = "0xAD01A4", VA = "0xAD01A4")]
	private void pressPanel()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xAD01D4", Offset = "0xAD01D4", VA = "0xAD01D4")]
	public AutotestJustClose()
	{
	}
}
[Token(Token = "0x20000C1")]
public sealed class AutotestJustWait : AutotestTask
{
	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xAD02C4", Offset = "0xAD02C4", VA = "0xAD02C4", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xAD0348", Offset = "0xAD0348", VA = "0xAD0348", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xAD0404", Offset = "0xAD0404", VA = "0xAD0404")]
	public AutotestJustWait()
	{
	}
}
[Token(Token = "0x20000C2")]
public class AutotestLootButton : AutotestTask
{
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617E4", Offset = "0x7617E4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string theName;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestLootButton <>4__this;

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xAD0708", Offset = "0xAD0708", VA = "0xAD0708")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xAD08C0", Offset = "0xAD08C0", VA = "0xAD08C0")]
		internal void <fillActionList>b__0()
		{
		}
	}

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LootEntry> lootTableEntries;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LootDropTable lootTable;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xAD040C", Offset = "0xAD040C", VA = "0xAD040C", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xAD04E8", Offset = "0xAD04E8", VA = "0xAD04E8", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xAD0710", Offset = "0xAD0710", VA = "0xAD0710", Slot = "7")]
	public virtual void pickButton()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xAD0768", Offset = "0xAD0768", VA = "0xAD0768", Slot = "8")]
	protected virtual void fillTable()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xAD0844", Offset = "0xAD0844", VA = "0xAD0844")]
	public AutotestLootButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C3")]
public struct TransformWeighting
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int weighting;
}
[Token(Token = "0x20000C4")]
public class AutotestLootTableTargets : AutotestTargetHolder
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TransformWeighting> targets;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Transform> targetMappings;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LootDropTable lootTable;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xAD08E4", Offset = "0xAD08E4", VA = "0xAD08E4", Slot = "5")]
	public override Vector3 getPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xAD0C58", Offset = "0xAD0C58", VA = "0xAD0C58")]
	public AutotestLootTableTargets()
	{
	}
}
[Token(Token = "0x20000C5")]
public sealed class AutotestPanelModeChanger : MonoBehaviour
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutotestMode changeTo;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xAD0C60", Offset = "0xAD0C60", VA = "0xAD0C60")]
	public AutotestPanelModeChanger()
	{
	}
}
[Token(Token = "0x20000C6")]
public sealed class AutotestPlayGame : AutotestTask
{
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7617F4", Offset = "0x7617F4")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 randomStart;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 randomEnd;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestPlayGame <>4__this;

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xAD122C", Offset = "0xAD122C", VA = "0xAD122C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xAD123C", Offset = "0xAD123C", VA = "0xAD123C")]
		internal void <fakeDrag>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xAD1430", Offset = "0xAD1430", VA = "0xAD1430")]
		internal void <fakeDrag>b__1()
		{
		}
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 currentPos;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xAD0C70", Offset = "0xAD0C70", VA = "0xAD0C70")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xAD0CF4", Offset = "0xAD0CF4", VA = "0xAD0CF4", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xAD0DD0", Offset = "0xAD0DD0", VA = "0xAD0DD0", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xAD0E8C", Offset = "0xAD0E8C", VA = "0xAD0E8C")]
	public void playGame()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xAD1184", Offset = "0xAD1184", VA = "0xAD1184")]
	private Vector2 randomDragPos()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xAD0F94", Offset = "0xAD0F94", VA = "0xAD0F94")]
	public void fakeDrag()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xAD1234", Offset = "0xAD1234", VA = "0xAD1234")]
	public AutotestPlayGame()
	{
	}
}
[Token(Token = "0x20000C7")]
public sealed class AutotestRandomPick : AutotestTask
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761804", Offset = "0x761804")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button thebutton;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutotestRandomPick <>4__this;

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xAD38E8", Offset = "0xAD38E8", VA = "0xAD38E8")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xAD3C28", Offset = "0xAD3C28", VA = "0xAD3C28")]
		internal void <fillActionList>b__0()
		{
		}
	}

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> exclusionList;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> extraList;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string iterationPrefix;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastActionIndex;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AutotestAction> pickListActions;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Button> pickListButtons;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xAD30C4", Offset = "0xAD30C4", VA = "0xAD30C4", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xAD31A0", Offset = "0xAD31A0", VA = "0xAD31A0")]
	public void nextActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xAD3364", Offset = "0xAD3364", VA = "0xAD3364")]
	public void randomActionThatMatchesPrefix()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xAD35F0", Offset = "0xAD35F0", VA = "0xAD35F0", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xAD38F0", Offset = "0xAD38F0", VA = "0xAD38F0")]
	private bool excludeButton(Button theButton)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xAD39C8", Offset = "0xAD39C8", VA = "0xAD39C8")]
	public void pickButton()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xAD3AF0", Offset = "0xAD3AF0", VA = "0xAD3AF0")]
	public AutotestRandomPick()
	{
	}
}
[Token(Token = "0x20000C8")]
public sealed class AutotestScreenCapture : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761814", Offset = "0x761814")]
	private sealed class <CaptureScreenshot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestScreenCapture <>4__this;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fullPath;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xAD43A4", Offset = "0xAD43A4", VA = "0xAD43A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xAD440C", Offset = "0xAD440C", VA = "0xAD440C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xAD3FC0", Offset = "0xAD3FC0", VA = "0xAD3FC0")]
		[DebuggerHidden]
		public <CaptureScreenshot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xAD4110", Offset = "0xAD4110", VA = "0xAD4110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xAD4114", Offset = "0xAD4114", VA = "0xAD4114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xAD43AC", Offset = "0xAD43AC", VA = "0xAD43AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float captureResolutionScale;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string captureDirectoryRoot;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture renderTextureReader;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture renderTextureCapture;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D textureWriter;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool capEnabled;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AutotestGifCapture gifCapturer;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float screenCaptureIndex;

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xACE288", Offset = "0xACE288", VA = "0xACE288")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xACE9D4", Offset = "0xACE9D4", VA = "0xACE9D4")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xAD2024", Offset = "0xAD2024", VA = "0xAD2024")]
	public void clearCaptureDirectory()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xAD3C4C", Offset = "0xAD3C4C", VA = "0xAD3C4C")]
	private void forceCapture(string identifier)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xAD211C", Offset = "0xAD211C", VA = "0xAD211C")]
	public void generateBashScripts(int picsPerImage = 6)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xAD3F28", Offset = "0xAD3F28", VA = "0xAD3F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A1F0", Offset = "0x76A1F0")]
	private IEnumerator CaptureScreenshot(string fullPath)
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xAD3FEC", Offset = "0xAD3FEC", VA = "0xAD3FEC")]
	private void WriteRenderTextureToDisk(RenderTexture renderTexture, string filename)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xAD40AC", Offset = "0xAD40AC", VA = "0xAD40AC")]
	public AutotestScreenCapture()
	{
	}
}
[Token(Token = "0x20000C9")]
public sealed class PanelTestAction
{
	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string startPanel;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string actionName;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeTillNext;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isOptional;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action rawAction;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xA1D758", Offset = "0xA1D758", VA = "0xA1D758")]
	public PanelTestAction(string start, string action, float time, bool optional = false)
	{
	}
}
[Token(Token = "0x20000CA")]
public enum ScriptedTestStatus
{
	[Token(Token = "0x40004FB")]
	idle,
	[Token(Token = "0x40004FC")]
	testing,
	[Token(Token = "0x40004FD")]
	passed,
	[Token(Token = "0x40004FE")]
	failed
}
[Token(Token = "0x20000CB")]
public enum ScriptedTestCategory
{
	[Token(Token = "0x4000500")]
	any,
	[Token(Token = "0x4000501")]
	levels,
	[Token(Token = "0x4000502")]
	events,
	[Token(Token = "0x4000503")]
	crafting,
	[Token(Token = "0x4000504")]
	ui
}
[Token(Token = "0x20000CC")]
public interface IScriptableAutotest
{
	[Token(Token = "0x6000606")]
	void resetTest();

	[Token(Token = "0x6000607")]
	void processNextStep();

	[Token(Token = "0x6000608")]
	bool testIsComplete();

	[Token(Token = "0x6000609")]
	string testStatus();
}
[Token(Token = "0x20000CD")]
public sealed class ScriptedTest
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string testID;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IScriptableAutotest theTest;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScriptedTestCategory category;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ScriptedTestStatus status;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string error;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime startTime;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DateTime endTime;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string statusOverride;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9B2C68", Offset = "0x9B2C68", VA = "0x9B2C68")]
	public ScriptedTest(string itemID, IScriptableAutotest testObject, ScriptedTestCategory cat)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x9B2CC4", Offset = "0x9B2CC4", VA = "0x9B2CC4")]
	public void start()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x9B2DB8", Offset = "0x9B2DB8", VA = "0x9B2DB8")]
	public void end(bool passed)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x9B2E40", Offset = "0x9B2E40", VA = "0x9B2E40")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9B2E60", Offset = "0x9B2E60", VA = "0x9B2E60")]
	public bool failed()
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x9B2E70", Offset = "0x9B2E70", VA = "0x9B2E70")]
	public bool passed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9B2E80", Offset = "0x9B2E80", VA = "0x9B2E80")]
	public bool isRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x9B2E90", Offset = "0x9B2E90", VA = "0x9B2E90")]
	public string description()
	{
		return null;
	}
}
[Token(Token = "0x20000CE")]
public sealed class AutotestScriptController : SingletonMono<AutotestScriptController>
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761824", Offset = "0x761824")]
	private sealed class <runTest>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutotestScriptController <>4__this;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <pleaseWaitCount>5__2;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xAD7990", Offset = "0xAD7990", VA = "0xAD7990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xAD79F8", Offset = "0xAD79F8", VA = "0xAD79F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xAD5ECC", Offset = "0xAD5ECC", VA = "0xAD5ECC")]
		[DebuggerHidden]
		public <runTest>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xAD7644", Offset = "0xAD7644", VA = "0xAD7644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xAD7648", Offset = "0xAD7648", VA = "0xAD7648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xAD7998", Offset = "0xAD7998", VA = "0xAD7998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ScriptedTest> availableTests;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScriptedTest runningTest;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool needsOnboarding;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool needsToGetBackToMap;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waitTimeBetweenCommands;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float countDown;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShuffleBag<string> testBag;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> statusList;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime bootTime;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<string> gifCaptureAction;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle passedStyle;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle failedStyle;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIStyle idleStyle;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIStyle runningStyle;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool scriptControllerActive;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool showGUI;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int completeHeight;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasBooted;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int startLevel;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int endLevel;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int repeatCount;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string singularTest;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int testCount;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int maxTestCount;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool screenShotLocThings;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float startTime;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int tries;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int actionTryCount;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string scriptButtonError;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xAD4414", Offset = "0xAD4414", VA = "0xAD4414")]
	public List<string> availableTestIDs()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xAD4724", Offset = "0xAD4724", VA = "0xAD4724")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xAD5048", Offset = "0xAD5048", VA = "0xAD5048")]
	public void gifCapture(string logMessage)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xAD4DFC", Offset = "0xAD4DFC", VA = "0xAD4DFC")]
	private void showCompletedTest(ScriptedTest theTest)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xAD4B0C", Offset = "0xAD4B0C", VA = "0xAD4B0C")]
	private void showTestBotStatus()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xAD4F78", Offset = "0xAD4F78", VA = "0xAD4F78")]
	private void showRunningTest(ScriptedTest theTest)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xAD510C", Offset = "0xAD510C", VA = "0xAD510C")]
	private void resetCountdown()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xAD5118", Offset = "0xAD5118", VA = "0xAD5118")]
	private void Update()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xAD51B8", Offset = "0xAD51B8", VA = "0xAD51B8")]
	public void addStatus(string status)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xAD5230", Offset = "0xAD5230", VA = "0xAD5230")]
	private void addLevelRangeTest(int start, int end)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xAD5234", Offset = "0xAD5234", VA = "0xAD5234")]
	private void checkCommandLineLevels()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xAD4510", Offset = "0xAD4510", VA = "0xAD4510")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xAD531C", Offset = "0xAD531C", VA = "0xAD531C")]
	private void fillTestBag(string defaultCategory = "any")
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xAD586C", Offset = "0xAD586C", VA = "0xAD586C")]
	public void onlyRunTest(string testName)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xAD589C", Offset = "0xAD589C", VA = "0xAD589C")]
	public void runNextTest()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xAD5D6C", Offset = "0xAD5D6C", VA = "0xAD5D6C")]
	private ScriptedTest testWithID(string theID)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xAD59F8", Offset = "0xAD59F8", VA = "0xAD59F8")]
	public void runTest(string scriptName, bool backToMapAfter = false)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xACAF10", Offset = "0xACAF10", VA = "0xACAF10")]
	public string currentTestID()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xAD5E50", Offset = "0xAD5E50", VA = "0xAD5E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A254", Offset = "0x76A254")]
	private IEnumerator runTest()
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xACF170", Offset = "0xACF170", VA = "0xACF170")]
	public void setTestError(string theError)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xAD5EF8", Offset = "0xAD5EF8", VA = "0xAD5EF8")]
	private void processNextStep()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xAD5FD4", Offset = "0xAD5FD4", VA = "0xAD5FD4")]
	private float secondsSinceTestStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xAD6000", Offset = "0xAD6000", VA = "0xAD6000")]
	public void testSuccess()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xAD6020", Offset = "0xAD6020", VA = "0xAD6020")]
	public void overrideTestStatus(string newStatus)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xAD6034", Offset = "0xAD6034", VA = "0xAD6034")]
	public void testFail(string error)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xACF098", Offset = "0xACF098", VA = "0xACF098")]
	public static string currentPanelName()
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xAD6658", Offset = "0xAD6658", VA = "0xAD6658")]
	public static bool isOnRightPanel(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xAD66C8", Offset = "0xAD66C8", VA = "0xAD66C8")]
	public static bool isActionAvailable(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xAD6804", Offset = "0xAD6804", VA = "0xAD6804")]
	public static bool attemptActionOnAnyPanel(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xAD7290", Offset = "0xAD7290", VA = "0xAD7290")]
	public static bool tryActionOnPanel(string panel, string action, float time = 1f, bool optional = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xAD73C8", Offset = "0xAD73C8", VA = "0xAD73C8")]
	public static bool tryButtonOnPanel(string panel, string action, float time = 1f, bool optional = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xAC9B1C", Offset = "0xAC9B1C", VA = "0xAC9B1C")]
	public void tryRawAction(PanelTestAction theAction)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xAC9B4C", Offset = "0xAC9B4C", VA = "0xAC9B4C")]
	public void tryAction(PanelTestAction theAction)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xAD74B8", Offset = "0xAD74B8", VA = "0xAD74B8")]
	private void tryActionOptional(string startPanel, string action)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xAD6ACC", Offset = "0xAD6ACC", VA = "0xAD6ACC")]
	private void tryAction(string startPanel, string action)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xAD6990", Offset = "0xAD6990", VA = "0xAD6990")]
	private static bool actionIsAvailable(string actionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xAD2E88", Offset = "0xAD2E88", VA = "0xAD2E88")]
	public static void setTheStateToLevel(int level, int coins = 500)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xAD74BC", Offset = "0xAD74BC", VA = "0xAD74BC")]
	public AutotestScriptController()
	{
	}
}
[Token(Token = "0x20000CF")]
public sealed class AutotestActionList : IScriptableAutotest
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string statusString;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PanelTestAction> testActions;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int testActionIndex;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xAC9864", Offset = "0xAC9864", VA = "0xAC9864", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xAC9870", Offset = "0xAC9870", VA = "0xAC9870")]
	public void addAction(string start, string action, float time, bool optional = false)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xAC9924", Offset = "0xAC9924", VA = "0xAC9924")]
	public void addAction(string start, float time, Action action)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xAC99E4", Offset = "0xAC99E4", VA = "0xAC99E4", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xAC99EC", Offset = "0xAC99EC", VA = "0xAC99EC", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xAC9B74", Offset = "0xAC9B74", VA = "0xAC9B74", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xAC9B7C", Offset = "0xAC9B7C", VA = "0xAC9B7C")]
	public AutotestActionList()
	{
	}
}
[Token(Token = "0x20000D0")]
public sealed class AutotestGetBackToMap : IScriptableAutotest
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xACEF08", Offset = "0xACEF08", VA = "0xACEF08", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xACEF10", Offset = "0xACEF10", VA = "0xACEF10", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xACF048", Offset = "0xACF048", VA = "0xACF048", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xACF050", Offset = "0xACF050", VA = "0xACF050", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xACEF68", Offset = "0xACEF68", VA = "0xACEF68")]
	public static bool getBackToMap(string callingTest = "AutotestGetBackToMap")
	{
		return default(bool);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xACF1B0", Offset = "0xACF1B0", VA = "0xACF1B0")]
	public AutotestGetBackToMap()
	{
	}
}
[Token(Token = "0x20000D1")]
public sealed class AutotestProofBot : IScriptableAutotest
{
	[Serializable]
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761834", Offset = "0x761834")]
	private sealed class <>c
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__11_0;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__11_1;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__12_1;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__12_2;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__14_0;

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xAD1F70", Offset = "0xAD1F70", VA = "0xAD1F70")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xAD1F78", Offset = "0xAD1F78", VA = "0xAD1F78")]
		internal void <setupTest>b__11_0()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xAD2068", Offset = "0xAD2068", VA = "0xAD2068")]
		internal void <setupTest>b__11_1()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xAD2E18", Offset = "0xAD2E18", VA = "0xAD2E18")]
		internal void <setupState>b__12_1()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xAD2E8C", Offset = "0xAD2E8C", VA = "0xAD2E8C")]
		internal void <setupState>b__12_2()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xAD2E94", Offset = "0xAD2E94", VA = "0xAD2E94")]
		internal void <loadPanelLocScreenshotTestForLanguage>b__14_0()
		{
		}
	}

	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761844", Offset = "0x761844")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemLanguage lang;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float indexStart;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xAD1DD8", Offset = "0xAD1DD8", VA = "0xAD1DD8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xAD2F04", Offset = "0xAD2F04", VA = "0xAD2F04")]
		internal void <setupState>b__0()
		{
		}
	}

	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761854", Offset = "0x761854")]
	private sealed class <captureMap>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xAD3054", Offset = "0xAD3054", VA = "0xAD3054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xAD30BC", Offset = "0xAD30BC", VA = "0xAD30BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xAD1E40", Offset = "0xAD1E40", VA = "0xAD1E40")]
		[DebuggerHidden]
		public <captureMap>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xAD2FF4", Offset = "0xAD2FF4", VA = "0xAD2FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xAD2FF8", Offset = "0xAD2FF8", VA = "0xAD2FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xAD305C", Offset = "0xAD305C", VA = "0xAD305C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool testComplete;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string statusString;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float standardDelay;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PanelTestAction> testActions;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int testActionIndex;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xAD1450", Offset = "0xAD1450", VA = "0xAD1450", Slot = "4")]
	public void resetTest()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xAD1784", Offset = "0xAD1784", VA = "0xAD1784")]
	public void addAction(string start, string action, float time, bool optional = false)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xAD1838", Offset = "0xAD1838", VA = "0xAD1838")]
	public void addAction(string start, float time, Action action)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xAD18F8", Offset = "0xAD18F8", VA = "0xAD18F8", Slot = "7")]
	public string testStatus()
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xAD1900", Offset = "0xAD1900", VA = "0xAD1900", Slot = "5")]
	public void processNextStep()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xAD1A30", Offset = "0xAD1A30", VA = "0xAD1A30", Slot = "6")]
	public bool testIsComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xAD14B8", Offset = "0xAD14B8", VA = "0xAD14B8")]
	private void setupTest()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xAD1B68", Offset = "0xAD1B68", VA = "0xAD1B68")]
	private void setupState(SystemLanguage lang, bool keyOnly = false, float indexStart = 1f)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xAD1DE0", Offset = "0xAD1DE0", VA = "0xAD1DE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A2B8", Offset = "0x76A2B8")]
	private IEnumerator captureMap()
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xAD1A38", Offset = "0xAD1A38", VA = "0xAD1A38")]
	private void loadPanelLocScreenshotTestForLanguage(SystemLanguage lang, bool keyOnly = false, float indexStart = 1f)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xAD1E6C", Offset = "0xAD1E6C", VA = "0xAD1E6C")]
	public AutotestProofBot()
	{
	}
}
[Token(Token = "0x20000D2")]
public sealed class AutotestTapSelf : AutotestTask
{
	[Token(Token = "0x6000651")]
	[Address(RVA = "0xAD7A00", Offset = "0xAD7A00", VA = "0xAD7A00", Slot = "5")]
	public override void queueTasks()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xAD7ADC", Offset = "0xAD7ADC", VA = "0xAD7ADC", Slot = "6")]
	public override void fillActionList()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xAD7B98", Offset = "0xAD7B98", VA = "0xAD7B98")]
	public void pickButton()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xAD7BC8", Offset = "0xAD7BC8", VA = "0xAD7BC8")]
	public AutotestTapSelf()
	{
	}
}
[Token(Token = "0x20000D3")]
public abstract class AutotestTargetHolder : MonoBehaviour
{
	[Token(Token = "0x6000655")]
	[Address(RVA = "0x9BB364", Offset = "0x9BB364", VA = "0x9BB364", Slot = "4")]
	public virtual bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	public abstract Vector3 getPosition();

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x9BB36C", Offset = "0x9BB36C", VA = "0x9BB36C")]
	protected AutotestTargetHolder()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D4")]
public sealed class AutotestActionSignature
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string actionKey;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string taskControllerName;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xAC9C10", Offset = "0xAC9C10", VA = "0xAC9C10")]
	public AutotestActionSignature(string key, string name)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xAC9C60", Offset = "0xAC9C60", VA = "0xAC9C60")]
	public string description()
	{
		return null;
	}
}
[Token(Token = "0x20000D5")]
public sealed class AutotestAction
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyToLowered;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action actionToTake;

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xAC97DC", Offset = "0xAC97DC", VA = "0xAC97DC")]
	public AutotestAction(string actionKey, Action theAction)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xAC9850", Offset = "0xAC9850", VA = "0xAC9850")]
	public void performAction()
	{
	}
}
[Token(Token = "0x20000D6")]
public class AutotestTask : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<AutotestAction> actions;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x9BB374", Offset = "0x9BB374", VA = "0x9BB374", Slot = "4")]
	public virtual void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x9BB3F4", Offset = "0x9BB3F4", VA = "0x9BB3F4", Slot = "5")]
	public virtual void queueTasks()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9BB3F8", Offset = "0x9BB3F8", VA = "0x9BB3F8")]
	public List<AutotestAction> actionsAvailable()
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x9BB468", Offset = "0x9BB468", VA = "0x9BB468", Slot = "6")]
	public virtual void fillActionList()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x9BB46C", Offset = "0x9BB46C", VA = "0x9BB46C")]
	public void pressClose()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x9BB4FC", Offset = "0x9BB4FC", VA = "0x9BB4FC")]
	public void pressButton(Button theButton)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x9BB58C", Offset = "0x9BB58C", VA = "0x9BB58C")]
	public void pressButtonWithName(string buttonName)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x9BB618", Offset = "0x9BB618", VA = "0x9BB618")]
	public AutotestTask()
	{
	}
}
[Token(Token = "0x20000D7")]
public sealed class MWebDebug : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ready;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string game;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string user;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string logURL;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static WebDebugLogger webLogger;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x99232C", Offset = "0x99232C", VA = "0x99232C")]
	public static WebDebugLogger getWebLogger()
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x98B6E0", Offset = "0x98B6E0", VA = "0x98B6E0")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x9925B0", Offset = "0x9925B0", VA = "0x9925B0")]
	public static void SetGameName(string gameName)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x992658", Offset = "0x992658", VA = "0x992658")]
	public MWebDebug()
	{
	}
}
[Token(Token = "0x20000D8")]
public sealed class ReplacementDeveloperConsole : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool overrideConsole;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763220", Offset = "0x763220")]
	public GameObject outputParent;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text outputLabel;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x9AFEA4", Offset = "0x9AFEA4", VA = "0x9AFEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x9AFF20", Offset = "0x9AFF20", VA = "0x9AFF20")]
	public ReplacementDeveloperConsole()
	{
	}
}
[Token(Token = "0x20000D9")]
public sealed class StartAutotestButton : MonoBehaviour
{
	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject autoplayerButton;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1602664", Offset = "0x1602664", VA = "0x1602664")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1602724", Offset = "0x1602724", VA = "0x1602724")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x16027A0", Offset = "0x16027A0", VA = "0x16027A0")]
	public StartAutotestButton()
	{
	}
}
[Token(Token = "0x20000DA")]
public sealed class WebDebugLogger : MonoBehaviour
{
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761864", Offset = "0x761864")]
	private sealed class <makeRequest>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string logURL;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string requestJSON;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x1500A88", Offset = "0x1500A88", VA = "0x1500A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x1500AF0", Offset = "0x1500AF0", VA = "0x1500AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x15008E0", Offset = "0x15008E0", VA = "0x15008E0")]
		[DebuggerHidden]
		public <makeRequest>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1500914", Offset = "0x1500914", VA = "0x1500914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1500918", Offset = "0x1500918", VA = "0x1500918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x1500A90", Offset = "0x1500A90", VA = "0x1500A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x150081C", Offset = "0x150081C", VA = "0x150081C")]
	public void sendLog(string logURL, string requestJSON)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1500848", Offset = "0x1500848", VA = "0x1500848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A31C", Offset = "0x76A31C")]
	private IEnumerator makeRequest(string logURL, string requestJSON)
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x150090C", Offset = "0x150090C", VA = "0x150090C")]
	public WebDebugLogger()
	{
	}
}
[Token(Token = "0x20000DB")]
public class DirtyScreenShotTool : MonoBehaviour
{
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761874", Offset = "0x761874")]
	private sealed class <WriteRenderTextureToDisk>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirtyScreenShotTool <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x95A848", Offset = "0x95A848", VA = "0x95A848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x95A8B0", Offset = "0x95A8B0", VA = "0x95A8B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x95A504", Offset = "0x95A504", VA = "0x95A504")]
		[DebuggerHidden]
		public <WriteRenderTextureToDisk>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x95A544", Offset = "0x95A544", VA = "0x95A544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x95A548", Offset = "0x95A548", VA = "0x95A548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x95A850", Offset = "0x95A850", VA = "0x95A850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int screenWidth;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int screenHeight;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D textureWriter;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int count;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x95A398", Offset = "0x95A398", VA = "0x95A398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x95A43C", Offset = "0x95A43C", VA = "0x95A43C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x95A488", Offset = "0x95A488", VA = "0x95A488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A380", Offset = "0x76A380")]
	private IEnumerator WriteRenderTextureToDisk()
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x95A530", Offset = "0x95A530", VA = "0x95A530")]
	public DirtyScreenShotTool()
	{
	}
}
[Token(Token = "0x20000DC")]
public class FrustrumFollower : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera playerCamera;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask playerInputMask;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763258", Offset = "0x763258")]
	public Vector2 viewportPosition;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763290", Offset = "0x763290")]
	public bool randomisePlayspacePosition;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float viewportUnitsRandomRange;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float heightWorldspaceRandomRange;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray raycastRay;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit theHit;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, Vector2> defaultFrustrumPositionMap;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, string> defaultZoneCodeMap;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x9796F4", Offset = "0x9796F4", VA = "0x9796F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x979834", Offset = "0x979834", VA = "0x979834")]
	public Vector3 getNextPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x979A68", Offset = "0x979A68", VA = "0x979A68")]
	private void updateFrustrumPosition()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x979AE0", Offset = "0x979AE0", VA = "0x979AE0")]
	public void updatePositionInPlayspace()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x979B20", Offset = "0x979B20", VA = "0x979B20")]
	public static string closestZone(Vector2 position)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x979D10", Offset = "0x979D10", VA = "0x979D10")]
	public static Vector2 zonePositionForKey(string raw)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x979E54", Offset = "0x979E54", VA = "0x979E54")]
	public static string zonesForZoneCode(string zoneCode)
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x979F3C", Offset = "0x979F3C", VA = "0x979F3C")]
	public FrustrumFollower()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	public const string PlayerUIBulletKey = "Bullets/Shooty2/Shooty2_player_bullet_finger_fake";

	[Token(Token = "0x4000552")]
	public const string PlayerMissileKey = "Bullets/Shooty2/Shooty2_player_saturn_missile";

	[Token(Token = "0x4000553")]
	private const string BulletNoDamageSoundKey = "Game_BulletHitNoDamage";

	[Token(Token = "0x4000554")]
	private const float BulletKillDistance = 8f;

	[Token(Token = "0x4000555")]
	private const float TimeToLiveGlobalMultiplier = 2f;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isExploded;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject geo;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explostionTimeToLive;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxTimeToLive;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float damage;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7632C8", Offset = "0x7632C8")]
	public float moveSpeed;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float speedMultiplierFromGun;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float spinSpeed;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 spinAxis;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float turnDelay;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float turnDuration;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float turnSpeed;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem[] explosionParticles;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomTweakageOfGeometry;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 geoOffsetRandomness;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float geoRotationRandomness;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Collider myCollider;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected bool isMoving;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float timeToLive;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763310", Offset = "0x763310")]
	public TrailRenderer trail;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float trailTime;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763348", Offset = "0x763348")]
	public string bulletFireSoundKey;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string bulletHitSoundKey;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763380", Offset = "0x763380")]
	public bool isTargetingEnemy;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform targetedTransform;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7633B8", Offset = "0x7633B8")]
	public bool tracksTowardsPlayer;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float TrackToPlayerThresholdModifier;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isPlayerBullet;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ModelSwapAnimation swapper;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool shouldTurn;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isCurrentTargetingPlayer;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float countDownToTurn;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float turningCountdown;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool sliceTime;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion targetHeading;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string shooterId;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isFakeBullet;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlaytimeOverseer sharedPlaytimeOverseer;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7633F0", Offset = "0x7633F0")]
	private string <spawnContext>k__BackingField;

	[Token(Token = "0x17000048")]
	public string spawnContext
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x9C6174", Offset = "0x9C6174", VA = "0x9C6174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A3E4", Offset = "0x76A3E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x9C617C", Offset = "0x9C617C", VA = "0x9C617C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A3F4", Offset = "0x76A3F4")]
		private set
		{
		}
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x9C42F4", Offset = "0x9C42F4", VA = "0x9C42F4", Slot = "4")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x9C49A0", Offset = "0x9C49A0", VA = "0x9C49A0", Slot = "5")]
	public virtual void bulletWasCaughtInVacuum()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x9C48D0", Offset = "0x9C48D0", VA = "0x9C48D0")]
	private float calculateTimeToLive()
	{
		return default(float);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x9C49C0", Offset = "0x9C49C0", VA = "0x9C49C0", Slot = "6")]
	public virtual void shootBullet(Vector3 shootPosition, Quaternion shootRotation, bool isPlayerBullet, string shooterId, bool isFakeBullet = false)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x9C4EA4", Offset = "0x9C4EA4", VA = "0x9C4EA4", Slot = "7")]
	public virtual void explode(GameObject hitObject, bool playSound = true)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x9C4824", Offset = "0x9C4824", VA = "0x9C4824")]
	private void resetExplosionParticles()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x9C5368", Offset = "0x9C5368", VA = "0x9C5368")]
	public void cull()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000686")]
	[Address(RVA = "0x9C5370", Offset = "0x9C5370", VA = "0x9C5370")]
	protected void cleanUp()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x9C5444", Offset = "0x9C5444", VA = "0x9C5444")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x9C4C00", Offset = "0x9C4C00", VA = "0x9C4C00")]
	private void setDirection(Vector3 directionPosition, Quaternion directionRotation)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x9C56EC", Offset = "0x9C56EC", VA = "0x9C56EC")]
	public void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600068A")]
	[Address(RVA = "0x9C5940", Offset = "0x9C5940", VA = "0x9C5940")]
	private void lookAtTarget()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600068B")]
	[Address(RVA = "0x9C5B34", Offset = "0x9C5B34", VA = "0x9C5B34")]
	private void rotateTowardsTarget(Vector3 theTargetPosition)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600068C")]
	[Address(RVA = "0x9C5D58", Offset = "0x9C5D58", VA = "0x9C5D58", Slot = "8")]
	public virtual void updatePosition()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600068D")]
	[Address(RVA = "0x9C5E50", Offset = "0x9C5E50", VA = "0x9C5E50")]
	private void updateTurn()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600068E")]
	[Address(RVA = "0x9C605C", Offset = "0x9C605C", VA = "0x9C605C")]
	private void spin()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x9C4E14", Offset = "0x9C4E14", VA = "0x9C4E14")]
	public void bulletDidShoot()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x9C618C", Offset = "0x9C618C", VA = "0x9C618C")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x9C619C", Offset = "0x9C619C", VA = "0x9C619C")]
	public void printExtraInformationForPlayerKiller()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x9C6278", Offset = "0x9C6278", VA = "0x9C6278")]
	public Bullet()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x9C6334", Offset = "0x9C6334", VA = "0x9C6334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A404", Offset = "0x76A404")]
	private void <shootBullet>b__46_0()
	{
	}
}
[Token(Token = "0x20000DE")]
public class BulletMover : MonoBehaviour
{
	[Token(Token = "0x6000696")]
	[Address(RVA = "0x9C6358", Offset = "0x9C6358", VA = "0x9C6358")]
	public BulletMover()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ChainsawCollisionDelegator : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OffhandChainsaw chainsaw;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x9C73D4", Offset = "0x9C73D4", VA = "0x9C73D4")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x9C749C", Offset = "0x9C749C", VA = "0x9C749C")]
	public ChainsawCollisionDelegator()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ColliderEventDelegator : MonoBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerController thePlayer;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x9CAB68", Offset = "0x9CAB68", VA = "0x9CAB68")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x9CAD18", Offset = "0x9CAD18", VA = "0x9CAD18")]
	public ColliderEventDelegator()
	{
	}
}
[Token(Token = "0x20000E1")]
public class CopilotPowerupCrate : Powerup
{
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761884", Offset = "0x761884")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate <>4__this;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToFlyToEnding;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 start;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 end;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endPosition;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EnemyBossHeadDeathAnimation deathAnimation;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__1;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__2;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x9D1044", Offset = "0x9D1044", VA = "0x9D1044")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x9D1500", Offset = "0x9D1500", VA = "0x9D1500")]
		internal void <moveToEndPositionAndCleanup>b__0()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x9D1688", Offset = "0x9D1688", VA = "0x9D1688")]
		internal void <moveToEndPositionAndCleanup>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x9D1764", Offset = "0x9D1764", VA = "0x9D1764")]
		internal void <moveToEndPositionAndCleanup>b__2()
		{
		}
	}

	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761894", Offset = "0x761894")]
	private sealed class <firingLoop>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CopilotPowerupCrate <>4__this;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GunFiringEffects[] <currentGuns>5__2;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <bulletKey>5__3;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <gunFireTransformIndex>5__4;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <bulletWait>5__5;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x9D1AD0", Offset = "0x9D1AD0", VA = "0x9D1AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x9D1B38", Offset = "0x9D1B38", VA = "0x9D1B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x9D104C", Offset = "0x9D104C", VA = "0x9D104C")]
		[DebuggerHidden]
		public <firingLoop>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x9D184C", Offset = "0x9D184C", VA = "0x9D184C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x9D1850", Offset = "0x9D1850", VA = "0x9D1850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x9D1AD8", Offset = "0x9D1AD8", VA = "0x9D1AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763400", Offset = "0x763400")]
	public PlayerGeo playerGeo;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763438", Offset = "0x763438")]
	public float moveToSpeed;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToReachMoveSpeed;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve moveSpeedCurve;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BBFloaty floaty;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763470", Offset = "0x763470")]
	public GameObject encasingBubble;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject flyInTrail;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7634A8", Offset = "0x7634A8")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float scaleTime;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7634E0", Offset = "0x7634E0")]
	public float timeToFlyToEnding;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve endingFlyCurve;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string assignedPilotId;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool canBeGrabbed;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float bulletsPerSecond;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 lookAtPosition;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine firingCoroutine;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x9D0628", Offset = "0x9D0628", VA = "0x9D0628")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x9D078C", Offset = "0x9D078C", VA = "0x9D078C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x9D0914", Offset = "0x9D0914", VA = "0x9D0914")]
	private void Update()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x9D0AE8", Offset = "0x9D0AE8", VA = "0x9D0AE8")]
	private void updateLookAtPosition(object note)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x9D0B98", Offset = "0x9D0B98", VA = "0x9D0B98", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x9D0BE0", Offset = "0x9D0BE0", VA = "0x9D0BE0", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x9D0D70", Offset = "0x9D0D70", VA = "0x9D0D70")]
	public void reachedStopPosition()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x9D0D90", Offset = "0x9D0D90", VA = "0x9D0D90")]
	public void startFiring()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x9D0E64", Offset = "0x9D0E64", VA = "0x9D0E64")]
	public void trapInBubble()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x9D0FB8", Offset = "0x9D0FB8", VA = "0x9D0FB8")]
	public void stopFiring()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x9D096C", Offset = "0x9D096C", VA = "0x9D096C")]
	public void moveToEndPositionAndCleanup(Vector3 endPosition, float delay, float timeToFlyToEnding, EnemyBossHeadDeathAnimation deathAnimation)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x9D0DE8", Offset = "0x9D0DE8", VA = "0x9D0DE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A414", Offset = "0x76A414")]
	private IEnumerator firingLoop()
	{
		return null;
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x9D1078", Offset = "0x9D1078", VA = "0x9D1078")]
	private void shootFakeBullet(GunFiringEffects[] currentGuns, string bulletKey, int gunFireTransformIndex)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x9D0888", Offset = "0x9D0888", VA = "0x9D0888")]
	private string getGunLoopId()
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x9D1178", Offset = "0x9D1178", VA = "0x9D1178")]
	public void moveToPlayer()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x9D125C", Offset = "0x9D125C", VA = "0x9D125C", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x9D130C", Offset = "0x9D130C", VA = "0x9D130C")]
	public CopilotPowerupCrate()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x9D132C", Offset = "0x9D132C", VA = "0x9D132C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A478", Offset = "0x76A478")]
	private void <trapInBubble>b__24_0(float scaleAlpha)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x9D13D4", Offset = "0x9D13D4", VA = "0x9D13D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A488", Offset = "0x76A488")]
	private void <trapInBubble>b__24_1()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9D1464", Offset = "0x9D1464", VA = "0x9D1464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A498", Offset = "0x76A498")]
	private void <moveToPlayer>b__30_0(float alpha)
	{
	}
}
[Token(Token = "0x20000E2")]
public sealed class DragInput : SingletonMono<DragInput>, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doLookForInput;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool dragEnded;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float dragEndedTime;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform collectorRect;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Graphic collectorImage;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera myCam;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Vector2> dragDidBeginAtViewportAction;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<Vector2> dragAtViewportAction;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action dragDidEndAction;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 maxViewportPos;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 minViewportPos;

	[Token(Token = "0x17000049")]
	public static bool isDragging
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x95AA50", Offset = "0x95AA50", VA = "0x95AA50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x95AAD0", Offset = "0x95AAD0", VA = "0x95AAD0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x95ABC8", Offset = "0x95ABC8", VA = "0x95ABC8")]
	public static void tryEnableDragInput(bool isEnabled)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x95AB4C", Offset = "0x95AB4C", VA = "0x95AB4C")]
	private void enableDragInput(bool isEnabled)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x95AC44", Offset = "0x95AC44", VA = "0x95AC44", Slot = "10")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x95AD88", Offset = "0x95AD88", VA = "0x95AD88", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x95AE1C", Offset = "0x95AE1C", VA = "0x95AE1C", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x95AF54", Offset = "0x95AF54", VA = "0x95AF54", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x95AF88", Offset = "0x95AF88", VA = "0x95AF88", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x95AF8C", Offset = "0x95AF8C", VA = "0x95AF8C")]
	public bool needsToBeginDrag()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x95ACD8", Offset = "0x95ACD8", VA = "0x95ACD8")]
	public void beginDragAtPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x95AEB0", Offset = "0x95AEB0", VA = "0x95AEB0")]
	public void dragAtPosition(Vector3 position)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x95AF94", Offset = "0x95AF94", VA = "0x95AF94")]
	private Vector2 screenToViewport(Vector3 pos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x95AF58", Offset = "0x95AF58", VA = "0x95AF58")]
	public void dragDidEnd()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x95B078", Offset = "0x95B078", VA = "0x95B078")]
	public DragInput()
	{
	}
}
[Token(Token = "0x20000E3")]
public class GenericDamagingCollisionDelegator : MonoBehaviour
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damageToApply;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string damageId;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action hitCallback;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x982900", Offset = "0x982900", VA = "0x982900")]
	public void setupDamageConfiguration(string damageId, Action hitCallback)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x982934", Offset = "0x982934", VA = "0x982934")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x982ACC", Offset = "0x982ACC", VA = "0x982ACC")]
	public GenericDamagingCollisionDelegator()
	{
	}
}
[Token(Token = "0x20000E4")]
public class GunFiringEffects : MonoBehaviour
{
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618A4", Offset = "0x7618A4")]
	private sealed class <deactivateOnEnd>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GunFiringEffects <>4__this;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x8FC52C", Offset = "0x8FC52C", VA = "0x8FC52C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x8FC594", Offset = "0x8FC594", VA = "0x8FC594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x8FC350", Offset = "0x8FC350", VA = "0x8FC350")]
		[DebuggerHidden]
		public <deactivateOnEnd>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x8FC404", Offset = "0x8FC404", VA = "0x8FC404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x8FC408", Offset = "0x8FC408", VA = "0x8FC408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x8FC534", Offset = "0x8FC534", VA = "0x8FC534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763518", Offset = "0x763518")]
	public string muzzleSystemName;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float muzzleSystemOffsetZ;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem muzzleSystem;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool waitingToStop;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x8FBCC8", Offset = "0x8FBCC8", VA = "0x8FBCC8")]
	public void lookAtPoint(Vector3 endPoint)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x8FBD14", Offset = "0x8FBD14", VA = "0x8FBD14")]
	public void launchBullet(float firingOffset, string bulletKey, string damageId)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x8FBEC0", Offset = "0x8FBEC0", VA = "0x8FBEC0")]
	public void fireMuzzles()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x8FC1D4", Offset = "0x8FC1D4", VA = "0x8FC1D4")]
	public void resetMuzzleSystem()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x8FC2B8", Offset = "0x8FC2B8", VA = "0x8FC2B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A4A8", Offset = "0x76A4A8")]
	private IEnumerator deactivateOnEnd(ParticleSystem particleSystem)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x8FBF74", Offset = "0x8FBF74", VA = "0x8FBF74")]
	public void spawnMuzzleSystem()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x8FC37C", Offset = "0x8FC37C", VA = "0x8FC37C")]
	public static string muzzleSystemPath(string muzzleSystemName)
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x8FC3F0", Offset = "0x8FC3F0", VA = "0x8FC3F0")]
	public GunFiringEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public struct GunLevelAssignment
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int level;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GunFiringEffects[] gunFireTransforms;
}
[Token(Token = "0x20000E6")]
public class GunFiringSetup : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763550", Offset = "0x763550")]
	public List<GunLevelAssignment> gunSetups;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x8FC59C", Offset = "0x8FC59C", VA = "0x8FC59C")]
	public GunFiringEffects[] getGunsForLevel(int gunLevel)
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x8FC674", Offset = "0x8FC674", VA = "0x8FC674")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x8FC6FC", Offset = "0x8FC6FC", VA = "0x8FC6FC")]
	private void DrawGunPositions(Color color, int index, float scale)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x8FC87C", Offset = "0x8FC87C", VA = "0x8FC87C")]
	public GunFiringSetup()
	{
	}
}
[Token(Token = "0x20000E7")]
public interface IDamageable
{
	[Token(Token = "0x60006CD")]
	bool isAlive();

	[Token(Token = "0x60006CE")]
	bool isDamageable();

	[Token(Token = "0x60006CF")]
	void takeDamage(float damageAmount, string damageSource);
}
[Token(Token = "0x20000E8")]
public interface IRaycastable
{
	[Token(Token = "0x60006D0")]
	bool canBeHit();

	[Token(Token = "0x60006D1")]
	void raycastHit(Vector3 hitpoint);
}
[Token(Token = "0x20000E9")]
public class LobBullet : Bullet
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763588", Offset = "0x763588")]
	public bool isVerticalLob;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float lobOffset;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float duration;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector3 initialGeoRotation;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7635C0", Offset = "0x7635C0")]
	public bool doExplode;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Collider explosionCollider;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float setDuration;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Coroutine lobRoutine;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 currentEndPoint;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 currentStartPoint;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x989248", Offset = "0x989248", VA = "0x989248", Slot = "4")]
	public override void reset()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x98936C", Offset = "0x98936C", VA = "0x98936C", Slot = "6")]
	public override void shootBullet(Vector3 shootPosition, Quaternion shootRotation, bool isPlayerBullet, string shooterId, bool isFakeBullet = false)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x9896D4", Offset = "0x9896D4", VA = "0x9896D4", Slot = "8")]
	public override void updatePosition()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x9896D8", Offset = "0x9896D8", VA = "0x9896D8", Slot = "5")]
	public override void bulletWasCaughtInVacuum()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x98954C", Offset = "0x98954C", VA = "0x98954C")]
	private void lobToPosition(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x98972C", Offset = "0x98972C", VA = "0x98972C")]
	private void updatePosition(float lobAlpha)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x989890", Offset = "0x989890", VA = "0x989890")]
	private float getArcOffset(float alpha)
	{
		return default(float);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x9898D8", Offset = "0x9898D8", VA = "0x9898D8", Slot = "7")]
	public override void explode(GameObject hitObject, bool playSound = true)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x9898B8", Offset = "0x9898B8", VA = "0x9898B8")]
	private bool isHorizontalFlipped()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x989E08", Offset = "0x989E08", VA = "0x989E08")]
	public LobBullet()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x989E2C", Offset = "0x989E2C", VA = "0x989E2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A50C", Offset = "0x76A50C")]
	private void <lobToPosition>b__14_0(float lerpValue)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x989E30", Offset = "0x989E30", VA = "0x989E30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A51C", Offset = "0x76A51C")]
	private void <lobToPosition>b__14_1()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x989E68", Offset = "0x989E68", VA = "0x989E68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A52C", Offset = "0x76A52C")]
	private void <explode>b__17_0()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Pilot : MonoBehaviour
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7635F8", Offset = "0x7635F8")]
	public Material defaultMaterial;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA21640", Offset = "0xA21640", VA = "0xA21640")]
	public Pilot()
	{
	}
}
[Token(Token = "0x20000EB")]
public class PilotSelectionCollider : MonoBehaviour, IDamageable, IRaycastable
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PilotShelfElement shelfElement;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentHitCount;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetTime;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bootstrapped;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float hoverResetTime;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 baseScale;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x160FE0C", Offset = "0x160FE0C", VA = "0x160FE0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x160FE6C", Offset = "0x160FE6C", VA = "0x160FE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1610004", Offset = "0x1610004", VA = "0x1610004", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x161000C", Offset = "0x161000C", VA = "0x161000C", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x16100E4", Offset = "0x16100E4", VA = "0x16100E4", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x160FE64", Offset = "0x160FE64", VA = "0x160FE64")]
	private void resetHitCount()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1610010", Offset = "0x1610010", VA = "0x1610010", Slot = "7")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x16102C8", Offset = "0x16102C8", VA = "0x16102C8", Slot = "8")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x16105F4", Offset = "0x16105F4", VA = "0x16105F4")]
	public PilotSelectionCollider()
	{
	}
}
[Token(Token = "0x20000EC")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618B4", Offset = "0x7618B4")]
	private sealed class <chargeAttack>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerController <>4__this;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x1618A5C", Offset = "0x1618A5C", VA = "0x1618A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x1618AC4", Offset = "0x1618AC4", VA = "0x1618AC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1615E24", Offset = "0x1615E24", VA = "0x1615E24")]
		[DebuggerHidden]
		public <chargeAttack>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x1618778", Offset = "0x1618778", VA = "0x1618778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x161877C", Offset = "0x161877C", VA = "0x161877C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x1618A64", Offset = "0x1618A64", VA = "0x1618A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618C4", Offset = "0x7618C4")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MightyVRControlSide controller;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x1616C44", Offset = "0x1616C44", VA = "0x1616C44")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x16186F8", Offset = "0x16186F8", VA = "0x16186F8")]
		internal void <vibrateController>b__0()
		{
		}
	}

	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618D4", Offset = "0x7618D4")]
	private sealed class <>c__DisplayClass101_0
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float slowTimeScale;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerController <>4__this;

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x16178A4", Offset = "0x16178A4", VA = "0x16178A4")]
		public <>c__DisplayClass101_0()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x1618290", Offset = "0x1618290", VA = "0x1618290")]
		internal void <playerDied>b__0()
		{
		}
	}

	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618E4", Offset = "0x7618E4")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerController <>4__this;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDeath;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x16178AC", Offset = "0x16178AC", VA = "0x16178AC")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1618334", Offset = "0x1618334", VA = "0x1618334")]
		internal void <playerHitKnockBack>b__0()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1618494", Offset = "0x1618494", VA = "0x1618494")]
		internal void <playerHitKnockBack>b__1()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7618F4", Offset = "0x7618F4")]
	private sealed class <>c__DisplayClass103_0
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float newTimeScale;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x16178B4", Offset = "0x16178B4", VA = "0x16178B4")]
		public <>c__DisplayClass103_0()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1618670", Offset = "0x1618670", VA = "0x1618670")]
		internal void <animateTimeSlowdown>b__0(float alpha)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761904", Offset = "0x761904")]
	private sealed class <>c
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__103_1;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__104_0;

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x161805C", Offset = "0x161805C", VA = "0x161805C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x1618064", Offset = "0x1618064", VA = "0x1618064")]
		internal void <animateTimeSlowdown>b__103_1()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x16180EC", Offset = "0x16180EC", VA = "0x16180EC")]
		internal void <playerDeathAnimationComplete>b__104_0()
		{
		}
	}

	[Token(Token = "0x40005B5")]
	private const string FireGunLoopId = "GunLoop";

	[Token(Token = "0x40005B6")]
	private const string ChargeShotLoopId = "ChargeLoop";

	[Token(Token = "0x40005B7")]
	private const string CalloutPopupId = "GrabCallout";

	[Token(Token = "0x40005B8")]
	private const string GunUpgradeCalloutPopupId = "GunUpgrade";

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int gunLevel;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int chargeAttackLevel;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763650", Offset = "0x763650")]
	public GameObject geo;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject collision;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763688", Offset = "0x763688")]
	public float grabAttachSpeed;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7636C0", Offset = "0x7636C0")]
	public PlayerHitscanGun hitScanGun;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform missilesFirePoint;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float bulletsPerSecondGameplay;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float bulletsPerSecondUI;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7636F8", Offset = "0x7636F8")]
	public float noHitTime;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float flashDuration;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve flashAmountCurve;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve timeScaleCurve;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SimpleModelFlash flashControl;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float knockbackDuration;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int knockbackFloatySpeed;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int knockbackFloatyMagnitude;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763730", Offset = "0x763730")]
	public BBFloaty floaty;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float deathHeadAnimDuration;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763768", Offset = "0x763768")]
	public ParticleSystem chargeMaxParticles;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem playerHitVFX;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ShootyVRHandController currentPlayerHolder;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<ShootyVRHandController> allHands;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MightyVRControlSide previousSide;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem spawnInEffect;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PlayerGeo playerGeometry;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float chargeStartTime;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float gunCountdown;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSourceController chargeStart;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine chargeLoopCoroutine;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int basePlayerHealth;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int hitsBeforeDeath;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float noHitCooldownEndTime;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7637A0", Offset = "0x7637A0")]
	private int <bulletsFiredThisLife>k__BackingField;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7637B0", Offset = "0x7637B0")]
	private int <saturnMissilesFiredThisLife>k__BackingField;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isCharging;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool previousIsFiring;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	private bool canBeDamaged;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	private bool wasRecentlyGrabbed;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameMode currentMode;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine flavourSoundLoop;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7637C0", Offset = "0x7637C0")]
	private bool <isAlive>k__BackingField;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7637D0", Offset = "0x7637D0")]
	private bool <isAutofireOnAimEnabled>k__BackingField;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7637E0", Offset = "0x7637E0")]
	private bool <isAimingLaserEnabled>k__BackingField;

	[Token(Token = "0x1700004A")]
	public int bulletsFiredThisLife
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1612C98", Offset = "0x1612C98", VA = "0x1612C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A53C", Offset = "0x76A53C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1612CA0", Offset = "0x1612CA0", VA = "0x1612CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A54C", Offset = "0x76A54C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int saturnMissilesFiredThisLife
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1612CA8", Offset = "0x1612CA8", VA = "0x1612CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A55C", Offset = "0x76A55C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1612CB0", Offset = "0x1612CB0", VA = "0x1612CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A56C", Offset = "0x76A56C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool isAlive
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1612CB8", Offset = "0x1612CB8", VA = "0x1612CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A57C", Offset = "0x76A57C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1612CC0", Offset = "0x1612CC0", VA = "0x1612CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A58C", Offset = "0x76A58C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool isPlayerBeingHeld
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1612CCC", Offset = "0x1612CCC", VA = "0x1612CCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public bool isAutofireOnAimEnabled
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1612D3C", Offset = "0x1612D3C", VA = "0x1612D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A59C", Offset = "0x76A59C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1612D44", Offset = "0x1612D44", VA = "0x1612D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5AC", Offset = "0x76A5AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public bool isAimingLaserEnabled
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1612D50", Offset = "0x1612D50", VA = "0x1612D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5BC", Offset = "0x76A5BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1612D58", Offset = "0x1612D58", VA = "0x1612D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5CC", Offset = "0x76A5CC")]
		private set
		{
		}
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1612D64", Offset = "0x1612D64", VA = "0x1612D64")]
	public void startLevel(int playerHealth, GameMode currentMode)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1613888", Offset = "0x1613888", VA = "0x1613888")]
	public void pilotWasSelected(string pilotId)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1613B8C", Offset = "0x1613B8C", VA = "0x1613B8C")]
	public void pilotRespawn(bool playEffects)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1613010", Offset = "0x1613010", VA = "0x1613010")]
	private void resetPlayerState(bool showGeo = true)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x16145A4", Offset = "0x16145A4", VA = "0x16145A4")]
	private void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1614A10", Offset = "0x1614A10", VA = "0x1614A10")]
	private void updateFiringStates()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1614FDC", Offset = "0x1614FDC", VA = "0x1614FDC")]
	private bool isChargeButtonDown(MightyVRControlSide activeSide)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x16152A4", Offset = "0x16152A4", VA = "0x16152A4")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1613EC0", Offset = "0x1613EC0", VA = "0x1613EC0")]
	private void playSpawnEffect()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x16154A8", Offset = "0x16154A8", VA = "0x16154A8")]
	public void goToGameSuccess()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1615590", Offset = "0x1615590", VA = "0x1615590")]
	public Vector3 currentPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x161446C", Offset = "0x161446C", VA = "0x161446C")]
	private void updateShootInputState(bool isDown, bool isPlayingLevel = false)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x16157A8", Offset = "0x16157A8", VA = "0x16157A8")]
	public void gunWasUpgraded()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1615714", Offset = "0x1615714", VA = "0x1615714")]
	private string machineGunSoundLoopKey()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1615D98", Offset = "0x1615D98", VA = "0x1615D98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A5DC", Offset = "0x76A5DC")]
	private IEnumerator chargeAttack(int count)
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x16150EC", Offset = "0x16150EC", VA = "0x16150EC")]
	private void startCharge()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1615E50", Offset = "0x1615E50", VA = "0x1615E50")]
	private void resetChargeSoundsState()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x16141A8", Offset = "0x16141A8", VA = "0x16141A8")]
	private void endCharge()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1615F44", Offset = "0x1615F44", VA = "0x1615F44")]
	public float currentChargeDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1614034", Offset = "0x1614034", VA = "0x1614034")]
	public void grabPlayerWithLastHand()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1615F80", Offset = "0x1615F80", VA = "0x1615F80")]
	public void grabPlayer(ShootyVRHandController newHolder, bool instantJump = true)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1616420", Offset = "0x1616420", VA = "0x1616420")]
	private void releaseGripOnPlayer()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x16165B8", Offset = "0x16165B8", VA = "0x16165B8")]
	public bool isCurrentMainHand(MightyVRControlSide controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1616600", Offset = "0x1616600", VA = "0x1616600")]
	public bool isCurrentOffhand(MightyVRControlSide controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1616648", Offset = "0x1616648", VA = "0x1616648")]
	public Vector3 currentOffHandPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1616794", Offset = "0x1616794", VA = "0x1616794")]
	public void registerHandController(ShootyVRHandController handController)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x16168DC", Offset = "0x16168DC", VA = "0x16168DC")]
	public Transform getMessageAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1615C74", Offset = "0x1615C74", VA = "0x1615C74")]
	public void vibrateHoldingHand(float duration = 2f, float strengthMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1616AE0", Offset = "0x1616AE0", VA = "0x1616AE0")]
	public void vibrateOffHand(float duration = 2f, float strengthMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x161697C", Offset = "0x161697C", VA = "0x161697C")]
	private void vibrateController(float duration, float strengthMultiplier, MightyVRControlSide controller)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1616C4C", Offset = "0x1616C4C", VA = "0x1616C4C")]
	public MightyVRControlSide getActiveSide()
	{
		return default(MightyVRControlSide);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1616CDC", Offset = "0x1616CDC", VA = "0x1616CDC")]
	public void hitByBullet(Bullet theBullet)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x16174B8", Offset = "0x16174B8", VA = "0x16174B8")]
	public void hitByEnemyPlane(EnemyCollider enemyCollider)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1617544", Offset = "0x1617544", VA = "0x1617544")]
	public void hitByLandmine(Landmine landmine)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1616DD8", Offset = "0x1616DD8", VA = "0x1616DD8")]
	private void playerReceivedHit()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1617270", Offset = "0x1617270", VA = "0x1617270")]
	private void playerHealthLoss()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1616ED4", Offset = "0x1616ED4", VA = "0x1616ED4")]
	private void playerDied()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1617728", Offset = "0x1617728", VA = "0x1617728")]
	private void playerHitKnockBack(bool isDeath)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x16175C0", Offset = "0x16175C0", VA = "0x16175C0")]
	private void animateTimeSlowdown(float newTimeScale, float duration)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x16178BC", Offset = "0x16178BC", VA = "0x16178BC")]
	private void playerDeathAnimationComplete()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1613164", Offset = "0x1613164", VA = "0x1613164")]
	private void pilotFlavourSoundLoop()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1616DA8", Offset = "0x1616DA8", VA = "0x1616DA8")]
	private bool isPastHitCooldown()
	{
		return default(bool);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1614900", Offset = "0x1614900", VA = "0x1614900")]
	private void updateDebugState()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1613714", Offset = "0x1613714", VA = "0x1613714")]
	private void showDebugGodModeMessage()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1617A04", Offset = "0x1617A04", VA = "0x1617A04")]
	public bool isGodModeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1617A14", Offset = "0x1617A14", VA = "0x1617A14")]
	public PlayerController()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1617A7C", Offset = "0x1617A7C", VA = "0x1617A7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A640", Offset = "0x76A640")]
	private void <pilotRespawn>b__67_0()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1617A9C", Offset = "0x1617A9C", VA = "0x1617A9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A650", Offset = "0x76A650")]
	private void <startCharge>b__80_0()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1617B50", Offset = "0x1617B50", VA = "0x1617B50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A660", Offset = "0x76A660")]
	private bool <grabPlayerWithLastHand>b__84_0()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1617BAC", Offset = "0x1617BAC", VA = "0x1617BAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A670", Offset = "0x76A670")]
	private void <grabPlayerWithLastHand>b__84_1()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1617D10", Offset = "0x1617D10", VA = "0x1617D10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A680", Offset = "0x76A680")]
	private void <grabPlayer>b__85_0()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1617D18", Offset = "0x1617D18", VA = "0x1617D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A690", Offset = "0x76A690")]
	private void <playerHealthLoss>b__100_0()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1617DA0", Offset = "0x1617DA0", VA = "0x1617DA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6A0", Offset = "0x76A6A0")]
	private void <playerHealthLoss>b__100_1(float alpha)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1617F08", Offset = "0x1617F08", VA = "0x1617F08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6B0", Offset = "0x76A6B0")]
	private void <playerHealthLoss>b__100_2()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1617FBC", Offset = "0x1617FBC", VA = "0x1617FBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6C0", Offset = "0x76A6C0")]
	private void <pilotFlavourSoundLoop>b__105_0()
	{
	}
}
[Token(Token = "0x20000ED")]
public class PlayerGeo : MonoBehaviour
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761914", Offset = "0x761914")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1619734", Offset = "0x1619734", VA = "0x1619734")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x161A0D8", Offset = "0x161A0D8", VA = "0x161A0D8")]
		internal void <spinPilot>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x161A190", Offset = "0x161A190", VA = "0x161A190")]
		internal void <spinPilot>b__1()
		{
		}
	}

	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761924", Offset = "0x761924")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x161973C", Offset = "0x161973C", VA = "0x161973C")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x161A214", Offset = "0x161A214", VA = "0x161A214")]
		internal void <playerDeathAnimations>b__0()
		{
		}
	}

	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761934", Offset = "0x761934")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider[] colliders;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minDistance;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxDistance;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<float> <>9__2;

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x1619928", Offset = "0x1619928", VA = "0x1619928")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x161A238", Offset = "0x161A238", VA = "0x161A238")]
		internal void <playerDeathExplosion>b__0()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x161A258", Offset = "0x161A258", VA = "0x161A258")]
		internal void <playerDeathExplosion>b__1()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x161A318", Offset = "0x161A318", VA = "0x161A318")]
		internal void <playerDeathExplosion>b__2(float alpha)
		{
		}
	}

	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761944", Offset = "0x761944")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startRot;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion endRot;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 smokeStartOffset;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action completion;

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x1619C18", Offset = "0x1619C18", VA = "0x1619C18")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x161A5C8", Offset = "0x161A5C8", VA = "0x161A5C8")]
		internal void <playerDeathHeadAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x161A754", Offset = "0x161A754", VA = "0x161A754")]
		internal void <playerDeathHeadAnimation>b__1()
		{
		}
	}

	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761954", Offset = "0x761954")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerGeo <>4__this;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 startPos;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 endPos;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion startRot;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion endRot;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action completion;

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1619F90", Offset = "0x1619F90", VA = "0x1619F90")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x161A898", Offset = "0x161A898", VA = "0x161A898")]
		internal void <playerDeathHeadAnimation>b__0()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x161A8B8", Offset = "0x161A8B8", VA = "0x161A8B8")]
		internal void <playerDeathHeadAnimation>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x161AA44", Offset = "0x161AA44", VA = "0x161AA44")]
		internal void <playerDeathHeadAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string PlayerExplosionKey;

	[Token(Token = "0x40005E6")]
	private const float PilotScaleFactor = 1.5f;

	[Token(Token = "0x40005E7")]
	private const float ShipScaleFactor = 3f;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGameplayGeo;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7637F0", Offset = "0x7637F0")]
	public Transform shipMount;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pilotMount;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763828", Offset = "0x763828")]
	public AnimationCurve preGameRotationCurve;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763860", Offset = "0x763860")]
	public ParticleSystem pilotSmokeTrail;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763898", Offset = "0x763898")]
	public LayerMask deathExplosionLayers;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float explosionDelay;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float explosionMoveOutTime;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7638D0", Offset = "0x7638D0")]
	private string <assignedPilotId>k__BackingField;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7638E0", Offset = "0x7638E0")]
	private MeshRenderer[] <shipRenderers>k__BackingField;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7638F0", Offset = "0x7638F0")]
	private MeshRenderer[] <pilotRenderers>k__BackingField;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x763900", Offset = "0x763900")]
	private string <bulletPrefabKey>k__BackingField;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Pilot pilotObject;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Ship shipObject;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HoverOutline hoverOutline;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hasBooted;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool isAlive;

	[Token(Token = "0x17000050")]
	public string assignedPilotId
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1618ACC", Offset = "0x1618ACC", VA = "0x1618ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6D0", Offset = "0x76A6D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x1618AD4", Offset = "0x1618AD4", VA = "0x1618AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6E0", Offset = "0x76A6E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public MeshRenderer[] shipRenderers
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1618ADC", Offset = "0x1618ADC", VA = "0x1618ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A6F0", Offset = "0x76A6F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1618AE4", Offset = "0x1618AE4", VA = "0x1618AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A700", Offset = "0x76A700")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public MeshRenderer[] pilotRenderers
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1618AEC", Offset = "0x1618AEC", VA = "0x1618AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A710", Offset = "0x76A710")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1618AF4", Offset = "0x1618AF4", VA = "0x1618AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A720", Offset = "0x76A720")]
		private set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public string bulletPrefabKey
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1618AFC", Offset = "0x1618AFC", VA = "0x1618AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A730", Offset = "0x76A730")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1618B04", Offset = "0x1618B04", VA = "0x1618B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A740", Offset = "0x76A740")]
		private set
		{
		}
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1613D80", Offset = "0x1613D80", VA = "0x1613D80")]
	public void playerGeoRespawn()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1618B0C", Offset = "0x1618B0C", VA = "0x1618B0C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x160FC00", Offset = "0x160FC00", VA = "0x160FC00")]
	public void loadPilotAndShip(string pilotId, bool save = true)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x161901C", Offset = "0x161901C", VA = "0x161901C")]
	private void setupHoverOutline()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x16164E8", Offset = "0x16164E8", VA = "0x16164E8")]
	public void updateOutline(float size, bool moveOverTime)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x16191F8", Offset = "0x16191F8", VA = "0x16191F8")]
	public void updateEnginePitch(float distanceMoved)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x161937C", Offset = "0x161937C", VA = "0x161937C")]
	public bool isAssignedPlayersPilot()
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x160FD44", Offset = "0x160FD44", VA = "0x160FD44")]
	public bool isAssignedPilotLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1619404", Offset = "0x1619404", VA = "0x1619404")]
	public bool isAssignedPilotHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1618BCC", Offset = "0x1618BCC", VA = "0x1618BCC")]
	private void loadPilotObject(string pilotKey)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1618DB0", Offset = "0x1618DB0", VA = "0x1618DB0")]
	private void loadShipObject(string shipKey)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1613964", Offset = "0x1613964", VA = "0x1613964")]
	public void playFlavourSound()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x16140EC", Offset = "0x16140EC", VA = "0x16140EC")]
	public void playAppearSound()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1619678", Offset = "0x1619678", VA = "0x1619678")]
	public void playDeathSound()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1618BAC", Offset = "0x1618BAC", VA = "0x1618BAC")]
	public void startEngines(bool force = false)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1619588", Offset = "0x1619588", VA = "0x1619588")]
	public void stopEngines()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1615A10", Offset = "0x1615A10", VA = "0x1615A10")]
	public void spinPilot(float duration, float speed)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1618530", Offset = "0x1618530", VA = "0x1618530")]
	public void playerDeathAnimations(Action completion, float duration)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1619744", Offset = "0x1619744", VA = "0x1619744")]
	private void playerDeathExplosion()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1619930", Offset = "0x1619930", VA = "0x1619930")]
	private void playerDeathHeadAnimation(Action completion, float duration)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1619C20", Offset = "0x1619C20", VA = "0x1619C20")]
	public void playerDeathHeadAnimation(float duration, Action completion)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x160FDD0", Offset = "0x160FDD0", VA = "0x160FDD0")]
	public void setNewMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x160FDD8", Offset = "0x160FDD8", VA = "0x160FDD8")]
	public void setMaterialDefaults()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x161A060", Offset = "0x161A060", VA = "0x161A060")]
	public Ship assignedShip()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x16194B4", Offset = "0x16194B4", VA = "0x16194B4")]
	private void setDefaultPilotMaterials()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x16195A4", Offset = "0x16195A4", VA = "0x16195A4")]
	private void setDefaultShipMaterials()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1619F98", Offset = "0x1619F98", VA = "0x1619F98")]
	private void setMaterials(Material pilotMaterial, Material shipMaterial)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x161A068", Offset = "0x161A068", VA = "0x161A068")]
	public PlayerGeo()
	{
	}
}
[Token(Token = "0x20000EE")]
public class PlayerHitscanGun : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	private const int MinGunLevel = 1;

	[Token(Token = "0x40005FA")]
	private const int MaxGunLevel = 4;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DamageId;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string HitscanHitEffect;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string HitscanHitShieldEffect;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763910", Offset = "0x763910")]
	public LayerMask laserLayerMask;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask removeRaycastHit;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hitCastRadius;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform guidedAim;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763948", Offset = "0x763948")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient activeLaserColor;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient hoveringLaserColor;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763980", Offset = "0x763980")]
	public float transformCyclingOffset;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GunFiringEffects[] levelOneGuns;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GunFiringEffects[] levelTwoGuns;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GunFiringEffects[] levelThreeGuns;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GunFiringEffects[] levelFourGuns;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, GunFiringEffects[]> gunLevelMappings;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isRaycastHitting;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int gunFireTransformIndex;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 hitPosition;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject hitGameObject;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerController player;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlaytimeOverseer overseer;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private IRaycastable lastHoverTarget;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x161AB04", Offset = "0x161AB04", VA = "0x161AB04")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x161ABA0", Offset = "0x161ABA0", VA = "0x161ABA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1614E80", Offset = "0x1614E80", VA = "0x1614E80")]
	public bool isShooting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1614EB4", Offset = "0x1614EB4", VA = "0x1614EB4")]
	public int fire(bool isPlayingLevel, string assignedBulletKey)
	{
		return default(int);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x161AD38", Offset = "0x161AD38", VA = "0x161AD38")]
	private void tryHitDamageable()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x161B204", Offset = "0x161B204", VA = "0x161B204")]
	private void bootstrapMuzzleSystems()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1615624", Offset = "0x1615624", VA = "0x1615624")]
	public void resetMuzzles()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x16155B4", Offset = "0x16155B4", VA = "0x16155B4")]
	public void activateMuzzleFlash()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x161B2F4", Offset = "0x161B2F4", VA = "0x161B2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x161B3D0", Offset = "0x161B3D0", VA = "0x161B3D0")]
	private bool canRenderLaser()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600075A")]
	[Address(RVA = "0x161B494", Offset = "0x161B494", VA = "0x161B494")]
	private void updateLaserSight()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x161B048", Offset = "0x161B048", VA = "0x161B048")]
	private void playHitScanHitEffect(Vector3 position, string hitEffect)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600075C")]
	[Address(RVA = "0x161BA10", Offset = "0x161BA10", VA = "0x161BA10")]
	private void updateRaycastHitInformation()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x161ABA4", Offset = "0x161ABA4", VA = "0x161ABA4")]
	private void resetRaycastInfo()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1615D28", Offset = "0x1615D28", VA = "0x1615D28")]
	public int constrainGunLevel(int gunLevel)
	{
		return default(int);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x161AF7C", Offset = "0x161AF7C", VA = "0x161AF7C")]
	private float currentGunDamageLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x161AC28", Offset = "0x161AC28", VA = "0x161AC28")]
	private GunFiringEffects[] getCurrentGuns()
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1613A3C", Offset = "0x1613A3C", VA = "0x1613A3C")]
	public void updateGunAssignments(PlayerGeo playerGeo)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x161BD40", Offset = "0x161BD40", VA = "0x161BD40")]
	public PlayerHitscanGun()
	{
	}
}
[Token(Token = "0x20000EF")]
public class PlayerLoadSceneVFX : SingletonMono<PlayerLoadSceneVFX>
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fadeInVFX;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem fadeOutVFX;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x161BE64", Offset = "0x161BE64", VA = "0x161BE64")]
	public void playLoadInVFX()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x161BE84", Offset = "0x161BE84", VA = "0x161BE84")]
	public void playLoadOutVFX()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x161BEA4", Offset = "0x161BEA4", VA = "0x161BEA4")]
	public PlayerLoadSceneVFX()
	{
	}
}
[Token(Token = "0x20000F0")]
public class PlayerMover : MonoBehaviour
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761964", Offset = "0x761964")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion startRot;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion endRot;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x161C208", Offset = "0x161C208", VA = "0x161C208")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x161C644", Offset = "0x161C644", VA = "0x161C644")]
		internal void <moveToTransform>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x161C79C", Offset = "0x161C79C", VA = "0x161C79C")]
		internal void <moveToTransform>b__1()
		{
		}
	}

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fitoutTransform;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gameStartTransform;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform gameWinTransform;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerMovement;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 destinationPosition;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 actualPosition;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2[] speedLevels;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float xSpeed;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float zSpeed;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float winMovementDuration;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float fitoutToStartDuration;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool movementEnabled;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fig8XMag;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fig8ZMag;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float fig8XSpeed;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float fig8ZSpeed;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float fig8ZOffset;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool figure8;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SinCosLUT sinCosLUT;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x161BF14", Offset = "0x161BF14", VA = "0x161BF14")]
	public void setLevel(int shipLevel)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x161BFC8", Offset = "0x161BFC8", VA = "0x161BFC8")]
	public void enablePlayerMovement(bool isEnabled)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x161BFD4", Offset = "0x161BFD4", VA = "0x161BFD4")]
	public void moveToFitout()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x161C1F0", Offset = "0x161C1F0", VA = "0x161C1F0")]
	public void moveToGameStart()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x161C1FC", Offset = "0x161C1FC", VA = "0x161C1FC")]
	public void moveToGameWin()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x161BFE0", Offset = "0x161BFE0", VA = "0x161BFE0")]
	public void moveToTransform(Transform destination, float time = 0.35f)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x161C210", Offset = "0x161C210", VA = "0x161C210")]
	public void movementDidBegin(Vector3 position)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x161C21C", Offset = "0x161C21C", VA = "0x161C21C")]
	public void movementDidUpdate(Vector3 movementDelta)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x161C2D0", Offset = "0x161C2D0", VA = "0x161C2D0")]
	public void movementDidEnd()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x161C2D4", Offset = "0x161C2D4", VA = "0x161C2D4")]
	public void figureEight(bool enabled)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x161C2E0", Offset = "0x161C2E0", VA = "0x161C2E0")]
	private void fig8Update()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x161C458", Offset = "0x161C458", VA = "0x161C458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x161C5A4", Offset = "0x161C5A4", VA = "0x161C5A4")]
	public PlayerMover()
	{
	}
}
[Token(Token = "0x20000F1")]
public class PlayerShield : MonoBehaviour
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem shieldPop;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject geo;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject heavyShield;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shieldHealth;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x161CB38", Offset = "0x161CB38", VA = "0x161CB38")]
	public void reset(int shieldLevel)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x161CB84", Offset = "0x161CB84", VA = "0x161CB84")]
	public void powerup(float increment)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x161CB94", Offset = "0x161CB94", VA = "0x161CB94")]
	public void startShield()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x161CC9C", Offset = "0x161CC9C", VA = "0x161CC9C")]
	public bool heavyShieldIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x161CC84", Offset = "0x161CC84", VA = "0x161CC84")]
	public bool shieldIsDead()
	{
		return default(bool);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x161CCB4", Offset = "0x161CCB4", VA = "0x161CCB4")]
	public void hitByBullet(Bullet theBullet)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x161CD48", Offset = "0x161CD48", VA = "0x161CD48")]
	private void disableShield()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x161CD68", Offset = "0x161CD68", VA = "0x161CD68")]
	public PlayerShield()
	{
	}
}
[Token(Token = "0x20000F2")]
public class PlayerTouchInput : MonoBehaviour
{
	[Token(Token = "0x600077C")]
	[Address(RVA = "0x161CD70", Offset = "0x161CD70", VA = "0x161CD70")]
	public PlayerTouchInput()
	{
	}
}
[Token(Token = "0x20000F3")]
public abstract class Powerup : MonoBehaviour
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7639B8", Offset = "0x7639B8")]
	public string particlePath;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem spawnInEffect;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7639F0", Offset = "0x7639F0")]
	public BasicMover mover;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideMoveSpeed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x763A28", Offset = "0x763A28")]
	public float moveSpeedToSet;

	[Token(Token = "0x600077D")]
	public abstract bool canActivate(ShootyVRHandController activatingHand);

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1625A50", Offset = "0x1625A50", VA = "0x1625A50", Slot = "5")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1625B30", Offset = "0x1625B30", VA = "0x1625B30", Slot = "6")]
	public virtual void playActivationSound(Transform location)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1625BA4", Offset = "0x1625BA4", VA = "0x1625BA4", Slot = "7")]
	public virtual void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1625CAC", Offset = "0x1625CAC", VA = "0x1625CAC")]
	public void cleanup()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1625CC8", Offset = "0x1625CC8", VA = "0x1625CC8")]
	protected Powerup()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PowerupCrate : Powerup
{
	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB7C090", Offset = "0xB7C090", VA = "0xB7C090", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB7C154", Offset = "0xB7C154", VA = "0xB7C154", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB7C170", Offset = "0xB7C170", VA = "0xB7C170", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB7C20C", Offset = "0xB7C20C", VA = "0xB7C20C")]
	public PowerupCrate()
	{
	}
}
[Token(Token = "0x20000F5")]
public class PowerupUpgrade : Powerup
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763A60", Offset = "0x763A60")]
	public ShipUpgradeType powerupType;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB7C808", Offset = "0xB7C808", VA = "0xB7C808", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB7C810", Offset = "0xB7C810", VA = "0xB7C810", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xB7C89C", Offset = "0xB7C89C", VA = "0xB7C89C")]
	public PowerupUpgrade()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ScoreMultiplierPowerupCrate : Powerup
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763A98", Offset = "0x763A98")]
	public float minMultiplier;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float roundToNearest;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763AD0", Offset = "0x763AD0")]
	public TMP_Text textLabel;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isCountingDown;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float countdown;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float multiplierCountdownTime;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxMultiplier;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float storedRoundedMultiplier;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x9B1684", Offset = "0x9B1684", VA = "0x9B1684", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9B1814", Offset = "0x9B1814", VA = "0x9B1814")]
	private void Update()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x9B1774", Offset = "0x9B1774", VA = "0x9B1774")]
	private void updateMultiplierDisplay()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x9B18F4", Offset = "0x9B18F4", VA = "0x9B18F4")]
	private float currentMutliplierRounded()
	{
		return default(float);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x9B1ACC", Offset = "0x9B1ACC", VA = "0x9B1ACC", Slot = "7")]
	public override void applyPowerupToPlayer(ShootyVRHandController activatingHand)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9B1B74", Offset = "0x9B1B74", VA = "0x9B1B74", Slot = "4")]
	public override bool canActivate(ShootyVRHandController activatingHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x9B1B7C", Offset = "0x9B1B7C", VA = "0x9B1B7C", Slot = "6")]
	public override void playActivationSound(Transform location)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x9B1BF0", Offset = "0x9B1BF0", VA = "0x9B1BF0")]
	public ScoreMultiplierPowerupCrate()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public struct EngineSoundKeyLoop
{
	[Token(Token = "0x400063A")]
	private const string DefaultEngineLoopKey = "Game_EngineLoop_Middle";

	[Token(Token = "0x400063B")]
	private const string EngineLoopId = "Game_EngineLoop_{0}";

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform engineTransform;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string soundLoopKey;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x7EFDD8", Offset = "0x7EFDD8", VA = "0x7EFDD8")]
	public void start(int index)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000793")]
	[Address(RVA = "0x7EFDE0", Offset = "0x7EFDE0", VA = "0x7EFDE0")]
	public void updateEnginePitch(int index, float pitchShift)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x7EFDE8", Offset = "0x7EFDE8", VA = "0x7EFDE8")]
	public void stop(int index)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000795")]
	[Address(RVA = "0x7EFDF0", Offset = "0x7EFDF0", VA = "0x7EFDF0")]
	private string theLoopId(int index)
	{
		return null;
	}
}
[Token(Token = "0x20000F8")]
public class Ship : MonoBehaviour
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763B08", Offset = "0x763B08")]
	public List<EngineSoundKeyLoop> engineSounds;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763B40", Offset = "0x763B40")]
	public Material defaultMaterial;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParticleSystem> trailOwners;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763B78", Offset = "0x763B78")]
	public GunFiringSetup gunFiringSetup;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x165059C", Offset = "0x165059C", VA = "0x165059C")]
	public void setTrailsActiveState(bool isActive)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1650644", Offset = "0x1650644", VA = "0x1650644")]
	public void startEngines()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000798")]
	[Address(RVA = "0x16506F4", Offset = "0x16506F4", VA = "0x16506F4")]
	public void updateEnginePitch(float pitchShift)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x16507B4", Offset = "0x16507B4", VA = "0x16507B4")]
	public void stopEngines()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1650864", Offset = "0x1650864", VA = "0x1650864")]
	public GunFiringEffects[] getGunsForLevel(int gunLevel)
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1650910", Offset = "0x1650910", VA = "0x1650910")]
	public Ship()
	{
	}
}
[Token(Token = "0x20000F9")]
public class SpaceBattleCarouselController : SingletonMono<SpaceBattleCarouselController>
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761974", Offset = "0x761974")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpaceBattleCarouselController <>4__this;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 start;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 end;

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x15FF5E8", Offset = "0x15FF5E8", VA = "0x15FF5E8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x15FFA34", Offset = "0x15FFA34", VA = "0x15FFA34")]
		internal void <moveToEndPosition>b__0()
		{
		}
	}

	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761984", Offset = "0x761984")]
	private sealed class <>c__DisplayClass22_1
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate copilotCrate;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass22_0 CS$<>8__locals1;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x15FFC00", Offset = "0x15FFC00", VA = "0x15FFC00")]
		public <>c__DisplayClass22_1()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x15FFC08", Offset = "0x15FFC08", VA = "0x15FFC08")]
		internal void <moveToEndPosition>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x15FFCE8", Offset = "0x15FFCE8", VA = "0x15FFCE8")]
		internal void <moveToEndPosition>b__2()
		{
		}
	}

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string CopilotObjectKey;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x763BB0", Offset = "0x763BB0")]
	private List<CopilotPowerupCrate> <spawnedCopilotPickups>k__BackingField;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763BC0", Offset = "0x763BC0")]
	public float pilotSpacing;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yOffset;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float baseZOffet;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float zOffset;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float baseXOffset;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> spawnPositionKeys;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763BF8", Offset = "0x763BF8")]
	public float appearYOffset;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float appearZOffset;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763C30", Offset = "0x763C30")]
	public float durationForAllSpawnIns;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float timeToFlyIn;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flyInCurve;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minSecondsBetweenPilotDrop;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxSecondsBetweenPilotDrop;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763C68", Offset = "0x763C68")]
	public float timeToFlyToEnding;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float nextPilotDropTime;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isDroppingPilots;

	[Token(Token = "0x17000054")]
	public List<CopilotPowerupCrate> spawnedCopilotPickups
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x15FF0B0", Offset = "0x15FF0B0", VA = "0x15FF0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A750", Offset = "0x76A750")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x15FF0B8", Offset = "0x15FF0B8", VA = "0x15FF0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A760", Offset = "0x76A760")]
		private set
		{
		}
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x15FF0C0", Offset = "0x15FF0C0", VA = "0x15FF0C0")]
	public void activateCarousel()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x15FF484", Offset = "0x15FF484", VA = "0x15FF484")]
	private void moveToEndPosition(Vector3 endPosition, int index, int spawnCount)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x15FF5F0", Offset = "0x15FF5F0", VA = "0x15FF5F0")]
	public void beginFiringFakeGuns()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x15FF688", Offset = "0x15FF688", VA = "0x15FF688")]
	public void startDropLoop()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x15FF6C0", Offset = "0x15FF6C0", VA = "0x15FF6C0")]
	public void stopLootDrop()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x15FF778", Offset = "0x15FF778", VA = "0x15FF778")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x15FF854", Offset = "0x15FF854", VA = "0x15FF854")]
	public void headBossEnding(Vector3 bossPosition, EnemyBossHeadDeathAnimation deathAnimation)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x15FF330", Offset = "0x15FF330", VA = "0x15FF330")]
	public void cleanup()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x15FF84C", Offset = "0x15FF84C", VA = "0x15FF84C")]
	private void stopDropLoop()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x15FF3E0", Offset = "0x15FF3E0", VA = "0x15FF3E0")]
	private Vector3 positionFromSpawnPoint(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x15FF940", Offset = "0x15FF940", VA = "0x15FF940")]
	public SpaceBattleCarouselController()
	{
	}
}
[Token(Token = "0x20000FA")]
public enum ShipUpgradeType
{
	[Token(Token = "0x4000655")]
	none,
	[Token(Token = "0x4000656")]
	gun,
	[Token(Token = "0x4000657")]
	chargeAttack
}
[Token(Token = "0x20000FB")]
public class UpgradeController
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int baseGunLevel;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int baseChargeAttackLevel;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UpgradeController sharedInstance;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, ShipUpgradeType> ShipUpgradeTypeMap;

	[Token(Token = "0x17000055")]
	public static UpgradeController instance
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xAA36C4", Offset = "0xAA36C4", VA = "0xAA36C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xAA3798", Offset = "0xAA3798", VA = "0xAA3798")]
	public void resetPlayerToBase()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xAA3848", Offset = "0xAA3848", VA = "0xAA3848")]
	public static void awardPowerup(ShipUpgradeType powerupType, int increment = 1)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xAA39D8", Offset = "0xAA39D8", VA = "0xAA39D8")]
	public static void awardPowerupChargeAttackLevel(int increment)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xAA390C", Offset = "0xAA390C", VA = "0xAA390C")]
	public static void awardPowerupGunLevel(int increment)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xAA3A90", Offset = "0xAA3A90", VA = "0xAA3A90")]
	public static bool isMaxGunLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xAA3B4C", Offset = "0xAA3B4C", VA = "0xAA3B4C")]
	public static ShipUpgradeType upgradeDrop()
	{
		return default(ShipUpgradeType);
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xAA3BFC", Offset = "0xAA3BFC", VA = "0xAA3BFC")]
	public static ShipUpgradeType fastParseShipUpgrade(string raw, ShipUpgradeType defaultType)
	{
		return default(ShipUpgradeType);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xAA3790", Offset = "0xAA3790", VA = "0xAA3790")]
	public UpgradeController()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ContentUnlockingAnimation : MonoBehaviour
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761994", Offset = "0x761994")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldConfig config;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x9CDE50", Offset = "0x9CDE50", VA = "0x9CDE50")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x9CE800", Offset = "0x9CE800", VA = "0x9CE800")]
		internal void <unlockWorldAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x9CE8B0", Offset = "0x9CE8B0", VA = "0x9CE8B0")]
		internal void <unlockWorldAnimation>b__1()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x9CEA4C", Offset = "0x9CEA4C", VA = "0x9CEA4C")]
		internal void <unlockWorldAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619A4", Offset = "0x7619A4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldConfig config;

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x9CE060", Offset = "0x9CE060", VA = "0x9CE060")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x9CEA6C", Offset = "0x9CEA6C", VA = "0x9CEA6C")]
		internal void <animateNubbinToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x9CEB94", Offset = "0x9CEB94", VA = "0x9CEB94")]
		internal void <animateNubbinToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619B4", Offset = "0x7619B4")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PilotConfig config;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x9CE068", Offset = "0x9CE068", VA = "0x9CE068")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x9CEEB0", Offset = "0x9CEEB0", VA = "0x9CEEB0")]
		internal void <unlockPilotAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x9CEF74", Offset = "0x9CEF74", VA = "0x9CEF74")]
		internal void <unlockPilotAnimation>b__1()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x9CF0D8", Offset = "0x9CF0D8", VA = "0x9CF0D8")]
		internal void <unlockPilotAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619C4", Offset = "0x7619C4")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PilotConfig config;

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x9CE1B4", Offset = "0x9CE1B4", VA = "0x9CE1B4")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x9CF0F8", Offset = "0x9CF0F8", VA = "0x9CF0F8")]
		internal void <animatePilotToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x9CF20C", Offset = "0x9CF20C", VA = "0x9CF20C")]
		internal void <animatePilotToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619D4", Offset = "0x7619D4")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode mode;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x9CE1BC", Offset = "0x9CE1BC", VA = "0x9CE1BC")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x9CF554", Offset = "0x9CF554", VA = "0x9CF554")]
		internal void <unlockGameModeAnimation>b__0()
		{
		}
	}

	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619E4", Offset = "0x7619E4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ContentUnlockingAnimation <>4__this;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode mode;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x9CE2D8", Offset = "0x9CE2D8", VA = "0x9CE2D8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x9CF574", Offset = "0x9CF574", VA = "0x9CF574")]
		internal void <animatedGameModeToTarget>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x9CF65C", Offset = "0x9CF65C", VA = "0x9CF65C")]
		internal void <animatedGameModeToTarget>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7619F4", Offset = "0x7619F4")]
	private sealed class <>c
	{
		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__37_2;

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x9CE7A8", Offset = "0x9CE7A8", VA = "0x9CE7A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x9CE7B0", Offset = "0x9CE7B0", VA = "0x9CE7B0")]
		internal void <animatedGameModeToTarget>b__37_2()
		{
		}
	}

	[Token(Token = "0x400065C")]
	private const float DelayBeforeCheckAgain = 1f;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763CA0", Offset = "0x763CA0")]
	public WorldLoadButtonMenu worldLoadButtonMenu;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763CD8", Offset = "0x763CD8")]
	public GameObject worldUnlockParent;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter nubbin;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763D10", Offset = "0x763D10")]
	public GameObject pilotUnlockParent;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerGeo pilotGeo;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem unlockVFX;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem unlockMenuVFX;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763D48", Offset = "0x763D48")]
	public float textMessageTime;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject textUnlockParent;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform textMover;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763D80", Offset = "0x763D80")]
	public Transform worldUnlockTarget;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform modeUnlockTarget;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform pilotUnlockTarget;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem moveTrail;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float unlockPopTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float moveTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float messageTime;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 nubbinStartPosition;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion nubbinStartRotation;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 pilotStartPosition;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion pilotStartRotation;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 textStartPosition;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 moveToTargetPos;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool bootstrapped;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x763DB8", Offset = "0x763DB8")]
	private bool <isRunningAnimation>k__BackingField;

	[Token(Token = "0x17000056")]
	public bool isRunningAnimation
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x9CCB00", Offset = "0x9CCB00", VA = "0x9CCB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A770", Offset = "0x76A770")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x9CCB08", Offset = "0x9CCB08", VA = "0x9CCB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A780", Offset = "0x76A780")]
		private set
		{
		}
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x9CCB14", Offset = "0x9CCB14", VA = "0x9CCB14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x9CCD04", Offset = "0x9CCD04", VA = "0x9CCD04")]
	public void nextUnlock()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x9CD77C", Offset = "0x9CD77C", VA = "0x9CD77C")]
	private void unlockWorldAnimation(WorldConfig config)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x9CDF1C", Offset = "0x9CDF1C", VA = "0x9CDF1C")]
	private void animateNubbinToTarget(WorldConfig config)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x9CD30C", Offset = "0x9CD30C", VA = "0x9CD30C")]
	private void unlockPilotAnimation(PilotConfig config)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x9CE070", Offset = "0x9CE070", VA = "0x9CE070")]
	private void animatePilotToTarget(PilotConfig config)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x9CDBFC", Offset = "0x9CDBFC", VA = "0x9CDBFC")]
	private void unlockGameModeAnimation(GameMode mode)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x9CE1C4", Offset = "0x9CE1C4", VA = "0x9CE1C4")]
	private void animatedGameModeToTarget(GameMode mode)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x9CE2E0", Offset = "0x9CE2E0", VA = "0x9CE2E0")]
	private void setMoveTrail(Transform parent, bool active)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x9CE430", Offset = "0x9CE430", VA = "0x9CE430")]
	private void setMenuUnlockVFX(Vector3 pos)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x9CDE58", Offset = "0x9CDE58", VA = "0x9CDE58")]
	private void updateUnlockVFXPlayState(bool isPlaying)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x9CE4B0", Offset = "0x9CE4B0", VA = "0x9CE4B0")]
	private void unlockingCompleteStep()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x9CE570", Offset = "0x9CE570", VA = "0x9CE570")]
	private void showPilotWorldUnlockMessage(Transform targetTransform, string localisedItemName)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x9CCB18", Offset = "0x9CCB18", VA = "0x9CCB18")]
	private void reset()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x9CE728", Offset = "0x9CE728", VA = "0x9CE728")]
	private bool isUnlockAnimationBlocking()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x9CE698", Offset = "0x9CE698", VA = "0x9CE698")]
	private string getItemUnlockedString(string localisedItemName)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x9CE730", Offset = "0x9CE730", VA = "0x9CE730")]
	public ContentUnlockingAnimation()
	{
	}
}
[Token(Token = "0x20000FD")]
public class ContentUnlockingController : SingletonMono<ContentUnlockingController>
{
	[Serializable]
	[Token(Token = "0x2000379")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A04", Offset = "0x761A04")]
	private sealed class <>c
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__11_0;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<string> <>9__16_0;

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x9D0408", Offset = "0x9D0408", VA = "0x9D0408")]
		public <>c()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x9D0410", Offset = "0x9D0410", VA = "0x9D0410")]
		internal bool <hasWorldUnlocksToAward>b__11_0(string worldId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x9D049C", Offset = "0x9D049C", VA = "0x9D049C")]
		internal bool <hasPilotUnlocksToAward>b__16_0(string pilotId)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> worldsToUnlock;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> pilotsToUnlock;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> gameModesToUnlock;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bootstrapped;

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9CFA18", Offset = "0x9CFA18", VA = "0x9CFA18")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9CFA4C", Offset = "0x9CFA4C", VA = "0x9CFA4C")]
	private void loadState()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x9CFD9C", Offset = "0x9CFD9C", VA = "0x9CFD9C")]
	private void saveState()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x9CFE80", Offset = "0x9CFE80", VA = "0x9CFE80")]
	public bool hasContentToUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x9CFEC4", Offset = "0x9CFEC4", VA = "0x9CFEC4")]
	public string getRewardCalloutLabel(bool hasPilotFromMission)
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9CFFE8", Offset = "0x9CFFE8", VA = "0x9CFFE8")]
	public void addWorldToUnlock(string worldId)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x9CD5B8", Offset = "0x9CD5B8", VA = "0x9CD5B8")]
	public bool hasWorldUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x9CD6D8", Offset = "0x9CD6D8", VA = "0x9CD6D8")]
	public WorldConfig nextWorldUnlock()
	{
		return null;
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x9CED84", Offset = "0x9CED84", VA = "0x9CED84")]
	public void unlockWorld(string worldId)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x9D0100", Offset = "0x9D0100", VA = "0x9D0100")]
	public void addPilotToUnlock(string pilotId)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9CD0E0", Offset = "0x9CD0E0", VA = "0x9CD0E0")]
	public bool hasPilotUnlocksToAwardInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9CD954", Offset = "0x9CD954", VA = "0x9CD954")]
	public bool hasPilotUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9CDA74", Offset = "0x9CDA74", VA = "0x9CDA74")]
	public PilotConfig nextPilotToUnlock()
	{
		return null;
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9CD1FC", Offset = "0x9CD1FC", VA = "0x9CD1FC")]
	public PilotConfig nextPilotToUnlockInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9CF428", Offset = "0x9CF428", VA = "0x9CF428")]
	public void unlockPilot(string pilotId)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9D0218", Offset = "0x9D0218", VA = "0x9D0218")]
	public void addGameModeToUnlock(GameMode mode)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x9CDB14", Offset = "0x9CDB14", VA = "0x9CDB14")]
	public bool hasGameModeUnlocksToAward()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9CDB6C", Offset = "0x9CDB6C", VA = "0x9CDB6C")]
	public GameMode nextGameModeToUnlock()
	{
		return default(GameMode);
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9CF830", Offset = "0x9CF830", VA = "0x9CF830")]
	public void unlockGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x9D0330", Offset = "0x9D0330", VA = "0x9D0330")]
	public ContentUnlockingController()
	{
	}
}
[Token(Token = "0x20000FE")]
public sealed class ContentUnlockingControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContentUnlockingController contentUnlocking;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9D0528", Offset = "0x9D0528", VA = "0x9D0528", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x9D0620", Offset = "0x9D0620", VA = "0x9D0620")]
	public ContentUnlockingControllerBooter()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ABTestController : BootableMonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateList stateList;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> previousTests;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> newTests;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xABEFCC", Offset = "0xABEFCC", VA = "0xABEFCC", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xABF1DC", Offset = "0xABF1DC", VA = "0xABF1DC")]
	private void saveState()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xABF2E8", Offset = "0xABF2E8", VA = "0xABF2E8")]
	private void joinTest(Command theCommand)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xABF368", Offset = "0xABF368", VA = "0xABF368")]
	private void processTests()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xABF3E4", Offset = "0xABF3E4", VA = "0xABF3E4")]
	public ABTestController()
	{
	}
}
[Token(Token = "0x2000100")]
public interface IPauseable
{
	[Token(Token = "0x60007E2")]
	void prepareForPause();

	[Token(Token = "0x60007E3")]
	void appDidReturnFromPause();
}
[Token(Token = "0x2000101")]
public sealed class ApplicationPauseController : SingletonMono<ApplicationPauseController>
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IPauseable> thingsToPause;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool appDidBoot;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xABF91C", Offset = "0xABF91C", VA = "0xABF91C")]
	public static void registerForPauses(IPauseable itemToPause)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xAC7DF4", Offset = "0xAC7DF4", VA = "0xAC7DF4")]
	public static void deregisterForPauses(IPauseable itemToPause)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xAC7E84", Offset = "0xAC7E84", VA = "0xAC7E84")]
	public void appDidCompleteBooting()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xAC8028", Offset = "0xAC8028", VA = "0xAC8028")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xAC81F4", Offset = "0xAC81F4", VA = "0xAC81F4", Slot = "6")]
	protected override void ApplicationQuitting()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xAC8040", Offset = "0xAC8040", VA = "0xAC8040")]
	public void prepareToGoAway()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xAC7E90", Offset = "0xAC7E90", VA = "0xAC7E90")]
	public void refreshFromAway()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xAC8260", Offset = "0xAC8260", VA = "0xAC8260")]
	public ApplicationPauseController()
	{
	}
}
[Token(Token = "0x2000102")]
public sealed class BigScreenshot : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rezMultiplier;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int aa;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int take;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x9BD244", Offset = "0x9BD244", VA = "0x9BD244")]
	private void Update()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x9BD248", Offset = "0x9BD248", VA = "0x9BD248")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x9BD778", Offset = "0x9BD778", VA = "0x9BD778")]
	private void ToggleUI(float canvasAlpha)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9BD8B8", Offset = "0x9BD8B8", VA = "0x9BD8B8")]
	public BigScreenshot()
	{
	}
}
[Token(Token = "0x2000103")]
public sealed class BootSceneLoader : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> scenesToBoot;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> scenesWaitingToBeBooted;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildTimePrefabulator buildTimePrefab;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string defaultActiveScene;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool loadAllScenesAtOnce;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool bootstrapped;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int loadTimeLogLevel;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Stopwatch loadTimeStopwatch;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9BEC10", Offset = "0x9BEC10", VA = "0x9BEC10")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x9BECA0", Offset = "0x9BECA0", VA = "0x9BECA0")]
	public void Update()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x9BECE4", Offset = "0x9BECE4", VA = "0x9BECE4")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x9BEE04", Offset = "0x9BEE04", VA = "0x9BEE04")]
	public bool shouldLoadScene(Scene theScene)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x9BEE84", Offset = "0x9BEE84", VA = "0x9BEE84")]
	private void startBootLoad()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x9BF048", Offset = "0x9BF048", VA = "0x9BF048")]
	private void sceneDidLoad(Scene scene, LoadSceneMode sceneMode)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x9BEFEC", Offset = "0x9BEFEC", VA = "0x9BEFEC")]
	private void bootScene(string theSceneName)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x9BF600", Offset = "0x9BF600", VA = "0x9BF600")]
	private bool sceneIsAlreadyLoaded(string theSceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x9BF554", Offset = "0x9BF554", VA = "0x9BF554")]
	private void startLoadTimeStopwatch()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x9BF288", Offset = "0x9BF288", VA = "0x9BF288")]
	private void stopLoadTimeStopwatch(string stage)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x9BF6AC", Offset = "0x9BF6AC", VA = "0x9BF6AC")]
	public BootSceneLoader()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x9BF75C", Offset = "0x9BF75C", VA = "0x9BF75C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A790", Offset = "0x76A790")]
	private void <sceneDidLoad>b__13_0()
	{
	}
}
[Token(Token = "0x2000104")]
public class BootUI : MonoBehaviour
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera bootCam;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bootObject;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x9BF7D8", Offset = "0x9BF7D8", VA = "0x9BF7D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x9BF81C", Offset = "0x9BF81C", VA = "0x9BF81C")]
	private void bootDidComplete()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x9BF8C4", Offset = "0x9BF8C4", VA = "0x9BF8C4")]
	public static void bootComplete()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x9BF95C", Offset = "0x9BF95C", VA = "0x9BF95C")]
	public BootUI()
	{
	}
}
[Token(Token = "0x2000105")]
public sealed class BuildTimePrefabulator : BootableMonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildTimeConfig buildTimeConfigPrefab;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x9C39C0", Offset = "0x9C39C0", VA = "0x9C39C0", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x9C42EC", Offset = "0x9C42EC", VA = "0x9C42EC")]
	public BuildTimePrefabulator()
	{
	}
}
[Token(Token = "0x2000106")]
public sealed class RedeemItem
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemID;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemType;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemCount;

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x9AFC48", Offset = "0x9AFC48", VA = "0x9AFC48")]
	public RedeemItem(string id, string type, string count)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x9AFD14", Offset = "0x9AFD14", VA = "0x9AFD14")]
	public string getRewardString()
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x9AFD6C", Offset = "0x9AFD6C", VA = "0x9AFD6C")]
	public bool isValidReward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x9AFDB4", Offset = "0x9AFDB4", VA = "0x9AFDB4")]
	public static bool IsValidRedeemType(string itemType)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000107")]
public enum SupportCodeStatus
{
	[Token(Token = "0x4000694")]
	unknown,
	[Token(Token = "0x4000695")]
	failed,
	[Token(Token = "0x4000696")]
	success,
	[Token(Token = "0x4000697")]
	alreadyClaimed,
	[Token(Token = "0x4000698")]
	noCode
}
[Token(Token = "0x2000108")]
public sealed class CodeRedeemController : MonoBehaviour
{
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A14", Offset = "0x761A14")]
	private sealed class <waitForResponse>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityWebRequest www;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<UnityWebRequest> onFailure;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<UnityWebRequest> onSuccess;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x9CA8F0", Offset = "0x9CA8F0", VA = "0x9CA8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x9CA958", Offset = "0x9CA958", VA = "0x9CA958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x9CA680", Offset = "0x9CA680", VA = "0x9CA680")]
		[DebuggerHidden]
		public <waitForResponse>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x9CA790", Offset = "0x9CA790", VA = "0x9CA790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x9CA794", Offset = "0x9CA794", VA = "0x9CA794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x9CA8F8", Offset = "0x9CA8F8", VA = "0x9CA8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gameName;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string customerSupportURL;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string lastCode;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool firstTry;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<SupportCodeStatus> completionAction;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<string> codesAlreadyRedeemed;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool didBoot;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string codeWhatWeAreCurrentlyRedeeming;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x9C9448", Offset = "0x9C9448", VA = "0x9C9448")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x9C9564", Offset = "0x9C9564", VA = "0x9C9564")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x9C9670", Offset = "0x9C9670", VA = "0x9C9670")]
	private void addCurrentCodeToRedeemedList()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x9C96E8", Offset = "0x9C96E8", VA = "0x9C96E8")]
	private bool hasAlreadyRedeemed(string theCode)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x9C9750", Offset = "0x9C9750", VA = "0x9C9750")]
	public void redeemCustomerSupportCode(string theCode, Action<SupportCodeStatus> complete)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x9C97B0", Offset = "0x9C97B0", VA = "0x9C97B0")]
	private void tryRedeemCode(string theCode)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x9C9BEC", Offset = "0x9C9BEC", VA = "0x9C9BEC")]
	private void handleServerResponse(UnityWebRequest theWWW)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x9C9ACC", Offset = "0x9C9ACC", VA = "0x9C9ACC")]
	private void tryExecuteCompletionAction(SupportCodeStatus code)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x9CA41C", Offset = "0x9CA41C", VA = "0x9CA41C")]
	private void redeemAll(int currency, List<RedeemItem> items)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x9CA5E0", Offset = "0x9CA5E0", VA = "0x9CA5E0")]
	private void handleServerError(UnityWebRequest theWWW)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9C9B40", Offset = "0x9C9B40", VA = "0x9C9B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A7A0", Offset = "0x76A7A0")]
	private IEnumerator waitForResponse(UnityWebRequest www, Action<UnityWebRequest> onSuccess, Action<UnityWebRequest> onFailure)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9CA6AC", Offset = "0x9CA6AC", VA = "0x9CA6AC")]
	public CodeRedeemController()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9CA778", Offset = "0x9CA778", VA = "0x9CA778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A804", Offset = "0x76A804")]
	private void <tryRedeemCode>b__14_0()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9CA780", Offset = "0x9CA780", VA = "0x9CA780")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A814", Offset = "0x76A814")]
	private void <handleServerResponse>b__15_0()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9CA788", Offset = "0x9CA788", VA = "0x9CA788")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A824", Offset = "0x76A824")]
	private void <handleServerResponse>b__15_1()
	{
	}
}
[Token(Token = "0x2000109")]
public sealed class DeepLinkController : SingletonMono<DeepLinkController>
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool testInEditor;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string testCode;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string deepLinkPanel;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x957A4C", Offset = "0x957A4C", VA = "0x957A4C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x957A50", Offset = "0x957A50", VA = "0x957A50")]
	public string getNextPanelDestination(string fallBack = "UIPanels/GameHubPanel")
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x957A88", Offset = "0x957A88", VA = "0x957A88")]
	private bool hasDeepLinkDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x957AAC", Offset = "0x957AAC", VA = "0x957AAC")]
	public DeepLinkController()
	{
	}
}
[Token(Token = "0x200010A")]
public sealed class DeepLinkControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeepLinkController deepLinkController;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x957B1C", Offset = "0x957B1C", VA = "0x957B1C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x957BFC", Offset = "0x957BFC", VA = "0x957BFC")]
	public DeepLinkControllerBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public struct KeyWithWeighting
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string key;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int weighting;
}
[Serializable]
[Token(Token = "0x200010C")]
public struct EnemyClassWeighting
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EnemyClass enemyClass;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int weighting;
}
[Token(Token = "0x200010D")]
public class EndlessStaticEnemyMode : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763DC8", Offset = "0x763DC8")]
	public int maxNumberOfEnemies;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minTickBetweenSpawns;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxTicksBetweenSpawns;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve tickCurve;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int tickCountdown;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763E00", Offset = "0x763E00")]
	public EnemyClassWeighting[] enemyClassWeighting;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, EnemyClassWeighting> classWeightMappings;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763E38", Offset = "0x763E38")]
	public float timeToIncreaseDifficulty;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startSpawnDivider;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float endSpawnDivider;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LootDropTable enemySpawnTable;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float ticksDivider;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine difficultyRampRoutine;

	[Token(Token = "0x40006B7")]
	private const int MaxLoopsForPositionAttempts = 30;

	[Token(Token = "0x40006B8")]
	private const float TooCloseDistance = 2f;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x960F94", Offset = "0x960F94", VA = "0x960F94")]
	public void resetMode()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x960FD8", Offset = "0x960FD8", VA = "0x960FD8")]
	public void cleanup()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x961014", Offset = "0x961014", VA = "0x961014")]
	public void reset(int activeEnemyCount)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x9610E8", Offset = "0x9610E8", VA = "0x9610E8")]
	public bool tick(int activeEnemyCount)
	{
		return default(bool);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x9611E8", Offset = "0x9611E8", VA = "0x9611E8")]
	public void spawnRandomEnemyAtRandomPosition(bool weightedSpawning)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x9614B4", Offset = "0x9614B4", VA = "0x9614B4")]
	public EnemyController spawnEnemyAtRandomPosition(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x96170C", Offset = "0x96170C", VA = "0x96170C")]
	private bool isNearEnemies(Vector3 position, List<EnemyController> activeEnemies)
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x961214", Offset = "0x961214", VA = "0x961214")]
	private EnemyClass getEnemyClass(bool weightedSpawning)
	{
		return default(EnemyClass);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x961840", Offset = "0x961840", VA = "0x961840")]
	public EndlessStaticEnemyMode()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x961878", Offset = "0x961878", VA = "0x961878")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A834", Offset = "0x76A834")]
	private void <tick>b__18_0(float progress)
	{
	}
}
[Token(Token = "0x200010E")]
public sealed class DeviceInfo
{
	[Token(Token = "0x200037B")]
	public enum QualityLevel
	{
		[Token(Token = "0x4001475")]
		Low,
		[Token(Token = "0x4001476")]
		Medium,
		[Token(Token = "0x4001477")]
		High
	}

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private QualityLevel quality;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public QualityLevel debugQualityLevelOverride;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DeviceInfo sharedInstance;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool allUnknownIphonesAreXType;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isPico;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isOculus;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isIOS;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isGooglePlay;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isAmazon;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isAppleTV;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isKindle2ndGen;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool isWeakDevice;

	[Token(Token = "0x17000057")]
	public static DeviceInfo sharedDeviceInfo
	{
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x9591A0", Offset = "0x9591A0", VA = "0x9591A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public static QualityLevel deviceQuality
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x959310", Offset = "0x959310", VA = "0x959310")]
		get
		{
			return default(QualityLevel);
		}
	}

	[Token(Token = "0x17000059")]
	public static float SafeScreenInsetLeft
	{
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x959B00", Offset = "0x959B00", VA = "0x959B00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005A")]
	public static float SafeScreenInsetRight
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x959B08", Offset = "0x959B08", VA = "0x959B08")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005B")]
	public static float SafeScreenInsetTop
	{
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x959B10", Offset = "0x959B10", VA = "0x959B10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005C")]
	public static float SafeScreenInsetBottom
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x959B18", Offset = "0x959B18", VA = "0x959B18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005D")]
	public static float SafeScreenWidth
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x959B20", Offset = "0x959B20", VA = "0x959B20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005E")]
	public static float SafeScreenHeight
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x959B3C", Offset = "0x959B3C", VA = "0x959B3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x95937C", Offset = "0x95937C", VA = "0x95937C")]
	public static bool isTouchDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x9593A8", Offset = "0x9593A8", VA = "0x9593A8")]
	public static bool isTVDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x959884", Offset = "0x959884", VA = "0x959884")]
	public static bool isEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x959464", Offset = "0x959464", VA = "0x959464")]
	public static bool isFireTV()
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x95988C", Offset = "0x95988C", VA = "0x95988C")]
	public static bool isSteamPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x959894", Offset = "0x959894", VA = "0x959894")]
	public static bool isPicoPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x959900", Offset = "0x959900", VA = "0x959900")]
	public static bool isOculusPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x95996C", Offset = "0x95996C", VA = "0x95996C")]
	public static bool isOculusQuest()
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x959974", Offset = "0x959974", VA = "0x959974")]
	public static bool isOculusDelMar()
	{
		return default(bool);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x95997C", Offset = "0x95997C", VA = "0x95997C")]
	public static bool isKindle2ndGenCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x959A54", Offset = "0x959A54", VA = "0x959A54")]
	public static bool isWeakDeviceCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x959AF8", Offset = "0x959AF8", VA = "0x959AF8")]
	public static bool isIPhoneX()
	{
		return default(bool);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x959B58", Offset = "0x959B58", VA = "0x959B58")]
	public static bool gamepadIsPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x959B84", Offset = "0x959B84", VA = "0x959B84")]
	public static bool isLowQualityAndroid()
	{
		return default(bool);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x959C50", Offset = "0x959C50", VA = "0x959C50")]
	public static bool isIPad()
	{
		return default(bool);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x9594C0", Offset = "0x9594C0", VA = "0x9594C0")]
	public static bool isAndroidTV()
	{
		return default(bool);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x959268", Offset = "0x959268", VA = "0x959268")]
	private DeviceInfo()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x959F48", Offset = "0x959F48", VA = "0x959F48")]
	private void setupPlatform()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x959C58", Offset = "0x959C58", VA = "0x959C58")]
	private QualityLevel getQualityLevel(string graphicsName)
	{
		return default(QualityLevel);
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x95A208", Offset = "0x95A208", VA = "0x95A208")]
	private string onlyDigits(string source)
	{
		return null;
	}
}
[Token(Token = "0x200010F")]
public class DisableOnPlatform : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDisabledOnAnyOculusPlatform;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDisabledOnQuest;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isDisabledOnRift;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isDisabledOnSteam;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isDisabledInEditor;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x95A8B8", Offset = "0x95A8B8", VA = "0x95A8B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x95AA48", Offset = "0x95AA48", VA = "0x95AA48")]
	public DisableOnPlatform()
	{
	}
}
[Token(Token = "0x2000110")]
public sealed class FontBooter : BootableMonoBehaviour, IPauseable
{
	[Serializable]
	[Token(Token = "0x200037C")]
	public sealed class CacheFont
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Font TheFont;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FontGlyphsToCache;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MinSizeToCache;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxSizeToCache;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool AlsoCacheBoldStyle;

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x979640", Offset = "0x979640", VA = "0x979640")]
		public CacheFont()
		{
		}
	}

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CacheFont> FontsToCache;

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x9792DC", Offset = "0x9792DC", VA = "0x9792DC", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x9795B8", Offset = "0x9795B8", VA = "0x9795B8", Slot = "6")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x9795BC", Offset = "0x9795BC", VA = "0x9795BC", Slot = "7")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x97931C", Offset = "0x97931C", VA = "0x97931C")]
	private void CacheFonts()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x979634", Offset = "0x979634", VA = "0x979634")]
	public FontBooter()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x97963C", Offset = "0x97963C", VA = "0x97963C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A844", Offset = "0x76A844")]
	private void <appDidReturnFromPause>b__4_0()
	{
	}
}
[Token(Token = "0x2000111")]
public sealed class GameFlowController : MonoBehaviour
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool limitFPSInEditor;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool preloadGameplayPanel;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string startingPanel;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x763E70", Offset = "0x763E70")]
	private static bool <hasBooted>k__BackingField;

	[Token(Token = "0x40006CF")]
	public const string firstPlaythroughKey = "sfg";

	[Token(Token = "0x1700005F")]
	public static bool hasBooted
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x97AFE0", Offset = "0x97AFE0", VA = "0x97AFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A854", Offset = "0x76A854")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x97B048", Offset = "0x97B048", VA = "0x97B048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A864", Offset = "0x76A864")]
		private set
		{
		}
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x97B0B8", Offset = "0x97B0B8", VA = "0x97B0B8")]
	public void preBoot()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x97B204", Offset = "0x97B204", VA = "0x97B204")]
	public void gameStartAfterLoad()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x97B2B4", Offset = "0x97B2B4", VA = "0x97B2B4")]
	private void finalBootStep()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x97B364", Offset = "0x97B364", VA = "0x97B364")]
	private void loadMain()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x97B4E0", Offset = "0x97B4E0", VA = "0x97B4E0")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x97B5A8", Offset = "0x97B5A8", VA = "0x97B5A8")]
	private void startTutorial()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x97B624", Offset = "0x97B624", VA = "0x97B624")]
	public GameFlowController()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x97B690", Offset = "0x97B690", VA = "0x97B690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A874", Offset = "0x76A874")]
	private void <finalBootStep>b__10_0()
	{
	}
}
[Token(Token = "0x2000112")]
public sealed class GameStateController : BootableMonoBehaviour
{
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A24", Offset = "0x761A24")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameStateController <>4__this;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x97D4C0", Offset = "0x97D4C0", VA = "0x97D4C0")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x97F494", Offset = "0x97F494", VA = "0x97F494")]
		internal void <bootstrap>b__0(bool success)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x97F6F0", Offset = "0x97F6F0", VA = "0x97F6F0")]
		internal void <bootstrap>b__1()
		{
		}
	}

	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A34", Offset = "0x761A34")]
	private sealed class <checkForStateChange>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateController <>4__this;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x97F918", Offset = "0x97F918", VA = "0x97F918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x97F980", Offset = "0x97F980", VA = "0x97F980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x97D6C4", Offset = "0x97D6C4", VA = "0x97D6C4")]
		[DebuggerHidden]
		public <checkForStateChange>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x97F7C8", Offset = "0x97F7C8", VA = "0x97F7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x97F7CC", Offset = "0x97F7CC", VA = "0x97F7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x97F920", Offset = "0x97F920", VA = "0x97F920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PersistentStorage stateHolder;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PersistentStorage cloudState;

	[Token(Token = "0x40006D2")]
	private const string dateTimeStringFormat = "yyyy/MM/dd HH:mm:ss";

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gameIsPaused;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float gameSpeed;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float saveInterval;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameStateController sharedInstance;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameStateUnlocker unlocker;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canShowCloudSaveChoice;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool cloudSaveChoiceNeedsToBeShown;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool cloudSwitchInProgress;

	[Token(Token = "0x17000060")]
	public static GameStateController instance
	{
		[Token(Token = "0x6000855")]
		[Address(RVA = "0x97D168", Offset = "0x97D168", VA = "0x97D168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x97D2EC", Offset = "0x97D2EC", VA = "0x97D2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x97D3D0", Offset = "0x97D3D0", VA = "0x97D3D0", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x97D4C8", Offset = "0x97D4C8", VA = "0x97D4C8", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x97D5B4", Offset = "0x97D5B4", VA = "0x97D5B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x97D5C8", Offset = "0x97D5C8", VA = "0x97D5C8")]
	private string generateCloudSaveID()
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x97D648", Offset = "0x97D648", VA = "0x97D648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A884", Offset = "0x76A884")]
	private IEnumerator checkForStateChange()
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x97D6F0", Offset = "0x97D6F0", VA = "0x97D6F0")]
	public void cloudDidUpdate()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x97DAE8", Offset = "0x97DAE8", VA = "0x97DAE8")]
	public string cloudLastSaveTime()
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x97DBE0", Offset = "0x97DBE0", VA = "0x97DBE0")]
	public string localLastSaveTime()
	{
		return null;
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x97DCD8", Offset = "0x97DCD8", VA = "0x97DCD8")]
	public string base64State()
	{
		return null;
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x97D9C8", Offset = "0x97D9C8", VA = "0x97D9C8")]
	public void showCloudSaveChoicePanel()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x97DD88", Offset = "0x97DD88", VA = "0x97DD88")]
	public static void save()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x97DDF4", Offset = "0x97DDF4", VA = "0x97DDF4")]
	public void saveState(bool saveCloud = false)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x97DFF4", Offset = "0x97DFF4", VA = "0x97DFF4")]
	public void switchToCloudSave()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x97DE44", Offset = "0x97DE44", VA = "0x97DE44")]
	private void saveStateToPlatformCloud()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x97E200", Offset = "0x97E200", VA = "0x97E200")]
	public void dumpState(string file)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x97E21C", Offset = "0x97E21C", VA = "0x97E21C")]
	public List<string> allStateKeys()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x97E29C", Offset = "0x97E29C", VA = "0x97E29C")]
	public void deleteAll()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x97E2B8", Offset = "0x97E2B8", VA = "0x97E2B8")]
	public static DateTime playerDateTimeForKey(string theKey, DateTime defaultTime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x97E4A0", Offset = "0x97E4A0", VA = "0x97E4A0")]
	public static DateTime playerDateTimeForKey(string theKey)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x97E6DC", Offset = "0x97E6DC", VA = "0x97E6DC")]
	public static void setPlayerDateTimeForKey(string theKey, DateTime theDate)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x97E888", Offset = "0x97E888", VA = "0x97E888")]
	public static double playerDoubleForKey(string theKey, double defaultDouble = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x97E934", Offset = "0x97E934", VA = "0x97E934")]
	public static void setPlayerDoubleForKey(string theKey, double theDouble)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x97E9D0", Offset = "0x97E9D0", VA = "0x97E9D0")]
	public static bool playerKeyExists(string theKey)
	{
		return default(bool);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x97EAD8", Offset = "0x97EAD8", VA = "0x97EAD8")]
	public static void removePlayerKey(string theKey)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x97EA44", Offset = "0x97EA44", VA = "0x97EA44")]
	public static string playerStringForKey(string theKey, [Optional] string defaultString)
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x97EB5C", Offset = "0x97EB5C", VA = "0x97EB5C")]
	public static int playerIntForKey(string theKey, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x97EC18", Offset = "0x97EC18", VA = "0x97EC18")]
	public static float playerFloatForKey(string theKey, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x97ECD0", Offset = "0x97ECD0", VA = "0x97ECD0")]
	public static bool playerBoolForKey(string theKey, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x97ED7C", Offset = "0x97ED7C", VA = "0x97ED7C")]
	public static void setPlayerIntForKey(string theKey, int theValue)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x97EE20", Offset = "0x97EE20", VA = "0x97EE20")]
	public static int incrementPlayerIntForKey(string theKey, int incrementAmount = 1)
	{
		return default(int);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x97EEAC", Offset = "0x97EEAC", VA = "0x97EEAC")]
	public static void setPlayerFloatForKey(string theKey, float theValue)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x97EF50", Offset = "0x97EF50", VA = "0x97EF50")]
	public static void setPlayerStringForKey(string theKey, string theValue)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x97EFF4", Offset = "0x97EFF4", VA = "0x97EFF4")]
	public static void setPlayerBoolForKey(string theKey, bool theValue)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x97F0D0", Offset = "0x97F0D0", VA = "0x97F0D0")]
	public static void clearUnlockerState()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x97F15C", Offset = "0x97F15C", VA = "0x97F15C")]
	public static bool unlocksAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x97BB14", Offset = "0x97BB14", VA = "0x97BB14")]
	public static bool isLocked(GameStateLocks lockFlag)
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x97F1CC", Offset = "0x97F1CC", VA = "0x97F1CC")]
	public static bool isUnlocked(GameStateLocks lockFlag)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x97BB84", Offset = "0x97BB84", VA = "0x97BB84")]
	public static void unlockItem(GameStateLocks lockFlag)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x97F2F0", Offset = "0x97F2F0", VA = "0x97F2F0")]
	public static void lockItem(GameStateLocks lockFlag)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x97F374", Offset = "0x97F374", VA = "0x97F374")]
	public static void lockAll()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x97F424", Offset = "0x97F424", VA = "0x97F424")]
	public GameStateController()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7605A8", Offset = "0x7605A8")]
public sealed class GameStateFlags
{
	[Token(Token = "0x40006DB")]
	private const int maskCount = 32;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] upgradeMasks;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int upgradeMasksLength;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int flagInt;

	[Token(Token = "0x17000061")]
	public bool Item
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x97FD00", Offset = "0x97FD00", VA = "0x97FD00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x97FE48", Offset = "0x97FE48", VA = "0x97FE48")]
		set
		{
		}
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x97F988", Offset = "0x97F988", VA = "0x97F988")]
	private void loadMasks()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x97FAA0", Offset = "0x97FAA0", VA = "0x97FAA0")]
	private void setup(int raw)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x97FB24", Offset = "0x97FB24", VA = "0x97FB24")]
	public GameStateFlags(int rawValue)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x97FB54", Offset = "0x97FB54", VA = "0x97FB54")]
	public GameStateFlags(string key)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x97FBF8", Offset = "0x97FBF8", VA = "0x97FBF8")]
	public void save()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x97FC78", Offset = "0x97FC78", VA = "0x97FC78")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x97FCF0", Offset = "0x97FCF0", VA = "0x97FCF0")]
	public void clear(int value = 0)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x97FCF8", Offset = "0x97FCF8", VA = "0x97FCF8")]
	public int intValue()
	{
		return default(int);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x97FD9C", Offset = "0x97FD9C", VA = "0x97FD9C")]
	public bool flagIsSet(int indexNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x97FE50", Offset = "0x97FE50", VA = "0x97FE50")]
	public void setFlag(int indexNumber, bool stateValue)
	{
	}
}
[Token(Token = "0x2000114")]
public sealed class GameStateHash
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string separator;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, string> gameState;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StringBuilder saveString;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> keys;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x97FFC8", Offset = "0x97FFC8", VA = "0x97FFC8")]
	public GameStateHash(string key)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x98024C", Offset = "0x98024C", VA = "0x98024C")]
	public int stateCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x9802A4", Offset = "0x9802A4", VA = "0x9802A4")]
	public void save()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x9800D0", Offset = "0x9800D0", VA = "0x9800D0")]
	public void load()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x980550", Offset = "0x980550", VA = "0x980550")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x9804F8", Offset = "0x9804F8", VA = "0x9804F8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x9805B8", Offset = "0x9805B8", VA = "0x9805B8")]
	public float floatForKey(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x980680", Offset = "0x980680", VA = "0x980680")]
	public int intForKey(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x9806C0", Offset = "0x9806C0", VA = "0x9806C0")]
	public double doubleForKey(string key, double defaultValue = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x9805F4", Offset = "0x9805F4", VA = "0x9805F4")]
	public string stringForKey(string key, [Optional] string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x9806FC", Offset = "0x9806FC", VA = "0x9806FC")]
	public bool boolForKey(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x98073C", Offset = "0x98073C", VA = "0x98073C")]
	public void setValueForKey(string key, object valueObject)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x9807C4", Offset = "0x9807C4", VA = "0x9807C4")]
	public void removeKey(string key)
	{
	}
}
[Token(Token = "0x2000115")]
public sealed class GameStateList
{
	[Token(Token = "0x40006E5")]
	public const string separatorString = ",";

	[Token(Token = "0x40006E6")]
	public const char separatorChar = ',';

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateKey;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> gameState;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int readIndex;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x980888", Offset = "0x980888", VA = "0x980888")]
	public GameStateList(string key)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x980A24", Offset = "0x980A24", VA = "0x980A24")]
	public GameStateList(string key, string rawSave)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x980BA4", Offset = "0x980BA4", VA = "0x980BA4")]
	public int stateCount()
	{
		return default(int);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x980BF4", Offset = "0x980BF4", VA = "0x980BF4")]
	public void save()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x98092C", Offset = "0x98092C", VA = "0x98092C")]
	public void load()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x980AD0", Offset = "0x980AD0", VA = "0x980AD0")]
	public void load(string rawFile)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x980CDC", Offset = "0x980CDC", VA = "0x980CDC")]
	public void removeFromState()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x980C7C", Offset = "0x980C7C", VA = "0x980C7C")]
	public void reset()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x980D44", Offset = "0x980D44", VA = "0x980D44")]
	public float nextFloat(float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x980DF8", Offset = "0x980DF8", VA = "0x980DF8")]
	public int nextInt(int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x980EA0", Offset = "0x980EA0", VA = "0x980EA0")]
	public double nextDouble(double defaultValue = 0.0)
	{
		return default(double);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x980F54", Offset = "0x980F54", VA = "0x980F54")]
	public long nextLong(long defaultValue = 0L)
	{
		return default(long);
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x980FFC", Offset = "0x980FFC", VA = "0x980FFC")]
	public string nextString([Optional] string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x98108C", Offset = "0x98108C", VA = "0x98108C")]
	public bool nextBool(bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x981134", Offset = "0x981134", VA = "0x981134")]
	public DateTime nextDate(DateTime defaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x981260", Offset = "0x981260", VA = "0x981260")]
	public List<int> nextIntList()
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x98132C", Offset = "0x98132C", VA = "0x98132C")]
	public List<string> nextStringList()
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	public void pushListState<T>(List<T> theList)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x981408", Offset = "0x981408", VA = "0x981408")]
	public void pushState(object stateObject)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x9814A8", Offset = "0x9814A8", VA = "0x9814A8")]
	public bool contains(string stateItem)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000116")]
public enum GameStateLocks
{
	[Token(Token = "0x40006EB")]
	firstLevelTutorialComplete,
	[Token(Token = "0x40006EC")]
	hasSeenGameHub
}
[Token(Token = "0x2000117")]
public sealed class GameStateUnlocker
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x97F6C8", Offset = "0x97F6C8", VA = "0x97F6C8")]
	public GameStateUnlocker()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x97F140", Offset = "0x97F140", VA = "0x97F140")]
	public void clearState()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x981510", Offset = "0x981510", VA = "0x981510")]
	private void loadState()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x981580", Offset = "0x981580", VA = "0x981580")]
	private void saveState()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x97F3EC", Offset = "0x97F3EC", VA = "0x97F3EC")]
	public void lockAll()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x97F2A0", Offset = "0x97F2A0", VA = "0x97F2A0")]
	public bool isUnlocked(GameStateLocks flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x97F2B8", Offset = "0x97F2B8", VA = "0x97F2B8")]
	public void unlockItem(GameStateLocks flag, bool isUnlocked = true)
	{
	}
}
[Token(Token = "0x2000118")]
public class GraphicsQualityBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GraphicsQualityController controller;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x8F7D28", Offset = "0x8F7D28", VA = "0x8F7D28", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x8F7E3C", Offset = "0x8F7E3C", VA = "0x8F7E3C")]
	public GraphicsQualityBooter()
	{
	}
}
[Token(Token = "0x2000119")]
public enum AntiAliasingSetting
{
	[Token(Token = "0x40006F0")]
	None,
	[Token(Token = "0x40006F1")]
	Low,
	[Token(Token = "0x40006F2")]
	Medium,
	[Token(Token = "0x40006F3")]
	High
}
[Token(Token = "0x200011A")]
public class GraphicsQualityController : SingletonMono<GraphicsQualityController>
{
	[Token(Token = "0x40006F4")]
	private const int HighQualitySettingsLevel = 1;

	[Token(Token = "0x40006F5")]
	private const int LowQualitySettingsLevel = 0;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHighQualityGraphicsEnabled;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isPostProcessingEnabled;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool isBloomEnabled;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool isColorGradingEnabled;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isVignetteEnabled;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AntiAliasingSetting antiAliasingSetting;

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x8F7E18", Offset = "0x8F7E18", VA = "0x8F7E18")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x8F7E44", Offset = "0x8F7E44", VA = "0x8F7E44")]
	private void loadState()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x8F8104", Offset = "0x8F8104", VA = "0x8F8104")]
	private void saveState()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x8F8290", Offset = "0x8F8290", VA = "0x8F8290")]
	public void toggleGraphicQualitySetting()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x8F844C", Offset = "0x8F844C", VA = "0x8F844C")]
	public void cycleAASetting()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x8F857C", Offset = "0x8F857C", VA = "0x8F857C")]
	public void togglePostProcessing()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x8F85D0", Offset = "0x8F85D0", VA = "0x8F85D0")]
	public void toggleBloom()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x8F8624", Offset = "0x8F8624", VA = "0x8F8624")]
	public void toggleColorGrading()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x8F8678", Offset = "0x8F8678", VA = "0x8F8678")]
	public void toggleVignette()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x8F82E4", Offset = "0x8F82E4", VA = "0x8F82E4")]
	private void toggleSettingsFlag(ref bool flag, string logName)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x8F7FA8", Offset = "0x8F7FA8", VA = "0x8F7FA8")]
	private void refreshGraphicsQuality()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8F86CC", Offset = "0x8F86CC", VA = "0x8F86CC")]
	public void setGraphicsQualityToHigh()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x8F87EC", Offset = "0x8F87EC", VA = "0x8F87EC")]
	public void setGraphicsQualityToLow()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x8F8908", Offset = "0x8F8908", VA = "0x8F8908")]
	public bool isPostProcessingFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x8F891C", Offset = "0x8F891C", VA = "0x8F891C")]
	public bool isBloomFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x8F8930", Offset = "0x8F8930", VA = "0x8F8930")]
	public bool isColorGradingFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x8F8944", Offset = "0x8F8944", VA = "0x8F8944")]
	public bool isVignetteFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x8F8958", Offset = "0x8F8958", VA = "0x8F8958")]
	public AntiAliasingSetting GetAntiAliasingSetting()
	{
		return default(AntiAliasingSetting);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x8F8960", Offset = "0x8F8960", VA = "0x8F8960")]
	public bool isHighQualityFlagEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x8F7FE4", Offset = "0x8F7FE4", VA = "0x8F7FE4")]
	public bool isHighQualityPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x8F8974", Offset = "0x8F8974", VA = "0x8F8974")]
	public bool isQualitySetToHighQuality()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x8F8994", Offset = "0x8F8994", VA = "0x8F8994")]
	public GraphicsQualityController()
	{
	}
}
[Serializable]
[Token(Token = "0x200011B")]
public class Level
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string rawConfig;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string levelId;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public HashSet<string> allowedWorldIds;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int difficulty;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<WaveTickAction> sequence;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<string> spawnSet;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HashSet<string> fleetSet;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<string> preload;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int sequenceIndex;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int tickCountdown;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int waitingForCount;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int waitingForTutorial;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int deletionCount;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x905744", Offset = "0x905744", VA = "0x905744")]
	public void prepareLevelFromKey(string objectKey)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x90578C", Offset = "0x90578C", VA = "0x90578C")]
	public void prepareLevel(string rawConfig, bool processWaves, bool preloadLevel = true)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x905E40", Offset = "0x905E40", VA = "0x905E40")]
	public void resetLevel(int resumeCheckpoint)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x905C20", Offset = "0x905C20", VA = "0x905C20")]
	private void preProcessWave(string line)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x905FB8", Offset = "0x905FB8", VA = "0x905FB8")]
	private bool isValidForPreload(WaveTickAction waveAction)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x906008", Offset = "0x906008", VA = "0x906008")]
	public bool tick()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x906CA0", Offset = "0x906CA0", VA = "0x906CA0")]
	public List<string> allowedWorldsAsExportLines()
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x906DEC", Offset = "0x906DEC", VA = "0x906DEC")]
	public float levelProgressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x906E8C", Offset = "0x906E8C", VA = "0x906E8C")]
	public List<string> waveActionsAsExportLines(bool richTextColors = false)
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x9070E0", Offset = "0x9070E0", VA = "0x9070E0")]
	public List<string> spawnsInLevel()
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x907150", Offset = "0x907150", VA = "0x907150")]
	public List<string> fleetsInLevel()
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x9071C0", Offset = "0x9071C0", VA = "0x9071C0")]
	public bool isValidForWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x90723C", Offset = "0x90723C", VA = "0x90723C")]
	public void append(Level levelToAddToEnd)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x907444", Offset = "0x907444", VA = "0x907444")]
	public bool hasABossSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x9075B0", Offset = "0x9075B0", VA = "0x9075B0")]
	public bool hasAMiniBossSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x9074BC", Offset = "0x9074BC", VA = "0x9074BC")]
	private bool hasASpawnWithKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x907600", Offset = "0x907600", VA = "0x907600")]
	private bool containsASpawnKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x9076F8", Offset = "0x9076F8", VA = "0x9076F8")]
	public bool hasAPowerupSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x9077A0", Offset = "0x9077A0", VA = "0x9077A0")]
	public void addEnemiesInLevel(ref HashSet<EnemyClass> enemies)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x9078AC", Offset = "0x9078AC", VA = "0x9078AC")]
	public Level()
	{
	}
}
[Serializable]
[Token(Token = "0x200011C")]
public struct ImageIdPairings
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string id;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Mesh mesh;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite worldSprite;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite worldBossSprite;
}
[Token(Token = "0x200011D")]
public class LevelController : SingletonMono<LevelController>
{
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A44", Offset = "0x761A44")]
	private sealed class <waveRunner>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelController <>4__this;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <tickCount>5__2;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameMode <currentGameMode>5__3;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x9858D8", Offset = "0x9858D8", VA = "0x9858D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x985940", Offset = "0x985940", VA = "0x985940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x984A84", Offset = "0x984A84", VA = "0x984A84")]
		[DebuggerHidden]
		public <waveRunner>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x984AB0", Offset = "0x984AB0", VA = "0x984AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x984AB4", Offset = "0x984AB4", VA = "0x984AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x9858E0", Offset = "0x9858E0", VA = "0x9858E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A54", Offset = "0x761A54")]
	private sealed class <>c__DisplayClass126_0
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<EnemyController> enemiesToCleanup;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bullet[] allActiveBullets;

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x9848BC", Offset = "0x9848BC", VA = "0x9848BC")]
		public <>c__DisplayClass126_0()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x9848C4", Offset = "0x9848C4", VA = "0x9848C4")]
		internal void <cleanupEnemies>b__1(float alpha)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A64", Offset = "0x761A64")]
	private sealed class <>c
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyController> <>9__126_0;

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x98487C", Offset = "0x98487C", VA = "0x98487C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x984884", Offset = "0x984884", VA = "0x984884")]
		internal bool <cleanupEnemies>b__126_0(EnemyController enemy)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A74", Offset = "0x761A74")]
	private sealed class <>c__DisplayClass141_0
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x984A44", Offset = "0x984A44", VA = "0x984A44")]
		public <>c__DisplayClass141_0()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x984A4C", Offset = "0x984A4C", VA = "0x984A4C")]
		internal bool <getEnemySpriteWithName>b__0(Sprite aSprite)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400070E")]
	private const string ComboSoundLoopId = "ComboLoopId";

	[Token(Token = "0x400070F")]
	public const string PowerupCrateKey = "Collectable/powerup_crate";

	[Token(Token = "0x4000710")]
	public const string GunUpgradeKey = "Collectable/powerup_gunupgrade";

	[Token(Token = "0x4000711")]
	public const string ScoreMultiplierKey = "Collectable/powerup_scoremultiplier";

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string LevelResourcePath;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Level EditorPlaytestLevel;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Level EditorPlaytestFullLevel;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tickLength;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds delayBetweenTicks;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763EC0", Offset = "0x763EC0")]
	public List<Sprite> enemySprites;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763EF8", Offset = "0x763EF8")]
	public int ticksPerExtraRandomSpawn;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LevelContainer> levelContainers;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763F30", Offset = "0x763F30")]
	public int ticksHoldAfterMajorEvent;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763F68", Offset = "0x763F68")]
	public LevelContainer infiniteModeContainer;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763FA0", Offset = "0x763FA0")]
	public EndlessStaticEnemyMode enemySpawner;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x763FD8", Offset = "0x763FD8")]
	public List<ImageIdPairings> worldMeshPairings;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764010", Offset = "0x764010")]
	public float timeBeforeComboResets;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float comboMultiplier;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentResetTime;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float highestComboThisRun;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MappedList<WorldConfig> worlds;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WorldConfig currentWorld;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Level> allLevels;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Level> levelSetsForWorld;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Level theLevel;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int startCheckpointIndex;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentLevelProgress;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764048", Offset = "0x764048")]
	[SerializeField]
	private int enemiesDestroyedCounter;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float spawnPowerupDelaySeconds;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeAtLastPowerupSpawn;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764094", Offset = "0x764094")]
	private int <scoreThisLevel>k__BackingField;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7640A4", Offset = "0x7640A4")]
	private int <objectiveCount>k__BackingField;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, EnemySpawnPoint> allSpawns;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<string, EnemyFleetTemplate> fleetTemplates;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<EnemyController> enemiesToAddNextFrame;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<EnemyController> enemiesToRemoveNextFrame;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<EnemyController> activeEnemies;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private HashSet<string> loadedItems;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ShuffleBag<EnemyController> enemyTargetBag;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<string, int> configPreloadAmounts;

	[Token(Token = "0x17000062")]
	public int scoreThisLevel
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x90CD30", Offset = "0x90CD30", VA = "0x90CD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A8E8", Offset = "0x76A8E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x90CD38", Offset = "0x90CD38", VA = "0x90CD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A8F8", Offset = "0x76A8F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public int objectiveCount
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x90CD40", Offset = "0x90CD40", VA = "0x90CD40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A908", Offset = "0x76A908")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x90CD48", Offset = "0x90CD48", VA = "0x90CD48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A918", Offset = "0x76A918")]
		private set
		{
		}
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x90CD50", Offset = "0x90CD50", VA = "0x90CD50")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x90CEE8", Offset = "0x90CEE8", VA = "0x90CEE8", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x90CF94", Offset = "0x90CF94", VA = "0x90CF94")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x90D34C", Offset = "0x90D34C", VA = "0x90D34C")]
	private void defineWorld(Command theCommand)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x90D3DC", Offset = "0x90D3DC", VA = "0x90D3DC")]
	private void definePreloadingConfig(Command theCommand)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x90D07C", Offset = "0x90D07C", VA = "0x90D07C")]
	private void loadState()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x90D6B8", Offset = "0x90D6B8", VA = "0x90D6B8")]
	private void saveState()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x90D7DC", Offset = "0x90D7DC", VA = "0x90D7DC")]
	public void ensureWorldUnlocksAreCorrect()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x90DAC4", Offset = "0x90DAC4", VA = "0x90DAC4")]
	public int enemiesDestroyedThisLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x90DACC", Offset = "0x90DACC", VA = "0x90DACC")]
	public void prepareLevel(GameMode gameMode)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x90DB00", Offset = "0x90DB00", VA = "0x90DB00")]
	private void prepareLevel()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x90DDBC", Offset = "0x90DDBC", VA = "0x90DDBC")]
	private void prepareArcadeModeLevel()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x90DC94", Offset = "0x90DC94", VA = "0x90DC94")]
	private void prepareInfiniteModeLevel()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x90DCEC", Offset = "0x90DCEC", VA = "0x90DCEC")]
	private void prepareTutorialLevel()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x90E09C", Offset = "0x90E09C", VA = "0x90E09C")]
	private void resetTrackedLevelState(int checkpointIndex, int newObjectiveCount = 1)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x90DE70", Offset = "0x90DE70", VA = "0x90DE70")]
	private void prepareEditorTestingLevel()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x90E4B4", Offset = "0x90E4B4", VA = "0x90E4B4")]
	public void runLevel()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x90E4E0", Offset = "0x90E4E0", VA = "0x90E4E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A928", Offset = "0x76A928")]
	private IEnumerator waveRunner()
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x90DF10", Offset = "0x90DF10", VA = "0x90DF10")]
	private void updatePowerupSpawnDelay(GameMode currentGameMode)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x906A6C", Offset = "0x906A6C", VA = "0x906A6C")]
	public void checkpointReached(int checkpointIndex)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x90E55C", Offset = "0x90E55C", VA = "0x90E55C")]
	public string localizedCheckpointName(int checkpointIndex)
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x9097E4", Offset = "0x9097E4", VA = "0x9097E4")]
	public static Level levelWithName(string filename)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x90E294", Offset = "0x90E294", VA = "0x90E294")]
	public static string objectKeyForLevel(string filename)
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x90E760", Offset = "0x90E760", VA = "0x90E760")]
	public static string pathToLevelFile(string filename)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x90A45C", Offset = "0x90A45C", VA = "0x90A45C")]
	public static void saveLevelToFile(Level theLevel)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x908AAC", Offset = "0x908AAC", VA = "0x908AAC")]
	public static string rawExportOfLevel(Level theLevel, bool richTextColors = false)
	{
		return null;
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x90C2B8", Offset = "0x90C2B8", VA = "0x90C2B8")]
	public WorldConfig worldForId(string worldId, bool throwError = true)
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x90E824", Offset = "0x90E824", VA = "0x90E824")]
	public bool isValidWorldId(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x90E8A4", Offset = "0x90E8A4", VA = "0x90E8A4")]
	public List<WorldConfig> allWorldConfigs()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x90E94C", Offset = "0x90E94C", VA = "0x90E94C")]
	public Sprite worldSpriteForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x90EA94", Offset = "0x90EA94", VA = "0x90EA94")]
	public Sprite worldBossSpriteForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x90EBDC", Offset = "0x90EBDC", VA = "0x90EBDC")]
	public Mesh worldNubbinMeshForId(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x90ED24", Offset = "0x90ED24", VA = "0x90ED24")]
	public void storyModeLevelComplete(GameDifficulty currentDifficulty)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x90ED38", Offset = "0x90ED38", VA = "0x90ED38")]
	public void unlockWorld(string worldId)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x90EDEC", Offset = "0x90EDEC", VA = "0x90EDEC")]
	public void lockWorld(string worldId)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x90EEA0", Offset = "0x90EEA0", VA = "0x90EEA0")]
	public bool isWorldUnlocked(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x90E6EC", Offset = "0x90E6EC", VA = "0x90E6EC")]
	public bool isCurrentWorldSpaceWorld()
	{
		return default(bool);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x90AF08", Offset = "0x90AF08", VA = "0x90AF08")]
	public static bool isWorldIdSpaceWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x90EFF4", Offset = "0x90EFF4", VA = "0x90EFF4")]
	public int unlockedWorldCount()
	{
		return default(int);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x90F0D8", Offset = "0x90F0D8", VA = "0x90F0D8")]
	public bool hasCompletedStory()
	{
		return default(bool);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x90D4B0", Offset = "0x90D4B0", VA = "0x90D4B0")]
	public void setCurrentWorld(string worldId, bool doSave = true)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x90F1B8", Offset = "0x90F1B8", VA = "0x90F1B8")]
	public void unloadDataForCurrentWorld()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x90F604", Offset = "0x90F604", VA = "0x90F604")]
	public void loadDataForCurrentWorld()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x9100B4", Offset = "0x9100B4", VA = "0x9100B4")]
	public List<Level> allLevelsInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x90FDB4", Offset = "0x90FDB4", VA = "0x90FDB4")]
	private void preloadPowerups()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x90FA10", Offset = "0x90FA10", VA = "0x90FA10")]
	private void preloadParticleSystems()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x90FC88", Offset = "0x90FC88", VA = "0x90FC88")]
	private void preloadPlayerBullets()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x90F974", Offset = "0x90F974", VA = "0x90F974")]
	private void preloadObjects(List<string> objectList, int countPerObject)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x90FEE0", Offset = "0x90FEE0", VA = "0x90FEE0")]
	private void preloadObject(string objectKey, int countPerObject)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x90D1D4", Offset = "0x90D1D4", VA = "0x90D1D4")]
	private void populateAllLevelsList()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x9101C4", Offset = "0x9101C4", VA = "0x9101C4")]
	private bool isExcludedLevel(string levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x90F5F0", Offset = "0x90F5F0", VA = "0x90F5F0")]
	public void clearAllCheckpointProgress()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x90EF60", Offset = "0x90EF60", VA = "0x90EF60")]
	public string currentWorldId()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x910274", Offset = "0x910274", VA = "0x910274")]
	public WorldConfig getCurrentWorldConfig()
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x910330", Offset = "0x910330", VA = "0x910330")]
	public string getCurrentWorldEnemyInClass(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x9103B4", Offset = "0x9103B4", VA = "0x9103B4")]
	private List<string> getEnemiesInClassForCurrentWorld(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x9104D0", Offset = "0x9104D0", VA = "0x9104D0")]
	public string getCurrentWorldCheckpointNameLocalised()
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x90B404", Offset = "0x90B404", VA = "0x90B404")]
	public bool hasReachedFirstCheckpoint()
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x90E2E8", Offset = "0x90E2E8", VA = "0x90E2E8")]
	private void prepareSpawns()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x90E3F8", Offset = "0x90E3F8", VA = "0x90E3F8")]
	private void prepareFleets()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x910548", Offset = "0x910548", VA = "0x910548")]
	public EnemySpawnPoint spawnPoint(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x9106CC", Offset = "0x9106CC", VA = "0x9106CC")]
	private EnemyFleetTemplate fleetTemplate(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x90660C", Offset = "0x90660C", VA = "0x90660C")]
	public void spawnEnemy(WaveTickAction spawnInfo)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x910940", Offset = "0x910940", VA = "0x910940")]
	public void spawnEnemySimple(string spawnPointKey, string enemyKey, MovementType movement = MovementType.none, int loiterTicks = 0)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x910AB8", Offset = "0x910AB8", VA = "0x910AB8")]
	public EnemyController spawnEnemySimple(EnemyClass enemyClass, Vector3 spawnPosition, MovementType moveType = MovementType.stationary)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x910B10", Offset = "0x910B10", VA = "0x910B10")]
	public EnemyController spawnEnemySimple(string enemyKey, Vector3 spawnPosition, MovementType moveType = MovementType.stationary)
	{
		return null;
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x910C5C", Offset = "0x910C5C", VA = "0x910C5C")]
	public void externalEnemyWasSpawned(EnemyController newEnemy)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x906718", Offset = "0x906718", VA = "0x906718")]
	public void spawnFleetEnemy(WaveTickAction spawnInfo)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x910824", Offset = "0x910824", VA = "0x910824")]
	private void postSpawnHandling(string spawningContext, EnemyController newEnemy)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x910CC4", Offset = "0x910CC4", VA = "0x910CC4")]
	public void enemyWasRemoved(EnemyController theEnemy)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x910D2C", Offset = "0x910D2C", VA = "0x910D2C")]
	private void reconcileEnemyQueues()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x90691C", Offset = "0x90691C", VA = "0x90691C")]
	public void spawnPowerup(string spawnPointKey)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x90698C", Offset = "0x90698C", VA = "0x90698C")]
	public void spawnGunUpgrade(string spawnPointKey)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x9069FC", Offset = "0x9069FC", VA = "0x9069FC")]
	public void spawnScoreMultiplier(string spawnPointKey)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x910EB4", Offset = "0x910EB4", VA = "0x910EB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x9065BC", Offset = "0x9065BC", VA = "0x9065BC")]
	public int activeEnemyCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x911120", Offset = "0x911120", VA = "0x911120")]
	public List<EnemyController> getActiveEnemies()
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x911128", Offset = "0x911128", VA = "0x911128")]
	public void enemyWasDestroyed(EnemyController theEnemy, bool isGameplayDeath)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x9112D0", Offset = "0x9112D0", VA = "0x9112D0")]
	private bool isObjectiveComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x9112E8", Offset = "0x9112E8", VA = "0x9112E8")]
	public void stopEnemyActivity()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x9114F4", Offset = "0x9114F4", VA = "0x9114F4")]
	public void cleanupEnemies(EnemyController enemyToIgnore, float cleanupTime, bool isCleaningUpPowerupCrates = true)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x91142C", Offset = "0x91142C", VA = "0x91142C")]
	private void cleanupPowerupCrates()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x911740", Offset = "0x911740", VA = "0x911740")]
	public void cleanupLevel()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x9112E0", Offset = "0x9112E0", VA = "0x9112E0")]
	private void stopLevelRunner()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x911994", Offset = "0x911994", VA = "0x911994")]
	public void tryUpdateCombo(float amount)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x911B60", Offset = "0x911B60", VA = "0x911B60")]
	public float getHighestComboThisLife()
	{
		return default(float);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x911B68", Offset = "0x911B68", VA = "0x911B68")]
	public float comboTimeRemainingAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x911C20", Offset = "0x911C20", VA = "0x911C20")]
	public bool isComboActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x911CBC", Offset = "0x911CBC", VA = "0x911CBC")]
	public float getComboMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x910F5C", Offset = "0x910F5C", VA = "0x910F5C")]
	private void resetComboMultiplier()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x911CC4", Offset = "0x911CC4", VA = "0x911CC4")]
	public void levelWrappedUp(bool cleanupEnemies)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x911D6C", Offset = "0x911D6C", VA = "0x911D6C")]
	private void checkForReturnToLevelEditor()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x911D70", Offset = "0x911D70", VA = "0x911D70")]
	public void resetEnemyTargets()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x911E74", Offset = "0x911E74", VA = "0x911E74")]
	public EnemyController randomEnemyTarget()
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x911ECC", Offset = "0x911ECC", VA = "0x911ECC")]
	public Transform randomEnemyTransform()
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x9120A8", Offset = "0x9120A8", VA = "0x9120A8")]
	public Sprite getEnemySpriteWithName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x910CBC", Offset = "0x910CBC", VA = "0x910CBC")]
	private bool isSettingDebugContext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x912178", Offset = "0x912178", VA = "0x912178")]
	public LevelController()
	{
	}
}
[Token(Token = "0x200011E")]
public sealed class LevelControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelController itemToBoot;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x985948", Offset = "0x985948", VA = "0x985948", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x985A4C", Offset = "0x985A4C", VA = "0x985A4C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x985B34", Offset = "0x985B34", VA = "0x985B34")]
	public LevelControllerBooter()
	{
	}
}
[Token(Token = "0x200011F")]
public sealed class MTimer
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float elapsed;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int timerDidCompleteCycles;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool timerIsActive;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float effectiveDuration;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int cachedElapsedTime;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string cachedElapsedString;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cachedRemainingTime;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int cachedRemainingShortTime;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string cachedRemainingString;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string cachedRemainingStringShortFormat;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> timePairs;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder timeString;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static StringBuilder timeMinutesString;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static StringBuilder timeMinutesShort;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x990AD8", Offset = "0x990AD8", VA = "0x990AD8")]
	public MTimer(float seconds = 1f, float elapsedSeconds = 0f)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x990BF0", Offset = "0x990BF0", VA = "0x990BF0")]
	public void reset()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x990C28", Offset = "0x990C28", VA = "0x990C28")]
	public void clearCompletedCycles()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x990C0C", Offset = "0x990C0C", VA = "0x990C0C")]
	public void reset(float newDuration)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x990C30", Offset = "0x990C30", VA = "0x990C30")]
	public float scaledDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x990C38", Offset = "0x990C38", VA = "0x990C38")]
	public void setSpeedMultiplier(float scaler)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x990C4C", Offset = "0x990C4C", VA = "0x990C4C")]
	public void forceElapsedToPercent(float percent)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x990CD0", Offset = "0x990CD0", VA = "0x990CD0")]
	public float cumulativeElapsed()
	{
		return default(float);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x990B3C", Offset = "0x990B3C", VA = "0x990B3C")]
	public void incrementTimer(float deltaTime)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x990CE8", Offset = "0x990CE8", VA = "0x990CE8")]
	public float percentElapsed()
	{
		return default(float);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x990D10", Offset = "0x990D10", VA = "0x990D10")]
	public float percentRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x990D38", Offset = "0x990D38", VA = "0x990D38")]
	public string elapsedTimeString()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x990E64", Offset = "0x990E64", VA = "0x990E64")]
	public float secondsRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x990E7C", Offset = "0x990E7C", VA = "0x990E7C")]
	public string timeRemainingString()
	{
		return null;
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x99167C", Offset = "0x99167C", VA = "0x99167C")]
	public string timeRemainingStringShortFormat()
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x991A3C", Offset = "0x991A3C", VA = "0x991A3C")]
	private static void fillTimePairs()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x990DF0", Offset = "0x990DF0", VA = "0x990DF0")]
	public static string secondsToString(float intervalSeconds, bool showHours)
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x991B04", Offset = "0x991B04", VA = "0x991B04")]
	public static string zeroTime(bool showHours)
	{
		return null;
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x990F7C", Offset = "0x990F7C", VA = "0x990F7C")]
	public static string secondsToString(int intervalSeconds, bool showHours)
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x991B60", Offset = "0x991B60", VA = "0x991B60")]
	public static string secondsToMinutesAndSecondsString(int intervalSeconds)
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x991EAC", Offset = "0x991EAC", VA = "0x991EAC")]
	public static string secondsToMinutesString(int intervalSeconds)
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x9917DC", Offset = "0x9917DC", VA = "0x9917DC")]
	public static string secondsToTextString(int intervalSeconds)
	{
		return null;
	}
}
[Token(Token = "0x2000120")]
public sealed class MonoBehaviourObjectPool
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform containerParent;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Queue<GameObject>> objectPool;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, List<GameObject>> activeItems;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA0C95C", Offset = "0xA0C95C", VA = "0xA0C95C")]
	public GameObject nextObjectThatMatches(GameObject sourceObject, string objectKey, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xA0CC7C", Offset = "0xA0CC7C", VA = "0xA0CC7C")]
	public GameObject nextObjectWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xA0CFF8", Offset = "0xA0CFF8", VA = "0xA0CFF8")]
	public void returnObject(GameObject sourceTemplate)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA0D29C", Offset = "0xA0D29C", VA = "0xA0D29C")]
	public void returnObjects(List<GameObject> objectsToReturn)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA0D1B4", Offset = "0xA0D1B4", VA = "0xA0D1B4")]
	private void enqueuePoolItem(GameObject item)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA0CDA0", Offset = "0xA0CDA0", VA = "0xA0CDA0")]
	private void addActiveItem(GameObject item)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA0D134", Offset = "0xA0D134", VA = "0xA0D134")]
	private void removeActiveItem(GameObject item)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA0CF0C", Offset = "0xA0CF0C", VA = "0xA0CF0C")]
	private Queue<GameObject> getPoolQueueWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA0CE20", Offset = "0xA0CE20", VA = "0xA0CE20")]
	private List<GameObject> getActiveListWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA0D334", Offset = "0xA0D334", VA = "0xA0D334")]
	public void returnAllObjects()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA0D4B8", Offset = "0xA0D4B8", VA = "0xA0D4B8")]
	public void returnInactiveObjects()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA0D678", Offset = "0xA0D678", VA = "0xA0D678")]
	public int pooledObjectsCount(GameObject sourceObject)
	{
		return default(int);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA0D6EC", Offset = "0xA0D6EC", VA = "0xA0D6EC")]
	public int activeObjectsCount(GameObject sourceObject)
	{
		return default(int);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA0D760", Offset = "0xA0D760", VA = "0xA0D760")]
	public void destroyObjectQueuesWithKey(string poolKey)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA0D854", Offset = "0xA0D854", VA = "0xA0D854")]
	public MonoBehaviourObjectPool()
	{
	}
}
[Token(Token = "0x2000121")]
public struct PreloadingConfig
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string objectKey;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int preloadCount;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x7F4D28", Offset = "0x7F4D28", VA = "0x7F4D28")]
	public PreloadingConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x7F4D30", Offset = "0x7F4D30", VA = "0x7F4D30")]
	public string objectKeyFlipped()
	{
		return null;
	}
}
[Token(Token = "0x2000122")]
public sealed class ObjectFactory : SingletonMono<ObjectFactory>
{
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A84", Offset = "0x761A84")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject theObject;

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xA11028", Offset = "0xA11028", VA = "0xA11028")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xA11B08", Offset = "0xA11B08", VA = "0xA11B08")]
		internal void <returnObjectAfterTime>b__0()
		{
		}
	}

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform defaultObjectFactoryParent;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, GameObject> prefabMap;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MonoBehaviourObjectPool objectPool;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, TextAsset> textAssets;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, AnimationClip> animationAssets;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7640B4", Offset = "0x7640B4")]
	private Dictionary<string, int> <poolOverrunStats>k__BackingField;

	[Token(Token = "0x17000064")]
	public Dictionary<string, int> poolOverrunStats
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0xA107AC", Offset = "0xA107AC", VA = "0xA107AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A98C", Offset = "0x76A98C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000976")]
		[Address(RVA = "0xA107B4", Offset = "0xA107B4", VA = "0xA107B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A99C", Offset = "0x76A99C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static bool isAvailable
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0xA107BC", Offset = "0xA107BC", VA = "0xA107BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xA1085C", Offset = "0xA1085C", VA = "0xA1085C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA1099C", Offset = "0xA1099C", VA = "0xA1099C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA10A34", Offset = "0xA10A34", VA = "0xA10A34")]
	public static void alignObjects(GameObject parent, GameObject child)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA10AD4", Offset = "0xA10AD4", VA = "0xA10AD4")]
	public static void preloadObject(string objectKey, int count = 1)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA10C4C", Offset = "0xA10C4C", VA = "0xA10C4C")]
	public static void preloadObjects(List<string> objects, int countPerObject)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xA10CEC", Offset = "0xA10CEC", VA = "0xA10CEC")]
	public void destoryPoolObjects(string objectKey)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xA10D04", Offset = "0xA10D04", VA = "0xA10D04")]
	public static GameObject objectWithKey(string objectKey, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xA0B8E0", Offset = "0xA0B8E0", VA = "0xA0B8E0")]
	public static void returnObject(GameObject theObject)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xA10F2C", Offset = "0xA10F2C", VA = "0xA10F2C")]
	public static void returnObjectAfterTime(GameObject theObject, float time)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xA10D90", Offset = "0xA10D90", VA = "0xA10D90")]
	public GameObject pooledObject(string objectKey, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xA10C0C", Offset = "0xA10C0C", VA = "0xA10C0C")]
	public GameObject pooledObject(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA111C8", Offset = "0xA111C8", VA = "0xA111C8")]
	public GameObject pooledObject(GameObject thePrefab)
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA10E50", Offset = "0xA10E50", VA = "0xA10E50")]
	public void returnPooledObject(GameObject theObject)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA1121C", Offset = "0xA1121C", VA = "0xA1121C")]
	public void returnPooledObjects(List<GameObject> theObjects)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA11030", Offset = "0xA11030", VA = "0xA11030")]
	public GameObject prefabFromAssetPath(string theName)
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA11234", Offset = "0xA11234", VA = "0xA11234")]
	public int pooledObjectsCount(GameObject thePrefab)
	{
		return default(int);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA1124C", Offset = "0xA1124C", VA = "0xA1124C")]
	public int activeObjectsCount(GameObject thePrefab)
	{
		return default(int);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xA11264", Offset = "0xA11264", VA = "0xA11264")]
	public static TextAsset textAsset(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xA112E0", Offset = "0xA112E0", VA = "0xA112E0")]
	private TextAsset textAssetWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xA11434", Offset = "0xA11434", VA = "0xA11434")]
	public static bool hasTextAssetForKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xA11534", Offset = "0xA11534", VA = "0xA11534")]
	public static AnimationClip animationClip(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xA115B0", Offset = "0xA115B0", VA = "0xA115B0")]
	private AnimationClip animationClipWithKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xA11704", Offset = "0xA11704", VA = "0xA11704")]
	private void debugTrackPoolOverruns(object note)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xA118BC", Offset = "0xA118BC", VA = "0xA118BC")]
	public ObjectFactory()
	{
	}
}
[Token(Token = "0x2000123")]
public sealed class PersistentListener : SingletonMono<PersistentListener>
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioListener listener;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xA1FEAC", Offset = "0xA1FEAC", VA = "0xA1FEAC")]
	public static Vector3 position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xA1FF38", Offset = "0xA1FF38", VA = "0xA1FF38")]
	public PersistentListener()
	{
	}
}
[Token(Token = "0x2000124")]
public enum GameMode
{
	[Token(Token = "0x4000754")]
	Story = 0,
	[Token(Token = "0x4000755")]
	Infinite = 1,
	[Token(Token = "0x4000756")]
	Arcade = 2,
	[Token(Token = "0x4000757")]
	Tutorial = 3,
	[Token(Token = "0x4000758")]
	None = 99
}
[Token(Token = "0x2000125")]
public enum GameDifficulty
{
	[Token(Token = "0x400075A")]
	Easy,
	[Token(Token = "0x400075B")]
	Medium,
	[Token(Token = "0x400075C")]
	Hard
}
[Token(Token = "0x2000126")]
public class PlaytimeOverseer : SingletonMono<PlaytimeOverseer>
{
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761A94", Offset = "0x761A94")]
	private sealed class <>c__DisplayClass104_0
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string startingPanel;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x161FB24", Offset = "0x161FB24", VA = "0x161FB24")]
		public <>c__DisplayClass104_0()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x1621300", Offset = "0x1621300", VA = "0x1621300")]
		internal void <firstTimeLoadIntoHub>b__0()
		{
		}
	}

	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AA4", Offset = "0x761AA4")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isReturningFromTournament;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x16212F4", Offset = "0x16212F4", VA = "0x16212F4")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x162133C", Offset = "0x162133C", VA = "0x162133C")]
		internal void <OnWorldUnloadDone>b__1()
		{
		}
	}

	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AB4", Offset = "0x761AB4")]
	private sealed class <>c__DisplayClass109_0
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperationHandle<SceneInstance> handle;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x1620314", Offset = "0x1620314", VA = "0x1620314")]
		public <>c__DisplayClass109_0()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x16213B4", Offset = "0x16213B4", VA = "0x16213B4")]
		internal void <OnWorldLoadDone>b__0()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x1621800", Offset = "0x1621800", VA = "0x1621800")]
		internal void <OnWorldLoadDone>b__1()
		{
		}
	}

	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AC4", Offset = "0x761AC4")]
	private sealed class <levelSpinUpRoutine>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLaunchingLevel;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <popupId>5__2;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <popUpPosition>5__3;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private PopupTextType <textType>5__4;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x1622190", Offset = "0x1622190", VA = "0x1622190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x16221F8", Offset = "0x16221F8", VA = "0x16221F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1620734", Offset = "0x1620734", VA = "0x1620734")]
		[DebuggerHidden]
		public <levelSpinUpRoutine>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x1621894", Offset = "0x1621894", VA = "0x1621894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x1621898", Offset = "0x1621898", VA = "0x1621898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x1622198", Offset = "0x1622198", VA = "0x1622198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AD4", Offset = "0x761AD4")]
	private sealed class <runLevelDurationTimer>d__122 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaytimeOverseer <>4__this;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <nextArcadeTimeLeftPoint>5__3;

		[Token(Token = "0x1700018E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x1622528", Offset = "0x1622528", VA = "0x1622528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x1622590", Offset = "0x1622590", VA = "0x1622590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1620A34", Offset = "0x1620A34", VA = "0x1620A34")]
		[DebuggerHidden]
		public <runLevelDurationTimer>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1622200", Offset = "0x1622200", VA = "0x1622200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1622204", Offset = "0x1622204", VA = "0x1622204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1622530", Offset = "0x1622530", VA = "0x1622530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075D")]
	private const string HubAmbientSoundKey = "ENV_Lobby_main_01";

	[Token(Token = "0x400075E")]
	private const float MinimumLoadTime = 3f;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerController player;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material flashMaterial;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string defaultEnemyExplosion;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7640C4", Offset = "0x7640C4")]
	public float easyGameSpeed;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float mediumGameSpeed;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hardGameSpeed;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7640FC", Offset = "0x7640FC")]
	public int easyPlayerHealth;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int mediumPlayerHealth;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int hardPlayerHealth;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764134", Offset = "0x764134")]
	public float timeAfterLoadToStartGameplay;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76416C", Offset = "0x76416C")]
	public float globalEnemyScaleModifier;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float globalBulletScaleModifier;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641A4", Offset = "0x7641A4")]
	private bool <isPlayingLevel>k__BackingField;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641B4", Offset = "0x7641B4")]
	private bool <isRunningSceneLoading>k__BackingField;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641C4", Offset = "0x7641C4")]
	private GameMode <currentGameMode>k__BackingField;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641D4", Offset = "0x7641D4")]
	private GameDifficulty <currentGameDifficulty>k__BackingField;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641E4", Offset = "0x7641E4")]
	private float <currentBulletKillHeight>k__BackingField;

	[Token(Token = "0x4000770")]
	private const float DefaultBulletKillHeight = -20f;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameStateList stateList;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasBooted;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isGameplayPaused;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentGameplaySpeed;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameMode> unlockedGameModes;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SceneInstance terrainSceneInstance;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool justLoadedIntoWorld;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<string> keyLevelDebugEvents;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float loadingStartTime;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lowestZPosition;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LightmapData[] hubLightmapData;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7641F4", Offset = "0x7641F4")]
	private float <levelDurationSecs>k__BackingField;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764204", Offset = "0x764204")]
	private int <lifetimeEnemiesKilledStat>k__BackingField;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764214", Offset = "0x764214")]
	private int <lifetimeSaturnMissilesFiredStat>k__BackingField;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764224", Offset = "0x764224")]
	private long <lifetimeBulletsFiredStat>k__BackingField;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, GameMode> gameModeTypeMap;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, GameDifficulty> gameDifficultyTypeMap;

	[Token(Token = "0x17000066")]
	public bool isPlayingLevel
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x161CD78", Offset = "0x161CD78", VA = "0x161CD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9AC", Offset = "0x76A9AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x161CD80", Offset = "0x161CD80", VA = "0x161CD80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9BC", Offset = "0x76A9BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public bool isRunningSceneLoading
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x161CD8C", Offset = "0x161CD8C", VA = "0x161CD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9CC", Offset = "0x76A9CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x161CD94", Offset = "0x161CD94", VA = "0x161CD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9DC", Offset = "0x76A9DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public GameMode currentGameMode
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x161CDA0", Offset = "0x161CDA0", VA = "0x161CDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9EC", Offset = "0x76A9EC")]
		get
		{
			return default(GameMode);
		}
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x161CDA8", Offset = "0x161CDA8", VA = "0x161CDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9FC", Offset = "0x76A9FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public GameDifficulty currentGameDifficulty
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x161CDB0", Offset = "0x161CDB0", VA = "0x161CDB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA0C", Offset = "0x76AA0C")]
		get
		{
			return default(GameDifficulty);
		}
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x161CDB8", Offset = "0x161CDB8", VA = "0x161CDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA1C", Offset = "0x76AA1C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public float currentBulletKillHeight
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x161CDC0", Offset = "0x161CDC0", VA = "0x161CDC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA2C", Offset = "0x76AA2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x161CDC8", Offset = "0x161CDC8", VA = "0x161CDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA3C", Offset = "0x76AA3C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public float globalEnemyBulletSpeed
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0x161CDD0", Offset = "0x161CDD0", VA = "0x161CDD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006C")]
	public float levelDurationSecs
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0x161CEF0", Offset = "0x161CEF0", VA = "0x161CEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA4C", Offset = "0x76AA4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x161CEF8", Offset = "0x161CEF8", VA = "0x161CEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA5C", Offset = "0x76AA5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public int lifetimeEnemiesKilledStat
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x161CF00", Offset = "0x161CF00", VA = "0x161CF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA6C", Offset = "0x76AA6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x161CF08", Offset = "0x161CF08", VA = "0x161CF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA7C", Offset = "0x76AA7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public int lifetimeSaturnMissilesFiredStat
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x161CF10", Offset = "0x161CF10", VA = "0x161CF10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA8C", Offset = "0x76AA8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x161CF18", Offset = "0x161CF18", VA = "0x161CF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AA9C", Offset = "0x76AA9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public long lifetimeBulletsFiredStat
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x161CF20", Offset = "0x161CF20", VA = "0x161CF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AAAC", Offset = "0x76AAAC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x161CF28", Offset = "0x161CF28", VA = "0x161CF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AABC", Offset = "0x76AABC")]
		private set
		{
		}
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x161CF30", Offset = "0x161CF30", VA = "0x161CF30")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x161D004", Offset = "0x161D004", VA = "0x161D004")]
	private void loadState()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x161D6A4", Offset = "0x161D6A4", VA = "0x161D6A4")]
	private void saveState()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x161D8D8", Offset = "0x161D8D8", VA = "0x161D8D8")]
	public static PlayerController playerController()
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x161D950", Offset = "0x161D950", VA = "0x161D950")]
	public static bool gameHasBooted()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x161D9C8", Offset = "0x161D9C8", VA = "0x161D9C8")]
	public void pauseGamePlay(bool paused)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x161DB28", Offset = "0x161DB28", VA = "0x161DB28")]
	public bool gameIsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x161DB30", Offset = "0x161DB30", VA = "0x161DB30")]
	public void forceLevelEnd()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1611340", Offset = "0x1611340", VA = "0x1611340")]
	public void selectNewPilot(string pilotId, bool selectForTournament = false)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x161D5BC", Offset = "0x161D5BC", VA = "0x161D5BC")]
	public void unlockGameMode(GameMode mode, bool saveUnlock = true)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x161DB34", Offset = "0x161DB34", VA = "0x161DB34")]
	public void debugLockGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x161D3DC", Offset = "0x161D3DC", VA = "0x161D3DC")]
	public bool isGameModeFeatureInGame(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x161DC20", Offset = "0x161DC20", VA = "0x161DC20")]
	public bool isGameModeUnlocked(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x161DCA8", Offset = "0x161DCA8", VA = "0x161DCA8")]
	public static string getModeLocalisedName(GameMode mode)
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x161DD58", Offset = "0x161DD58", VA = "0x161DD58")]
	public bool isValidModeToUnlock(GameMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x161DDA4", Offset = "0x161DDA4", VA = "0x161DDA4")]
	public void updateCurrentGameMode(GameMode mode)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x161D5A4", Offset = "0x161D5A4", VA = "0x161D5A4")]
	public void updateCurrentDifficulty(GameDifficulty difficulty, bool doSave = true)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x161DEB8", Offset = "0x161DEB8", VA = "0x161DEB8")]
	public static string getLocalisedDifficultyName(GameDifficulty difficulty)
	{
		return null;
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x161DF8C", Offset = "0x161DF8C", VA = "0x161DF8C")]
	public static string getLocalisedDifficultyDescription(GameDifficulty difficulty)
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x161E060", Offset = "0x161E060", VA = "0x161E060")]
	public void resetPlayer(bool updateAudioMix = true)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x161E1CC", Offset = "0x161E1CC", VA = "0x161E1CC")]
	public void startLevel()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x161E5FC", Offset = "0x161E5FC", VA = "0x161E5FC")]
	public void multiplyGameSpeed(float amount)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x161E45C", Offset = "0x161E45C", VA = "0x161E45C")]
	public void resetGameSpeed()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x161E78C", Offset = "0x161E78C", VA = "0x161E78C")]
	public float getGameplayDelta(bool applyDifficulty = true)
	{
		return default(float);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x161E7BC", Offset = "0x161E7BC", VA = "0x161E7BC")]
	public float getGameplaySpeed(bool applyDifficulty = true)
	{
		return default(float);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x161E8C4", Offset = "0x161E8C4", VA = "0x161E8C4")]
	public float getBulletGameplaySpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x161E8D4", Offset = "0x161E8D4", VA = "0x161E8D4")]
	public float getBulletGameplayDelta()
	{
		return default(float);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x161E51C", Offset = "0x161E51C", VA = "0x161E51C")]
	private int getPlayerHealthLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x161E904", Offset = "0x161E904", VA = "0x161E904")]
	public float getGunDelayMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x161E9F0", Offset = "0x161E9F0", VA = "0x161E9F0")]
	public float getSmallEnemyChanceToFire()
	{
		return default(float);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x161EADC", Offset = "0x161EADC", VA = "0x161EADC")]
	public void levelWasCompleted()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1618160", Offset = "0x1618160", VA = "0x1618160")]
	public void levelWasFailed()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x161EDFC", Offset = "0x161EDFC", VA = "0x161EDFC")]
	private void showGameOver(bool isWin)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x161EC60", Offset = "0x161EC60", VA = "0x161EC60")]
	private void updateLifetimeStats()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x161EFB4", Offset = "0x161EFB4", VA = "0x161EFB4")]
	public Vector3 offhandPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x161F07C", Offset = "0x161F07C", VA = "0x161F07C")]
	public float distanceToOffhandPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x161F130", Offset = "0x161F130", VA = "0x161F130")]
	public bool isPlayerAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x161F14C", Offset = "0x161F14C", VA = "0x161F14C")]
	public Vector3 playerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x161F214", Offset = "0x161F214", VA = "0x161F214")]
	public float getLowestZPositionThisLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x161F248", Offset = "0x161F248", VA = "0x161F248")]
	public void loadIntoTutorial(bool fadeRequired)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x161F8AC", Offset = "0x161F8AC", VA = "0x161F8AC")]
	public void firstTimeLoadIntoHub(string startingPanel)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x161FC8C", Offset = "0x161FC8C", VA = "0x161FC8C")]
	public void loadBackIntoHub()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x161FEBC", Offset = "0x161FEBC", VA = "0x161FEBC")]
	private void OnWorldUnloadDone(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x161F39C", Offset = "0x161F39C", VA = "0x161F39C")]
	public void loadIntoWorld(bool doFade = true)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x161FF74", Offset = "0x161FF74", VA = "0x161FF74")]
	private void runLoadingSceneActions()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x162020C", Offset = "0x162020C", VA = "0x162020C")]
	private void OnWorldLoadDone(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x161FB2C", Offset = "0x161FB2C", VA = "0x161FB2C")]
	private void onBeginSceneLoadingSteps(float fadeTime)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x162031C", Offset = "0x162031C", VA = "0x162031C")]
	private void onSceneLoadingCompleteEffects(bool isLoadingIntoGameHub)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x16203A0", Offset = "0x16203A0", VA = "0x16203A0")]
	private bool isReadyToFinishSceneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x16203D8", Offset = "0x16203D8", VA = "0x16203D8")]
	public void runPregameProcess()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x162060C", Offset = "0x162060C", VA = "0x162060C")]
	public void fakePregameProcess()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x162069C", Offset = "0x162069C", VA = "0x162069C")]
	public bool doesPlayerNeedSpawning()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x162057C", Offset = "0x162057C", VA = "0x162057C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AACC", Offset = "0x76AACC")]
	private IEnumerator levelSpinUpRoutine(bool isLaunchingLevel = true)
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1620760", Offset = "0x1620760", VA = "0x1620760")]
	public bool isSpaceLevelFinalBattleActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x16204E4", Offset = "0x16204E4", VA = "0x16204E4")]
	public bool isStoryFinale()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1620784", Offset = "0x1620784", VA = "0x1620784")]
	public bool isSpaceLevelFinalBattleUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1620890", Offset = "0x1620890", VA = "0x1620890")]
	public void debugHubSceneActive(bool isActive)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1620898", Offset = "0x1620898", VA = "0x1620898")]
	private void setHubSceneActiveState(bool isActive)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x16209B8", Offset = "0x16209B8", VA = "0x16209B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AB30", Offset = "0x76AB30")]
	private IEnumerator runLevelDurationTimer()
	{
		return null;
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x161FBF0", Offset = "0x161FBF0", VA = "0x161FBF0")]
	public void playHubAmbientSounds()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x161E518", Offset = "0x161E518", VA = "0x161E518")]
	public void trackGameplayLevelEvent(string message)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x161EFB0", Offset = "0x161EFB0", VA = "0x161EFB0")]
	private void printLevelReport()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x161D2D4", Offset = "0x161D2D4", VA = "0x161D2D4")]
	public static GameMode fastParseGameMode(string raw, GameMode defaultType = GameMode.None)
	{
		return default(GameMode);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x161D49C", Offset = "0x161D49C", VA = "0x161D49C")]
	public static GameDifficulty fastParseGameDifficulty(string raw, GameDifficulty defaultType = GameDifficulty.Medium)
	{
		return default(GameDifficulty);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1620A60", Offset = "0x1620A60", VA = "0x1620A60")]
	public PlaytimeOverseer()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1620E24", Offset = "0x1620E24", VA = "0x1620E24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AB94", Offset = "0x76AB94")]
	private void <startLevel>b__84_0()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1620E50", Offset = "0x1620E50", VA = "0x1620E50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABA4", Offset = "0x76ABA4")]
	private void <loadBackIntoHub>b__105_0()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x162100C", Offset = "0x162100C", VA = "0x162100C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABB4", Offset = "0x76ABB4")]
	private void <OnWorldUnloadDone>b__106_0()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x16212FC", Offset = "0x16212FC", VA = "0x16212FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABC4", Offset = "0x76ABC4")]
	private void <loadIntoWorld>b__107_0()
	{
	}
}
[Token(Token = "0x2000127")]
public class PoolableParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem theSystem;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string soundEvent;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform sourceTransform;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float totalDuration;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action completion;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1622644", Offset = "0x1622644", VA = "0x1622644", Slot = "4")]
	public virtual void startSystem(bool autoReturnToPool)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1622778", Offset = "0x1622778", VA = "0x1622778")]
	public void returnSelfToPool()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1622794", Offset = "0x1622794", VA = "0x1622794", Slot = "5")]
	public virtual void setSource(Transform source, float rotation = 0f, float zOffset = -5f)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x16228C8", Offset = "0x16228C8", VA = "0x16228C8", Slot = "6")]
	public virtual void childToSource(Transform source, float rotation = 0f, float zOffset = -1f)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1622A30", Offset = "0x1622A30", VA = "0x1622A30")]
	public void setSystemScale(float scale)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1622B00", Offset = "0x1622B00", VA = "0x1622B00")]
	public PoolableParticleSystem()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1622B10", Offset = "0x1622B10", VA = "0x1622B10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABD4", Offset = "0x76ABD4")]
	private void <startSystem>b__5_0()
	{
	}
}
[Token(Token = "0x2000128")]
public class PostProcessingController : SingletonMono<PostProcessingController>
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Volume volume;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask renderAll;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask hideSkyBoxLayer;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ColorLookup colorLookup;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ColorCurves colorCurves;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bloom bloom;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vignette vignette;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UniversalAdditionalCameraData cameraData;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x16248B8", Offset = "0x16248B8", VA = "0x16248B8")]
	public void updateAdditionalGraphicsSettings(AntiAliasingSetting antiAliasingSetting, bool isPostProcessingEnabled, bool isBloomEnabled, bool isColorGradingEnabled, bool isVignetteEnabled)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1624CEC", Offset = "0x1624CEC", VA = "0x1624CEC")]
	public void updateColorGradeLUT(Texture lut, float contribution)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1624B70", Offset = "0x1624B70", VA = "0x1624B70")]
	private void toggleColorGrading(bool isEnabled)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1624AB0", Offset = "0x1624AB0", VA = "0x1624AB0")]
	private void toggleBloom(bool isEnabled)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1624C4C", Offset = "0x1624C4C", VA = "0x1624C4C")]
	private void toggleVignette(bool isEnabled)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1624E54", Offset = "0x1624E54", VA = "0x1624E54")]
	private void cacheColorGrading()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1624F94", Offset = "0x1624F94", VA = "0x1624F94")]
	private void cacheBloom()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x162505C", Offset = "0x162505C", VA = "0x162505C")]
	private void cacheVignette()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1625124", Offset = "0x1625124", VA = "0x1625124")]
	public PostProcessingController()
	{
	}
}
[Token(Token = "0x2000129")]
public sealed class RateMeController : SingletonMono<RateMeController>
{
	[Token(Token = "0x400078F")]
	private const int BaseLevelIncrement = 5;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateList stateList;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool userDeclinedPermission;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool userNeedsRateReward;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastRatedVersion;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime lastPromptedDate;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastPromptedLevel;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string urlConfigKey;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x9AEBB8", Offset = "0x9AEBB8", VA = "0x9AEBB8")]
	public static void showRateMeSite()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x9AEC68", Offset = "0x9AEC68", VA = "0x9AEC68")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x9AEE10", Offset = "0x9AEE10", VA = "0x9AEE10")]
	private void saveState()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x9AEF64", Offset = "0x9AEF64", VA = "0x9AEF64")]
	private string choppedVersion(string raw)
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x9AEF98", Offset = "0x9AEF98", VA = "0x9AEF98")]
	private bool userHasRatedCurrentVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x9AF030", Offset = "0x9AF030", VA = "0x9AF030")]
	public bool canShowRatePanelAfterLevelWin(int levelCompleted)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x9AF190", Offset = "0x9AF190", VA = "0x9AF190")]
	public void showRateMe(int levelCompleted)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x9AF1FC", Offset = "0x9AF1FC", VA = "0x9AF1FC")]
	private void userWasPrompted(int levelCompleted)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x9AF27C", Offset = "0x9AF27C", VA = "0x9AF27C")]
	public void userDeclined()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x9AF308", Offset = "0x9AF308", VA = "0x9AF308")]
	public void userAgreedToRate()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x9AF39C", Offset = "0x9AF39C", VA = "0x9AF39C")]
	public bool shouldRewardUser()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x9AF3A4", Offset = "0x9AF3A4", VA = "0x9AF3A4")]
	public void rewardUser()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x9AF0F8", Offset = "0x9AF0F8", VA = "0x9AF0F8")]
	private int getNextLevelToPromptInSequence()
	{
		return default(int);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x9AF438", Offset = "0x9AF438", VA = "0x9AF438")]
	public RateMeController()
	{
	}
}
[Token(Token = "0x200012A")]
public sealed class RateMeControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x9AF4DC", Offset = "0x9AF4DC", VA = "0x9AF4DC", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x9AF5E4", Offset = "0x9AF5E4", VA = "0x9AF5E4")]
	public RateMeControllerBooter()
	{
	}
}
[Token(Token = "0x200012B")]
public sealed class ResolutionController : BootableMonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float screenWidth;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform canvasRect;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CanvasScaler scaler;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didBoot;

	[Token(Token = "0x400079C")]
	private const float superThinMinRatio = 0.5625f;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764234", Offset = "0x764234")]
	private static bool <isWideScreen>k__BackingField;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764244", Offset = "0x764244")]
	private static bool <isSuperThin>k__BackingField;

	[Token(Token = "0x17000070")]
	public static bool isWideScreen
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x9AFFC8", Offset = "0x9AFFC8", VA = "0x9AFFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABE4", Offset = "0x76ABE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x9B0018", Offset = "0x9B0018", VA = "0x9B0018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ABF4", Offset = "0x76ABF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public static bool isSuperThin
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x9B0070", Offset = "0x9B0070", VA = "0x9B0070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC04", Offset = "0x76AC04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x9B00C0", Offset = "0x9B00C0", VA = "0x9B00C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC14", Offset = "0x76AC14")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x9B0118", Offset = "0x9B0118", VA = "0x9B0118", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x9B0254", Offset = "0x9B0254", VA = "0x9B0254")]
	public void updateUIScaler()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x9B0410", Offset = "0x9B0410", VA = "0x9B0410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x9B0540", Offset = "0x9B0540", VA = "0x9B0540")]
	public ResolutionController()
	{
	}
}
[Token(Token = "0x200012C")]
public enum PlayerSegment
{
	[Token(Token = "0x40007A0")]
	unknown = -1,
	[Token(Token = "0x40007A1")]
	buyer,
	[Token(Token = "0x40007A2")]
	menuBarBonusAd,
	[Token(Token = "0x40007A3")]
	hasEverLoggedIntoFacebook,
	[Token(Token = "0x40007A4")]
	hasFailedAtLeastOneLevel
}
[Token(Token = "0x200012D")]
public sealed class SegmentController : SingletonMono<SegmentController>, IPauseable
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStateFlags stateFlags;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameStateList stateList;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764254", Offset = "0x764254")]
	private int <bootCount>k__BackingField;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764264", Offset = "0x764264")]
	private int <gamesStarted>k__BackingField;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764274", Offset = "0x764274")]
	private int <gamesEnded>k__BackingField;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764284", Offset = "0x764284")]
	private int <gamesEndedSinceLastAd>k__BackingField;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764294", Offset = "0x764294")]
	private int <gamesStartedThisSession>k__BackingField;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7642A4", Offset = "0x7642A4")]
	private int <gamesEndedThisSession>k__BackingField;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7642B4", Offset = "0x7642B4")]
	private int <freeGiftsAwarded>k__BackingField;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7642C4", Offset = "0x7642C4")]
	private List<int> <levelAttempts>k__BackingField;

	[Token(Token = "0x17000072")]
	public int bootCount
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x9B31CC", Offset = "0x9B31CC", VA = "0x9B31CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC24", Offset = "0x76AC24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x9B31D4", Offset = "0x9B31D4", VA = "0x9B31D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC34", Offset = "0x76AC34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public int gamesStarted
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x9B31DC", Offset = "0x9B31DC", VA = "0x9B31DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC44", Offset = "0x76AC44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x9B31E4", Offset = "0x9B31E4", VA = "0x9B31E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC54", Offset = "0x76AC54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public int gamesEnded
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x9B31EC", Offset = "0x9B31EC", VA = "0x9B31EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC64", Offset = "0x76AC64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x9B31F4", Offset = "0x9B31F4", VA = "0x9B31F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC74", Offset = "0x76AC74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public int gamesEndedSinceLastAd
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x9B31FC", Offset = "0x9B31FC", VA = "0x9B31FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC84", Offset = "0x76AC84")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x9B3204", Offset = "0x9B3204", VA = "0x9B3204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC94", Offset = "0x76AC94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int gamesStartedThisSession
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x9B320C", Offset = "0x9B320C", VA = "0x9B320C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACA4", Offset = "0x76ACA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x9B3214", Offset = "0x9B3214", VA = "0x9B3214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACB4", Offset = "0x76ACB4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int gamesEndedThisSession
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x9B321C", Offset = "0x9B321C", VA = "0x9B321C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACC4", Offset = "0x76ACC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x9B3224", Offset = "0x9B3224", VA = "0x9B3224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACD4", Offset = "0x76ACD4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public int freeGiftsAwarded
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x9B322C", Offset = "0x9B322C", VA = "0x9B322C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACE4", Offset = "0x76ACE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x9B3234", Offset = "0x9B3234", VA = "0x9B3234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ACF4", Offset = "0x76ACF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public List<int> levelAttempts
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x9B323C", Offset = "0x9B323C", VA = "0x9B323C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AD04", Offset = "0x76AD04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x9B3244", Offset = "0x9B3244", VA = "0x9B3244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AD14", Offset = "0x76AD14")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x9B324C", Offset = "0x9B324C", VA = "0x9B324C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x9B34F0", Offset = "0x9B34F0", VA = "0x9B34F0", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9B359C", Offset = "0x9B359C", VA = "0x9B359C")]
	private void resetSessionStats()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x9B3338", Offset = "0x9B3338", VA = "0x9B3338")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x9B35A4", Offset = "0x9B35A4", VA = "0x9B35A4")]
	public void clearState()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9B35E0", Offset = "0x9B35E0", VA = "0x9B35E0")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x9B37E8", Offset = "0x9B37E8", VA = "0x9B37E8", Slot = "7")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x9B37EC", Offset = "0x9B37EC", VA = "0x9B37EC", Slot = "8")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x9B37F0", Offset = "0x9B37F0", VA = "0x9B37F0")]
	public void attemptLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x9B38D4", Offset = "0x9B38D4", VA = "0x9B38D4")]
	public int numberOfAttempts(int levelNumber)
	{
		return default(int);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x9B3960", Offset = "0x9B3960", VA = "0x9B3960")]
	public static bool isPlayerInSegment(PlayerSegment segment)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x9B39E8", Offset = "0x9B39E8", VA = "0x9B39E8")]
	public static void setPlayerInSegment(PlayerSegment segment)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x9B3A84", Offset = "0x9B3A84", VA = "0x9B3A84")]
	public static void appDidBoot()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x9B3B38", Offset = "0x9B3B38", VA = "0x9B3B38")]
	public static void gameDidStart(int levelNumber, string levelID)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x9B3C2C", Offset = "0x9B3C2C", VA = "0x9B3C2C")]
	public static void gameDidEnd()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x9B3CE8", Offset = "0x9B3CE8", VA = "0x9B3CE8")]
	public static void adDidComplete()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x9B3D60", Offset = "0x9B3D60", VA = "0x9B3D60")]
	public static bool gamedEndedSinceLastAdHasElapsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x9B3EA0", Offset = "0x9B3EA0", VA = "0x9B3EA0")]
	public static void freeGiftDidAward()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x9B3F2C", Offset = "0x9B3F2C", VA = "0x9B3F2C")]
	public SegmentController()
	{
	}
}
[Token(Token = "0x200012E")]
public sealed class SegmentControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SegmentController itemToBoot;

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x9B3FD4", Offset = "0x9B3FD4", VA = "0x9B3FD4", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x9B4128", Offset = "0x9B4128", VA = "0x9B4128")]
	public SegmentControllerBooter()
	{
	}
}
[Token(Token = "0x200012F")]
public sealed class ShareCamera : SingletonMono<ShareCamera>
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera theCamera;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform canvasRect;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage imageSVG;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text scoreLabel;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text levelLabel;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int captureWidth;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int captureHeight;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject scoreBackground;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject levelBackground;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject logo;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x164F5AC", Offset = "0x164F5AC", VA = "0x164F5AC")]
	public static void screenShot(int score, int level, [Optional] SVGAsset svgAsset, [Optional] Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x164F650", Offset = "0x164F650", VA = "0x164F650")]
	private void takeScreenShot(int score, int level, [Optional] SVGAsset svgAsset, [Optional] Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x164F828", Offset = "0x164F828", VA = "0x164F828")]
	public void adjustCamera()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x164FA44", Offset = "0x164FA44", VA = "0x164FA44")]
	public ShareCamera()
	{
	}
}
[Token(Token = "0x2000130")]
public sealed class ShareController : SingletonMono<ShareController>
{
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AE4", Offset = "0x761AE4")]
	private sealed class <DoCaptureScreenshot>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cameraToCapture;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int captureWidth;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int captureHeight;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> completionCallback;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x165052C", Offset = "0x165052C", VA = "0x165052C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x1650594", Offset = "0x1650594", VA = "0x1650594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x164FE08", Offset = "0x164FE08", VA = "0x164FE08")]
		[DebuggerHidden]
		public <DoCaptureScreenshot>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x164FEA4", Offset = "0x164FEA4", VA = "0x164FEA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x164FEA8", Offset = "0x164FEA8", VA = "0x164FEA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1650534", Offset = "0x1650534", VA = "0x1650534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BA")]
	private const string captureFilename = "ShareImage.png";

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x164FABC", Offset = "0x164FABC", VA = "0x164FABC")]
	public static bool IsSupportedPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x164FB2C", Offset = "0x164FB2C", VA = "0x164FB2C")]
	public static void CaptureScreenshot(Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x164FB6C", Offset = "0x164FB6C", VA = "0x164FB6C")]
	public static void CaptureScreenshot(Camera cameraToCapture, Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x164F97C", Offset = "0x164F97C", VA = "0x164F97C")]
	public static void CaptureScreenshot(Camera cameraToCapture, int captureWidth, int captureHeight, Action<bool> completionCallback)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x164FC64", Offset = "0x164FC64", VA = "0x164FC64")]
	public static void ShareScreenshot(string shareText)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x164FBB8", Offset = "0x164FBB8", VA = "0x164FBB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AD24", Offset = "0x76AD24")]
	private IEnumerator DoCaptureScreenshot(Camera cameraToCapture, int captureWidth, int captureHeight, Action<bool> completionCallback)
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x164FE34", Offset = "0x164FE34", VA = "0x164FE34")]
	public ShareController()
	{
	}
}
[Token(Token = "0x2000131")]
public class Shooty1LevelConverter
{
	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1650B80", Offset = "0x1650B80", VA = "0x1650B80")]
	public string convertLevel(string raw)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1650BFC", Offset = "0x1650BFC", VA = "0x1650BFC")]
	public Shooty1LevelConverter()
	{
	}
}
[Token(Token = "0x2000132")]
public sealed class SvgLibrary : SingletonMono<SvgLibrary>
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyListAttribute", RVA = "0x7642D4", Offset = "0x7642D4")]
	public AssetProxy svgs;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, SVGAsset> assetMap;

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x16031C8", Offset = "0x16031C8", VA = "0x16031C8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x160326C", Offset = "0x160326C", VA = "0x160326C")]
	public static SVGAsset svgWithName(string svgName)
	{
		return null;
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x160331C", Offset = "0x160331C", VA = "0x160331C")]
	public SvgLibrary()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1603434", Offset = "0x1603434", VA = "0x1603434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AD88", Offset = "0x76AD88")]
	private void <bootstrap>b__2_0(AssetProxyListSvgs asset)
	{
	}
}
[Token(Token = "0x2000133")]
public sealed class SvgLibraryBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1603618", Offset = "0x1603618", VA = "0x1603618", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x16036A0", Offset = "0x16036A0", VA = "0x16036A0")]
	public SvgLibraryBooter()
	{
	}
}
[Token(Token = "0x2000134")]
public sealed class TimeController : BootableMonoBehaviour
{
	[Token(Token = "0x40007BD")]
	private const float SecondsInAMinute = 60f;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MTimer> allTimers;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool needsSimulation;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MTimer> timersToSimulate;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeController sharedInstance;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double totalElapsedGameTime;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public double totalElapsedRealTime;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public double totalElapsedSessionTime;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public double totalElapsedLevelTime;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isTimingLevel;

	[Token(Token = "0x40007C7")]
	private const string elapsedKey = "tce";

	[Token(Token = "0x40007C8")]
	private const string elapsedRealKey = "tcre";

	[Token(Token = "0x40007C9")]
	private const string lkgTimeStampkey = "tclkg";

	[Token(Token = "0x40007CA")]
	private const string timestampKey = "ts1";

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TimeShenanigansKey;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool doIncrement;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool firstTime;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timestampCountdown;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime now;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimeSpan timeAway;

	[Token(Token = "0x40007D1")]
	private const string DateTimeFormat = "yyyy-MM-dd hh:mm:ss tt";

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly CultureInfo DateTimeCulture;

	[Token(Token = "0x1700007A")]
	public static TimeController instance
	{
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x1605B10", Offset = "0x1605B10", VA = "0x1605B10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1605C94", Offset = "0x1605C94", VA = "0x1605C94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1605D78", Offset = "0x1605D78", VA = "0x1605D78")]
	private void clearLists()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1605DE8", Offset = "0x1605DE8", VA = "0x1605DE8", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1605E0C", Offset = "0x1605E0C", VA = "0x1605E0C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x16060AC", Offset = "0x16060AC", VA = "0x16060AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x160617C", Offset = "0x160617C", VA = "0x160617C")]
	public static void startTimer(MTimer theTimer)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x16062E8", Offset = "0x16062E8", VA = "0x16062E8")]
	public void resetSimulationMarker(bool needToSimulate = true)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x160635C", Offset = "0x160635C", VA = "0x160635C")]
	public static DateTime notificationTimeTomorrow(int minTimeRange = 11, int maxTimeRange = 17)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1606414", Offset = "0x1606414", VA = "0x1606414")]
	public static void setNormalTimeScale(float scale)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x16064A0", Offset = "0x16064A0", VA = "0x16064A0")]
	public static void setTimeToNormal()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1606518", Offset = "0x1606518", VA = "0x1606518")]
	public static void fastForwardTime()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1606590", Offset = "0x1606590", VA = "0x1606590")]
	public static bool isFastForwardActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1606620", Offset = "0x1606620", VA = "0x1606620")]
	public static TimeSpan timeUntilLocalMiddayTomorrow()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1606774", Offset = "0x1606774", VA = "0x1606774")]
	public static TimeSpan timeUntilMidnight()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1606850", Offset = "0x1606850", VA = "0x1606850")]
	public string timeTillEndOfDayString()
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x16069DC", Offset = "0x16069DC", VA = "0x16069DC")]
	public static int GetTodayInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1606A6C", Offset = "0x1606A6C", VA = "0x1606A6C")]
	public static int GetTodayInt(TimeSpan withOffset)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1606B28", Offset = "0x1606B28", VA = "0x1606B28")]
	private static int GetIntForDate(DateTime date)
	{
		return default(int);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1606B8C", Offset = "0x1606B8C", VA = "0x1606B8C")]
	public static int GetTodayIntWithoutYear()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1606C34", Offset = "0x1606C34", VA = "0x1606C34")]
	public static int GetDaysSinceEpochInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1606D18", Offset = "0x1606D18", VA = "0x1606D18")]
	public static void endTimer(MTimer theTimer)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1606DA4", Offset = "0x1606DA4", VA = "0x1606DA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x16070DC", Offset = "0x16070DC", VA = "0x16070DC")]
	public void incrementAllTimers(int hours, int minutes, int seconds)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1606E68", Offset = "0x1606E68", VA = "0x1606E68")]
	public void incrementAllTimers(float seconds)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1607120", Offset = "0x1607120", VA = "0x1607120")]
	public int elapsedRealSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x160712C", Offset = "0x160712C", VA = "0x160712C")]
	public float elapsedRealMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1607144", Offset = "0x1607144", VA = "0x1607144")]
	public int elapsedGameSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1607150", Offset = "0x1607150", VA = "0x1607150")]
	public float elapsedGameMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1607168", Offset = "0x1607168", VA = "0x1607168")]
	public float elapsedSessionMinutes()
	{
		return default(float);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1607180", Offset = "0x1607180", VA = "0x1607180")]
	public int elapsedLevelSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x160718C", Offset = "0x160718C", VA = "0x160718C")]
	public void prepareForPause()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1606714", Offset = "0x1606714", VA = "0x1606714")]
	public static DateTime timeNow()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1607190", Offset = "0x1607190", VA = "0x1607190")]
	public string timeTillEndOfUTCDayString()
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1607380", Offset = "0x1607380", VA = "0x1607380")]
	public static DateTime getNextSensibleTimeOfDay(DateTime theTime)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1606F20", Offset = "0x1606F20", VA = "0x1606F20")]
	private void saveTimeStamps()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x16074C4", Offset = "0x16074C4", VA = "0x16074C4")]
	public void appDidReturnFromPause()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1607718", Offset = "0x1607718", VA = "0x1607718")]
	public void whileYouWereAway(TimeSpan timeAway)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x16077F0", Offset = "0x16077F0", VA = "0x16077F0")]
	private void startAwaySimulation(float totalSeconds)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x16078D4", Offset = "0x16078D4", VA = "0x16078D4")]
	private void resetSessionStats()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x160786C", Offset = "0x160786C", VA = "0x160786C")]
	private void incrementAwayTime(float secondsAway)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1607958", Offset = "0x1607958", VA = "0x1607958")]
	private void cloudTimeHasBeenMessedWith()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1607A84", Offset = "0x1607A84", VA = "0x1607A84")]
	public static string howLongAgo(string rawTimestamp)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1607BE8", Offset = "0x1607BE8", VA = "0x1607BE8")]
	public static string howLongAgo(TimeSpan span)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1607D60", Offset = "0x1607D60", VA = "0x1607D60")]
	public static DateTime parseDate(string dateTimeString, string format = "yyyy-MM-dd hh:mm:ss tt")
	{
		return default(DateTime);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1607EA4", Offset = "0x1607EA4", VA = "0x1607EA4")]
	public static string getTimeUntilTimerEndsString(MTimer timer)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x16082FC", Offset = "0x16082FC", VA = "0x16082FC")]
	public static string getTimeUntilString(DateTime date)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1607F5C", Offset = "0x1607F5C", VA = "0x1607F5C")]
	public static string getTimeUntilTimespanEndsString(TimeSpan time)
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x16083C8", Offset = "0x16083C8", VA = "0x16083C8")]
	public static string getLocalisedNameForMonth(DateTime dateTime)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1608728", Offset = "0x1608728", VA = "0x1608728")]
	public TimeController()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x16088C4", Offset = "0x16088C4", VA = "0x16088C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AD98", Offset = "0x76AD98")]
	private void <bootstrapDidComplete>b__22_0()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x16088D0", Offset = "0x16088D0", VA = "0x16088D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADA8", Offset = "0x76ADA8")]
	private void <bootstrapDidComplete>b__22_1()
	{
	}
}
[Token(Token = "0x2000135")]
public enum WaveTickActionType
{
	[Token(Token = "0x40007D4")]
	none = 0,
	[Token(Token = "0x40007D5")]
	waitForClear = 1,
	[Token(Token = "0x40007D6")]
	waitForTicks = 2,
	[Token(Token = "0x40007D7")]
	waitForLast = 3,
	[Token(Token = "0x40007D8")]
	spawn = 4,
	[Token(Token = "0x40007D9")]
	fleetSpawn = 5,
	[Token(Token = "0x40007DA")]
	powerupSpawn = 6,
	[Token(Token = "0x40007DB")]
	levelCheckpoint = 7,
	[Token(Token = "0x40007DC")]
	gunUpgradeSpawn = 8,
	[Token(Token = "0x40007DD")]
	scoreMultiplier = 10,
	[Token(Token = "0x40007DE")]
	bossCallout = 9,
	[Token(Token = "0x40007DF")]
	waitForTutorialStep = 90,
	[Token(Token = "0x40007E0")]
	tutorialMessage = 91,
	[Token(Token = "0x40007E1")]
	progressTheTutorial = 92
}
[Serializable]
[Token(Token = "0x2000136")]
public class WaveTickAction : IComparable
{
	[Serializable]
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761AF4", Offset = "0x761AF4")]
	private sealed class <>c
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<string> <>9__18_0;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<string> <>9__18_1;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<string> <>9__28_0;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<string> <>9__29_0;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1500560", Offset = "0x1500560", VA = "0x1500560")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1500568", Offset = "0x1500568", VA = "0x1500568")]
		internal bool <setLoiterCount>b__18_0(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x15005C4", Offset = "0x15005C4", VA = "0x15005C4")]
		internal bool <setLoiterCount>b__18_1(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1500620", Offset = "0x1500620", VA = "0x1500620")]
		internal bool <setHeightOverride>b__28_0(string arg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x150067C", Offset = "0x150067C", VA = "0x150067C")]
		internal bool <updateGunOverride>b__29_0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B04", Offset = "0x761B04")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moveType;

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x14FF990", Offset = "0x14FF990", VA = "0x14FF990")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x15006D8", Offset = "0x15006D8", VA = "0x15006D8")]
		internal bool <hasMoveArg>b__0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B14", Offset = "0x761B14")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moveType;

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x14FFBE8", Offset = "0x14FFBE8", VA = "0x14FFBE8")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1500750", Offset = "0x1500750", VA = "0x1500750")]
		internal bool <updateMoveArg>b__0(string arg)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007E2")]
	public const string GunIdArgPrefix = "gunOverride";

	[Token(Token = "0x40007E3")]
	public const string LoiterArgPrefix = "loiter";

	[Token(Token = "0x40007E4")]
	public const string HeightOverrideArgPrefix = "heightOverride";

	[Token(Token = "0x40007E5")]
	public const string WiggleMoveSuffix = "wiggle";

	[Token(Token = "0x40007E6")]
	public const string TrackToPlayerMoveSuffix = "trackToPlayer";

	[Token(Token = "0x40007E7")]
	public const string SplineJumpingSuffix = "jumpBetweenSplines";

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveTickActionType actionType;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string spawnPoint;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string objectKey;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fleetTemplate;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int fleetIndex;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> spawnArgs;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, WaveTickActionType> waveTickActionTypeMap;

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x14FEAA4", Offset = "0x14FEAA4", VA = "0x14FEAA4")]
	public WaveTickAction(Command theCommand)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x14FEEDC", Offset = "0x14FEEDC", VA = "0x14FEEDC")]
	public WaveTickAction(WaveTickActionType theAction, int num = 0, [Optional] string spawn, [Optional] string obj)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x14FEF9C", Offset = "0x14FEF9C", VA = "0x14FEF9C")]
	public WaveTickAction makeCopy()
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x14FF04C", Offset = "0x14FF04C", VA = "0x14FF04C")]
	public string exportString()
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x14FF3E4", Offset = "0x14FF3E4", VA = "0x14FF3E4")]
	public int getLoiterCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x14FF520", Offset = "0x14FF520", VA = "0x14FF520")]
	public void setLoiterCount(int count)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x14FF7D0", Offset = "0x14FF7D0", VA = "0x14FF7D0")]
	public bool isWiggleMoveEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x14FF8F0", Offset = "0x14FF8F0", VA = "0x14FF8F0")]
	public bool isTrackToPlayerEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x14FF940", Offset = "0x14FF940", VA = "0x14FF940")]
	public bool isSplineJumpingEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x14FF820", Offset = "0x14FF820", VA = "0x14FF820")]
	private bool hasMoveArg(string moveType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x14FF998", Offset = "0x14FF998", VA = "0x14FF998")]
	public void setWiggleMoveState(bool isEnabled)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x14FFB28", Offset = "0x14FFB28", VA = "0x14FFB28")]
	public void setTrackToPlayer(bool isEnabled)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x14FFB88", Offset = "0x14FFB88", VA = "0x14FFB88")]
	public void setSplineJumping(bool isEnabled)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x14FF9F8", Offset = "0x14FF9F8", VA = "0x14FF9F8")]
	private void updateMoveArg(string moveType, bool isEnabled)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x14FFBF0", Offset = "0x14FFBF0", VA = "0x14FFBF0")]
	public int getHeightOverrideInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x14FFD2C", Offset = "0x14FFD2C", VA = "0x14FFD2C")]
	public void setHeightOverride(int heightOverride)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x14FFEA8", Offset = "0x14FFEA8", VA = "0x14FFEA8")]
	public void updateGunOverride(string gunId)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1500010", Offset = "0x1500010", VA = "0x1500010")]
	public string getGunOverride()
	{
		return null;
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x14FEDD4", Offset = "0x14FEDD4", VA = "0x14FEDD4")]
	public static WaveTickActionType fastParseWaveTickAction(string raw, WaveTickActionType defaultType)
	{
		return default(WaveTickActionType);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1500134", Offset = "0x1500134", VA = "0x1500134", Slot = "4")]
	public int CompareTo(object other)
	{
		return default(int);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1500240", Offset = "0x1500240", VA = "0x1500240")]
	private bool isSpawnType()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1500254", Offset = "0x1500254", VA = "0x1500254")]
	private bool isTickWait()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1500264", Offset = "0x1500264", VA = "0x1500264")]
	private bool isOtherWait()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000137")]
public class WorldConfig
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764338", Offset = "0x764338")]
	private string <worldId>k__BackingField;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764348", Offset = "0x764348")]
	private int <worldOrder>k__BackingField;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764358", Offset = "0x764358")]
	private string <worldToUnlockId>k__BackingField;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764368", Offset = "0x764368")]
	private string <pilotToUnlockId>k__BackingField;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764378", Offset = "0x764378")]
	private string <modeToUnlockId>k__BackingField;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string objectFolderId;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string terrainSceneId;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764388", Offset = "0x764388")]
	private string <worldMinibossLevel>k__BackingField;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string musicSoundKey;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string ambientSoundKey;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string bossMusicSoundKey;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameStateList stateList;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764398", Offset = "0x764398")]
	private bool <isUnlocked>k__BackingField;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7643A8", Offset = "0x7643A8")]
	private int <completionCount>k__BackingField;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7643B8", Offset = "0x7643B8")]
	private string <selectedPilotId>k__BackingField;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameDifficulty> completedDifficulties;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<EnemyClass, List<string>> enemyGroupMapping;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private HashSet<string> commonEnemies;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HashSet<string> rareEnemies;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HashSet<string> enemyBullets;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool checkpointOneUnlocked;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool checkpointTwoUnlocked;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool bossCheckpointUnlocked;

	[Token(Token = "0x1700007B")]
	public string worldId
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x1500AF8", Offset = "0x1500AF8", VA = "0x1500AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADB8", Offset = "0x76ADB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1500B00", Offset = "0x1500B00", VA = "0x1500B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADC8", Offset = "0x76ADC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public int worldOrder
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1500B08", Offset = "0x1500B08", VA = "0x1500B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADD8", Offset = "0x76ADD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1500B10", Offset = "0x1500B10", VA = "0x1500B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADE8", Offset = "0x76ADE8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public string worldToUnlockId
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1500B18", Offset = "0x1500B18", VA = "0x1500B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76ADF8", Offset = "0x76ADF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1500B20", Offset = "0x1500B20", VA = "0x1500B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE08", Offset = "0x76AE08")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public string pilotToUnlockId
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x1500B28", Offset = "0x1500B28", VA = "0x1500B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE18", Offset = "0x76AE18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x1500B30", Offset = "0x1500B30", VA = "0x1500B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE28", Offset = "0x76AE28")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public string modeToUnlockId
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1500B38", Offset = "0x1500B38", VA = "0x1500B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE38", Offset = "0x76AE38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1500B40", Offset = "0x1500B40", VA = "0x1500B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE48", Offset = "0x76AE48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public string worldMinibossLevel
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1500B48", Offset = "0x1500B48", VA = "0x1500B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE58", Offset = "0x76AE58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1500B50", Offset = "0x1500B50", VA = "0x1500B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE68", Offset = "0x76AE68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public bool isUnlocked
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x1500B58", Offset = "0x1500B58", VA = "0x1500B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE78", Offset = "0x76AE78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1500B60", Offset = "0x1500B60", VA = "0x1500B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE88", Offset = "0x76AE88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public int completionCount
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1500B6C", Offset = "0x1500B6C", VA = "0x1500B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AE98", Offset = "0x76AE98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1500B74", Offset = "0x1500B74", VA = "0x1500B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AEA8", Offset = "0x76AEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public string selectedPilotId
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1500B7C", Offset = "0x1500B7C", VA = "0x1500B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AEB8", Offset = "0x76AEB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1500B84", Offset = "0x1500B84", VA = "0x1500B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AEC8", Offset = "0x76AEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public string worldNumber
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1500B8C", Offset = "0x1500B8C", VA = "0x1500B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1500C10", Offset = "0x1500C10", VA = "0x1500C10")]
	public WorldConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1500E38", Offset = "0x1500E38", VA = "0x1500E38")]
	public void loadState()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1501100", Offset = "0x1501100", VA = "0x1501100")]
	public void saveState()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1501204", Offset = "0x1501204", VA = "0x1501204")]
	public void unlock()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x15012A8", Offset = "0x15012A8", VA = "0x15012A8")]
	public void lockWorld()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x15013BC", Offset = "0x15013BC", VA = "0x15013BC")]
	public bool tryUnlockCheckpoint(int checkpointIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x150141C", Offset = "0x150141C", VA = "0x150141C")]
	public bool isCheckpointUnlocked(int checkpointIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1501524", Offset = "0x1501524", VA = "0x1501524")]
	public void worldCompletedInStoryMode(GameDifficulty currentDifficulty)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1501690", Offset = "0x1501690", VA = "0x1501690")]
	public void clearAllCheckpointProgress()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x150169C", Offset = "0x150169C", VA = "0x150169C")]
	public int getHighestCheckpointIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x15016C4", Offset = "0x15016C4", VA = "0x15016C4")]
	public static float progressAlphaForCheckpointIndex(int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1501700", Offset = "0x1501700", VA = "0x1501700")]
	public float getCurrentProgressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1501740", Offset = "0x1501740", VA = "0x1501740")]
	public void setupWorldEnemyMappings()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x1501C70", Offset = "0x1501C70", VA = "0x1501C70")]
	public void setSelectedPilot(PilotConfig pilot)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1501F24", Offset = "0x1501F24", VA = "0x1501F24")]
	public string localisedWorldName()
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1501FAC", Offset = "0x1501FAC", VA = "0x1501FAC")]
	public string terrainScenePath()
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1502000", Offset = "0x1502000", VA = "0x1502000")]
	public bool hasEnemiesFor(EnemyClass enemyClass)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x15020A4", Offset = "0x15020A4", VA = "0x15020A4")]
	public bool hasCompletedDifficulty(GameDifficulty difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1502128", Offset = "0x1502128", VA = "0x1502128")]
	public List<string> getEnemiesFor(EnemyClass enemyClass)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x150225C", Offset = "0x150225C", VA = "0x150225C")]
	public List<string> getCommonEnemies()
	{
		return null;
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x15022CC", Offset = "0x15022CC", VA = "0x15022CC")]
	public List<string> getRareEnemies()
	{
		return null;
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x150233C", Offset = "0x150233C", VA = "0x150233C")]
	public List<string> getEnemyBulletList()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x15023AC", Offset = "0x15023AC", VA = "0x15023AC")]
	public string localisedWorldBossName()
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1502434", Offset = "0x1502434", VA = "0x1502434")]
	public string localisedWorldMinibossName()
	{
		return null;
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1501C1C", Offset = "0x1501C1C", VA = "0x1501C1C")]
	private string enemyResourcesFolderPath()
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x15024BC", Offset = "0x15024BC", VA = "0x15024BC")]
	public int enemyClassCount(EnemyClass enemyClass)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1502548", Offset = "0x1502548", VA = "0x1502548")]
	public void playWorldMusic()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x150260C", Offset = "0x150260C", VA = "0x150260C")]
	public void playWorldBossMusic()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x15026D0", Offset = "0x15026D0", VA = "0x15026D0")]
	public void playWorldAmbience()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1502750", Offset = "0x1502750", VA = "0x1502750")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AED8", Offset = "0x76AED8")]
	private bool <setupWorldEnemyMappings>b__64_0(string enemyPath)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000138")]
public class WorldUIBanner : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text bannerLabel;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleAnimator mover;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SimpleAnimationMoveToWorldPosition positioner;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isHiding;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1503674", Offset = "0x1503674", VA = "0x1503674")]
	public void showBanner(string content, float viewportY = 0.55f, [Optional] Action complete)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x150382C", Offset = "0x150382C", VA = "0x150382C")]
	public void hideBanner([Optional] Action complete)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x15039C4", Offset = "0x15039C4", VA = "0x15039C4")]
	public WorldUIBanner()
	{
	}
}
[Token(Token = "0x2000139")]
public class DebugPoolOverrunFeed : MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text feedLabel;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRPlayspace space;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x9575D0", Offset = "0x9575D0", VA = "0x9575D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x957888", Offset = "0x957888", VA = "0x957888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x957608", Offset = "0x957608", VA = "0x957608")]
	private void updateFeed()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x9579E8", Offset = "0x9579E8", VA = "0x9579E8")]
	private void clearFeed()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x957A44", Offset = "0x957A44", VA = "0x957A44")]
	public DebugPoolOverrunFeed()
	{
	}
}
[Token(Token = "0x200013A")]
public class DebugControllerState : MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text debugLabel;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShootyVRHandController[] handControllers;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x956254", Offset = "0x956254", VA = "0x956254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x956288", Offset = "0x956288", VA = "0x956288")]
	private string brightnessState()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x956520", Offset = "0x956520", VA = "0x956520")]
	public DebugControllerState()
	{
	}
}
[Token(Token = "0x200013B")]
public class DesignSceneUIRunner : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string panelToShow;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x958F08", Offset = "0x958F08", VA = "0x958F08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x958F90", Offset = "0x958F90", VA = "0x958F90")]
	public DesignSceneUIRunner()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x958FF8", Offset = "0x958FF8", VA = "0x958FF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AEE8", Offset = "0x76AEE8")]
	private void <OnEnable>b__2_0()
	{
	}
}
[Token(Token = "0x200013C")]
public class EnemyGunBuilder : MonoBehaviour
{
	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x974BF0", Offset = "0x974BF0", VA = "0x974BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x974CAC", Offset = "0x974CAC", VA = "0x974CAC")]
	public static void saveGunConfigToFile(GunConfig gunConfig)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x9720E0", Offset = "0x9720E0", VA = "0x9720E0")]
	public static GunConfig loadConfigWithId(string gunId)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x97502C", Offset = "0x97502C", VA = "0x97502C")]
	public static GunConfig loadConfigFromPath(string fullPath)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x974FD4", Offset = "0x974FD4", VA = "0x974FD4")]
	public static GunConfig loadConfigFromFactory(string gunId)
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x975168", Offset = "0x975168", VA = "0x975168")]
	public static List<GunConfig> allGunConfigs()
	{
		return null;
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x975378", Offset = "0x975378", VA = "0x975378")]
	private static string pathToGunsFolder()
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x974F20", Offset = "0x974F20", VA = "0x974F20")]
	private static string fullPathToGunFile(string gunId)
	{
		return null;
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x9750C4", Offset = "0x9750C4", VA = "0x9750C4")]
	private static string objectKeyForGunId(string gunId)
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x975418", Offset = "0x975418", VA = "0x975418")]
	public EnemyGunBuilder()
	{
	}
}
[Token(Token = "0x200013D")]
public class GunBuilderCameraCycler : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachineVirtualCamera[] cameras;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int cameraIndex;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x8F8B18", Offset = "0x8F8B18", VA = "0x8F8B18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x8F8C64", Offset = "0x8F8C64", VA = "0x8F8C64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x8F8CFC", Offset = "0x8F8CFC", VA = "0x8F8CFC")]
	private void cycleCameras()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x8F8BF8", Offset = "0x8F8BF8", VA = "0x8F8BF8")]
	private void updateCameras()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x8F8D30", Offset = "0x8F8D30", VA = "0x8F8D30")]
	public GunBuilderCameraCycler()
	{
	}
}
[Token(Token = "0x200013E")]
public class SplinePrefabCreator : MonoBehaviour
{
	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1602118", Offset = "0x1602118", VA = "0x1602118")]
	public SplinePrefabCreator()
	{
	}
}
[Token(Token = "0x200013F")]
public class SplineUpdateManager : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<ShootyVRSplinePath> allSplinePathPrefabInstances;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<ShootyVRSplinePath> splinePathPrefabRefs;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color splineActiveColor;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color splineInactiveColor;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1602120", Offset = "0x1602120", VA = "0x1602120")]
	public void updateAllSplinePaths()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x16022A8", Offset = "0x16022A8", VA = "0x16022A8")]
	public SplineUpdateManager()
	{
	}
}
[Token(Token = "0x2000140")]
public sealed class EconomyBooter : BootableMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B24", Offset = "0x761B24")]
	private sealed class <>c
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x95B5C4", Offset = "0x95B5C4", VA = "0x95B5C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x95B5CC", Offset = "0x95B5CC", VA = "0x95B5CC")]
		internal void <bootstrapDidComplete>b__1_0()
		{
		}
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x95B138", Offset = "0x95B138", VA = "0x95B138", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x95B344", Offset = "0x95B344", VA = "0x95B344", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x95B554", Offset = "0x95B554", VA = "0x95B554")]
	public EconomyBooter()
	{
	}
}
[Token(Token = "0x2000141")]
public sealed class EconomyItem
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemID;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int itemIDint;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int coinCount;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string nonCoinRewards;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string expandedNonCoinRewards;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string localizationID;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string editorPrice;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool visibleInMainShop;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool visibleInMiniShop;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool isPromotedItem;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool availableInSpecials;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxPurchaseCount;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string purchaseType;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string svgIconIdSuffix;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string calloutLocId;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int shopSortOrder;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string calloutLocIdMiniShop;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int miniShopSortOrder;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7643E8", Offset = "0x7643E8")]
	private bool <isStarterPack>k__BackingField;

	[Token(Token = "0x17000085")]
	public bool isStarterPack
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x95D638", Offset = "0x95D638", VA = "0x95D638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AEF8", Offset = "0x76AEF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x95D640", Offset = "0x95D640", VA = "0x95D640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF08", Offset = "0x76AF08")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x95C1E4", Offset = "0x95C1E4", VA = "0x95C1E4")]
	public EconomyItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x95D64C", Offset = "0x95D64C", VA = "0x95D64C")]
	public bool justCoins()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x95D670", Offset = "0x95D670", VA = "0x95D670")]
	public bool hasCallout(bool miniShop = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x95D6B0", Offset = "0x95D6B0", VA = "0x95D6B0")]
	public string localizedCallout(bool miniShop = false)
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x95CFE0", Offset = "0x95CFE0", VA = "0x95CFE0")]
	public bool shouldBeShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x95D75C", Offset = "0x95D75C", VA = "0x95D75C")]
	public bool hasReachedMaxPurchaseCount()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x95D800", Offset = "0x95D800", VA = "0x95D800")]
	public string localizedDescription()
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x95DA68", Offset = "0x95DA68", VA = "0x95DA68")]
	public string localizedDescription(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x95DB70", Offset = "0x95DB70", VA = "0x95DB70")]
	public string localizedAppStoreDescription(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x95D898", Offset = "0x95D898", VA = "0x95D898")]
	private string formatLocalizedDescription(string description)
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x95DC98", Offset = "0x95DC98", VA = "0x95DC98")]
	public List<string> rewards(bool includeCoins = true)
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x95DE44", Offset = "0x95DE44", VA = "0x95DE44")]
	public void awardItems(string source)
	{
	}
}
[Token(Token = "0x2000142")]
public sealed class EconomyController : SingletonMono<EconomyController>
{
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B34", Offset = "0x761B34")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> success;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string> fail;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x95B778", Offset = "0x95B778", VA = "0x95B778")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x95D4C4", Offset = "0x95D4C4", VA = "0x95D4C4")]
		internal void <startPurchaseWithWaitUI>b__0(string context)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x95D540", Offset = "0x95D540", VA = "0x95D540")]
		internal void <startPurchaseWithWaitUI>b__1(string context)
		{
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B44", Offset = "0x761B44")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> restoreCompletion;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x95CA64", Offset = "0x95CA64", VA = "0x95CA64")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x95D5C8", Offset = "0x95D5C8", VA = "0x95D5C8")]
		internal void <restorePurchases>b__0(bool result)
		{
		}
	}

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IAPWrapper biller;

	[Token(Token = "0x400082C")]
	private const string ShopIconPrefix = "shop_icon_";

	[Token(Token = "0x400082D")]
	private const string BannerIconPrefix = "shopbanner_icon_";

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyListAttribute", RVA = "0x7643F8", Offset = "0x7643F8")]
	public AssetProxy bundleImageLibrary;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool billerIsReady;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SVGAsset> bundleImages;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameStateList stateList;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> durableItems;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, int> purchaseCounts;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, EconomyItem> economyItemDefinitions;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int consumableItemsDefined;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int durableItemsDefined;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<string> buyItemFail;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<string> buyItemSuccess;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action billerStarted;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x95B63C", Offset = "0x95B63C", VA = "0x95B63C")]
	public static void startPurchaseWithWaitUI(string itemID, Action<string> success, Action<string> fail)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x95B1D4", Offset = "0x95B1D4", VA = "0x95B1D4")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x95B95C", Offset = "0x95B95C", VA = "0x95B95C")]
	private void setBiller()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x95BC98", Offset = "0x95BC98", VA = "0x95BC98")]
	public int durableItemDefinitionCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x95BCA0", Offset = "0x95BCA0", VA = "0x95BCA0")]
	public bool durableItemIsUnlocked(string itemID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x95BD64", Offset = "0x95BD64", VA = "0x95BD64")]
	public void unlockDurableItem(string itemID)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x95BA34", Offset = "0x95BA34", VA = "0x95BA34")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x95BE48", Offset = "0x95BE48", VA = "0x95BE48")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x95C0AC", Offset = "0x95C0AC", VA = "0x95C0AC")]
	private void defineConsumableItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x95C55C", Offset = "0x95C55C", VA = "0x95C55C")]
	private void defineDurableItem(Command theCommand)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x95C694", Offset = "0x95C694", VA = "0x95C694")]
	public EconomyItem economyItemWithID(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x95C778", Offset = "0x95C778", VA = "0x95C778")]
	public List<EconomyItem> allEconomyItems()
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x95C808", Offset = "0x95C808", VA = "0x95C808")]
	public int economyItemPurchaseCount(string itemID, bool idAlreadyToLowered = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x95C4E8", Offset = "0x95C4E8", VA = "0x95C4E8")]
	public void addIAP(string iapType, string iapID)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x95B480", Offset = "0x95B480", VA = "0x95B480")]
	public void startBiller(Action billerFinishedLoadingAction)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x95C8B0", Offset = "0x95C8B0", VA = "0x95C8B0")]
	private void billerDidBoot(bool success)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x95C980", Offset = "0x95C980", VA = "0x95C980")]
	public void restoreItem(string restoredItemID)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x95C984", Offset = "0x95C984", VA = "0x95C984")]
	public void restorePurchases(Action<bool> restoreCompletion)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x95B780", Offset = "0x95B780", VA = "0x95B780")]
	private void inAppPurchase(string itemID, Action<string> success, Action<string> fail)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x95CA6C", Offset = "0x95CA6C", VA = "0x95CA6C")]
	private void purchaseWasGood(string itemID)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x95CB78", Offset = "0x95CB78", VA = "0x95CB78")]
	private void purchaseWasBad(string itemID)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x95CC24", Offset = "0x95CC24", VA = "0x95CC24")]
	private void purchaseWasCancelled(string itemID)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x95CCD0", Offset = "0x95CCD0", VA = "0x95CCD0")]
	public static string priceStringForItem(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x95CDC0", Offset = "0x95CDC0", VA = "0x95CDC0")]
	public static bool canShowStore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x95CE90", Offset = "0x95CE90", VA = "0x95CE90")]
	public static bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x95CF08", Offset = "0x95CF08", VA = "0x95CF08")]
	public static EconomyItem getActiveStarterPack()
	{
		return null;
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x95D0C4", Offset = "0x95D0C4", VA = "0x95D0C4")]
	public SVGAsset iconForItem(EconomyItem theItem, bool isShop)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x95D2BC", Offset = "0x95D2BC", VA = "0x95D2BC")]
	public EconomyController()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x95D414", Offset = "0x95D414", VA = "0x95D414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF18", Offset = "0x76AF18")]
	private void <bootstrap>b__16_0(AssetProxyListSvgs asset)
	{
	}
}
[Token(Token = "0x2000143")]
public sealed class MIAPProduct
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string storeID;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool consumable;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x98E5F4", Offset = "0x98E5F4", VA = "0x98E5F4")]
	public MIAPProduct(string storeID, bool consumable)
	{
	}
}
[Token(Token = "0x2000144")]
public class IAPWrapper
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<bool> iapInitCompleted;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<string> purchaseSuccess;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<string> purchaseFail;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<MIAPProduct> mightyDefinedProducts;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x8FE36C", Offset = "0x8FE36C", VA = "0x8FE36C")]
	public void defineIAP(string iapType, string itemID)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x8FE454", Offset = "0x8FE454", VA = "0x8FE454", Slot = "4")]
	public virtual void startIAP()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x8FE4B8", Offset = "0x8FE4B8", VA = "0x8FE4B8", Slot = "5")]
	public virtual void startPurchase(string itemID)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x8FE544", Offset = "0x8FE544", VA = "0x8FE544", Slot = "6")]
	public virtual void restorePurchases(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x8FE5A8", Offset = "0x8FE5A8", VA = "0x8FE5A8", Slot = "7")]
	public virtual string localizedPrice(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x8FE614", Offset = "0x8FE614", VA = "0x8FE614", Slot = "8")]
	public virtual bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x8FE4BC", Offset = "0x8FE4BC", VA = "0x8FE4BC")]
	protected void purchaseFailureInBiller(string context)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x8FE61C", Offset = "0x8FE61C", VA = "0x8FE61C")]
	protected void purchaseSuccessInBiller(string context)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x8FE6A4", Offset = "0x8FE6A4", VA = "0x8FE6A4")]
	public IAPWrapper()
	{
	}
}
[Token(Token = "0x2000145")]
public sealed class TestbotIAPWrapper : IAPWrapper
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B54", Offset = "0x761B54")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TestbotIAPWrapper <>4__this;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string itemID;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x16057B4", Offset = "0x16057B4", VA = "0x16057B4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1605A90", Offset = "0x1605A90", VA = "0x1605A90")]
		internal void <fakePurchase>b__0()
		{
		}
	}

	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B64", Offset = "0x761B64")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x16058AC", Offset = "0x16058AC", VA = "0x16058AC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x1605AB4", Offset = "0x1605AB4", VA = "0x1605AB4")]
		internal void <restorePurchases>b__0()
		{
		}
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1605570", Offset = "0x1605570", VA = "0x1605570", Slot = "4")]
	public override void startIAP()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x160560C", Offset = "0x160560C", VA = "0x160560C", Slot = "5")]
	public override void startPurchase(string itemID)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x16056B0", Offset = "0x16056B0", VA = "0x16056B0")]
	private void fakePurchase(string itemID)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x16057BC", Offset = "0x16057BC", VA = "0x16057BC", Slot = "6")]
	public override void restorePurchases(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x16058B4", Offset = "0x16058B4", VA = "0x16058B4", Slot = "7")]
	public override string localizedPrice(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x160598C", Offset = "0x160598C", VA = "0x160598C", Slot = "8")]
	public override bool canMakePurchase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1605994", Offset = "0x1605994", VA = "0x1605994")]
	public MIAPProduct productWithID(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1605A88", Offset = "0x1605A88", VA = "0x1605A88")]
	public TestbotIAPWrapper()
	{
	}
}
[Token(Token = "0x2000146")]
public class EnemyBossInvulnerabilityController : EnemyBossAction
{
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B74", Offset = "0x761B74")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossInvulnerabilityController <>4__this;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInvulnerable;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x9653C4", Offset = "0x9653C4", VA = "0x9653C4")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x965594", Offset = "0x965594", VA = "0x965594")]
		internal void <setInvulnerableState>b__0()
		{
		}
	}

	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B84", Offset = "0x761B84")]
	private sealed class <waveRunner>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level theLevel;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <delayBetweenTicks>5__2;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x9656E8", Offset = "0x9656E8", VA = "0x9656E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x965750", Offset = "0x965750", VA = "0x965750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x965558", Offset = "0x965558", VA = "0x965558")]
		[DebuggerHidden]
		public <waveRunner>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x9655BC", Offset = "0x9655BC", VA = "0x9655BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x9655C0", Offset = "0x9655C0", VA = "0x9655C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x9656F0", Offset = "0x9656F0", VA = "0x9656F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000840")]
	private const string ShieldActiveParameter = "ShieldActive";

	[Token(Token = "0x4000841")]
	private const string ShieldInactiveParameter = "ShieldInactive";

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76445C", Offset = "0x76445C")]
	public float secondsToBeVulnerable;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float secondsToBeInvulnerable;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool bossStartsWithShield;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764494", Offset = "0x764494")]
	public Animator shieldAnimationController;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer shieldRenderer;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material shieldMaterial;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7644CC", Offset = "0x7644CC")]
	public GameObject shieldColliders;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764504", Offset = "0x764504")]
	public List<string> levelsToSpawn;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine waveRunnerCoroutine;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x96515C", Offset = "0x96515C", VA = "0x96515C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x9653BC", Offset = "0x9653BC", VA = "0x9653BC", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x965198", Offset = "0x965198", VA = "0x965198")]
	private void setInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x9653CC", Offset = "0x9653CC", VA = "0x9653CC")]
	private void runLevel()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x9654DC", Offset = "0x9654DC", VA = "0x9654DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AF28", Offset = "0x76AF28")]
	private IEnumerator waveRunner(Level theLevel)
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x965584", Offset = "0x965584", VA = "0x965584")]
	public EnemyBossInvulnerabilityController()
	{
	}
}
[Token(Token = "0x2000147")]
public class EnemyBossSizeChanging : EnemyBossAction
{
	[Serializable]
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761B94", Offset = "0x761B94")]
	private sealed class <>c
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyController> <>9__31_0;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x967990", Offset = "0x967990", VA = "0x967990")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x967998", Offset = "0x967998", VA = "0x967998")]
		internal bool <countdownUntilNextScale>b__31_0(EnemyController enemy)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BA4", Offset = "0x761BA4")]
	private sealed class <spawnPhaseEnemies>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBossSizeChanging <>4__this;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numberOfEnemiesToSpawn>5__2;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<EnemyClass> <enemyTypes>5__3;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x967BA4", Offset = "0x967BA4", VA = "0x967BA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x967C0C", Offset = "0x967C0C", VA = "0x967C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x967878", Offset = "0x967878", VA = "0x967878")]
		[DebuggerHidden]
		public <spawnPhaseEnemies>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x9679E0", Offset = "0x9679E0", VA = "0x9679E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x9679E4", Offset = "0x9679E4", VA = "0x9679E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x967BAC", Offset = "0x967BAC", VA = "0x967BAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76453C", Offset = "0x76453C")]
	public float smallSizePercentage;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleChangeSpeed;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764574", Offset = "0x764574")]
	public bool doEnemiesPreventChange;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeBeforeSpawning;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeBetweenSpawns;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EnemyClass> enemyTypesToSpawn;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numberOfEnemiesToSpawnMin;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numberOfEnemiesToSpawnMax;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7645AC", Offset = "0x7645AC")]
	public List<EnemyClass> hardEnemyTypesToSpawn;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hardNumberOfEnemiesToSpawnMin;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int hardNumberOfEnemiesToSpawnMax;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7645E4", Offset = "0x7645E4")]
	public float bigSizeMoveSpeed;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float smallSizeMoveSpeed;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76461C", Offset = "0x76461C")]
	public GameObject bigCollider;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject smallCollider;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764654", Offset = "0x764654")]
	public float timeAsBigSize;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeAsSmallSize;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 bigScale;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 smallScale;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float defaultMoveSpeed;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 targetScale;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float countdown;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool bootstrapped;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool isRunningLoop;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool isHardEnemies;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<EnemyController> phaseEnemies;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EndlessStaticEnemyMode enemySpawner;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x966E80", Offset = "0x966E80", VA = "0x966E80", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x9670C0", Offset = "0x9670C0", VA = "0x9670C0", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x9671C8", Offset = "0x9671C8", VA = "0x9671C8", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x9671D8", Offset = "0x9671D8", VA = "0x9671D8", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x967304", Offset = "0x967304", VA = "0x967304")]
	private void countdownUntilNextScale()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x9675A8", Offset = "0x9675A8", VA = "0x9675A8")]
	private void scaleTowardsTarget()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x96773C", Offset = "0x96773C", VA = "0x96773C")]
	private bool isSmall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x9677E0", Offset = "0x9677E0", VA = "0x9677E0")]
	private bool canTaunt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x967234", Offset = "0x967234", VA = "0x967234")]
	private bool isAtTargetScale()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x9670D0", Offset = "0x9670D0", VA = "0x9670D0")]
	private void setSize(bool isSmall)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x9677FC", Offset = "0x9677FC", VA = "0x9677FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AF8C", Offset = "0x76AF8C")]
	private IEnumerator spawnPhaseEnemies()
	{
		return null;
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x9678A4", Offset = "0x9678A4", VA = "0x9678A4")]
	private List<EnemyClass> getEnemyTypes()
	{
		return null;
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x9678C0", Offset = "0x9678C0", VA = "0x9678C0")]
	private int getNumberOfEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x9678F4", Offset = "0x9678F4", VA = "0x9678F4")]
	public EnemyBossSizeChanging()
	{
	}
}
[Token(Token = "0x2000148")]
public class EnemyBossAction : MonoBehaviour
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected EnemyController myController;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isUpdating;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool needsInit;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastHealth;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x961908", Offset = "0x961908", VA = "0x961908", Slot = "4")]
	public virtual void resetBossAction()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x9619C0", Offset = "0x9619C0", VA = "0x9619C0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x961AE0", Offset = "0x961AE0", VA = "0x961AE0", Slot = "6")]
	public virtual void bossHealth(float percent)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x961AE4", Offset = "0x961AE4", VA = "0x961AE4", Slot = "7")]
	public virtual void bossInit()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x961AE8", Offset = "0x961AE8", VA = "0x961AE8", Slot = "8")]
	public virtual void loseFullHealth()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x961AEC", Offset = "0x961AEC", VA = "0x961AEC", Slot = "9")]
	public virtual void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x961AF0", Offset = "0x961AF0", VA = "0x961AF0", Slot = "10")]
	public virtual void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x961AF4", Offset = "0x961AF4", VA = "0x961AF4", Slot = "11")]
	public virtual void bossDidDie()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x961AF8", Offset = "0x961AF8", VA = "0x961AF8")]
	public EnemyBossAction()
	{
	}
}
[Token(Token = "0x2000149")]
public class EnemyBossActivateGun : EnemyBossAction
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyGun targetGun;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isShootingStageOne;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isShootingStageTwo;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool isShootingStageThree;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x961B00", Offset = "0x961B00", VA = "0x961B00", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x961BB8", Offset = "0x961BB8", VA = "0x961BB8", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x961BC0", Offset = "0x961BC0", VA = "0x961BC0", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x961B08", Offset = "0x961B08", VA = "0x961B08")]
	private void setGunFiringState(bool isShooting)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x961BC8", Offset = "0x961BC8", VA = "0x961BC8")]
	public EnemyBossActivateGun()
	{
	}
}
[Token(Token = "0x200014A")]
public class EnemyBossArgs : EnemyBossAction
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fullHealthArgs;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string halfHealthArgs;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tenPercentHealthArgs;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x9621AC", Offset = "0x9621AC", VA = "0x9621AC", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x9621B8", Offset = "0x9621B8", VA = "0x9621B8")]
	private void changeArgs(string raw)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x9621BC", Offset = "0x9621BC", VA = "0x9621BC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x9621C8", Offset = "0x9621C8", VA = "0x9621C8", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x9621D4", Offset = "0x9621D4", VA = "0x9621D4")]
	public EnemyBossArgs()
	{
	}
}
[Token(Token = "0x200014B")]
public class EnemyBossDeathTiming : EnemyBossAction
{
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BB4", Offset = "0x761BB4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x962728", Offset = "0x962728", VA = "0x962728")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x962AC0", Offset = "0x962AC0", VA = "0x962AC0")]
		internal void <runDeathAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BC4", Offset = "0x761BC4")]
	private sealed class <flashLoop>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitShort>5__2;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__3;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x962F2C", Offset = "0x962F2C", VA = "0x962F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x962F94", Offset = "0x962F94", VA = "0x962F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x962A24", Offset = "0x962A24", VA = "0x962A24")]
		[DebuggerHidden]
		public <flashLoop>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x962E08", Offset = "0x962E08", VA = "0x962E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x962E0C", Offset = "0x962E0C", VA = "0x962E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x962F34", Offset = "0x962F34", VA = "0x962F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BD4", Offset = "0x761BD4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossDeathTiming <>4__this;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x962A50", Offset = "0x962A50", VA = "0x962A50")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x962B88", Offset = "0x962B88", VA = "0x962B88")]
		internal void <deathDelayEffect>b__0()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x962C80", Offset = "0x962C80", VA = "0x962C80")]
		internal void <deathDelayEffect>b__1()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x962D78", Offset = "0x962D78", VA = "0x962D78")]
		internal void <deathDelayEffect>b__2()
		{
		}
	}

	[Token(Token = "0x4000871")]
	private const float DelayBeforeDeath = 2.25f;

	[Token(Token = "0x4000872")]
	private const float CleanupTime = 0.25f;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76468C", Offset = "0x76468C")]
	public bool runFlashEffect;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string delayVFX;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform delayVFXOffset;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine flashRoutine;

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x962528", Offset = "0x962528", VA = "0x962528", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x9625C4", Offset = "0x9625C4", VA = "0x9625C4")]
	private void runDeathAfterDelay(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x9629A8", Offset = "0x9629A8", VA = "0x9629A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AFF0", Offset = "0x76AFF0")]
	private IEnumerator flashLoop()
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x962730", Offset = "0x962730", VA = "0x962730")]
	private void deathDelayEffect()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x962A58", Offset = "0x962A58", VA = "0x962A58")]
	public EnemyBossDeathTiming()
	{
	}
}
[Token(Token = "0x200014C")]
public enum GunFiringRules
{
	[Token(Token = "0x4000878")]
	None,
	[Token(Token = "0x4000879")]
	OnlyFireWhenStationary,
	[Token(Token = "0x400087A")]
	OnlyFireWhenMoving
}
[Token(Token = "0x200014D")]
public class EnemyBossGunController : EnemyBossAction
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyGun mainGun;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnemyGun altGun;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected EnemyGun specialBossGun;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7646C4", Offset = "0x7646C4")]
	public bool stageOneFireGun;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GunFiringRules stageOneMainRule;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool stageOneFireAltGun;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GunFiringRules stageOneAltRule;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool stageOneFireSpecialGun;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GunFiringRules stageOneSpecialRule;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7646FC", Offset = "0x7646FC")]
	public bool stageTwoFireGun;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GunFiringRules stageTwoMainRule;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool stageTwoFireAltGun;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GunFiringRules stageTwoAltRule;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool stageTwoFireSpecialGun;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GunFiringRules stageTwoSpecialRule;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764734", Offset = "0x764734")]
	public bool stageThreeFireGun;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GunFiringRules stageThreeMainRule;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool stageThreeFireAltGun;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GunFiringRules stageThreeAltRule;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool stageThreeFireSpecialGun;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GunFiringRules stageThreeSpecialRule;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x962F9C", Offset = "0x962F9C", VA = "0x962F9C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x96311C", Offset = "0x96311C", VA = "0x96311C", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x963158", Offset = "0x963158", VA = "0x963158", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x9630C4", Offset = "0x9630C4", VA = "0x9630C4")]
	private void updateAllFiringStates(bool isFiringGun, bool isFiringAltGun, bool isFiringSpecialGun)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x96306C", Offset = "0x96306C", VA = "0x96306C")]
	private void updateFiringRules(GunFiringRules mainGunRule, GunFiringRules altGunRule, GunFiringRules specialGunRule)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x963194", Offset = "0x963194", VA = "0x963194")]
	private void updateFiringStates(EnemyGun targetGun, bool isFiring)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x96328C", Offset = "0x96328C", VA = "0x96328C")]
	private void updateGunFiringRule(EnemyGun theGun, GunFiringRules rule)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x9633B4", Offset = "0x9633B4", VA = "0x9633B4")]
	private bool isBossStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x963468", Offset = "0x963468", VA = "0x963468")]
	private bool isBossMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x963484", Offset = "0x963484", VA = "0x963484")]
	public EnemyBossGunController()
	{
	}
}
[Token(Token = "0x200014E")]
public class EnemyBossHealthBar : EnemyBossAction
{
	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x964FA4", Offset = "0x964FA4", VA = "0x964FA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x965020", Offset = "0x965020", VA = "0x965020", Slot = "6")]
	public override void bossHealth(float percent)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x9650D8", Offset = "0x9650D8", VA = "0x9650D8", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x965154", Offset = "0x965154", VA = "0x965154")]
	public EnemyBossHealthBar()
	{
	}
}
[Serializable]
[Token(Token = "0x200014F")]
public struct EnemyBossModelSwapSet
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ModelSwapAnimation modelSwapAnimator;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject[] fullHealthModels;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] stageTwoHealthModels;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] stageThreeHealthModels;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x7EFD8C", Offset = "0x7EFD8C", VA = "0x7EFD8C")]
	public void changeTheModels(GameObject[] newFrames)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x7EFD94", Offset = "0x7EFD94", VA = "0x7EFD94")]
	public void deactivateModels()
	{
	}
}
[Token(Token = "0x2000150")]
public class EnemyBossModelSwap : EnemyBossAction
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyBossModelSwapSet[] modelSwapSets;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x9667A4", Offset = "0x9667A4", VA = "0x9667A4", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x966888", Offset = "0x966888", VA = "0x966888", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x966900", Offset = "0x966900", VA = "0x966900", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x966978", Offset = "0x966978", VA = "0x966978")]
	public EnemyBossModelSwap()
	{
	}
}
[Token(Token = "0x2000151")]
public class EnemyBossMoveSpeed : EnemyBossAction
{
	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76476C", Offset = "0x76476C")]
	public float baseMoveSpeed;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float firstSpeedUp;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float secondSpeedUp;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7647A4", Offset = "0x7647A4")]
	public float transitionRateForSpeed;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitOnTimeChange;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetMoveSpeed;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeUntilUpdateAllowed;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x966A80", Offset = "0x966A80", VA = "0x966A80", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x966ABC", Offset = "0x966ABC", VA = "0x966ABC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x966AFC", Offset = "0x966AFC", VA = "0x966AFC", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x966B3C", Offset = "0x966B3C", VA = "0x966B3C", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x966BD4", Offset = "0x966BD4", VA = "0x966BD4", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x966CD4", Offset = "0x966CD4", VA = "0x966CD4")]
	public EnemyBossMoveSpeed()
	{
	}
}
[Token(Token = "0x2000152")]
public class EnemyBossPlayBossMusic : EnemyBossAction
{
	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x966CE8", Offset = "0x966CE8", VA = "0x966CE8", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x966D78", Offset = "0x966D78", VA = "0x966D78")]
	public EnemyBossPlayBossMusic()
	{
	}
}
[Token(Token = "0x2000153")]
public class EnemyBossSecondaryModelSwap : EnemyBossAction
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fullHealthModel;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject stageTwoHealthModel;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject stageThreeHealthModel;

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x966D80", Offset = "0x966D80", VA = "0x966D80", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x966E68", Offset = "0x966E68", VA = "0x966E68", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x966E70", Offset = "0x966E70", VA = "0x966E70", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x966D88", Offset = "0x966D88", VA = "0x966D88")]
	private void changeTheModels(GameObject modelToSwapIn)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x966E78", Offset = "0x966E78", VA = "0x966E78")]
	public EnemyBossSecondaryModelSwap()
	{
	}
}
[Token(Token = "0x2000154")]
public class EnemyBossSoundProgression : EnemyBossAction
{
	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x967C14", Offset = "0x967C14", VA = "0x967C14", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x967C78", Offset = "0x967C78", VA = "0x967C78", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x967D94", Offset = "0x967D94", VA = "0x967D94", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x967D34", Offset = "0x967D34", VA = "0x967D34")]
	public static string StageTwoSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x967E50", Offset = "0x967E50", VA = "0x967E50")]
	public static string StageThreeSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x967EB0", Offset = "0x967EB0", VA = "0x967EB0")]
	public EnemyBossSoundProgression()
	{
	}
}
[Token(Token = "0x2000155")]
public class EnemyBossSplineChange : EnemyBossAction
{
	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool isOverridingStageOneType;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public MovementType overrideMovementTypeStageOne;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7647FC", Offset = "0x7647FC")]
	public string splineObjectKeyStageTwo;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MovementType movementTypeStageTwo;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764834", Offset = "0x764834")]
	public string splineObjectKeyStageThree;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MovementType movementTypeStageThree;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x968364", Offset = "0x968364", VA = "0x968364", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x9683A8", Offset = "0x9683A8", VA = "0x9683A8", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x968500", Offset = "0x968500", VA = "0x968500", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x9683B4", Offset = "0x9683B4", VA = "0x9683B4")]
	private void tryAttachToSpline(string splineKey, MovementType movementType)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x96850C", Offset = "0x96850C", VA = "0x96850C")]
	public EnemyBossSplineChange()
	{
	}
}
[Token(Token = "0x2000156")]
public class EnemyBossTaunt : EnemyBossAction
{
	[Token(Token = "0x40008A5")]
	private const string TauntPopupId = "EnemyBossTaunt";

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76486C", Offset = "0x76486C")]
	public string[] stage01Taunts;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] stage02Taunts;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] stage03Taunts;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7648A4", Offset = "0x7648A4")]
	public string shootTaunt;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float chanceForShootTauntShow;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7648DC", Offset = "0x7648DC")]
	public Transform tauntMessageTransform;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform shootTauntMessagePos;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764914", Offset = "0x764914")]
	public float minTimeBetweenTaunts;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxTimeBetweenTaunts;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] currentTaunts;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeForNextTaunt;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isTauntingAllowed;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x968748", Offset = "0x968748", VA = "0x968748", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x96889C", Offset = "0x96889C", VA = "0x96889C", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x96896C", Offset = "0x96896C", VA = "0x96896C", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x968980", Offset = "0x968980", VA = "0x968980", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x968994", Offset = "0x968994", VA = "0x968994", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x968D1C", Offset = "0x968D1C", VA = "0x968D1C")]
	public void tauntOnShoot()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x968A9C", Offset = "0x968A9C", VA = "0x968A9C")]
	private string selectTauntMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x968B6C", Offset = "0x968B6C", VA = "0x968B6C")]
	private void popTauntMessage(Transform pos, string taunt, float time)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x968854", Offset = "0x968854", VA = "0x968854")]
	private void reset()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x968DFC", Offset = "0x968DFC", VA = "0x968DFC")]
	private bool canShowShootTaunt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x968EBC", Offset = "0x968EBC", VA = "0x968EBC")]
	public void setTauntingState(bool isAllowed)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x968EC8", Offset = "0x968EC8", VA = "0x968EC8")]
	public EnemyBossTaunt()
	{
	}
}
[Token(Token = "0x2000157")]
public class EnemyBossTransitionAnimation : EnemyBossAction
{
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BE4", Offset = "0x761BE4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x9692A4", Offset = "0x9692A4", VA = "0x9692A4")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x969618", Offset = "0x969618", VA = "0x969618")]
		internal void <fullHealth>b__0()
		{
		}
	}

	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761BF4", Offset = "0x761BF4")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x969448", Offset = "0x969448", VA = "0x969448")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x9696A4", Offset = "0x9696A4", VA = "0x9696A4")]
		internal void <stageTwoHealth>b__0()
		{
		}
	}

	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C04", Offset = "0x761C04")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossTransitionAnimation <>4__this;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x9695EC", Offset = "0x9695EC", VA = "0x9695EC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x969730", Offset = "0x969730", VA = "0x969730")]
		internal void <stageThreeHealth>b__0()
		{
		}
	}

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip[] fullHealthClips;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip[] stageTwoHealthClips;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip[] stageThreeHealthClips;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation targetAnimation;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool secondaryAnimation;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasSetStartPosForSecondaryAnim;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPosSecondaryAnim;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion startRotationSecondaryAnim;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasAddedClips;

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x968EE8", Offset = "0x968EE8", VA = "0x968EE8", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x969118", Offset = "0x969118", VA = "0x969118")]
	public void fullHealth()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x9692AC", Offset = "0x9692AC", VA = "0x9692AC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x969450", Offset = "0x969450", VA = "0x969450", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x9695F4", Offset = "0x9695F4", VA = "0x9695F4", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x969610", Offset = "0x969610", VA = "0x969610")]
	public EnemyBossTransitionAnimation()
	{
	}
}
[Token(Token = "0x2000158")]
public class EnemyBossWaveSpawning : EnemyBossAction
{
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C14", Offset = "0x761C14")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossWaveSpawning <>4__this;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int phase;

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x96C13C", Offset = "0x96C13C", VA = "0x96C13C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x96C3CC", Offset = "0x96C3CC", VA = "0x96C3CC")]
		internal void <runNextStageSpawning>b__0()
		{
		}
	}

	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C24", Offset = "0x761C24")]
	private sealed class <waveRunner>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level theLevel;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossWaveSpawning <>4__this;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int phase;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <delayBetweenTicks>5__2;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <interval>5__3;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x96C658", Offset = "0x96C658", VA = "0x96C658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x96C6C0", Offset = "0x96C6C0", VA = "0x96C6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x96C390", Offset = "0x96C390", VA = "0x96C390")]
		[DebuggerHidden]
		public <waveRunner>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x96C3EC", Offset = "0x96C3EC", VA = "0x96C3EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x96C3F0", Offset = "0x96C3F0", VA = "0x96C3F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x96C660", Offset = "0x96C660", VA = "0x96C660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76494C", Offset = "0x76494C")]
	public List<string> stageOneLevels;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> stageTwoLevels;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> stageThreeLevels;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764984", Offset = "0x764984")]
	public int intervalWaitBetweenSets;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7649BC", Offset = "0x7649BC")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7649F4", Offset = "0x7649F4")]
	public float delaySecondsBeforeStart;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delaySecondsAfterPhaseChange;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764A2C", Offset = "0x764A2C")]
	public bool cleanupEnemiesOnPhaseChange;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EnemyBossHeadController headController;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine waveRunnerCoroutine;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<string> currentWaves;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string previousWave;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x96BEA0", Offset = "0x96BEA0", VA = "0x96BEA0", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x96C0C4", Offset = "0x96C0C4", VA = "0x96C0C4", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x96C0FC", Offset = "0x96C0FC", VA = "0x96C0FC", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x96C134", Offset = "0x96C134", VA = "0x96C134", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x96BF70", Offset = "0x96BF70", VA = "0x96BF70")]
	private void runNextStageSpawning(int phase, float delay)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x96C144", Offset = "0x96C144", VA = "0x96C144")]
	private void runWaveSpawning(int phase)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x96C2F0", Offset = "0x96C2F0", VA = "0x96C2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B054", Offset = "0x76B054")]
	private IEnumerator waveRunner(Level theLevel, int phase)
	{
		return null;
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x96C3BC", Offset = "0x96C3BC", VA = "0x96C3BC")]
	public EnemyBossWaveSpawning()
	{
	}
}
[Token(Token = "0x2000159")]
public class EnemyBossMinionCycle : EnemyBossAction
{
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C34", Offset = "0x761C34")]
	private sealed class <runCycle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool initialWait;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossMinionCycle <>4__this;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitBetweenSpawn>5__2;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> <bandmatePool>5__3;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> <splinesPool>5__4;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds <waitForEnemies>5__5;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__6;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x966734", Offset = "0x966734", VA = "0x966734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x96679C", Offset = "0x96679C", VA = "0x96679C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x965C40", Offset = "0x965C40", VA = "0x965C40")]
		[DebuggerHidden]
		public <runCycle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x966250", Offset = "0x966250", VA = "0x966250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x966254", Offset = "0x966254", VA = "0x966254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x96673C", Offset = "0x96673C", VA = "0x96673C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C44", Offset = "0x761C44")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startAlpha;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endAlpha;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossMinionCycle <>4__this;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x966080", Offset = "0x966080", VA = "0x966080")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x966198", Offset = "0x966198", VA = "0x966198")]
		internal void <updateInvulnerableState>b__0(float lerpAlpha)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x966230", Offset = "0x966230", VA = "0x966230")]
		internal void <updateInvulnerableState>b__1()
		{
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemySpawnPoint restingPoint;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764A64", Offset = "0x764A64")]
	public float waitForClearLevelDelay;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float initialDelay;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764A9C", Offset = "0x764A9C")]
	public float delayBetweenBandSpawns;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> bandmateSpawnKeys;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764AD4", Offset = "0x764AD4")]
	public float timeSpentMoving;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public MovementType movementType;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> splinesToUse;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764B0C", Offset = "0x764B0C")]
	public float fastMoveSpeed;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float normalMoveSpeed;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764B44", Offset = "0x764B44")]
	public float fadeAlpha;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject theCollider;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int bandmateCount;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x96595C", Offset = "0x96595C", VA = "0x96595C", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x965B90", Offset = "0x965B90", VA = "0x965B90", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x965BA0", Offset = "0x965BA0", VA = "0x965BA0", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x965B50", Offset = "0x965B50", VA = "0x965B50")]
	private void startNewCycle(bool initialWait = false)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x965BB0", Offset = "0x965BB0", VA = "0x965BB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B0B8", Offset = "0x76B0B8")]
	private IEnumerator runCycle(bool initialWait)
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x965C6C", Offset = "0x965C6C", VA = "0x965C6C")]
	private void enterRestingPhase()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x965E8C", Offset = "0x965E8C", VA = "0x965E8C")]
	private void enterMoveAroundPhase()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x965D44", Offset = "0x965D44", VA = "0x965D44")]
	private void updateInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x966088", Offset = "0x966088", VA = "0x966088")]
	private bool canMakeTaunts()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x9660A4", Offset = "0x9660A4", VA = "0x9660A4")]
	private void setTransparencyAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x966164", Offset = "0x966164", VA = "0x966164")]
	public EnemyBossMinionCycle()
	{
	}
}
[Token(Token = "0x200015A")]
public class BossTentacleSpawnPositions : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> spawnPositionsForTentacles;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color gizmoColor;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x9BF964", Offset = "0x9BF964", VA = "0x9BF964")]
	public List<Vector3> spawnPositions()
	{
		return null;
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x9BFAD4", Offset = "0x9BFAD4", VA = "0x9BFAD4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x9BFC54", Offset = "0x9BFC54", VA = "0x9BFC54")]
	public BossTentacleSpawnPositions()
	{
	}
}
[Token(Token = "0x200015B")]
public class EnemyBossMallMinions : EnemyBossAction
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764B7C", Offset = "0x764B7C")]
	public GameObject itemStageTwo;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform minionSpawnPositionStageTwo;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string minionSplineStageTwo;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764BB4", Offset = "0x764BB4")]
	public GameObject itemStageThree;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform minionSpawnPositionStageThree;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string minionSplineStageThree;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x965758", Offset = "0x965758", VA = "0x965758", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x9657A0", Offset = "0x9657A0", VA = "0x9657A0", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x965838", Offset = "0x965838", VA = "0x965838")]
	private void processStage(GameObject itemToToggle, string minionKey, Vector3 spawnPosition, string splineKey)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x965954", Offset = "0x965954", VA = "0x965954")]
	public EnemyBossMallMinions()
	{
	}
}
[Token(Token = "0x200015C")]
public class EnemyBossTurret : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lookAtSpeed;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764BEC", Offset = "0x764BEC")]
	private EnemyController <enemyController>k__BackingField;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyBossTurretController bossTurretController;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform orientation;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764BFC", Offset = "0x764BFC")]
	public float baseScale;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764C34", Offset = "0x764C34")]
	public GameObject activeGeo;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject inactiveGeo;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject scalar;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem activateParticles;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve scalePopCurve;

	[Token(Token = "0x17000086")]
	public EnemyController enemyController
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x9697BC", Offset = "0x9697BC", VA = "0x9697BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B11C", Offset = "0x76B11C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x9697C4", Offset = "0x9697C4", VA = "0x9697C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B12C", Offset = "0x76B12C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x9697CC", Offset = "0x9697CC", VA = "0x9697CC")]
	public void configure(EnemyBossTurretController bossTurretController, EnemyController enemyController, Vector3 lookAtPosition)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x969BFC", Offset = "0x969BFC", VA = "0x969BFC")]
	public bool isKilled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x9698A0", Offset = "0x9698A0", VA = "0x9698A0")]
	private void updateGunShootingChecks(EnemyGun gun)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x969C94", Offset = "0x969C94", VA = "0x969C94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x969A7C", Offset = "0x969A7C", VA = "0x969A7C")]
	public void lookAt(Vector3 lookAtPosition, bool isMovingTowards)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x969CCC", Offset = "0x969CCC", VA = "0x969CCC")]
	private bool isAllowedToFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x969D68", Offset = "0x969D68", VA = "0x969D68")]
	private void updateToActiveState()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x969984", Offset = "0x969984", VA = "0x969984")]
	private void updateToInactiveState()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x969E84", Offset = "0x969E84", VA = "0x969E84")]
	public EnemyBossTurret()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x969E94", Offset = "0x969E94", VA = "0x969E94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B13C", Offset = "0x76B13C")]
	private void <updateToActiveState>b__19_0(float alpha)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x969F7C", Offset = "0x969F7C", VA = "0x969F7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B14C", Offset = "0x76B14C")]
	private void <updateToInactiveState>b__20_0(float alpha)
	{
	}
}
[Token(Token = "0x200015D")]
public class EnemyBossTurretController : EnemyBossAction
{
	[Serializable]
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C54", Offset = "0x761C54")]
	private sealed class <>c
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<EnemyBossTurret> <>9__9_0;

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x96BE7C", Offset = "0x96BE7C", VA = "0x96BE7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x96BE84", Offset = "0x96BE84", VA = "0x96BE84")]
		internal bool <cleanupDeadTurrets>b__9_0(EnemyBossTurret turret)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turretCycleDuration;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<EnemyBossTurret> turretEnemies;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cycleTurretAfterTime;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int activeTurretIndex;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x96B720", Offset = "0x96B720", VA = "0x96B720", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x96B930", Offset = "0x96B930", VA = "0x96B930", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x96BBD0", Offset = "0x96BBD0", VA = "0x96BBD0", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x96B934", Offset = "0x96B934", VA = "0x96B934")]
	private void setupTurrets()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x96BD0C", Offset = "0x96BD0C", VA = "0x96BD0C")]
	private void cycleToNextTurret()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x96B824", Offset = "0x96B824", VA = "0x96B824")]
	private void cleanupDeadTurrets()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x96BD90", Offset = "0x96BD90", VA = "0x96BD90")]
	public bool isCurrentActiveTurret(EnemyBossTurret turret)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x96BE04", Offset = "0x96BE04", VA = "0x96BE04")]
	public EnemyBossTurretController()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public struct WeakpointPair
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject visual;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Collider theCollider;

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x80EDCC", Offset = "0x80EDCC", VA = "0x80EDCC")]
	public void SetActive(bool isActive)
	{
	}
}
[Token(Token = "0x200015F")]
public class EnemyBossWeakpoints : EnemyBossAction
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764C6C", Offset = "0x764C6C")]
	public WeakpointPair stageTwo;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeakpointPair stageThree;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x96C6C8", Offset = "0x96C6C8", VA = "0x96C6C8", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x96C700", Offset = "0x96C700", VA = "0x96C700", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x96C710", Offset = "0x96C710", VA = "0x96C710", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x96C720", Offset = "0x96C720", VA = "0x96C720")]
	public EnemyBossWeakpoints()
	{
	}
}
[Token(Token = "0x2000160")]
public class MallBossGunController : EnemyBossGunController
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764CA4", Offset = "0x764CA4")]
	public string stageTwoGunId;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string stageThreeGunId;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x99279C", Offset = "0x99279C", VA = "0x99279C", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x992838", Offset = "0x992838", VA = "0x992838", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x9927C8", Offset = "0x9927C8", VA = "0x9927C8")]
	private void setNewGunId(string gunConfigId)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x992864", Offset = "0x992864", VA = "0x992864")]
	public MallBossGunController()
	{
	}
}
[Token(Token = "0x2000161")]
public class EnemyBossAnimatorController : EnemyBossAction
{
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C64", Offset = "0x761C64")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> completion;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x962020", Offset = "0x962020", VA = "0x962020")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x962110", Offset = "0x962110", VA = "0x962110")]
		internal void <runDeathAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator theAnimator;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deathAnimationDelayTime;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool runDeathAnimationProcess;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cleanupTime;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x764CDC", Offset = "0x764CDC")]
	private bool <hasEnabledOnce>k__BackingField;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool ignoreNextWaveSpawnTrigger;

	[Token(Token = "0x17000087")]
	public bool hasEnabledOnce
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x961BD0", Offset = "0x961BD0", VA = "0x961BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B15C", Offset = "0x76B15C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x961BD8", Offset = "0x961BD8", VA = "0x961BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B16C", Offset = "0x76B16C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x961BE4", Offset = "0x961BE4", VA = "0x961BE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x961BF0", Offset = "0x961BF0", VA = "0x961BF0", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x961CFC", Offset = "0x961CFC", VA = "0x961CFC", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x961D64", Offset = "0x961D64", VA = "0x961D64", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x961DCC", Offset = "0x961DCC", VA = "0x961DCC", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x961CE0", Offset = "0x961CE0", VA = "0x961CE0")]
	public void setTrigger(string name)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x961EC4", Offset = "0x961EC4", VA = "0x961EC4")]
	public void runDeathAfterDelay(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x962028", Offset = "0x962028", VA = "0x962028")]
	public void waveSpawned(int phase)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x9620EC", Offset = "0x9620EC", VA = "0x9620EC")]
	public EnemyBossAnimatorController()
	{
	}
}
[Token(Token = "0x2000162")]
public class EnemyBossDamageShake : EnemyBossAction
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float resetSpeed;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offsetSizeStageOne;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetSizeStageTwo;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float offsetSizeStageThree;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offsetSize;

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x9621DC", Offset = "0x9621DC", VA = "0x9621DC", Slot = "4")]
	public override void resetBossAction()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x962298", Offset = "0x962298", VA = "0x962298", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x9622A4", Offset = "0x9622A4", VA = "0x9622A4", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x9622B0", Offset = "0x9622B0", VA = "0x9622B0", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x962448", Offset = "0x962448", VA = "0x962448")]
	public void bossTakeDamage()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x962514", Offset = "0x962514", VA = "0x962514")]
	public EnemyBossDamageShake()
	{
	}
}
[Token(Token = "0x2000163")]
public class EnemyBossGunUpgradeDropper : EnemyBossAction
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string upgradeSpawnPoint;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x96348C", Offset = "0x96348C", VA = "0x96348C", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x963548", Offset = "0x963548", VA = "0x963548", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x963490", Offset = "0x963490", VA = "0x963490")]
	private void spawnAGunUpgrade()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x96354C", Offset = "0x96354C", VA = "0x96354C")]
	public EnemyBossGunUpgradeDropper()
	{
	}
}
[Token(Token = "0x2000164")]
public class EnemyBossHeadController : EnemyBossAction
{
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C74", Offset = "0x761C74")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CopilotPowerupCrate target;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossHeadController <>4__this;

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x96400C", Offset = "0x96400C", VA = "0x96400C")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x9644B0", Offset = "0x9644B0", VA = "0x9644B0")]
		internal void <fireShieldBulletsAtCopilots>b__0()
		{
		}
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C84", Offset = "0x761C84")]
	private sealed class <>c__DisplayClass15_1
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bullet theBullet;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass15_0 CS$<>8__locals1;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x96479C", Offset = "0x96479C", VA = "0x96479C")]
		public <>c__DisplayClass15_1()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x9647A4", Offset = "0x9647A4", VA = "0x9647A4")]
		internal bool <fireShieldBulletsAtCopilots>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x9648A4", Offset = "0x9648A4", VA = "0x9648A4")]
		internal void <fireShieldBulletsAtCopilots>b__2()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	private const string HeadLoopId = "GalactoHeadLoop";

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasStartedFinalBattle;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764CEC", Offset = "0x764CEC")]
	public string splineToMoveOn;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764D24", Offset = "0x764D24")]
	public PlayableDirector timingDirector;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764D5C", Offset = "0x764D5C")]
	public Transform gunTransform;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float delayBetweenShots;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator headFightAnimator;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x9635AC", Offset = "0x9635AC", VA = "0x9635AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x963694", Offset = "0x963694", VA = "0x963694")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x963760", Offset = "0x963760", VA = "0x963760", Slot = "7")]
	public override void bossInit()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x963948", Offset = "0x963948", VA = "0x963948", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x963A98", Offset = "0x963A98", VA = "0x963A98")]
	private void startFinalBattle()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x963C00", Offset = "0x963C00", VA = "0x963C00")]
	public void spawnPilotSquadron()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x963CB0", Offset = "0x963CB0", VA = "0x963CB0")]
	public void startFiringPilotGuns()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x963D60", Offset = "0x963D60", VA = "0x963D60")]
	public void stopFiringPilotGuns()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x963E5C", Offset = "0x963E5C", VA = "0x963E5C")]
	public void fireShieldBulletsAtCopilots()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x964014", Offset = "0x964014", VA = "0x964014")]
	public void startBattle()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x964214", Offset = "0x964214", VA = "0x964214", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x963870", Offset = "0x963870", VA = "0x963870")]
	private void updateAllowance(EnemyGun gun)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x964270", Offset = "0x964270", VA = "0x964270")]
	private void clearAllowance(EnemyGun gun)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x964300", Offset = "0x964300", VA = "0x964300")]
	public bool isHeadFightingTheBattle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x964394", Offset = "0x964394", VA = "0x964394")]
	private bool isDamageAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x964398", Offset = "0x964398", VA = "0x964398")]
	private bool isGunAllowedToFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x96439C", Offset = "0x96439C", VA = "0x96439C")]
	public void directDamage(float damageAmount, string damageId)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x9643B8", Offset = "0x9643B8", VA = "0x9643B8")]
	public void playSoundEventWithKey(string soundEventKey)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x964444", Offset = "0x964444", VA = "0x964444")]
	public EnemyBossHeadController()
	{
	}
}
[Token(Token = "0x2000165")]
public class EnemyBossHeadDeathAnimation : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761C94", Offset = "0x761C94")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyBossHeadDeathAnimation <>4__this;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPosition;

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x964CE0", Offset = "0x964CE0", VA = "0x964CE0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x964EA0", Offset = "0x964EA0", VA = "0x964EA0")]
		internal void <flyAway>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x964F8C", Offset = "0x964F8C", VA = "0x964F8C")]
		internal void <flyAway>b__1()
		{
		}
	}

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764D94", Offset = "0x764D94")]
	public float delayBeforeFlyAway;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToFlyBack;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve flyBackCurve;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 flyAwayPoint;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float extraDelayAfterPilotsFlyIn;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764DCC", Offset = "0x764DCC")]
	public EnemyBossTaunt tauntController;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764E04", Offset = "0x764E04")]
	public float cleanupTime;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<bool> regularDeathLogic;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x9648F4", Offset = "0x9648F4", VA = "0x9648F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x964A40", Offset = "0x964A40", VA = "0x964A40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x964A5C", Offset = "0x964A5C", VA = "0x964A5C")]
	public void runDeathAnimation(Action<bool> regularDeathLogic)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x964B94", Offset = "0x964B94", VA = "0x964B94")]
	private void flyAway()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x964CE8", Offset = "0x964CE8", VA = "0x964CE8")]
	private void copilotsDoTheirThing()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x964DBC", Offset = "0x964DBC", VA = "0x964DBC")]
	public void pilotHit()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x964DD8", Offset = "0x964DD8", VA = "0x964DD8")]
	private void animationComplete()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x964E7C", Offset = "0x964E7C", VA = "0x964E7C")]
	public EnemyBossHeadDeathAnimation()
	{
	}
}
[Token(Token = "0x2000166")]
public class EnemyBossSpawnOnDeath : EnemyBossAction
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CA4", Offset = "0x761CA4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 spawnPosition;

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x968014", Offset = "0x968014", VA = "0x968014")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x96802C", Offset = "0x96802C", VA = "0x96802C")]
		internal void <bossDidDie>b__0()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPoint;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float spawnDelay;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x967EB8", Offset = "0x967EB8", VA = "0x967EB8", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x96801C", Offset = "0x96801C", VA = "0x96801C")]
	public EnemyBossSpawnOnDeath()
	{
	}
}
[Token(Token = "0x2000167")]
public class EnemyBossSpawnVFXOnDeath : EnemyBossAction
{
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyBossAnimatorController animatorController;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnDelay;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string specialVFXOnDeath;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cleanUpTime;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform spawnPos;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x9680B8", Offset = "0x9680B8", VA = "0x9680B8", Slot = "11")]
	public override void bossDidDie()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x968194", Offset = "0x968194", VA = "0x968194")]
	private void spawnSpecialVFXOnDeath()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x96835C", Offset = "0x96835C", VA = "0x96835C")]
	public EnemyBossSpawnVFXOnDeath()
	{
	}
}
[Token(Token = "0x2000168")]
public class EnemyBossStageChangeCallout : EnemyBossAction
{
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CB4", Offset = "0x761CB4")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBossStageChangeCallout <>4__this;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x968610", Offset = "0x968610", VA = "0x968610")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x96862C", Offset = "0x96862C", VA = "0x96862C")]
		internal void <showMessage>b__0()
		{
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764E3C", Offset = "0x764E3C")]
	public string calloutStageTwo;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string calloutStageThree;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764E74", Offset = "0x764E74")]
	public float delayBeforeShowing;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float showTime;

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x968528", Offset = "0x968528", VA = "0x968528", Slot = "9")]
	public override void stageTwoHealth()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x968608", Offset = "0x968608", VA = "0x968608", Slot = "10")]
	public override void stageThreeHealth()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x968530", Offset = "0x968530", VA = "0x968530")]
	private void showMessage(string key)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x968618", Offset = "0x968618", VA = "0x968618")]
	public EnemyBossStageChangeCallout()
	{
	}
}
[Token(Token = "0x2000169")]
public class GalactoHeadPositionAtRest : SingletonMono<GalactoHeadPositionAtRest>
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 globalPosition;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 globalPositionForFight;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaytimeOverseer overseer;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x97AB0C", Offset = "0x97AB0C", VA = "0x97AB0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x97ABCC", Offset = "0x97ABCC", VA = "0x97ABCC")]
	public Vector3 getPostion()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x97AC38", Offset = "0x97AC38", VA = "0x97AC38")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x97AD40", Offset = "0x97AD40", VA = "0x97AD40")]
	public GalactoHeadPositionAtRest()
	{
	}
}
[Token(Token = "0x200016A")]
public class BreakdownEnemyDeath : MonoBehaviour
{
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CC4", Offset = "0x761CC4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BreakdownEnemyDeath <>4__this;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 baseScale;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> completion;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__2;

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x9C3394", Offset = "0x9C3394", VA = "0x9C3394")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x9C3548", Offset = "0x9C3548", VA = "0x9C3548")]
		internal void <runDeathAnimation>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x9C375C", Offset = "0x9C375C", VA = "0x9C375C")]
		internal void <runDeathAnimation>b__1()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x9C3858", Offset = "0x9C3858", VA = "0x9C3858")]
		internal void <runDeathAnimation>b__2()
		{
		}
	}

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyController myController;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform scaleEffectTransform;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764EAC", Offset = "0x764EAC")]
	public Transform spawnPositionOne;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPositionTwo;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnPositionThree;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spawnPositionFour;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float spawnDistance;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764EE4", Offset = "0x764EE4")]
	public AnimationCurve shakeCurve;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shakeOffset;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BBSpinner spinner;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float holdAnimationTime;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float animationProgressToSplitChildren;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator deathSplitAnimator;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem initialExplosion;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float baseSpinSpeed;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve spinOnDeathCurve;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve scaleOnDeathCurve;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x9C3000", Offset = "0x9C3000", VA = "0x9C3000")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x9C3170", Offset = "0x9C3170", VA = "0x9C3170")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x9C3204", Offset = "0x9C3204", VA = "0x9C3204")]
	public void runDeathAnimation(Action<bool> completion)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x9C339C", Offset = "0x9C339C", VA = "0x9C339C")]
	private void spawnForPosition(Vector3 childPosition)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x9C351C", Offset = "0x9C351C", VA = "0x9C351C")]
	public BreakdownEnemyDeath()
	{
	}
}
[Token(Token = "0x200016B")]
public class CoinSpinner : MonoBehaviour
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve distanceVsSpeed;

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x9CA960", Offset = "0x9CA960", VA = "0x9CA960")]
	public void resetSpin()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x9CA9EC", Offset = "0x9CA9EC", VA = "0x9CA9EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x9CAB58", Offset = "0x9CAB58", VA = "0x9CAB58")]
	public CoinSpinner()
	{
	}
}
[Token(Token = "0x200016C")]
public class EnemyCollider : MonoBehaviour, IDamageable
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnemyController controller;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x96C728", Offset = "0x96C728", VA = "0x96C728")]
	public void setOwner(EnemyController controller)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x96C730", Offset = "0x96C730", VA = "0x96C730", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x96C83C", Offset = "0x96C83C", VA = "0x96C83C", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x96C8D4", Offset = "0x96C8D4", VA = "0x96C8D4", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x96CB44", Offset = "0x96CB44", VA = "0x96CB44")]
	public void forceKill()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x96CF9C", Offset = "0x96CF9C", VA = "0x96CF9C")]
	public void enemyKilledPlayerInCollision()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x96D0E8", Offset = "0x96D0E8", VA = "0x96D0E8")]
	public void printExtraInformationForPlayerKiller()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x96D264", Offset = "0x96D264", VA = "0x96D264")]
	public EnemyCollider()
	{
	}
}
[Token(Token = "0x200016D")]
public enum EnemyClass
{
	[Token(Token = "0x4000932")]
	None = 0,
	[Token(Token = "0x4000933")]
	Popcorn = 1,
	[Token(Token = "0x4000934")]
	SmallFleet = 2,
	[Token(Token = "0x4000935")]
	MediumGunPatterns = 3,
	[Token(Token = "0x4000936")]
	MediumYouTubes = 4,
	[Token(Token = "0x4000937")]
	SmallHoming = 5,
	[Token(Token = "0x4000938")]
	LargeGunPatterns = 6,
	[Token(Token = "0x4000939")]
	LargeTank = 7,
	[Token(Token = "0x400093A")]
	PopcornAlt = 8,
	[Token(Token = "0x400093B")]
	MiniBoss = 9,
	[Token(Token = "0x400093C")]
	Boss = 11,
	[Token(Token = "0x400093D")]
	FinalBoss = 12,
	[Token(Token = "0x400093E")]
	Breakdown = 13,
	[Token(Token = "0x400093F")]
	BreakdownChild = 14,
	[Token(Token = "0x4000940")]
	SpecialHellBandmate = 20,
	[Token(Token = "0x4000941")]
	SpecialMallBossMinion = 30,
	[Token(Token = "0x4000942")]
	SpecialMallBossTurret = 31,
	[Token(Token = "0x4000943")]
	SpecialSpaceLaser = 40,
	[Token(Token = "0x4000944")]
	SpecialTutorialDodgeBullets = 50,
	[Token(Token = "0x4000945")]
	SpecialMallMinibossSpawn = 60,
	[Token(Token = "0x4000946")]
	SpecialLandmineSpawner = 70
}
[Token(Token = "0x200016E")]
public class EnemyController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CD4", Offset = "0x761CD4")]
	private sealed class <>c
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Transform> <>9__63_0;

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x971B98", Offset = "0x971B98", VA = "0x971B98")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x971BA0", Offset = "0x971BA0", VA = "0x971BA0")]
		internal bool <spawn>b__63_0(Transform transformTargets)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CE4", Offset = "0x761CE4")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem spawnInEffect;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trackingTransform;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject spawnInEffectObject;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x96ECF0", Offset = "0x96ECF0", VA = "0x96ECF0")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x971C0C", Offset = "0x971C0C", VA = "0x971C0C")]
		internal void <runSpawnInEffect>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x971C98", Offset = "0x971C98", VA = "0x971C98")]
		internal void <runSpawnInEffect>b__1()
		{
		}
	}

	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761CF4", Offset = "0x761CF4")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 lerpScale;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 initialScale;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyController <>4__this;

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x96ECF8", Offset = "0x96ECF8", VA = "0x96ECF8")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x971CA4", Offset = "0x971CA4", VA = "0x971CA4")]
		internal void <scaleOnSpawn>b__0(float lerpVal)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x971D78", Offset = "0x971D78", VA = "0x971D78")]
		internal void <scaleOnSpawn>b__1()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D04", Offset = "0x761D04")]
	private sealed class <>c__DisplayClass86_0
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 start;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 end;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 animatingScale;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnemyController <>4__this;

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x96FFB8", Offset = "0x96FFB8", VA = "0x96FFB8")]
		public <>c__DisplayClass86_0()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x971DB8", Offset = "0x971DB8", VA = "0x971DB8")]
		internal void <normalDeathProcess>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<EnemyClass, string> explosionTemplateMapping;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, int> explosionPreloads;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> explosionSounds;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string SpawnInEffectKey;

	[Token(Token = "0x400094B")]
	private const float ScaleOnSpawnDuration = 0.25f;

	[Token(Token = "0x400094C")]
	private const float HitFlashValue = 0.5f;

	[Token(Token = "0x400094D")]
	private const float TimeForFlash = 0.075f;

	[Token(Token = "0x400094E")]
	private const int GlobalScoreMultiplier = 100;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764F1C", Offset = "0x764F1C")]
	public EnemyClass enemyClass;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float movementSpeed;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764F54", Offset = "0x764F54")]
	public GameObject geo;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject orientation;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform colliderAlignment;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject collisions;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Movement mover;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x764F8C", Offset = "0x764F8C")]
	public List<Transform> missileTargets;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation secondaryAnimation;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SimpleModelFlash modelFlash;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeForScore;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float scaleForScore;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speedForScore;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764FC4", Offset = "0x764FC4")]
	public string soundEventId;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minTimeBetweenTaunts;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxTimeBetweenTaunts;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x764FFC", Offset = "0x764FFC")]
	public float missionIconOffset;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool missionOffsetUsesTransformUp;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765034", Offset = "0x765034")]
	public EnemyGun gun;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnemyGun altGun;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool startFireAltGun;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public EnemyGun specialBossGun;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool sendBossTakeDamageMessage;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76508C", Offset = "0x76508C")]
	[HideInInspector]
	public string bossHealthId;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7650D8", Offset = "0x7650D8")]
	[HideInInspector]
	public Transform specialVFXPosition;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ModelSwapAnimation modelSwap;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string extraSoundEventSuffix;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float timeUntilTaunt;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string gunConfigOverride;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string lastDamageSource;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3? startingScale;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float currentHealth;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float healthAtFull;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Action<Action<bool>> customGameplayDeath;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Func<bool> isDamageAllowed;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Func<bool> isTauntSoundAllowed;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765124", Offset = "0x765124")]
	private bool <killed>k__BackingField;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765134", Offset = "0x765134")]
	private bool <canTakeDamage>k__BackingField;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765144", Offset = "0x765144")]
	private List<EnemyCollider> <childColliders>k__BackingField;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765154", Offset = "0x765154")]
	private bool <isShowingChallengeIcon>k__BackingField;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<string, EnemyClass> enemyGroupMap;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765164", Offset = "0x765164")]
	private string <spawnContext>k__BackingField;

	[Token(Token = "0x17000088")]
	public bool killed
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x96D26C", Offset = "0x96D26C", VA = "0x96D26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B17C", Offset = "0x76B17C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x96D274", Offset = "0x96D274", VA = "0x96D274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B18C", Offset = "0x76B18C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public bool canTakeDamage
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x96D280", Offset = "0x96D280", VA = "0x96D280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B19C", Offset = "0x76B19C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x96D288", Offset = "0x96D288", VA = "0x96D288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1AC", Offset = "0x76B1AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public List<EnemyCollider> childColliders
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x96D294", Offset = "0x96D294", VA = "0x96D294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1BC", Offset = "0x76B1BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x96D29C", Offset = "0x96D29C", VA = "0x96D29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1CC", Offset = "0x76B1CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public bool isShowingChallengeIcon
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x96D2AC", Offset = "0x96D2AC", VA = "0x96D2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1DC", Offset = "0x76B1DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x96D2B4", Offset = "0x96D2B4", VA = "0x96D2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1EC", Offset = "0x76B1EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public string spawnContext
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x97154C", Offset = "0x97154C", VA = "0x97154C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B1FC", Offset = "0x76B1FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x971554", Offset = "0x971554", VA = "0x971554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B20C", Offset = "0x76B20C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x96D2C0", Offset = "0x96D2C0", VA = "0x96D2C0")]
	public void reset()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x96DDEC", Offset = "0x96DDEC", VA = "0x96DDEC")]
	public void setGunOverrideFromSpawn(string gunId)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x96D854", Offset = "0x96D854", VA = "0x96D854")]
	public void resetGun()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x96E2F0", Offset = "0x96E2F0", VA = "0x96E2F0")]
	public void spawn(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x96E7AC", Offset = "0x96E7AC", VA = "0x96E7AC")]
	private void runSpawnInEffect()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x96DBE0", Offset = "0x96DBE0", VA = "0x96DBE0")]
	private void scaleOnSpawn()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x96EB3C", Offset = "0x96EB3C", VA = "0x96EB3C")]
	private void setupChallengeIcon()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x96ED00", Offset = "0x96ED00", VA = "0x96ED00")]
	private void checkForMissionIconSpawn()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x96EE7C", Offset = "0x96EE7C", VA = "0x96EE7C")]
	private void checkForMissionIconHide()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x96EF38", Offset = "0x96EF38", VA = "0x96EF38")]
	public void assignCustomGameplayDeath(Action<Action<bool>> customGameplayDeath)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x96EF48", Offset = "0x96EF48", VA = "0x96EF48")]
	public void clearCustomDeath()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x96EF5C", Offset = "0x96EF5C", VA = "0x96EF5C")]
	public void assignDamageCheckFunction(Func<bool> isDamageAllowed)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x96EF6C", Offset = "0x96EF6C", VA = "0x96EF6C")]
	public void clearDamageCheckFunction()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x96EF80", Offset = "0x96EF80", VA = "0x96EF80")]
	public void attachMover(Movement theMover)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x96F1A4", Offset = "0x96F1A4", VA = "0x96F1A4")]
	public HashSet<string> getBulletsUsed()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x96F184", Offset = "0x96F184", VA = "0x96F184")]
	public void setMoveSpeed(float moveSpeed)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x96F3D0", Offset = "0x96F3D0", VA = "0x96F3D0")]
	private void outOfViewport()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x96F6AC", Offset = "0x96F6AC", VA = "0x96F6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x96F8CC", Offset = "0x96F8CC", VA = "0x96F8CC")]
	public void playTauntSoundEvent()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x96FA38", Offset = "0x96FA38", VA = "0x96FA38")]
	public void setIsTauntSoundAllowed(Func<bool> isTauntSoundAllowed)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x96F858", Offset = "0x96F858", VA = "0x96F858")]
	private bool canPlayTauntSound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x96C7C4", Offset = "0x96C7C4", VA = "0x96C7C4")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x96C98C", Offset = "0x96C98C", VA = "0x96C98C")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x96FA48", Offset = "0x96FA48", VA = "0x96FA48")]
	public void flashMaterial()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x96CFB4", Offset = "0x96CFB4", VA = "0x96CFB4")]
	public void enemyKilledPlayerInCollision()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x96CB60", Offset = "0x96CB60", VA = "0x96CB60")]
	public void die(bool isGameplayDeath = true)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x96FD0C", Offset = "0x96FD0C", VA = "0x96FD0C")]
	private void normalDeathProcess(bool isGameplayDeath)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x96F470", Offset = "0x96F470", VA = "0x96F470")]
	private void removeFromBoard()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x96FAA4", Offset = "0x96FAA4", VA = "0x96FAA4")]
	private void explodeOnDeath()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x970054", Offset = "0x970054", VA = "0x970054")]
	public void explodeMeAsClass(EnemyClass theClass)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x9707E4", Offset = "0x9707E4", VA = "0x9707E4")]
	public static void explode(EnemyClass theClass, Vector3 position)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x970634", Offset = "0x970634", VA = "0x970634")]
	public static void explosionEffect(string key, Vector3 position, bool playSound = true)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x96D730", Offset = "0x96D730", VA = "0x96D730")]
	public void startSecondaryAnimation()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x96FFC0", Offset = "0x96FFC0", VA = "0x96FFC0")]
	public void stopSecondaryAnimation()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x96FC44", Offset = "0x96FC44", VA = "0x96FC44")]
	public int score()
	{
		return default(int);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x970BA8", Offset = "0x970BA8", VA = "0x970BA8")]
	public float healthRemainingPercent()
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x970BB4", Offset = "0x970BB4", VA = "0x970BB4")]
	public string killingDamageSourceId()
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x970C18", Offset = "0x970C18", VA = "0x970C18")]
	public void setInvulnerableState(bool isInvulnerable)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x970C28", Offset = "0x970C28", VA = "0x970C28")]
	public void updateSoundEventSuffix(string suffix)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x970D78", Offset = "0x970D78", VA = "0x970D78")]
	public bool isBoss()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x970D8C", Offset = "0x970D8C", VA = "0x970D8C")]
	public bool isMiniboss()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x970D9C", Offset = "0x970D9C", VA = "0x970D9C")]
	public Vector3 getMissionIconPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x96DDA4", Offset = "0x96DDA4", VA = "0x96DDA4")]
	private string HomingLoopSoundKey()
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x96EADC", Offset = "0x96EADC", VA = "0x96EADC")]
	public static string AppearSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x96DDF4", Offset = "0x96DDF4", VA = "0x96DDF4")]
	public static string AttackSoundEventKey(string eventId, string suffix)
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x96FBE4", Offset = "0x96FBE4", VA = "0x96FBE4")]
	public static string DeathSoundEventKey(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x96F98C", Offset = "0x96F98C", VA = "0x96F98C")]
	public static string TauntSoundEventKey(string eventId, string suffix)
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x970EE0", Offset = "0x970EE0", VA = "0x970EE0")]
	public static bool isRareEnemy(EnemyClass enemyClass)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x970F14", Offset = "0x970F14", VA = "0x970F14")]
	public static bool isStringAnEnemyClass(string enemyClassString)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x970F98", Offset = "0x970F98", VA = "0x970F98")]
	public static EnemyClass enemyClassFromString(string enemyClassString, EnemyClass defaultClass = EnemyClass.None)
	{
		return default(EnemyClass);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x9710B4", Offset = "0x9710B4", VA = "0x9710B4")]
	private int healthForEnemy()
	{
		return default(int);
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x97017C", Offset = "0x97017C", VA = "0x97017C")]
	public static string explosionKey(EnemyClass theClass)
	{
		return null;
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x97122C", Offset = "0x97122C", VA = "0x97122C")]
	public static Dictionary<string, int> getAllExplosionPreloadingAmounts()
	{
		return null;
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x970878", Offset = "0x970878", VA = "0x970878")]
	private static string explosionSoundKey(string explosionId)
	{
		return null;
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x9713B8", Offset = "0x9713B8", VA = "0x9713B8")]
	public static string localisedEnemyName(EnemyClass enemyType)
	{
		return null;
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x971564", Offset = "0x971564", VA = "0x971564")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x971574", Offset = "0x971574", VA = "0x971574")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x9715B8", Offset = "0x9715B8", VA = "0x9715B8")]
	public EnemyController()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x971968", Offset = "0x971968", VA = "0x971968")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B21C", Offset = "0x76B21C")]
	private void <normalDeathProcess>b__86_1()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x97196C", Offset = "0x97196C", VA = "0x97196C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B22C", Offset = "0x76B22C")]
	private void <explodeOnDeath>b__88_0()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x971A74", Offset = "0x971A74", VA = "0x971A74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B23C", Offset = "0x76B23C")]
	private void <explodeOnDeath>b__88_1()
	{
	}
}
[Token(Token = "0x200016F")]
public class EnemyFleetTemplate : MonoBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] kids;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x971F34", Offset = "0x971F34", VA = "0x971F34")]
	public Vector3 fleetPositionAtIndex(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x9720B0", Offset = "0x9720B0", VA = "0x9720B0")]
	public EnemyFleetTemplate()
	{
	}
}
[Token(Token = "0x2000170")]
public enum EnemyGunType
{
	[Token(Token = "0x400097B")]
	none = 0,
	[Token(Token = "0x400097C")]
	standard = 1,
	[Token(Token = "0x400097D")]
	burst = 3,
	[Token(Token = "0x400097E")]
	radial = 4,
	[Token(Token = "0x400097F")]
	spray = 5,
	[Token(Token = "0x4000980")]
	saturnMissile = 6,
	[Token(Token = "0x4000981")]
	bubble = 7,
	[Token(Token = "0x4000982")]
	random = 8,
	[Token(Token = "0x4000983")]
	grid = 9,
	[Token(Token = "0x4000984")]
	gridFromPlayer = 10
}
[Serializable]
[Token(Token = "0x2000171")]
public struct GunConfig
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string gunId;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765174", Offset = "0x765174")]
	public EnemyGunType gunType;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float initialShotDelay;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int bulletCount;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int shotSpreadAngle;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7651AC", Offset = "0x7651AC")]
	public float burstDelay;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7651E4", Offset = "0x7651E4")]
	public float sprayTime;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float backAndForthCount;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76521C", Offset = "0x76521C")]
	public float repeatShotDelay;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765254", Offset = "0x765254")]
	public float gridShotGapPercent;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gridSpacing;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76528C", Offset = "0x76528C")]
	public List<string> bulletPrefabKeys;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bulletSpinSpeed;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 bulletSpinAxis;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool horizontalBullets;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float bulletSpeedMultiplier;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7652C4", Offset = "0x7652C4")]
	public string gunAnimationName;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float gunAnimationPlaybackRate;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x7EF390", Offset = "0x7EF390", VA = "0x7EF390")]
	public GunConfig(string raw)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x7EF398", Offset = "0x7EF398", VA = "0x7EF398")]
	public string export()
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x7EF3A0", Offset = "0x7EF3A0", VA = "0x7EF3A0")]
	public AnimationClip getGunAnimationClip()
	{
		return null;
	}
}
[Token(Token = "0x2000172")]
public class EnemyGun : MonoBehaviour
{
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D14", Offset = "0x761D14")]
	private sealed class <shootRandom>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x974884", Offset = "0x974884", VA = "0x974884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x9748EC", Offset = "0x9748EC", VA = "0x9748EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x973CAC", Offset = "0x973CAC", VA = "0x973CAC")]
		[DebuggerHidden]
		public <shootRandom>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x97463C", Offset = "0x97463C", VA = "0x97463C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x974640", Offset = "0x974640", VA = "0x974640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x97488C", Offset = "0x97488C", VA = "0x97488C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D24", Offset = "0x761D24")]
	private sealed class <burstShots>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <burstShotCountdown>5__2;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x9745CC", Offset = "0x9745CC", VA = "0x9745CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x974634", Offset = "0x974634", VA = "0x974634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x973CD8", Offset = "0x973CD8", VA = "0x973CD8")]
		[DebuggerHidden]
		public <burstShots>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x974464", Offset = "0x974464", VA = "0x974464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x974468", Offset = "0x974468", VA = "0x974468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x9745D4", Offset = "0x9745D4", VA = "0x9745D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D34", Offset = "0x761D34")]
	private sealed class <sprayShots>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyGun <>4__this;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <burstInterval>5__2;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <angleInterval>5__3;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <bulletCountdown>5__4;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <turnAngle>5__5;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <maxDegrees>5__6;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x974B80", Offset = "0x974B80", VA = "0x974B80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0x974BE8", Offset = "0x974BE8", VA = "0x974BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x973D04", Offset = "0x973D04", VA = "0x973D04")]
		[DebuggerHidden]
		public <sprayShots>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x9748F4", Offset = "0x9748F4", VA = "0x9748F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x9748F8", Offset = "0x9748F8", VA = "0x9748F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x974B88", Offset = "0x974B88", VA = "0x974B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000997")]
	private const float TutorialMessageDisplayTime = 4.5f;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7652FC", Offset = "0x7652FC")]
	[HideInInspector]
	public string gunConfigId;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> overrideBulletPrefabKeys;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform gunTransform;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765348", Offset = "0x765348")]
	public bool doBossTaunt;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765380", Offset = "0x765380")]
	public Animation gunMoveAnimation;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyGunType gunType;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initialShotDelay;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int bulletCount;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int shotSpreadAngle;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float repeatShotDelay;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float burstDelay;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sprayTime;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float backAndForthCount;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<string> bulletPrefabKeys;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bulletSpinSpeed;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 bulletSpinAxis;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool horizontalBullets;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bulletsSpeedMultiplier;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float gunAnimationPlaybackRate;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float gridShotGapPercent;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float gridSpacing;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isAssignedFromConfig;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GunConfig assignedConfig;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isEnemyGun;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private EnemyClass enemyClass;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float shotDelay;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int bulletIndex;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string fireGunSoundKey;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string spawnContext;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string shooterId;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Func<bool> isShootingAllowedFunction;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653B8", Offset = "0x7653B8")]
	private bool <isShooting>k__BackingField;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7653C8", Offset = "0x7653C8")]
	private bool <hasActiveFiringRoutine>k__BackingField;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, EnemyGunType> enemyGunTypeMap;

	[Token(Token = "0x1700008D")]
	public bool isShooting
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x9720B8", Offset = "0x9720B8", VA = "0x9720B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B24C", Offset = "0x76B24C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x9720C0", Offset = "0x9720C0", VA = "0x9720C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B25C", Offset = "0x76B25C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool hasActiveFiringRoutine
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x9720CC", Offset = "0x9720CC", VA = "0x9720CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B26C", Offset = "0x76B26C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x9720D4", Offset = "0x9720D4", VA = "0x9720D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B27C", Offset = "0x76B27C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x96DEA0", Offset = "0x96DEA0", VA = "0x96DEA0")]
	public void beginShooting(string shooterId, Transform parent, EnemyClass enemyClass, bool isEnemy = true, [Optional] string gunConfigOverride)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x9725AC", Offset = "0x9725AC", VA = "0x9725AC")]
	public void clearShootingAllowanceFunction()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x9725C0", Offset = "0x9725C0", VA = "0x9725C0")]
	public void setShootingAllowanceFunction(Func<bool> isShootingAllowedFunction)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x9725D0", Offset = "0x9725D0", VA = "0x9725D0")]
	public void setBulletCountMultiplier(float multiplier)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x97212C", Offset = "0x97212C", VA = "0x97212C")]
	public void setupFromConfig(GunConfig theConfig)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x96F338", Offset = "0x96F338", VA = "0x96F338")]
	public List<string> getBulletKeysForPooling()
	{
		return null;
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x96FB4C", Offset = "0x96FB4C", VA = "0x96FB4C")]
	public void endShooting()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x972658", Offset = "0x972658", VA = "0x972658")]
	public void updateSoundKey(string fireGunSoundKey)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x972668", Offset = "0x972668", VA = "0x972668")]
	private void Update()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x9727A8", Offset = "0x9727A8", VA = "0x9727A8")]
	private void fireGun()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x973468", Offset = "0x973468", VA = "0x973468")]
	private string nextBulletPrefabKey()
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x9734FC", Offset = "0x9734FC", VA = "0x9734FC")]
	public void setBullets(string rawList)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x97359C", Offset = "0x97359C", VA = "0x97359C")]
	public void setBullets(string[] list)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x97296C", Offset = "0x97296C", VA = "0x97296C")]
	private void shootStandard()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x972D3C", Offset = "0x972D3C", VA = "0x972D3C")]
	private void shootMissile()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x972AD8", Offset = "0x972AD8", VA = "0x972AD8")]
	private void shootRadial()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x972F60", Offset = "0x972F60", VA = "0x972F60")]
	private void shootBubble()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x97309C", Offset = "0x97309C", VA = "0x97309C")]
	private void shootGrid()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x97320C", Offset = "0x97320C", VA = "0x97320C")]
	private void shootGridFromPlayer()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x973974", Offset = "0x973974", VA = "0x973974")]
	private List<Vector3> getGridOffsets(Vector3 extraOffsetPosition)
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x9733EC", Offset = "0x9733EC", VA = "0x9733EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B28C", Offset = "0x76B28C")]
	private IEnumerator shootRandom()
	{
		return null;
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x972A5C", Offset = "0x972A5C", VA = "0x972A5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B2F0", Offset = "0x76B2F0")]
	private IEnumerator burstShots()
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x972CC0", Offset = "0x972CC0", VA = "0x972CC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B354", Offset = "0x76B354")]
	private IEnumerator sprayShots()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x97366C", Offset = "0x97366C", VA = "0x97366C")]
	private void launchBullet()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x973D30", Offset = "0x973D30", VA = "0x973D30")]
	private bool isAllowedToShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x9738E0", Offset = "0x9738E0", VA = "0x9738E0")]
	private void playMuzzleFlash()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x973E9C", Offset = "0x973E9C", VA = "0x973E9C")]
	public GunConfig generateGunConfig()
	{
		return default(GunConfig);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x974050", Offset = "0x974050", VA = "0x974050")]
	public static EnemyGunType fastParseEnemyGunType(string raw, EnemyGunType defaultType)
	{
		return default(EnemyGunType);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x974158", Offset = "0x974158", VA = "0x974158")]
	public void setDebugSpawnContext([Optional] string context)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x974168", Offset = "0x974168", VA = "0x974168")]
	public EnemyGun()
	{
	}
}
[Token(Token = "0x2000173")]
public class EnemyInvulnerabilityCycler : MonoBehaviour
{
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D44", Offset = "0x761D44")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyInvulnerabilityCycler <>4__this;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInvulnerable;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x97594C", Offset = "0x97594C", VA = "0x97594C")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x975A24", Offset = "0x975A24", VA = "0x975A24")]
		internal void <updateActiveState>b__0()
		{
		}
	}

	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D54", Offset = "0x761D54")]
	private sealed class <>c__DisplayClass10_1
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startAlpha;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endAlpha;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass10_0 CS$<>8__locals1;

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x975954", Offset = "0x975954", VA = "0x975954")]
		public <>c__DisplayClass10_1()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x975A50", Offset = "0x975A50", VA = "0x975A50")]
		internal void <updateActiveState>b__1(float lerpAlpha)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x975B08", Offset = "0x975B08", VA = "0x975B08")]
		internal void <updateActiveState>b__2()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7653D8", Offset = "0x7653D8")]
	public EnemyController myController;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject theCollider;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765410", Offset = "0x765410")]
	public float fadeAlpha;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765448", Offset = "0x765448")]
	public float invulnerableTime;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nonInvulnerableTime;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform targetGeo;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x975420", Offset = "0x975420", VA = "0x975420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x9757D0", Offset = "0x9757D0", VA = "0x9757D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x975514", Offset = "0x975514", VA = "0x975514")]
	private void updateActiveState(bool isInvulnerable, bool playSound = true)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x97588C", Offset = "0x97588C", VA = "0x97588C")]
	private void updateForMaterialAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x97595C", Offset = "0x97595C", VA = "0x97595C")]
	private void updateAngle(float lerpAlpha)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x975A1C", Offset = "0x975A1C", VA = "0x975A1C")]
	public EnemyInvulnerabilityCycler()
	{
	}
}
[Token(Token = "0x2000174")]
public class EnemySpawnPoint : MonoBehaviour
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasBooted;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765480", Offset = "0x765480")]
	private ShootyVRSplinePath <theVRPath>k__BackingField;

	[Token(Token = "0x1700008F")]
	public ShootyVRSplinePath theVRPath
	{
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x976F50", Offset = "0x976F50", VA = "0x976F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B3B8", Offset = "0x76B3B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x976F58", Offset = "0x976F58", VA = "0x976F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B3C8", Offset = "0x76B3C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x976F60", Offset = "0x976F60", VA = "0x976F60")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x976FF8", Offset = "0x976FF8", VA = "0x976FF8")]
	public void spawnPowerup(string objectKey)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x977174", Offset = "0x977174", VA = "0x977174")]
	public EnemyController spawnEnemy(string objectKey, List<string> spawnArgs)
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x9777B0", Offset = "0x9777B0", VA = "0x9777B0")]
	public Movement spawnPlayerController(PlayerController player, float moveSpeed, Action moveComplete)
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x9774B0", Offset = "0x9774B0", VA = "0x9774B0")]
	public static void handleArg(string arg, EnemyController controller, Movement mover)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x977988", Offset = "0x977988", VA = "0x977988")]
	public EnemySpawnPoint()
	{
	}
}
[Token(Token = "0x2000175")]
public class Landmine : MonoBehaviour, IDamageable
{
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D64", Offset = "0x761D64")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable thingToDamage;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Landmine <>4__this;

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x900658", Offset = "0x900658", VA = "0x900658")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x9007E8", Offset = "0x9007E8", VA = "0x9007E8")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DamageId;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float landmineHP;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765490", Offset = "0x765490")]
	public float explosionDamageDelay;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explosionRadius;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explosionDamage;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentHealth;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Movement mover;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isExploded;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x900138", Offset = "0x900138", VA = "0x900138")]
	public void setup(Movement theMover)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x900244", Offset = "0x900244", VA = "0x900244")]
	public void setMoveSpeed(float moveSpeed)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x90026C", Offset = "0x90026C", VA = "0x90026C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x900308", Offset = "0x900308", VA = "0x900308", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x9004AC", Offset = "0x9004AC", VA = "0x9004AC", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x90032C", Offset = "0x90032C", VA = "0x90032C", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x90033C", Offset = "0x90033C", VA = "0x90033C")]
	public void explode()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x9004BC", Offset = "0x9004BC", VA = "0x9004BC")]
	private bool applyDamage(IDamageable thingToDamage, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x900660", Offset = "0x900660", VA = "0x900660")]
	public void cleanup()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x90067C", Offset = "0x90067C", VA = "0x90067C")]
	public Landmine()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x9006EC", Offset = "0x9006EC", VA = "0x9006EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B3D8", Offset = "0x76B3D8")]
	private void <explode>b__15_0()
	{
	}
}
[Token(Token = "0x2000176")]
public class LandmineSpawner : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D74", Offset = "0x761D74")]
	private sealed class <spawnCycle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LandmineSpawner <>4__this;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <spawnTotal>5__3;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <spawnCount>5__4;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x900C68", Offset = "0x900C68", VA = "0x900C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x900CD0", Offset = "0x900CD0", VA = "0x900CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x9009B0", Offset = "0x9009B0", VA = "0x9009B0")]
		[DebuggerHidden]
		public <spawnCycle>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x900AE8", Offset = "0x900AE8", VA = "0x900AE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x900AEC", Offset = "0x900AEC", VA = "0x900AEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x900C70", Offset = "0x900C70", VA = "0x900C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CE")]
	private const string PathToLandmine = "Enemies/Shared/Landmine";

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController owner;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minCount;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxCount;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBetweenSpawns;

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x9008E4", Offset = "0x9008E4", VA = "0x9008E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x900934", Offset = "0x900934", VA = "0x900934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B3E8", Offset = "0x76B3E8")]
	private IEnumerator spawnCycle()
	{
		return null;
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x9009DC", Offset = "0x9009DC", VA = "0x9009DC")]
	private void spawnMine()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x900AD8", Offset = "0x900AD8", VA = "0x900AD8")]
	public LandmineSpawner()
	{
	}
}
[Token(Token = "0x2000177")]
public class EnemyMallMiniboss : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D84", Offset = "0x761D84")]
	private sealed class <spawningLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMallMiniboss <>4__this;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <spawnWait>5__2;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x976170", Offset = "0x976170", VA = "0x976170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x9761D8", Offset = "0x9761D8", VA = "0x9761D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x975EB8", Offset = "0x975EB8", VA = "0x975EB8")]
		[DebuggerHidden]
		public <spawningLoop>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x976034", Offset = "0x976034", VA = "0x976034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x976038", Offset = "0x976038", VA = "0x976038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x976178", Offset = "0x976178", VA = "0x976178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7654C8", Offset = "0x7654C8")]
	public float spawnZOffset;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBetweenSpawns;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string minibossPopcornEnemyKey;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765500", Offset = "0x765500")]
	public float moveSpeedMultiplier;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isCurrentlySpawning;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x975BAC", Offset = "0x975BAC", VA = "0x975BAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x975D68", Offset = "0x975D68", VA = "0x975D68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x975E38", Offset = "0x975E38", VA = "0x975E38")]
	public void updateCurrentState(bool isSpawning)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x975E44", Offset = "0x975E44", VA = "0x975E44")]
	public void setFinalState()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x975CEC", Offset = "0x975CEC", VA = "0x975CEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B44C", Offset = "0x76B44C")]
	private IEnumerator spawningLoop()
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x975EE4", Offset = "0x975EE4", VA = "0x975EE4")]
	private Vector3 getSpawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x975FB0", Offset = "0x975FB0", VA = "0x975FB0")]
	private bool isMinibossNotSpawning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x975FC0", Offset = "0x975FC0", VA = "0x975FC0")]
	public EnemyMallMiniboss()
	{
	}
}
[Token(Token = "0x2000178")]
public class EnemyMallMinibossController : MonoBehaviour
{
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761D94", Offset = "0x761D94")]
	private sealed class <bossBattleLoop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyMallMinibossController <>4__this;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <flipFlop>5__2;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <cycleWait>5__3;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x976A68", Offset = "0x976A68", VA = "0x976A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x976AD0", Offset = "0x976AD0", VA = "0x976AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x976838", Offset = "0x976838", VA = "0x976838")]
		[DebuggerHidden]
		public <bossBattleLoop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x976874", Offset = "0x976874", VA = "0x976874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x976878", Offset = "0x976878", VA = "0x976878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x976A70", Offset = "0x976A70", VA = "0x976A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cycleTime;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyMallMiniboss bossA;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemyMallMiniboss bossB;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x9761E0", Offset = "0x9761E0", VA = "0x9761E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x976330", Offset = "0x976330", VA = "0x976330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x976400", Offset = "0x976400", VA = "0x976400")]
	private void minibossSpawned(object note)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x976694", Offset = "0x976694", VA = "0x976694")]
	private void minibossDied(object note)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x976618", Offset = "0x976618", VA = "0x976618")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B4B0", Offset = "0x76B4B0")]
	private IEnumerator bossBattleLoop()
	{
		return null;
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x976864", Offset = "0x976864", VA = "0x976864")]
	public EnemyMallMinibossController()
	{
	}
}
[Token(Token = "0x2000179")]
public class MiniBossHealthBar : MonoBehaviour
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyController myController;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPrimaryHealthBar;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastHealthPercent;

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x996C28", Offset = "0x996C28", VA = "0x996C28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x996D48", Offset = "0x996D48", VA = "0x996D48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x996DF8", Offset = "0x996DF8", VA = "0x996DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x996F14", Offset = "0x996F14", VA = "0x996F14")]
	public MiniBossHealthBar()
	{
	}
}
[Token(Token = "0x200017A")]
public class BasicMover : MonoBehaviour
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Movement mover;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementType movementType;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action removeFromBoardAction;

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x9BCE2C", Offset = "0x9BCE2C", VA = "0x9BCE2C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x9BCFBC", Offset = "0x9BCFBC", VA = "0x9BCFBC")]
	public void setMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x9BCEF0", Offset = "0x9BCEF0", VA = "0x9BCEF0")]
	public void attachMover(Movement theMover)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x9BCFCC", Offset = "0x9BCFCC", VA = "0x9BCFCC")]
	public void updateMovementType(MovementType movementType, float powerupLoiterTime = 2f)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x9BCFE0", Offset = "0x9BCFE0", VA = "0x9BCFE0")]
	public MovementType currentMovementType()
	{
		return default(MovementType);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x9BCFFC", Offset = "0x9BCFFC", VA = "0x9BCFFC")]
	public bool isStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x9BD0B8", Offset = "0x9BD0B8", VA = "0x9BD0B8")]
	private void outOfViewport()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x9BD164", Offset = "0x9BD164", VA = "0x9BD164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x9BD200", Offset = "0x9BD200", VA = "0x9BD200", Slot = "4")]
	public virtual void removeFromBoard()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x9BD23C", Offset = "0x9BD23C", VA = "0x9BD23C")]
	public BasicMover()
	{
	}
}
[Token(Token = "0x200017B")]
public enum MovementType
{
	[Token(Token = "0x40009E3")]
	forward = 0,
	[Token(Token = "0x40009E4")]
	spline = 1,
	[Token(Token = "0x40009E5")]
	wiggle = 2,
	[Token(Token = "0x40009E6")]
	stationary = 3,
	[Token(Token = "0x40009E7")]
	trackToPlayer = 4,
	[Token(Token = "0x40009E8")]
	powerupDrop = 5,
	[Token(Token = "0x40009E9")]
	splineHandover = 6,
	[Token(Token = "0x40009EA")]
	splineAligned = 7,
	[Token(Token = "0x40009EB")]
	splineJumping = 8,
	[Token(Token = "0x40009EC")]
	galactoHeadMoveToRest = 20,
	[Token(Token = "0x40009ED")]
	none = 99
}
[Token(Token = "0x200017C")]
public class Movement
{
	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float TrackToPlayerThreshold;

	[Token(Token = "0x40009EF")]
	private const float PowerupHandAttractDistance = 1f;

	[Token(Token = "0x40009F0")]
	private const float AngleFromAwayLimit = 75f;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float speed;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected bool canUpdate;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetOrientation;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 direction;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 position;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action cullAction;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action endOfSplineAction;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float wiggleTurnSpeed;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float wiggleTurnDuration;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float wiggleForwardDuration;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float wiggleFirstTurnDelay;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool wiggleRandomTweak;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxTimeOffscreen;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShootyVRSplinePath splineToFollow;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MovementType moveType;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private MovementType nextMovementType;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isMoveTypeExplicitlySet;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float offscreenCountdown;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float turnCountdown;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float forwardCountdown;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float firstTurnCountdown;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float distanceAlongSpline;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isTurning;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool hasBeenInPlayspace;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int configuredLoiterTicks;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentLoiterTicks;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int splineJumpingTargetIndex;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 fleetOffset;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 powerupTargetOffset;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float powerupLoiterTime;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public SplineHeightOverride splineHeightOverride;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlaytimeOverseer sharedPlaytimeOverseer;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xA0DD54", Offset = "0xA0DD54", VA = "0xA0DD54")]
	public Movement(MovementType move = MovementType.forward)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xA0DEEC", Offset = "0xA0DEEC", VA = "0xA0DEEC")]
	public void restart(Transform target, [Optional] Transform orientation)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xA0E060", Offset = "0xA0E060", VA = "0xA0E060")]
	public void updatePosition()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xA0E0F8", Offset = "0xA0E0F8", VA = "0xA0E0F8")]
	private void runMovementUpdate()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xA0F76C", Offset = "0xA0F76C", VA = "0xA0F76C")]
	private void updateLookAtOrientation()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xA0EF74", Offset = "0xA0EF74", VA = "0xA0EF74")]
	private Vector3 getPowerupDropMoveTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xA0E5F8", Offset = "0xA0E5F8", VA = "0xA0E5F8")]
	public float currentMoveSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xA0F828", Offset = "0xA0F828", VA = "0xA0F828")]
	public void setMoveType(MovementType moveType, float powerupLoiterTime = 2f)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xA0F930", Offset = "0xA0F930", VA = "0xA0F930")]
	public void setFleetOffset(Vector3 localOffset)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xA0FA10", Offset = "0xA0FA10", VA = "0xA0FA10")]
	public void resetWiggle()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xA0E7C4", Offset = "0xA0E7C4", VA = "0xA0E7C4")]
	private void moveForward(float speed)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xA0E8DC", Offset = "0xA0E8DC", VA = "0xA0E8DC")]
	private void moveWiggle(float speed)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xA0FA14", Offset = "0xA0FA14", VA = "0xA0FA14")]
	public void moveToNewSpline(ShootyVRSplinePath thePath, MovementType moveTypeOnNewSpline)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xA0FA48", Offset = "0xA0FA48", VA = "0xA0FA48")]
	public void attachToSpline(ShootyVRSplinePath thePath, MovementType splineMoveType, bool forceMoveTypeAssignment = true)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xA0EA6C", Offset = "0xA0EA6C", VA = "0xA0EA6C")]
	private void moveAlongSpline(float speed)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xA0ED1C", Offset = "0xA0ED1C", VA = "0xA0ED1C")]
	private void moveToNextJumpPoint(float speed)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xA0FB98", Offset = "0xA0FB98", VA = "0xA0FB98")]
	private void updateSplineJumpingIndex()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xA0F13C", Offset = "0xA0F13C", VA = "0xA0F13C")]
	private void checkForHandoverComplete()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xA0F248", Offset = "0xA0F248", VA = "0xA0F248")]
	private void checkSplineCull()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xA0FC00", Offset = "0xA0FC00", VA = "0xA0FC00")]
	public void setSplineHeightOverride(SplineHeightOverride splineHeightOverride)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xA0FC08", Offset = "0xA0FC08", VA = "0xA0FC08")]
	public void setLoiter(int ticks)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xA0EC00", Offset = "0xA0EC00", VA = "0xA0EC00")]
	private void moveToPosition(Vector3 targetPosition, float moveSpeed)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA0F5B4", Offset = "0xA0F5B4", VA = "0xA0F5B4")]
	public void checkForVolumeCulling()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA0FCDC", Offset = "0xA0FCDC", VA = "0xA0FCDC", Slot = "4")]
	public virtual void stopMovement()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA0FCE4", Offset = "0xA0FCE4", VA = "0xA0FCE4")]
	public void setSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA0FCEC", Offset = "0xA0FCEC", VA = "0xA0FCEC")]
	public MovementType currentMovementType()
	{
		return default(MovementType);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA0FCF4", Offset = "0xA0FCF4", VA = "0xA0FCF4")]
	public bool isStationary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA0FD28", Offset = "0xA0FD28", VA = "0xA0FD28")]
	public Movement makeCopy()
	{
		return null;
	}
}
[Token(Token = "0x200017D")]
public enum SplineHeightOverride
{
	[Token(Token = "0x4000A13")]
	None,
	[Token(Token = "0x4000A14")]
	Bottom,
	[Token(Token = "0x4000A15")]
	Middle,
	[Token(Token = "0x4000A16")]
	Top
}
[Token(Token = "0x200017E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7605E0", Offset = "0x7605E0")]
public class ShootyVRSplinePath : MonoBehaviour
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowsForHeightOverride;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnemyClass> enemyTypeFilters;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CinemachinePath thePath;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> coordinatePoints;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRPlayspace playSpace;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float topY;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float middleY;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float bottomY;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1654194", Offset = "0x1654194", VA = "0x1654194")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x165430C", Offset = "0x165430C", VA = "0x165430C")]
	private void updateHeightOffsets()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1654458", Offset = "0x1654458", VA = "0x1654458")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x16544F0", Offset = "0x16544F0", VA = "0x16544F0")]
	public void generateSplineFromCoordinates()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x16547F4", Offset = "0x16547F4", VA = "0x16547F4")]
	public void updateSplineUsingCoordinates()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1654B20", Offset = "0x1654B20", VA = "0x1654B20")]
	public void regenerateCoordinatePointsFromSpline()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1654CEC", Offset = "0x1654CEC", VA = "0x1654CEC")]
	public Vector3 getStartingPosition(SplineHeightOverride heightOverride = SplineHeightOverride.None)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1654D60", Offset = "0x1654D60", VA = "0x1654D60")]
	public Quaternion getStartingRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1654D84", Offset = "0x1654D84", VA = "0x1654D84")]
	public void placeAndAlignToCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1654DC4", Offset = "0x1654DC4", VA = "0x1654DC4")]
	public void placeOnCurve(Transform theItem, float lerp, SplineHeightOverride heightOverride = SplineHeightOverride.None)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1654E54", Offset = "0x1654E54", VA = "0x1654E54")]
	public void alignToCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1654E94", Offset = "0x1654E94", VA = "0x1654E94")]
	public bool isJustASpawnPoint()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1654EC8", Offset = "0x1654EC8", VA = "0x1654EC8")]
	public bool isAMovementPath()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1654EFC", Offset = "0x1654EFC", VA = "0x1654EFC")]
	public int splinePathPointCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1654F24", Offset = "0x1654F24", VA = "0x1654F24")]
	public ShootyVRSplinePath()
	{
	}
}
[Token(Token = "0x200017F")]
public class TestEnemySimpleLookAt : MonoBehaviour
{
	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x16052D0", Offset = "0x16052D0", VA = "0x16052D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1605304", Offset = "0x1605304", VA = "0x1605304")]
	public TestEnemySimpleLookAt()
	{
	}
}
[Token(Token = "0x2000180")]
public class TestEnemyTrackMover : MonoBehaviour
{
	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachinePathBase path;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLookingAtCamera;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distancePos;

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x160530C", Offset = "0x160530C", VA = "0x160530C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x1605340", Offset = "0x1605340", VA = "0x1605340")]
	public void assignPath(CinemachinePathBase path, float moveSpeed)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x160537C", Offset = "0x160537C", VA = "0x160537C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x1605560", Offset = "0x1605560", VA = "0x1605560")]
	public TestEnemyTrackMover()
	{
	}
}
[Token(Token = "0x2000181")]
public class SplinePath : MonoBehaviour
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector2> viewportPoints;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothNess;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int samples;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> originalPoints;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve xCurve;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationCurve yCurve;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve zCurve;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve resultantXCurve;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve resultantYCurve;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimationCurve resultantZCurve;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float curveLength;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> gizmoPoints;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x1600D9C", Offset = "0x1600D9C", VA = "0x1600D9C")]
	public void addViewportPoint(Vector2 viewportPoint)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1600E0C", Offset = "0x1600E0C", VA = "0x1600E0C")]
	private void convertFrustrumPoints()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x160100C", Offset = "0x160100C", VA = "0x160100C")]
	public List<AnimationCurve> generateSpline()
	{
		return null;
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x16016F4", Offset = "0x16016F4", VA = "0x16016F4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1601AE0", Offset = "0x1601AE0", VA = "0x1601AE0")]
	public void placeOnCurve(Transform theItem, float lerp)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1601BD4", Offset = "0x1601BD4", VA = "0x1601BD4")]
	public Vector3 startOfCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1601AD4", Offset = "0x1601AD4", VA = "0x1601AD4")]
	public Vector3 pointOnCurveAtLerp(float lerp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1601BDC", Offset = "0x1601BDC", VA = "0x1601BDC")]
	public Vector3 pointOnCurveAtDistance(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1601C80", Offset = "0x1601C80", VA = "0x1601C80")]
	public string keypointString()
	{
		return null;
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x16010DC", Offset = "0x16010DC", VA = "0x16010DC")]
	private void LoadCurve()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x1601288", Offset = "0x1601288", VA = "0x1601288")]
	private void SmoothCurve()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x1601F4C", Offset = "0x1601F4C", VA = "0x1601F4C")]
	public SplinePath()
	{
	}
}
[Token(Token = "0x2000182")]
[ExecuteInEditMode]
public class WorldController : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float worldCurvature;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color horizonColor;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float horizonDistance;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float horizonBand;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshFilter groundPlane;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x15027B8", Offset = "0x15027B8", VA = "0x15027B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1502950", Offset = "0x1502950", VA = "0x1502950")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1502954", Offset = "0x1502954", VA = "0x1502954")]
	public WorldController()
	{
	}
}
[Token(Token = "0x2000183")]
public sealed class LeaderboardData
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765538", Offset = "0x765538")]
	private string <leaderboardId>k__BackingField;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765548", Offset = "0x765548")]
	private List<LeaderboardScore> <leaderboardScores>k__BackingField;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderboardFilter filter;

	[Token(Token = "0x17000090")]
	public string leaderboardId
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x901BF4", Offset = "0x901BF4", VA = "0x901BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B514", Offset = "0x76B514")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x901BFC", Offset = "0x901BFC", VA = "0x901BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B524", Offset = "0x76B524")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public List<LeaderboardScore> leaderboardScores
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x901C04", Offset = "0x901C04", VA = "0x901C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B534", Offset = "0x76B534")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x901C0C", Offset = "0x901C0C", VA = "0x901C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B544", Offset = "0x76B544")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x901C14", Offset = "0x901C14", VA = "0x901C14")]
	public LeaderboardData(string leaderboardId, List<LeaderboardScore> leaderboardScores, LeaderboardFilter filter = LeaderboardFilter.World)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x901CFC", Offset = "0x901CFC", VA = "0x901CFC")]
	public bool isValid()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000184")]
public sealed class LeaderboardScore
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765558", Offset = "0x765558")]
	private string <name>k__BackingField;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765568", Offset = "0x765568")]
	private long <score>k__BackingField;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765578", Offset = "0x765578")]
	private int <rank>k__BackingField;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765588", Offset = "0x765588")]
	private bool <isUser>k__BackingField;

	[Token(Token = "0x17000092")]
	public string name
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x905680", Offset = "0x905680", VA = "0x905680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B554", Offset = "0x76B554")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x905688", Offset = "0x905688", VA = "0x905688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B564", Offset = "0x76B564")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public long score
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x905690", Offset = "0x905690", VA = "0x905690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B574", Offset = "0x76B574")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x905698", Offset = "0x905698", VA = "0x905698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B584", Offset = "0x76B584")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public int rank
	{
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x9056A0", Offset = "0x9056A0", VA = "0x9056A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B594", Offset = "0x76B594")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x9056A8", Offset = "0x9056A8", VA = "0x9056A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5A4", Offset = "0x76B5A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool isUser
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x9056B0", Offset = "0x9056B0", VA = "0x9056B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5B4", Offset = "0x76B5B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x9056B8", Offset = "0x9056B8", VA = "0x9056B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5C4", Offset = "0x76B5C4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x90459C", Offset = "0x90459C", VA = "0x90459C")]
	public LeaderboardScore(string name, long score, int rank, bool isUser = false)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x904608", Offset = "0x904608", VA = "0x904608")]
	public void overrrideRank(int newRank)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x904EB8", Offset = "0x904EB8", VA = "0x904EB8")]
	public void overrideScore(long newScore)
	{
	}
}
[Token(Token = "0x2000185")]
public enum LeaderboardFilter
{
	[Token(Token = "0x4000A3E")]
	World,
	[Token(Token = "0x4000A3F")]
	Friends
}
[Token(Token = "0x2000186")]
public sealed class LeaderboardScore_SortByScore : IComparer<LeaderboardScore>
{
	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x905704", Offset = "0x905704", VA = "0x905704", Slot = "4")]
	public int Compare(LeaderboardScore x, LeaderboardScore y)
	{
		return default(int);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x904600", Offset = "0x904600", VA = "0x904600")]
	public LeaderboardScore_SortByScore()
	{
	}
}
[Token(Token = "0x2000187")]
public sealed class LeaderboardScore_SortByRank : IComparer<LeaderboardScore>
{
	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x9056C4", Offset = "0x9056C4", VA = "0x9056C4", Slot = "4")]
	public int Compare(LeaderboardScore x, LeaderboardScore y)
	{
		return default(int);
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x901CF4", Offset = "0x901CF4", VA = "0x901CF4")]
	public LeaderboardScore_SortByRank()
	{
	}
}
[Token(Token = "0x2000188")]
public sealed class LeaderboardController : SingletonMono<LeaderboardController>
{
	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasBeenBootstrapped;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderboardPlatformBase platformLeaderboard;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765598", Offset = "0x765598")]
	private LeaderboardFilter <scoreFilter>k__BackingField;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7655A8", Offset = "0x7655A8")]
	private static int <numberOfEntriesToFetch>k__BackingField;

	[Token(Token = "0x17000096")]
	public LeaderboardFilter scoreFilter
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x901604", Offset = "0x901604", VA = "0x901604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5D4", Offset = "0x76B5D4")]
		get
		{
			return default(LeaderboardFilter);
		}
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x90160C", Offset = "0x90160C", VA = "0x90160C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5E4", Offset = "0x76B5E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public static int numberOfEntriesToFetch
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x901614", Offset = "0x901614", VA = "0x901614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B5F4", Offset = "0x76B5F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x90167C", Offset = "0x90167C", VA = "0x90167C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B604", Offset = "0x76B604")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x9016E8", Offset = "0x9016E8", VA = "0x9016E8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x9017C8", Offset = "0x9017C8", VA = "0x9017C8")]
	public void retryLogin()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x9017E0", Offset = "0x9017E0", VA = "0x9017E0")]
	public bool areLeaderboardsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x9017F8", Offset = "0x9017F8", VA = "0x9017F8")]
	public void setNewScore(string leaderboardId, long newScore)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x9018E4", Offset = "0x9018E4", VA = "0x9018E4")]
	public void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x901904", Offset = "0x901904", VA = "0x901904")]
	public void refreshUserScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x901924", Offset = "0x901924", VA = "0x901924")]
	public LeaderboardData getLeaderboardData(string leaderboardId)
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x90194C", Offset = "0x90194C", VA = "0x90194C")]
	public long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x90196C", Offset = "0x90196C", VA = "0x90196C")]
	public int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x90198C", Offset = "0x90198C", VA = "0x90198C")]
	public void setScoreFilter(LeaderboardFilter filter)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x901994", Offset = "0x901994", VA = "0x901994")]
	public void updateNumerOfEntriesToFetch(int entryCount)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x901A44", Offset = "0x901A44", VA = "0x901A44")]
	public LeaderboardController()
	{
	}
}
[Token(Token = "0x2000189")]
public sealed class LeaderboardControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeaderboardController leaderboardController;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x901B08", Offset = "0x901B08", VA = "0x901B08", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x901BEC", Offset = "0x901BEC", VA = "0x901BEC")]
	public LeaderboardControllerBooter()
	{
	}
}
[Token(Token = "0x200018A")]
public class LeaderboardPlatformBase
{
	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x903D90", Offset = "0x903D90", VA = "0x903D90", Slot = "4")]
	public virtual void relogin()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x903D94", Offset = "0x903D94", VA = "0x903D94", Slot = "5")]
	public virtual void bootstrap()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x903D98", Offset = "0x903D98", VA = "0x903D98", Slot = "6")]
	public virtual void setNewScore(string leaderboardId, long newScore)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x903D9C", Offset = "0x903D9C", VA = "0x903D9C", Slot = "7")]
	public virtual void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x903DA0", Offset = "0x903DA0", VA = "0x903DA0", Slot = "8")]
	public virtual void refreshUserScores(string leaderboardId)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x903DA4", Offset = "0x903DA4", VA = "0x903DA4", Slot = "9")]
	public virtual bool leaderboardsAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x903DAC", Offset = "0x903DAC", VA = "0x903DAC", Slot = "10")]
	public virtual LeaderboardData getCachedData(string leaderboardId, LeaderboardFilter filter)
	{
		return null;
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x903E20", Offset = "0x903E20", VA = "0x903E20", Slot = "11")]
	public virtual long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x903E28", Offset = "0x903E28", VA = "0x903E28", Slot = "12")]
	public virtual int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x9017C0", Offset = "0x9017C0", VA = "0x9017C0")]
	public LeaderboardPlatformBase()
	{
	}
}
[Token(Token = "0x200018B")]
public sealed class LeaderboardPlatformEditor : LeaderboardPlatformBase
{
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DA4", Offset = "0x761DA4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string leaderboardId;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x9047E4", Offset = "0x9047E4", VA = "0x9047E4")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x9054D0", Offset = "0x9054D0", VA = "0x9054D0")]
		internal void <getCachedData>b__0()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DB4", Offset = "0x761DB4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string leaderboardId;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LeaderboardScore> scores;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardFilter filter;

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x904980", Offset = "0x904980", VA = "0x904980")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x9055A8", Offset = "0x9055A8", VA = "0x9055A8")]
		internal void <updateLeaderboard>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DC4", Offset = "0x761DC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<LeaderboardScore> <>9__11_0;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<LeaderboardScore> <>9__11_1;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<LeaderboardScore> <>9__12_0;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<LeaderboardScore> <>9__12_1;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x905468", Offset = "0x905468", VA = "0x905468")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x905470", Offset = "0x905470", VA = "0x905470")]
		internal bool <getUserScore>b__11_0(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x905488", Offset = "0x905488", VA = "0x905488")]
		internal bool <getUserScore>b__11_1(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x9054A0", Offset = "0x9054A0", VA = "0x9054A0")]
		internal bool <getUserRank>b__12_0(LeaderboardScore score)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x9054B8", Offset = "0x9054B8", VA = "0x9054B8")]
		internal bool <getUserRank>b__12_1(LeaderboardScore score)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<LeaderboardScore>> friendScores;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, List<LeaderboardScore>> worldScores;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long playerScore;

	[Token(Token = "0x17000098")]
	private int entryCount
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x9044F8", Offset = "0x9044F8", VA = "0x9044F8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x903E30", Offset = "0x903E30", VA = "0x903E30", Slot = "5")]
	public override void bootstrap()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x903F24", Offset = "0x903F24", VA = "0x903F24", Slot = "9")]
	public override bool leaderboardsAreAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x903F2C", Offset = "0x903F2C", VA = "0x903F2C")]
	private void playerFakeAuthenticated()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x904020", Offset = "0x904020", VA = "0x904020")]
	private void regenerateScores()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x904610", Offset = "0x904610", VA = "0x904610", Slot = "10")]
	public override LeaderboardData getCachedData(string leaderboardId, LeaderboardFilter filter)
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x9047EC", Offset = "0x9047EC", VA = "0x9047EC", Slot = "7")]
	public override void updateLeaderboard(string leaderboardId)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x904988", Offset = "0x904988", VA = "0x904988", Slot = "6")]
	public override void setNewScore(string leaderboardId, long newScore)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x9049C0", Offset = "0x9049C0", VA = "0x9049C0")]
	private void updateListsWithPlayerScore()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x904EC0", Offset = "0x904EC0", VA = "0x904EC0", Slot = "11")]
	public override long getUserScore(string leaderboardId)
	{
		return default(long);
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x905108", Offset = "0x905108", VA = "0x905108", Slot = "12")]
	public override int getUserRank(string leaderboardId)
	{
		return default(int);
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x905350", Offset = "0x905350", VA = "0x905350")]
	public LeaderboardPlatformEditor()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9053F8", Offset = "0x9053F8", VA = "0x9053F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B614", Offset = "0x76B614")]
	private void <bootstrap>b__3_0()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9053FC", Offset = "0x9053FC", VA = "0x9053FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B624", Offset = "0x76B624")]
	private void <playerFakeAuthenticated>b__5_0()
	{
	}
}
[Token(Token = "0x200018C")]
public sealed class ScoreContextPacker
{
	[Token(Token = "0x4000A48")]
	private const uint LEETKEY = 1337u;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint level;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint score;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint blocks;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint balls;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint checksum;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9B1554", Offset = "0x9B1554", VA = "0x9B1554")]
	public ScoreContextPacker(uint level, uint score, uint blocks, uint balls)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9B15E0", Offset = "0x9B15E0", VA = "0x9B15E0")]
	public ulong GetPackedUInt64()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9B1600", Offset = "0x9B1600", VA = "0x9B1600")]
	public long GetPackedInt64()
	{
		return default(long);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x9B1620", Offset = "0x9B1620", VA = "0x9B1620")]
	public Tuple<int, int> GetPackedInt32Tuple()
	{
		return null;
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x9B15BC", Offset = "0x9B15BC", VA = "0x9B15BC")]
	public uint CalculateChecksum()
	{
		return default(uint);
	}
}
[Token(Token = "0x200018D")]
public static class SocialWrapper
{
	[Token(Token = "0x20003B8")]
	public static class localUser
	{
		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7622BC", Offset = "0x7622BC")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x15FA698", Offset = "0x15FA698", VA = "0x15FA698")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x15FA7B0", Offset = "0x15FA7B0", VA = "0x15FA7B0")]
			internal void <Authenticate>b__0(bool success, string errorMessage)
			{
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7622CC", Offset = "0x7622CC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x15FA744", Offset = "0x15FA744", VA = "0x15FA744")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x15FA824", Offset = "0x15FA824", VA = "0x15FA824")]
			internal void <Authenticate>b__0(bool success, string errorMessage)
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public static bool authenticated
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x15FA3F4", Offset = "0x15FA3F4", VA = "0x15FA3F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public static string userName
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x15FA434", Offset = "0x15FA434", VA = "0x15FA434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public static string id
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x15FA474", Offset = "0x15FA474", VA = "0x15FA474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public static bool isFriend
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x15FA4B4", Offset = "0x15FA4B4", VA = "0x15FA4B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public static UserState state
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x15FA4F4", Offset = "0x15FA4F4", VA = "0x15FA4F4")]
			get
			{
				return default(UserState);
			}
		}

		[Token(Token = "0x170001AD")]
		public static Texture2D image
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x15FA534", Offset = "0x15FA534", VA = "0x15FA534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public static IUserProfile[] friends
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x15FA574", Offset = "0x15FA574", VA = "0x15FA574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public static bool underage
		{
			[MethodImpl(256)]
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x15FA5C0", Offset = "0x15FA5C0", VA = "0x15FA5C0")]
			get
			{
				return default(bool);
			}
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x15FA600", Offset = "0x15FA600", VA = "0x15FA600")]
		public static void Authenticate(Action<bool> callback)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x15FA6A0", Offset = "0x15FA6A0", VA = "0x15FA6A0")]
		public static void Authenticate(Action<bool, string> callback)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x15FA74C", Offset = "0x15FA74C", VA = "0x15FA74C")]
		public static void LoadFriends(Action<bool> callback)
		{
		}
	}

	[Token(Token = "0x17000099")]
	public static ISocialPlatform Active
	{
		[MethodImpl(256)]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x15FA008", Offset = "0x15FA008", VA = "0x15FA008")]
		get
		{
			return null;
		}
		[MethodImpl(256)]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x15FA048", Offset = "0x15FA048", VA = "0x15FA048")]
		set
		{
		}
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x15FA000", Offset = "0x15FA000", VA = "0x15FA000")]
	public static bool canUseSocial()
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x15FA084", Offset = "0x15FA084", VA = "0x15FA084")]
	public static IAchievement CreateAchievement()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x15FA0C4", Offset = "0x15FA0C4", VA = "0x15FA0C4")]
	public static ILeaderboard CreateLeaderboard()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x15FA104", Offset = "0x15FA104", VA = "0x15FA104")]
	public static void LoadAchievementDescriptions(Action<IAchievementDescription[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x15FA174", Offset = "0x15FA174", VA = "0x15FA174")]
	public static void LoadAchievements(Action<IAchievement[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x15FA1E4", Offset = "0x15FA1E4", VA = "0x15FA1E4")]
	public static void LoadScores(string leaderboardID, Action<IScore[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x15FA254", Offset = "0x15FA254", VA = "0x15FA254")]
	public static void LoadUsers(string[] userIDs, Action<IUserProfile[]> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x15FA2C4", Offset = "0x15FA2C4", VA = "0x15FA2C4")]
	public static void ReportProgress(string achievementID, double progress, Action<bool> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x15FA320", Offset = "0x15FA320", VA = "0x15FA320")]
	public static void ReportScore(long score, string board, Action<bool> callback)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x15FA37C", Offset = "0x15FA37C", VA = "0x15FA37C")]
	public static void ShowAchievementsUI()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x15FA3B8", Offset = "0x15FA3B8", VA = "0x15FA3B8")]
	public static void ShowLeaderboardUI()
	{
	}
}
[Token(Token = "0x200018E")]
public enum LevelContainerSectionType
{
	[Token(Token = "0x4000A4F")]
	LevelSet,
	[Token(Token = "0x4000A50")]
	Checkpoint1,
	[Token(Token = "0x4000A51")]
	Checkpoint2,
	[Token(Token = "0x4000A52")]
	MiniBoss,
	[Token(Token = "0x4000A53")]
	LevelSetPair,
	[Token(Token = "0x4000A54")]
	GunUpgradeDrop,
	[Token(Token = "0x4000A55")]
	LevelSetGroup,
	[Token(Token = "0x4000A56")]
	LevelIdPool,
	[Token(Token = "0x4000A57")]
	ScoreMultiplierDrop
}
[Serializable]
[Token(Token = "0x200018F")]
public class DifficultyRange
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7655B8", Offset = "0x7655B8")]
	public int minDifficulty;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7655D4", Offset = "0x7655D4")]
	public int maxDifficulty;

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x95A31C", Offset = "0x95A31C", VA = "0x95A31C")]
	public DifficultyRange(int minDifficulty, int maxDifficulty)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x95A360", Offset = "0x95A360", VA = "0x95A360")]
	public bool isInRange(Level level)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000190")]
public class LevelContainerSection
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LevelContainerSectionType sectionType;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isHardModeOnly;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool excludedFromChillMode;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool isChillModeOnly;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DifficultyRange firstDifficulty;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ticksBetweenPair;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DifficultyRange secondDifficulty;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<DifficultyRange> difficultyOptions;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> levelIdPool;

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x90CD28", Offset = "0x90CD28", VA = "0x90CD28")]
	public LevelContainerSection()
	{
	}
}
[Token(Token = "0x2000191")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760654", Offset = "0x760654")]
public class LevelContainer : ScriptableObject
{
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DD4", Offset = "0x761DD4")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelContainerSection thisSection;

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x90C094", Offset = "0x90C094", VA = "0x90C094")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x90CBB8", Offset = "0x90CBB8", VA = "0x90CBB8")]
		internal bool <getLevelsFromSection>b__0(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x90CBE0", Offset = "0x90CBE0", VA = "0x90CBE0")]
		internal bool <getLevelsFromSection>b__1(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x90CC08", Offset = "0x90CC08", VA = "0x90CC08")]
		internal bool <getLevelsFromSection>b__3(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DE4", Offset = "0x761DE4")]
	private sealed class <>c__DisplayClass24_1
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DifficultyRange difficultyRange;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x90C0C0", Offset = "0x90C0C0", VA = "0x90C0C0")]
		public <>c__DisplayClass24_1()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x90CC7C", Offset = "0x90CC7C", VA = "0x90CC7C")]
		internal bool <getLevelsFromSection>b__2(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761DF4", Offset = "0x761DF4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelContainerSection thisSection;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x90CAF0", Offset = "0x90CAF0", VA = "0x90CAF0")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x90CC98", Offset = "0x90CC98", VA = "0x90CC98")]
		internal bool <allEnemiesThatCanSpawn>b__0(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E04", Offset = "0x761E04")]
	private sealed class <>c__DisplayClass37_1
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DifficultyRange difficultyRange;

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x90CAF8", Offset = "0x90CAF8", VA = "0x90CAF8")]
		public <>c__DisplayClass37_1()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x90CD0C", Offset = "0x90CD0C", VA = "0x90CD0C")]
		internal bool <allEnemiesThatCanSpawn>b__1(Level level)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7655F0", Offset = "0x7655F0")]
	public float afterLoopSpeedMultiplier;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string worldId;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMode gameMode;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765628", Offset = "0x765628")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x765628", Offset = "0x765628")]
	public int ticksWaitBetweenLevelSets;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int easyTicksWaitBetweenLevelSets;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765688", Offset = "0x765688")]
	public float minTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7656C0", Offset = "0x7656C0")]
	public float easyMinTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easyMaxTimeBetweenPowerupSpawns;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string tournamentPilotId;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float levelDurationSecs;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameDifficulty tournamentDifficulty;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bulletSpeedMultiplier;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool disableGuns;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool disableMissiles;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool disablePowerups;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7656F8", Offset = "0x7656F8")]
	public bool overridePowerupDrops;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PowerupWeightOverrides powerupOverrides;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765730", Offset = "0x765730")]
	public float maxScoreMultiplier;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float multiplierCountdownTime;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<LevelContainerSection> levelSections;

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x90AB7C", Offset = "0x90AB7C", VA = "0x90AB7C")]
	public Level generateNewLevel(List<Level> levelSetPool)
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x90B048", Offset = "0x90B048", VA = "0x90B048")]
	private List<Level> getLevelSetsForSpaceBattle()
	{
		return null;
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x90B1E4", Offset = "0x90B1E4", VA = "0x90B1E4")]
	private List<Level> getLevelSetsToMerge(List<Level> levelSetPool)
	{
		return null;
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x90B85C", Offset = "0x90B85C", VA = "0x90B85C")]
	private List<Level> getLevelsFromSection(LevelContainerSection thisSection, List<Level> levelSetPool, Level smallWaitIncrement, Level majorEventWaitIncrement)
	{
		return null;
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x90B494", Offset = "0x90B494", VA = "0x90B494")]
	private Level getBossCalloutLevelSet(bool isBoss, bool isHeadBoss = false)
	{
		return null;
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x90B650", Offset = "0x90B650", VA = "0x90B650")]
	private Level getBossWaveLevelSet(bool isGalactosFirstForm = false)
	{
		return null;
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x90C3CC", Offset = "0x90C3CC", VA = "0x90C3CC")]
	public float timeBetweenPowerupSpawns()
	{
		return default(float);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x90C0C8", Offset = "0x90C0C8", VA = "0x90C0C8")]
	private Level getMiniBossLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x90B42C", Offset = "0x90B42C", VA = "0x90B42C")]
	private Level getGunDropLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x90C250", Offset = "0x90C250", VA = "0x90C250")]
	private Level getScoreMultiplierLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x90C02C", Offset = "0x90C02C", VA = "0x90C02C")]
	private Level getWaitForClearLevelSet()
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x90B748", Offset = "0x90B748", VA = "0x90B748")]
	private Level getWaitLevelSet(int tickWaits)
	{
		return null;
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x90BF18", Offset = "0x90BF18", VA = "0x90BF18")]
	private Level getCheckpointLevelSet(int index)
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x90C498", Offset = "0x90C498", VA = "0x90C498")]
	public bool hasAllCheckpoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x90C5B4", Offset = "0x90C5B4", VA = "0x90C5B4")]
	public bool hasAMiniBoss()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x90C09C", Offset = "0x90C09C", VA = "0x90C09C")]
	public static bool sectionHasModeFlags(LevelContainerSectionType sectionType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x90C65C", Offset = "0x90C65C", VA = "0x90C65C")]
	public List<EnemyClass> allEnemiesThatCanSpawn(List<Level> levelPool)
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x90CB00", Offset = "0x90CB00", VA = "0x90CB00")]
	public LevelContainer()
	{
	}
}
[Token(Token = "0x2000192")]
public class ShootyVRLivScaleUpdater : MonoBehaviour
{
	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1652E50", Offset = "0x1652E50", VA = "0x1652E50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1652F84", Offset = "0x1652F84", VA = "0x1652F84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x165301C", Offset = "0x165301C", VA = "0x165301C")]
	private void updateScale()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1653094", Offset = "0x1653094", VA = "0x1653094")]
	public ShootyVRLivScaleUpdater()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x165309C", Offset = "0x165309C", VA = "0x165309C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B634", Offset = "0x76B634")]
	private void <updateScale>b__2_0()
	{
	}
}
[Token(Token = "0x2000193")]
public enum FontMaterialType
{
	[Token(Token = "0x4000A79")]
	None,
	[Token(Token = "0x4000A7A")]
	Default,
	[Token(Token = "0x4000A7B")]
	BlueGlow,
	[Token(Token = "0x4000A7C")]
	BlueGlowOutlined
}
[Token(Token = "0x2000194")]
public sealed class LanguageFontSwapper : MonoBehaviour
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text textComponent;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FontMaterialType materialType;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x900CD8", Offset = "0x900CD8", VA = "0x900CD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x9010D0", Offset = "0x9010D0", VA = "0x9010D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x900DB8", Offset = "0x900DB8", VA = "0x900DB8")]
	private void updateFont()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x9011A0", Offset = "0x9011A0", VA = "0x9011A0")]
	private FontMaterialType getTypeForCurrentText()
	{
		return default(FontMaterialType);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x90129C", Offset = "0x90129C", VA = "0x90129C")]
	public LanguageFontSwapper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000195")]
public struct GameObjectLanguagePair
{
	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string id;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SystemLanguage language;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject objectToActivate;
}
[Token(Token = "0x2000196")]
public sealed class LocalizationAssetActivation : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject defaultObject;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObjectLanguagePair> localizedPairings;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SystemLanguage previousLanguage;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x989E88", Offset = "0x989E88", VA = "0x989E88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x98A224", Offset = "0x98A224", VA = "0x98A224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x98A2F4", Offset = "0x98A2F4", VA = "0x98A2F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x989FD0", Offset = "0x989FD0", VA = "0x989FD0")]
	private void tryUpdateAssets()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x98A4A8", Offset = "0x98A4A8", VA = "0x98A4A8")]
	private bool isUpdatingAssets()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x98A4D4", Offset = "0x98A4D4", VA = "0x98A4D4")]
	public LocalizationAssetActivation()
	{
	}
}
[Token(Token = "0x2000197")]
public sealed class LocalizationBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x98A4E4", Offset = "0x98A4E4", VA = "0x98A4E4", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x98A6D8", Offset = "0x98A6D8", VA = "0x98A6D8", Slot = "5")]
	public override void bootstrapDidComplete(Action complete)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x98A810", Offset = "0x98A810", VA = "0x98A810")]
	public LocalizationBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000198")]
public sealed class FontForLanguage
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset font;

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x9796EC", Offset = "0x9796EC", VA = "0x9796EC")]
	public FontForLanguage()
	{
	}
}
[Token(Token = "0x2000199")]
public enum LocalizedLanguageDirection
{
	[Token(Token = "0x4000A88")]
	RightToLeft,
	[Token(Token = "0x4000A89")]
	LeftToRight
}
[Serializable]
[Token(Token = "0x200019A")]
public sealed class JSONForLanguage
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset jsonFile;

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x900130", Offset = "0x900130", VA = "0x900130")]
	public JSONForLanguage()
	{
	}
}
[Token(Token = "0x200019B")]
public sealed class LocalizationController : SingletonMono<LocalizationController>
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E14", Offset = "0x761E14")]
	private sealed class <waitOnLibraryLoad>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationController <>4__this;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action complete;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x98DD50", Offset = "0x98DD50", VA = "0x98DD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x98DDB8", Offset = "0x98DDB8", VA = "0x98DDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x98AF40", Offset = "0x98AF40", VA = "0x98AF40")]
		[DebuggerHidden]
		public <waitOnLibraryLoad>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x98DC48", Offset = "0x98DC48", VA = "0x98DC48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x98DC4C", Offset = "0x98DC4C", VA = "0x98DC4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x98DD58", Offset = "0x98DD58", VA = "0x98DD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E24", Offset = "0x761E24")]
	private sealed class <>c
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MatchEvaluator <>9__33_0;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x98DB90", Offset = "0x98DB90", VA = "0x98DB90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x98DB98", Offset = "0x98DB98", VA = "0x98DB98")]
		internal string <unescapeUnicode>b__33_0(Match m)
		{
			return null;
		}
	}

	[Token(Token = "0x4000A8C")]
	private const string LanguageChoiceKey = "SHOOTY_PLAYER_LANGUAGE";

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyAttribute", RVA = "0x765778", Offset = "0x765778")]
	public AssetProxy localizationLibraryPrefab;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalizationLibrary localizationLibrary;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool unfoundReturnsKey;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool unfoundLogsError;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SystemLanguage currentLanguage;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideLanguageInEditor;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x7657DC", Offset = "0x7657DC")]
	public SystemLanguage overrideLanguage;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SystemLanguage> supportedLanguages;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> currentLanguageDictionary;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, TMP_FontAsset> fontMap;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, Dictionary<SystemLanguage, string>> languagePatches;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LocalizedLanguageDirection fontDirection;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765818", Offset = "0x765818")]
	private bool <languageHasBeenSet>k__BackingField;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765828", Offset = "0x765828")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x765828", Offset = "0x765828")]
	public List<SystemLanguage> provisionalSupportedLanguages;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> unfoundKeys;

	[Token(Token = "0x1700009A")]
	public bool languageHasBeenSet
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x98A818", Offset = "0x98A818", VA = "0x98A818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B644", Offset = "0x76B644")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x98A820", Offset = "0x98A820", VA = "0x98A820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B654", Offset = "0x76B654")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x98A560", Offset = "0x98A560", VA = "0x98A560")]
	public void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x98A754", Offset = "0x98A754", VA = "0x98A754")]
	public void bootstrapDidComplete(Action complete)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x98A8C4", Offset = "0x98A8C4", VA = "0x98A8C4")]
	private void libraryLoadedCallback(GameObject loadedAsset)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x98A82C", Offset = "0x98A82C", VA = "0x98A82C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B664", Offset = "0x76B664")]
	private IEnumerator waitOnLibraryLoad(Action complete)
	{
		return null;
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x98AD54", Offset = "0x98AD54", VA = "0x98AD54")]
	private void bootstrapCurrentLanguage()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x98B03C", Offset = "0x98B03C", VA = "0x98B03C")]
	public static LocalizedLanguageDirection layoutDirection()
	{
		return default(LocalizedLanguageDirection);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x98B0B4", Offset = "0x98B0B4", VA = "0x98B0B4")]
	public static string stringForKeyInLanguage(string key, SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x98B140", Offset = "0x98B140", VA = "0x98B140")]
	public string stringInLanguage(string key, SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x98B5BC", Offset = "0x98B5BC", VA = "0x98B5BC")]
	public TMP_FontAsset currentLanguageFont()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x9852F0", Offset = "0x9852F0", VA = "0x9852F0")]
	public static string stringForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x98B9F8", Offset = "0x98B9F8", VA = "0x98B9F8")]
	public static bool keyExists(string key)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x98BAA0", Offset = "0x98BAA0", VA = "0x98BAA0")]
	public static string standardReplacements(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x98BC20", Offset = "0x98BC20", VA = "0x98BC20")]
	private static string standardReplacementsCN(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x98BE00", Offset = "0x98BE00", VA = "0x98BE00")]
	private static string standardReplacementsJA(string source)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x98BF34", Offset = "0x98BF34", VA = "0x98BF34")]
	public static string unescapeUnicode(string input)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x98C078", Offset = "0x98C078", VA = "0x98C078")]
	public bool isLanguageSupported(SystemLanguage language)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x98AF6C", Offset = "0x98AF6C", VA = "0x98AF6C")]
	public SystemLanguage findSystemLanguage()
	{
		return default(SystemLanguage);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x98A4B0", Offset = "0x98A4B0", VA = "0x98A4B0")]
	public static SystemLanguage findSystemLanguageDirect()
	{
		return default(SystemLanguage);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x98C0E0", Offset = "0x98C0E0", VA = "0x98C0E0")]
	public void userSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x98B034", Offset = "0x98B034", VA = "0x98B034")]
	public void systemSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x98C0E8", Offset = "0x98C0E8", VA = "0x98C0E8")]
	private void setLanguage(SystemLanguage language, bool setByUser)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x98C284", Offset = "0x98C284", VA = "0x98C284")]
	private void reorderFallbackFontListForLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x98B200", Offset = "0x98B200", VA = "0x98B200")]
	private void loadLanguage(SystemLanguage language, Dictionary<string, string> dictionary)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x98C468", Offset = "0x98C468", VA = "0x98C468")]
	private string rawJSONForLanguage(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x98CA14", Offset = "0x98CA14", VA = "0x98CA14")]
	public TextAsset getFakeLanguageFileForCode(string languageKey)
	{
		return null;
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x98CE2C", Offset = "0x98CE2C", VA = "0x98CE2C")]
	private void defineLanguagePatch(Command theCommand)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x98D0C0", Offset = "0x98D0C0", VA = "0x98D0C0")]
	public static bool isCurrentLanguage(SystemLanguage lang)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x98D144", Offset = "0x98D144", VA = "0x98D144")]
	public static bool isCurrentLanguageChinese()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x98D1DC", Offset = "0x98D1DC", VA = "0x98D1DC")]
	private void addLanguageSupport(Command theCommand)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x98D340", Offset = "0x98D340", VA = "0x98D340")]
	private void removeLanguageSupport(Command theCommand)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x98C7BC", Offset = "0x98C7BC", VA = "0x98C7BC")]
	private void loadAllLanguagePatches(SystemLanguage language, Dictionary<string, string> dictionary)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x98D508", Offset = "0x98D508", VA = "0x98D508")]
	public static SystemLanguage systemLanguageFromString(string languageString)
	{
		return default(SystemLanguage);
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x98CB58", Offset = "0x98CB58", VA = "0x98CB58")]
	public static string languageCodeForSystemLanguage(SystemLanguage name)
	{
		return null;
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x98D5A0", Offset = "0x98D5A0", VA = "0x98D5A0")]
	public static string iosLanguageCodeForSystemLanguage(SystemLanguage name)
	{
		return null;
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x98D7D8", Offset = "0x98D7D8", VA = "0x98D7D8")]
	public List<SystemLanguage> getDebugLanguages()
	{
		return null;
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x98D83C", Offset = "0x98D83C", VA = "0x98D83C")]
	public LocalizationController()
	{
	}
}
[Token(Token = "0x200019C")]
public sealed class LocalizationLibrary : MonoBehaviour
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765888", Offset = "0x765888")]
	public List<JSONForLanguage> jsonFiles;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7658C0", Offset = "0x7658C0")]
	public TMP_FontAsset fallbackFont;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FontForLanguage> fontsForLanguages;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7658F8", Offset = "0x7658F8")]
	public List<JSONForLanguage> fakeJsonFiles;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextAsset englishJSON;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x98DDC0", Offset = "0x98DDC0", VA = "0x98DDC0")]
	public TextAsset getEnglishJSON()
	{
		return null;
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x98DF5C", Offset = "0x98DF5C", VA = "0x98DF5C")]
	public TextAsset getJsonForLanguage(SystemLanguage targetLanguage, bool printError = true)
	{
		return null;
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x98C388", Offset = "0x98C388", VA = "0x98C388")]
	public TMP_FontAsset getFontForLanguage(SystemLanguage targetLanguage)
	{
		return null;
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x98E0B8", Offset = "0x98E0B8", VA = "0x98E0B8")]
	public LocalizationLibrary()
	{
	}
}
[Token(Token = "0x200019D")]
public class LocalizedUITextMeshProText : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text myText;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x98E194", Offset = "0x98E194", VA = "0x98E194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x98E26C", Offset = "0x98E26C", VA = "0x98E26C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x98E304", Offset = "0x98E304", VA = "0x98E304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x98E308", Offset = "0x98E308", VA = "0x98E308")]
	public void updateText()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x98E4CC", Offset = "0x98E4CC", VA = "0x98E4CC")]
	public LocalizedUITextMeshProText()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class MissionConfig
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string missionId;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string worldId;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string locId;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pilotId;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMode gameMode;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] missionTaskIds;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765930", Offset = "0x765930")]
	private bool <isCompleted>k__BackingField;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x765940", Offset = "0x765940")]
	private bool <hasClaimedReward>k__BackingField;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MissionTaskConfig> trackedTasks;

	[Token(Token = "0x1700009B")]
	public bool isCompleted
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x996F2C", Offset = "0x996F2C", VA = "0x996F2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B6C8", Offset = "0x76B6C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x996F34", Offset = "0x996F34", VA = "0x996F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B6D8", Offset = "0x76B6D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public bool hasClaimedReward
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x996F40", Offset = "0x996F40", VA = "0x996F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B6E8", Offset = "0x76B6E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x996F48", Offset = "0x996F48", VA = "0x996F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B6F8", Offset = "0x76B6F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public bool isFullyComplete
	{
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x996F54", Offset = "0x996F54", VA = "0x996F54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x996F74", Offset = "0x996F74", VA = "0x996F74")]
	public MissionConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x997440", Offset = "0x997440", VA = "0x997440")]
	public void loadState()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x997524", Offset = "0x997524", VA = "0x997524")]
	public void saveState()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x9975F0", Offset = "0x9975F0", VA = "0x9975F0")]
	public void startTracking(in Dictionary<string, MissionTaskConfig> tasksToUse)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x997D00", Offset = "0x997D00", VA = "0x997D00")]
	public void stopTracking()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x997EB4", Offset = "0x997EB4", VA = "0x997EB4")]
	public void gameplayLevelStarted()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x998010", Offset = "0x998010", VA = "0x998010")]
	public void clearTaskProgress()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x998124", Offset = "0x998124", VA = "0x998124")]
	public void claimReward()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x9982C0", Offset = "0x9982C0", VA = "0x9982C0")]
	private bool hasRewardDrop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x998340", Offset = "0x998340", VA = "0x998340")]
	public bool checkForCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x998398", Offset = "0x998398", VA = "0x998398")]
	private bool areAllTasksComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x998468", Offset = "0x998468", VA = "0x998468")]
	public void debugCompleteMission()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x9984FC", Offset = "0x9984FC", VA = "0x9984FC")]
	public string localisedTitle()
	{
		return null;
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x998564", Offset = "0x998564", VA = "0x998564")]
	public List<MissionDescription> localisedTaskDescriptions()
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x998968", Offset = "0x998968", VA = "0x998968")]
	public string localisedRewardsString()
	{
		return null;
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x998A04", Offset = "0x998A04", VA = "0x998A04")]
	public bool isInCurrentGameMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x998A8C", Offset = "0x998A8C", VA = "0x998A8C")]
	public bool hasTimedMissionTask()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x998B34", Offset = "0x998B34", VA = "0x998B34")]
	public int getTimedMissionDuration()
	{
		return default(int);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x998C64", Offset = "0x998C64", VA = "0x998C64")]
	public void clearCompletionFlagProgress()
	{
	}
}
[Token(Token = "0x200019F")]
public class MissionController : SingletonMono<MissionController>
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, MissionTaskConfig> taskDefinitions;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MappedList<MissionConfig> missions;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MissionConfig activeMission;

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x998CE4", Offset = "0x998CE4", VA = "0x998CE4")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x998DEC", Offset = "0x998DEC", VA = "0x998DEC")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x9993D0", Offset = "0x9993D0", VA = "0x9993D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x9994BC", Offset = "0x9994BC", VA = "0x9994BC", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x999568", Offset = "0x999568", VA = "0x999568")]
	public void refreshActiveMission()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9998A0", Offset = "0x9998A0", VA = "0x9998A0")]
	public void checkToClearActiveMission(WorldConfig currentWorld)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x999C38", Offset = "0x999C38", VA = "0x999C38")]
	public void setActiveMission(string missionId)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x999D84", Offset = "0x999D84", VA = "0x999D84")]
	public MissionConfig getMissionConfigForPilot(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x99991C", Offset = "0x99991C", VA = "0x99991C")]
	public void setActiveMission(MissionConfig missionToSet)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x999EA8", Offset = "0x999EA8", VA = "0x999EA8")]
	public MissionConfig getActiveMission()
	{
		return null;
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x999B9C", Offset = "0x999B9C", VA = "0x999B9C")]
	private void clearActiveMission()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x999EB0", Offset = "0x999EB0", VA = "0x999EB0")]
	private void gameplayLevelStarted()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x999EC0", Offset = "0x999EC0", VA = "0x999EC0")]
	public void clearProgressForActiveMission()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x9851B0", Offset = "0x9851B0", VA = "0x9851B0")]
	public bool checkForActiveMissionCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x9851CC", Offset = "0x9851CC", VA = "0x9851CC")]
	public string getMissionCompletionMessage()
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x999ED8", Offset = "0x999ED8", VA = "0x999ED8")]
	public void tryClaimMissionReward()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x999F18", Offset = "0x999F18", VA = "0x999F18")]
	public void debugCompleteActiveMission()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x999FB0", Offset = "0x999FB0", VA = "0x999FB0")]
	public bool hasActiveMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x999FC0", Offset = "0x999FC0", VA = "0x999FC0")]
	public bool hasActiveMissionWithTimedTask()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x999FD0", Offset = "0x999FD0", VA = "0x999FD0")]
	public bool hasActiveMissionWithEnemyRequirement(EnemyClass enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x99A0EC", Offset = "0x99A0EC", VA = "0x99A0EC")]
	private void defineMissionTask(Command theCommand)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x99A37C", Offset = "0x99A37C", VA = "0x99A37C")]
	private void defineMission(Command theCommand)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x998E78", Offset = "0x998E78", VA = "0x998E78")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x998F48", Offset = "0x998F48", VA = "0x998F48")]
	private void checkForMissionCompletion()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x99A4A8", Offset = "0x99A4A8", VA = "0x99A4A8")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x99A578", Offset = "0x99A578", VA = "0x99A578")]
	public MissionTaskConfig getTaskConfig(string taskId)
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x99A668", Offset = "0x99A668", VA = "0x99A668")]
	public List<MissionTaskConfig> allMissionTasks()
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x99A6F8", Offset = "0x99A6F8", VA = "0x99A6F8")]
	public void clearAllMissions()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x99A7C8", Offset = "0x99A7C8", VA = "0x99A7C8")]
	public List<MissionConfig> allMissions()
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x999088", Offset = "0x999088", VA = "0x999088")]
	private void debugVerifyAllMissionTaskSetups()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x99A870", Offset = "0x99A870", VA = "0x99A870")]
	public MissionController()
	{
	}
}
[Token(Token = "0x20001A0")]
public sealed class MissionControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionController itemToBoot;

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x99A958", Offset = "0x99A958", VA = "0x99A958", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x99AA3C", Offset = "0x99AA3C", VA = "0x99AA3C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x99AA74", Offset = "0x99AA74", VA = "0x99AA74")]
	public MissionControllerBooter()
	{
	}
}
[Token(Token = "0x20001A1")]
public enum MissionObjectiveType
{
	[Token(Token = "0x4000AB2")]
	None = 0,
	[Token(Token = "0x4000AB3")]
	CompleteLevel = 1,
	[Token(Token = "0x4000AB4")]
	Kills = 2,
	[Token(Token = "0x4000AB5")]
	ActivatePowerup = 3,
	[Token(Token = "0x4000AB6")]
	Score = 4,
	[Token(Token = "0x4000AB7")]
	TimeAlive = 5,
	[Token(Token = "0x4000AB8")]
	VacuumBullets = 20,
	[Token(Token = "0x4000AB9")]
	BlockBullets = 21
}
[Token(Token = "0x20001A2")]
public class MissionDescription
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<string> descriptionLines;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int indexTick;

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x99AA7C", Offset = "0x99AA7C", VA = "0x99AA7C")]
	public MissionDescription()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x99AAF8", Offset = "0x99AAF8", VA = "0x99AAF8")]
	public MissionDescription(string line)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x99AB8C", Offset = "0x99AB8C", VA = "0x99AB8C")]
	public void add(string newLine)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x99ABF4", Offset = "0x99ABF4", VA = "0x99ABF4")]
	public string nextLine()
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x99AC74", Offset = "0x99AC74", VA = "0x99AC74")]
	public bool isMultipleLines()
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x20001A3")]
public class MissionTaskConfig
{
	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string taskId;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionObjectiveType objectiveType;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int count;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyClass enemyClassRequired;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pilotActive;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string powerupActive;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int progressCount;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isTracking;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorldConfig currentWorld;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, MissionObjectiveType> missionObjectiveTypeMap;

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x99A200", Offset = "0x99A200", VA = "0x99A200")]
	public MissionTaskConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x99B8E8", Offset = "0x99B8E8", VA = "0x99B8E8")]
	private void forceCertainFieldsForObjective()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x99B974", Offset = "0x99B974", VA = "0x99B974")]
	private void cleanupEmptyFields()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x99799C", Offset = "0x99799C", VA = "0x99799C")]
	public MissionTaskConfig(MissionTaskConfig toCopy)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x997A18", Offset = "0x997A18", VA = "0x997A18")]
	public void startTracking()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x997DA4", Offset = "0x997DA4", VA = "0x997DA4")]
	public void stopTracking()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x998454", Offset = "0x998454", VA = "0x998454")]
	public bool isComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x99BB34", Offset = "0x99BB34", VA = "0x99BB34")]
	public float progressAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x99865C", Offset = "0x99865C", VA = "0x99865C")]
	public MissionDescription localisedDescription()
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x99BBAC", Offset = "0x99BBAC", VA = "0x99BBAC")]
	private string descriptionForKills(int index = 0)
	{
		return null;
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x99BFFC", Offset = "0x99BFFC", VA = "0x99BFFC")]
	private string descriptionForPowerupActivations()
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x99C15C", Offset = "0x99C15C", VA = "0x99C15C")]
	private string descriptionForScore()
	{
		return null;
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x99C2BC", Offset = "0x99C2BC", VA = "0x99C2BC")]
	private string descriptionForTimeAlive()
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x99C41C", Offset = "0x99C41C", VA = "0x99C41C")]
	private string descriptionForBlockBullets()
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x99C5EC", Offset = "0x99C5EC", VA = "0x99C5EC")]
	private string descriptionForVacuumBullets()
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x99A084", Offset = "0x99A084", VA = "0x99A084")]
	public bool isEnemyToBeKilledForTask(EnemyClass enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x99C90C", Offset = "0x99C90C", VA = "0x99C90C")]
	private void levelPlayFinishedHandler(object note)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x99CA74", Offset = "0x99CA74", VA = "0x99CA74")]
	private void enemyDestroyedHandler(object note)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x99CBE4", Offset = "0x99CBE4", VA = "0x99CBE4")]
	private void powerupCollectedHandler(object note)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x99CC80", Offset = "0x99CC80", VA = "0x99CC80")]
	private void scoreGainHandler(object note)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x99CD64", Offset = "0x99CD64", VA = "0x99CD64")]
	private void levelDurationTimeHandler(object note)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x99CEE4", Offset = "0x99CEE4", VA = "0x99CEE4")]
	private void trackedEventRegisteredHandler(object note)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x99C7D8", Offset = "0x99C7D8", VA = "0x99C7D8")]
	private bool isPassingPilotCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x99C7BC", Offset = "0x99C7BC", VA = "0x99C7BC")]
	private bool isPassingEnemyCheck(EnemyClass enemyClassToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x99C884", Offset = "0x99C884", VA = "0x99C884")]
	private bool isPassingActivePowerupCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x99CB94", Offset = "0x99CB94", VA = "0x99CB94")]
	private bool isPassingPowerupCheck(string powerupIdToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x997FBC", Offset = "0x997FBC", VA = "0x997FBC")]
	public void levelStarted()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x99811C", Offset = "0x99811C", VA = "0x99811C")]
	public void clearProgress()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x99CE38", Offset = "0x99CE38", VA = "0x99CE38")]
	private void setProgressCount(int amount)
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x99C9C0", Offset = "0x99C9C0", VA = "0x99C9C0")]
	private void incrementProgressCount(int amount)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x99BA1C", Offset = "0x99BA1C", VA = "0x99BA1C")]
	private void addObserver(string key, Action<object> action)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x99BAAC", Offset = "0x99BAAC", VA = "0x99BAAC")]
	private void removeObserver(string key)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x99B7E0", Offset = "0x99B7E0", VA = "0x99B7E0")]
	private static MissionObjectiveType fastParseMissionObjectives(string raw, MissionObjectiveType defaultType)
	{
		return default(MissionObjectiveType);
	}
}
[Token(Token = "0x20001A4")]
public class MissionTrackingIcon : MonoBehaviour
{
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E34", Offset = "0x761E34")]
	private sealed class <trackingLoop>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionTrackingIcon <>4__this;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyController attachedEnemy;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xA0B95C", Offset = "0xA0B95C", VA = "0xA0B95C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xA0B9C4", Offset = "0xA0B9C4", VA = "0xA0B9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xA0B6E4", Offset = "0xA0B6E4", VA = "0xA0B6E4")]
		[DebuggerHidden]
		public <trackingLoop>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xA0B774", Offset = "0xA0B774", VA = "0xA0B774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xA0B778", Offset = "0xA0B778", VA = "0xA0B778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xA0B964", Offset = "0xA0B964", VA = "0xA0B964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ResourcesKey;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xA0B620", Offset = "0xA0B620", VA = "0xA0B620")]
	public void attachToEnemy(EnemyController attachedEnemy)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xA0B64C", Offset = "0xA0B64C", VA = "0xA0B64C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B708", Offset = "0x76B708")]
	private IEnumerator trackingLoop(EnemyController attachedEnemy)
	{
		return null;
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xA0B710", Offset = "0xA0B710", VA = "0xA0B710")]
	public MissionTrackingIcon()
	{
	}
}
[Token(Token = "0x20001A5")]
public class FaceTowardsVR : MonoBehaviour
{
	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x978364", Offset = "0x978364", VA = "0x978364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x978520", Offset = "0x978520", VA = "0x978520")]
	public FaceTowardsVR()
	{
	}
}
[Token(Token = "0x20001A6")]
public class GroundCollisionPlane : SingletonMono<GroundCollisionPlane>
{
	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x8F8A1C", Offset = "0x8F8A1C", VA = "0x8F8A1C")]
	public float getHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x8F8AA8", Offset = "0x8F8AA8", VA = "0x8F8AA8")]
	public GroundCollisionPlane()
	{
	}
}
[Token(Token = "0x20001A7")]
public class HoverOutline : MonoBehaviour
{
	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color outlineCol;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MeshRenderer> renderers;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float size;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialPropertyBlock> materialPropertyBlocks;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x8FDD8C", Offset = "0x8FDD8C", VA = "0x8FDD8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x8FDE58", Offset = "0x8FDE58", VA = "0x8FDE58")]
	public void updateOutline(List<MeshRenderer> newRenderers, Color newColor, float newSize)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x8FE248", Offset = "0x8FE248", VA = "0x8FE248")]
	public void updateTowardsOutlineSize(float newSize)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x8FE0AC", Offset = "0x8FE0AC", VA = "0x8FE0AC")]
	public void updateOutlineSize(float newSize)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x8FDDFC", Offset = "0x8FDDFC", VA = "0x8FDDFC")]
	private bool isConfiguredForUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x8FE2E8", Offset = "0x8FE2E8", VA = "0x8FE2E8")]
	public HoverOutline()
	{
	}
}
[Token(Token = "0x20001A8")]
public class PlatformCube : MonoBehaviour
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1611A74", Offset = "0x1611A74", VA = "0x1611A74")]
	public void setCubeColors(Color spriteCol, Color emissionCol)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1611B40", Offset = "0x1611B40", VA = "0x1611B40")]
	public PlatformCube()
	{
	}
}
[Token(Token = "0x20001A9")]
public class ShootyVRBoundaryPlatform : SingletonMono<ShootyVRBoundaryPlatform>
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformCube theCube;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cubeSpacing;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color defaultColor;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color defaultEmissionColor;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<PlatformCube> platformCubes;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool bootstrapped;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextUpdate;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color currentSpriteColor;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentEmissionColor;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float platformMinX;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float platformMaxX;

	[Token(Token = "0x4000AD9")]
	private const float YPosUpdateDelay = 0.25f;

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1650C04", Offset = "0x1650C04", VA = "0x1650C04", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1650D24", Offset = "0x1650D24", VA = "0x1650D24", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1650DD0", Offset = "0x1650DD0", VA = "0x1650DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1651494", Offset = "0x1651494", VA = "0x1651494")]
	private void resetBootstrap()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x165149C", Offset = "0x165149C", VA = "0x165149C")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x165130C", Offset = "0x165130C", VA = "0x165130C")]
	private void updateYPositions()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1651048", Offset = "0x1651048", VA = "0x1651048")]
	private void setupBoundary()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x16514A8", Offset = "0x16514A8", VA = "0x16514A8")]
	private float yPosition()
	{
		return default(float);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x16514B0", Offset = "0x16514B0", VA = "0x16514B0")]
	private bool polygonContainsPoint(Vector3[] polyPoints, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x165157C", Offset = "0x165157C", VA = "0x165157C")]
	public void updatePlatformColours(Color spriteColor, Color emissionColor)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1651754", Offset = "0x1651754", VA = "0x1651754")]
	public ShootyVRBoundaryPlatform()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ShootyVRCleanupPosition : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765950", Offset = "0x765950")]
	public float offsetFromPositionForCleanup;

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x16517CC", Offset = "0x16517CC", VA = "0x16517CC")]
	public float getBulletKillHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1651808", Offset = "0x1651808", VA = "0x1651808")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x16518DC", Offset = "0x16518DC", VA = "0x16518DC")]
	public ShootyVRCleanupPosition()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ShootyVRControllerVisuals : MonoBehaviour
{
	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject visualsParent;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject defaultVisuals;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MightyVRControlSide side;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765988", Offset = "0x765988")]
	public Shader steamModelShader;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform anchor;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x16518E4", Offset = "0x16518E4", VA = "0x16518E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1651904", Offset = "0x1651904", VA = "0x1651904")]
	public void updateActiveState(bool isActive)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1651974", Offset = "0x1651974", VA = "0x1651974")]
	private void updateControllerVisuals(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1651994", Offset = "0x1651994", VA = "0x1651994")]
	public ShootyVRControllerVisuals()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ShootyVRDebugBoundary : MonoBehaviour
{
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E44", Offset = "0x761E44")]
	private sealed class <UpdateLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootyVRDebugBoundary <>4__this;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x1652330", Offset = "0x1652330", VA = "0x1652330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x1652398", Offset = "0x1652398", VA = "0x1652398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1651BC0", Offset = "0x1651BC0", VA = "0x1651BC0")]
		[DebuggerHidden]
		public <UpdateLoop>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1652180", Offset = "0x1652180", VA = "0x1652180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1652184", Offset = "0x1652184", VA = "0x1652184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1652338", Offset = "0x1652338", VA = "0x1652338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7659C0", Offset = "0x7659C0")]
	public Transform testPoint;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> spawnedPoints;

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x165199C", Offset = "0x165199C", VA = "0x165199C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1651B08", Offset = "0x1651B08", VA = "0x1651B08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1651B0C", Offset = "0x1651B0C", VA = "0x1651B0C")]
	public void ShowBoundary()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x16519E0", Offset = "0x16519E0", VA = "0x16519E0")]
	public void HideBoundary()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x1651B44", Offset = "0x1651B44", VA = "0x1651B44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B76C", Offset = "0x76B76C")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1651BEC", Offset = "0x1651BEC", VA = "0x1651BEC")]
	private void UpdateDebugBoundaryPoints()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1651FB4", Offset = "0x1651FB4", VA = "0x1651FB4")]
	private void activatePoint(int index, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x1652104", Offset = "0x1652104", VA = "0x1652104")]
	public ShootyVRDebugBoundary()
	{
	}
}
[Token(Token = "0x20001AD")]
public class ShootyVREditorPause : MonoBehaviour
{
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x16523A0", Offset = "0x16523A0", VA = "0x16523A0")]
	public ShootyVREditorPause()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ShootyVRHandColliderDelegator : MonoBehaviour
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootyVRHandController handController;

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x16523A8", Offset = "0x16523A8", VA = "0x16523A8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1652668", Offset = "0x1652668", VA = "0x1652668")]
	private void powerupActivation(Powerup thePowerup)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x165271C", Offset = "0x165271C", VA = "0x165271C")]
	public ShootyVRHandColliderDelegator()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ShootyVRHandController : MonoBehaviour
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7659F8", Offset = "0x7659F8")]
	public MightyVRControlSide controller;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765A30", Offset = "0x765A30")]
	public float grabBegin;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grabAttachParent;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float grabDistance;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765A68", Offset = "0x765A68")]
	public ShootyVRControllerVisuals visuals;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765AA0", Offset = "0x765AA0")]
	public Transform messageAttachPoint;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765AD8", Offset = "0x765AD8")]
	public PlayerHealthCount healthDisplay;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765B10", Offset = "0x765B10")]
	public PlayerScoreMultiplier comboDisplay;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isGrabbingEnabled;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool bootstrapped;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerController player;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 previousPosition;

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1652724", Offset = "0x1652724", VA = "0x1652724")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1652764", Offset = "0x1652764", VA = "0x1652764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x16529CC", Offset = "0x16529CC", VA = "0x16529CC")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1652AF8", Offset = "0x1652AF8", VA = "0x1652AF8")]
	public bool isGrabbingAllowed_Old()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1652A08", Offset = "0x1652A08", VA = "0x1652A08")]
	public bool isGrabbingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x1652CB4", Offset = "0x1652CB4", VA = "0x1652CB4")]
	public void grabEnd()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x1652CC0", Offset = "0x1652CC0", VA = "0x1652CC0")]
	public bool isCurrentOffhand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x1652D64", Offset = "0x1652D64", VA = "0x1652D64")]
	public float distancedMovedSinceLastFrame()
	{
		return default(float);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1652E28", Offset = "0x1652E28", VA = "0x1652E28")]
	public ShootyVRHandController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ShootyVRSceneryHider : MonoBehaviour
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sceneryToHideParent;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sceneryToShowParent;

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1653128", Offset = "0x1653128", VA = "0x1653128")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x165335C", Offset = "0x165335C", VA = "0x165335C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x1653220", Offset = "0x1653220", VA = "0x1653220")]
	private void refreshScenery()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x16533F4", Offset = "0x16533F4", VA = "0x16533F4")]
	public ShootyVRSceneryHider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B1")]
public struct ResourcePathLanguagePair
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string id;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SystemLanguage language;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string resourcePath;
}
[Token(Token = "0x20001B2")]
public class ShootyVRScreenFade : SingletonMono<ShootyVRScreenFade>
{
	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float ScreenFadeOutTime;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly float ScreenFadeInTime;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765B58", Offset = "0x765B58")]
	public Transform cameraTransform;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765B90", Offset = "0x765B90")]
	public float logoZOffset;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765BC8", Offset = "0x765BC8")]
	public Transform fadeParent;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform transitionEffectsParent;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform overlayObjectParent;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765C00", Offset = "0x765C00")]
	public MeshRenderer fadeSphere;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator fadeAnimator;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TerrainFadeInController terrainFade;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765C38", Offset = "0x765C38")]
	public MeshRenderer steamOverlay;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string defaultResourcePath;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<ResourcePathLanguagePair> localizedPairings;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SystemLanguage previousLanguage;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string previousResourcePath;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float Anim_OVRoverlayAlpha;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public float Anim_OVRScreenFlashAlpha;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x16533FC", Offset = "0x16533FC", VA = "0x16533FC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x165355C", Offset = "0x165355C", VA = "0x165355C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x16538DC", Offset = "0x16538DC", VA = "0x16538DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x16539AC", Offset = "0x16539AC", VA = "0x16539AC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x16536F0", Offset = "0x16536F0", VA = "0x16536F0")]
	private void tryUpdateLogoTextures()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1653B60", Offset = "0x1653B60", VA = "0x1653B60")]
	private string getResourcePathForLanguage(SystemLanguage language)
	{
		return null;
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1653C38", Offset = "0x1653C38", VA = "0x1653C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x16534FC", Offset = "0x16534FC", VA = "0x16534FC")]
	private void updateFadeAndScreenFlashPositions()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x1653C3C", Offset = "0x1653C3C", VA = "0x1653C3C")]
	public void SetSortingOrder()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1653CAC", Offset = "0x1653CAC", VA = "0x1653CAC")]
	public void runFadeOutTransition(bool runTerrainFadeEffect)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1653E54", Offset = "0x1653E54", VA = "0x1653E54")]
	public void runFadeInTransition(bool runTerrainFadeEffect)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x165345C", Offset = "0x165345C", VA = "0x165345C")]
	public void updateEffectsPositioning()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1653F84", Offset = "0x1653F84", VA = "0x1653F84")]
	public void FadeInTerrainFromTutorial()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1653FE0", Offset = "0x1653FE0", VA = "0x1653FE0")]
	public void CrossFadeSkyBG(float alpha)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1654000", Offset = "0x1654000", VA = "0x1654000")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x1654074", Offset = "0x1654074", VA = "0x1654074")]
	public void ResetTerrain()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x1653D70", Offset = "0x1653D70", VA = "0x1653D70")]
	private void resetLogoPosition()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1654090", Offset = "0x1654090", VA = "0x1654090")]
	public ShootyVRScreenFade()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ShootyVRTrackToEyeHeight : MonoBehaviour
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765C90", Offset = "0x765C90")]
	public float maxTrackingSpeed;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minTrackingSpeed;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedMaxThreshold;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765CC8", Offset = "0x765CC8")]
	public float offset;

	[Token(Token = "0x4000B09")]
	private const float CloseThreshold = 0.1f;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1654FA0", Offset = "0x1654FA0", VA = "0x1654FA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1655154", Offset = "0x1655154", VA = "0x1655154")]
	public ShootyVRTrackToEyeHeight()
	{
	}
}
[Token(Token = "0x20001B4")]
public class ShootableSlider : MonoBehaviour, IRaycastable
{
	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider theCollider;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider theSlider;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerController player;

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1650918", Offset = "0x1650918", VA = "0x1650918", Slot = "4")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x1650ABC", Offset = "0x1650ABC", VA = "0x1650ABC", Slot = "5")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1650B78", Offset = "0x1650B78", VA = "0x1650B78")]
	public ShootableSlider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B5")]
public class ButtonUnityEvent : UnityEvent
{
	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x9C64D0", Offset = "0x9C64D0", VA = "0x9C64D0")]
	public ButtonUnityEvent()
	{
	}
}
[Token(Token = "0x20001B6")]
public class SimpleShootableButton : MonoBehaviour, IDamageable, IRaycastable
{
	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765D00", Offset = "0x765D00")]
	public ButtonUnityEvent activatedEvent;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string pressedSound;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765D38", Offset = "0x765D38")]
	public ButtonUnityEvent onHoverEvent;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool scaleUpOnHover;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765D70", Offset = "0x765D70")]
	[HideInInspector]
	public bool canBeDisabled;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Image buttonBackground;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public MaskableGraphic buttonLabel;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDisabled;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color enabledColor;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color disabledColor;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentHitCount;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float resetTime;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isToggledOn;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool bootstrapped;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float hoverResetTime;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 baseScale;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x15F8890", Offset = "0x15F8890", VA = "0x15F8890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x15F895C", Offset = "0x15F895C", VA = "0x15F895C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x15F8964", Offset = "0x15F8964", VA = "0x15F8964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x15F8BD8", Offset = "0x15F8BD8", VA = "0x15F8BD8")]
	public void updateDisabledState(bool isDisabled)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x15F8CB4", Offset = "0x15F8CB4", VA = "0x15F8CB4", Slot = "4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x15F8CBC", Offset = "0x15F8CBC", VA = "0x15F8CBC", Slot = "5")]
	public bool isDamageable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x15F8D64", Offset = "0x15F8D64", VA = "0x15F8D64", Slot = "6")]
	public void takeDamage(float damageAmount, string damageSource)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x15F8E90", Offset = "0x15F8E90", VA = "0x15F8E90")]
	private void buttonActivationLogic()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x15F8954", Offset = "0x15F8954", VA = "0x15F8954")]
	private void resetHitCount()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x15F90C8", Offset = "0x15F90C8", VA = "0x15F90C8")]
	public void toggleActivation(bool toggle)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x15F8CC0", Offset = "0x15F8CC0", VA = "0x15F8CC0", Slot = "7")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x15F90D4", Offset = "0x15F90D4", VA = "0x15F90D4", Slot = "8")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x15F8BB8", Offset = "0x15F8BB8", VA = "0x15F8BB8")]
	public bool isButtonDisabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x15F92E0", Offset = "0x15F92E0", VA = "0x15F92E0")]
	public SimpleShootableButton()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x15F934C", Offset = "0x15F934C", VA = "0x15F934C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B7D0", Offset = "0x76B7D0")]
	private void <buttonActivationLogic>b__23_0()
	{
	}
}
[Token(Token = "0x20001B7")]
public class WorldLoadButtonMenu : MonoBehaviour
{
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E54", Offset = "0x761E54")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string worldId;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldLoadButtonMenu <>4__this;

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1503534", Offset = "0x1503534", VA = "0x1503534")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1503544", Offset = "0x1503544", VA = "0x1503544")]
		internal void <updateToggle>b__0()
		{
		}
	}

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765DDC", Offset = "0x765DDC")]
	public Image worldImage;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bossImage;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765E14", Offset = "0x765E14")]
	public Image easyCompleteIcon;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image mediumCompleteIcon;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image hardCompleteIcon;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite easyMedal;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite mediumMedal;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite hardMedal;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite noMedal;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765E4C", Offset = "0x765E4C")]
	public Color worldLockedColor;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765E84", Offset = "0x765E84")]
	public TMP_Text[] worldNameLabels;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text worldPilotsLabel;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765EBC", Offset = "0x765EBC")]
	public List<UIButtonToggle> worldToggleButtons;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x150295C", Offset = "0x150295C", VA = "0x150295C")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x1502CD4", Offset = "0x1502CD4", VA = "0x1502CD4")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x1502DA4", Offset = "0x1502DA4", VA = "0x1502DA4")]
	public void selectWorld(string worldId)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1502AAC", Offset = "0x1502AAC", VA = "0x1502AAC")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1502E3C", Offset = "0x1502E3C", VA = "0x1502E3C")]
	private void updateLabels()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x150300C", Offset = "0x150300C", VA = "0x150300C")]
	private void updateCompletionMedals(WorldConfig world)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x15030D4", Offset = "0x15030D4", VA = "0x15030D4")]
	private void updateToggle(UIButtonToggle toggleButton, WorldConfig world, string currentWorldId)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x150324C", Offset = "0x150324C", VA = "0x150324C")]
	private void updateWorldLabels(string worldName, string pilotLabel)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1503348", Offset = "0x1503348", VA = "0x1503348")]
	private void updateWorldImages(string worldId, Color color)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x150353C", Offset = "0x150353C", VA = "0x150353C")]
	public WorldLoadButtonMenu()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x760698", Offset = "0x760698")]
public class VRAutotestMover : MonoBehaviour
{
	[Token(Token = "0x4000B2A")]
	private const float MinTimeBetweenChanges = 5f;

	[Token(Token = "0x4000B2B")]
	private const float MaxTimeBetweenChanges = 20f;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765EF4", Offset = "0x765EF4")]
	public float moveSpeedMin;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeedMax;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedMultiplierDuringGameplay;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CinemachinePath thePath;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765F2C", Offset = "0x765F2C")]
	public bool updateRotation;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool onlyLookIntoPlayspace;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minTimeBetweenRotationChange;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxTimeBetweenRotationChange;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float moveSpeed;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float position;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeUntilMoveSpeedReset;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timeUntilRotationPositionReset;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float durationOfRotationLoop;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion rotationToFace;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion startRotation;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isActive;

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xAA4A34", Offset = "0xAA4A34", VA = "0xAA4A34")]
	public void activate()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xAA4EC0", Offset = "0xAA4EC0", VA = "0xAA4EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xAA4A64", Offset = "0xAA4A64", VA = "0xAA4A64")]
	private void resetMoveSpeed()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xAA4B48", Offset = "0xAA4B48", VA = "0xAA4B48")]
	private void resetRotation()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xAA50BC", Offset = "0xAA50BC", VA = "0xAA50BC")]
	public VRAutotestMover()
	{
	}
}
[Token(Token = "0x20001B9")]
public enum MightyVRControlSide
{
	[Token(Token = "0x4000B3E")]
	Left = 0,
	[Token(Token = "0x4000B3F")]
	Right = 1,
	[Token(Token = "0x4000B40")]
	None = 99
}
[Token(Token = "0x20001BA")]
public class MightyVRController : SingletonMono<MightyVRController>
{
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E64", Offset = "0x761E64")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MightyVRController <>4__this;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MightyVRControlSide side;

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x996924", Offset = "0x996924", VA = "0x996924")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x996A6C", Offset = "0x996A6C", VA = "0x996A6C")]
		internal void <pulseControllerVibration>b__0()
		{
		}
	}

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MightyVRWrapper currentVRWrapper;

	[Token(Token = "0x1700009E")]
	private bool hasWrapper
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x9961BC", Offset = "0x9961BC", VA = "0x9961BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x9961CC", Offset = "0x9961CC", VA = "0x9961CC")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x996478", Offset = "0x996478", VA = "0x996478")]
	public void enableTestingWrapper()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x99647C", Offset = "0x99647C", VA = "0x99647C")]
	public static bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x9965A4", Offset = "0x9965A4", VA = "0x9965A4")]
	public Vector3 getEyePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x996674", Offset = "0x996674", VA = "0x996674")]
	public Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x99668C", Offset = "0x99668C", VA = "0x99668C")]
	public Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x9966A4", Offset = "0x9966A4", VA = "0x9966A4")]
	public Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x9966BC", Offset = "0x9966BC", VA = "0x9966BC")]
	public float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x9966E0", Offset = "0x9966E0", VA = "0x9966E0")]
	public bool isGrabbing(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x996708", Offset = "0x996708", VA = "0x996708")]
	public Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x9967A4", Offset = "0x9967A4", VA = "0x9967A4")]
	public bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x9967C8", Offset = "0x9967C8", VA = "0x9967C8")]
	public bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x9967EC", Offset = "0x9967EC", VA = "0x9967EC")]
	public bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x996810", Offset = "0x996810", VA = "0x996810")]
	public void pulseControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x99692C", Offset = "0x99692C", VA = "0x99692C")]
	public void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x996948", Offset = "0x996948", VA = "0x996948")]
	public void stopControllerVibration(MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x99696C", Offset = "0x99696C", VA = "0x99696C")]
	public void stopAllVibration()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x996988", Offset = "0x996988", VA = "0x996988")]
	public string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x9969FC", Offset = "0x9969FC", VA = "0x9969FC")]
	public MightyVRController()
	{
	}
}
[Token(Token = "0x20001BB")]
public sealed class MightyVRControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MightyVRController itemToBoot;

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x996AAC", Offset = "0x996AAC", VA = "0x996AAC", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x996BA0", Offset = "0x996BA0", VA = "0x996BA0")]
	public MightyVRControllerBooter()
	{
	}
}
[Token(Token = "0x20001BC")]
public abstract class MightyVRWrapper
{
	[Token(Token = "0x6000E98")]
	public abstract bool isVRReady();

	[Token(Token = "0x6000E99")]
	public abstract Vector3[] getPlayAreaBoundary();

	[Token(Token = "0x6000E9A")]
	public abstract Vector3[] getOuterBoundary();

	[Token(Token = "0x6000E9B")]
	public abstract Transform getEyeTransform();

	[Token(Token = "0x6000E9C")]
	public abstract float getGrabFlex(MightyVRControlSide side);

	[Token(Token = "0x6000E9D")]
	public abstract Vector2 getJoystickDirection(MightyVRControlSide side);

	[Token(Token = "0x6000E9E")]
	public abstract bool isAFaceButtonDown(MightyVRControlSide side);

	[Token(Token = "0x6000E9F")]
	public abstract bool isFingerTriggerDown(MightyVRControlSide side);

	[Token(Token = "0x6000EA0")]
	public abstract bool isThumbstickDown(MightyVRControlSide side);

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x996BA8", Offset = "0x996BA8", VA = "0x996BA8", Slot = "13")]
	public virtual void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x996BAC", Offset = "0x996BAC", VA = "0x996BAC", Slot = "14")]
	public virtual void stopAllVibration()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x996BB0", Offset = "0x996BB0", VA = "0x996BB0", Slot = "15")]
	public virtual string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x996C18", Offset = "0x996C18", VA = "0x996C18", Slot = "16")]
	public virtual bool isGrabbing(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x996C20", Offset = "0x996C20", VA = "0x996C20")]
	protected MightyVRWrapper()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PicoHeadGrabber : SingletonMono<PicoHeadGrabber>
{
	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform theHead;

	[Token(Token = "0x1700009F")]
	public static Transform headTransform
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xA1FFA8", Offset = "0xA1FFA8", VA = "0xA1FFA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xA20020", Offset = "0xA20020", VA = "0xA20020")]
	public PicoHeadGrabber()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PicoVRWrapper : MightyVRWrapper
{
	[Token(Token = "0x4000B44")]
	private const string AppID = "c2b17fbc9fbd3c5af6b16300a18ffe79";

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform trackingSpace;

	[Token(Token = "0x4000B46")]
	private const float BoundaryRadius = 0.75f;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] defaultStationaryBoundary;

	[Token(Token = "0x4000B48")]
	private const float DefaultBoundarySize = 0.75f;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] defaultPlayAreaPoints;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xA20CD4", Offset = "0xA20CD4", VA = "0xA20CD4")]
	public PicoVRWrapper()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xA20CDC", Offset = "0xA20CDC", VA = "0xA20CDC", Slot = "7")]
	public override Transform getEyeTransform()
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xA20CE0", Offset = "0xA20CE0", VA = "0xA20CE0", Slot = "8")]
	public override float getGrabFlex(MightyVRControlSide side)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xA20D48", Offset = "0xA20D48", VA = "0xA20D48", Slot = "16")]
	public override bool isGrabbing(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xA20D98", Offset = "0xA20D98", VA = "0xA20D98", Slot = "9")]
	public override Vector2 getJoystickDirection(MightyVRControlSide side)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xA20DA8", Offset = "0xA20DA8", VA = "0xA20DA8", Slot = "6")]
	public override Vector3[] getOuterBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xA210CC", Offset = "0xA210CC", VA = "0xA210CC", Slot = "5")]
	public override Vector3[] getPlayAreaBoundary()
	{
		return null;
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xA20DB0", Offset = "0xA20DB0", VA = "0xA20DB0")]
	private Vector3[] getBoundaryPoints(BoundarySystem.BoundaryType boundaryType)
	{
		return null;
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xA212E0", Offset = "0xA212E0", VA = "0xA212E0", Slot = "10")]
	public override bool isAFaceButtonDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xA21360", Offset = "0xA21360", VA = "0xA21360", Slot = "11")]
	public override bool isFingerTriggerDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xA21374", Offset = "0xA21374", VA = "0xA21374", Slot = "12")]
	public override bool isThumbstickDown(MightyVRControlSide side)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xA21388", Offset = "0xA21388", VA = "0xA21388", Slot = "4")]
	public override bool isVRReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xA21390", Offset = "0xA21390", VA = "0xA21390", Slot = "15")]
	public override string getFaceButtonName()
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xA20D3C", Offset = "0xA20D3C", VA = "0xA20D3C")]
	private int GetControllerInt(MightyVRControlSide side)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xA213FC", Offset = "0xA213FC", VA = "0xA213FC", Slot = "13")]
	public override void setControllerVibration(float frequency, float amplitude, MightyVRControlSide side)
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xA21494", Offset = "0xA21494", VA = "0xA21494", Slot = "14")]
	public override void stopAllVibration()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xA210D4", Offset = "0xA210D4", VA = "0xA210D4")]
	private static Vector3[] getDefaultOuterBoundaryPoints()
	{
		return null;
	}
}
[Token(Token = "0x20001BF")]
public class OffhandBulletShield : OffhandPower
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ShieldHitEffect;

	[Token(Token = "0x4000B4B")]
	private const string SoundLoopId = "BulletShieldLoop";

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bulletsBlockedCount;

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xA13220", Offset = "0xA13220", VA = "0xA13220", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xA134A0", Offset = "0xA134A0", VA = "0xA134A0", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xA13630", Offset = "0xA13630", VA = "0xA13630", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xA13634", Offset = "0xA13634", VA = "0xA13634")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xA13794", Offset = "0xA13794", VA = "0xA13794")]
	private void playOnHitEffect(Vector3 position)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xA138C0", Offset = "0xA138C0", VA = "0xA138C0")]
	public OffhandBulletShield()
	{
	}
}
[Token(Token = "0x20001C0")]
public class OffhandChainsaw : OffhandPower
{
	[Token(Token = "0x4000B4D")]
	private const string ChainsawHitLoopId = "ChainsawHitLoop";

	[Token(Token = "0x4000B4E")]
	private const string SoundLoopId = "ChainsawLoop";

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform content;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float damagePerTick;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float timeBetweenHitSounds;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeToSpringToPosition;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeToSpringToPositionCollision;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject shortCollisionDelegate;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject extendedCollisionDelegate;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ModelSwapAnimation modelSwapper;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765F64", Offset = "0x765F64")]
	public float timeToTurnOffSoundAfterHits;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeUntilNextSound;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 positionVelocity;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion rotationalVelocity;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool previousIsDown;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool isTriggerDown;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool isHitting;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastHitTime;

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xA1392C", Offset = "0xA1392C", VA = "0xA1392C", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xA13B38", Offset = "0xA13B38", VA = "0xA13B38", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xA13C20", Offset = "0xA13C20", VA = "0xA13C20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xA13CA0", Offset = "0xA13CA0", VA = "0xA13CA0", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xA14074", Offset = "0xA14074", VA = "0xA14074")]
	private void activateChainsaw()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xA141A0", Offset = "0xA141A0", VA = "0xA141A0")]
	private void deactivateChainsaw()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xA14294", Offset = "0xA14294", VA = "0xA14294")]
	public void hitDamageable(IDamageable hitItem, Vector3 hitPosition)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xA144D4", Offset = "0xA144D4", VA = "0xA144D4")]
	private void playHitSound()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xA13A38", Offset = "0xA13A38", VA = "0xA13A38")]
	private void resetContent()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xA14564", Offset = "0xA14564", VA = "0xA14564")]
	public OffhandChainsaw()
	{
	}
}
[Token(Token = "0x20001C1")]
public class OffhandCopilot : OffhandPower
{
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E74", Offset = "0x761E74")]
	private sealed class <launch>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandCopilot <>4__this;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyBossHeadController head;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xA15A4C", Offset = "0xA15A4C", VA = "0xA15A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xA15AB4", Offset = "0xA15AB4", VA = "0xA15AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xA14CB0", Offset = "0xA14CB0", VA = "0xA14CB0")]
		[DebuggerHidden]
		public <launch>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xA1563C", Offset = "0xA1563C", VA = "0xA1563C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xA15640", Offset = "0xA15640", VA = "0xA15640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xA15A54", Offset = "0xA15A54", VA = "0xA15A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E84", Offset = "0x761E84")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OffhandCopilot <>4__this;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string powerupId;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xA14EB4", Offset = "0xA14EB4", VA = "0xA14EB4")]
		public <>c__DisplayClass27_0()
		{
		}
	}

	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761E94", Offset = "0x761E94")]
	private sealed class <>c__DisplayClass27_1
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable theDamageable;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass27_0 CS$<>8__locals1;

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xA14EBC", Offset = "0xA14EBC", VA = "0xA14EBC")]
		public <>c__DisplayClass27_1()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xA15560", Offset = "0xA15560", VA = "0xA15560")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x4000B5F")]
	private const string CopilotFireGunLoopId = "CopilotGunLoop";

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765F9C", Offset = "0x765F9C")]
	public PlayerGeo playerGeo;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform animationTransform;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x765FD4", Offset = "0x765FD4")]
	public OffhandPugHitscanGun hitScanGun;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76600C", Offset = "0x76600C")]
	public Transform rotationTransform;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766044", Offset = "0x766044")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76607C", Offset = "0x76607C")]
	public Transform targetParent;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform target;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minSpeed;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxSpeed;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve speedUpCurve;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float speedIncreaseTime;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7660B4", Offset = "0x7660B4")]
	public float explosionDamage;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string explosionVFX;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float explosionRadius;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7660EC", Offset = "0x7660EC")]
	public GameObject trail;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float bulletsPerSecond;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float timeUntilPlaySound;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool previousIsFiring;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float gunCountdown;

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xA14580", Offset = "0xA14580", VA = "0xA14580")]
	public void activateForPilot(string pilotId, ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xA14810", Offset = "0xA14810", VA = "0xA14810")]
	public void setupVisuals(string pilotId)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xA149E4", Offset = "0xA149E4", VA = "0xA149E4", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xA14C18", Offset = "0xA14C18", VA = "0xA14C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B7E0", Offset = "0x76B7E0")]
	private IEnumerator launch(EnemyBossHeadController head)
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xA14CDC", Offset = "0xA14CDC", VA = "0xA14CDC")]
	private bool applyDamage(IDamageable thingToDamage, string powerupId, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xA14EC4", Offset = "0xA14EC4", VA = "0xA14EC4", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xA15350", Offset = "0xA15350", VA = "0xA15350")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xA14714", Offset = "0xA14714", VA = "0xA14714")]
	private void resetMeteorObjects()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xA15534", Offset = "0xA15534", VA = "0xA15534")]
	public OffhandCopilot()
	{
	}
}
[Token(Token = "0x20001C2")]
public class OffhandMeteor : OffhandPower
{
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761EA4", Offset = "0x761EA4")]
	private sealed class <launch>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandMeteor <>4__this;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 forward;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xA16990", Offset = "0xA16990", VA = "0xA16990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xA169F8", Offset = "0xA169F8", VA = "0xA169F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xA15FCC", Offset = "0xA15FCC", VA = "0xA15FCC")]
		[DebuggerHidden]
		public <launch>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xA1678C", Offset = "0xA1678C", VA = "0xA1678C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xA16790", Offset = "0xA16790", VA = "0xA16790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xA16998", Offset = "0xA16998", VA = "0xA16998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761EB4", Offset = "0x761EB4")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OffhandMeteor <>4__this;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string powerupId;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xA16644", Offset = "0xA16644", VA = "0xA16644")]
		public <>c__DisplayClass26_0()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761EC4", Offset = "0x761EC4")]
	private sealed class <>c__DisplayClass26_1
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDamageable theDamageable;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass26_0 CS$<>8__locals1;

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xA1664C", Offset = "0xA1664C", VA = "0xA1664C")]
		public <>c__DisplayClass26_1()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xA16690", Offset = "0xA16690", VA = "0xA16690")]
		internal void <applyDamage>b__0()
		{
		}
	}

	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761ED4", Offset = "0x761ED4")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem system;

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xA16654", Offset = "0xA16654", VA = "0xA16654")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xA1676C", Offset = "0xA1676C", VA = "0xA1676C")]
		internal void <explosionEffect>b__0()
		{
		}
	}

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766124", Offset = "0x766124")]
	public Transform target;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Collider targetCollider;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeToLive;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76615C", Offset = "0x76615C")]
	public float timeUntilThrowAllowed;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766194", Offset = "0x766194")]
	public AnimationCurve speedUpCurve;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speedUpDuration;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float startSpeed;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float endSpeed;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystem meteorTrail;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7661CC", Offset = "0x7661CC")]
	public GameObject aimVector;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766204", Offset = "0x766204")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float explosionRadius;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float explosionDamage;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string explosionVFX;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform parentOfTarget;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76623C", Offset = "0x76623C")]
	private bool <isThrown>k__BackingField;

	[Token(Token = "0x170000A0")]
	public bool isThrown
	{
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xA15ABC", Offset = "0xA15ABC", VA = "0xA15ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B844", Offset = "0x76B844")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xA15AC4", Offset = "0xA15AC4", VA = "0xA15AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B854", Offset = "0x76B854")]
		private set
		{
		}
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xA15AD0", Offset = "0xA15AD0", VA = "0xA15AD0", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xA15CFC", Offset = "0xA15CFC", VA = "0xA15CFC", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xA15D30", Offset = "0xA15D30", VA = "0xA15D30", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xA15E24", Offset = "0xA15E24", VA = "0xA15E24")]
	private void fireMeteor()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xA15F2C", Offset = "0xA15F2C", VA = "0xA15F2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B864", Offset = "0x76B864")]
	private IEnumerator launch(Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xA15FF8", Offset = "0xA15FF8", VA = "0xA15FF8")]
	private void checkForCollision()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xA16168", Offset = "0xA16168", VA = "0xA16168")]
	private void explode()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xA1646C", Offset = "0xA1646C", VA = "0xA1646C")]
	private bool applyDamage(IDamageable thingToDamage, string powerupId, int hitCount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xA162A4", Offset = "0xA162A4", VA = "0xA162A4")]
	public void explosionEffect(string key, Vector3 position)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xA15BCC", Offset = "0xA15BCC", VA = "0xA15BCC")]
	private void resetState(bool isVisible = false)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xA1665C", Offset = "0xA1665C", VA = "0xA1665C")]
	public OffhandMeteor()
	{
	}
}
[Token(Token = "0x20001C3")]
public abstract class OffhandPower : MonoBehaviour
{
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761EE4", Offset = "0x761EE4")]
	private sealed class <flashLoop>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandPower <>4__this;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <betweenFlashes>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xA16FF8", Offset = "0xA16FF8", VA = "0xA16FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xA17060", Offset = "0xA17060", VA = "0xA17060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xA16E90", Offset = "0xA16E90", VA = "0xA16E90")]
		[DebuggerHidden]
		public <flashLoop>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xA16EBC", Offset = "0xA16EBC", VA = "0xA16EBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xA16EC0", Offset = "0xA16EC0", VA = "0xA16EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xA17000", Offset = "0xA17000", VA = "0xA17000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B86")]
	private const float WarningFlashValue = 0.5f;

	[Token(Token = "0x4000B87")]
	private const float TimeForFlash = 0.125f;

	[Token(Token = "0x4000B88")]
	private const float TimeBetweenFlashes = 0.25f;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform geo;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator offHandPowerAnimator;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleModelFlash modelFlash;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem hitEffect;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76624C", Offset = "0x76624C")]
	private bool <isPowerActive>k__BackingField;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ShootyVRHandController handController;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76625C", Offset = "0x76625C")]
	private PowerupConfig <config>k__BackingField;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasShownWarning;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float secondsToShowWarning;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine flashRoutine;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float timeActive;

	[Token(Token = "0x170000A1")]
	public bool isPowerActive
	{
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xA16A00", Offset = "0xA16A00", VA = "0xA16A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8C8", Offset = "0x76B8C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xA16A08", Offset = "0xA16A08", VA = "0xA16A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8D8", Offset = "0x76B8D8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public PowerupConfig config
	{
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xA16A14", Offset = "0xA16A14", VA = "0xA16A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8E8", Offset = "0x76B8E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xA16A1C", Offset = "0xA16A1C", VA = "0xA16A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8F8", Offset = "0x76B8F8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xA16A24", Offset = "0xA16A24", VA = "0xA16A24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xA132D8", Offset = "0xA132D8", VA = "0xA132D8", Slot = "4")]
	public virtual void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xA13538", Offset = "0xA13538", VA = "0xA13538", Slot = "5")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xA16B60", Offset = "0xA16B60", VA = "0xA16B60")]
	public bool isHolding(ShootyVRHandController handControllerToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xA16C38", Offset = "0xA16C38", VA = "0xA16C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xA16CF4", Offset = "0xA16CF4", VA = "0xA16CF4")]
	protected float activationSecondsLeft()
	{
		return default(float);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xA16D18", Offset = "0xA16D18", VA = "0xA16D18")]
	private void showWarning()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xA16E14", Offset = "0xA16E14", VA = "0xA16E14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B908", Offset = "0x76B908")]
	private IEnumerator flashLoop()
	{
		return null;
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xA16AA0", Offset = "0xA16AA0", VA = "0xA16AA0")]
	private void flashRoutineCleanup()
	{
	}

	[Token(Token = "0x6000EEE")]
	protected abstract void updateProgress(float progressAlpha);

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xA138C8", Offset = "0xA138C8", VA = "0xA138C8")]
	protected OffhandPower()
	{
	}
}
[Token(Token = "0x20001C4")]
public class OffhandPugHitscanGun : MonoBehaviour
{
	[Token(Token = "0x4000B94")]
	private const string HitscanHitEffect = "Particles/Shooty2_hitScanBullethit";

	[Token(Token = "0x4000B95")]
	private const string HitscanHitShieldEffect = "Particles/Shooty2_hitScanBullethit_boss";

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76626C", Offset = "0x76626C")]
	public LayerMask laserLayerMask;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask removeRaycastHit;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hitCastRadius;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform guidedAim;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7662A4", Offset = "0x7662A4")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient activeLaserColor;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7662DC", Offset = "0x7662DC")]
	public float transformCyclingOffset;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GunFiringEffects[] gunFiringEffects;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GunFiringEffects[] currentEffects;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isRaycastHitting;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int gunFireTransformIndex;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 hitPosition;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject hitGameObject;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isAutofireOnAimEnabled;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isLaserEnabled;

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xA14840", Offset = "0xA14840", VA = "0xA14840")]
	public void setupGun([Optional] PlayerGeo playerGeo)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xA150E4", Offset = "0xA150E4", VA = "0xA150E4")]
	public bool isShooting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xA151DC", Offset = "0xA151DC", VA = "0xA151DC")]
	public void shootBullet(string damageId)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xA17068", Offset = "0xA17068", VA = "0xA17068")]
	private void tryHitDamageable(string damageId)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xA15170", Offset = "0xA15170", VA = "0xA15170")]
	public void resetMuzzles()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xA15104", Offset = "0xA15104", VA = "0xA15104")]
	public void activateMuzzleFlash()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xA1745C", Offset = "0xA1745C", VA = "0xA1745C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xA174F4", Offset = "0xA174F4", VA = "0xA174F4")]
	private void updateLaserSight()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xA172A8", Offset = "0xA172A8", VA = "0xA172A8")]
	private void playHitScanHitEffect(Vector3 position, string hitEffect = "Particles/Shooty2_hitScanBullethit")
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xA177E4", Offset = "0xA177E4", VA = "0xA177E4")]
	private void updateRaycastHitInformation()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xA14B94", Offset = "0xA14B94", VA = "0xA14B94")]
	public void resetRaycastInfo()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xA17238", Offset = "0xA17238", VA = "0xA17238")]
	private float currentGunDamageLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xA17B14", Offset = "0xA17B14", VA = "0xA17B14")]
	public OffhandPugHitscanGun()
	{
	}
}
[Token(Token = "0x20001C5")]
public class OffhandShark : OffhandPower
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766314", Offset = "0x766314")]
	public LayerMask raycastLayer;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int damageAmount;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float extendSpeed;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float retractSpeed;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float biteRadius;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76634C", Offset = "0x76634C")]
	public Transform content;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float timeToSpringToPosition;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766384", Offset = "0x766384")]
	public Transform head;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform headAnchor;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform handleScaler;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isAnimating;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float baseDistance;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 positionVelocity;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion rotationalVelocity;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool didBiteRecently;

	[Token(Token = "0x4000BB5")]
	private const string SoundLoopId = "SharkIdleLoop";

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xA17B30", Offset = "0xA17B30", VA = "0xA17B30", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xA17DB0", Offset = "0xA17DB0", VA = "0xA17DB0", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xA17E88", Offset = "0xA17E88", VA = "0xA17E88", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xA18564", Offset = "0xA18564", VA = "0xA18564")]
	private void positionAndPlayBiteVFX()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xA17CD4", Offset = "0xA17CD4", VA = "0xA17CD4")]
	private void resetContent()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xA185E4", Offset = "0xA185E4", VA = "0xA185E4")]
	public OffhandShark()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xA1861C", Offset = "0xA1861C", VA = "0xA1861C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B96C", Offset = "0x76B96C")]
	private void <updateProgress>b__18_0()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xA186B0", Offset = "0xA186B0", VA = "0xA186B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B97C", Offset = "0x76B97C")]
	private void <positionAndPlayBiteVFX>b__19_0()
	{
	}
}
[Token(Token = "0x20001C6")]
public class OffhandTrumpet : OffhandPower
{
	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TrumpetBulletKey;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7663BC", Offset = "0x7663BC")]
	public Transform trumpetMouthpiece;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 offsetToMouth;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distanceToActivate;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7663F4", Offset = "0x7663F4")]
	public Transform trumpetFiringSpot;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float timeBetweenShots;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeUntilNextShot;

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xA186D0", Offset = "0xA186D0", VA = "0xA186D0", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xA186E8", Offset = "0xA186E8", VA = "0xA186E8", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xA1895C", Offset = "0xA1895C", VA = "0xA1895C")]
	private void launchBullet()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xA186DC", Offset = "0xA186DC", VA = "0xA186DC")]
	private void resetShotTime()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xA18A7C", Offset = "0xA18A7C", VA = "0xA18A7C")]
	public OffhandTrumpet()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xA18AE8", Offset = "0xA18AE8", VA = "0xA18AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B98C", Offset = "0x76B98C")]
	private void <updateProgress>b__9_0()
	{
	}
}
[Token(Token = "0x20001C7")]
public class OffhandVacuum : OffhandPower
{
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761EF4", Offset = "0x761EF4")]
	private sealed class <suctionLoop>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffhandVacuum <>4__this;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <itemsSuckedInCount>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xA195EC", Offset = "0xA195EC", VA = "0xA195EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xA19654", Offset = "0xA19654", VA = "0xA19654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xA19048", Offset = "0xA19048", VA = "0xA19048")]
		[DebuggerHidden]
		public <suctionLoop>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xA19380", Offset = "0xA19380", VA = "0xA19380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xA19384", Offset = "0xA19384", VA = "0xA19384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xA195F4", Offset = "0xA195F4", VA = "0xA195F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBE")]
	private const float VacuumRadius = 2.5f;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76642C", Offset = "0x76642C")]
	public Transform suctionPoint;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask targetLayer;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float distanceToCleanup;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766464", Offset = "0x766464")]
	public AnimationCurve suctionForceCurve;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float suctionForceMin;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float suctionForceMax;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float suctionDistanceMax;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76649C", Offset = "0x76649C")]
	public ParticleSystem suctionVFX;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Transform> itemsBeingSuckedIn;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine suctionRoutine;

	[Token(Token = "0x4000BC9")]
	private const string SoundLoopId = "OffhandVacuumLoop";

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xA18B78", Offset = "0xA18B78", VA = "0xA18B78", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xA18D4C", Offset = "0xA18D4C", VA = "0xA18D4C", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xA18DD8", Offset = "0xA18DD8", VA = "0xA18DD8", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xA18CD0", Offset = "0xA18CD0", VA = "0xA18CD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76B99C", Offset = "0x76B99C")]
	private IEnumerator suctionLoop()
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xA19074", Offset = "0xA19074", VA = "0xA19074")]
	private void applySuction(Transform target, Vector3 suctionPosition)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xA191F8", Offset = "0xA191F8", VA = "0xA191F8")]
	private void tryCleanup(Transform target)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xA192FC", Offset = "0xA192FC", VA = "0xA192FC")]
	public OffhandVacuum()
	{
	}
}
[Token(Token = "0x20001C8")]
public class OffhandWingcat : OffhandPower
{
	[Token(Token = "0x4000BCA")]
	private const string PugFireGunLoopId = "PugGunLoop";

	[Token(Token = "0x4000BCB")]
	private const string PugEngineLoopId = "PugGunEngineLoop";

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7664D4", Offset = "0x7664D4")]
	public OffhandPugHitscanGun hitScanGun;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76650C", Offset = "0x76650C")]
	public Transform rotationTransform;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766544", Offset = "0x766544")]
	public string soundKey;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float bulletsPerSecond;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeUntilPlaySound;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool previousIsFiring;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gunCountdown;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xA1965C", Offset = "0xA1965C", VA = "0xA1965C", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xA197A4", Offset = "0xA197A4", VA = "0xA197A4", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xA19850", Offset = "0xA19850", VA = "0xA19850", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xA19A98", Offset = "0xA19A98", VA = "0xA19A98")]
	private void updatePilotRotation()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xA19C7C", Offset = "0xA19C7C", VA = "0xA19C7C")]
	public OffhandWingcat()
	{
	}
}
[Token(Token = "0x20001C9")]
public class OffhandYoyo : OffhandPower
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76657C", Offset = "0x76657C")]
	public Transform yoyo;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LineRenderer stringLine;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GenericDamagingCollisionDelegator collisionDelegator;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem yoyoTrail;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7665B4", Offset = "0x7665B4")]
	public float rotationSpeed;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float forwardSpeed;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float extensionDistance;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float feedbackAmplitude;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isExtending;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 extensionTarget;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform yoyoParent;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool previousIsTriggerDown;

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xA19C90", Offset = "0xA19C90", VA = "0xA19C90", Slot = "4")]
	public override void activate(ShootyVRHandController controller, PowerupConfig config)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xA19F90", Offset = "0xA19F90", VA = "0xA19F90", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xA1A044", Offset = "0xA1A044", VA = "0xA1A044", Slot = "6")]
	protected override void updateProgress(float progressAlpha)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xA1A710", Offset = "0xA1A710", VA = "0xA1A710")]
	private bool isYoyoInHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xA1A630", Offset = "0xA1A630", VA = "0xA1A630")]
	private bool canBeRetracted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xA1A474", Offset = "0xA1A474", VA = "0xA1A474")]
	private void extendOut()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xA1A628", Offset = "0xA1A628", VA = "0xA1A628")]
	private void retract()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xA19DFC", Offset = "0xA19DFC", VA = "0xA19DFC")]
	private void resetYoyo()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xA1A838", Offset = "0xA1A838", VA = "0xA1A838")]
	private void rotateYoyo()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xA19F24", Offset = "0xA19F24", VA = "0xA19F24")]
	private void updateYoyoString()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xA1A900", Offset = "0xA1A900", VA = "0xA1A900")]
	private void playHitEffect()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xA1A920", Offset = "0xA1A920", VA = "0xA1A920")]
	public OffhandYoyo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CA")]
public struct PowerupWeightOverrides
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int yoyo;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int trumpet;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int chainsaw;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int shark;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int meteor;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int shield;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int vacuum;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wingcatpug;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x7F4C84", Offset = "0x7F4C84", VA = "0x7F4C84")]
	public Dictionary<string, int> getPowerupWeights()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class PowerupConfig
{
	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string powerupId;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string prefabKey;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string locId;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float activationDuration;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string allowedWorldId;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameStateList stateList;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7665EC", Offset = "0x7665EC")]
	private int <lifetimeActivations>k__BackingField;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7665FC", Offset = "0x7665FC")]
	private int <lifetimeKeyEventCount>k__BackingField;

	[Token(Token = "0x170000A3")]
	public int lifetimeActivations
	{
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1625D34", Offset = "0x1625D34", VA = "0x1625D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA00", Offset = "0x76BA00")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1625D3C", Offset = "0x1625D3C", VA = "0x1625D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA10", Offset = "0x76BA10")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int lifetimeKeyEventCount
	{
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1625D44", Offset = "0x1625D44", VA = "0x1625D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA20", Offset = "0x76BA20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1625D4C", Offset = "0x1625D4C", VA = "0x1625D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA30", Offset = "0x76BA30")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1625D54", Offset = "0x1625D54", VA = "0x1625D54")]
	public PowerupConfig(Command theCommand)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1625E1C", Offset = "0x1625E1C", VA = "0x1625E1C")]
	private void loadState()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x1625F08", Offset = "0x1625F08", VA = "0x1625F08")]
	private void saveState()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1625FD4", Offset = "0x1625FD4", VA = "0x1625FD4")]
	public string localisedName()
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1626040", Offset = "0x1626040", VA = "0x1626040")]
	public string iconString()
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x162604C", Offset = "0x162604C", VA = "0x162604C")]
	public string resourcesPath()
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x16260A0", Offset = "0x16260A0", VA = "0x16260A0")]
	public float getActivationDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x16260A8", Offset = "0x16260A8", VA = "0x16260A8")]
	public bool isAllowedToSpawn(string currentWorldId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1626138", Offset = "0x1626138", VA = "0x1626138")]
	public bool isCopilotPowerup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1626190", Offset = "0x1626190", VA = "0x1626190")]
	public void incrementActivationCount()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x16261A0", Offset = "0x16261A0", VA = "0x16261A0")]
	public void incrementKeyEventCount(int amount = 1)
	{
	}
}
[Token(Token = "0x20001CC")]
public class PowerupController : SingletonMono<PowerupController>
{
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F04", Offset = "0x761F04")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootyVRHandController controller;

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xB7BE0C", Offset = "0xB7BE0C", VA = "0xB7BE0C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xB7BE14", Offset = "0xB7BE14", VA = "0xB7BE14")]
		internal void <postActivationLogic>b__0()
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F14", Offset = "0x761F14")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject toCleanup;

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xB7BE9C", Offset = "0xB7BE9C", VA = "0xB7BE9C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xB7BEA4", Offset = "0xB7BEA4", VA = "0xB7BEA4")]
		internal void <returnPowerupObject>b__0()
		{
		}
	}

	[Token(Token = "0x4000BF2")]
	private const string PopupId = "PowerupActive";

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MappedList<PowerupConfig> powerups;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LootDropTable powerupDrops;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OffhandPower currentActive;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> copilotIds;

	[Token(Token = "0x170000A5")]
	public string currentActiveId
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x16261B0", Offset = "0x16261B0", VA = "0x16261B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1626220", Offset = "0x1626220", VA = "0x1626220")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1626454", Offset = "0x1626454", VA = "0x1626454")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x162680C", Offset = "0x162680C", VA = "0x162680C", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1626928", Offset = "0x1626928", VA = "0x1626928")]
	public List<string> allPowerupIds()
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x16269FC", Offset = "0x16269FC", VA = "0x16269FC")]
	public void activatePowerup(ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1626F48", Offset = "0x1626F48", VA = "0x1626F48")]
	public void activatePowerup(string powerupId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1626C74", Offset = "0x1626C74", VA = "0x1626C74")]
	private void activatePowerup(PowerupConfig chosenPowerup, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x1627084", Offset = "0x1627084", VA = "0x1627084")]
	public void activateCopilotPowerup(string pilotId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x1627588", Offset = "0x1627588", VA = "0x1627588")]
	public string getNextCopilotId()
	{
		return null;
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x16272F0", Offset = "0x16272F0", VA = "0x16272F0")]
	private void postActivationLogic(string popupContent, string powerupId, ShootyVRHandController controller)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1627694", Offset = "0x1627694", VA = "0x1627694")]
	public void cleanupPowerup(OffhandPower deactivatingPowerup)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1627880", Offset = "0x1627880", VA = "0x1627880")]
	private void returnPowerupObject(OffhandPower powerup, float delay = 0.5f)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x162794C", Offset = "0x162794C", VA = "0x162794C")]
	public PowerupConfig getPowerupConfig(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1627A28", Offset = "0x1627A28", VA = "0x1627A28")]
	public string getPowerupName(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1627B08", Offset = "0x1627B08", VA = "0x1627B08")]
	public string getPowerupIconCode(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1627BF0", Offset = "0x1627BF0", VA = "0x1627BF0")]
	public bool isHoldingPower(ShootyVRHandController handController)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1627C9C", Offset = "0x1627C9C", VA = "0x1627C9C")]
	private void definePowerup(Command theCommand)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1626B28", Offset = "0x1626B28", VA = "0x1626B28")]
	private PowerupConfig getNextPowerupConfig()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x1627DC8", Offset = "0x1627DC8", VA = "0x1627DC8")]
	private void levelPlayStarted(object note)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x162645C", Offset = "0x162645C", VA = "0x162645C")]
	private void resetPowerupDrops(GameMode gameMode = GameMode.None)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x1627E70", Offset = "0x1627E70", VA = "0x1627E70")]
	public List<PowerupConfig> getPowerupsInCurrentWorld()
	{
		return null;
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x162800C", Offset = "0x162800C", VA = "0x162800C")]
	public void debugPrintStats(string powerupId)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1628178", Offset = "0x1628178", VA = "0x1628178")]
	public PowerupController()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1628220", Offset = "0x1628220", VA = "0x1628220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA40", Offset = "0x76BA40")]
	private void <bootstrap>b__7_0()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1628228", Offset = "0x1628228", VA = "0x1628228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BA50", Offset = "0x76BA50")]
	private void <bootstrap>b__7_1()
	{
	}
}
[Token(Token = "0x20001CD")]
public sealed class PowerupControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PowerupController powerupController;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xB7BF64", Offset = "0xB7BF64", VA = "0xB7BF64", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xB7C04C", Offset = "0xB7C04C", VA = "0xB7C04C", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xB7C088", Offset = "0xB7C088", VA = "0xB7C088")]
	public PowerupControllerBooter()
	{
	}
}
[Token(Token = "0x20001CE")]
public sealed class AdjustForScreenSafe : MonoBehaviour
{
	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float screenPercentage;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scale;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool adhereToScreenSpace;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xAC64FC", Offset = "0xAC64FC", VA = "0xAC64FC")]
	public AdjustForScreenSafe()
	{
	}
}
[Token(Token = "0x20001CF")]
public sealed class BackButton : MonoBehaviour
{
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x9BC27C", Offset = "0x9BC27C", VA = "0x9BC27C")]
	public BackButton()
	{
	}
}
[Token(Token = "0x20001D0")]
public sealed class BackButtonHandler : MonoBehaviour
{
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F24", Offset = "0x761F24")]
	private sealed class <delayedBoot>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSeconds <delay>5__2;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x9BCA60", Offset = "0x9BCA60", VA = "0x9BCA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x9BCAC8", Offset = "0x9BCAC8", VA = "0x9BCAC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x9BC310", Offset = "0x9BC310", VA = "0x9BC310")]
		[DebuggerHidden]
		public <delayedBoot>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x9BC8F0", Offset = "0x9BC8F0", VA = "0x9BC8F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x9BC8F4", Offset = "0x9BC8F4", VA = "0x9BC8F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x9BCA68", Offset = "0x9BCA68", VA = "0x9BCA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9BC284", Offset = "0x9BC284", VA = "0x9BC284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9BC2B0", Offset = "0x9BC2B0", VA = "0x9BC2B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BA60", Offset = "0x76BA60")]
	private IEnumerator delayedBoot()
	{
		return null;
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x9BC33C", Offset = "0x9BC33C", VA = "0x9BC33C")]
	private void handleBackButton()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x9BC818", Offset = "0x9BC818", VA = "0x9BC818")]
	private bool handlePausePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x9BC520", Offset = "0x9BC520", VA = "0x9BC520")]
	private bool handleBackEnabledPanels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x9BC8D0", Offset = "0x9BC8D0", VA = "0x9BC8D0")]
	private bool handleAreYouSurePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x9BC8D8", Offset = "0x9BC8D8", VA = "0x9BC8D8")]
	private bool handleMainMenuTypePanels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x9BC8E0", Offset = "0x9BC8E0", VA = "0x9BC8E0")]
	private bool handleAppExit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x9BC8E8", Offset = "0x9BC8E8", VA = "0x9BC8E8")]
	public BackButtonHandler()
	{
	}
}
[Token(Token = "0x20001D1")]
public sealed class BoingPopper
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F34", Offset = "0x761F34")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action complete;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<float> <>9__2;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__3;

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x9BDB48", Offset = "0x9BDB48", VA = "0x9BDB48")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x9BE108", Offset = "0x9BE108", VA = "0x9BE108")]
		internal void <boingPop>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x9BE1D0", Offset = "0x9BE1D0", VA = "0x9BE1D0")]
		internal void <boingPop>b__1()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x9BE330", Offset = "0x9BE330", VA = "0x9BE330")]
		internal void <boingPop>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x9BE3F8", Offset = "0x9BE3F8", VA = "0x9BE3F8")]
		internal void <boingPop>b__3()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F44", Offset = "0x761F44")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endScale;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action complete;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__2;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x9BDDEC", Offset = "0x9BDDEC", VA = "0x9BDDEC")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x9BE4B0", Offset = "0x9BE4B0", VA = "0x9BE4B0")]
		internal void <boingShrink>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x9BE578", Offset = "0x9BE578", VA = "0x9BE578")]
		internal void <boingShrink>b__1()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x9BE6DC", Offset = "0x9BE6DC", VA = "0x9BE6DC")]
		internal void <boingShrink>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x9BE7A8", Offset = "0x9BE7A8", VA = "0x9BE7A8")]
		internal void <boingShrink>b__3()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F54", Offset = "0x761F54")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform theItem;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startScale;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 midScale;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endScale;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action complete;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__2;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x9BE080", Offset = "0x9BE080", VA = "0x9BE080")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x9BE860", Offset = "0x9BE860", VA = "0x9BE860")]
		internal void <boingGrow>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x9BE928", Offset = "0x9BE928", VA = "0x9BE928")]
		internal void <boingGrow>b__1()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x9BEA8C", Offset = "0x9BEA8C", VA = "0x9BEA8C")]
		internal void <boingGrow>b__2(float lerpValue)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x9BEB58", Offset = "0x9BEB58", VA = "0x9BEB58")]
		internal void <boingGrow>b__3()
		{
		}
	}

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Transform, bool> itemsPopping;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x9BD8CC", Offset = "0x9BD8CC", VA = "0x9BD8CC")]
	public static bool boingPop(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x9BDB50", Offset = "0x9BDB50", VA = "0x9BDB50")]
	public static bool boingShrink(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x9BDDF4", Offset = "0x9BDDF4", VA = "0x9BDDF4")]
	public static bool boingGrow(Transform theItem, float scale = 1.3f, float time = 0.25f, [Optional] Action complete)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x9BE088", Offset = "0x9BE088", VA = "0x9BE088")]
	public BoingPopper()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7606FC", Offset = "0x7606FC")]
public sealed class ButtonDebouncer : MonoBehaviour
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float debounceTime;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastClickedTime;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button theButton;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button.ButtonClickedEvent theButtonEvent;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x9C6360", Offset = "0x9C6360", VA = "0x9C6360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x9C646C", Offset = "0x9C646C", VA = "0x9C646C")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9C64C0", Offset = "0x9C64C0", VA = "0x9C64C0")]
	public ButtonDebouncer()
	{
	}
}
[Token(Token = "0x20001D3")]
public sealed class ChangeLanguageTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SystemLanguage language;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x9C74A4", Offset = "0x9C74A4", VA = "0x9C74A4")]
	public void changeMyLanguage()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x9C7528", Offset = "0x9C7528", VA = "0x9C7528")]
	public ChangeLanguageTrigger()
	{
	}
}
[Token(Token = "0x20001D4")]
public class CloudSavePanel : MonoBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CloudSavePanelItem localPanelItem;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudSavePanelItem cloudSavePanelItem;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CloudSavePanelItem selectedItem;

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9C8C6C", Offset = "0x9C8C6C", VA = "0x9C8C6C")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x9C9178", Offset = "0x9C9178", VA = "0x9C9178")]
	public void selectLocalSave()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x9C9180", Offset = "0x9C9180", VA = "0x9C9180")]
	public void selectCloudSave()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x9C9188", Offset = "0x9C9188", VA = "0x9C9188")]
	public void confirmButtonWasPressed()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x9C9098", Offset = "0x9C9098", VA = "0x9C9098")]
	private void selectSavePanel(bool isLocalSaveSelected)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x9C9210", Offset = "0x9C9210", VA = "0x9C9210")]
	private void localSaveWasConfirmed()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x9C92A0", Offset = "0x9C92A0", VA = "0x9C92A0")]
	private void cloudSaveWasConfirmed()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x9C942C", Offset = "0x9C942C", VA = "0x9C942C")]
	public CloudSavePanel()
	{
	}
}
[Token(Token = "0x20001D5")]
public class CloudSavePanelItem : MonoBehaviour
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text saveTitle;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text saveHighScore;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text saveTime;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SVGImage tick;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76660C", Offset = "0x76660C")]
	public SVGImage background;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVGAsset selected;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SVGAsset notSelected;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float scale;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float duration;

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x9C9310", Offset = "0x9C9310", VA = "0x9C9310")]
	public void select()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x9C93DC", Offset = "0x9C93DC", VA = "0x9C93DC")]
	public void deselect()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x9C8EB0", Offset = "0x9C8EB0", VA = "0x9C8EB0")]
	public void setAsNewGame()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x9C8D5C", Offset = "0x9C8D5C", VA = "0x9C8D5C")]
	public void setAsLocalSave()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x9C8F84", Offset = "0x9C8F84", VA = "0x9C8F84")]
	public void setAsCloudSave()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x9C9434", Offset = "0x9C9434", VA = "0x9C9434")]
	public CloudSavePanelItem()
	{
	}
}
[Token(Token = "0x20001D6")]
public class CurrentWavePrintOut : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text waveLabel;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x953838", Offset = "0x953838", VA = "0x953838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x953944", Offset = "0x953944", VA = "0x953944")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x9539DC", Offset = "0x9539DC", VA = "0x9539DC")]
	private void updateLabel(object note)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x953A98", Offset = "0x953A98", VA = "0x953A98")]
	public CurrentWavePrintOut()
	{
	}
}
[Token(Token = "0x20001D7")]
public sealed class DebugActions : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F64", Offset = "0x761F64")]
	private sealed class <>c
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__15_0;

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x956064", Offset = "0x956064", VA = "0x956064")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x95606C", Offset = "0x95606C", VA = "0x95606C")]
		internal void <clearAllGameProgress>b__15_0()
		{
		}
	}

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text testLeaderboardLabel;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text showingControllersLabel;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text showingFloorLabel;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text scaleValueLabel;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float arcadeUIScaleValue;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isShowingControllers;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	private static bool isShowingFloor;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	private static bool IsUsingTestLeaderboard;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x954058", Offset = "0x954058", VA = "0x954058")]
	public static float ArcadeUIScaleValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x954148", Offset = "0x954148", VA = "0x954148")]
	public static bool IsUsingTestLeaderboardId()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x9541E0", Offset = "0x9541E0", VA = "0x9541E0")]
	public static bool CanShowControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x954278", Offset = "0x954278", VA = "0x954278")]
	public static bool CanShowFloor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x9540E8", Offset = "0x9540E8", VA = "0x9540E8")]
	public static bool IsDebugAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x954310", Offset = "0x954310", VA = "0x954310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x954924", Offset = "0x954924", VA = "0x954924")]
	public void wipeSaves()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x954ACC", Offset = "0x954ACC", VA = "0x954ACC")]
	public void clearAllGameProgress(Transform button)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x9553A4", Offset = "0x9553A4", VA = "0x9553A4")]
	public void unlockAllPilotsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x9550D8", Offset = "0x9550D8", VA = "0x9550D8")]
	public void clearAllMissionProgress(Transform button)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x954E40", Offset = "0x954E40", VA = "0x954E40")]
	public void lockAllPilotsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x9555A4", Offset = "0x9555A4", VA = "0x9555A4")]
	public void completeCurrentMission(Transform button)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x955708", Offset = "0x955708", VA = "0x955708")]
	public void unlockAllWorldsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x955890", Offset = "0x955890", VA = "0x955890")]
	public void unlockArcadeModeButtonPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x9559EC", Offset = "0x9559EC", VA = "0x9559EC")]
	public void lockArcadeModeButtonPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x954C88", Offset = "0x954C88", VA = "0x954C88")]
	public void lockAllWorldsWasPressed(Transform button)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x955AAC", Offset = "0x955AAC", VA = "0x955AAC")]
	public void toggleControllersFlag()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x955B98", Offset = "0x955B98", VA = "0x955B98")]
	public void toggleFloorFlag()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x9551A8", Offset = "0x9551A8", VA = "0x9551A8")]
	public void clearAchievementProgress(Transform button)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x955C84", Offset = "0x955C84", VA = "0x955C84")]
	public void togglePostProcessing()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x955DC4", Offset = "0x955DC4", VA = "0x955DC4")]
	public void toggleTestLeaderboardId()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x955E94", Offset = "0x955E94", VA = "0x955E94")]
	public void cycleDebugScaleValue()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x954828", Offset = "0x954828", VA = "0x954828")]
	private void updateScaleValueLabel()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x954414", Offset = "0x954414", VA = "0x954414")]
	private void updateControllerToggleLabel()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x954570", Offset = "0x954570", VA = "0x954570")]
	private void updateFloorToggleLabel()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x9546CC", Offset = "0x9546CC", VA = "0x9546CC")]
	private void updateTestLeaderboardToggle()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x955274", Offset = "0x955274", VA = "0x955274")]
	private void showPopup(string content)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x955F78", Offset = "0x955F78", VA = "0x955F78")]
	public DebugActions()
	{
	}
}
[Token(Token = "0x20001D8")]
public class DebugDevelopmentDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject displayParent;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text godModeLabel;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text averageFrameRateText;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text recentLowFrameRateText;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentSecond;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> recentFrameTimes;

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x956528", Offset = "0x956528", VA = "0x956528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x95666C", Offset = "0x95666C", VA = "0x95666C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x956704", Offset = "0x956704", VA = "0x956704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x956970", Offset = "0x956970", VA = "0x956970")]
	private void UpdateFPSDisplay(Text display, int fps, string prefix)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x956A20", Offset = "0x956A20", VA = "0x956A20")]
	private void UpdateGodModeState(object note)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x956AB4", Offset = "0x956AB4", VA = "0x956AB4")]
	public DebugDevelopmentDisplay()
	{
	}
}
[Token(Token = "0x20001D9")]
public class DebugLevelProgress : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fillParent;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image fillBar;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject label;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766644", Offset = "0x766644")]
	public float minEaseVelocity;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxEaseVelocity;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetFillAmount;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x956B30", Offset = "0x956B30", VA = "0x956B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x956C78", Offset = "0x956C78", VA = "0x956C78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x956D10", Offset = "0x956D10", VA = "0x956D10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x956E0C", Offset = "0x956E0C", VA = "0x956E0C")]
	private void updateProgress(object note)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x956C18", Offset = "0x956C18", VA = "0x956C18")]
	private void reset()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x956F2C", Offset = "0x956F2C", VA = "0x956F2C")]
	public DebugLevelProgress()
	{
	}
}
[Token(Token = "0x20001DA")]
public class DebugLifeTimer : MonoBehaviour
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject contentParent;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text timerLabel;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x956F40", Offset = "0x956F40", VA = "0x956F40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x957058", Offset = "0x957058", VA = "0x957058")]
	public DebugLifeTimer()
	{
	}
}
[Token(Token = "0x20001DB")]
public class DebugMeshToggles : MonoBehaviour
{
	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool areBulletMeshesEnabled;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool areEnemyMeshesEnabled;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text toggleBulletsLabel;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text toggleEnemiesLabel;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRPlayspace space;

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x957060", Offset = "0x957060", VA = "0x957060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x957210", Offset = "0x957210", VA = "0x957210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x9573E0", Offset = "0x9573E0", VA = "0x9573E0")]
	public void toggleEnemyMeshesButtonPressed()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x957458", Offset = "0x957458", VA = "0x957458")]
	public void toggleBulletMeshesButtonPressed()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x957064", Offset = "0x957064", VA = "0x957064")]
	private void updateButtonLabels()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x9574D0", Offset = "0x9574D0", VA = "0x9574D0")]
	public DebugMeshToggles()
	{
	}
}
[Token(Token = "0x20001DC")]
public class DebugOnlyItem : MonoBehaviour
{
	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x957538", Offset = "0x957538", VA = "0x957538", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x9575C8", Offset = "0x9575C8", VA = "0x9575C8")]
	public DebugOnlyItem()
	{
	}
}
[Token(Token = "0x20001DD")]
public sealed class DetailFrameSizer : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smallHeight;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smallYPos;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medHeight;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float medYPos;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tallHeight;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float tallYPos;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float extraTallHeight;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float extraTallYPos;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform myRect;

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x959084", Offset = "0x959084", VA = "0x959084")]
	public void goSmall()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x959180", Offset = "0x959180", VA = "0x959180")]
	public void goMed()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x959188", Offset = "0x959188", VA = "0x959188")]
	public void goTall()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x959190", Offset = "0x959190", VA = "0x959190")]
	public void goExtraTall()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x95908C", Offset = "0x95908C", VA = "0x95908C")]
	public void resize(float height, float yPos)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x959198", Offset = "0x959198", VA = "0x959198")]
	public DetailFrameSizer()
	{
	}
}
[Token(Token = "0x20001DE")]
public sealed class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text CounterText;

	[Token(Token = "0x4000C35")]
	private const string intStringFormat = "D2";

	[Token(Token = "0x4000C36")]
	private const int intStringCacheLength = 100;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] intStringCache;

	[Token(Token = "0x4000C38")]
	private const int averageCountLength = 120;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> fpsAverageList;

	[Token(Token = "0x4000C3A")]
	private const float textUpdateFrequency = 0.05f;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTextUpdateTime;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StringBuilder stringBuilder;

	[Token(Token = "0x4000C3D")]
	private const string highFpsColourTag = "<color=green>";

	[Token(Token = "0x4000C3E")]
	private const string mediumFpsColourTag = "<color=orange>";

	[Token(Token = "0x4000C3F")]
	private const string lowFpsColourTag = "<color=red>";

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x977E2C", Offset = "0x977E2C", VA = "0x977E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x977FC4", Offset = "0x977FC4", VA = "0x977FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x978354", Offset = "0x978354", VA = "0x978354")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x20001DF")]
public sealed class FacebookErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x978528", Offset = "0x978528", VA = "0x978528")]
	public static void showErrorPanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x9785CC", Offset = "0x9785CC", VA = "0x9785CC")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x9786A8", Offset = "0x9786A8", VA = "0x9786A8")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x9786FC", Offset = "0x9786FC", VA = "0x9786FC")]
	public FacebookErrorPanel()
	{
	}
}
[Token(Token = "0x20001E0")]
public class GizmoLine : MonoBehaviour
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showsGizmo;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform destination;

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x8F705C", Offset = "0x8F705C", VA = "0x8F705C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x8F7164", Offset = "0x8F7164", VA = "0x8F7164")]
	public GizmoLine()
	{
	}
}
[Token(Token = "0x20001E1")]
public sealed class GlobalSimpleSpinner : SingletonMono<GlobalSimpleSpinner>
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationValue;

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x8F7B50", Offset = "0x8F7B50", VA = "0x8F7B50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x8F7BA8", Offset = "0x8F7BA8", VA = "0x8F7BA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x8F7C70", Offset = "0x8F7C70", VA = "0x8F7C70")]
	public float GetCurrentRotation()
	{
		return default(float);
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x8F7C78", Offset = "0x8F7C78", VA = "0x8F7C78")]
	public GlobalSimpleSpinner()
	{
	}
}
[Token(Token = "0x20001E2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x760760", Offset = "0x760760")]
public class UICornersGradient : BaseMeshEffect
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_topLeftColor;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_topRightColor;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_bottomRightColor;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color m_bottomLeftColor;

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xA8EDD0", Offset = "0xA8EDD0", VA = "0xA8EDD0", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xA8F2B8", Offset = "0xA8F2B8", VA = "0xA8F2B8")]
	public UICornersGradient()
	{
	}
}
[Token(Token = "0x20001E3")]
public static class UIGradientUtils
{
	[Token(Token = "0x20003D3")]
	public struct Matrix2x3
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m10;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m11;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m12;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x7F3460", Offset = "0x7F3460", VA = "0x7F3460")]
		public Matrix2x3(float m00, float m01, float m02, float m10, float m11, float m12)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xA8F184", Offset = "0xA8F184", VA = "0xA8F184")]
		public static Vector2 operator *(Matrix2x3 m, Vector2 v)
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] ms_verticesPositions;

	[Token(Token = "0x170000A6")]
	public static Vector2[] VerticePositions
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xA8F80C", Offset = "0xA8F80C", VA = "0xA8F80C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xA8F0C4", Offset = "0xA8F0C4", VA = "0xA8F0C4")]
	public static Matrix2x3 LocalPositionMatrix(Rect rect, Vector2 dir)
	{
		return default(Matrix2x3);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xA8F874", Offset = "0xA8F874", VA = "0xA8F874")]
	public static Vector2 RotationDir(float angle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xA8F918", Offset = "0xA8F918", VA = "0xA8F918")]
	public static Vector2 CompensateAspectRatio(Rect rect, Vector2 dir)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xA8F97C", Offset = "0xA8F97C", VA = "0xA8F97C")]
	public static float InverseLerp(float a, float b, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xA8F1DC", Offset = "0xA8F1DC", VA = "0xA8F1DC")]
	public static Color Bilerp(Color a1, Color a2, Color b1, Color b2, Vector2 t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xA8F99C", Offset = "0xA8F99C", VA = "0xA8F99C")]
	public static void Lerp(UIVertex a, UIVertex b, float t, ref UIVertex c)
	{
	}
}
[Token(Token = "0x20001E4")]
public class HealthBar : MonoBehaviour
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image fill;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76667C", Offset = "0x76667C")]
	public Image bossIcon;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite fullhealthIcon;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite stageTwoIcon;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite stageThreeIcon;

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x8FC884", Offset = "0x8FC884", VA = "0x8FC884")]
	public void updateHealth(float percent)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x8FC90C", Offset = "0x8FC90C", VA = "0x8FC90C")]
	public HealthBar()
	{
	}
}
[Token(Token = "0x20001E5")]
public sealed class HideOnLandscape : MonoBehaviour
{
	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x8FD494", Offset = "0x8FD494", VA = "0x8FD494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x8FD5D4", Offset = "0x8FD5D4", VA = "0x8FD5D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x8FD574", Offset = "0x8FD574", VA = "0x8FD574")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x8FD66C", Offset = "0x8FD66C", VA = "0x8FD66C")]
	public HideOnLandscape()
	{
	}
}
[Token(Token = "0x20001E6")]
public sealed class HideOnPlatform : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RuntimePlatform> PlatformsToHideOn;

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x8FD674", Offset = "0x8FD674", VA = "0x8FD674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x8FD708", Offset = "0x8FD708", VA = "0x8FD708")]
	public HideOnPlatform()
	{
	}
}
[Token(Token = "0x20001E7")]
public sealed class HideOnPortrait : MonoBehaviour
{
	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x8FD710", Offset = "0x8FD710", VA = "0x8FD710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x8FD850", Offset = "0x8FD850", VA = "0x8FD850")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x8FD7F0", Offset = "0x8FD7F0", VA = "0x8FD7F0")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x8FD8E8", Offset = "0x8FD8E8", VA = "0x8FD8E8")]
	public HideOnPortrait()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Invisiparent : MonoBehaviour
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool drawsArrow;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showsGizmo;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showsGizmoInGame;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x8FFDD4", Offset = "0x8FFDD4", VA = "0x8FFDD4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x9000EC", Offset = "0x9000EC", VA = "0x9000EC")]
	public Invisiparent()
	{
	}
}
[Token(Token = "0x20001E9")]
public sealed class MakeUIInvisibleToEvents : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x99278C", Offset = "0x99278C", VA = "0x99278C", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x992794", Offset = "0x992794", VA = "0x992794")]
	public MakeUIInvisibleToEvents()
	{
	}
}
[Token(Token = "0x20001EA")]
public class MissionDescriptionLine : MonoBehaviour
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text missionDescription;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x99ACD0", Offset = "0x99ACD0", VA = "0x99ACD0")]
	public void update(string content, bool isLargeSet = false)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x99AD20", Offset = "0x99AD20", VA = "0x99AD20")]
	public MissionDescriptionLine()
	{
	}
}
[Token(Token = "0x20001EB")]
public class MissionDisplay : MonoBehaviour
{
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F74", Offset = "0x761F74")]
	private sealed class <cycleDescriptions>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionDisplay <>4__this;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode gameMode;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<MissionDescription> localisedTaskDescriptions;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x99B770", Offset = "0x99B770", VA = "0x99B770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0x99B7D8", Offset = "0x99B7D8", VA = "0x99B7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x99B65C", Offset = "0x99B65C", VA = "0x99B65C")]
		[DebuggerHidden]
		public <cycleDescriptions>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x99B690", Offset = "0x99B690", VA = "0x99B690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x99B694", Offset = "0x99B694", VA = "0x99B694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x99B778", Offset = "0x99B778", VA = "0x99B778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTutorialHeaderDisplay;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text missionHeader;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text missionMode;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image missionReward;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject missionDisplayParent;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MissionDescriptionLine descriptionLineTemplate;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<MissionDescriptionLine> descriptionLines;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x99AD28", Offset = "0x99AD28", VA = "0x99AD28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x99AE80", Offset = "0x99AE80", VA = "0x99AE80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x99AF18", Offset = "0x99AF18", VA = "0x99AF18")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x99AFF8", Offset = "0x99AFF8", VA = "0x99AFF8")]
	public void updateForMission(MissionConfig theMission)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x99B5BC", Offset = "0x99B5BC", VA = "0x99B5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BAC4", Offset = "0x76BAC4")]
	private IEnumerator cycleDescriptions(GameMode gameMode, List<MissionDescription> localisedTaskDescriptions)
	{
		return null;
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x99B2FC", Offset = "0x99B2FC", VA = "0x99B2FC")]
	private void updateDescriptionDisplay(GameMode gameMode, List<MissionDescription> localisedTaskDescriptions)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x99B688", Offset = "0x99B688", VA = "0x99B688")]
	public MissionDisplay()
	{
	}
}
[Token(Token = "0x20001EC")]
public sealed class ObjectSpacer : MonoBehaviour
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float verticalSpace;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float horizontalSpace;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float depthSpace;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lastItemPosition;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastVertSpace;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastHorizSpace;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastDepthSpace;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool offsetFirstItem;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool centerItems;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool destroyOnAwake;

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xA11B84", Offset = "0xA11B84", VA = "0xA11B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xA11C00", Offset = "0xA11C00", VA = "0xA11C00")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xA1222C", Offset = "0xA1222C", VA = "0xA1222C")]
	public void clearObjects()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xA12650", Offset = "0xA12650", VA = "0xA12650")]
	public void placeObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xA11C74", Offset = "0xA11C74", VA = "0xA11C74")]
	public void spaceObjects()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xA127E0", Offset = "0xA127E0", VA = "0xA127E0")]
	public ObjectSpacer()
	{
	}
}
[Token(Token = "0x20001ED")]
public enum GridDirection
{
	[Token(Token = "0x4000C6F")]
	acrossThenDown,
	[Token(Token = "0x4000C70")]
	downThenAcross
}
[Token(Token = "0x20001EE")]
public sealed class ObjectSpacerGrid : MonoBehaviour
{
	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridDirection placement;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool swapYandZ;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool center;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool placeOnGizmos;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int columns;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float verticalSpace;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float horizontalSpace;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lastVertSpace;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastHorizSpace;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int lastColumns;

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xA127E8", Offset = "0xA127E8", VA = "0xA127E8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xA12BE0", Offset = "0xA12BE0", VA = "0xA12BE0")]
	public void clearObjects()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xA13004", Offset = "0xA13004", VA = "0xA13004")]
	public void placeObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xA12864", Offset = "0xA12864", VA = "0xA12864")]
	public void spaceObjects()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xA1305C", Offset = "0xA1305C", VA = "0xA1305C")]
	public ObjectSpacerGrid()
	{
	}
}
[Token(Token = "0x20001EF")]
public sealed class OffsetScreenSafe : MonoBehaviour
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float screenPercentage;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scale;

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xA1A9A0", Offset = "0xA1A9A0", VA = "0xA1A9A0")]
	public OffsetScreenSafe()
	{
	}
}
[Token(Token = "0x20001F0")]
public sealed class CloseButton : SingletonMono<CloseButton>
{
	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject closeButton;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pauseButton;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject backButton;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action closeButtonHandler;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x9C8198", Offset = "0x9C8198", VA = "0x9C8198")]
	public static void shiftPositionInHierarchy()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x9BC528", Offset = "0x9BC528", VA = "0x9BC528")]
	public static bool canHandleBackButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x9C853C", Offset = "0x9C853C", VA = "0x9C853C")]
	public static void androidAppPause()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x9BC6A0", Offset = "0x9BC6A0", VA = "0x9BC6A0")]
	public static bool canHandlePauseButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x9C873C", Offset = "0x9C873C", VA = "0x9C873C")]
	public static void show(bool visible)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x9C8984", Offset = "0x9C8984", VA = "0x9C8984")]
	public GameObject backButtonCopy(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x9C8AB8", Offset = "0x9C8AB8", VA = "0x9C8AB8")]
	public GameObject closeButtonCopy(Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x9C86C4", Offset = "0x9C86C4", VA = "0x9C86C4")]
	public void pauseWasPressed()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x9C8450", Offset = "0x9C8450", VA = "0x9C8450")]
	public void closeButtonWasPressed()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x9C8BEC", Offset = "0x9C8BEC", VA = "0x9C8BEC")]
	public void goBackWasPressed()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x9C8BF4", Offset = "0x9C8BF4", VA = "0x9C8BF4")]
	public void goBackNoAd()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x9C8BFC", Offset = "0x9C8BFC", VA = "0x9C8BFC")]
	public CloseButton()
	{
	}
}
[Token(Token = "0x20001F1")]
public sealed class MenuController : SingletonMono<MenuController>
{
	[Serializable]
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F84", Offset = "0x761F84")]
	private sealed class <>c
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Transform> <>9__27_0;

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x9946C0", Offset = "0x9946C0", VA = "0x9946C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x9946C8", Offset = "0x9946C8", VA = "0x9946C8")]
		internal int <sortPanels>b__27_0(Transform x, Transform y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761F94", Offset = "0x761F94")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uiName;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuController <>4__this;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object context;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x993568", Offset = "0x993568", VA = "0x993568")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x99471C", Offset = "0x99471C", VA = "0x99471C")]
		internal void <moveInUI>b__0(PanelMover thePanel)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x994A24", Offset = "0x994A24", VA = "0x994A24")]
		internal void <moveInUI>b__1()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FA4", Offset = "0x761FA4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uiName;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuController <>4__this;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object context;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x993670", Offset = "0x993670", VA = "0x993670")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x994A94", Offset = "0x994A94", VA = "0x994A94")]
		internal void <moveInUINoStack>b__0(PanelMover thePanel)
		{
		}
	}

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PanelHelper panelHelper;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string mainUIGroup;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string errorPanelKey;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform panelHolder;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform panelHolderOver;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool updateEventCameraFromOverseer;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float lastTimePanelChanged;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Stack<PanelMover> panelStack;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform rootRect;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasGottenCamera;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera uiCamera;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7666C4", Offset = "0x7666C4")]
	public List<string> panelsToPreload;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7666FC", Offset = "0x7666FC")]
	public int hitsForActivation;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float delayBeforeHitCountReset;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float repeatDelay;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766734", Offset = "0x766734")]
	public float hoverScaleChange;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float hoverDuration;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float hoverResetSpeed;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76676C", Offset = "0x76676C")]
	public Vector3 sharedPickupOffset;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform behindPlayLowPopupPositioner;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform behindPlayMiddlePopupPositioner;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform behindPlayHighPopupPositioner;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform inFrontOfPlayPopupPositioner;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7667A4", Offset = "0x7667A4")]
	public Transform levelCountdownPositioner;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7667DC", Offset = "0x7667DC")]
	public Transform moveTargetPositioner;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Func<bool> isMenuInteractionBlockedFunction;

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x99286C", Offset = "0x99286C", VA = "0x99286C")]
	public static void sortPanels(Transform parent)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x992C08", Offset = "0x992C08", VA = "0x992C08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x992D54", Offset = "0x992D54", VA = "0x992D54")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x992D88", Offset = "0x992D88", VA = "0x992D88")]
	private void preloadPanels()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x992EF0", Offset = "0x992EF0", VA = "0x992EF0")]
	public static void clearToMain()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x9932BC", Offset = "0x9932BC", VA = "0x9932BC")]
	public void showPanel(string panelName, [Optional] object context)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x9932C8", Offset = "0x9932C8", VA = "0x9932C8")]
	public void hidePanel(string panelName)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x9932E8", Offset = "0x9932E8", VA = "0x9932E8")]
	public static bool panelIsShowing(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x9930D0", Offset = "0x9930D0", VA = "0x9930D0")]
	public static string mainGroup()
	{
		return null;
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x993370", Offset = "0x993370", VA = "0x993370")]
	public static string switchMainGroup(string newGroup)
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x9933F8", Offset = "0x9933F8", VA = "0x9933F8")]
	public PanelMover topPanel()
	{
		return null;
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x993468", Offset = "0x993468", VA = "0x993468")]
	private void moveInUI(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x993570", Offset = "0x993570", VA = "0x993570")]
	public void moveInUINoStack(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x993678", Offset = "0x993678", VA = "0x993678")]
	private void _popUI()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x993148", Offset = "0x993148", VA = "0x993148")]
	private void moveOutUI(PanelMover thePanel, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x99376C", Offset = "0x99376C", VA = "0x99376C")]
	private void moveOutUI(string uiName)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x99378C", Offset = "0x99378C", VA = "0x99378C")]
	private void _hideUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x993834", Offset = "0x993834", VA = "0x993834")]
	private void removeItemFromStack(PanelMover panelToRemove)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x993988", Offset = "0x993988", VA = "0x993988")]
	public void showBossCallout(string localisedBossName, float duration)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x993B4C", Offset = "0x993B4C", VA = "0x993B4C")]
	public void clearMenuInteractionBlockedFunction()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x993B58", Offset = "0x993B58", VA = "0x993B58")]
	public void setMenuInteractionBlockedFunction(Func<bool> isMenuInteractionBlockedFunction)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x993B60", Offset = "0x993B60", VA = "0x993B60")]
	public bool isMenuInteractionAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x993C10", Offset = "0x993C10", VA = "0x993C10")]
	public static void reshowUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x993224", Offset = "0x993224", VA = "0x993224")]
	public static void showUI(string uiName, [Optional] object context)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x993CA8", Offset = "0x993CA8", VA = "0x993CA8")]
	public static void popUI()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x993D1C", Offset = "0x993D1C", VA = "0x993D1C")]
	public static void hideUI(PanelMover thePanel)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x993D98", Offset = "0x993D98", VA = "0x993D98")]
	public static void hideUI(string uiName)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x993E3C", Offset = "0x993E3C", VA = "0x993E3C")]
	public PanelMover panelWithName(string theName)
	{
		return null;
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x993E58", Offset = "0x993E58", VA = "0x993E58")]
	public List<PanelMover> currentPanels()
	{
		return null;
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x993EE8", Offset = "0x993EE8", VA = "0x993EE8")]
	public RectTransform rootCanvasRect()
	{
		return null;
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x993F94", Offset = "0x993F94", VA = "0x993F94")]
	public Camera getUICamera()
	{
		return null;
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x994024", Offset = "0x994024", VA = "0x994024")]
	public bool panelIsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x9940A0", Offset = "0x9940A0", VA = "0x9940A0")]
	public bool isPilotSwitchingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x994168", Offset = "0x994168", VA = "0x994168")]
	public Vector3 uiPositionForViewportPosition(Vector3 posViewPort, [Optional] Camera theCam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x9852D4", Offset = "0x9852D4", VA = "0x9852D4")]
	public Vector3 getCheckpointUnlockPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x9941D4", Offset = "0x9941D4", VA = "0x9941D4")]
	public Vector3 getBehindPlayLowPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x9941B8", Offset = "0x9941B8", VA = "0x9941B8")]
	public Vector3 getBehindPlayMiddlePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x993B30", Offset = "0x993B30", VA = "0x993B30")]
	public Vector3 getBehindPlayHighPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x9941F0", Offset = "0x9941F0", VA = "0x9941F0")]
	public Vector3 getGameStartPopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x9852B8", Offset = "0x9852B8", VA = "0x9852B8")]
	public Vector3 getMissionCompletePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x99420C", Offset = "0x99420C", VA = "0x99420C")]
	public Vector3 getUpgradePopupPosition(MightyVRControlSide side)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x994218", Offset = "0x994218", VA = "0x994218")]
	private Vector3 getLeftHandUpgradePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x9942A4", Offset = "0x9942A4", VA = "0x9942A4")]
	private Vector3 getRightHandUpgradePopupPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x9943EC", Offset = "0x9943EC", VA = "0x9943EC")]
	public Vector3 getLevelCountdownPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x994408", Offset = "0x994408", VA = "0x994408")]
	private Vector3 getInFrontPopupPosition(Vector3 elementOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x99432C", Offset = "0x99432C", VA = "0x99432C")]
	private Vector3 getBackMiddlePopupPosition(Vector3 elementOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x9944C8", Offset = "0x9944C8", VA = "0x9944C8")]
	public Vector3 getMoveTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x9944E4", Offset = "0x9944E4", VA = "0x9944E4")]
	public MenuController()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x9945E8", Offset = "0x9945E8", VA = "0x9945E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB28", Offset = "0x76BB28")]
	private void <_popUI>b__40_0()
	{
	}
}
[Token(Token = "0x20001F2")]
public sealed class PanelHelper : MonoBehaviour
{
	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MappedList<PanelMover> myPanels;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MappedList<PanelResourceStub> myStubs;

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xA1B134", Offset = "0xA1B134", VA = "0xA1B134")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xA1B338", Offset = "0xA1B338", VA = "0xA1B338")]
	public void loadPanelsFrom(PanelHelper otherHelper)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xA1B4C8", Offset = "0xA1B4C8", VA = "0xA1B4C8")]
	public List<string> allPanelKeys()
	{
		return null;
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xA1B264", Offset = "0xA1B264", VA = "0xA1B264")]
	public void findStubs()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xA1B158", Offset = "0xA1B158", VA = "0xA1B158")]
	public void findPanels()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xA1B6C0", Offset = "0xA1B6C0", VA = "0xA1B6C0")]
	public PanelMover getLoadedPanel(string panelName)
	{
		return null;
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xA1B764", Offset = "0xA1B764", VA = "0xA1B764")]
	public void getOrLoadPanel(string panelName, Action<PanelMover> callback)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xA1B8EC", Offset = "0xA1B8EC", VA = "0xA1B8EC")]
	public bool loadFromKey(string panelKey, Action<PanelMover> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xA1BC90", Offset = "0xA1BC90", VA = "0xA1BC90")]
	public void showPanelWithContext(PanelMover thePanel, object context)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xA1C090", Offset = "0xA1C090", VA = "0xA1C090")]
	public void hideUI(string uiName, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xA1C498", Offset = "0xA1C498", VA = "0xA1C498")]
	public bool panelIsShowing(string panelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xA1C56C", Offset = "0xA1C56C", VA = "0xA1C56C")]
	public List<PanelMover> allPanels(Transform root)
	{
		return null;
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xA1C6E8", Offset = "0xA1C6E8", VA = "0xA1C6E8")]
	public void parkAll()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xA1C7AC", Offset = "0xA1C7AC", VA = "0xA1C7AC")]
	public void showAll()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xA1CA00", Offset = "0xA1CA00", VA = "0xA1CA00")]
	public void sortPanels()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xA1CA04", Offset = "0xA1CA04", VA = "0xA1CA04")]
	public PanelHelper()
	{
	}
}
[Token(Token = "0x20001F3")]
public enum PanelTransitionType
{
	[Token(Token = "0x4000CA0")]
	none,
	[Token(Token = "0x4000CA1")]
	fromTop,
	[Token(Token = "0x4000CA2")]
	fromBottom,
	[Token(Token = "0x4000CA3")]
	fromLeft,
	[Token(Token = "0x4000CA4")]
	fromRight,
	[Token(Token = "0x4000CA5")]
	fadeIn
}
[Token(Token = "0x20001F4")]
public enum PanelMoverState
{
	[Token(Token = "0x4000CA7")]
	offscreen,
	[Token(Token = "0x4000CA8")]
	onscreen,
	[Token(Token = "0x4000CA9")]
	movingOffscreen,
	[Token(Token = "0x4000CAA")]
	movingOnscreen,
	[Token(Token = "0x4000CAB")]
	unknown
}
[Token(Token = "0x20001F5")]
public sealed class PanelMover : MonoBehaviour
{
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FB4", Offset = "0x761FB4")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xA1CDFC", Offset = "0xA1CDFC", VA = "0xA1CDFC")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xA1D4FC", Offset = "0xA1D4FC", VA = "0xA1D4FC")]
		internal void <movePanelOut>b__0()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xA1D51C", Offset = "0xA1D51C", VA = "0xA1D51C")]
		internal void <movePanelOut>b__1()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FC4", Offset = "0x761FC4")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xA1D188", Offset = "0xA1D188", VA = "0xA1D188")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xA1D53C", Offset = "0xA1D53C", VA = "0xA1D53C")]
		internal void <movePanelInAfterDelay>b__0()
		{
		}
	}

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FD4", Offset = "0x761FD4")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover <>4__this;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xA1D190", Offset = "0xA1D190", VA = "0xA1D190")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xA1D55C", Offset = "0xA1D55C", VA = "0xA1D55C")]
		internal void <movePanelIn>b__0()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xA1D57C", Offset = "0xA1D57C", VA = "0xA1D57C")]
		internal void <movePanelIn>b__1()
		{
		}
	}

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool panelIsModal;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public object panelContext;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PanelMoverState panelState;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SimpleAnimator panelMover;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator panelAnimator;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PanelMoverTemplate moverTemplate;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string presentationTemplate;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766814", Offset = "0x766814")]
	public bool isPilotSwitchingAllowed;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool panelHasBooted;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RectTransform rootCanvas;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string myPanelKey;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool animationClipHasCompleted;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action animationClipCompletion;

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xA1B5C8", Offset = "0xA1B5C8", VA = "0xA1B5C8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xA1C54C", Offset = "0xA1C54C", VA = "0xA1C54C")]
	public bool isShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xA1B474", Offset = "0xA1B474", VA = "0xA1B474")]
	public string panelKey()
	{
		return null;
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xA1CABC", Offset = "0xA1CABC", VA = "0xA1CABC")]
	public bool panelDidBoot()
	{
		return default(bool);
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xA1CAC4", Offset = "0xA1CAC4", VA = "0xA1CAC4")]
	public void findRootCanvas()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xA1CBFC", Offset = "0xA1CBFC", VA = "0xA1CBFC")]
	private void setVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA1C7A0", Offset = "0xA1C7A0", VA = "0xA1C7A0")]
	public void forcePark()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA1CD74", Offset = "0xA1CD74", VA = "0xA1CD74")]
	public void reShow()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xA1CC30", Offset = "0xA1CC30", VA = "0xA1CC30")]
	public void park()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xA1C854", Offset = "0xA1C854", VA = "0xA1C854")]
	public void unpark()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xA1CDDC", Offset = "0xA1CDDC", VA = "0xA1CDDC")]
	public bool panelIsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xA1C148", Offset = "0xA1C148", VA = "0xA1C148")]
	public void movePanelOut([Optional] Action completion)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xA1CFDC", Offset = "0xA1CFDC", VA = "0xA1CFDC")]
	private void panelDidCompleteMoveOut(Action completion)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xA1D080", Offset = "0xA1D080", VA = "0xA1D080")]
	public void movePanelInAfterDelay(float delay, Action completion)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xA1BCCC", Offset = "0xA1BCCC", VA = "0xA1BCCC")]
	public void movePanelIn([Optional] Action completion)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xA1D304", Offset = "0xA1D304", VA = "0xA1D304")]
	private void panelDidCompleteMoveIn(Action completion)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xA1D3A0", Offset = "0xA1D3A0", VA = "0xA1D3A0")]
	public void panelBackgroundWasTapped()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xA1D48C", Offset = "0xA1D48C", VA = "0xA1D48C")]
	public void animationMoveInComplete()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xA1D4BC", Offset = "0xA1D4BC", VA = "0xA1D4BC")]
	public void animationMoveOuComplete()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xA1D4EC", Offset = "0xA1D4EC", VA = "0xA1D4EC")]
	public PanelMover()
	{
	}
}
[Token(Token = "0x20001F6")]
public class PanelMoverTemplate : MonoBehaviour
{
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FE4", Offset = "0x761FE4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PanelMover thePanel;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action completion;

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xA1D608", Offset = "0xA1D608", VA = "0xA1D608")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xA1D618", Offset = "0xA1D618", VA = "0xA1D618")]
		internal void <movePanelOut>b__0()
		{
		}
	}

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleAnimator anim;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleAnimationMoveToPosition positioner;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject stub;

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xA1D59C", Offset = "0xA1D59C", VA = "0xA1D59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xA1D198", Offset = "0xA1D198", VA = "0xA1D198")]
	public static void movePanelIn(PanelMover thePanel, Action completion)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xA1CE04", Offset = "0xA1CE04", VA = "0xA1CE04")]
	public static void movePanelOut(PanelMover thePanel, Action completion)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xA1D610", Offset = "0xA1D610", VA = "0xA1D610")]
	public PanelMoverTemplate()
	{
	}
}
[Token(Token = "0x20001F7")]
public class PanelResourceStub : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string panelKey;

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xA1BAD0", Offset = "0xA1BAD0", VA = "0xA1BAD0")]
	public PanelMover createPanel([Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xA1D740", Offset = "0xA1D740", VA = "0xA1D740")]
	public PanelMover createPanelEditor([Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA1D748", Offset = "0xA1D748", VA = "0xA1D748")]
	public static PanelResourceStub createNewStub(string panelKey)
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA1D750", Offset = "0xA1D750", VA = "0xA1D750")]
	public PanelResourceStub()
	{
	}
}
[Token(Token = "0x20001F8")]
public sealed class PanelUIButtonTwiddler : MonoBehaviour
{
	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showClose;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showGameCamera;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showTopNav;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool showBottomNav;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cameraInGamePosition;

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA1D7C8", Offset = "0xA1D7C8", VA = "0xA1D7C8")]
	public void panelWillReShow()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA1D7CC", Offset = "0xA1D7CC", VA = "0xA1D7CC")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA1D7D0", Offset = "0xA1D7D0", VA = "0xA1D7D0")]
	public static void hideEverything()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA1D7D4", Offset = "0xA1D7D4", VA = "0xA1D7D4")]
	public PanelUIButtonTwiddler()
	{
	}
}
[Token(Token = "0x20001F9")]
public sealed class ParticlePanel : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage renderImage;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string particleID;

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xA1FB2C", Offset = "0xA1FB2C", VA = "0xA1FB2C")]
	public void playEvent(string eventKey)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xA1FC24", Offset = "0xA1FC24", VA = "0xA1FC24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xA1FCF8", Offset = "0xA1FCF8", VA = "0xA1FCF8")]
	public ParticlePanel()
	{
	}
}
[Token(Token = "0x20001FA")]
public class PlayerHealthCount : MonoBehaviour
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject contentParent;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] playerHealthIcons;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite normalSprite;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite flashSprite;

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x1613258", Offset = "0x1613258", VA = "0x1613258")]
	public void setActiveState(bool isActive)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x16132DC", Offset = "0x16132DC", VA = "0x16132DC")]
	public void updateHealthLevel(int healthLevel)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x1617E78", Offset = "0x1617E78", VA = "0x1617E78")]
	public void updateHealthFlash(float flashValue)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x161AAFC", Offset = "0x161AAFC", VA = "0x161AAFC")]
	public PlayerHealthCount()
	{
	}
}
[Token(Token = "0x20001FB")]
public class PlayerScoreMultiplier : MonoBehaviour
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76684C", Offset = "0x76684C")]
	public GameObject multiplierParent;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text multiplierLabel;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image multiplierFill;

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x161341C", Offset = "0x161341C", VA = "0x161341C")]
	public void tryActivate(GameMode gameMode)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x16135BC", Offset = "0x16135BC", VA = "0x16135BC")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x161C814", Offset = "0x161C814", VA = "0x161C814")]
	private void updateMultiplierCount(object note)
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x161CA28", Offset = "0x161CA28", VA = "0x161CA28")]
	private void Update()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x161CB30", Offset = "0x161CB30", VA = "0x161CB30")]
	public PlayerScoreMultiplier()
	{
	}
}
[Token(Token = "0x20001FC")]
public sealed class PowerSavingButton : MonoBehaviour
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject powerSavingIsOnIcon;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject powerSavingIsOffIcon;

	[Token(Token = "0x4000CCF")]
	private const string powerSavingKey = "ps";

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x1625848", Offset = "0x1625848", VA = "0x1625848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x16258BC", Offset = "0x16258BC", VA = "0x16258BC")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x162584C", Offset = "0x162584C", VA = "0x162584C")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x1625964", Offset = "0x1625964", VA = "0x1625964")]
	public static bool powerSavingIsOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x16258E0", Offset = "0x16258E0", VA = "0x16258E0")]
	public static void togglePowerSaving()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x1625A08", Offset = "0x1625A08", VA = "0x1625A08")]
	public static void applyPowerSavingSetting()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x1625A48", Offset = "0x1625A48", VA = "0x1625A48")]
	public PowerSavingButton()
	{
	}
}
[Token(Token = "0x20001FD")]
public sealed class PurchaseErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xB7D794", Offset = "0xB7D794", VA = "0xB7D794")]
	public static void showErrorPanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xB7D838", Offset = "0xB7D838", VA = "0xB7D838")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xB7D914", Offset = "0xB7D914", VA = "0xB7D914")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xB7D968", Offset = "0xB7D968", VA = "0xB7D968")]
	public PurchaseErrorPanel()
	{
	}
}
[Token(Token = "0x20001FE")]
public sealed class RawImageAspect : MonoBehaviour
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float refWdith;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float refHeight;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform myRect;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x9AF5EC", Offset = "0x9AF5EC", VA = "0x9AF5EC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x9AF5F0", Offset = "0x9AF5F0", VA = "0x9AF5F0")]
	public void readjust()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x9AF744", Offset = "0x9AF744", VA = "0x9AF744")]
	public RawImageAspect()
	{
	}
}
[Token(Token = "0x20001FF")]
public sealed class RawImageUVAnimator : MonoBehaviour
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tiles;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xSpeed;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ySpeed;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage theImage;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rect uvOffset;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x9AF74C", Offset = "0x9AF74C", VA = "0x9AF74C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x9AF86C", Offset = "0x9AF86C", VA = "0x9AF86C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x9AF9E8", Offset = "0x9AF9E8", VA = "0x9AF9E8")]
	public RawImageUVAnimator()
	{
	}
}
[Token(Token = "0x2000200")]
public sealed class RestoreCompletePanel : MonoBehaviour
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x9B0548", Offset = "0x9B0548", VA = "0x9B0548")]
	public static void showRestoreCompletePanel([Optional] Action completion)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x9B065C", Offset = "0x9B065C", VA = "0x9B065C")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x9B0770", Offset = "0x9B0770", VA = "0x9B0770")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x9B07C4", Offset = "0x9B07C4", VA = "0x9B07C4")]
	public RestoreCompletePanel()
	{
	}
}
[Token(Token = "0x2000201")]
public sealed class ScreenSafeController : MonoBehaviour
{
	[Token(Token = "0x4000CDC")]
	private const float AmazonTVShrinkPercentage = 1f;

	[Token(Token = "0x4000CDD")]
	private const float GoogleTVShrinkPercentage = 1f;

	[Token(Token = "0x4000CDE")]
	private const float AppleTVShrinkPercentage = 1f;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766884", Offset = "0x766884")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766894", Offset = "0x766894")]
	private static bool <editorFakeIphoneX>k__BackingField;

	[Token(Token = "0x170000A7")]
	public float scale
	{
		[Token(Token = "0x600107C")]
		[Address(RVA = "0x9B1C04", Offset = "0x9B1C04", VA = "0x9B1C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB38", Offset = "0x76BB38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x9B1C0C", Offset = "0x9B1C0C", VA = "0x9B1C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB48", Offset = "0x76BB48")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public static bool editorFakeIphoneX
	{
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x9B1C14", Offset = "0x9B1C14", VA = "0x9B1C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB58", Offset = "0x76BB58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600107F")]
		[Address(RVA = "0x9B1C7C", Offset = "0x9B1C7C", VA = "0x9B1C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB68", Offset = "0x76BB68")]
		set
		{
		}
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x9B1CEC", Offset = "0x9B1CEC", VA = "0x9B1CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x9B1FF8", Offset = "0x9B1FF8", VA = "0x9B1FF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x9B1DCC", Offset = "0x9B1DCC", VA = "0x9B1DCC")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x9B2294", Offset = "0x9B2294", VA = "0x9B2294")]
	public void forceiPhoneX()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x9B23F4", Offset = "0x9B23F4", VA = "0x9B23F4")]
	public void forceiPhoneX(RectTransform theRect, bool invert = false)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x9B2090", Offset = "0x9B2090", VA = "0x9B2090")]
	public void SetiPhoneXSafeArea(RectTransform theRect, bool invert = false)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x9B24C0", Offset = "0x9B24C0", VA = "0x9B24C0")]
	private void SetRect(RectTransform theRect, float left, float top, float right, float bottom)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x9B2218", Offset = "0x9B2218", VA = "0x9B2218")]
	private void ResetRect(RectTransform theRect)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x9B2548", Offset = "0x9B2548", VA = "0x9B2548")]
	public ScreenSafeController()
	{
	}
}
[Token(Token = "0x2000202")]
public sealed class ScreenshotSceneController : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x761FF4", Offset = "0x761FF4")]
	private sealed class <shotMachine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string panel;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScreenshotSceneController <>4__this;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x9B2BF8", Offset = "0x9B2BF8", VA = "0x9B2BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x9B2C60", Offset = "0x9B2C60", VA = "0x9B2C60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x9B2828", Offset = "0x9B2828", VA = "0x9B2828")]
		[DebuggerHidden]
		public <shotMachine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x9B28D0", Offset = "0x9B28D0", VA = "0x9B28D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x9B28D4", Offset = "0x9B28D4", VA = "0x9B28D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x9B2C00", Offset = "0x9B2C00", VA = "0x9B2C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject UIParent;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<string, string> capture;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> panels;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x9B255C", Offset = "0x9B255C", VA = "0x9B255C")]
	public void preboot()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x9B25D4", Offset = "0x9B25D4", VA = "0x9B25D4")]
	public void finishBoot()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x9B25F4", Offset = "0x9B25F4", VA = "0x9B25F4")]
	public void doTheThing(Action<string, string> captureAction)
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x9B2790", Offset = "0x9B2790", VA = "0x9B2790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BB78", Offset = "0x76BB78")]
	private IEnumerator shotMachine(string panel)
	{
		return null;
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x9B2708", Offset = "0x9B2708", VA = "0x9B2708")]
	private void loadShot()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x9B2854", Offset = "0x9B2854", VA = "0x9B2854")]
	public ScreenshotSceneController()
	{
	}
}
[Token(Token = "0x2000203")]
public sealed class ShakeButton : MonoBehaviour
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shakeIsOn;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shakeIsOff;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x9B5A94", Offset = "0x9B5A94", VA = "0x9B5A94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x9B5B0C", Offset = "0x9B5B0C", VA = "0x9B5B0C")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x9B5A98", Offset = "0x9B5A98", VA = "0x9B5A98")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x9B5B34", Offset = "0x9B5B34", VA = "0x9B5B34")]
	public ShakeButton()
	{
	}
}
[Token(Token = "0x2000204")]
public class ShopButton : MonoBehaviour
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text cost;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemID;

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1655170", Offset = "0x1655170", VA = "0x1655170")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x165517C", Offset = "0x165517C", VA = "0x165517C", Slot = "4")]
	public virtual void resetDisplay()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x16551DC", Offset = "0x16551DC", VA = "0x16551DC", Slot = "5")]
	public virtual void buyButtonWasPressed()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x16552BC", Offset = "0x16552BC", VA = "0x16552BC", Slot = "6")]
	public virtual void awardPurchasedItem()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x165532C", Offset = "0x165532C", VA = "0x165532C")]
	public void completeTransaction()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x1655384", Offset = "0x1655384", VA = "0x1655384")]
	public void purchaseBad(string context)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x1655388", Offset = "0x1655388", VA = "0x1655388")]
	public void purchaseGood(string context)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x1655394", Offset = "0x1655394", VA = "0x1655394")]
	public ShopButton()
	{
	}
}
[Token(Token = "0x2000205")]
public sealed class SimpleMover : MonoBehaviour
{
	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve xMovement;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve yMovement;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve zMovement;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lerpValue;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 position;

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x15F85C8", Offset = "0x15F85C8", VA = "0x15F85C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x15F865C", Offset = "0x15F865C", VA = "0x15F865C")]
	private void Update()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x15F8700", Offset = "0x15F8700", VA = "0x15F8700")]
	public SimpleMover()
	{
	}
}
[Token(Token = "0x2000206")]
public sealed class SimpleRotator : MonoBehaviour
{
	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve zRotation;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpValue;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool addToSetRotation;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oilers;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float baseRot;

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x15F8710", Offset = "0x15F8710", VA = "0x15F8710")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x15F879C", Offset = "0x15F879C", VA = "0x15F879C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x15F8880", Offset = "0x15F8880", VA = "0x15F8880")]
	public SimpleRotator()
	{
	}
}
[Token(Token = "0x2000207")]
public sealed class SimpleSpinner : MonoBehaviour
{
	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool randomSpeed;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomStart;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool spaceSelf;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool active;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SVGRenderer mySvgRenderer;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer theMeshRenderer;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator theAnimator;

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x15F935C", Offset = "0x15F935C", VA = "0x15F935C")]
	public SVGRenderer svgRenderer()
	{
		return null;
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x15F945C", Offset = "0x15F945C", VA = "0x15F945C")]
	public MeshRenderer meshRenderer()
	{
		return null;
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x15F955C", Offset = "0x15F955C", VA = "0x15F955C")]
	public Animator getAnimator()
	{
		return null;
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x15F965C", Offset = "0x15F965C", VA = "0x15F965C")]
	public void activate(bool activate)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x15F9668", Offset = "0x15F9668", VA = "0x15F9668")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x15F9754", Offset = "0x15F9754", VA = "0x15F9754")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x15F98A4", Offset = "0x15F98A4", VA = "0x15F98A4")]
	public SimpleSpinner()
	{
	}
}
[Token(Token = "0x2000208")]
public sealed class SimpleSpinnerDirectionBased : MonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool uniformRotation;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomSpeed;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool randomStart;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool spaceSelf;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastPosX;

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x15F9934", Offset = "0x15F9934", VA = "0x15F9934")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x15F9A20", Offset = "0x15F9A20", VA = "0x15F9A20")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x15F9C34", Offset = "0x15F9C34", VA = "0x15F9C34")]
	public SimpleSpinnerDirectionBased()
	{
	}
}
[Token(Token = "0x2000209")]
public sealed class SimpleSpinnerUniform : MonoBehaviour
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomAxis;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool uniformRotation;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool randomSpeed;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool randomStart;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool spaceSelf;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform myTransform;

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x15F9CC4", Offset = "0x15F9CC4", VA = "0x15F9CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x15F9DB0", Offset = "0x15F9DB0", VA = "0x15F9DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x15F9F70", Offset = "0x15F9F70", VA = "0x15F9F70")]
	public SimpleSpinnerUniform()
	{
	}
}
[Token(Token = "0x200020A")]
public class UIButtonToggle : MonoBehaviour
{
	[Token(Token = "0x4000D13")]
	private const float ToggleDepth = -0.3f;

	[Token(Token = "0x4000D14")]
	private const float ToggleScale = 1.1f;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7668A4", Offset = "0x7668A4")]
	public TMP_Text buttonLabel;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image buttonBackground;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite selectedBackground;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite notSelectedBackground;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lockedIcon;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SimpleShootableButton shootableButton;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7668DC", Offset = "0x7668DC")]
	public Color backgroundSelected;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color backgroundNotSelected;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color backgroundLocked;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766914", Offset = "0x766914")]
	public Color textSelected;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color textNotSelected;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA8EA88", Offset = "0xA8EA88", VA = "0xA8EA88")]
	public void updateToggle(bool isInteractable, bool isSelected)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA8ED44", Offset = "0xA8ED44", VA = "0xA8ED44")]
	private void setLockedVisuals()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA8EBFC", Offset = "0xA8EBFC", VA = "0xA8EBFC")]
	private void setInteractableSelectedVisuals()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xA8ECA0", Offset = "0xA8ECA0", VA = "0xA8ECA0")]
	private void setInteractableNotSelectedVisuals()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xA8EDC8", Offset = "0xA8EDC8", VA = "0xA8EDC8")]
	public UIButtonToggle()
	{
	}
}
[Token(Token = "0x200020B")]
[ExecuteInEditMode]
public class UIImageGradient : MonoBehaviour
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image theImage;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gradientCol;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xA8FD0C", Offset = "0xA8FD0C", VA = "0xA8FD0C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xA8FFDC", Offset = "0xA8FFDC", VA = "0xA8FFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA8FFE0", Offset = "0xA8FFE0", VA = "0xA8FFE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA8FD10", Offset = "0xA8FD10", VA = "0xA8FD10")]
	private void setGradientShaderParameters()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA8FFE4", Offset = "0xA8FFE4", VA = "0xA8FFE4")]
	public UIImageGradient()
	{
	}
}
[Token(Token = "0x200020C")]
public sealed class UVAnimator : MonoBehaviour
{
	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tiles;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xSpeed;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ySpeed;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 uvOffset;

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA90800", Offset = "0xA90800", VA = "0xA90800")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA90804", Offset = "0xA90804", VA = "0xA90804")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA90920", Offset = "0xA90920", VA = "0xA90920")]
	public UVAnimator()
	{
	}
}
[Token(Token = "0x200020D")]
public sealed class VRPlayspace : SingletonMono<VRPlayspace>
{
	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76694C", Offset = "0x76694C")]
	public BoxCollider volumeBounds;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766984", Offset = "0x766984")]
	public bool editorShowDebugLines;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer topLine;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer middleLine;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer bottomLine;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7669BC", Offset = "0x7669BC")]
	public float distanceFromPlayer;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float playspaceDepth;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7669F4", Offset = "0x7669F4")]
	public float angleFromCentreLine;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766A2C", Offset = "0x766A2C")]
	public float offsetToTopLevel;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float playerHeightBaseOffset;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float offsetToBottomLevel;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentPlayerHeight;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766A64", Offset = "0x766A64")]
	public float middleLineMiniumY;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766A9C", Offset = "0x766A9C")]
	public Vector3 testPlayerPos;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float testPlayerHeadHeight;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766AD4", Offset = "0x766AD4")]
	public float testAngleCoordinate;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float testHeightCoordinate;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float testDepthCoordinate;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Bounds cullingBounds;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] outerBoundaryPoints;

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x14FADAC", Offset = "0x14FADAC", VA = "0x14FADAC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x14FAE30", Offset = "0x14FAE30", VA = "0x14FAE30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x14FAEF4", Offset = "0x14FAEF4", VA = "0x14FAEF4")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x14FAF14", Offset = "0x14FAF14", VA = "0x14FAF14")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x14FB4C0", Offset = "0x14FB4C0", VA = "0x14FB4C0")]
	public bool isInsidePlayspace(Vector3 worldPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x14FB8D4", Offset = "0x14FB8D4", VA = "0x14FB8D4")]
	public Vector3 randomWorldPositionInPlayspace()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x14FBA04", Offset = "0x14FBA04", VA = "0x14FBA04")]
	public Vector3 coordinatePositionToWorldPosition(Vector3 coordinates)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x14FB928", Offset = "0x14FB928", VA = "0x14FB928")]
	public Vector3 coordinatePositionToWorldPosition(float angleCoordinate, float heightCoordinate, float depthCoordinate)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x14FBC88", Offset = "0x14FBC88", VA = "0x14FBC88")]
	public Vector3 worldPositionToCoordinatePosition(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x14FBFB4", Offset = "0x14FBFB4", VA = "0x14FBFB4")]
	public Vector3 clampPositionToPlayspaceHeights(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x14FC0A8", Offset = "0x14FC0A8", VA = "0x14FC0A8")]
	public Vector3 getPowerupTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x14FC1B8", Offset = "0x14FC1B8", VA = "0x14FC1B8")]
	public bool isInsideCullingVolume(Vector3 worldPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x14FB674", Offset = "0x14FB674", VA = "0x14FB674")]
	private Vector3 getPlayerPoint(float height)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x14FAF08", Offset = "0x14FAF08", VA = "0x14FAF08")]
	public void clearOuterBoundaryCache()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x14FBA08", Offset = "0x14FBA08", VA = "0x14FBA08")]
	private float playspaceHeightFromCoordinate(float heightCoordinate)
	{
		return default(float);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x14FBF68", Offset = "0x14FBF68", VA = "0x14FBF68")]
	private float currentPlayspaceHeight(float offsetFromMiddle = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x14FBB38", Offset = "0x14FBB38", VA = "0x14FBB38")]
	private Vector3 rotatePoint(Vector3 inputPoint, float height, float degrees)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x14FC28C", Offset = "0x14FC28C", VA = "0x14FC28C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x14FB23C", Offset = "0x14FB23C", VA = "0x14FB23C")]
	private void DrawDebugArcLine(LineRenderer target, float heightOffset, Color lineColor)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x14FAE40", Offset = "0x14FAE40", VA = "0x14FAE40")]
	private void DisableAllDebugLines()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x14FC428", Offset = "0x14FC428", VA = "0x14FC428")]
	public VRPlayspace()
	{
	}
}
[Token(Token = "0x200020E")]
public class WorldNameTextLabel : MonoBehaviour
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string worldId;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text worldNameLabel;

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x1503564", Offset = "0x1503564", VA = "0x1503564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x1503568", Offset = "0x1503568", VA = "0x1503568")]
	private void updateName()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x150366C", Offset = "0x150366C", VA = "0x150366C")]
	public WorldNameTextLabel()
	{
	}
}
[Token(Token = "0x200020F")]
public sealed class AdSkippedErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xAC61A4", Offset = "0xAC61A4", VA = "0xAC61A4")]
	public static void showAdSkippedError(Action completion)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xAC61F8", Offset = "0xAC61F8", VA = "0xAC61F8")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xAC6278", Offset = "0xAC6278", VA = "0xAC6278")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xAC62B0", Offset = "0xAC62B0", VA = "0xAC62B0")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xAC6348", Offset = "0xAC6348", VA = "0xAC6348")]
	public AdSkippedErrorPanel()
	{
	}
}
[Token(Token = "0x2000210")]
public sealed class AdUnavailableErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action completion;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool debounce;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xAC6350", Offset = "0xAC6350", VA = "0xAC6350")]
	public static void showAdUnavailableError(Action completion)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xAC63A4", Offset = "0xAC63A4", VA = "0xAC63A4")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xAC6424", Offset = "0xAC6424", VA = "0xAC6424")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xAC645C", Offset = "0xAC645C", VA = "0xAC645C")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xAC64F4", Offset = "0xAC64F4", VA = "0xAC64F4")]
	public AdUnavailableErrorPanel()
	{
	}
}
[Token(Token = "0x2000211")]
public sealed class BasicFillImageRectangle : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform imageBack;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform imageFront;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text amountLabel;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x9BCAD0", Offset = "0x9BCAD0", VA = "0x9BCAD0")]
	public void setFillValue(int current, int total)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x9BCBF4", Offset = "0x9BCBF4", VA = "0x9BCBF4")]
	public void setFillValue(float percent)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x9BCDAC", Offset = "0x9BCDAC", VA = "0x9BCDAC")]
	public float xOffsetForValue(int current, int total)
	{
		return default(float);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x9BCDBC", Offset = "0x9BCDBC", VA = "0x9BCDBC")]
	public float xOffsetForPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x9BCD4C", Offset = "0x9BCD4C", VA = "0x9BCD4C")]
	public void show(bool doShow)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x9BCE24", Offset = "0x9BCE24", VA = "0x9BCE24")]
	public BasicFillImageRectangle()
	{
	}
}
[Token(Token = "0x2000212")]
public class BottomNavButton : MonoBehaviour
{
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762004", Offset = "0x762004")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startWidth;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float endWidth;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startHeight;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endHeight;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BottomNavButton <>4__this;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x9BFE54", Offset = "0x9BFE54", VA = "0x9BFE54")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x9BFEC8", Offset = "0x9BFEC8", VA = "0x9BFEC8")]
		internal void <selected>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x9BFFB0", Offset = "0x9BFFB0", VA = "0x9BFFB0")]
		internal void <selected>b__1()
		{
		}
	}

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform myRect;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float selectedWidth;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float unselectedWidth;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float selectedHeight;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float unselectedHeight;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x9BFC5C", Offset = "0x9BFC5C", VA = "0x9BFC5C")]
	public void selected(bool isSelected, float time = 0.2f)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x9BFE5C", Offset = "0x9BFE5C", VA = "0x9BFE5C")]
	public void buttonWasPressed()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x9BFEB4", Offset = "0x9BFEB4", VA = "0x9BFEB4")]
	public BottomNavButton()
	{
	}
}
[Token(Token = "0x2000213")]
public class CreditsPanel : MonoBehaviour
{
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762014", Offset = "0x762014")]
	private sealed class <fadeCycle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsPanel <>4__this;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action showCompleteAction;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <holdBetween>5__3;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__4;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x9537C8", Offset = "0x9537C8", VA = "0x9537C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x953830", Offset = "0x953830", VA = "0x953830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x953390", Offset = "0x953390", VA = "0x953390")]
		[DebuggerHidden]
		public <fadeCycle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x9533BC", Offset = "0x9533BC", VA = "0x9533BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x9533C0", Offset = "0x9533C0", VA = "0x9533C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x9537D0", Offset = "0x9537D0", VA = "0x9537D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766B0C", Offset = "0x766B0C")]
	public GameObject contentParent;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text creditsText;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup fader;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766B44", Offset = "0x766B44")]
	public TextAsset creditsAsset;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766B7C", Offset = "0x766B7C")]
	public float fadeTime;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float holdTime;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float holdBetweenTime;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766BB4", Offset = "0x766BB4")]
	public Image creditsButtonIcon;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite creditsIcon;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite creditsCloseIcon;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool bootstrapped;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] lines;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int index;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private SystemLanguage bootstrapLanguage;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x9D1B40", Offset = "0x9D1B40", VA = "0x9D1B40")]
	public void toggleCreditsButtonPressed()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x9D1BA8", Offset = "0x9D1BA8", VA = "0x9D1BA8")]
	public void hide()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x9D1C54", Offset = "0x9D1C54", VA = "0x9D1C54")]
	public void show(Action cycleCompletAction)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x9D1D5C", Offset = "0x9D1D5C", VA = "0x9D1D5C")]
	private void bootstrap()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x9D2354", Offset = "0x9D2354", VA = "0x9D2354")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BBDC", Offset = "0x76BBDC")]
	private IEnumerator fadeCycle(Action showCompleteAction)
	{
		return null;
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x9D1B8C", Offset = "0x9D1B8C", VA = "0x9D1B8C")]
	private bool isShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x9D23EC", Offset = "0x9D23EC", VA = "0x9D23EC")]
	public CreditsPanel()
	{
	}
}
[Token(Token = "0x2000214")]
public enum VisionType
{
	[Token(Token = "0x4000D59")]
	normal,
	[Token(Token = "0x4000D5A")]
	protanopia,
	[Token(Token = "0x4000D5B")]
	deuteranopia,
	[Token(Token = "0x4000D5C")]
	tritanopia
}
[Token(Token = "0x2000215")]
public sealed class DebugColorblindButton : MonoBehaviour
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VisionType selectedVisionType;

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x956074", Offset = "0x956074", VA = "0x956074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x95611C", Offset = "0x95611C", VA = "0x95611C")]
	public void CycleButtonWasPressed()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x956078", Offset = "0x956078", VA = "0x956078")]
	private void UpdateLabel()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x95615C", Offset = "0x95615C", VA = "0x95615C")]
	private void UpdateCameras()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x956160", Offset = "0x956160", VA = "0x956160")]
	public static void setColorblindMode(VisionType visionType)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x956164", Offset = "0x956164", VA = "0x956164")]
	public static VisionType visionTypeFromString(string theString)
	{
		return default(VisionType);
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x95613C", Offset = "0x95613C", VA = "0x95613C")]
	private void CycleType()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x95624C", Offset = "0x95624C", VA = "0x95624C")]
	public DebugColorblindButton()
	{
	}
}
[Token(Token = "0x2000216")]
public class ConfigPickerPanel : MonoBehaviour
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text pickerHeading;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NamedPickerItem pickerTemplate;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TypedObjectPool<NamedPickerItem> pickerPool;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766BEC", Offset = "0x766BEC")]
	public InputField filter;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766C24", Offset = "0x766C24")]
	public Dropdown enemyDropdownFilter;

	[Token(Token = "0x4000D64")]
	private const string NoneOption = "NONE";

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766C5C", Offset = "0x766C5C")]
	public Toggle enemyClassOnlyToggle;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LevelWaveItem waveItem;

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x9CBAE0", Offset = "0x9CBAE0", VA = "0x9CBAE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x9CBFD8", Offset = "0x9CBFD8", VA = "0x9CBFD8")]
	private void filterInformationUpdated()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x9CC1B4", Offset = "0x9CC1B4", VA = "0x9CC1B4")]
	public void openGunPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x9CC4B0", Offset = "0x9CC4B0", VA = "0x9CC4B0")]
	public void openEnemyPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x9CC55C", Offset = "0x9CC55C", VA = "0x9CC55C")]
	public void openSpawnPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x9CC608", Offset = "0x9CC608", VA = "0x9CC608")]
	public void openFleetSpawnPicker(LevelWaveItem waveItem)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x9CC398", Offset = "0x9CC398", VA = "0x9CC398")]
	private void resetPanel(bool showEnemyClassDropdown, bool showEnemyClassOnlyToggle)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x9CC6B4", Offset = "0x9CC6B4", VA = "0x9CC6B4")]
	private void gunWasPicked(string gunId)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x9CC80C", Offset = "0x9CC80C", VA = "0x9CC80C")]
	private void enemyWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x9CC8CC", Offset = "0x9CC8CC", VA = "0x9CC8CC")]
	private void spawnWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x9CC98C", Offset = "0x9CC98C", VA = "0x9CC98C")]
	private void fleetSpawnWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x9CC764", Offset = "0x9CC764", VA = "0x9CC764")]
	public void closePanel()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x9CCA4C", Offset = "0x9CCA4C", VA = "0x9CCA4C")]
	public ConfigPickerPanel()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x9CCA54", Offset = "0x9CCA54", VA = "0x9CCA54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC40", Offset = "0x76BC40")]
	private void <OnEnable>b__8_0(string newText)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x9CCA58", Offset = "0x9CCA58", VA = "0x9CCA58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC50", Offset = "0x76BC50")]
	private void <OnEnable>b__8_1(int option)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x9CCA5C", Offset = "0x9CCA5C", VA = "0x9CCA5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC60", Offset = "0x76BC60")]
	private void <OnEnable>b__8_2(bool isOn)
	{
	}
}
[Token(Token = "0x2000217")]
public class ConfigToggleItem : MonoBehaviour
{
	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle toggleItem;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text itemLabel;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x766C94", Offset = "0x766C94")]
	private string <itemKey>k__BackingField;

	[Token(Token = "0x170000A9")]
	public string itemKey
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x9CCA60", Offset = "0x9CCA60", VA = "0x9CCA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC70", Offset = "0x76BC70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x9CCA68", Offset = "0x9CCA68", VA = "0x9CCA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC80", Offset = "0x76BC80")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public bool isOn
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x9CCA70", Offset = "0x9CCA70", VA = "0x9CCA70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x9CCA8C", Offset = "0x9CCA8C", VA = "0x9CCA8C")]
	public void configure(string itemKey, bool isOn)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x9CCAF8", Offset = "0x9CCAF8", VA = "0x9CCAF8")]
	public ConfigToggleItem()
	{
	}
}
[Token(Token = "0x2000218")]
public class EnemyPickerPanel : MonoBehaviour
{
	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text pickerHeading;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NamedPickerItem pickerTemplate;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TypedObjectPool<NamedPickerItem> pickerPool;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766CA4", Offset = "0x766CA4")]
	public InputField filter;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GunBuilderPanel gunBuilder;

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x976AD8", Offset = "0x976AD8", VA = "0x976AD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x976B94", Offset = "0x976B94", VA = "0x976B94")]
	private void filterFieldUpdated(string newText)
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x976B98", Offset = "0x976B98", VA = "0x976B98")]
	private void updateFilters()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x976CD4", Offset = "0x976CD4", VA = "0x976CD4")]
	public void openEnemyPicker(GunBuilderPanel gunBuilder)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x976DE0", Offset = "0x976DE0", VA = "0x976DE0")]
	private void enemyWasPicked(string objectKey)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x976EA0", Offset = "0x976EA0", VA = "0x976EA0")]
	public void closePanel()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x976F48", Offset = "0x976F48", VA = "0x976F48")]
	public EnemyPickerPanel()
	{
	}
}
[Token(Token = "0x2000219")]
public class GunBuilderConfigLoadItem : MonoBehaviour
{
	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button loadButton;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<GunConfig> onLoadButtonHit;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GunConfig configToShow;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x8F8D38", Offset = "0x8F8D38", VA = "0x8F8D38")]
	public void bootstrap(GunConfig configToShow, Action<GunConfig> onLoadButtonHit)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x8F8DAC", Offset = "0x8F8DAC", VA = "0x8F8DAC")]
	public void loadButtonWasPressed()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x8F8E90", Offset = "0x8F8E90", VA = "0x8F8E90")]
	public GunBuilderConfigLoadItem()
	{
	}
}
[Token(Token = "0x200021A")]
public class GunBuilderPanel : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	private const string DefaultGunConfigId = "gun_default";

	[Token(Token = "0x4000D74")]
	private const string EditorSpawnedEnemyKey = "ed_enemy_spawn_key";

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766CDC", Offset = "0x766CDC")]
	public Button saveConfigButton;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button clearConfigButton;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button revertGunIDButton;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] contentParents;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766D14", Offset = "0x766D14")]
	public GameObject loadingParent;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GunBuilderConfigLoadItem loadItemTemplate;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputField loadingFilter;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TypedObjectPool<GunBuilderConfigLoadItem> loadItemPool;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766D4C", Offset = "0x766D4C")]
	public Text header;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InputField gunId;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766D84", Offset = "0x766D84")]
	public EnemyPickerPanel enemyPickerPanel;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766DBC", Offset = "0x766DBC")]
	public Dropdown gunTypeDropDown;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766DF4", Offset = "0x766DF4")]
	public LevelEditNumberInput initialShotDelay;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelEditNumberInput bulletCount;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LevelEditNumberInput shotSpreadAngle;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LevelEditNumberInput repeatShotDelay;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766E2C", Offset = "0x766E2C")]
	public LevelEditNumberInput burstDelay;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766E64", Offset = "0x766E64")]
	public LevelEditNumberInput sprayTime;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LevelEditNumberInput backAndForthCount;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766E9C", Offset = "0x766E9C")]
	public LevelEditNumberInput gridShotGapPercent;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LevelEditNumberInput gridSpacing;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766ED4", Offset = "0x766ED4")]
	public LevelEditStringListBuilder bulletListBuilder;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LevelEditNumberInput bulletSpinSpeed;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelEditNumberInput bulletSpinAxisX;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LevelEditNumberInput bulletSpinAxisY;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LevelEditNumberInput bulletSpinAxisZ;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Toggle horizontalBulletToggle;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LevelEditNumberInput bulletSpeedMultiplier;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766F0C", Offset = "0x766F0C")]
	public Dropdown gunAnimDropdown;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LevelEditNumberInput gunAnimationPlaybackRate;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string loadedGunId;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<string> gunAnimClips;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool isLoaded;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GunConfig currentLoadedConfig;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool isUpdatingUI;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private EnemyController spawnedEnemy;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public EnemyGun enemyGun;

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x8F8E98", Offset = "0x8F8E98", VA = "0x8F8E98")]
	public void loadConfig(GunConfig loadedConfig)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x8F9AA0", Offset = "0x8F9AA0", VA = "0x8F9AA0")]
	public void saveButtonWasPressed()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x8F9B64", Offset = "0x8F9B64", VA = "0x8F9B64")]
	public void clearButtonWasPressed()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x8F9BFC", Offset = "0x8F9BFC", VA = "0x8F9BFC")]
	public void newConfigButtonWasPressed()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x8F9D3C", Offset = "0x8F9D3C", VA = "0x8F9D3C")]
	public void revertGunIdButtonWasPressed()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x8FA088", Offset = "0x8FA088", VA = "0x8FA088")]
	public void cameraCycleButtonWasPressed()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x8FA104", Offset = "0x8FA104", VA = "0x8FA104")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x8FAC64", Offset = "0x8FAC64", VA = "0x8FAC64")]
	private void Update()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x8FB0F0", Offset = "0x8FB0F0", VA = "0x8FB0F0")]
	public void enemyPickerOpenButtonPressed()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x8FA7F0", Offset = "0x8FA7F0", VA = "0x8FA7F0")]
	public void enemyPicked(string objectKey)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x8F904C", Offset = "0x8F904C", VA = "0x8F904C")]
	private void updateAssignedEnemyGun(string theGunId)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x8FAEB4", Offset = "0x8FAEB4", VA = "0x8FAEB4")]
	private void updateGunsEntriesFromFilter(string filterText)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x8F9190", Offset = "0x8F9190", VA = "0x8F9190")]
	private void updateDisplay(GunConfig next)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x8FB110", Offset = "0x8FB110", VA = "0x8FB110")]
	public void applyInputsToConfig()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x8F9D88", Offset = "0x8F9D88", VA = "0x8F9D88")]
	public void applyInputsToConfig(float value)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x8FB114", Offset = "0x8FB114", VA = "0x8FB114")]
	public void randomButtonPressed()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x8FAA3C", Offset = "0x8FAA3C", VA = "0x8FAA3C")]
	private void setupLabel(LevelEditNumberInput label, float incrementAmount, float minimum, float maximum, string labelText)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x8FAA84", Offset = "0x8FAA84", VA = "0x8FAA84")]
	private List<string> getAllBulletsFromDirectory(string path)
	{
		return null;
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x8FB478", Offset = "0x8FB478", VA = "0x8FB478")]
	public GunBuilderPanel()
	{
	}
}
[Token(Token = "0x200021B")]
public class LevelEditNumberInput : MonoBehaviour
{
	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766F44", Offset = "0x766F44")]
	public Text valueLabel;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text titleLabel;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text plusLabel;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text minusLabel;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766F7C", Offset = "0x766F7C")]
	public float currentValue;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float incrementAmount;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766FB4", Offset = "0x766FB4")]
	public float minimum;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maximum;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool roundToInt;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<float> itemDidChangeAction;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float multiplier;

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x985B3C", Offset = "0x985B3C", VA = "0x985B3C")]
	public int currentValueAsInt()
	{
		return default(int);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x985BB0", Offset = "0x985BB0", VA = "0x985BB0")]
	public float currentValueAsFloat()
	{
		return default(float);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x985BB8", Offset = "0x985BB8", VA = "0x985BB8")]
	public void updateTitle(string title)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x985C68", Offset = "0x985C68", VA = "0x985C68")]
	public void setValue(float value, bool doInt = false, [Optional] Action<float> theAction)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x985DC4", Offset = "0x985DC4", VA = "0x985DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x985F38", Offset = "0x985F38", VA = "0x985F38")]
	public void incrementValueWasPressed(int amount)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x985CA0", Offset = "0x985CA0", VA = "0x985CA0")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x985FD0", Offset = "0x985FD0", VA = "0x985FD0")]
	public LevelEditNumberInput()
	{
	}
}
[Token(Token = "0x200021C")]
public class LevelEditStringListBuilder : MonoBehaviour
{
	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x766FEC", Offset = "0x766FEC")]
	public Button nextSelection;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button previousSelection;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text selectionDisplay;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button addCurrentSelection;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button removeLastFromList;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767024", Offset = "0x767024")]
	public Text listDisplay;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int selectionIndex;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> selectionOptions;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> stringListContent;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action updateCallback;

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x985FF8", Offset = "0x985FF8", VA = "0x985FF8")]
	public void setup(List<string> selectionOptions)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x986024", Offset = "0x986024", VA = "0x986024")]
	public void setValue(List<string> startingListContent, Action updateCallback)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x986064", Offset = "0x986064", VA = "0x986064")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x986274", Offset = "0x986274", VA = "0x986274")]
	public void selectionButtonWasPressed(int direction)
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x986308", Offset = "0x986308", VA = "0x986308")]
	public void addCurrentSelectionWasPressed()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x986394", Offset = "0x986394", VA = "0x986394")]
	public void removeLastItemButtonWasPressed()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x98641C", Offset = "0x98641C", VA = "0x98641C")]
	public List<string> currentListContents()
	{
		return null;
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x986204", Offset = "0x986204", VA = "0x986204")]
	private string currentSelection()
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x9864D4", Offset = "0x9864D4", VA = "0x9864D4")]
	public LevelEditStringListBuilder()
	{
	}
}
[Token(Token = "0x200021D")]
public class LevelBuilderPanel : MonoBehaviour
{
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76705C", Offset = "0x76705C")]
	public GameObject mainFrame;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadFrame;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject messageFrame;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigPickerPanel configPickerFrame;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767094", Offset = "0x767094")]
	public Text header;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform scrollRect;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text modeToggleButtonLabel;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text saveButtonLabel;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7670CC", Offset = "0x7670CC")]
	public LevelWaveItem levelWaveItemTemplate;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767104", Offset = "0x767104")]
	public LoadLevelToEditItem levelLoadItemTemplate;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TMP_InputField levelLoadFilter;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider difficultyFilterSlider;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text difficultyFilterLabel;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76713C", Offset = "0x76713C")]
	public TMP_InputField levelIdInput;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767174", Offset = "0x767174")]
	public Slider difficultySlider;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text difficultyLabel;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7671AC", Offset = "0x7671AC")]
	public ConfigToggleItem worldToggleTemplate;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ConfigToggleItem worldToggleFilterTemplate;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7671E4", Offset = "0x7671E4")]
	public ScrollRect messageScroll;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text messageHeader;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text messageContent;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TypedObjectPool<LevelWaveItem> waveItemPool;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TypedObjectPool<LoadLevelToEditItem> levelLoadItemPool;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TypedObjectPool<ConfigToggleItem> worldTogglePool;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TypedObjectPool<ConfigToggleItem> worldToggleFilterPool;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isItemControlActive;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Level loadedLevel;

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x9079E4", Offset = "0x9079E4", VA = "0x9079E4")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x908358", Offset = "0x908358", VA = "0x908358")]
	public void openLoadPanelButtonPressed()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x90835C", Offset = "0x90835C", VA = "0x90835C")]
	public void testLevelButtonPressed()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x908920", Offset = "0x908920", VA = "0x908920")]
	public void testLevelFromHereButtonPressed(LevelWaveItem itemToTestFrom)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x908A04", Offset = "0x908A04", VA = "0x908A04")]
	public void showRawButtonPressed()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x908EB8", Offset = "0x908EB8", VA = "0x908EB8")]
	public void loadLevelButtonPressed(string levelFilename)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x908F38", Offset = "0x908F38", VA = "0x908F38")]
	public void deleteLevelButtonPressed(string levelName)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x9090DC", Offset = "0x9090DC", VA = "0x9090DC")]
	public void closeMessageButtonPressed()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x9080B4", Offset = "0x9080B4", VA = "0x9080B4")]
	private void setupLevelLoadFrame()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x909244", Offset = "0x909244", VA = "0x909244")]
	private void updateItemsToLoadList()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x90987C", Offset = "0x90987C", VA = "0x90987C")]
	public void createNewLevel()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x909BB8", Offset = "0x909BB8", VA = "0x909BB8")]
	public void duplicateItem(LevelWaveItem itemToCopy)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x909D98", Offset = "0x909D98", VA = "0x909D98")]
	public void insertFleetSpawnItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x909E00", Offset = "0x909E00", VA = "0x909E00")]
	public void insertSpawnItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x909E08", Offset = "0x909E08", VA = "0x909E08")]
	public void insertWaitOnlyItem(LevelWaveItem itemToPlaceAt)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x909DA0", Offset = "0x909DA0", VA = "0x909DA0")]
	private void insertNewItem(LevelWaveItem itemToPlaceAt, WaveTickActionType optionalAction = WaveTickActionType.none)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x909A98", Offset = "0x909A98", VA = "0x909A98")]
	private void createNewItem(int siblingIndex, WaveTickActionType optionalAction = WaveTickActionType.none)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x909CE4", Offset = "0x909CE4", VA = "0x909CE4")]
	private void createNewItem(int siblingIndex, List<WaveTickAction> waveGroup)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x909F1C", Offset = "0x909F1C", VA = "0x909F1C")]
	public void deleteItemWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x90A030", Offset = "0x90A030", VA = "0x90A030")]
	public void moveUpWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x90A1B0", Offset = "0x90A1B0", VA = "0x90A1B0")]
	public void moveDownWasPressed(LevelWaveItem theItem)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x90A338", Offset = "0x90A338", VA = "0x90A338")]
	public void exportWavesToLevel()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x908420", Offset = "0x908420", VA = "0x908420")]
	private Level assembleExportLevel([Optional] LevelWaveItem waveToStartExport)
	{
		return null;
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x908EBC", Offset = "0x908EBC", VA = "0x908EBC")]
	private void loadLevel(string levelName)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x907B08", Offset = "0x907B08", VA = "0x907B08")]
	private void setupPanelForLevel(Level theLevel)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x9090FC", Offset = "0x9090FC", VA = "0x9090FC")]
	private void setupToggle(string worldId, bool isFilter)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x90A650", Offset = "0x90A650", VA = "0x90A650")]
	private void levelIdInputFieldUpdate(string newId)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x908E3C", Offset = "0x908E3C", VA = "0x908E3C")]
	private void showMessage(string header, string content)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x90A148", Offset = "0x90A148", VA = "0x90A148")]
	private void updateItemPosition(LevelWaveItem theItem, int index)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x90A828", Offset = "0x90A828", VA = "0x90A828")]
	public void modeToggleButtonWasPressed()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x90A838", Offset = "0x90A838", VA = "0x90A838")]
	private void updateItemsWithEditMode(bool newMode)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x909E10", Offset = "0x909E10", VA = "0x909E10")]
	private void updateWaveItemsForPosition(bool animate)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x90A9B0", Offset = "0x90A9B0", VA = "0x90A9B0")]
	private void scrollDidHappen()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x90A5AC", Offset = "0x90A5AC", VA = "0x90A5AC")]
	private void difficultySliderUpdated(float value)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x90A588", Offset = "0x90A588", VA = "0x90A588")]
	private bool isSpawnAction(WaveTickAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x9099B0", Offset = "0x9099B0", VA = "0x9099B0")]
	private string getNewLevelChunkId()
	{
		return null;
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x90AB60", Offset = "0x90AB60", VA = "0x90AB60")]
	public LevelBuilderPanel()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x90AB68", Offset = "0x90AB68", VA = "0x90AB68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC90", Offset = "0x76BC90")]
	private void <setupLevelLoadFrame>b__35_0(string value)
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x90AB6C", Offset = "0x90AB6C", VA = "0x90AB6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCA0", Offset = "0x76BCA0")]
	private void <setupLevelLoadFrame>b__35_1(float value)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x90AB70", Offset = "0x90AB70", VA = "0x90AB70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCB0", Offset = "0x76BCB0")]
	private void <setupPanelForLevel>b__51_0()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x90AB78", Offset = "0x90AB78", VA = "0x90AB78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCC0", Offset = "0x76BCC0")]
	private void <setupToggle>b__52_0(bool ignoreToggle)
	{
	}
}
[Token(Token = "0x200021E")]
public class LevelWaveItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762024", Offset = "0x762024")]
	private sealed class <>c
	{
		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<WaveTickAction> <>9__52_0;

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x988D18", Offset = "0x988D18", VA = "0x988D18")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x988D20", Offset = "0x988D20", VA = "0x988D20")]
		internal bool <getActionsForExport>b__52_0(WaveTickAction waveAction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762034", Offset = "0x762034")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveTickActionType actionType;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x988C20", Offset = "0x988C20", VA = "0x988C20")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x988D54", Offset = "0x988D54", VA = "0x988D54")]
		internal bool <updateActionsFromToggle>b__0(WaveTickAction waveAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x988D78", Offset = "0x988D78", VA = "0x988D78")]
		internal bool <updateActionsFromToggle>b__1(WaveTickAction waveAction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762044", Offset = "0x762044")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelWaveItem <>4__this;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle target;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x988C28", Offset = "0x988C28", VA = "0x988C28")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x988D9C", Offset = "0x988D9C", VA = "0x988D9C")]
		internal void <setupToggle>b__0(bool boolToIgnore)
		{
		}
	}

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76721C", Offset = "0x76721C")]
	public RectTransform contentsParent;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text elementIndexLabel;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SVGImage background;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767254", Offset = "0x767254")]
	public ConfigPickerPanel configPicker;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject itemControlElementParent;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76728C", Offset = "0x76728C")]
	public GameObject moveOptionParent;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle wiggleMoveToggle;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle trackToPlayerToggle;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle splineJumpToggle;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7672C4", Offset = "0x7672C4")]
	public LevelEditNumberInput loiterCount;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7672FC", Offset = "0x7672FC")]
	public LevelEditNumberInput waveWaitTicks;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle waitForClearToggle;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle waitForLastToggle;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767334", Offset = "0x767334")]
	public GameObject spawnParent;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text spawnPointLabel;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LevelEditNumberInput heightOffset;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76736C", Offset = "0x76736C")]
	public GameObject enemySpawnParent;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text enemySpawnLabel;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7673A4", Offset = "0x7673A4")]
	public GameObject gunOverrideParent;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text gunLabel;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7673DC", Offset = "0x7673DC")]
	public GameObject fleetSpawnParent;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text fleetSpawnLabel;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LevelEditNumberInput fleetSpawnIndex;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x767414", Offset = "0x767414")]
	private List<WaveTickAction> <waveActionsToEdit>k__BackingField;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color baseColor;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isBootstrapped;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool isUpdatingUI;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool isUpdatingConfig;

	[Token(Token = "0x4000DE6")]
	private const string SpawnPath = "Spawns/{0}";

	[Token(Token = "0x4000DE7")]
	private const string FleetPath = "Fleets/{0}";

	[Token(Token = "0x170000AB")]
	public List<WaveTickAction> waveActionsToEdit
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x9864DC", Offset = "0x9864DC", VA = "0x9864DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCD0", Offset = "0x76BCD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x9864E4", Offset = "0x9864E4", VA = "0x9864E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCE0", Offset = "0x76BCE0")]
		private set
		{
		}
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x9864EC", Offset = "0x9864EC", VA = "0x9864EC")]
	public void setup(List<WaveTickAction> waveActionsToEdit)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x986B7C", Offset = "0x986B7C", VA = "0x986B7C")]
	public void updateEntryNumber(int entryNumber, bool animate)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x986D74", Offset = "0x986D74", VA = "0x986D74")]
	public void updateEditMode(bool isItemControlActive)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x986948", Offset = "0x986948", VA = "0x986948")]
	public void updateDisplay()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x986D94", Offset = "0x986D94", VA = "0x986D94")]
	private void setupForSpawnAction(WaveTickAction wave)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x9873D8", Offset = "0x9873D8", VA = "0x9873D8")]
	private void setupForTickWait(WaveTickAction wave)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x9874B0", Offset = "0x9874B0", VA = "0x9874B0")]
	private void setupForWaitForClear()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x9874D0", Offset = "0x9874D0", VA = "0x9874D0")]
	private void setupForWaitForLast()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x98779C", Offset = "0x98779C", VA = "0x98779C")]
	private void toggleEntryWasUpdate(Toggle theToggle)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x98799C", Offset = "0x98799C", VA = "0x98799C")]
	private void ensureToggleStates(Toggle updatedToggle, params Toggle[] allToggles)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x987B0C", Offset = "0x987B0C", VA = "0x987B0C")]
	private void entryWasUpdated()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x987F04", Offset = "0x987F04", VA = "0x987F04")]
	public void gunOverrideButtonPressed()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x987FFC", Offset = "0x987FFC", VA = "0x987FFC")]
	public void enemyPickButtonPressed()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x9880F4", Offset = "0x9880F4", VA = "0x9880F4")]
	public void spawnPickButtonPressed()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x9881EC", Offset = "0x9881EC", VA = "0x9881EC")]
	public void fleetPickButtonWasPressed()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x9882E0", Offset = "0x9882E0", VA = "0x9882E0")]
	public void updateWithGunOverride(string gunId)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x9883B0", Offset = "0x9883B0", VA = "0x9883B0")]
	public void updateWithNewEnemyObjectKey(string objectKey)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x9884B4", Offset = "0x9884B4", VA = "0x9884B4")]
	public void updateWithNewSpawnKey(string spawnName)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x988618", Offset = "0x988618", VA = "0x988618")]
	public void updateWithNewFleetSpawnKey(string fleetName)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x988778", Offset = "0x988778", VA = "0x988778")]
	public List<WaveTickAction> getActionsForExport()
	{
		return null;
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x9888BC", Offset = "0x9888BC", VA = "0x9888BC")]
	public List<string> findSetupErrors()
	{
		return null;
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x988B50", Offset = "0x988B50", VA = "0x988B50")]
	public bool isABossSpawningWave()
	{
		return default(bool);
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x988A9C", Offset = "0x988A9C", VA = "0x988A9C")]
	private bool isItemInvalid(string itemName, bool checkForTemplate)
	{
		return default(bool);
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x986C98", Offset = "0x986C98", VA = "0x986C98")]
	public void interactionHappened(bool isShort = false)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x987CD4", Offset = "0x987CD4", VA = "0x987CD4")]
	private void updateActionsFromToggle(Toggle toggle, WaveTickActionType actionType)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x988724", Offset = "0x988724", VA = "0x988724")]
	private string objectKeyForFleet(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x9885C4", Offset = "0x9885C4", VA = "0x9885C4")]
	private string objectKeyForSpawn(string spawnName)
	{
		return null;
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x9875C0", Offset = "0x9875C0", VA = "0x9875C0")]
	private string getEnemyDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x987560", Offset = "0x987560", VA = "0x987560")]
	private string getEnemyGroupDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x9874F0", Offset = "0x9874F0", VA = "0x9874F0")]
	private string getSpawnDisplayLabel(string spawnName)
	{
		return null;
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x987708", Offset = "0x987708", VA = "0x987708")]
	private string getFleetDisplayLabel(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x986800", Offset = "0x986800", VA = "0x986800")]
	private void setupLabel(LevelEditNumberInput label, float incrementAmount, float minimum, float maximum, string labelText)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x986844", Offset = "0x986844", VA = "0x986844")]
	private void setupToggle(Toggle target)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x988C30", Offset = "0x988C30", VA = "0x988C30")]
	public LevelWaveItem()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x988C38", Offset = "0x988C38", VA = "0x988C38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCF0", Offset = "0x76BCF0")]
	private void <setupForSpawnAction>b__37_0(float floatToIgnore)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x988C3C", Offset = "0x988C3C", VA = "0x988C3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD00", Offset = "0x76BD00")]
	private void <setupForSpawnAction>b__37_2(float floatToIgnore)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x988C40", Offset = "0x988C40", VA = "0x988C40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD10", Offset = "0x76BD10")]
	private void <setupForSpawnAction>b__37_1(float floatToIgnore)
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x988C44", Offset = "0x988C44", VA = "0x988C44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD20", Offset = "0x76BD20")]
	private void <setupForTickWait>b__38_0(float floatToIgnore)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x988C48", Offset = "0x988C48", VA = "0x988C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD30", Offset = "0x76BD30")]
	private void <interactionHappened>b__56_0(float alpha)
	{
	}
}
[Token(Token = "0x200021F")]
public class LoadLevelToEditItem : MonoBehaviour
{
	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text levelNameLabel;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string levelName;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelBuilderPanel builderPanel;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x988DBC", Offset = "0x988DBC", VA = "0x988DBC")]
	public void setupForLevel(string levelName, LevelBuilderPanel builderPanel)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x988E24", Offset = "0x988E24", VA = "0x988E24")]
	public void loadButtonWasPressed()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x988E48", Offset = "0x988E48", VA = "0x988E48")]
	public void deleteButtonWasPressed()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x988E6C", Offset = "0x988E6C", VA = "0x988E6C")]
	public LoadLevelToEditItem()
	{
	}
}
[Token(Token = "0x2000220")]
public class MainEditPanel : MonoBehaviour
{
	[Token(Token = "0x600118F")]
	[Address(RVA = "0x992714", Offset = "0x992714", VA = "0x992714")]
	public void enemyDesignerButtonWasPressed()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x992784", Offset = "0x992784", VA = "0x992784")]
	public MainEditPanel()
	{
	}
}
[Token(Token = "0x2000221")]
public class NamedPickerItem : MonoBehaviour
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text displayLabel;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectKey;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<string> pickAction;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> metaInfo;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isEnemyClassItem;

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xA0FE5C", Offset = "0xA0FE5C", VA = "0xA0FE5C")]
	public void setupForGun(string gunId, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xA10060", Offset = "0xA10060", VA = "0xA10060")]
	public void setupForEnemy(EnemyController enemy, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xA10278", Offset = "0xA10278", VA = "0xA10278")]
	public void setupForEnemyGroup(EnemyClass enemyGroup, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xA1040C", Offset = "0xA1040C", VA = "0xA1040C")]
	public void setupForSpawn(string spawnName, string enemyClassMeta, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xA10578", Offset = "0xA10578", VA = "0xA10578")]
	public void setupForFleetSpawn(string fleetName, Action<string> pickAction)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xA0FF08", Offset = "0xA0FF08", VA = "0xA0FF08")]
	private void setup(string objectKey, string displayText, Action<string> pickAction, [Optional] Color? color)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xA10664", Offset = "0xA10664", VA = "0xA10664")]
	public void pickButtonWasPressed()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xA106C0", Offset = "0xA106C0", VA = "0xA106C0")]
	public bool isPassingFilter(string filter, bool onlyAllowEnemyClasses = false, [Optional] string metaInfoFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xA10130", Offset = "0xA10130", VA = "0xA10130")]
	private string getEnemyDisplayLabel(string objectKey)
	{
		return null;
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xA103AC", Offset = "0xA103AC", VA = "0xA103AC")]
	private string getEnemyGroupDisplayLabel(string enemyGroup)
	{
		return null;
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xA105D0", Offset = "0xA105D0", VA = "0xA105D0")]
	private string getFleetDisplayLabel(string fleetName)
	{
		return null;
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xA100E8", Offset = "0xA100E8", VA = "0xA100E8")]
	private string objectKeyForEnemy(EnemyController enemy)
	{
		return null;
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xA107A4", Offset = "0xA107A4", VA = "0xA107A4")]
	public NamedPickerItem()
	{
	}
}
[Token(Token = "0x2000222")]
public class EndOfGameCheckpointDisplay : MonoBehaviour
{
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762054", Offset = "0x762054")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EndOfGameCheckpointDisplay <>4__this;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float start;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float target;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isWin;

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x95E230", Offset = "0x95E230", VA = "0x95E230")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x95E6DC", Offset = "0x95E6DC", VA = "0x95E6DC")]
		internal void <animateToFill>b__0(float alpha)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x95E79C", Offset = "0x95E79C", VA = "0x95E79C")]
		internal void <animateToFill>b__1()
		{
		}
	}

	[Token(Token = "0x4000DF0")]
	private const float PostFillPopSize = 1.2f;

	[Token(Token = "0x4000DF1")]
	private const float PostFillPopTime = 0.4f;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBeforePostAction;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767424", Offset = "0x767424")]
	public GameObject topLevelParent;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject contentParent;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76745C", Offset = "0x76745C")]
	public GameObject winPopup;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject failPopup;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text winPopupLabel;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text failPopupLabel;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767494", Offset = "0x767494")]
	public Image medalImage;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite easyMedal;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite mediumMedal;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite hardMedal;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7674CC", Offset = "0x7674CC")]
	public float fillTime;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image fillBar;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve fillCurve;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem fillBarVFX;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action postAnimationAction;

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x95DEB4", Offset = "0x95DEB4", VA = "0x95DEB4")]
	public void updateDisplay(bool isWin, Action postAnimationAction)
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x95E090", Offset = "0x95E090", VA = "0x95E090")]
	private void animateToFill(float target, bool isWin)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x95E3AC", Offset = "0x95E3AC", VA = "0x95E3AC")]
	private void showWin()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x95E238", Offset = "0x95E238", VA = "0x95E238")]
	private void showFailure()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x95E520", Offset = "0x95E520", VA = "0x95E520")]
	public void prepareForAnimation(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x95E5BC", Offset = "0x95E5BC", VA = "0x95E5BC")]
	public void hide()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x95E600", Offset = "0x95E600", VA = "0x95E600")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x95E69C", Offset = "0x95E69C", VA = "0x95E69C")]
	public EndOfGameCheckpointDisplay()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x95E6B4", Offset = "0x95E6B4", VA = "0x95E6B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD40", Offset = "0x76BD40")]
	private void <showWin>b__21_0()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x95E6C8", Offset = "0x95E6C8", VA = "0x95E6C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD50", Offset = "0x76BD50")]
	private void <showFailure>b__22_0()
	{
	}
}
[Token(Token = "0x2000223")]
public class EndOfGameMissionDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E03")]
	private const float PostFillPopSize = 1.2f;

	[Token(Token = "0x4000E04")]
	private const float PostFillPopTime = 0.4f;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndOfGameMissionProgressBar missionProgressBarTemplate;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TypedObjectPool<EndOfGameMissionProgressBar> progressBars;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767504", Offset = "0x767504")]
	public GameObject noChallengeAvailableParent;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76753C", Offset = "0x76753C")]
	public TMP_Text challengeNotAvailable;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767574", Offset = "0x767574")]
	public GameObject winPopup;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject failPopup;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action postAnimationAction;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMissionComplete;

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x95E7C4", Offset = "0x95E7C4", VA = "0x95E7C4")]
	public void updateDisplay(MissionConfig currentMission, Action postAnimationAction)
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x95EB34", Offset = "0x95EB34", VA = "0x95EB34")]
	public void prepareForAnimation()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x95E99C", Offset = "0x95E99C", VA = "0x95E99C")]
	private void checkProgressBarBootstrap()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x95ED68", Offset = "0x95ED68", VA = "0x95ED68")]
	public void hide()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x95EEB8", Offset = "0x95EEB8", VA = "0x95EEB8")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x95F084", Offset = "0x95F084", VA = "0x95F084")]
	private void fillBarsCompleteAction()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x95F094", Offset = "0x95F094", VA = "0x95F094")]
	private void showSuccess()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x95F194", Offset = "0x95F194", VA = "0x95F194")]
	private void showFailure()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x95F294", Offset = "0x95F294", VA = "0x95F294")]
	public EndOfGameMissionDisplay()
	{
	}
}
[Token(Token = "0x2000224")]
public class EndOfGameMissionProgressBar : MonoBehaviour
{
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762064", Offset = "0x762064")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EndOfGameMissionProgressBar <>4__this;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float target;

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x95F440", Offset = "0x95F440", VA = "0x95F440")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x95F46C", Offset = "0x95F46C", VA = "0x95F46C")]
		internal void <animateToFill>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7675AC", Offset = "0x7675AC")]
	public GameObject topLevelParent;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject contentParent;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fillBarParent;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7675E4", Offset = "0x7675E4")]
	public TMP_Text missionTask;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UICornersGradient gradient;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image fillBar;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76761C", Offset = "0x76761C")]
	public float fillTime;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve fillCurve;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem fillCompleteVFX;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action fillCompleteAction;

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x95EA64", Offset = "0x95EA64", VA = "0x95EA64")]
	public void updateDisplay(MissionTaskConfig trackedTask, bool missionComplete, Action fillCompleteAction)
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x95ED10", Offset = "0x95ED10", VA = "0x95ED10")]
	public void prepareForAnimation()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x95EE74", Offset = "0x95EE74", VA = "0x95EE74")]
	public void hide()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x95EFE8", Offset = "0x95EFE8", VA = "0x95EFE8")]
	public void updateColors(Color lightColor, Color darkColor)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x95F29C", Offset = "0x95F29C", VA = "0x95F29C")]
	private void animateToFill(float target)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x95F448", Offset = "0x95F448", VA = "0x95F448")]
	private void fillAnimationIsComplete()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x95F45C", Offset = "0x95F45C", VA = "0x95F45C")]
	public EndOfGameMissionProgressBar()
	{
	}
}
[Token(Token = "0x2000225")]
public class EndOfGamePanel : MonoBehaviour
{
	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767654", Offset = "0x767654")]
	public GameObject scoreParent;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76768C", Offset = "0x76768C")]
	public EndOfGameCheckpointDisplay campaignProgress;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7676C4", Offset = "0x7676C4")]
	public TMP_Text missionHeader;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EndOfGameMissionDisplay missionDisplay;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7676FC", Offset = "0x7676FC")]
	public Color normalFillLightColor;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color normalFillDarkerColor;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color warningFillLightColor;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color warningFillDarkColor;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767734", Offset = "0x767734")]
	public GameObject continueButtonParent;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimpleShootableButton continueButton;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text continueButtonLabel;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76776C", Offset = "0x76776C")]
	public GameObject restartButtonParent;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SimpleShootableButton restartButton;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject mainMenuButtonParent;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SimpleShootableButton mainMenuButton;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text mainMenuButtonLabel;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7677A4", Offset = "0x7677A4")]
	public GameObject progressCallout;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float progressShowTime;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7677DC", Offset = "0x7677DC")]
	public GameObject rewardCallout;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TMP_Text calloutLabel;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isWin;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timeToHideProgressCallout;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MissionConfig currentMission;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WorldConfig currentWorld;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isRunningAnimations;

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x95F4C4", Offset = "0x95F4C4", VA = "0x95F4C4")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x95F698", Offset = "0x95F698", VA = "0x95F698")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x95FA98", Offset = "0x95FA98", VA = "0x95FA98")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x95F6C8", Offset = "0x95F6C8", VA = "0x95F6C8")]
	private void reset()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x95F724", Offset = "0x95F724", VA = "0x95F724")]
	private void normalEndOfGame()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x95FCF0", Offset = "0x95FCF0", VA = "0x95FCF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x95FA9C", Offset = "0x95FA9C", VA = "0x95FA9C")]
	private void updateMissionAnimations()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x95FE50", Offset = "0x95FE50", VA = "0x95FE50")]
	private void postGameAnimationComplete()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x95FF10", Offset = "0x95FF10", VA = "0x95FF10")]
	public void showLoseProgressCalloutState()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x95FE78", Offset = "0x95FE78", VA = "0x95FE78")]
	private void updateRewardCallout(bool checkMissionForRewards)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x95FFDC", Offset = "0x95FFDC", VA = "0x95FFDC")]
	private bool hasRewardsAvailable(bool checkMissionForRewards)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x96008C", Offset = "0x96008C", VA = "0x96008C")]
	private string getRewardLabel(bool checkMissionForRewards)
	{
		return null;
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x95FB5C", Offset = "0x95FB5C", VA = "0x95FB5C")]
	private void updateScoreDisplay(bool isActive)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x95FD8C", Offset = "0x95FD8C", VA = "0x95FD8C")]
	private void updateFillBarColors()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x960168", Offset = "0x960168", VA = "0x960168")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x9602A0", Offset = "0x9602A0", VA = "0x9602A0")]
	public void continueButtonWasPressed()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x960388", Offset = "0x960388", VA = "0x960388")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x96045C", Offset = "0x96045C", VA = "0x96045C")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x960690", Offset = "0x960690", VA = "0x960690")]
	public EndOfGamePanel()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x9606A0", Offset = "0x9606A0", VA = "0x9606A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD60", Offset = "0x76BD60")]
	private void <normalEndOfGame>b__30_0()
	{
	}
}
[Token(Token = "0x2000226")]
public class EndOfTournamentPanel : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762074", Offset = "0x762074")]
	private sealed class <interactionUpdate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfTournamentPanel <>4__this;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x960F24", Offset = "0x960F24", VA = "0x960F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x960F8C", Offset = "0x960F8C", VA = "0x960F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x960C3C", Offset = "0x960C3C", VA = "0x960C3C")]
		[DebuggerHidden]
		public <interactionUpdate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x960DE8", Offset = "0x960DE8", VA = "0x960DE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x960DEC", Offset = "0x960DEC", VA = "0x960DEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x960F2C", Offset = "0x960F2C", VA = "0x960F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767814", Offset = "0x767814")]
	public TMP_Text leaderboardTitleLabel;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76784C", Offset = "0x76784C")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767884", Offset = "0x767884")]
	public TMP_Text highestMultiplierLabel;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text runDurationLabel;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text levelLengthLabel;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7678BC", Offset = "0x7678BC")]
	public SimpleShootableButton restartButton;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SimpleShootableButton mainMenuButton;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7678F4", Offset = "0x7678F4")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x9606C8", Offset = "0x9606C8", VA = "0x9606C8")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x960C08", Offset = "0x960C08", VA = "0x960C08")]
	public void panelWillMoveOut()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x960B8C", Offset = "0x960B8C", VA = "0x960B8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BD70", Offset = "0x76BD70")]
	private IEnumerator interactionUpdate()
	{
		return null;
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x960838", Offset = "0x960838", VA = "0x960838")]
	private void updateScoreDisplay()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x960998", Offset = "0x960998", VA = "0x960998")]
	private void updateStats()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x960C68", Offset = "0x960C68", VA = "0x960C68")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x960D68", Offset = "0x960D68", VA = "0x960D68")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x960DE0", Offset = "0x960DE0", VA = "0x960DE0")]
	public EndOfTournamentPanel()
	{
	}
}
[Token(Token = "0x2000227")]
public class ErrorPanel : MonoBehaviour
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text errorCode;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x977D78", Offset = "0x977D78", VA = "0x977D78")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x977E1C", Offset = "0x977E1C", VA = "0x977E1C")]
	public void homeButtonWasPressed()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x977E24", Offset = "0x977E24", VA = "0x977E24")]
	public ErrorPanel()
	{
	}
}
[Token(Token = "0x2000228")]
public class GameDifficultyDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76792C", Offset = "0x76792C")]
	public UIButtonToggle easyDifficultyButton;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButtonToggle mediumDifficultyButton;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButtonToggle hardDifficultyButton;

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x97ADB0", Offset = "0x97ADB0", VA = "0x97ADB0")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x97AF28", Offset = "0x97AF28", VA = "0x97AF28")]
	public void easyDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x97AFC8", Offset = "0x97AFC8", VA = "0x97AFC8")]
	public void mediumDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x97AFD0", Offset = "0x97AFD0", VA = "0x97AFD0")]
	public void hardDifficultyButtonPressed()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x97AF30", Offset = "0x97AF30", VA = "0x97AF30")]
	private void updateDifficulty(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x97ADB4", Offset = "0x97ADB4", VA = "0x97ADB4")]
	public void updateToggleButtons()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x97AFD8", Offset = "0x97AFD8", VA = "0x97AFD8")]
	public GameDifficultyDisplay()
	{
	}
}
[Token(Token = "0x2000229")]
public class GameHubPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762084", Offset = "0x762084")]
	private sealed class <>c
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__16_0;

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x97C7D8", Offset = "0x97C7D8", VA = "0x97C7D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x97C7E0", Offset = "0x97C7E0", VA = "0x97C7E0")]
		internal bool <panelDidMoveIn>b__16_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E3E")]
	private const GameMode ArcadeOrTournament = GameMode.Arcade;

	[Token(Token = "0x4000E3F")]
	private const GameMode Story = GameMode.Story;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767964", Offset = "0x767964")]
	public SimpleShootableButton arcadeModeButton;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76799C", Offset = "0x76799C")]
	public ContentUnlockingAnimation contentUnlocking;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7679D4", Offset = "0x7679D4")]
	public MissionDisplay missionDisplay;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text playStoryLabel;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text playArcadeLabel;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767A0C", Offset = "0x767A0C")]
	public GameObject activeEventCalloutParent;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text activeEventLabel;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject inactiveEventCalloutParent;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text inactiveEventLabel;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767A44", Offset = "0x767A44")]
	public PilotInformationDisplay pilotInformation;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SettingsPanel settings;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767A7C", Offset = "0x767A7C")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstTimeShow;

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x97B7B8", Offset = "0x97B7B8", VA = "0x97B7B8")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x97BDC8", Offset = "0x97BDC8", VA = "0x97BDC8")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x97BF28", Offset = "0x97BF28", VA = "0x97BF28")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x97C0B0", Offset = "0x97C0B0", VA = "0x97C0B0")]
	public void creditsButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x97C0CC", Offset = "0x97C0CC", VA = "0x97C0CC")]
	public void openSettingsButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x97C108", Offset = "0x97C108", VA = "0x97C108")]
	public void closeSettingsButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x97C110", Offset = "0x97C110", VA = "0x97C110")]
	public void playStoryModeButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x97C1C4", Offset = "0x97C1C4", VA = "0x97C1C4")]
	public void playArcadeModeButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x97C268", Offset = "0x97C268", VA = "0x97C268")]
	public void replayTutorialButtonWasPressed()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x97BC08", Offset = "0x97BC08", VA = "0x97BC08")]
	private void setDefaultLeftHandDisplayState([Optional] object note)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x97C118", Offset = "0x97C118", VA = "0x97C118")]
	private void playCurrentWorldInMode(GameMode mode)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x97BC80", Offset = "0x97BC80", VA = "0x97BC80")]
	private void updatePanel()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x97C2F8", Offset = "0x97C2F8", VA = "0x97C2F8")]
	private void updateArcadeDisplays()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x97C6A4", Offset = "0x97C6A4", VA = "0x97C6A4")]
	public GameHubPanel()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x97C6B4", Offset = "0x97C6B4", VA = "0x97C6B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDD4", Offset = "0x76BDD4")]
	private void <panelDidMoveIn>b__16_1()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x97C754", Offset = "0x97C754", VA = "0x97C754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDE4", Offset = "0x76BDE4")]
	private void <panelDidMoveIn>b__16_2()
	{
	}
}
[Token(Token = "0x200022A")]
public class GameOverPanel : MonoBehaviour
{
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762094", Offset = "0x762094")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameOverPanel <>4__this;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameMode currentMode;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStoryFinale;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float mainDelay;

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x97CCCC", Offset = "0x97CCCC", VA = "0x97CCCC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x97CCF4", Offset = "0x97CCF4", VA = "0x97CCF4")]
		internal void <gameOverSequence>b__0()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x97CF6C", Offset = "0x97CF6C", VA = "0x97CF6C")]
		internal void <gameOverSequence>b__1()
		{
		}
	}

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767AB4", Offset = "0x767AB4")]
	public float waitOnWin;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waitOnLoss;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayUntilVictoryMessage;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float messageDurationPercent;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767AEC", Offset = "0x767AEC")]
	public GameObject gameOverEffect;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delayUntilMainMenu;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delayUntilMainMenuLoss;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isWin;

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x97C860", Offset = "0x97C860", VA = "0x97C860")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x97C8E8", Offset = "0x97C8E8", VA = "0x97C8E8")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x97C9DC", Offset = "0x97C9DC", VA = "0x97C9DC")]
	private void panelDidMoveIn()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x97C9E0", Offset = "0x97C9E0", VA = "0x97C9E0")]
	private void gameOverSequence()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x97CCD4", Offset = "0x97CCD4", VA = "0x97CCD4")]
	public GameOverPanel()
	{
	}
}
[Token(Token = "0x200022B")]
public class GameplayPanel : MonoBehaviour
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767B24", Offset = "0x767B24")]
	public Transform contentScaleParent;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767B5C", Offset = "0x767B5C")]
	public float arcadeModeScaleFactor;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767B94", Offset = "0x767B94")]
	public CanvasGroup theCanvasGroup;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeDuration;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float waitAfterGameOver;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767BCC", Offset = "0x767BCC")]
	public GameObject scoreParent;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text scoreCounterLabel;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform scoreCointPopObject;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color comboColorTop;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color comboColorBottom;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767C04", Offset = "0x767C04")]
	public RawImage scoreBacking;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material baseMaterial;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material comboMaterial;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767C3C", Offset = "0x767C3C")]
	public GameObject timerParent;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text timerLabel;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color normalColorTop;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color normalColorBottom;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color lowColorTop;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lowColorBottom;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767C74", Offset = "0x767C74")]
	public HealthBar healthBar;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HealthBar healthBarTwo;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float currentShowingScore;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float currentVelocity;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string scoreTemplate;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float timerDuration;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private VertexGradient lowColor;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private VertexGradient normalColor;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private VertexGradient comboColor;

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x981598", Offset = "0x981598", VA = "0x981598")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x981DFC", Offset = "0x981DFC", VA = "0x981DFC")]
	private void updateGameplayTimer()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x981F80", Offset = "0x981F80", VA = "0x981F80")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x982010", Offset = "0x982010", VA = "0x982010")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x9821C0", Offset = "0x9821C0", VA = "0x9821C0")]
	private void updateScoreCount()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x982290", Offset = "0x982290", VA = "0x982290")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x982714", Offset = "0x982714", VA = "0x982714")]
	private void updateBossHealth(object note)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x981CB4", Offset = "0x981CB4", VA = "0x981CB4")]
	private void disableBossHealth()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x9827D0", Offset = "0x9827D0", VA = "0x9827D0")]
	private void updateBossHealthTwo(object note)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x981D58", Offset = "0x981D58", VA = "0x981D58")]
	private void disableBossHealthTwo()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x982724", Offset = "0x982724", VA = "0x982724")]
	private void updateHealthBar(HealthBar target, object note)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x9827E0", Offset = "0x9827E0", VA = "0x9827E0")]
	private void popTimerParent()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x9828CC", Offset = "0x9828CC", VA = "0x9828CC")]
	public GameplayPanel()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x9828E4", Offset = "0x9828E4", VA = "0x9828E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDF4", Offset = "0x76BDF4")]
	private void <panelDidMoveIn>b__30_0(float alpha)
	{
	}
}
[Token(Token = "0x200022C")]
public class LeaderboardDisplay : MonoBehaviour
{
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620A4", Offset = "0x7620A4")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int scoreThisLevel;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardDisplay <>4__this;

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x9030C0", Offset = "0x9030C0", VA = "0x9030C0")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x903168", Offset = "0x903168", VA = "0x903168")]
		internal void <updateDataDisplay>b__1()
		{
		}
	}

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767CAC", Offset = "0x767CAC")]
	public int entriesToDisplayCount;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool alwaysDisplayScores;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767CE4", Offset = "0x767CE4")]
	public LoadingOverlay loadingOverlay;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardEntryDisplay entryTemplate;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject entryParent;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup entriesCanvasGroup;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fadeDownAmount;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TypedObjectPool<LeaderboardEntryDisplay> entryPool;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767D1C", Offset = "0x767D1C")]
	public GameObject noScoreMessageParent;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text noScoreLabel;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string noScoreMessageKey;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767D54", Offset = "0x767D54")]
	public Transform currentScoreObject;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform highScoreObject;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator scorePopAnimator;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float currentScoreDelay;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float highScoreDelay;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767D8C", Offset = "0x767D8C")]
	public GameObject toggleButtonParent;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIButtonToggle worldToggle;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UIButtonToggle friendsToggle;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string leaderboardLoaded;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int rankToCheck;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private long scoreToCheck;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool checkForAnimation;

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x901DA4", Offset = "0x901DA4", VA = "0x901DA4")]
	public void loadLeaderboard(string leaderboardId, int previousUserRank = -1, long previousHighScore = 0L)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x9023A4", Offset = "0x9023A4", VA = "0x9023A4")]
	public void unloadLeaderboard()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x902444", Offset = "0x902444", VA = "0x902444")]
	public void worldFilterButtonPressed()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x902514", Offset = "0x902514", VA = "0x902514")]
	public void friendsFilterButtonPressed()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x9020E4", Offset = "0x9020E4", VA = "0x9020E4")]
	private void updateFilterToggles()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x9025EC", Offset = "0x9025EC", VA = "0x9025EC")]
	private void updateDataDisplay(object note)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x902DDC", Offset = "0x902DDC", VA = "0x902DDC")]
	private void animationComplete()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x902218", Offset = "0x902218", VA = "0x902218")]
	private void showNoScoreMessage()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x902E04", Offset = "0x902E04", VA = "0x902E04")]
	private void showMessage(string message)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x902328", Offset = "0x902328", VA = "0x902328")]
	private void updateLoadingOverlay(bool isActive)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x902E9C", Offset = "0x902E9C", VA = "0x902E9C")]
	public LeaderboardDisplay()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x902ECC", Offset = "0x902ECC", VA = "0x902ECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE04", Offset = "0x76BE04")]
	private void <updateDataDisplay>b__28_0()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x9030C8", Offset = "0x9030C8", VA = "0x9030C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE14", Offset = "0x76BE14")]
	private void <showNoScoreMessage>b__30_0()
	{
	}
}
[Token(Token = "0x200022D")]
public class LeaderboardEntryDisplay : MonoBehaviour
{
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620B4", Offset = "0x7620B4")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardEntryDisplay <>4__this;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isAnimatingRank;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rankToCheck;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardScore score;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAnimatingScore;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long scoreToCheck;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action animationComplete;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<float> <>9__1;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<float> <>9__3;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__4;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__2;

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x90364C", Offset = "0x90364C", VA = "0x90364C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x903700", Offset = "0x903700", VA = "0x903700")]
		internal void <updateForEntryWithAnimation>b__0()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x90383C", Offset = "0x90383C", VA = "0x90383C")]
		internal void <updateForEntryWithAnimation>b__1(float alpha)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x903B60", Offset = "0x903B60", VA = "0x903B60")]
		internal void <updateForEntryWithAnimation>b__2()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x903C64", Offset = "0x903C64", VA = "0x903C64")]
		internal void <updateForEntryWithAnimation>b__3(float alpha)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x903D54", Offset = "0x903D54", VA = "0x903D54")]
		internal void <updateForEntryWithAnimation>b__4()
		{
		}
	}

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767DC4", Offset = "0x767DC4")]
	public CanvasGroup theCanvasGroup;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767DFC", Offset = "0x767DFC")]
	public Image background;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color userBgColor;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color otherBgColor;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767E34", Offset = "0x767E34")]
	public TMP_Text rankLabel;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text nameLabel;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767E6C", Offset = "0x767E6C")]
	public Color baseColor;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color animatingColor;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767EA4", Offset = "0x767EA4")]
	public AnimationCurve animateScaleCurve;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem animationVFX;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LeaderboardScore trackedScore;

	[Token(Token = "0x4000E94")]
	private const float PauseBeforeStart = 0.5f;

	[Token(Token = "0x4000E95")]
	private const float SharedAnimTime = 0.9f;

	[Token(Token = "0x4000E96")]
	private const float PauseAtEnd = 0.1f;

	[Token(Token = "0x4000E97")]
	private const float ScaleChange = 1.2f;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine pauseRoutine;

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x902DD8", Offset = "0x902DD8", VA = "0x902DD8")]
	public void updateForEntry(LeaderboardScore score)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x902ACC", Offset = "0x902ACC", VA = "0x902ACC")]
	public bool updateForEntryWithAnimation(LeaderboardScore score, int rankToCheck, long scoreToCheck, Action animationComplete)
	{
		return default(bool);
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x903458", Offset = "0x903458", VA = "0x903458")]
	private void updateEntryShared(LeaderboardScore score)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x90325C", Offset = "0x90325C", VA = "0x90325C")]
	public void checkForScorePopups(int scoreThisLevel, Transform highScoreObject, Transform currentScoreObject, Animator scorePopAnimator)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x903654", Offset = "0x903654", VA = "0x903654")]
	private void setLabelColor(Color theColor)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x9036F8", Offset = "0x9036F8", VA = "0x9036F8")]
	public LeaderboardEntryDisplay()
	{
	}
}
[Token(Token = "0x200022E")]
public class LoadingOverlay : MonoBehaviour
{
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620C4", Offset = "0x7620C4")]
	private sealed class <loadingLoop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingOverlay <>4__this;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x989158", Offset = "0x989158", VA = "0x989158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x9891C0", Offset = "0x9891C0", VA = "0x9891C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x988F24", Offset = "0x988F24", VA = "0x988F24")]
		[DebuggerHidden]
		public <loadingLoop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x988F58", Offset = "0x988F58", VA = "0x988F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x988F5C", Offset = "0x988F5C", VA = "0x988F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x989160", Offset = "0x989160", VA = "0x989160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text displayLabel;

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x988E74", Offset = "0x988E74", VA = "0x988E74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x988F1C", Offset = "0x988F1C", VA = "0x988F1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x988EA0", Offset = "0x988EA0", VA = "0x988EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BE24", Offset = "0x76BE24")]
	private IEnumerator loadingLoop()
	{
		return null;
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x988F50", Offset = "0x988F50", VA = "0x988F50")]
	public LoadingOverlay()
	{
	}
}
[Token(Token = "0x200022F")]
public class ObjectiveUIDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text objectiveCount;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform icon;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectiveComplete;

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xA1306C", Offset = "0xA1306C", VA = "0xA1306C")]
	public void loadObjective()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xA13218", Offset = "0xA13218", VA = "0xA13218")]
	public ObjectiveUIDisplay()
	{
	}
}
[Token(Token = "0x2000230")]
public sealed class PausePanel : MonoBehaviour
{
	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject backToMainButton;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button panelBackgroundButton;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button controlButton;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text controlLabel;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasBeenPaused;

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xA1FD00", Offset = "0xA1FD00", VA = "0xA1FD00")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xA1FDF8", Offset = "0xA1FDF8", VA = "0xA1FDF8")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xA1FD64", Offset = "0xA1FD64", VA = "0xA1FD64")]
	private void pause(bool isPaused)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xA1FE18", Offset = "0xA1FE18", VA = "0xA1FE18")]
	public void resumeButtonWasPressed()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xA1FEA0", Offset = "0xA1FEA0", VA = "0xA1FEA0")]
	public void mainMenuButtonWasPressed()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xA1FEA4", Offset = "0xA1FEA4", VA = "0xA1FEA4")]
	public PausePanel()
	{
	}
}
[Token(Token = "0x2000231")]
public sealed class PleaseWaitPanel : MonoBehaviour
{
	[Token(Token = "0x6001220")]
	[Address(RVA = "0x1622598", Offset = "0x1622598", VA = "0x1622598")]
	public static void show()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x16225F0", Offset = "0x16225F0", VA = "0x16225F0")]
	public static void hide()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x162263C", Offset = "0x162263C", VA = "0x162263C")]
	public PleaseWaitPanel()
	{
	}
}
[Token(Token = "0x2000232")]
public class PostTutorialPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620D4", Offset = "0x7620D4")]
	private sealed class <>c
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__10_1;

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1625754", Offset = "0x1625754", VA = "0x1625754")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x162575C", Offset = "0x162575C", VA = "0x162575C")]
		internal void <startButtonWasPressed>b__10_0()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x16257D4", Offset = "0x16257D4", VA = "0x16257D4")]
		internal void <startButtonWasPressed>b__10_1()
		{
		}
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionDisplay missionDisplay;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameDifficultyDisplay difficultyDisplay;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767EDC", Offset = "0x767EDC")]
	public GameObject popupParent;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text difficultyDescriptionLabel;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float popupShowTime;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767F14", Offset = "0x767F14")]
	public float terrainFadeDelay;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pregameProcessDelay;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeToHideDifficultyPopup;

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x1625194", Offset = "0x1625194", VA = "0x1625194")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x162529C", Offset = "0x162529C", VA = "0x162529C")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1625320", Offset = "0x1625320", VA = "0x1625320")]
	public void startButtonWasPressed()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x162558C", Offset = "0x162558C", VA = "0x162558C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x16255F0", Offset = "0x16255F0", VA = "0x16255F0")]
	public void easyDifficultyHovered()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x16256BC", Offset = "0x16256BC", VA = "0x16256BC")]
	public void mediumDifficultyHovered()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x16256C4", Offset = "0x16256C4", VA = "0x16256C4")]
	public void hardDifficultyHovered()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x16255F8", Offset = "0x16255F8", VA = "0x16255F8")]
	private void showDifficultyDescription(GameDifficulty difficulty)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x16256CC", Offset = "0x16256CC", VA = "0x16256CC")]
	public PostTutorialPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000233")]
public struct StringSpritePairing
{
	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string pairId;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite pairSprite;
}
[Token(Token = "0x2000234")]
public class PowerupStatsDisplay : MonoBehaviour
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767F4C", Offset = "0x767F4C")]
	public List<StringSpritePairing> iconsForPowerups;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite defaultSpriteIcon;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PowerupStatDisplay statDisplayTemplate;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TypedObjectPool<PowerupStatDisplay> powerupStatDisplayPool;

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xB7C2D8", Offset = "0xB7C2D8", VA = "0xB7C2D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xB7C378", Offset = "0xB7C378", VA = "0xB7C378")]
	public void hideElements()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xB7C430", Offset = "0xB7C430", VA = "0xB7C430")]
	public void updateDisplay(Dictionary<string, int> powerupWeightings)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xB7C6BC", Offset = "0xB7C6BC", VA = "0xB7C6BC")]
	private Sprite iconForPowerupId(string powerupId)
	{
		return null;
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xB7C800", Offset = "0xB7C800", VA = "0xB7C800")]
	public PowerupStatsDisplay()
	{
	}
}
[Token(Token = "0x2000235")]
public class PreGamePanel : MonoBehaviour
{
	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tutorialPopUp;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator MoveInAnimator;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PanelMover mover;

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xB7CA90", Offset = "0xB7CA90", VA = "0xB7CA90")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xB7CC24", Offset = "0xB7CC24", VA = "0xB7CC24")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xB7CCFC", Offset = "0xB7CCFC", VA = "0xB7CCFC")]
	public void startGameplayButtonWasPressed()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xB7CDFC", Offset = "0xB7CDFC", VA = "0xB7CDFC")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xB7D004", Offset = "0xB7D004", VA = "0xB7D004")]
	public PreGamePanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000236")]
public class LanguageToggles
{
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620E4", Offset = "0x7620E4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageToggles <>4__this;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action panelUpdateAction;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x901538", Offset = "0x901538", VA = "0x901538")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x9015CC", Offset = "0x9015CC", VA = "0x9015CC")]
		internal void <updateState>b__0()
		{
		}
	}

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SystemLanguage language;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButtonToggle toggleButton;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasSetupCallback;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x9012A4", Offset = "0x9012A4", VA = "0x9012A4")]
	public void updateState(Action panelUpdateAction)
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x901540", Offset = "0x901540", VA = "0x901540")]
	private void buttonWasPressed()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x9015C4", Offset = "0x9015C4", VA = "0x9015C4")]
	public LanguageToggles()
	{
	}
}
[Token(Token = "0x2000237")]
public class SettingsPanel : MonoBehaviour
{
	[Token(Token = "0x4000EB6")]
	private const string AutofireSettingsKey = "settings_IsAutofireOnAimEnabled";

	[Token(Token = "0x4000EB7")]
	private const string AimingLaserSettingsKey = "settings_IsAimingLaserEnabled";

	[Token(Token = "0x4000EB8")]
	private const string DefaultHandSettingsKey = "settings_DefaultHand";

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767F84", Offset = "0x767F84")]
	public TMP_Text musicVolumeLevel;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider musicSlider;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text soundFXVolumeLevel;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider soundFXSlider;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767FBC", Offset = "0x767FBC")]
	public UIButtonToggle autofireToggle;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text autofireButtonLabel;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIButtonToggle aimingLaserToggle;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text aimingLaserButtonLabel;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIButtonToggle defaultHandToggle;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text defaultHandButtonLabel;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x767FF4", Offset = "0x767FF4")]
	public TMP_Text versionLabel;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76802C", Offset = "0x76802C")]
	public UIButtonToggle highQualityToggle;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_Text highQualityButtonLabel;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768064", Offset = "0x768064")]
	public UIButtonToggle antiAliasingToggle;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text antiAliasingButtonLabel;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76809C", Offset = "0x76809C")]
	public UIButtonToggle postProcessingToggle;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text postProcessingButtonLabel;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UIButtonToggle bloomToggle;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text bloomButtonLabel;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIButtonToggle colorGradingToggle;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text colorGradingButtonLabel;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UIButtonToggle vignetteToggle;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TMP_Text vignetteButtonLabel;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7680D4", Offset = "0x7680D4")]
	public UIButtonToggle generalTabToggle;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UIButtonToggle graphicsTabToggle;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UIButtonToggle languageTabToggle;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76810C", Offset = "0x76810C")]
	public GameObject generalTab;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject graphicsTab;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject languageTab;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768144", Offset = "0x768144")]
	public List<LanguageToggles> languageToggles;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SoundController soundController;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string onLabel;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string offLabel;

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x9B4130", Offset = "0x9B4130", VA = "0x9B4130")]
	public void activate()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x9B4524", Offset = "0x9B4524", VA = "0x9B4524")]
	public void deactivate()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x9B442C", Offset = "0x9B442C", VA = "0x9B442C")]
	public void showGeneralTab()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x9B49FC", Offset = "0x9B49FC", VA = "0x9B49FC")]
	public void showGraphicsTab()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x9B4C6C", Offset = "0x9B4C6C", VA = "0x9B4C6C")]
	public void showLanguageTab()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x9B454C", Offset = "0x9B454C", VA = "0x9B454C")]
	private void showTab(GameObject tabToShow)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x9B4D68", Offset = "0x9B4D68", VA = "0x9B4D68")]
	private void musicSliderUpdated(float value)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x9B4DB0", Offset = "0x9B4DB0", VA = "0x9B4DB0")]
	private void soundFXSliderUpdated(float value)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x9B4DF8", Offset = "0x9B4DF8", VA = "0x9B4DF8")]
	public void toggleHighQualityGraphicsButtonPressed()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x9B4E7C", Offset = "0x9B4E7C", VA = "0x9B4E7C")]
	public void cycleAntiAliasingButtonPressed()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x9B5040", Offset = "0x9B5040", VA = "0x9B5040")]
	public void togglePostProcessingButtonPressed()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x9B521C", Offset = "0x9B521C", VA = "0x9B521C")]
	public void toggleBloomButtonPressed()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x9B52A0", Offset = "0x9B52A0", VA = "0x9B52A0")]
	public void toggleColorGradingButtonPressed()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x9B5324", Offset = "0x9B5324", VA = "0x9B5324")]
	public void toggleVignetteButtonPressed()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x9B53A8", Offset = "0x9B53A8", VA = "0x9B53A8")]
	public void toggleAutofireButtonPressed()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x9B54AC", Offset = "0x9B54AC", VA = "0x9B54AC")]
	public void toggleAimingLaserButtonPressed()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x9B55B0", Offset = "0x9B55B0", VA = "0x9B55B0")]
	public void toggleDefaultHandButtonPressed()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x9B46BC", Offset = "0x9B46BC", VA = "0x9B46BC")]
	private void updateSoundDisplay()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x9B446C", Offset = "0x9B446C", VA = "0x9B446C")]
	private void updateVersionLabel()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x9B480C", Offset = "0x9B480C", VA = "0x9B480C")]
	private void updateAutofireToggle()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x9B488C", Offset = "0x9B488C", VA = "0x9B488C")]
	private void updateAimingLaserToggle()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x9B490C", Offset = "0x9B490C", VA = "0x9B490C")]
	private void updateDefaultHandToggle()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x9B4B84", Offset = "0x9B4B84", VA = "0x9B4B84")]
	private void updateAllGraphicsToggles()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x9B4F00", Offset = "0x9B4F00", VA = "0x9B4F00")]
	private void updateAntiAliasingToggle()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x9B50C4", Offset = "0x9B50C4", VA = "0x9B50C4")]
	private void updatePostProcessingToggles()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x9B5720", Offset = "0x9B5720", VA = "0x9B5720")]
	private void updateToggleButton(UIButtonToggle toggleButton, TMP_Text buttonLabel, bool isTargetEnabled, bool isInteractable)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x9B4C94", Offset = "0x9B4C94", VA = "0x9B4C94")]
	private void updateLanguageTab()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x9B4AE0", Offset = "0x9B4AE0", VA = "0x9B4AE0")]
	private void refreshOnOffLabels()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x9B543C", Offset = "0x9B543C", VA = "0x9B543C")]
	public static bool IsAutofireEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x9B5540", Offset = "0x9B5540", VA = "0x9B5540")]
	public static bool IsAimingLaserEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x9B5694", Offset = "0x9B5694", VA = "0x9B5694")]
	public static MightyVRControlSide DefaultPlayerHand()
	{
		return default(MightyVRControlSide);
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x9B57AC", Offset = "0x9B57AC", VA = "0x9B57AC")]
	public SettingsPanel()
	{
	}
}
[Token(Token = "0x2000238")]
public class SpaceFinalePanel : MonoBehaviour
{
	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isWin;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76817C", Offset = "0x76817C")]
	public GameObject centralDisplayParent;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logoParent;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelVFX;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7681B4", Offset = "0x7681B4")]
	public TMP_Text scoreLabel;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7681EC", Offset = "0x7681EC")]
	public TMP_Text messageLabel;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768224", Offset = "0x768224")]
	public GameObject continueButtonParent;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text continueButtonLabel;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject restartButtonParent;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mainMenuButtonParent;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject creditsButtonParent;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76825C", Offset = "0x76825C")]
	public GameObject unlockPilotsCallout;

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x15FFD04", Offset = "0x15FFD04", VA = "0x15FFD04")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x1600088", Offset = "0x1600088", VA = "0x1600088")]
	private void updateCheckpointRelatedItems()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1600260", Offset = "0x1600260", VA = "0x1600260")]
	private void updateScoreDisplay()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x16003C0", Offset = "0x16003C0", VA = "0x16003C0")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1600468", Offset = "0x1600468", VA = "0x1600468")]
	public void mainMenuButtonPressed()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x160056C", Offset = "0x160056C", VA = "0x160056C")]
	public void restartButtonWasPressed()
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x1600710", Offset = "0x1600710", VA = "0x1600710")]
	public void continueButtonPressed()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1600574", Offset = "0x1600574", VA = "0x1600574")]
	private void beginLevel(bool clearProgress)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1600718", Offset = "0x1600718", VA = "0x1600718")]
	public void creditsButtonPressed()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x16007EC", Offset = "0x16007EC", VA = "0x16007EC")]
	public void debugCheckpointButtonPressed(int checkpointIndex)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1600034", Offset = "0x1600034", VA = "0x1600034")]
	private void showMainDisplay()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x1600A00", Offset = "0x1600A00", VA = "0x1600A00")]
	public SpaceFinalePanel()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x1600A08", Offset = "0x1600A08", VA = "0x1600A08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE88", Offset = "0x76BE88")]
	private void <creditsButtonPressed>b__21_0()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x1600A28", Offset = "0x1600A28", VA = "0x1600A28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE98", Offset = "0x76BE98")]
	private void <creditsButtonPressed>b__21_1()
	{
	}
}
[Token(Token = "0x2000239")]
public enum CalloutType
{
	[Token(Token = "0x4000EE8")]
	bomb = 6,
	[Token(Token = "0x4000EE9")]
	shuffler = 10,
	[Token(Token = "0x4000EEA")]
	mallet = 13,
	[Token(Token = "0x4000EEB")]
	freeze = 14
}
[Token(Token = "0x200023A")]
public sealed class SupportRedeemPanel : MonoBehaviour
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentTutorial;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeWhenPanelMovedIn;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text content;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text itemName;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tuteIcons;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bombIcon;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TapToContinue tapToContinue;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delayUntilTappable;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool debounce;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action completion;

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x1602A2C", Offset = "0x1602A2C", VA = "0x1602A2C")]
	public static void showRedeemPanel(string contentKey, [Optional] Action completion)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1602B1C", Offset = "0x1602B1C", VA = "0x1602B1C")]
	public void setPanelContext(object context)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1602EC8", Offset = "0x1602EC8", VA = "0x1602EC8")]
	private void activateItem(string itemID)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1602FB0", Offset = "0x1602FB0", VA = "0x1602FB0")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1602FB8", Offset = "0x1602FB8", VA = "0x1602FB8")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1602FE0", Offset = "0x1602FE0", VA = "0x1602FE0")]
	public void panelDidTap()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1603088", Offset = "0x1603088", VA = "0x1603088")]
	private void buttonDidPress()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x16031A0", Offset = "0x16031A0", VA = "0x16031A0")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x16031B4", Offset = "0x16031B4", VA = "0x16031B4")]
	public SupportRedeemPanel()
	{
	}
}
[Token(Token = "0x200023B")]
public sealed class TapToContinue : MonoBehaviour
{
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tapToContinue;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject clickToContinue;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pressKeyToContinue;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pressButtonToContinue;

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x1602E34", Offset = "0x1602E34", VA = "0x1602E34")]
	public void setVisible(bool isActive)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x16036B0", Offset = "0x16036B0", VA = "0x16036B0")]
	public TapToContinue()
	{
	}
}
[Token(Token = "0x200023C")]
public sealed class TopBar : SingletonMono<TopBar>
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text coinCount;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text premiumCount;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text heartCount;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text heartTimer;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject holder;

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x16088D8", Offset = "0x16088D8", VA = "0x16088D8")]
	public static void show(bool visible)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1608960", Offset = "0x1608960", VA = "0x1608960")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x1608AA4", Offset = "0x1608AA4", VA = "0x1608AA4")]
	public void optionsButtonWasPressed()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1608AF4", Offset = "0x1608AF4", VA = "0x1608AF4")]
	public void updateCoins()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1608AF8", Offset = "0x1608AF8", VA = "0x1608AF8")]
	public TopBar()
	{
	}
}
[Token(Token = "0x200023D")]
public class TournamentCompletePanel : MonoBehaviour
{
	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768294", Offset = "0x768294")]
	public GameObject previousEventContentParent;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text oldEventNameLabel;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text oldEventDateLabel;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7682CC", Offset = "0x7682CC")]
	public GameObject nextEventParent;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text eventNameHeader;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text eventCountdownLabel;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image pilotIcon;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image worldImage;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string countdownTemplate;

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1608B68", Offset = "0x1608B68", VA = "0x1608B68")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x16092BC", Offset = "0x16092BC", VA = "0x16092BC")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x16092F0", Offset = "0x16092F0", VA = "0x16092F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x1608B8C", Offset = "0x1608B8C", VA = "0x1608B8C")]
	private void updatePreviousEventDisplay()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x1609068", Offset = "0x1609068", VA = "0x1609068")]
	private void updateUpcomingEventDisplay()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x160991C", Offset = "0x160991C", VA = "0x160991C")]
	public void hubButtonPressed()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x160996C", Offset = "0x160996C", VA = "0x160996C")]
	public TournamentCompletePanel()
	{
	}
}
[Token(Token = "0x200023E")]
public class TournamentModifierElement : MonoBehaviour, IRaycastable
{
	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768304", Offset = "0x768304")]
	public TMP_Text modifierLabel;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image modifierIcon;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76833C", Offset = "0x76833C")]
	public ButtonUnityEvent onHoverEvent;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768374", Offset = "0x768374")]
	private string <description>k__BackingField;

	[Token(Token = "0x170000AC")]
	public string description
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x160CDF4", Offset = "0x160CDF4", VA = "0x160CDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEA8", Offset = "0x76BEA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x160CDFC", Offset = "0x160CDFC", VA = "0x160CDFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEB8", Offset = "0x76BEB8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x160CE04", Offset = "0x160CE04", VA = "0x160CE04")]
	public void updateDisplay(Sprite modifierSprite, string label, string description)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x160CE9C", Offset = "0x160CE9C", VA = "0x160CE9C", Slot = "4")]
	public bool canBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x160CEA4", Offset = "0x160CEA4", VA = "0x160CEA4", Slot = "5")]
	public void raycastHit(Vector3 hitpoint)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x160CEF4", Offset = "0x160CEF4", VA = "0x160CEF4")]
	public TournamentModifierElement()
	{
	}
}
[Token(Token = "0x200023F")]
public class TournamentOnboardPanel : MonoBehaviour
{
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7620F4", Offset = "0x7620F4")]
	private sealed class <showElementsAnimation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentOnboardPanel <>4__this;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x160D49C", Offset = "0x160D49C", VA = "0x160D49C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x160D504", Offset = "0x160D504", VA = "0x160D504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x160D1B0", Offset = "0x160D1B0", VA = "0x160D1B0")]
		[DebuggerHidden]
		public <showElementsAnimation>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x160D2E8", Offset = "0x160D2E8", VA = "0x160D2E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x160D2EC", Offset = "0x160D2EC", VA = "0x160D2EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x160D4A4", Offset = "0x160D4A4", VA = "0x160D4A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768384", Offset = "0x768384")]
	public TMP_Text headerLabel;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7683BC", Offset = "0x7683BC")]
	public GameObject headerText;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject messageText;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject continueButton;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7683F4", Offset = "0x7683F4")]
	public float waitBeforeStart;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float waitBeforeMessage;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float waitBeforeButton;

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x160CEFC", Offset = "0x160CEFC", VA = "0x160CEFC")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x160D108", Offset = "0x160D108", VA = "0x160D108")]
	public void panelDidMoveIn()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x160D134", Offset = "0x160D134", VA = "0x160D134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BEC8", Offset = "0x76BEC8")]
	private IEnumerator showElementsAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x160D068", Offset = "0x160D068", VA = "0x160D068")]
	private void resetElement(GameObject target)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x160D1DC", Offset = "0x160D1DC", VA = "0x160D1DC")]
	private void showElement(GameObject target)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x160D280", Offset = "0x160D280", VA = "0x160D280")]
	public void continueButtonWasPressed()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x160D2D0", Offset = "0x160D2D0", VA = "0x160D2D0")]
	public TournamentOnboardPanel()
	{
	}
}
[Token(Token = "0x2000240")]
public class TournamentPanel : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762104", Offset = "0x762104")]
	private sealed class <runEnemyIconCycle>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentPanel <>4__this;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Sprite> enemyIcons;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <index>5__3;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xA8C228", Offset = "0xA8C228", VA = "0xA8C228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xA8C290", Offset = "0xA8C290", VA = "0xA8C290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xA8C0C8", Offset = "0xA8C0C8", VA = "0xA8C0C8")]
		[DebuggerHidden]
		public <runEnemyIconCycle>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xA8C0F4", Offset = "0xA8C0F4", VA = "0xA8C0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xA8C0F8", Offset = "0xA8C0F8", VA = "0xA8C0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xA8C230", Offset = "0xA8C230", VA = "0xA8C230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76842C", Offset = "0x76842C")]
	public GameObject eventIsActiveParent;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arcadeModeLockedParent;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768464", Offset = "0x768464")]
	public TMP_Text tournamentNameLabel;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76849C", Offset = "0x76849C")]
	public LeaderboardDisplay leaderboardDisplay;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7684D4", Offset = "0x7684D4")]
	public TMP_Text eventCountdownLabel;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string countdownTemplate;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76850C", Offset = "0x76850C")]
	public TournamentModifierElement modifierElementTemplate;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite multiplierIcon;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite bulletSpeedIcon;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite noGunsIcon;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite noMissilesIcon;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite noPowerupsIcon;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TypedObjectPool<TournamentModifierElement> tournamentModifiers;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject modifierDescription;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text descriptionLabel;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float descriptionShowTime;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768544", Offset = "0x768544")]
	public PowerupStatsDisplay powerupStats;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject powerupsDisabledLabel;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x76857C", Offset = "0x76857C")]
	public TMP_Text durationLabel;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text difficultyLabel;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text pilotLabel;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text worldLabel;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7685B4", Offset = "0x7685B4")]
	public Image worldImage;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image pilotIcon;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7685EC", Offset = "0x7685EC")]
	public Image enemiesIcon;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float timeToShowEachIcon;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float timeToHideDescription;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TournamentModifierElement elementHighlighted;

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x160D50C", Offset = "0x160D50C", VA = "0x160D50C")]
	public void panelWillMoveIn()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x160D610", Offset = "0x160D610", VA = "0x160D610")]
	public void panelDidMoveOut()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x160C4C4", Offset = "0x160C4C4", VA = "0x160C4C4")]
	public void refreshPanel()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x160D67C", Offset = "0x160D67C", VA = "0x160D67C")]
	public void showEventIsActiveDisplay()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x160E0F8", Offset = "0x160E0F8", VA = "0x160E0F8")]
	private void showNoEventActiveDisplay()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x160E148", Offset = "0x160E148", VA = "0x160E148")]
	public void showModeLockedDisplay()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x160E18C", Offset = "0x160E18C", VA = "0x160E18C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x160DA28", Offset = "0x160DA28", VA = "0x160DA28")]
	private void updateEnemiesInWorld(LevelContainer container)
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x160E2E0", Offset = "0x160E2E0", VA = "0x160E2E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BF2C", Offset = "0x76BF2C")]
	private IEnumerator runEnemyIconCycle(List<Sprite> enemyIcons)
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x160DCA0", Offset = "0x160DCA0", VA = "0x160DCA0")]
	private void updateModifiers(LevelContainer container)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x160D6C0", Offset = "0x160D6C0", VA = "0x160D6C0")]
	private void updateTournamentInfo(LevelContainer container)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x160E454", Offset = "0x160E454", VA = "0x160E454")]
	public void playButtonPressed()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x160E568", Offset = "0x160E568", VA = "0x160E568")]
	public void hubButtonPressed()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x160E5B8", Offset = "0x160E5B8", VA = "0x160E5B8")]
	public void updateModifierDescription(TournamentModifierElement element)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x160E378", Offset = "0x160E378", VA = "0x160E378")]
	private TournamentModifierElement nextModifierElement()
	{
		return null;
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x160E750", Offset = "0x160E750", VA = "0x160E750")]
	public TournamentPanel()
	{
	}
}
[Token(Token = "0x2000241")]
public sealed class UpdateNeededPanel : MonoBehaviour
{
	[Token(Token = "0x600129B")]
	[Address(RVA = "0xAA34D4", Offset = "0xAA34D4", VA = "0xAA34D4")]
	public static bool needsToShowUpdatePanel()
	{
		return default(bool);
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xAA3644", Offset = "0xAA3644", VA = "0xAA3644")]
	public void getUpdateWasPressed()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xAA36BC", Offset = "0xAA36BC", VA = "0xAA36BC")]
	public UpdateNeededPanel()
	{
	}
}
[Token(Token = "0x2000242")]
public class ParticleAccelerator : MonoBehaviour
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ParticleAcceleration;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xA1DC9C", Offset = "0xA1DC9C", VA = "0xA1DC9C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xA1DEBC", Offset = "0xA1DEBC", VA = "0xA1DEBC")]
	public ParticleAccelerator()
	{
	}
}
[Token(Token = "0x2000243")]
public sealed class ParticleController : SingletonMono<ParticleController>
{
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762114", Offset = "0x762114")]
	private sealed class <preloadPool>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleController <>4__this;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <pooledObjects>5__2;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xA1F9A8", Offset = "0xA1F9A8", VA = "0xA1F9A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xA1FA10", Offset = "0xA1FA10", VA = "0xA1FA10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xA1E11C", Offset = "0xA1E11C", VA = "0xA1E11C")]
		[DebuggerHidden]
		public <preloadPool>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xA1F700", Offset = "0xA1F700", VA = "0xA1F700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xA1F704", Offset = "0xA1F704", VA = "0xA1F704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xA1F9B0", Offset = "0xA1F9B0", VA = "0xA1F9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762124", Offset = "0x762124")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIParticleCamera theCam;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xA1F3BC", Offset = "0xA1F3BC", VA = "0xA1F3BC")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xA1F684", Offset = "0xA1F684", VA = "0xA1F684")]
		internal void <playEventInUI>b__0()
		{
		}
	}

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "AssetProxyAttribute", RVA = "0x768624", Offset = "0x768624")]
	public AssetProxy particleLibraryPrefab;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleLibrary particleLibrary;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prepoolCount;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> particlesToCullOnLow;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> particlesToCullOnMedium;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform testSource;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderTexture particleTexture;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera particleCam;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, ParticleEvent> eventMap;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, PoolableParticleSystem> loopingParticles;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Queue<UIParticleCamera> uiParticlePool;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIParticleCamera uiParticleCamPrefab;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 uiParticleCamPosition;

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xA1DEC4", Offset = "0xA1DEC4", VA = "0xA1DEC4")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xA1E0A0", Offset = "0xA1E0A0", VA = "0xA1E0A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76BF90", Offset = "0x76BF90")]
	private IEnumerator preloadPool()
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xA1E148", Offset = "0xA1E148", VA = "0xA1E148")]
	public static void showParticles(RawImage image)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xA1E3B4", Offset = "0xA1E3B4", VA = "0xA1E3B4")]
	public void testParticleEvent(string eventKey)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xA1E490", Offset = "0xA1E490", VA = "0xA1E490")]
	public string playParticleEventAtSource(string eventKey, Transform source, float rotation = 0f, [Optional] Action systemCompletion)
	{
		return null;
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xA1E980", Offset = "0xA1E980", VA = "0xA1E980")]
	public string playParticleEventAsChildOfSource(string eventKey, Transform source, float rotation = 0f, [Optional] Action systemCompletion)
	{
		return null;
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xA1E628", Offset = "0xA1E628", VA = "0xA1E628")]
	private ParticleEvent setUpEvent(string eventKey)
	{
		return null;
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xA1ED1C", Offset = "0xA1ED1C", VA = "0xA1ED1C")]
	public void stopLoopingParticles(string poolID)
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xA1EC20", Offset = "0xA1EC20", VA = "0xA1EC20")]
	private ParticleEvent eventWithKey(string eventKey)
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xA1EDEC", Offset = "0xA1EDEC", VA = "0xA1EDEC")]
	private void fillMap()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xA1EF2C", Offset = "0xA1EF2C", VA = "0xA1EF2C")]
	public int getEventCount()
	{
		return default(int);
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xA1EFC4", Offset = "0xA1EFC4", VA = "0xA1EFC4")]
	public ParticleEvent getEventAtIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xA1F094", Offset = "0xA1F094", VA = "0xA1F094")]
	private UIParticleCamera nextUIParticleCamera()
	{
		return null;
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xA1F198", Offset = "0xA1F198", VA = "0xA1F198")]
	private void returnUICameraToPool(UIParticleCamera theCam)
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xA1F210", Offset = "0xA1F210", VA = "0xA1F210")]
	public static string playEventInUI(string particleKey, RawImage particleDestinationImage)
	{
		return null;
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xA1F3C4", Offset = "0xA1F3C4", VA = "0xA1F3C4")]
	public ParticleController()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xA1F538", Offset = "0xA1F538", VA = "0xA1F538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BFF4", Offset = "0x76BFF4")]
	private void <bootstrap>b__10_0(GameObject loadedAsset)
	{
	}
}
[Token(Token = "0x2000244")]
public sealed class ParticleControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xA1FA18", Offset = "0xA1FA18", VA = "0xA1FA18", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xA1FAA0", Offset = "0xA1FAA0", VA = "0xA1FAA0")]
	public ParticleControllerBooter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000245")]
public sealed class ParticleEvent
{
	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventID;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem system;

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xA1E878", Offset = "0xA1E878", VA = "0xA1E878")]
	public PoolableParticleSystem playEventAtSource(Transform source, bool looping, float rotation = 0f)
	{
		return null;
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xA1EB18", Offset = "0xA1EB18", VA = "0xA1EB18")]
	public PoolableParticleSystem playEventAsChildOfSource(Transform source, bool looping, float rotation = 0f)
	{
		return null;
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xA1FAA8", Offset = "0xA1FAA8", VA = "0xA1FAA8")]
	public ParticleEvent()
	{
	}
}
[Token(Token = "0x2000246")]
public sealed class ParticleLibrary : MonoBehaviour
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ParticleEvent> events;

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xA1FAB0", Offset = "0xA1FAB0", VA = "0xA1FAB0")]
	public ParticleLibrary()
	{
	}
}
[Token(Token = "0x2000247")]
public sealed class UIParticleCamera : MonoBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera theCamera;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture texture;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform centerSource;

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xA8FFEC", Offset = "0xA8FFEC", VA = "0xA8FFEC")]
	public void prepareForPool()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xA9000C", Offset = "0xA9000C", VA = "0xA9000C")]
	private void createRenderTexture()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xA900D0", Offset = "0xA900D0", VA = "0xA900D0")]
	public void prepareForParticles(RawImage theImage)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xA901A0", Offset = "0xA901A0", VA = "0xA901A0")]
	public UIParticleCamera()
	{
	}
}
[Token(Token = "0x2000248")]
public class HideWhenLoading : MonoBehaviour
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] targets;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isLoadingLastChange;

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x8FD8F0", Offset = "0x8FD8F0", VA = "0x8FD8F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x8FD974", Offset = "0x8FD974", VA = "0x8FD974")]
	private void Update()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x8FD8F8", Offset = "0x8FD8F8", VA = "0x8FD8F8")]
	private void setActiveState(bool isActive)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x8FDAD4", Offset = "0x8FDAD4", VA = "0x8FDAD4")]
	public HideWhenLoading()
	{
	}
}
[Token(Token = "0x2000249")]
public class PicoTrackingSpace : SingletonMono<PicoTrackingSpace>
{
	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xA20BEC", Offset = "0xA20BEC", VA = "0xA20BEC")]
	public static Transform TrackingSpaceTransform()
	{
		return null;
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xA20C64", Offset = "0xA20C64", VA = "0xA20C64")]
	public PicoTrackingSpace()
	{
	}
}
[Serializable]
[Token(Token = "0x200024A")]
public class PilotConfig
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DefaultPlayerHitscanBulletKey;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string PlayerComboBulletKey;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pilotNumber;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string internalId;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnabled;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string world;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pilotPrefabKey;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string shipPrefabKey;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string bulletPrefabKey;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string audioKey;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string locId;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, int> powerupWeightings;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameStateList stateList;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768688", Offset = "0x768688")]
	private bool <isUnlocked>k__BackingField;

	[Token(Token = "0x170000AD")]
	public bool isUnlocked
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xA21648", Offset = "0xA21648", VA = "0xA21648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C004", Offset = "0x76C004")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xA21650", Offset = "0xA21650", VA = "0xA21650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C014", Offset = "0x76C014")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public string pilotKey
	{
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xA2165C", Offset = "0xA2165C", VA = "0xA2165C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public string shipKey
	{
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xA216B0", Offset = "0xA216B0", VA = "0xA216B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public string flavourSoundKey
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xA21704", Offset = "0xA21704", VA = "0xA21704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public string appearSoundKey
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xA21758", Offset = "0xA21758", VA = "0xA21758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public string deathSoundKey
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xA217AC", Offset = "0xA217AC", VA = "0xA217AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public string localisedName
	{
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xA2204C", Offset = "0xA2204C", VA = "0xA2204C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xA21800", Offset = "0xA21800", VA = "0xA21800")]
	public PilotConfig(Command theCommand)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xA21C24", Offset = "0xA21C24", VA = "0xA21C24")]
	public void loadState()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xA21CF8", Offset = "0xA21CF8", VA = "0xA21CF8")]
	public void saveState()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xA21D98", Offset = "0xA21D98", VA = "0xA21D98")]
	public void unlock()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xA21E34", Offset = "0xA21E34", VA = "0xA21E34")]
	public void lockPilot()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xA21F10", Offset = "0xA21F10", VA = "0xA21F10")]
	public bool isInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xA220B8", Offset = "0xA220B8", VA = "0xA220B8")]
	public Dictionary<string, int> getPowerupWeightings()
	{
		return null;
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xA222DC", Offset = "0xA222DC", VA = "0xA222DC")]
	public string getBulletKey()
	{
		return null;
	}
}
[Token(Token = "0x200024B")]
public class PilotController : SingletonMono<PilotController>
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768698", Offset = "0x768698")]
	public bool preloadPilotsOnBoot;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7686D0", Offset = "0x7686D0")]
	public Color pilotOutlineColor;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pilotOutlineSize;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> pilotSprites;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MappedList<PilotConfig> pilotConfigs;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768708", Offset = "0x768708")]
	private string <currentPilotId>k__BackingField;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768718", Offset = "0x768718")]
	private bool <isBooted>k__BackingField;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> pilotIds;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameStateList stateList;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, Sprite> pilotIdSpriteMappingHigh;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, Sprite> pilotIdSpriteMappingLow;

	[Token(Token = "0x170000B4")]
	public string currentPilotId
	{
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xA2235C", Offset = "0xA2235C", VA = "0xA2235C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C024", Offset = "0x76C024")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xA22364", Offset = "0xA22364", VA = "0xA22364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C034", Offset = "0x76C034")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public bool isBooted
	{
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xA2236C", Offset = "0xA2236C", VA = "0xA2236C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C044", Offset = "0x76C044")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xA22374", Offset = "0xA22374", VA = "0xA22374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C054", Offset = "0x76C054")]
		private set
		{
		}
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xA22380", Offset = "0xA22380", VA = "0xA22380")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xA22480", Offset = "0xA22480", VA = "0xA22480")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xA22820", Offset = "0xA22820", VA = "0xA22820")]
	public void preloadPilots(bool unlockedOnly)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xA22E04", Offset = "0xA22E04", VA = "0xA22E04")]
	private void definePilotConfig(Command theCommand)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xA22CC8", Offset = "0xA22CC8", VA = "0xA22CC8")]
	public void loadState()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xA22F00", Offset = "0xA22F00", VA = "0xA22F00")]
	public void saveState()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xA21FDC", Offset = "0xA21FDC", VA = "0xA21FDC")]
	public static string defaultPilotId()
	{
		return null;
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xA23004", Offset = "0xA23004", VA = "0xA23004")]
	public PilotConfig currentPilotConfig()
	{
		return null;
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xA23168", Offset = "0xA23168", VA = "0xA23168")]
	public PilotConfig pilotConfigWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xA2320C", Offset = "0xA2320C", VA = "0xA2320C")]
	public Sprite getSpriteForPilot(string pilotId, bool isHighQuality)
	{
		return null;
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xA230C4", Offset = "0xA230C4", VA = "0xA230C4")]
	public bool isValidPilotId(string pilotId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xA232D4", Offset = "0xA232D4", VA = "0xA232D4")]
	public List<string> allPilotIdsInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xA2349C", Offset = "0xA2349C", VA = "0xA2349C")]
	public bool areAllPilotsUnlockedInWorld(string worldId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xA23628", Offset = "0xA23628", VA = "0xA23628")]
	public float percentOfPilotsUnlockedInWorld(string worldId)
	{
		return default(float);
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xA23770", Offset = "0xA23770", VA = "0xA23770")]
	public string getFirstLockedPilotIdInWorld(string worldId)
	{
		return null;
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xA22B20", Offset = "0xA22B20", VA = "0xA22B20")]
	public List<string> allPilotIds()
	{
		return null;
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xA2389C", Offset = "0xA2389C", VA = "0xA2389C")]
	public List<string> allUnlockedPilotIds()
	{
		return null;
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xA23ACC", Offset = "0xA23ACC", VA = "0xA23ACC")]
	public int unlockedPilotCount()
	{
		return default(int);
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xA23B20", Offset = "0xA23B20", VA = "0xA23B20")]
	public string getPilotKeyWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xA23C48", Offset = "0xA23C48", VA = "0xA23C48")]
	public string getPilotName(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xA23D84", Offset = "0xA23D84", VA = "0xA23D84")]
	public string getPilotIconCode(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xA239B0", Offset = "0xA239B0", VA = "0xA239B0")]
	public bool isPilotUnlocked(string pilotId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xA23D90", Offset = "0xA23D90", VA = "0xA23D90")]
	public void unlockPilot(string pilotId)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xA23EF0", Offset = "0xA23EF0", VA = "0xA23EF0")]
	public void lockPilot(string pilotId)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xA24010", Offset = "0xA24010", VA = "0xA24010")]
	public void selectPilotForTournament(string pilotId)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xA24018", Offset = "0xA24018", VA = "0xA24018")]
	public void selectPilot(string pilotId)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xA241E4", Offset = "0xA241E4", VA = "0xA241E4")]
	public string getShipKeyWithId(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xA2430C", Offset = "0xA2430C", VA = "0xA2430C")]
	public string getBulletKeyForPilot(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xA24434", Offset = "0xA24434", VA = "0xA24434")]
	public string getFlavourSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xA24568", Offset = "0xA24568", VA = "0xA24568")]
	public string getAppearSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xA2469C", Offset = "0xA2469C", VA = "0xA2469C")]
	public string getDeathSoundKey(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xA247D0", Offset = "0xA247D0", VA = "0xA247D0")]
	public PilotController()
	{
	}
}
[Token(Token = "0x200024C")]
public sealed class PilotControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PilotController pilotController;

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x160F76C", Offset = "0x160F76C", VA = "0x160F76C", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x160F854", Offset = "0x160F854", VA = "0x160F854", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x160F890", Offset = "0x160F890", VA = "0x160F890")]
	public PilotControllerBooter()
	{
	}
}
[Token(Token = "0x200024D")]
public class PilotInformationDisplay : MonoBehaviour
{
	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768728", Offset = "0x768728")]
	public TMP_Text pilotNameLabel;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playMissionCallout;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768760", Offset = "0x768760")]
	public PowerupStatsDisplay powerupStats;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768798", Offset = "0x768798")]
	public PlayerGeo pilotVisual;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pilotVisualScaleFactor;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform scalarTransform;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material lockedMaterial;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string trackedPilotId;

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x160F898", Offset = "0x160F898", VA = "0x160F898")]
	public void activate()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x160F8C0", Offset = "0x160F8C0", VA = "0x160F8C0")]
	public void deactivate()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x160F8E8", Offset = "0x160F8E8", VA = "0x160F8E8")]
	public bool isDeactivated()
	{
		return default(bool);
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x160F918", Offset = "0x160F918", VA = "0x160F918")]
	public void updateDisplay(object note)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x160FB40", Offset = "0x160FB40", VA = "0x160FB40")]
	public void refreshTextLabels()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x160FDFC", Offset = "0x160FDFC", VA = "0x160FDFC")]
	public PilotInformationDisplay()
	{
	}
}
[Token(Token = "0x200024E")]
public class PilotShelf : SingletonMono<PilotShelf>
{
	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7687D0", Offset = "0x7687D0")]
	public PilotShelfElement shelfPilotTemplate;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text unlockCountLabel;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768808", Offset = "0x768808")]
	public int pilotsPerPageAll;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image pageIndicatorTemplate;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color pageColor;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color pageSelectedColor;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TypedObjectPool<PilotShelfElement> shelfPilotPool;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TypedObjectPool<Image> pageIndicatorPool;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int pageIndex;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int pageTotalForWorld;

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x16105FC", Offset = "0x16105FC", VA = "0x16105FC")]
	private void panelWillMoveIn()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1610C18", Offset = "0x1610C18", VA = "0x1610C18")]
	private void panelWillMoveOut()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1610D20", Offset = "0x1610D20", VA = "0x1610D20")]
	public void nextPageButtonWasPressed()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1610D3C", Offset = "0x1610D3C", VA = "0x1610D3C")]
	public void previousPageButtonWasPressed()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x16107B8", Offset = "0x16107B8", VA = "0x16107B8")]
	private void updateShowingPilots(bool resetPageIndexes)
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x16110B0", Offset = "0x16110B0", VA = "0x16110B0")]
	private void updateUnlockCountLabel()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1610E18", Offset = "0x1610E18", VA = "0x1610E18")]
	public void pilotHasUIFocus(string pilotId, bool updateMaterials = true)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x16114B0", Offset = "0x16114B0", VA = "0x16114B0")]
	private void updatePilotMaterials()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x1611580", Offset = "0x1611580", VA = "0x1611580")]
	public PilotShelf()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x16115F8", Offset = "0x16115F8", VA = "0x16115F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C064", Offset = "0x76C064")]
	private void <panelWillMoveIn>b__10_0()
	{
	}
}
[Token(Token = "0x200024F")]
public class PilotShelfElement : MonoBehaviour
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768840", Offset = "0x768840")]
	public Material defaultMaterial;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lockedMaterial;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768878", Offset = "0x768878")]
	public Image backing;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image playerIcon;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite selected;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite notSelected;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7688B0", Offset = "0x7688B0")]
	private string <assignedPilotId>k__BackingField;

	[Token(Token = "0x170000B6")]
	public string assignedPilotId
	{
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1611600", Offset = "0x1611600", VA = "0x1611600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C074", Offset = "0x76C074")]
		get
		{
			return null;
		}
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1611608", Offset = "0x1611608", VA = "0x1611608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C084", Offset = "0x76C084")]
		private set
		{
		}
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x1611610", Offset = "0x1611610", VA = "0x1611610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x16116F0", Offset = "0x16116F0", VA = "0x16116F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x1610D60", Offset = "0x1610D60", VA = "0x1610D60")]
	public void setPilotSprite(string pilotId)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x1610204", Offset = "0x1610204", VA = "0x1610204")]
	public void select()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x1610284", Offset = "0x1610284", VA = "0x1610284")]
	public bool isSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x1610570", Offset = "0x1610570", VA = "0x1610570")]
	public void aimedAt()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1611838", Offset = "0x1611838", VA = "0x1611838")]
	private void tryPopOnSelect(object note)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1610F90", Offset = "0x1610F90", VA = "0x1610F90")]
	public void updateVisuals()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1611788", Offset = "0x1611788", VA = "0x1611788")]
	private bool isAssignedPilotHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1611958", Offset = "0x1611958", VA = "0x1611958")]
	private bool isAssignedPilotLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x16119E4", Offset = "0x16119E4", VA = "0x16119E4")]
	private bool isAssignedToPlayerPilot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x1611A6C", Offset = "0x1611A6C", VA = "0x1611A6C")]
	public PilotShelfElement()
	{
	}
}
[Token(Token = "0x2000250")]
public class PowerupStatDisplay : MonoBehaviour
{
	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text statPercentLabel;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image powerupLogo;

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xB7C214", Offset = "0xB7C214", VA = "0xB7C214")]
	public void updateDisplay(int percent, Sprite powerupIcon)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xB7C2D0", Offset = "0xB7C2D0", VA = "0xB7C2D0")]
	public PowerupStatDisplay()
	{
	}
}
[Token(Token = "0x2000251")]
public sealed class PlatformSpecificCloudSave
{
	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, object> cloudStore;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action cloudDidUpdateAction;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlatformSpecificCloudSave sharedInstance;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasBeenBootstrapped;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool cloudHasBooted;

	[Token(Token = "0x170000B7")]
	public static PlatformSpecificCloudSave instance
	{
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1611B48", Offset = "0x1611B48", VA = "0x1611B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x1611C8C", Offset = "0x1611C8C", VA = "0x1611C8C")]
	public void forceRefresh()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x1611F28", Offset = "0x1611F28", VA = "0x1611F28")]
	private bool isEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x1611E20", Offset = "0x1611E20", VA = "0x1611E20")]
	private bool isIOS()
	{
		return default(bool);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x1611EA4", Offset = "0x1611EA4", VA = "0x1611EA4")]
	private bool isTVOS()
	{
		return default(bool);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x1611F30", Offset = "0x1611F30", VA = "0x1611F30")]
	private bool isAmazon()
	{
		return default(bool);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x1611FB4", Offset = "0x1611FB4", VA = "0x1611FB4")]
	public static void bootstrap(Action cloudUpdate)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x16122D0", Offset = "0x16122D0", VA = "0x16122D0")]
	public static bool needsBoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x1612034", Offset = "0x1612034", VA = "0x1612034")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x1612594", Offset = "0x1612594", VA = "0x1612594")]
	public List<string> cloudKeys()
	{
		return null;
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x1612624", Offset = "0x1612624", VA = "0x1612624")]
	public string stringForKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x161271C", Offset = "0x161271C", VA = "0x161271C")]
	public void setString(string key, string theValue)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x16127DC", Offset = "0x16127DC", VA = "0x16127DC")]
	public bool cloudHasFinishedBooting()
	{
		return default(bool);
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x1612344", Offset = "0x1612344", VA = "0x1612344")]
	private void cloudStoreDidChange(Dictionary<string, object> theStore)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x16127E4", Offset = "0x16127E4", VA = "0x16127E4")]
	public void saveToCloud()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x1612944", Offset = "0x1612944", VA = "0x1612944")]
	private void loadForEditor()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x1612AC8", Offset = "0x1612AC8", VA = "0x1612AC8")]
	private void clearForEditor()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x1612B5C", Offset = "0x1612B5C", VA = "0x1612B5C")]
	public void deleteAll()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x1611C10", Offset = "0x1611C10", VA = "0x1611C10")]
	public PlatformSpecificCloudSave()
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x1612C18", Offset = "0x1612C18", VA = "0x1612C18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C094", Offset = "0x76C094")]
	private void <forceRefresh>b__6_0()
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x1612C1C", Offset = "0x1612C1C", VA = "0x1612C1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0A4", Offset = "0x76C0A4")]
	private void <bootstrap>b__14_0()
	{
	}
}
[Token(Token = "0x2000252")]
public class GameModeUnlockPopup : PopupTextElement
{
	[Token(Token = "0x600132F")]
	[Address(RVA = "0x97C858", Offset = "0x97C858", VA = "0x97C858")]
	public GameModeUnlockPopup()
	{
	}
}
[Token(Token = "0x2000253")]
public class PopupTextController : SingletonMono<PopupTextController>
{
	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PopupTextElement> templates;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PopupTextType, TypedObjectPool<PopupTextElement>> elementPools;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, PopupTextElement> trackedElements;

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1622B2C", Offset = "0x1622B2C", VA = "0x1622B2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x1622E14", Offset = "0x1622E14", VA = "0x1622E14")]
	public void showAndFollow(Transform target, Vector3 followOffset, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x16230D8", Offset = "0x16230D8", VA = "0x16230D8")]
	public void showAndFollowAndScale(Transform target, Vector3 followOffset, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1615B94", Offset = "0x1615B94", VA = "0x1615B94")]
	public void showAtPosition(Vector3 position, string content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x1622EFC", Offset = "0x1622EFC", VA = "0x1622EFC")]
	public void showAndFollow(Transform target, Vector3 followOffset, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x16233C8", Offset = "0x16233C8", VA = "0x16233C8")]
	public void showAtPosition(Vector3 position, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x16231C0", Offset = "0x16231C0", VA = "0x16231C0")]
	public void showAndFollowAndScale(Transform target, Vector3 followOffset, List<string> content, float showTime, PopupTextType popupTextType, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1623964", Offset = "0x1623964", VA = "0x1623964")]
	public void showScoreAtPosition(Vector3 position, int score, float showTime, float scale, float speed, bool isComboActive = false, [Optional] string popupId)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x1623678", Offset = "0x1623678", VA = "0x1623678")]
	private void startTracking(PopupTextElement element, string popupId)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x1623C74", Offset = "0x1623C74", VA = "0x1623C74")]
	public void dismissAll()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x1623C0C", Offset = "0x1623C0C", VA = "0x1623C0C")]
	public bool isTracking(string popupId)
	{
		return default(bool);
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1613668", Offset = "0x1613668", VA = "0x1613668")]
	public void dismissPopup(string popupId)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1623EE4", Offset = "0x1623EE4", VA = "0x1623EE4")]
	public void returnElement(PopupTextElement item)
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1623518", Offset = "0x1623518", VA = "0x1623518")]
	private TypedObjectPool<PopupTextElement> getPool(PopupTextType popupTextType)
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1624064", Offset = "0x1624064", VA = "0x1624064")]
	public PopupTextController()
	{
	}
}
[Token(Token = "0x2000254")]
public enum PopupTextType
{
	[Token(Token = "0x4000F86")]
	TextOnly = 1,
	[Token(Token = "0x4000F87")]
	ScorePopUp = 3,
	[Token(Token = "0x4000F88")]
	BossCallout = 4,
	[Token(Token = "0x4000F89")]
	InformationCallout = 5,
	[Token(Token = "0x4000F8A")]
	NumberCallout = 6,
	[Token(Token = "0x4000F8B")]
	TutorialCallout = 7,
	[Token(Token = "0x4000F8C")]
	CheckpointCallout = 8,
	[Token(Token = "0x4000F8D")]
	UpgradeCallOut = 9,
	[Token(Token = "0x4000F8E")]
	BossTauntCallOut = 10
}
[Token(Token = "0x2000255")]
public enum PopupLookAtType
{
	[Token(Token = "0x4000F90")]
	None,
	[Token(Token = "0x4000F91")]
	LeftRight,
	[Token(Token = "0x4000F92")]
	UpDown,
	[Token(Token = "0x4000F93")]
	All
}
[Token(Token = "0x2000256")]
public class PopupTextElement : MonoBehaviour
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7688C0", Offset = "0x7688C0")]
	public PopupTextType textType;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PopupLookAtType lookAtBehaviour;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int poolingCount;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7688F8", Offset = "0x7688F8")]
	public CanvasGroup labelParent;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text label;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768930", Offset = "0x768930")]
	public AnimationCurve fadeCurve;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float popScale;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float popTime;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768968", Offset = "0x768968")]
	public AnimationCurve ySpeedCurve;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7689A0", Offset = "0x7689A0")]
	public List<TMP_Text> additionalLabels;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7689D8", Offset = "0x7689D8")]
	public float slideInOffset;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768A10", Offset = "0x768A10")]
	public Animator textAnimator;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string clipToAnimate;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform trackingTarget;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 trackingOffset;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scorePopUpYSpeed;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float scorePopScale;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform cameraTransform;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeToLive;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lifetime;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> contentToShow;

	[Token(Token = "0x4000FAA")]
	private const float AnimationCycleTime = 2.5f;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float animationTime;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int animationIndex;

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1623618", Offset = "0x1623618", VA = "0x1623618")]
	public void activateAndFollow(List<string> content, float lifetime, Transform trackingTarget, Vector3 trackingOffset)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1623B04", Offset = "0x1623B04", VA = "0x1623B04")]
	public void activateScore(List<string> content, float lifetime, float scale, float speed, bool isComboActive)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x16240D4", Offset = "0x16240D4", VA = "0x16240D4")]
	public void activateWithAnimationClip(List<string> content, float lifetime, string clipName)
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1623760", Offset = "0x1623760", VA = "0x1623760")]
	public void activate(List<string> content, float lifetime)
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x1624430", Offset = "0x1624430", VA = "0x1624430")]
	private void Update()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1624798", Offset = "0x1624798", VA = "0x1624798")]
	private void updateContentCycling()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x162424C", Offset = "0x162424C", VA = "0x162424C")]
	private void updateLookAt()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1624118", Offset = "0x1624118", VA = "0x1624118")]
	private void setLabelContent(string content)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1623D70", Offset = "0x1623D70", VA = "0x1623D70")]
	public void cleanup()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x1624880", Offset = "0x1624880", VA = "0x1624880")]
	public PopupTextElement()
	{
	}
}
[Token(Token = "0x2000257")]
public class MMQuad
{
	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MMTriangle3D[] face;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color col;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] postitions;

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x98E68C", Offset = "0x98E68C", VA = "0x98E68C")]
	public MMQuad(Vector3 a, Vector3 b, Vector3 c, Vector3 d, Color color)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x98E990", Offset = "0x98E990", VA = "0x98E990")]
	public bool SharesVertexWith(MMQuad quad)
	{
		return default(bool);
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x98EAC8", Offset = "0x98EAC8", VA = "0x98EAC8")]
	public Vector3[] GetVertexArray()
	{
		return null;
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x98EAD4", Offset = "0x98EAD4", VA = "0x98EAD4")]
	public Vector3[] GetVertexArray(Vector3[] array, int offset)
	{
		return null;
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x98EC50", Offset = "0x98EC50", VA = "0x98EC50")]
	public Color[] GetColorsArray(Color[] array, int offset)
	{
		return null;
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x98ED48", Offset = "0x98ED48", VA = "0x98ED48")]
	public int[] GetTrianglesArray(int[] array, int offsetQuadCount, int offset)
	{
		return null;
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x98EE74", Offset = "0x98EE74", VA = "0x98EE74")]
	public Vector3[] GetNormalArray()
	{
		return null;
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x98EE80", Offset = "0x98EE80", VA = "0x98EE80")]
	public Vector3[] GetNormalArray(Vector3[] array, int offset)
	{
		return null;
	}
}
[Token(Token = "0x2000258")]
public class MMTriIndexes
{
	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int a;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int b;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int c;

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x98F010", Offset = "0x98F010", VA = "0x98F010")]
	public MMTriIndexes(int _a, int _b, int _c)
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x98F050", Offset = "0x98F050", VA = "0x98F050")]
	public bool Contains(int test)
	{
		return default(bool);
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x98F080", Offset = "0x98F080", VA = "0x98F080")]
	public bool Contains(List<int> test)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000259")]
public class MMVoxelData
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string name;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Vector3 position;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int sizeX;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int sizeY;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int sizeZ;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32[] colors;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] colorComponents;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int[] colorIndexes;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int[] visabilityMask;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] positions;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float[] positionComponents;

	[Token(Token = "0x170000B8")]
	public int VoxelMaxCount
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x98F140", Offset = "0x98F140", VA = "0x98F140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B9")]
	public Vector3[] Positions
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x98F15C", Offset = "0x98F15C", VA = "0x98F15C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public Color32[] Colors
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x98F2B4", Offset = "0x98F2B4", VA = "0x98F2B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public int[] ColorIndexes
	{
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x98F438", Offset = "0x98F438", VA = "0x98F438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public int[] VisabilityMask
	{
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x98F440", Offset = "0x98F440", VA = "0x98F440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x98F448", Offset = "0x98F448", VA = "0x98F448")]
	public void SetVoxelData(int[,,] matrix, int posX, int posY, int posZ, uint version, uint zAxisOrientation, uint colorFormat, uint visibilityMaskEncoded)
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x98FE5C", Offset = "0x98FE5C", VA = "0x98FE5C")]
	private int GetColorIndex(List<Color32> c, Color32 test)
	{
		return default(int);
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x98FF08", Offset = "0x98FF08", VA = "0x98FF08")]
	public List<MMQuad> GetOuterQuads()
	{
		return null;
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x990910", Offset = "0x990910", VA = "0x990910")]
	private int[] GetOuterVoxels()
	{
		return null;
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x990A04", Offset = "0x990A04", VA = "0x990A04")]
	public MMVoxelData()
	{
	}
}
[Token(Token = "0x200025A")]
public class MMVoxelDataHolder : ScriptableObject
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MMVoxelData content;

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x990AA4", Offset = "0x990AA4", VA = "0x990AA4")]
	public MMVoxelDataHolder(MMVoxelData content)
	{
	}
}
[Token(Token = "0x200025B")]
public class MeshData
{
	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<VertexData> vertexes;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] vertices;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] normals;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2[] uv;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] colors;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] triangles;

	[Token(Token = "0x170000BD")]
	public Vector3[] Vertices
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x994BD8", Offset = "0x994BD8", VA = "0x994BD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public Vector3[] Normals
	{
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x994BE0", Offset = "0x994BE0", VA = "0x994BE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public Vector2[] Uv
	{
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x994BE8", Offset = "0x994BE8", VA = "0x994BE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C0")]
	public Color[] Colors
	{
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x994BF0", Offset = "0x994BF0", VA = "0x994BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public int[] Triangles
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x994BF8", Offset = "0x994BF8", VA = "0x994BF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x994C00", Offset = "0x994C00", VA = "0x994C00")]
	public MeshData(Mesh m)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x994D1C", Offset = "0x994D1C", VA = "0x994D1C")]
	public MeshData(List<MMQuad> quads)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x9954A4", Offset = "0x9954A4", VA = "0x9954A4")]
	public Mesh GetMesh(bool includeNormals = true, bool includeColors = true, bool includeUvs = true)
	{
		return null;
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x9954A0", Offset = "0x9954A0", VA = "0x9954A0")]
	private void FindEdges()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x995590", Offset = "0x995590", VA = "0x995590")]
	public void SmoothNormals()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x995948", Offset = "0x995948", VA = "0x995948")]
	public void RemoveBottomFacesNearGround()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x9959BC", Offset = "0x9959BC", VA = "0x9959BC")]
	public void RemoveFacesAlongNormal(Vector3 direction, float heightThreshold = 0f)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x994FAC", Offset = "0x994FAC", VA = "0x994FAC")]
	public void OptimiseArrays()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x995EDC", Offset = "0x995EDC", VA = "0x995EDC")]
	private void FlipNormals()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x995E30", Offset = "0x995E30", VA = "0x995E30")]
	public int GetNewIndex(List<VertexData> check, VertexData target)
	{
		return default(int);
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x995FD4", Offset = "0x995FD4", VA = "0x995FD4")]
	public void SetVertexColorsFromTexture(Texture2D texture)
	{
	}
}
[Token(Token = "0x200025C")]
public class VertexData
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 normal;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 uv;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x14FC4C4", Offset = "0x14FC4C4", VA = "0x14FC4C4")]
	public VertexData(Vector3 p, Vector3 n, Vector2 u, Color c)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x14FC604", Offset = "0x14FC604", VA = "0x14FC604")]
	public bool Approximately(VertexData data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x14FC758", Offset = "0x14FC758", VA = "0x14FC758")]
	public bool HasSamePosition(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x14FC810", Offset = "0x14FC810", VA = "0x14FC810")]
	public bool HasSameNormal(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x14FC8C8", Offset = "0x14FC8C8", VA = "0x14FC8C8")]
	public bool HasSameColor(VertexData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x14FC8F0", Offset = "0x14FC8F0", VA = "0x14FC8F0")]
	public bool HasSameUV(VertexData other)
	{
		return default(bool);
	}
}
[Token(Token = "0x200025D")]
public sealed class AudioSourceController : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762134", Offset = "0x762134")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float finalVolume;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action duckComplete;

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xAC87C0", Offset = "0xAC87C0", VA = "0xAC87C0")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xAC92C8", Offset = "0xAC92C8", VA = "0xAC92C8")]
		internal void <duckToVolume>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xAC9374", Offset = "0xAC9374", VA = "0xAC9374")]
		internal void <duckToVolume>b__1()
		{
		}
	}

	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762144", Offset = "0x762144")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action unDuckComplete;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xAC8948", Offset = "0xAC8948", VA = "0xAC8948")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xAC93C8", Offset = "0xAC93C8", VA = "0xAC93C8")]
		internal void <unDuck>b__1()
		{
		}
	}

	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762154", Offset = "0x762154")]
	private sealed class <>c__DisplayClass19_1
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startVolume;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass19_0 CS$<>8__locals1;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xAC8950", Offset = "0xAC8950", VA = "0xAC8950")]
		public <>c__DisplayClass19_1()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xAC941C", Offset = "0xAC941C", VA = "0xAC941C")]
		internal void <unDuck>b__0(float lerpValue)
		{
		}
	}

	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762164", Offset = "0x762164")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startVolume;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float finalVolume;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action fadeComplete;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xAC8AA4", Offset = "0xAC8AA4", VA = "0xAC8AA4")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xAC94D0", Offset = "0xAC94D0", VA = "0xAC94D0")]
		internal void <fadeTo>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xAC9578", Offset = "0xAC9578", VA = "0xAC9578")]
		internal void <fadeTo>b__1()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762174", Offset = "0x762174")]
	private sealed class <trackTransformLocation>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform location;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSourceController <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xAC976C", Offset = "0xAC976C", VA = "0xAC976C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xAC97D4", Offset = "0xAC97D4", VA = "0xAC97D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xAC922C", Offset = "0xAC922C", VA = "0xAC922C")]
		[DebuggerHidden]
		public <trackTransformLocation>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xAC95CC", Offset = "0xAC95CC", VA = "0xAC95CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xAC95D0", Offset = "0xAC95D0", VA = "0xAC95D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xAC9774", Offset = "0xAC9774", VA = "0xAC9774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource mySource;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isAmbisonic;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float nearDistance;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float farDistance;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768AF8", Offset = "0x768AF8")]
	private string <CurrentKey>k__BackingField;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768B08", Offset = "0x768B08")]
	private float <StartTime>k__BackingField;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768B18", Offset = "0x768B18")]
	private float <VolumeAtFull>k__BackingField;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float assignedPitch;

	[Token(Token = "0x170000C2")]
	public string CurrentKey
	{
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xAC84F0", Offset = "0xAC84F0", VA = "0xAC84F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0B4", Offset = "0x76C0B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001376")]
		[Address(RVA = "0xAC84F8", Offset = "0xAC84F8", VA = "0xAC84F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0C4", Offset = "0x76C0C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public float StartTime
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xAC8500", Offset = "0xAC8500", VA = "0xAC8500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0D4", Offset = "0x76C0D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xAC8508", Offset = "0xAC8508", VA = "0xAC8508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0E4", Offset = "0x76C0E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float VolumeAtFull
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xAC8510", Offset = "0xAC8510", VA = "0xAC8510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C0F4", Offset = "0x76C0F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xAC8518", Offset = "0xAC8518", VA = "0xAC8518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C104", Offset = "0x76C104")]
		set
		{
		}
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xAC8520", Offset = "0xAC8520", VA = "0xAC8520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xAC8680", Offset = "0xAC8680", VA = "0xAC8680")]
	public void duckToVolume(float finalVolume, float time = 0.2f, [Optional] Action duckComplete)
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xAC87C8", Offset = "0xAC87C8", VA = "0xAC87C8")]
	public void unDuck(float time = 0.1f, [Optional] Action unDuckComplete)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xAC8958", Offset = "0xAC8958", VA = "0xAC8958")]
	public void fadeToFullVolume(float time, [Optional] Action fadeComplete)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xAC896C", Offset = "0xAC896C", VA = "0xAC896C")]
	public void fadeTo(float finalVolume, float time, [Optional] Action fadeComplete)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xAC8AAC", Offset = "0xAC8AAC", VA = "0xAC8AAC")]
	public bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xAC8AC8", Offset = "0xAC8AC8", VA = "0xAC8AC8")]
	public void stopSource()
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xAC8AE4", Offset = "0xAC8AE4", VA = "0xAC8AE4")]
	public void restartSource()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xAC8B00", Offset = "0xAC8B00", VA = "0xAC8B00")]
	public float clipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xAC8BB8", Offset = "0xAC8BB8", VA = "0xAC8BB8")]
	public void setCurrentKey(string key, bool keyIsAlreadyToLowered = false)
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xAC8C4C", Offset = "0xAC8C4C", VA = "0xAC8C4C")]
	public void applyPitchShift(float pitchShift)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xAC8C74", Offset = "0xAC8C74", VA = "0xAC8C74")]
	public void clearAssignedSound(string keyToSkip)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xAC8DA8", Offset = "0xAC8DA8", VA = "0xAC8DA8")]
	public void playClip(AudioClip theClip, float volume, float pitch, bool loops, bool startAtRandomTime, Transform location, [Optional] AudioMixerGroup mixerGroup, string eventKey = "", bool eventKeyIsAlreadyToLowered = false)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xAC9194", Offset = "0xAC9194", VA = "0xAC9194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76C114", Offset = "0x76C114")]
	private IEnumerator trackTransformLocation(Transform location)
	{
		return null;
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xAC9258", Offset = "0xAC9258", VA = "0xAC9258")]
	public AudioSourceController()
	{
	}
}
[Serializable]
[Token(Token = "0x200025E")]
public sealed class CompoundSoundEvent
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventKey;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumTimeDelay;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumTimeDelay;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundEvent backgroundLoop;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SoundEvent randomEvents;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float eventCountdown;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSourceController currentController;

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x9CB620", Offset = "0x9CB620", VA = "0x9CB620")]
	public CompoundSoundEvent()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x9CB720", Offset = "0x9CB720", VA = "0x9CB720")]
	public bool hasBackgroundLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x9CB784", Offset = "0x9CB784", VA = "0x9CB784")]
	public bool hasRandomEvents()
	{
		return default(bool);
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x9CB7E8", Offset = "0x9CB7E8", VA = "0x9CB7E8")]
	public void startBackgroundLoop()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x9CB890", Offset = "0x9CB890", VA = "0x9CB890")]
	public void stopBackgroundLoop()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x9CB98C", Offset = "0x9CB98C", VA = "0x9CB98C")]
	private void stopLoopingEvent()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x9CBA04", Offset = "0x9CBA04", VA = "0x9CBA04")]
	public void resetCountdown()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x9CBA30", Offset = "0x9CBA30", VA = "0x9CBA30")]
	public void countdownToEvent(float timeDelta)
	{
	}
}
[Token(Token = "0x200025F")]
public sealed class SoundBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6001392")]
	[Address(RVA = "0x15FA900", Offset = "0x15FA900", VA = "0x15FA900", Slot = "4")]
	public override void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x15FAAB0", Offset = "0x15FAAB0", VA = "0x15FAAB0", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x15FAACC", Offset = "0x15FAACC", VA = "0x15FAACC")]
	public SoundBooter()
	{
	}
}
[Token(Token = "0x2000260")]
public sealed class SoundController : SingletonMono<SoundController>
{
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762184", Offset = "0x762184")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundController <>4__this;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEvent theEvent;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x15FBFB4", Offset = "0x15FBFB4", VA = "0x15FBFB4")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x15FE268", Offset = "0x15FE268", VA = "0x15FE268")]
		internal void <processCrossfadeQueue>b__0()
		{
		}
	}

	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762194", Offset = "0x762194")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundController <>4__this;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSourceController previousMusicController;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x15FC6E4", Offset = "0x15FC6E4", VA = "0x15FC6E4")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x15FE320", Offset = "0x15FE320", VA = "0x15FE320")]
		internal void <fadeOutPreviousMusic>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621A4", Offset = "0x7621A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AudioSourceController> <>9__77_0;

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x15FE230", Offset = "0x15FE230", VA = "0x15FE230")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x15FE238", Offset = "0x15FE238", VA = "0x15FE238")]
		internal bool <nextController>b__77_0(AudioSourceController controller)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FD9")]
	private const string MusicLevelPrefsKey = "MGG_music_volume_key";

	[Token(Token = "0x4000FDA")]
	private const string SoundFXLevelPrefsKey = "MGG_soundfx_volume_key";

	[Token(Token = "0x4000FDB")]
	private const string MusicVolumeKey = "MusicVolume";

	[Token(Token = "0x4000FDC")]
	private const string SoundFXVolumeKey = "SoundFXVolume";

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string MusicLoopId;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768B28", Offset = "0x768B28")]
	public AudioSourceController audioSourceControllerPrefab;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sourceCount;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSourceController ambisonicAudioSourceControllerPrefab;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ambisonicSourceCount;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768B60", Offset = "0x768B60")]
	public SoundLibrary soundLibraryPrefab;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768B98", Offset = "0x768B98")]
	public int maxConcurrentPlaysPerEvent;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float crossfadeTime;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool defaultOffInEditor;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool logAllSoundPlaysInEditor;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768BD0", Offset = "0x768BD0")]
	public AudioMixer gameAudioMixer;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768C08", Offset = "0x768C08")]
	public AudioMixerSnapshot defaultMixSnapshot;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioMixerSnapshot deathMixSnapshot;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioMixerSnapshot loadingMixSnapshot;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioMixerSnapshot lostHealthMixSnapshot;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768C40", Offset = "0x768C40")]
	public float moveDistanceForMaxPitchShift;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float highestEnginePitchShift;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool booted;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AudioSourceController> standardAudioSources;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentStandardIndex;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<AudioSourceController> ambisonicAudioSources;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentAmbisonicIndex;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, AudioSourceController> loopControllers;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<CompoundSoundEvent> compoundControllers;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool musicEventQueueActive;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSourceController musicController;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Queue<string> crossfadeQueue;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float pitchAddResetTicker;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string currentMusicTrack;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string currentAmbientEventKey;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768C78", Offset = "0x768C78")]
	private float <pitchToAddToHits>k__BackingField;

	[Token(Token = "0x170000C5")]
	public float pitchToAddToHits
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x15FAAD4", Offset = "0x15FAAD4", VA = "0x15FAAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C178", Offset = "0x76C178")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001396")]
		[Address(RVA = "0x15FAADC", Offset = "0x15FAADC", VA = "0x15FAADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C188", Offset = "0x76C188")]
		private set
		{
		}
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x15FAAE4", Offset = "0x15FAAE4", VA = "0x15FAAE4")]
	public List<string> allEventKeys()
	{
		return null;
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x15FA97C", Offset = "0x15FA97C", VA = "0x15FA97C")]
	public void bootstrap(Action complete)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x15FB464", Offset = "0x15FB464", VA = "0x15FB464")]
	public void updateMusicVolume(float alpha)
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x15FB414", Offset = "0x15FB414", VA = "0x15FB414")]
	public float getCurrentMusicLevelAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x15FB6B8", Offset = "0x15FB6B8", VA = "0x15FB6B8")]
	public float getMusicLevelFromMixer()
	{
		return default(float);
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x15FB72C", Offset = "0x15FB72C", VA = "0x15FB72C")]
	public float getSoundFxLevelFromMixer()
	{
		return default(float);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x15FB7A0", Offset = "0x15FB7A0", VA = "0x15FB7A0")]
	public string getMusicControllerMixerGroup()
	{
		return null;
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x15FB580", Offset = "0x15FB580", VA = "0x15FB580")]
	public void updateSoundFXVolume(float alpha)
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x15FB530", Offset = "0x15FB530", VA = "0x15FB530")]
	public float getCurrentSoundFXLevelAlpha()
	{
		return default(float);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x15FB854", Offset = "0x15FB854", VA = "0x15FB854")]
	public void setMasterVolumeFadeDownAmount(float alpha)
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x15FB8F4", Offset = "0x15FB8F4", VA = "0x15FB8F4")]
	public void crossfadeToMusic(string eventKey)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x15FBA3C", Offset = "0x15FBA3C", VA = "0x15FBA3C")]
	private void processCrossfadeQueue()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x15FBFBC", Offset = "0x15FBFBC", VA = "0x15FBFBC")]
	private void fadeOutPreviousMusic(AudioSourceController previousMusicController)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x15FC6EC", Offset = "0x15FC6EC", VA = "0x15FC6EC")]
	public string getCurrentMusicEventKey()
	{
		return null;
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x15FC77C", Offset = "0x15FC77C", VA = "0x15FC77C")]
	public void changeToAmbientEvent(string eventKey)
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x15FB668", Offset = "0x15FB668", VA = "0x15FB668")]
	public void playDefaultAmbience()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x15FC87C", Offset = "0x15FC87C", VA = "0x15FC87C")]
	public void stopAmbient()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x15FCA20", Offset = "0x15FCA20", VA = "0x15FCA20")]
	public void transitionToDefaultMix(float timeToReach = 1f)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x15FCA3C", Offset = "0x15FCA3C", VA = "0x15FCA3C")]
	public void transitionToDeathMix(float timeToReach)
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x15FB64C", Offset = "0x15FB64C", VA = "0x15FB64C")]
	public void transitionToLoadingMix(float timeToReach)
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x15FCA58", Offset = "0x15FCA58", VA = "0x15FCA58")]
	public void transitionToLostHealthMix(float timeToReach)
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x15FC918", Offset = "0x15FC918", VA = "0x15FC918")]
	public static void playCompoundEvent(string eventKey)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x15FC99C", Offset = "0x15FC99C", VA = "0x15FC99C")]
	public static void stopCompoundEvent(string eventKey)
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x15FCC70", Offset = "0x15FCC70", VA = "0x15FCC70")]
	public static AudioSourceController playLoopingEvent(string eventKey, string loopID, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x15FCE14", Offset = "0x15FCE14", VA = "0x15FCE14")]
	public static void stopLoopingEvent(string loopID)
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x15FCF78", Offset = "0x15FCF78", VA = "0x15FCF78")]
	public static bool isLoopRunning(string loopId)
	{
		return default(bool);
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x15F9030", Offset = "0x15F9030", VA = "0x15F9030")]
	public static AudioSourceController playSoundEvent(string eventKey, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x15FD2C0", Offset = "0x15FD2C0", VA = "0x15FD2C0")]
	public static AudioSourceController playSoundEvent(SoundEvent theEvent, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x15FD474", Offset = "0x15FD474", VA = "0x15FD474")]
	public static bool soundEventExists(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x15FD638", Offset = "0x15FD638", VA = "0x15FD638")]
	public static bool isALoopingEvent(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x15FCB78", Offset = "0x15FCB78", VA = "0x15FCB78")]
	private void endCompoundEvent(string soundKey)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x15FCA74", Offset = "0x15FCA74", VA = "0x15FCA74")]
	private void startCompoundEvent(string soundKey)
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x15FD724", Offset = "0x15FD724", VA = "0x15FD724")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x15FD810", Offset = "0x15FD810", VA = "0x15FD810")]
	private void bumpUpModifiedPitch()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x15FD834", Offset = "0x15FD834", VA = "0x15FD834")]
	public void updateLoopingEventPitch(string loopID, float pitchShift)
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x15FCE9C", Offset = "0x15FCE9C", VA = "0x15FCE9C")]
	private void stopLoopEvent(string loopID, [Optional] string incomingSoundKey)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x15FCD10", Offset = "0x15FCD10", VA = "0x15FCD10")]
	private AudioSourceController startLoopEvent(string soundKey, string loopID, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x15FD358", Offset = "0x15FD358", VA = "0x15FD358")]
	private AudioSourceController playEvent(SoundEvent theEvent, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x15FD008", Offset = "0x15FD008", VA = "0x15FD008")]
	private AudioSourceController playEvent(string eventKey, [Optional] Transform location)
	{
		return null;
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x15FC160", Offset = "0x15FC160", VA = "0x15FC160")]
	private AudioSourceController nextController(bool isAmbisonic)
	{
		return null;
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x15FDB58", Offset = "0x15FDB58", VA = "0x15FDB58")]
	private bool canCullEventKey(string eventKey, bool eventKeyIsAlreadyToLowered = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x15FD8EC", Offset = "0x15FD8EC", VA = "0x15FD8EC")]
	public bool isEventAtMaxPlayCount(string checkEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x15FDC20", Offset = "0x15FDC20", VA = "0x15FDC20")]
	public int eventPlayingCount(string checkEvent)
	{
		return default(int);
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x15FDD78", Offset = "0x15FDD78", VA = "0x15FDD78")]
	public void releaseAllAudioSourceClips()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x15FACD4", Offset = "0x15FACD4", VA = "0x15FACD4")]
	private void setupAudioSourcePools()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x15FDF2C", Offset = "0x15FDF2C", VA = "0x15FDF2C")]
	public SoundController()
	{
	}
}
[Token(Token = "0x2000261")]
public sealed class SoundControllerParent : MonoBehaviour
{
	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioListener theListener;

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x15FE454", Offset = "0x15FE454", VA = "0x15FE454")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x15FE4F8", Offset = "0x15FE4F8", VA = "0x15FE4F8")]
	public void enableListener()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x15FE518", Offset = "0x15FE518", VA = "0x15FE518")]
	public SoundControllerParent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000262")]
public sealed class SoundEvent
{
	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventKey;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> clipList;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve pitch;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve volume;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup mixingGroup;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isAmbisonic;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loops;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool startAtRandomTime;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool doesUseModifiedPitch;

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x15FE520", Offset = "0x15FE520", VA = "0x15FE520")]
	public SoundEvent()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x15FE65C", Offset = "0x15FE65C", VA = "0x15FE65C")]
	private float pitchValue()
	{
		return default(float);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x15FE700", Offset = "0x15FE700", VA = "0x15FE700")]
	private float volumeValue()
	{
		return default(float);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x15FE734", Offset = "0x15FE734", VA = "0x15FE734")]
	private AudioClip clip()
	{
		return null;
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x15FDA60", Offset = "0x15FDA60", VA = "0x15FDA60")]
	public void playOnSourceWithVolume(AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}
}
[Token(Token = "0x2000263")]
public class SoundEventPlayer : MonoBehaviour
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool filterForUI;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playHere;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string soundKey;

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x15FE7B4", Offset = "0x15FE7B4", VA = "0x15FE7B4")]
	public void playSound()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x15FE840", Offset = "0x15FE840", VA = "0x15FE840")]
	public SoundEventPlayer()
	{
	}
}
[Token(Token = "0x2000264")]
public sealed class SoundLibrary : MonoBehaviour
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SoundEvent> soundEvents;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CompoundSoundEvent> compoundSoundEvents;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768C88", Offset = "0x768C88")]
	public AudioMixerGroup soundFXGroup;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, SoundEvent> eventMap;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, CompoundSoundEvent> compoundMap;

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x15FAF28", Offset = "0x15FAF28", VA = "0x15FAF28")]
	public void bootstrap()
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x15FE850", Offset = "0x15FE850", VA = "0x15FE850")]
	public SoundEvent eventForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x15FE8C8", Offset = "0x15FE8C8", VA = "0x15FE8C8")]
	public CompoundSoundEvent compoundEventForKey(string key)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x15FE940", Offset = "0x15FE940", VA = "0x15FE940")]
	public void playKeyedSoundEventOnSource(string key, AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x15FEA58", Offset = "0x15FEA58", VA = "0x15FEA58")]
	public void playKeyedSoundEventOnSource(SoundEvent theEvent, AudioSourceController sourceController, float volumePercent = 1f, [Optional] Transform location)
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x15FAB9C", Offset = "0x15FAB9C", VA = "0x15FAB9C")]
	public List<string> allEventKeys()
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x15FEB10", Offset = "0x15FEB10", VA = "0x15FEB10")]
	public bool eventExists(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x15FEBBC", Offset = "0x15FEBBC", VA = "0x15FEBBC")]
	public bool eventExistsSlow(string eventKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x15FEC70", Offset = "0x15FEC70", VA = "0x15FEC70")]
	public int getEventIndex(string eventKey)
	{
		return default(int);
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x15FED30", Offset = "0x15FED30", VA = "0x15FED30")]
	public SoundLibrary()
	{
	}
}
[Token(Token = "0x2000265")]
public sealed class SoundOnClick : SoundEventPlayer, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x15FEEAC", Offset = "0x15FEEAC", VA = "0x15FEEAC", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x15FEEB0", Offset = "0x15FEEB0", VA = "0x15FEEB0")]
	public SoundOnClick()
	{
	}
}
[Token(Token = "0x2000266")]
public sealed class SoundOnClickButton : SoundEventPlayer, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button myButton;

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x15FEEC0", Offset = "0x15FEEC0", VA = "0x15FEEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x15FEFF0", Offset = "0x15FEFF0", VA = "0x15FEFF0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x15FF08C", Offset = "0x15FF08C", VA = "0x15FF08C")]
	public SoundOnClickButton()
	{
	}
}
[Token(Token = "0x2000267")]
public sealed class SoundOnEnable : SoundEventPlayer
{
	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x15FF09C", Offset = "0x15FF09C", VA = "0x15FF09C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x15FF0A0", Offset = "0x15FF0A0", VA = "0x15FF0A0")]
	public SoundOnEnable()
	{
	}
}
[Token(Token = "0x2000268")]
public class TerrainFadeInController : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621B4", Offset = "0x7621B4")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forward;

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x16048F0", Offset = "0x16048F0", VA = "0x16048F0")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x160496C", Offset = "0x160496C", VA = "0x160496C")]
		internal void <lerpTutorialSkyBG>b__0(float alpha)
		{
		}
	}

	[Token(Token = "0x400100F")]
	private const string GlobalSkyAlphaKey = "_GLOBAL_TUTORIALSKY_TEXALPHA";

	[Token(Token = "0x4001010")]
	private const string GlobalFadeInKey = "_GLOBAL_FADEIN_VALUE";

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool AV_isAnimating;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float AV_terrainFadeAlpha;

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x16046A8", Offset = "0x16046A8", VA = "0x16046A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x1604718", Offset = "0x1604718", VA = "0x1604718")]
	public void prepareTutorialSkyBG()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x1604768", Offset = "0x1604768", VA = "0x1604768")]
	public void refreshScenery()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x16046BC", Offset = "0x16046BC", VA = "0x16046BC")]
	public void setTerrainFade(float alpha)
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x16047F4", Offset = "0x16047F4", VA = "0x16047F4")]
	public void lerpTutorialSkyBG(float time, bool forward = true)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x16048F8", Offset = "0x16048F8", VA = "0x16048F8")]
	public void setShaderDefaults()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x1604964", Offset = "0x1604964", VA = "0x1604964")]
	public TerrainFadeInController()
	{
	}
}
[Token(Token = "0x2000269")]
public class TerrainSceneEditingWorkflow : DebugOnlyItem
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MightyVRController controller;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject children;

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x16049DC", Offset = "0x16049DC", VA = "0x16049DC", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x1604A7C", Offset = "0x1604A7C", VA = "0x1604A7C")]
	public TerrainSceneEditingWorkflow()
	{
	}
}
[Token(Token = "0x200026A")]
public class TerrainSceneryRandomiser : MonoBehaviour
{
	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEditingAllowed;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool enableMeshRandomisation;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] options;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableTransformRandomisation;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minScale;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxScale;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool incrementalYRotation;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 minRotation;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 maxRotation;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float yOffsetMin;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float yOffsetMax;

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x1604A84", Offset = "0x1604A84", VA = "0x1604A84")]
	public void reset()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x1604C7C", Offset = "0x1604C7C", VA = "0x1604C7C")]
	public void runRandomiser(bool isLoggingOut, bool isCleaningUp)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x1605224", Offset = "0x1605224", VA = "0x1605224")]
	public TerrainSceneryRandomiser()
	{
	}
}
[Token(Token = "0x200026B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7607A8", Offset = "0x7607A8")]
public class ImportVariables : ScriptableObject
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768CE0", Offset = "0x768CE0")]
	public List<string> requiredFileContents;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768D18", Offset = "0x768D18")]
	public List<string> excludedFiles;

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x8FE728", Offset = "0x8FE728", VA = "0x8FE728")]
	public bool isValidForBottomFaceRemoval(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x8FE84C", Offset = "0x8FE84C", VA = "0x8FE84C")]
	public ImportVariables()
	{
	}
}
[Token(Token = "0x200026C")]
public class SpriteBuilder : MonoBehaviour
{
	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768D50", Offset = "0x768D50")]
	public bool isCapturingTMPSprites;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int windowSize;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768D88", Offset = "0x768D88")]
	public float scaleFactor;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int importSize;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768DC0", Offset = "0x768DC0")]
	public Transform spawningParent;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 defaultPosition;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 defaultRotation;

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x1602350", Offset = "0x1602350", VA = "0x1602350")]
	public static string getEnemySpriteAssetNameForUI(string worldId, EnemyClass enemyClass, int enemyIndex)
	{
		return null;
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x16023D4", Offset = "0x16023D4", VA = "0x16023D4")]
	public static string getEnemySpriteAssetName(string worldId, EnemyClass enemyClass, int enemyIndex)
	{
		return null;
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1602484", Offset = "0x1602484", VA = "0x1602484")]
	public static string getPowerupSpriteAssetNameForUI(string prefabKay)
	{
		return null;
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x16024F0", Offset = "0x16024F0", VA = "0x16024F0")]
	public static string getPowerupSpriteAssetName(string prefabKay)
	{
		return null;
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x1602544", Offset = "0x1602544", VA = "0x1602544")]
	public static string getPilotSpriteAssetNameForUI(string pilotId)
	{
		return null;
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x16025B4", Offset = "0x16025B4", VA = "0x16025B4")]
	public static string getPilotSpriteAssetName(string pilotId, bool isHQ = false)
	{
		return null;
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x160263C", Offset = "0x160263C", VA = "0x160263C")]
	public SpriteBuilder()
	{
	}
}
[Token(Token = "0x200026D")]
public class ArcadeTypeMeta
{
	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string arcadeTypeId;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string arcadeTypeLocKey;

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xAC8308", Offset = "0xAC8308", VA = "0xAC8308")]
	public ArcadeTypeMeta(Command theCommand)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xAC8374", Offset = "0xAC8374", VA = "0xAC8374")]
	public string localisedName()
	{
		return null;
	}
}
[Token(Token = "0x200026E")]
public class ScheduleArcadeLevelMeta
{
	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768DF8", Offset = "0x768DF8")]
	private string <oculusEventId>k__BackingField;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E08", Offset = "0x768E08")]
	private string <levelContainerName>k__BackingField;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E18", Offset = "0x768E18")]
	private string <arcadeTypeId>k__BackingField;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E28", Offset = "0x768E28")]
	private DateTime <startDateUTC>k__BackingField;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E38", Offset = "0x768E38")]
	private DateTime <endDateUTC>k__BackingField;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E48", Offset = "0x768E48")]
	private bool <isActiveInDevBuild>k__BackingField;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E58", Offset = "0x768E58")]
	private bool <isActiveInReleaseBuild>k__BackingField;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E68", Offset = "0x768E68")]
	private bool <hasPlayed>k__BackingField;

	[Token(Token = "0x170000C6")]
	public string oculusEventId
	{
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x9B0D44", Offset = "0x9B0D44", VA = "0x9B0D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C198", Offset = "0x76C198")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x9B0D4C", Offset = "0x9B0D4C", VA = "0x9B0D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1A8", Offset = "0x76C1A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public string levelContainerName
	{
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x9B0D54", Offset = "0x9B0D54", VA = "0x9B0D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1B8", Offset = "0x76C1B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x9B0D5C", Offset = "0x9B0D5C", VA = "0x9B0D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1C8", Offset = "0x76C1C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public string arcadeTypeId
	{
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x9B0D64", Offset = "0x9B0D64", VA = "0x9B0D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1D8", Offset = "0x76C1D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x9B0D6C", Offset = "0x9B0D6C", VA = "0x9B0D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1E8", Offset = "0x76C1E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public DateTime startDateUTC
	{
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x9B0D74", Offset = "0x9B0D74", VA = "0x9B0D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C1F8", Offset = "0x76C1F8")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x9B0D7C", Offset = "0x9B0D7C", VA = "0x9B0D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C208", Offset = "0x76C208")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public DateTime endDateUTC
	{
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x9B0D84", Offset = "0x9B0D84", VA = "0x9B0D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C218", Offset = "0x76C218")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x9B0D8C", Offset = "0x9B0D8C", VA = "0x9B0D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C228", Offset = "0x76C228")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public bool isActiveInDevBuild
	{
		[Token(Token = "0x6001402")]
		[Address(RVA = "0x9B0D94", Offset = "0x9B0D94", VA = "0x9B0D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C238", Offset = "0x76C238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001403")]
		[Address(RVA = "0x9B0D9C", Offset = "0x9B0D9C", VA = "0x9B0D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C248", Offset = "0x76C248")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public bool isActiveInReleaseBuild
	{
		[Token(Token = "0x6001404")]
		[Address(RVA = "0x9B0DA8", Offset = "0x9B0DA8", VA = "0x9B0DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C258", Offset = "0x76C258")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001405")]
		[Address(RVA = "0x9B0DB0", Offset = "0x9B0DB0", VA = "0x9B0DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C268", Offset = "0x76C268")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public bool hasPlayed
	{
		[Token(Token = "0x6001406")]
		[Address(RVA = "0x9B0DBC", Offset = "0x9B0DBC", VA = "0x9B0DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C278", Offset = "0x76C278")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001407")]
		[Address(RVA = "0x9B0DC4", Offset = "0x9B0DC4", VA = "0x9B0DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C288", Offset = "0x76C288")]
		private set
		{
		}
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x9B0DD0", Offset = "0x9B0DD0", VA = "0x9B0DD0")]
	public ScheduleArcadeLevelMeta(Command theCommand)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x9B0F54", Offset = "0x9B0F54", VA = "0x9B0F54")]
	private void loadState()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x9B1024", Offset = "0x9B1024", VA = "0x9B1024")]
	private void saveState()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x9B10C4", Offset = "0x9B10C4", VA = "0x9B10C4")]
	public void markAsPlayed()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x9B10DC", Offset = "0x9B10DC", VA = "0x9B10DC")]
	public bool isInTheFuture()
	{
		return default(bool);
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x9B11C8", Offset = "0x9B11C8", VA = "0x9B11C8")]
	public bool isCurrentlyRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x9B12B4", Offset = "0x9B12B4", VA = "0x9B12B4")]
	public bool isFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x9B13A0", Offset = "0x9B13A0", VA = "0x9B13A0")]
	public string getTimeUntilEventStartsString()
	{
		return null;
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x9B140C", Offset = "0x9B140C", VA = "0x9B140C")]
	public string getTimeUntilFinishedString()
	{
		return null;
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x9B1478", Offset = "0x9B1478", VA = "0x9B1478")]
	public void debugForceActiveTimeWindow(int seconds = 300)
	{
	}
}
[Token(Token = "0x200026F")]
public class TournamentController : SingletonMono<TournamentController>
{
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621C4", Offset = "0x7621C4")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScheduleArcadeLevelMeta arcadeLevel;

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x160A624", Offset = "0x160A624", VA = "0x160A624")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x160BAB8", Offset = "0x160BAB8", VA = "0x160BAB8")]
		internal bool <scheduleArcadeLevel>b__0(ScheduleArcadeLevelMeta alreadyScheduled)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621D4", Offset = "0x7621D4")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentController <>4__this;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDevBuild;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isReleaseBuild;

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x160A62C", Offset = "0x160A62C", VA = "0x160A62C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x160BAE4", Offset = "0x160BAE4", VA = "0x160BAE4")]
		internal bool <bootstrapArcadeLevelSchedule>b__0(ScheduleArcadeLevelMeta arcadeLevel)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621E4", Offset = "0x7621E4")]
	private sealed class <>c
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ScheduleArcadeLevelMeta> <>9__24_0;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<ScheduleArcadeLevelMeta> <>9__52_0;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<ScheduleArcadeLevelMeta> <>9__52_1;

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x160BA14", Offset = "0x160BA14", VA = "0x160BA14")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x160BA1C", Offset = "0x160BA1C", VA = "0x160BA1C")]
		internal int <refreshTrackedArcadeSchedules>b__24_0(ScheduleArcadeLevelMeta levelA, ScheduleArcadeLevelMeta levelB)
		{
			return default(int);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x160BA5C", Offset = "0x160BA5C", VA = "0x160BA5C")]
		internal bool <getMostRecentCompletedEvent>b__52_0(ScheduleArcadeLevelMeta level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x160BA78", Offset = "0x160BA78", VA = "0x160BA78")]
		internal int <getMostRecentCompletedEvent>b__52_1(ScheduleArcadeLevelMeta levelA, ScheduleArcadeLevelMeta levelB)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MappedList<ArcadeTypeMeta> arcadeTypes;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ScheduleArcadeLevelMeta> theSchedule;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ScheduleArcadeLevelMeta activeArcade;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ScheduleArcadeLevelMeta upcomingArcade;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MappedList<LevelContainer> containers;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameStateList stateList;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string previousWorld;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string previousPilot;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameDifficulty previousDifficulty;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int previousHighestRank;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long previousHighestScore;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ContainerResourcePath;

	[Token(Token = "0x170000CE")]
	private LevelContainer activeArcadeSettings
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1609974", Offset = "0x1609974", VA = "0x1609974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public static string oculusLeaderboardId
	{
		[Token(Token = "0x6001413")]
		[Address(RVA = "0x16096A8", Offset = "0x16096A8", VA = "0x16096A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x1609A5C", Offset = "0x1609A5C", VA = "0x1609A5C")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x1609C08", Offset = "0x1609C08", VA = "0x1609C08")]
	public void bootstrapDidComplete()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x160A164", Offset = "0x160A164", VA = "0x160A164")]
	private void loadState()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x160A2AC", Offset = "0x160A2AC", VA = "0x160A2AC")]
	private void saveState()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x160A374", Offset = "0x160A374", VA = "0x160A374")]
	private void defineArcadeType(Command theCommand)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x160A4A4", Offset = "0x160A4A4", VA = "0x160A4A4")]
	private void scheduleArcadeLevel(Command theCommand)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x1609E50", Offset = "0x1609E50", VA = "0x1609E50")]
	private void bootstrapArcadeLevelSchedule()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x160A8C0", Offset = "0x160A8C0", VA = "0x160A8C0")]
	private bool isValidSchedule(ScheduleArcadeLevelMeta arcadeLevel, bool isDevBuild, bool isReleaseBuild)
	{
		return default(bool);
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x160A634", Offset = "0x160A634", VA = "0x160A634")]
	public void refreshTrackedArcadeSchedules()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x160A8C8", Offset = "0x160A8C8", VA = "0x160A8C8")]
	public bool isActiveArcadeRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x160A90C", Offset = "0x160A90C", VA = "0x160A90C")]
	public bool hasPlayedActiveArcade()
	{
		return default(bool);
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x160A92C", Offset = "0x160A92C", VA = "0x160A92C")]
	public string getTimeLeftStringForActiveArcade()
	{
		return null;
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x16098D8", Offset = "0x16098D8", VA = "0x16098D8")]
	public bool isThereAnUpcomingEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x160941C", Offset = "0x160941C", VA = "0x160941C")]
	public string getTimeLeftStringUntilNextArcadeEvent()
	{
		return null;
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x160A9E8", Offset = "0x160A9E8", VA = "0x160A9E8")]
	public void configureGameSettingsForTournament()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x160AE68", Offset = "0x160AE68", VA = "0x160AE68")]
	public void applyPreTournamentSettings()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x1609DA8", Offset = "0x1609DA8", VA = "0x1609DA8")]
	public static bool isTournamentModeEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x160AC60", Offset = "0x160AC60", VA = "0x160AC60")]
	private void applySettings(string worldId, string pilotId, GameDifficulty difficulty, bool isEnteringTournament)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x160AF34", Offset = "0x160AF34", VA = "0x160AF34")]
	public LevelContainer getTournamentContainer()
	{
		return null;
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x1609914", Offset = "0x1609914", VA = "0x1609914")]
	public LevelContainer getUpcomingEventContainer()
	{
		return null;
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x160AF3C", Offset = "0x160AF3C", VA = "0x160AF3C")]
	public string currentArcadeLocalisedName()
	{
		return null;
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x160990C", Offset = "0x160990C", VA = "0x160990C")]
	public string upcomingArcadeLocalisedName()
	{
		return null;
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x1609764", Offset = "0x1609764", VA = "0x1609764")]
	public string localisedNameForScheduledArcade(ScheduleArcadeLevelMeta scheduleItem)
	{
		return null;
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x160AF44", Offset = "0x160AF44", VA = "0x160AF44")]
	public Dictionary<string, int> powerupOverrideWeights()
	{
		return null;
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x160B04C", Offset = "0x160B04C", VA = "0x160B04C")]
	public float getLevelDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x160B0F8", Offset = "0x160B0F8", VA = "0x160B0F8")]
	public float getBulletSpeedMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x160B1A0", Offset = "0x160B1A0", VA = "0x160B1A0")]
	public float getMaxScoreMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x160B248", Offset = "0x160B248", VA = "0x160B248")]
	public float getMultiplierCountdownTime()
	{
		return default(float);
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x160B2F0", Offset = "0x160B2F0", VA = "0x160B2F0")]
	public bool areGunsBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x160B3A0", Offset = "0x160B3A0", VA = "0x160B3A0")]
	public bool areMissilesBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x160B450", Offset = "0x160B450", VA = "0x160B450")]
	public void newTournamentScore(int score)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x160B58C", Offset = "0x160B58C", VA = "0x160B58C")]
	public int getArcadeRank()
	{
		return default(int);
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x160B594", Offset = "0x160B594", VA = "0x160B594")]
	public long getArcadeScore()
	{
		return default(long);
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x160B59C", Offset = "0x160B59C", VA = "0x160B59C")]
	public bool debugSetActiveEvent(ScheduleArcadeLevelMeta levelMeta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x160B6C8", Offset = "0x160B6C8", VA = "0x160B6C8")]
	public bool debugSetNewEventExpiry(int seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x160B760", Offset = "0x160B760", VA = "0x160B760")]
	public List<ScheduleArcadeLevelMeta> getAllScheduledLevels()
	{
		return null;
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x16094C8", Offset = "0x16094C8", VA = "0x16094C8")]
	public ScheduleArcadeLevelMeta getMostRecentCompletedEvent()
	{
		return null;
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x160997C", Offset = "0x160997C", VA = "0x160997C")]
	private LevelContainer getLevelContainerForSchedule(ScheduleArcadeLevelMeta schedule)
	{
		return null;
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x160B7FC", Offset = "0x160B7FC", VA = "0x160B7FC")]
	public LevelContainer getLevelContainerForId(string containerName)
	{
		return null;
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x160B8D8", Offset = "0x160B8D8", VA = "0x160B8D8")]
	public TournamentController()
	{
	}
}
[Token(Token = "0x2000270")]
public sealed class TournamentControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TournamentController tournamentController;

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x160BB00", Offset = "0x160BB00", VA = "0x160BB00", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x160BBE4", Offset = "0x160BBE4", VA = "0x160BBE4", Slot = "5")]
	public override void bootstrapDidComplete(Action completion)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x160BC1C", Offset = "0x160BC1C", VA = "0x160BC1C")]
	public TournamentControllerBooter()
	{
	}
}
[Token(Token = "0x2000271")]
public class TournamentModeTestPanel : MonoBehaviour
{
	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShootableButton buttonTemplate;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text headerLabel;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text infoLabel;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TypedObjectPool<SimpleShootableButton> buttonPool;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ScheduleArcadeLevelMeta> scheduledLevels;

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x160BC24", Offset = "0x160BC24", VA = "0x160BC24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x160BCDC", Offset = "0x160BCDC", VA = "0x160BCDC")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x160C23C", Offset = "0x160C23C", VA = "0x160C23C")]
	public void playButtonPressed(SimpleShootableButton button)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x160C414", Offset = "0x160C414", VA = "0x160C414")]
	public void updateExpireTimeForCurrentEvent(int seconds)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x160C368", Offset = "0x160C368", VA = "0x160C368")]
	private void tryRefreshPanel()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x160C670", Offset = "0x160C670", VA = "0x160C670")]
	public void playButtonHovered(SimpleShootableButton button)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x160CDA4", Offset = "0x160CDA4", VA = "0x160CDA4")]
	public TournamentModeTestPanel()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x160CDAC", Offset = "0x160CDAC", VA = "0x160CDAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C298", Offset = "0x76C298")]
	private void <playButtonHovered>b__10_0()
	{
	}
}
[Token(Token = "0x2000272")]
public sealed class FingerPointer : MonoBehaviour
{
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7621F4", Offset = "0x7621F4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FingerPointer <>4__this;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action newNotify;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x9790C8", Offset = "0x9790C8", VA = "0x9790C8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x979110", Offset = "0x979110", VA = "0x979110")]
		internal void <moveTo>b__0()
		{
		}
	}

	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762204", Offset = "0x762204")]
	private sealed class <tap>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FingerPointer <>4__this;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <down>5__2;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <delay>5__3;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x97926C", Offset = "0x97926C", VA = "0x97926C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x9792D4", Offset = "0x9792D4", VA = "0x9792D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x9790D0", Offset = "0x9790D0", VA = "0x9790D0")]
		[DebuggerHidden]
		public <tap>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x979168", Offset = "0x979168", VA = "0x979168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x97916C", Offset = "0x97916C", VA = "0x97916C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x979274", Offset = "0x979274", VA = "0x979274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SVGImage[] fingerUp;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SVGImage[] fingerDown;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float downTime;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TargetFollower follower;

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x978DCC", Offset = "0x978DCC", VA = "0x978DCC")]
	public void startTapping()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x978E74", Offset = "0x978E74", VA = "0x978E74")]
	public void stopTapping()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x978F6C", Offset = "0x978F6C", VA = "0x978F6C")]
	public void goAway()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x978FB0", Offset = "0x978FB0", VA = "0x978FB0")]
	public void moveTo(string targetKey, float moveTime, [Optional] Action newNotify)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x978DF8", Offset = "0x978DF8", VA = "0x978DF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76C2A8", Offset = "0x76C2A8")]
	private IEnumerator tap()
	{
		return null;
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x978EA0", Offset = "0x978EA0", VA = "0x978EA0")]
	private void showFinger(bool isDown)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x9790FC", Offset = "0x9790FC", VA = "0x9790FC")]
	private void playFingerDownEffect(bool isDown)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x979100", Offset = "0x979100", VA = "0x979100")]
	public FingerPointer()
	{
	}
}
[Token(Token = "0x2000273")]
public sealed class TargetAnchor : MonoBehaviour
{
	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string anchorID;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button myButton;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action actionCallback;

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x16036B8", Offset = "0x16036B8", VA = "0x16036B8")]
	public void enableButtonInteraction(bool enabled)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x16037C4", Offset = "0x16037C4", VA = "0x16037C4")]
	public void anchorWasPressed()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x16037D8", Offset = "0x16037D8", VA = "0x16037D8")]
	public void listenForButtonTap(Action tapAction)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x16038E4", Offset = "0x16038E4", VA = "0x16038E4")]
	public void unlisten()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x16038F0", Offset = "0x16038F0", VA = "0x16038F0")]
	public TargetAnchor()
	{
	}
}
[Token(Token = "0x2000274")]
public sealed class TargetFollower : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762214", Offset = "0x762214")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetFollower <>4__this;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 startPos;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetAnchor newTarget;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action arrived;

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x16041F4", Offset = "0x16041F4", VA = "0x16041F4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x1604560", Offset = "0x1604560", VA = "0x1604560")]
		internal void <moveToTarget>b__0(float lerpValue)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x160463C", Offset = "0x160463C", VA = "0x160463C")]
		internal void <moveToTarget>b__1()
		{
		}
	}

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TargetAnchor myTarget;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action targetPressedCallback;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 parkingSpace;

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x1603968", Offset = "0x1603968", VA = "0x1603968")]
	public static void enableTargetButton(string targetID, bool enabled)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1603A9C", Offset = "0x1603A9C", VA = "0x1603A9C")]
	public static Button targetButtonWithID(string targetID)
	{
		return null;
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1603BCC", Offset = "0x1603BCC", VA = "0x1603BCC")]
	public static bool targetIsAvailable(string targetID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1603CD4", Offset = "0x1603CD4", VA = "0x1603CD4")]
	public void findAndTarget(string targetID)
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1603E38", Offset = "0x1603E38", VA = "0x1603E38")]
	public TargetAnchor findTarget(string targetID)
	{
		return null;
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1603F54", Offset = "0x1603F54", VA = "0x1603F54")]
	public void target(TargetAnchor newTarget)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x1604000", Offset = "0x1604000", VA = "0x1604000")]
	public void moveToTarget(TargetAnchor newTarget, float time = 0.5f, [Optional] Action arrived)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x1603D88", Offset = "0x1603D88", VA = "0x1603D88")]
	public void untarget(bool doPark = true)
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x16041FC", Offset = "0x16041FC", VA = "0x16041FC")]
	private void park()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1604234", Offset = "0x1604234", VA = "0x1604234")]
	public void notifiyWhenTargetPressed(Action callback)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x1604318", Offset = "0x1604318", VA = "0x1604318")]
	private void targetPressed()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x160432C", Offset = "0x160432C", VA = "0x160432C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x1604470", Offset = "0x1604470", VA = "0x1604470")]
	public Button targetedButton()
	{
		return null;
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x1604558", Offset = "0x1604558", VA = "0x1604558")]
	public TargetFollower()
	{
	}
}
[Token(Token = "0x2000275")]
public enum TutorialProgress
{
	[Token(Token = "0x4001052")]
	none,
	[Token(Token = "0x4001053")]
	moveCatAround,
	[Token(Token = "0x4001054")]
	fireWithTrigger,
	[Token(Token = "0x4001055")]
	dodgeBullets,
	[Token(Token = "0x4001056")]
	powerup,
	[Token(Token = "0x4001057")]
	powerupGrabbed,
	[Token(Token = "0x4001058")]
	chargeMissiles,
	[Token(Token = "0x4001059")]
	releaseCharge,
	[Token(Token = "0x400105A")]
	lastEnemiesToFight,
	[Token(Token = "0x400105B")]
	complete
}
[Token(Token = "0x2000276")]
public class TutorialController : SingletonMono<TutorialController>
{
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762224", Offset = "0x762224")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialController <>4__this;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialProgress newTutorialProgress;

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xA8C6E0", Offset = "0xA8C6E0", VA = "0xA8C6E0")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xA8D3BC", Offset = "0xA8D3BC", VA = "0xA8D3BC")]
		internal void <tutorialHasProgressed>b__0()
		{
		}
	}

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762234", Offset = "0x762234")]
	private sealed class <moveAroundLoop>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <moveTarget>5__2;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <controllerPulseCounter>5__3;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xA8D944", Offset = "0xA8D944", VA = "0xA8D944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xA8D9AC", Offset = "0xA8D9AC", VA = "0xA8D9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xA8C9AC", Offset = "0xA8C9AC", VA = "0xA8C9AC")]
		[DebuggerHidden]
		public <moveAroundLoop>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xA8D614", Offset = "0xA8D614", VA = "0xA8D614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xA8D618", Offset = "0xA8D618", VA = "0xA8D618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xA8D94C", Offset = "0xA8D94C", VA = "0xA8D94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762244", Offset = "0x762244")]
	private sealed class <waitForPowerupGrab>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <controllerPulseCounter>5__2;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xA8DD90", Offset = "0xA8DD90", VA = "0xA8DD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xA8DDF8", Offset = "0xA8DDF8", VA = "0xA8DDF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xA8CA54", Offset = "0xA8CA54", VA = "0xA8CA54")]
		[DebuggerHidden]
		public <waitForPowerupGrab>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xA8DCCC", Offset = "0xA8DCCC", VA = "0xA8DCCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xA8DCD0", Offset = "0xA8DCD0", VA = "0xA8DCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xA8DD98", Offset = "0xA8DD98", VA = "0xA8DD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762254", Offset = "0x762254")]
	private sealed class <waitForChargeThreshold>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <controllerPulseCounter>5__2;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xA8DC5C", Offset = "0xA8DC5C", VA = "0xA8DC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xA8DCC4", Offset = "0xA8DCC4", VA = "0xA8DCC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xA8CAFC", Offset = "0xA8CAFC", VA = "0xA8CAFC")]
		[DebuggerHidden]
		public <waitForChargeThreshold>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xA8D9B4", Offset = "0xA8D9B4", VA = "0xA8D9B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xA8D9B8", Offset = "0xA8D9B8", VA = "0xA8D9B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xA8DC64", Offset = "0xA8DC64", VA = "0xA8DC64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400105C")]
	private const string TutorialPopupId = "tutorialMessage";

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768E78", Offset = "0x768E78")]
	private TutorialProgress <tutorialProgress>k__BackingField;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768E88", Offset = "0x768E88")]
	public float messageShowTime;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float positiveFeedbackMessageShowtime;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pulseStrength;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pulseTime;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768EC0", Offset = "0x768EC0")]
	public float pulseTimeOnMoveAround;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768EF8", Offset = "0x768EF8")]
	public float pulseTimeOnPowerupCharge;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768F30", Offset = "0x768F30")]
	public float pulseTimeOnSaturnCharge;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chargeTimeBeforeProgression;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerController player;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlaytimeOverseer playtimeOverseer;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PopupTextController popupTextController;

	[Token(Token = "0x170000D0")]
	public TutorialProgress tutorialProgress
	{
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xA8C298", Offset = "0xA8C298", VA = "0xA8C298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C30C", Offset = "0x76C30C")]
		get
		{
			return default(TutorialProgress);
		}
		[Token(Token = "0x6001464")]
		[Address(RVA = "0xA8C2A0", Offset = "0xA8C2A0", VA = "0xA8C2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C31C", Offset = "0x76C31C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xA8C2A8", Offset = "0xA8C2A8", VA = "0xA8C2A8")]
	public void bootstrap()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xA8C484", Offset = "0xA8C484", VA = "0xA8C484", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xA8C47C", Offset = "0xA8C47C", VA = "0xA8C47C")]
	public void resetTutorialProgress()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xA8C568", Offset = "0xA8C568", VA = "0xA8C568")]
	private void tutorialHasProgressed(TutorialProgress newTutorialProgress)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xA8C71C", Offset = "0xA8C71C", VA = "0xA8C71C")]
	private bool tryShowProgressionFeedback(TutorialProgress newTutorialProgress)
	{
		return default(bool);
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xA8C930", Offset = "0xA8C930", VA = "0xA8C930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76C32C", Offset = "0x76C32C")]
	private IEnumerator moveAroundLoop()
	{
		return null;
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xA8C9D8", Offset = "0xA8C9D8", VA = "0xA8C9D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76C390", Offset = "0x76C390")]
	private IEnumerator waitForPowerupGrab()
	{
		return null;
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xA8CA80", Offset = "0xA8CA80", VA = "0xA8CA80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76C3F4", Offset = "0x76C3F4")]
	private IEnumerator waitForChargeThreshold()
	{
		return null;
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xA8CB28", Offset = "0xA8CB28", VA = "0xA8CB28")]
	private void checkForPowerupProgression()
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xA8CBC0", Offset = "0xA8CBC0", VA = "0xA8CBC0")]
	public void progressTheTutorial()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xA8CBCC", Offset = "0xA8CBCC", VA = "0xA8CBCC")]
	private void completeTutorialInGameState()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xA8CC30", Offset = "0xA8CC30", VA = "0xA8CC30")]
	public void tutorialPostGameFlow()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xA8CCD0", Offset = "0xA8CCD0", VA = "0xA8CCD0")]
	public bool hasCompletedTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xA8CD34", Offset = "0xA8CD34", VA = "0xA8CD34")]
	public void showPowerupMessage()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xA8CF20", Offset = "0xA8CF20", VA = "0xA8CF20")]
	public bool isPlayerShootingBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xA8CF60", Offset = "0xA8CF60", VA = "0xA8CF60")]
	public bool isBlockingPilotGrabbing()
	{
		return default(bool);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xA8CFA0", Offset = "0xA8CFA0", VA = "0xA8CFA0")]
	public bool isPlayerChargeShotBlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xA8CB88", Offset = "0xA8CB88", VA = "0xA8CB88")]
	public bool isPowerupTutorialPhase()
	{
		return default(bool);
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xA8CFFC", Offset = "0xA8CFFC", VA = "0xA8CFFC")]
	public bool isTutorialBlockingDeath()
	{
		return default(bool);
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xA8D020", Offset = "0xA8D020", VA = "0xA8D020")]
	public bool onlyMissilesCanKillEnemies()
	{
		return default(bool);
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xA8C6E8", Offset = "0xA8C6E8", VA = "0xA8C6E8")]
	public bool isPlayingTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xA8CFD8", Offset = "0xA8CFD8", VA = "0xA8CFD8")]
	private bool isTutorialMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xA8CDF4", Offset = "0xA8CDF4", VA = "0xA8CDF4")]
	private void showTutorialMessage(List<string> locKeys, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xA8D05C", Offset = "0xA8D05C", VA = "0xA8D05C")]
	private void showTutorialMessageLocalised(List<string> localisedLines, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xA8D178", Offset = "0xA8D178", VA = "0xA8D178")]
	public void showTutorialMessage(string locKey, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0xA8D210", Offset = "0xA8D210", VA = "0xA8D210")]
	private void showTutorialMessageLocalised(string localisedLine, float durationSecs, bool playSound)
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xA8C8D4", Offset = "0xA8C8D4", VA = "0xA8C8D4")]
	private void dismissTutorialMessage()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0xA8D32C", Offset = "0xA8D32C", VA = "0xA8D32C")]
	public TutorialController()
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xA8D3B4", Offset = "0xA8D3B4", VA = "0xA8D3B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C458", Offset = "0x76C458")]
	private void <bootstrap>b__16_0()
	{
	}
}
[Token(Token = "0x2000277")]
public sealed class TutorialControllerBooter : BootableMonoBehaviour
{
	[Token(Token = "0x6001482")]
	[Address(RVA = "0xA8DE00", Offset = "0xA8DE00", VA = "0xA8DE00", Slot = "4")]
	public override void bootstrap(Action completion)
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xA8DEE0", Offset = "0xA8DEE0", VA = "0xA8DEE0")]
	public TutorialControllerBooter()
	{
	}
}
[Token(Token = "0x2000278")]
public class TutorialMoveTarget : MonoBehaviour
{
	[Token(Token = "0x4001069")]
	private const string TuteMoveTargetId = "tutorialMoveMessage";

	[Token(Token = "0x400106A")]
	private const string SoundEffectLoopId = "TuteMoveTargetLoop";

	[Token(Token = "0x400106B")]
	private const float BaseHoverEffectEmission = 1f;

	[Token(Token = "0x400106C")]
	private const float HoverEffectEmissionMultiplier = 1.5f;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768F68", Offset = "0x768F68")]
	public Transform meshTransform;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider myCollider;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem hoverEffect;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem successEffect;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768FA0", Offset = "0x768FA0")]
	public float hoverDuration;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delayBeforeTargetCleanup;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delayBeforeshowingNextMessage;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float activationDelay;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x768FD8", Offset = "0x768FD8")]
	public Vector3 offset;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isActive;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool hasProgressed;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float hoverTime;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.EmissionModule emitter;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 velocity;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private MightyVRControlSide activeSide;

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xA8D804", Offset = "0xA8D804", VA = "0xA8D804")]
	public void reset()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0xA8E058", Offset = "0xA8E058", VA = "0xA8E058")]
	private void updatePosition(bool jumpToPosition = false)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0xA8E254", Offset = "0xA8E254", VA = "0xA8E254")]
	private void Update()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xA8E478", Offset = "0xA8E478", VA = "0xA8E478")]
	private void playerOverlapTimeFull()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xA8DFCC", Offset = "0xA8DFCC", VA = "0xA8DFCC")]
	private void runActivationDelay()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xA8E378", Offset = "0xA8E378", VA = "0xA8E378")]
	private void playerFeedbackWhileInTarget(float scale)
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xA8E1EC", Offset = "0xA8E1EC", VA = "0xA8E1EC")]
	private void playerFeedbackForMoveTarget()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xA8E720", Offset = "0xA8E720", VA = "0xA8E720")]
	private void setHoverEffectEmission(float emissionRate)
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xA8E574", Offset = "0xA8E574", VA = "0xA8E574")]
	private void disableHoverEffect()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xA8E69C", Offset = "0xA8E69C", VA = "0xA8E69C")]
	private void hideMessage()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xA8DEE8", Offset = "0xA8DEE8", VA = "0xA8DEE8")]
	private void showMessage(string message)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xA8E788", Offset = "0xA8E788", VA = "0xA8E788")]
	private void playAppearSound()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xA8E64C", Offset = "0xA8E64C", VA = "0xA8E64C")]
	private void playProgressSound()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xA8E7D8", Offset = "0xA8E7D8", VA = "0xA8E7D8")]
	private void playSound(string eventKey)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xA8E908", Offset = "0xA8E908", VA = "0xA8E908")]
	public TutorialMoveTarget()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xA8E924", Offset = "0xA8E924", VA = "0xA8E924")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C468", Offset = "0x76C468")]
	private void <playerOverlapTimeFull>b__22_0()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xA8E9B8", Offset = "0xA8E9B8", VA = "0xA8E9B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C478", Offset = "0x76C478")]
	private void <playerOverlapTimeFull>b__22_1()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xA8EA60", Offset = "0xA8EA60", VA = "0xA8EA60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C488", Offset = "0x76C488")]
	private void <runActivationDelay>b__23_0()
	{
	}
}
[Token(Token = "0x2000279")]
[ExecuteInEditMode]
public class VDColorHandler : VDColorHandlerBase
{
	[Token(Token = "0x6001496")]
	[Address(RVA = "0xAA4248", Offset = "0xAA4248", VA = "0xAA4248")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xAA4538", Offset = "0xAA4538", VA = "0xAA4538")]
	private void Update()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xAA457C", Offset = "0xAA457C", VA = "0xAA457C")]
	public void SetColors()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xAA42E0", Offset = "0xAA42E0", VA = "0xAA42E0")]
	public void SetMesh()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xAA4640", Offset = "0xAA4640", VA = "0xAA4640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xAA46B0", Offset = "0xAA46B0", VA = "0xAA46B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xAA47D4", Offset = "0xAA47D4", VA = "0xAA47D4")]
	public VDColorHandler()
	{
	}
}
[Token(Token = "0x200027A")]
public class VDColorHandlerBase : MonoBehaviour
{
	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Color32[] colors;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Color32[] tempColors;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Mesh coloredMesh;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh originalMesh;

	[Token(Token = "0x600149D")]
	[Address(RVA = "0xAA47D8", Offset = "0xAA47D8", VA = "0xAA47D8")]
	public VDColorHandlerBase()
	{
	}
}
[Token(Token = "0x200027B")]
[ExecuteInEditMode]
public class VDSampler : MonoBehaviour
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D tex;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32[] lum;

	[Token(Token = "0x600149E")]
	[Address(RVA = "0xAA4860", Offset = "0xAA4860", VA = "0xAA4860")]
	private void Awake()
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0xAA490C", Offset = "0xAA490C", VA = "0xAA490C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xAA4A2C", Offset = "0xAA4A2C", VA = "0xAA4A2C")]
	public VDSampler()
	{
	}
}
[Token(Token = "0x200027C")]
public class VertexDirtSettingsStruct
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string occluderShader;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float samplingBias;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float samplingDistance;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float samplingAngle;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool edgeSmooth;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool invertNormals;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float edgeSmoothBias;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CameraClearFlags skyMode;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableOccluders;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color customSkyColor;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color customShadowColor;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useCustomSkyColor;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool useCustomShadowColor;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool useSkyCube;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material skyCube;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int blendModeIndex;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int colorOutputIndex;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int luminanceOutputIndex;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int bakeLayerMask;

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x14FE4FC", Offset = "0x14FE4FC", VA = "0x14FE4FC")]
	public VertexDirtSettingsStruct()
	{
	}
}
[Token(Token = "0x200027D")]
public static class VertexDirt
{
	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] v;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] n;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color32[] c;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VertexSample vertexSample;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int sampleWidth;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int sampleHeight;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int rgbBakingMode;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int alphaBakingMode;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static VertexDirtSettingsStruct settings;

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x14FC910", Offset = "0x14FC910", VA = "0x14FC910")]
	public static void Dirt(Transform[] sels)
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x14FCFE4", Offset = "0x14FCFE4", VA = "0x14FCFE4")]
	public static void UpdateShaderVariables()
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x14FD168", Offset = "0x14FD168", VA = "0x14FD168")]
	private static void PrepareVertices(Transform go)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x14FD5E0", Offset = "0x14FD5E0", VA = "0x14FD5E0")]
	public static void PrepareColors()
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x14FD678", Offset = "0x14FD678", VA = "0x14FD678")]
	private static void SmoothVertices()
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x14FDB1C", Offset = "0x14FDB1C", VA = "0x14FDB1C")]
	private static void CalcColors(GameObject camGO, Camera cam)
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x14FE2C0", Offset = "0x14FE2C0", VA = "0x14FE2C0")]
	public static void SetColorSample(Color32 c)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x14FE398", Offset = "0x14FE398", VA = "0x14FE398")]
	public static Color ColorAndLuminance(Color c)
	{
		return default(Color);
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x14FE3C8", Offset = "0x14FE3C8", VA = "0x14FE3C8")]
	public static Color32 MultiplyColor32(Color c0, Color c1)
	{
		return default(Color32);
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x14FDF74", Offset = "0x14FDF74", VA = "0x14FDF74")]
	private static void ApplyColors(Transform go)
	{
	}
}
[Token(Token = "0x200027E")]
public class VertexSample
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32 color;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int index;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isCalulated;

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x14FE4AC", Offset = "0x14FE4AC", VA = "0x14FE4AC")]
	public VertexSample()
	{
	}
}
namespace Shakespeare
{
	[Token(Token = "0x200027F")]
	public static class ColorExtensions
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x9B5B44", Offset = "0x9B5B44", VA = "0x9B5B44")]
		public static string ColorToString(Color c, char delimiter = ',')
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x9B5DF4", Offset = "0x9B5DF4", VA = "0x9B5DF4")]
		public static Color StringToColor(string str, char delimiter = ',')
		{
			return default(Color);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x9B612C", Offset = "0x9B612C", VA = "0x9B612C")]
		public static Color GetColorFromPositionInBounds(Vector3 v, Bounds b)
		{
			return default(Color);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x9B6274", Offset = "0x9B6274", VA = "0x9B6274")]
		public static Color[,,] GetColorCube(int val)
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x9B63D4", Offset = "0x9B63D4", VA = "0x9B63D4")]
		public static bool Approximately(this Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x9B6470", Offset = "0x9B6470", VA = "0x9B6470")]
		public static bool Approximately(this Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000280")]
	public static class GizmoExtensions
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] ArrowPoints;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] BlockingPoints;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] SquarePoints;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] TrianglePoints;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769040", Offset = "0x769040")]
		private static Camera <GizmoCamera>k__BackingField;

		[Token(Token = "0x170000D1")]
		public static Camera GizmoCamera
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x9B6508", Offset = "0x9B6508", VA = "0x9B6508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C4B8", Offset = "0x76C4B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x9B6570", Offset = "0x9B6570", VA = "0x9B6570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C4C8", Offset = "0x76C4C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public static bool IsGizmoCamera
		{
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x9B65E0", Offset = "0x9B65E0", VA = "0x9B65E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x9B65E8", Offset = "0x9B65E8", VA = "0x9B65E8")]
		public static void DrawTriangle(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x9B68A8", Offset = "0x9B68A8", VA = "0x9B68A8")]
		public static void DrawTriangle(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x9B6A20", Offset = "0x9B6A20", VA = "0x9B6A20")]
		public static void DrawArrow(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x9B6CE0", Offset = "0x9B6CE0", VA = "0x9B6CE0")]
		public static void DrawArrow(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x9B6E58", Offset = "0x9B6E58", VA = "0x9B6E58")]
		public static void DrawBounds(Bounds b)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x9B7104", Offset = "0x9B7104", VA = "0x9B7104")]
		public static void DrawSquare(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x9B7378", Offset = "0x9B7378", VA = "0x9B7378")]
		public static void DrawMMRect(MMRect rect)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x9B757C", Offset = "0x9B757C", VA = "0x9B757C")]
		public static void DrawBlock(Vector3 p, Quaternion r, float s)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x9B77F0", Offset = "0x9B77F0", VA = "0x9B77F0")]
		public static void DrawBlock(Matrix4x4 m)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x9B7968", Offset = "0x9B7968", VA = "0x9B7968")]
		public static void DrawCircleArray(Transform transform, float drawscale, int dir, int count, bool arrow)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x9B7E10", Offset = "0x9B7E10", VA = "0x9B7E10")]
		public static void DrawCross(Vector3 v, float s)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x9B8054", Offset = "0x9B8054", VA = "0x9B8054")]
		public static void DrawCross(Transform t, float s)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x9B82E0", Offset = "0x9B82E0", VA = "0x9B82E0")]
		public static void DrawCross(List<Vector3> v, float s)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x9B83C0", Offset = "0x9B83C0", VA = "0x9B83C0")]
		public static void DrawDashedLine(Vector3 p1, Vector3 p2, float length, float gapLength = 0f)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x9B8664", Offset = "0x9B8664", VA = "0x9B8664")]
		public static void DrawWireSquare(Vector3 pos, Vector3 extents)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x9B8948", Offset = "0x9B8948", VA = "0x9B8948")]
		public static void DrawWireSquareXY(Vector3 pos, Vector3 extents, [Optional] Transform transform)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x9B8EAC", Offset = "0x9B8EAC", VA = "0x9B8EAC")]
		public static void DrawWireCircle(Vector3 pos, float r)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x9B9060", Offset = "0x9B9060", VA = "0x9B9060")]
		public static void DrawWireCircleXZ(Vector3 pos, float r)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x9B9214", Offset = "0x9B9214", VA = "0x9B9214")]
		public static void DrawPlane(Vector3 pos, Vector3 normal, float scale)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x9B92F0", Offset = "0x9B92F0", VA = "0x9B92F0")]
		public static void DrawAxis(Transform t, float scale)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x9B94B0", Offset = "0x9B94B0", VA = "0x9B94B0")]
		public static void DrawLineArray(List<Vector3> line)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9B959C", Offset = "0x9B959C", VA = "0x9B959C")]
		public static void DrawWireCapsule(Vector3 apos, float aradius, Vector3 bpos, float bradius)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000281")]
	public class MMLine2D
	{
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 a;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 b;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 normal;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 mid;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isDirty;

		[Token(Token = "0x170000D3")]
		public Vector2 A
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x1645F38", Offset = "0x1645F38", VA = "0x1645F38")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x1645F40", Offset = "0x1645F40", VA = "0x1645F40")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public Vector2 B
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x1645F50", Offset = "0x1645F50", VA = "0x1645F50")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x1645F58", Offset = "0x1645F58", VA = "0x1645F58")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public Vector2 Normal
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x1645F68", Offset = "0x1645F68", VA = "0x1645F68")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000D6")]
		public Vector2 Center
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x164605C", Offset = "0x164605C", VA = "0x164605C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1646080", Offset = "0x1646080", VA = "0x1646080")]
		public MMLine2D()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1646114", Offset = "0x1646114", VA = "0x1646114")]
		public MMLine2D(Vector2 a, Vector2 b)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x164616C", Offset = "0x164616C", VA = "0x164616C")]
		public void SetFromXZ(MMLine3D other)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x16461F0", Offset = "0x16461F0", VA = "0x16461F0")]
		public bool IsLeft(Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x164624C", Offset = "0x164624C", VA = "0x164624C")]
		public bool SameSide(Vector2 A, Vector2 B)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x16462A0", Offset = "0x16462A0", VA = "0x16462A0")]
		public bool GetIntersection(MMLine2D other, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x16463BC", Offset = "0x16463BC", VA = "0x16463BC")]
		public bool Intersects(MMLine2D other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x164644C", Offset = "0x164644C", VA = "0x164644C")]
		public float LineToLineDistance(MMLine2D other, out Vector2 closestPoint, out Vector2 otherClosestPoint)
		{
			return default(float);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x16466D0", Offset = "0x16466D0", VA = "0x16466D0")]
		public float LineToPointDistance(Vector2 p, out Vector2 closestPoint)
		{
			return default(float);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x16468A4", Offset = "0x16468A4", VA = "0x16468A4")]
		public float LineToPointDistance(Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1645F8C", Offset = "0x1645F8C", VA = "0x1645F8C")]
		private void ResolveCalculations()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1646A1C", Offset = "0x1646A1C", VA = "0x1646A1C")]
		private static float Dot(Vector2 a, Vector2 b, Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1646A8C", Offset = "0x1646A8C", VA = "0x1646A8C")]
		private static float Cross(Vector2 a, Vector2 b, Vector2 p)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000282")]
	public class MMLine3D
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 a;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 b;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distance;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 direction;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 directionNormalised;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 v;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 pa;

		[Token(Token = "0x170000D7")]
		public Vector3 A
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x1646B08", Offset = "0x1646B08", VA = "0x1646B08")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1646B14", Offset = "0x1646B14", VA = "0x1646B14")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public Vector3 B
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1646BFC", Offset = "0x1646BFC", VA = "0x1646BFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x1646C08", Offset = "0x1646C08", VA = "0x1646C08")]
			set
			{
			}
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1646C14", Offset = "0x1646C14", VA = "0x1646C14")]
		public MMLine3D()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1646CA8", Offset = "0x1646CA8", VA = "0x1646CA8")]
		public MMLine3D(Vector3 p1, Vector3 p2)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1646D74", Offset = "0x1646D74", VA = "0x1646D74")]
		public void Set(Vector3 _p1, Vector3 _p2)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1646DD4", Offset = "0x1646DD4", VA = "0x1646DD4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1646E24", Offset = "0x1646E24", VA = "0x1646E24")]
		public float GetLength()
		{
			return default(float);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1646E2C", Offset = "0x1646E2C", VA = "0x1646E2C")]
		public Vector3 GetPositionAlongLine(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1646F04", Offset = "0x1646F04", VA = "0x1646F04")]
		public Vector3 GetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1646F10", Offset = "0x1646F10", VA = "0x1646F10")]
		public Vector3 GetHalfWay()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1646FBC", Offset = "0x1646FBC", VA = "0x1646FBC")]
		public Vector3 GetNormalizedDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1646FC8", Offset = "0x1646FC8", VA = "0x1646FC8")]
		public void GizmoDraw()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1647084", Offset = "0x1647084", VA = "0x1647084")]
		public Vector3 ClosestPointTo(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1647134", Offset = "0x1647134", VA = "0x1647134")]
		public bool GetIntersection(MMLine3D other, ref Vector3 intersection, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1647560", Offset = "0x1647560", VA = "0x1647560")]
		public static MMLine3D FindFirstIntersection(MMLine3D line, MMLine3D[] segments, ref Vector3 bestIntersection)
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1646B20", Offset = "0x1646B20", VA = "0x1646B20")]
		private void Updated()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public sealed class MMRect
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float cx;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float cy;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float width;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rot;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isDirty;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] corners;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MMLine2D[] sides;

		[Token(Token = "0x170000D9")]
		public float X
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x1647788", Offset = "0x1647788", VA = "0x1647788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1647790", Offset = "0x1647790", VA = "0x1647790")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public float Y
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x16477A0", Offset = "0x16477A0", VA = "0x16477A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x16477A8", Offset = "0x16477A8", VA = "0x16477A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float Width
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x16477B8", Offset = "0x16477B8", VA = "0x16477B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x16477C0", Offset = "0x16477C0", VA = "0x16477C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public float Height
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x16477D0", Offset = "0x16477D0", VA = "0x16477D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x16477D8", Offset = "0x16477D8", VA = "0x16477D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public float Rot
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x16477E8", Offset = "0x16477E8", VA = "0x16477E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x16477F0", Offset = "0x16477F0", VA = "0x16477F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Vector2 Center
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1647800", Offset = "0x1647800", VA = "0x1647800")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000DF")]
		public Vector2[] Corners
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x16482A8", Offset = "0x16482A8", VA = "0x16482A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public MMLine2D[] Sides
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x16482CC", Offset = "0x16482CC", VA = "0x16482CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1647830", Offset = "0x1647830", VA = "0x1647830")]
		public MMRect()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x16478C8", Offset = "0x16478C8", VA = "0x16478C8")]
		public MMRect(Rect rect)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1647D14", Offset = "0x1647D14", VA = "0x1647D14")]
		public MMRect(float cx, float cy, float width, float height, float rot = 0f)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1647DEC", Offset = "0x1647DEC", VA = "0x1647DEC")]
		public MMRect GetBoundingRect()
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1648054", Offset = "0x1648054", VA = "0x1648054")]
		public Rect ToUnityRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x16482F0", Offset = "0x16482F0", VA = "0x16482F0")]
		public bool Contains(Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x16484E4", Offset = "0x16484E4", VA = "0x16484E4")]
		public bool Intersects(MMLine2D line, out Vector2 firstIntersection, out MMLine2D intersectedSide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1648698", Offset = "0x1648698", VA = "0x1648698")]
		public MMLine2D GetClosestSide(Vector3 p)
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x16479B0", Offset = "0x16479B0", VA = "0x16479B0")]
		private void ResolveCalculations()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x16487FC", Offset = "0x16487FC", VA = "0x16487FC")]
		private Vector2 GetCorner(float hw, float hh)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	public class MMTriangle3D
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 a;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 b;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 c;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MMLine3D[] lines;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 normal;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 centroid;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 circumcenter;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float radius;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 incircle;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x16488BC", Offset = "0x16488BC", VA = "0x16488BC")]
		public MMTriangle3D(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1648B34", Offset = "0x1648B34", VA = "0x1648B34")]
		public MMTriangle3D(Vector3 a, Vector3 b, Vector3 c, bool generateLines)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1648D80", Offset = "0x1648D80", VA = "0x1648D80")]
		public static MMTriangle3D CreateEquilateral(Vector3 center, float radius)
		{
			return null;
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1648954", Offset = "0x1648954", VA = "0x1648954")]
		public Vector3 ComputeCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1648A1C", Offset = "0x1648A1C", VA = "0x1648A1C")]
		public Vector3 ComputeNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1648F98", Offset = "0x1648F98", VA = "0x1648F98")]
		public void Set(Vector3 a2, Vector3 b2, Vector3 c2)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1648B88", Offset = "0x1648B88", VA = "0x1648B88")]
		public void GenerateLines()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1648FB8", Offset = "0x1648FB8", VA = "0x1648FB8")]
		public Vector3 GetClosestPointTo(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x164925C", Offset = "0x164925C", VA = "0x164925C")]
		public Vector3 ClosestPointOnSurface(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1649980", Offset = "0x1649980", VA = "0x1649980")]
		public bool IntersectsLine(MMLine3D line, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1649DFC", Offset = "0x1649DFC", VA = "0x1649DFC")]
		public bool IntersectsTriangle(MMTriangle3D triangle, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1649EB8", Offset = "0x1649EB8", VA = "0x1649EB8")]
		public bool ContainsPoint(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x164A0E0", Offset = "0x164A0E0", VA = "0x164A0E0")]
		public bool CircumCircle(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x164A180", Offset = "0x164A180", VA = "0x164A180")]
		private static bool CircumCircle(float xp, float yp, float x1, float y1, float x2, float y2, float x3, float y3, ref Vector3 circle, ref float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x164A400", Offset = "0x164A400", VA = "0x164A400")]
		public bool SharesVertexWith(MMTriangle3D triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x164A714", Offset = "0x164A714", VA = "0x164A714")]
		public MMTriangle3D FlipVertexOrder()
		{
			return null;
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x164A758", Offset = "0x164A758", VA = "0x164A758")]
		public Vector3 FromBarycentric(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x164A7DC", Offset = "0x164A7DC", VA = "0x164A7DC")]
		public Vector3 ToBarycentric(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x164AA7C", Offset = "0x164AA7C", VA = "0x164AA7C")]
		public Vector3[] GetVertexArray()
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x164AA88", Offset = "0x164AA88", VA = "0x164AA88")]
		public Vector3[] GetVertexArray(Vector3[] array, int offset)
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x164AB94", Offset = "0x164AB94", VA = "0x164AB94")]
		public Vector3[] GetNormalArray()
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x164ABA0", Offset = "0x164ABA0", VA = "0x164ABA0")]
		public Vector3[] GetNormalArray(Vector3[] array, int offset)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x164ACAC", Offset = "0x164ACAC", VA = "0x164ACAC")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x164AE00", Offset = "0x164AE00", VA = "0x164AE00")]
		public string toString()
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x164B060", Offset = "0x164B060", VA = "0x164B060")]
		public string toStringBetter()
		{
			return null;
		}
	}
	[Token(Token = "0x2000285")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x164B540", Offset = "0x164B540", VA = "0x164B540")]
		public static bool Approximately(this Vector2 v, Vector2 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x164B60C", Offset = "0x164B60C", VA = "0x164B60C")]
		public static Vector2 Limit(this Vector2 thiz, float magnitudeMax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x164B6CC", Offset = "0x164B6CC", VA = "0x164B6CC")]
		public static float SqDistance(Vector2 v1, Vector2 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x164B714", Offset = "0x164B714", VA = "0x164B714")]
		public static float SqrMagnitude(Vector2 a)
		{
			return default(float);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x164B724", Offset = "0x164B724", VA = "0x164B724")]
		public static bool TestLineAgainstCircle(Vector2 point1, Vector2 point2, Vector2 center, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x164B77C", Offset = "0x164B77C", VA = "0x164B77C")]
		public static int FindLineCircleIntersections(float cx, float cy, float radius, Vector2 point1, Vector2 point2, out Vector2 intersection1, out Vector2 intersection2)
		{
			return default(int);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x164B9E8", Offset = "0x164B9E8", VA = "0x164B9E8")]
		public static bool IsLeftXY(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x164BA3C", Offset = "0x164BA3C", VA = "0x164BA3C")]
		public static bool IsLeftXZ(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x164BA6C", Offset = "0x164BA6C", VA = "0x164BA6C")]
		public static bool IsLeftYZ(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1646224", Offset = "0x1646224", VA = "0x1646224")]
		public static bool IsLeft(Vector2 a, Vector2 b, Vector2 c)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x164BA14", Offset = "0x164BA14", VA = "0x164BA14")]
		public static bool IsLeft(float x1, float y1, float x2, float y2, float x3, float y3)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x164BA98", Offset = "0x164BA98", VA = "0x164BA98")]
		public static bool LineIntersectionXY(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x164BC48", Offset = "0x164BC48", VA = "0x164BC48")]
		public static bool LineIntersectionXZ(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x164BCB0", Offset = "0x164BCB0", VA = "0x164BCB0")]
		public static bool LineIntersectionYZ(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, ref Vector3 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x164BD0C", Offset = "0x164BD0C", VA = "0x164BD0C")]
		public static bool LineIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x164BAEC", Offset = "0x164BAEC", VA = "0x164BAEC")]
		public static bool LineIntersection(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, ref Vector2 intersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x164BD10", Offset = "0x164BD10", VA = "0x164BD10")]
		public static Vector2 GetMin(List<Vector2> l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x164BD6C", Offset = "0x164BD6C", VA = "0x164BD6C")]
		public static Vector2 GetMin(Vector2[] l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x164BE94", Offset = "0x164BE94", VA = "0x164BE94")]
		public static Vector2 GetMax(List<Vector2> l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x164BEF0", Offset = "0x164BEF0", VA = "0x164BEF0")]
		public static Vector2 GetMax(Vector2[] l)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x164C018", Offset = "0x164C018", VA = "0x164C018")]
		public static float CalculateTotalLength(List<Vector2> l)
		{
			return default(float);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x164C140", Offset = "0x164C140", VA = "0x164C140")]
		public static Vector2 ClosestPointOnCircle(Vector2 pos, Vector2 center, float radius)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x164C224", Offset = "0x164C224", VA = "0x164C224")]
		public static Vector2 ClosestPointOnLineToPoint(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x164C36C", Offset = "0x164C36C", VA = "0x164C36C")]
		public static float PointToLineDistanceSq(Vector2 p, Vector2 a, Vector2 b, out Vector2 closestPointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x164C3CC", Offset = "0x164C3CC", VA = "0x164C3CC")]
		public static float PointToLineDistanceSq(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x164C41C", Offset = "0x164C41C", VA = "0x164C41C")]
		public static float PointToLineDistance(Vector2 p, Vector2 a, Vector2 b, out Vector2 closestPointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x164C4F8", Offset = "0x164C4F8", VA = "0x164C4F8")]
		public static float PointToLineDistance(Vector2 p, Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1646478", Offset = "0x1646478", VA = "0x1646478")]
		public static float LineToLineDistance(Vector2 aStart, Vector2 aEnd, Vector2 bStart, Vector2 bEnd, out Vector2 aClose, out Vector2 bClose)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000286")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 Epsilon;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 MinValue;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 MaxValue;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x164C5CC", Offset = "0x164C5CC", VA = "0x164C5CC")]
		public static float AngleBetterX(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x164C6B0", Offset = "0x164C6B0", VA = "0x164C6B0")]
		public static float AngleBetterY(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x164C794", Offset = "0x164C794", VA = "0x164C794")]
		public static float AngleBetterZ(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x164C878", Offset = "0x164C878", VA = "0x164C878")]
		public static Vector3 Divide(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x164C8B8", Offset = "0x164C8B8", VA = "0x164C8B8")]
		public static Vector3 Multiply(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x164C8F8", Offset = "0x164C8F8", VA = "0x164C8F8")]
		public static Vector3 Clamp(this Vector3 self, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x164CA6C", Offset = "0x164CA6C", VA = "0x164CA6C")]
		public static Vector3 Limit(this Vector3 self, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x164CB00", Offset = "0x164CB00", VA = "0x164CB00")]
		public static bool IsNAN(Vector3 check)
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x164CB54", Offset = "0x164CB54", VA = "0x164CB54")]
		public static Vector3 Abs(this Vector3 self)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x164CBFC", Offset = "0x164CBFC", VA = "0x164CBFC")]
		public static float CalculateTotalLength(Transform[] l)
		{
			return default(float);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x164CD48", Offset = "0x164CD48", VA = "0x164CD48")]
		public static float CalculateTotalLength(List<Vector3> l)
		{
			return default(float);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x164CE88", Offset = "0x164CE88", VA = "0x164CE88")]
		public static float CalculateTotalSqLength(List<Vector3> l)
		{
			return default(float);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x164CFEC", Offset = "0x164CFEC", VA = "0x164CFEC")]
		public static int GetIndexToLength(List<Vector3> l, float length)
		{
			return default(int);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x164D134", Offset = "0x164D134", VA = "0x164D134")]
		public static Vector3 GetMin(Transform[] t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x164D394", Offset = "0x164D394", VA = "0x164D394")]
		public static Vector3 GetMin(List<Vector3> l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x164D230", Offset = "0x164D230", VA = "0x164D230")]
		public static Vector3 GetMin(Vector3[] l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x164D41C", Offset = "0x164D41C", VA = "0x164D41C")]
		public static Vector3 GetMin(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x164D510", Offset = "0x164D510", VA = "0x164D510")]
		public static Vector3 GetMax(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x164D604", Offset = "0x164D604", VA = "0x164D604")]
		public static Vector3 GetMax(Transform[] t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x164D864", Offset = "0x164D864", VA = "0x164D864")]
		public static Vector3 GetMax(List<Vector3> l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x164D700", Offset = "0x164D700", VA = "0x164D700")]
		public static Vector3 GetMax(Vector3[] l)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x164D8EC", Offset = "0x164D8EC", VA = "0x164D8EC")]
		public static Vector3 ClampToBounds(this Vector3 v, Bounds bounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x164DA14", Offset = "0x164DA14", VA = "0x164DA14")]
		public static Vector3 GetExtents(Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x164DAB0", Offset = "0x164DAB0", VA = "0x164DAB0")]
		public static bool IsVector3ofVector4Zero(this Vector4 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x164C998", Offset = "0x164C998", VA = "0x164C998")]
		public static Vector3 LowerLimit(this Vector3 self, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x164DAD8", Offset = "0x164DAD8", VA = "0x164DAD8")]
		public static Vector3 Set(this Vector3 self, Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x164DAE8", Offset = "0x164DAE8", VA = "0x164DAE8")]
		public static Vector3 Mod(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x164DB78", Offset = "0x164DB78", VA = "0x164DB78")]
		public static Vector3 SetMag(this Vector3 target, float len)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x164DC24", Offset = "0x164DC24", VA = "0x164DC24")]
		public static float Heading2DXY(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x164DCA0", Offset = "0x164DCA0", VA = "0x164DCA0")]
		public static float Heading2DXZ(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x164DD1C", Offset = "0x164DD1C", VA = "0x164DD1C")]
		public static float Heading2DYZ(Vector3 vec3)
		{
			return default(float);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x164CFC8", Offset = "0x164CFC8", VA = "0x164CFC8")]
		public static float SqDistance(Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x164DD98", Offset = "0x164DD98", VA = "0x164DD98")]
		public static Vector3 SmoothStep(Vector3 f, Vector3 t, float a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x164DEA4", Offset = "0x164DEA4", VA = "0x164DEA4")]
		public static Vector3 GetDeltaToNearest(Vector3 p, float near)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x164B2B0", Offset = "0x164B2B0", VA = "0x164B2B0")]
		public static string ToStringBetter(this Vector3 self)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x164DFBC", Offset = "0x164DFBC", VA = "0x164DFBC")]
		public static string ToStringSimple(this Vector3 self)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x164E1A8", Offset = "0x164E1A8", VA = "0x164E1A8")]
		public static Vector3 SubScalar(this Vector3 self, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x164E1B8", Offset = "0x164E1B8", VA = "0x164E1B8")]
		public static Vector3 AddScalar(this Vector3 self, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x164E1C8", Offset = "0x164E1C8", VA = "0x164E1C8")]
		public static Vector3 DistanceToMove(Vector3 a, Vector3 b, float _dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x164E2BC", Offset = "0x164E2BC", VA = "0x164E2BC")]
		public static Vector3 Reflection(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x164E3FC", Offset = "0x164E3FC", VA = "0x164E3FC")]
		public static Vector3 SnapTo(Vector3 v3, float snapAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1647244", Offset = "0x1647244", VA = "0x1647244")]
		public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2, float planarErrorFactor = 1E-05f, bool includeEndPoints = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x164E6AC", Offset = "0x164E6AC", VA = "0x164E6AC")]
		public static Vector3 ClosestPointOnLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x164E880", Offset = "0x164E880", VA = "0x164E880")]
		public static float DistLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x164E9DC", Offset = "0x164E9DC", VA = "0x164E9DC")]
		public static float SqDistLineSegment(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(float);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1649C08", Offset = "0x1649C08", VA = "0x1649C08")]
		public static bool IsPointBetweenTwoPoints(this Vector3 p, Vector3 end1, Vector3 end2, float floatErrorFactor = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x164EB94", Offset = "0x164EB94", VA = "0x164EB94")]
		public static Vector3 RotateAround(this Vector3 v, Vector3 pivot, Vector3 eulerAngles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x164ECB8", Offset = "0x164ECB8", VA = "0x164ECB8")]
		public static Vector3 RotateX(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x164ED6C", Offset = "0x164ED6C", VA = "0x164ED6C")]
		public static Vector3 RotateY(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x164EE20", Offset = "0x164EE20", VA = "0x164EE20")]
		public static Vector3 RotateZ(this Vector3 v, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1649CF0", Offset = "0x1649CF0", VA = "0x1649CF0")]
		public static bool Approximately(this Vector3 v, Vector3 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x164EED4", Offset = "0x164EED4", VA = "0x164EED4")]
		public static Vector3 NormalifyForTrilateration(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x164EFDC", Offset = "0x164EFDC", VA = "0x164EFDC")]
		public static int Trilateration(Vector3 P1, Vector3 P2, Vector3 P3, float r1, float r2, float r3, out Vector3 S1, out Vector3 S2)
		{
			return default(int);
		}
	}
}
namespace UnityEngine.Analytics.Experimental
{
	[Token(Token = "0x2000287")]
	public static class AnalyticsEvent
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762264", Offset = "0x762264")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type payloadType;

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xA93964", Offset = "0xA93964", VA = "0xA93964")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xA99478", Offset = "0xA99478", VA = "0xA99478")]
			internal bool <GetStandardEventName>b__0(KeyValuePair<string, Type> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_SdkVersion;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ArgumentException_EmptyString;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ArgumentException_PayloadType;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<string, Type> k_StandardEvents;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string[] k_StandardEventNames;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7690E0", Offset = "0x7690E0")]
		private static bool <debugMode>k__BackingField;

		[Token(Token = "0x170000E1")]
		public static string sdkVersion
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0xA925DC", Offset = "0xA925DC", VA = "0xA925DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public static bool debugMode
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xA92644", Offset = "0xA92644", VA = "0xA92644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C618", Offset = "0x76C618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xA926AC", Offset = "0xA926AC", VA = "0xA926AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C628", Offset = "0x76C628")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public static string[] standardEventNames
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xA9271C", Offset = "0xA9271C", VA = "0xA9271C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001579")]
		public static T Create<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xA92864", Offset = "0xA92864", VA = "0xA92864")]
		public static AnalyticsEventPayload Create(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xA92AE8", Offset = "0xA92AE8", VA = "0xA92AE8")]
		public static AnalyticsEventPayload Create(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xA92D30", Offset = "0xA92D30", VA = "0xA92D30")]
		public static AnalyticsResult Send(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xA933AC", Offset = "0xA933AC", VA = "0xA933AC")]
		public static AnalyticsResult Send(string eventName, Vector3 position)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600157E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76C638", Offset = "0x76C638")]
		public static AnalyticsResult Send<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xA934EC", Offset = "0xA934EC", VA = "0xA934EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76C670", Offset = "0x76C670")]
		public static AnalyticsResult Send(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xA9368C", Offset = "0xA9368C", VA = "0xA9368C")]
		public static AnalyticsResult Send(AnalyticsEventPayload eventPayload)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001581")]
		public static string GetStandardEventName<T>() where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xA93748", Offset = "0xA93748", VA = "0xA93748")]
		public static string GetStandardEventName(Type payloadType)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xA9396C", Offset = "0xA9396C", VA = "0xA9396C")]
		public static Type GetStandardEventType(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xA93A40", Offset = "0xA93A40", VA = "0xA93A40")]
		public static AnalyticsResult AchievementStep(int stepIndex, string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xA93AC8", Offset = "0xA93AC8", VA = "0xA93AC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76C6A8", Offset = "0x76C6A8")]
		public static AnalyticsResult AchievementUnlock(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xA93B48", Offset = "0xA93B48", VA = "0xA93B48")]
		public static AnalyticsResult AchievementUnlocked(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xA93BC8", Offset = "0xA93BC8", VA = "0xA93BC8")]
		public static AnalyticsResult AdComplete(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xA93C60", Offset = "0xA93C60", VA = "0xA93C60")]
		public static AnalyticsResult AdComplete(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xA93CF8", Offset = "0xA93CF8", VA = "0xA93CF8")]
		public static AnalyticsResult AdOffer(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xA93D90", Offset = "0xA93D90", VA = "0xA93D90")]
		public static AnalyticsResult AdOffer(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xA93E28", Offset = "0xA93E28", VA = "0xA93E28")]
		public static AnalyticsResult AdSkip(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xA93EC0", Offset = "0xA93EC0", VA = "0xA93EC0")]
		public static AnalyticsResult AdSkip(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xA93F58", Offset = "0xA93F58", VA = "0xA93F58")]
		public static AnalyticsResult AdStart(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xA93FF0", Offset = "0xA93FF0", VA = "0xA93FF0")]
		public static AnalyticsResult AdStart(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xA94088", Offset = "0xA94088", VA = "0xA94088")]
		public static AnalyticsResult ChatMessageSent([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xA94104", Offset = "0xA94104", VA = "0xA94104")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xA94294", Offset = "0xA94294", VA = "0xA94294")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xA94420", Offset = "0xA94420", VA = "0xA94420")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xA945B0", Offset = "0xA945B0", VA = "0xA945B0")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xA94744", Offset = "0xA94744", VA = "0xA94744")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xA9490C", Offset = "0xA9490C", VA = "0xA9490C")]
		public static AnalyticsResult ConsumableAcquired(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xA94AD0", Offset = "0xA94AD0", VA = "0xA94AD0")]
		public static AnalyticsResult ConsumableSpent(string name, int amount, int balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xA94C44", Offset = "0xA94C44", VA = "0xA94C44")]
		public static AnalyticsResult ConsumableSpent(string name, float amount, float balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xA94DB8", Offset = "0xA94DB8", VA = "0xA94DB8")]
		public static AnalyticsResult ConsumableSpent(string name, decimal amount, decimal balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xA94F54", Offset = "0xA94F54", VA = "0xA94F54")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xA9512C", Offset = "0xA9512C", VA = "0xA9512C")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xA95308", Offset = "0xA95308", VA = "0xA95308")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xA954D8", Offset = "0xA954D8", VA = "0xA954D8")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xA956B4", Offset = "0xA956B4", VA = "0xA956B4")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xA958FC", Offset = "0xA958FC", VA = "0xA958FC")]
		public static AnalyticsResult CurrencyAcquired(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xA95B44", Offset = "0xA95B44", VA = "0xA95B44")]
		public static AnalyticsResult CutsceneSkip(string cutsceneName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xA95C90", Offset = "0xA95C90", VA = "0xA95C90")]
		public static AnalyticsResult GameOver([Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xA95D90", Offset = "0xA95D90", VA = "0xA95D90")]
		public static AnalyticsResult GameOver(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xA95EA0", Offset = "0xA95EA0", VA = "0xA95EA0")]
		public static AnalyticsResult GameStart([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xA95F1C", Offset = "0xA95F1C", VA = "0xA95F1C")]
		public static AnalyticsResult ItemAcquired(string name, AcquisitionType type, AcquisitionSource source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xA9608C", Offset = "0xA9608C", VA = "0xA9608C")]
		public static AnalyticsResult ItemAcquired(string name, AcquisitionType type, string source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xA96274", Offset = "0xA96274", VA = "0xA96274")]
		public static AnalyticsResult LevelComplete(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xA96374", Offset = "0xA96374", VA = "0xA96374")]
		public static AnalyticsResult LevelComplete(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xA96484", Offset = "0xA96484", VA = "0xA96484")]
		public static AnalyticsResult LevelFail(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xA96584", Offset = "0xA96584", VA = "0xA96584")]
		public static AnalyticsResult LevelFail(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xA96694", Offset = "0xA96694", VA = "0xA96694")]
		public static AnalyticsResult LevelQuit(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xA96794", Offset = "0xA96794", VA = "0xA96794")]
		public static AnalyticsResult LevelQuit(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xA968A4", Offset = "0xA968A4", VA = "0xA968A4")]
		public static AnalyticsResult LevelSkip(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xA969A4", Offset = "0xA969A4", VA = "0xA969A4")]
		public static AnalyticsResult LevelSkip(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xA96AB4", Offset = "0xA96AB4", VA = "0xA96AB4")]
		public static AnalyticsResult LevelStart(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xA96BB4", Offset = "0xA96BB4", VA = "0xA96BB4")]
		public static AnalyticsResult LevelStart(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xA96CC4", Offset = "0xA96CC4", VA = "0xA96CC4")]
		public static AnalyticsResult LevelUp(string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xA96E34", Offset = "0xA96E34", VA = "0xA96E34")]
		public static AnalyticsResult LevelUp(int oldLevelIndex, int newLevelIndex, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xA96F40", Offset = "0xA96F40", VA = "0xA96F40")]
		public static AnalyticsResult LevelUp(int oldLevelIndex, int newLevelIndex, string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xA97148", Offset = "0xA97148", VA = "0xA97148")]
		public static AnalyticsResult PostAdAction(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xA97278", Offset = "0xA97278", VA = "0xA97278")]
		public static AnalyticsResult PostAdAction(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xA973A8", Offset = "0xA973A8", VA = "0xA973A8")]
		public static AnalyticsResult PostInstallAction([Optional] string actionId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xA974F4", Offset = "0xA974F4", VA = "0xA974F4")]
		public static AnalyticsResult PushNotificationClick(string messageId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xA97640", Offset = "0xA97640", VA = "0xA97640")]
		public static AnalyticsResult PushNotificationEnable([Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xA976BC", Offset = "0xA976BC", VA = "0xA976BC")]
		public static AnalyticsResult ScreenVisit(ScreenName screenName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xA977EC", Offset = "0xA977EC", VA = "0xA977EC")]
		public static AnalyticsResult ScreenVisit(string screenName, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xA97938", Offset = "0xA97938", VA = "0xA97938")]
		public static AnalyticsResult SocialShare(ShareType shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xA97A90", Offset = "0xA97A90", VA = "0xA97A90")]
		public static AnalyticsResult SocialShare(ShareType shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xA97BD0", Offset = "0xA97BD0", VA = "0xA97BD0")]
		public static AnalyticsResult SocialShare(string shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xA97D10", Offset = "0xA97D10", VA = "0xA97D10")]
		public static AnalyticsResult SocialShare(string shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xA97E80", Offset = "0xA97E80", VA = "0xA97E80")]
		public static AnalyticsResult StoreItemClick(StoreType storeType, string itemId, [Optional] string itemName, [Optional] Dictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xA9803C", Offset = "0xA9803C", VA = "0xA9803C")]
		public static AnalyticsResult StoreOpened(StoreType storeType, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xA981A0", Offset = "0xA981A0", VA = "0xA981A0")]
		public static AnalyticsResult TutorialComplete([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xA982A0", Offset = "0xA982A0", VA = "0xA982A0")]
		public static AnalyticsResult TutorialSkip([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xA983A0", Offset = "0xA983A0", VA = "0xA983A0")]
		public static AnalyticsResult TutorialStart([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xA984A0", Offset = "0xA984A0", VA = "0xA984A0")]
		public static AnalyticsResult TutorialStep(int stepIndex, [Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xA98620", Offset = "0xA98620", VA = "0xA98620")]
		public static AnalyticsResult UserSignup(string authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xA9876C", Offset = "0xA9876C", VA = "0xA9876C")]
		public static AnalyticsResult UserSignup(AuthorizationNetwork authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return default(AnalyticsResult);
		}
	}
	[Token(Token = "0x2000288")]
	public enum StoreType
	{
		[Token(Token = "0x40010CD")]
		Soft,
		[Token(Token = "0x40010CE")]
		Premium
	}
	[Token(Token = "0x2000289")]
	public enum AcquisitionType
	{
		[Token(Token = "0x40010D0")]
		Soft,
		[Token(Token = "0x40010D1")]
		Premium
	}
	[Token(Token = "0x200028A")]
	public enum AcquisitionSource
	{
		[Token(Token = "0x40010D3")]
		None,
		[Token(Token = "0x40010D4")]
		Store,
		[Token(Token = "0x40010D5")]
		Earned,
		[Token(Token = "0x40010D6")]
		Promotion,
		[Token(Token = "0x40010D7")]
		Gift,
		[Token(Token = "0x40010D8")]
		RewardedAd,
		[Token(Token = "0x40010D9")]
		TimedReward,
		[Token(Token = "0x40010DA")]
		SocialReward
	}
	[Token(Token = "0x200028B")]
	public enum AdvertisingNetwork
	{
		[Token(Token = "0x40010DC")]
		None,
		[Token(Token = "0x40010DD")]
		Aarki,
		[Token(Token = "0x40010DE")]
		AdAction,
		[Token(Token = "0x40010DF")]
		AdapTv,
		[Token(Token = "0x40010E0")]
		Adcash,
		[Token(Token = "0x40010E1")]
		AdColony,
		[Token(Token = "0x40010E2")]
		AdMob,
		[Token(Token = "0x40010E3")]
		AerServ,
		[Token(Token = "0x40010E4")]
		Airpush,
		[Token(Token = "0x40010E5")]
		Altrooz,
		[Token(Token = "0x40010E6")]
		Ampush,
		[Token(Token = "0x40010E7")]
		AppleSearch,
		[Token(Token = "0x40010E8")]
		AppLift,
		[Token(Token = "0x40010E9")]
		AppLovin,
		[Token(Token = "0x40010EA")]
		Appnext,
		[Token(Token = "0x40010EB")]
		AppNexus,
		[Token(Token = "0x40010EC")]
		Appoday,
		[Token(Token = "0x40010ED")]
		Appodeal,
		[Token(Token = "0x40010EE")]
		AppsUnion,
		[Token(Token = "0x40010EF")]
		Avazu,
		[Token(Token = "0x40010F0")]
		BlueStacks,
		[Token(Token = "0x40010F1")]
		Chartboost,
		[Token(Token = "0x40010F2")]
		ClickDealer,
		[Token(Token = "0x40010F3")]
		CPAlead,
		[Token(Token = "0x40010F4")]
		CrossChannel,
		[Token(Token = "0x40010F5")]
		CrossInstall,
		[Token(Token = "0x40010F6")]
		Epom,
		[Token(Token = "0x40010F7")]
		Facebook,
		[Token(Token = "0x40010F8")]
		Fetch,
		[Token(Token = "0x40010F9")]
		Fiksu,
		[Token(Token = "0x40010FA")]
		Flurry,
		[Token(Token = "0x40010FB")]
		Fuse,
		[Token(Token = "0x40010FC")]
		Fyber,
		[Token(Token = "0x40010FD")]
		Glispa,
		[Token(Token = "0x40010FE")]
		Google,
		[Token(Token = "0x40010FF")]
		GrowMobile,
		[Token(Token = "0x4001100")]
		HeyZap,
		[Token(Token = "0x4001101")]
		HyperMX,
		[Token(Token = "0x4001102")]
		Iddiction,
		[Token(Token = "0x4001103")]
		IndexExchange,
		[Token(Token = "0x4001104")]
		InMobi,
		[Token(Token = "0x4001105")]
		Instagram,
		[Token(Token = "0x4001106")]
		Instal,
		[Token(Token = "0x4001107")]
		Ipsos,
		[Token(Token = "0x4001108")]
		IronSource,
		[Token(Token = "0x4001109")]
		Jirbo,
		[Token(Token = "0x400110A")]
		Kimia,
		[Token(Token = "0x400110B")]
		Leadbolt,
		[Token(Token = "0x400110C")]
		Liftoff,
		[Token(Token = "0x400110D")]
		Manage,
		[Token(Token = "0x400110E")]
		Matomy,
		[Token(Token = "0x400110F")]
		MediaBrix,
		[Token(Token = "0x4001110")]
		MillenialMedia,
		[Token(Token = "0x4001111")]
		Minimob,
		[Token(Token = "0x4001112")]
		MobAir,
		[Token(Token = "0x4001113")]
		MobileCore,
		[Token(Token = "0x4001114")]
		Mobobeat,
		[Token(Token = "0x4001115")]
		Mobusi,
		[Token(Token = "0x4001116")]
		Mobvista,
		[Token(Token = "0x4001117")]
		MoPub,
		[Token(Token = "0x4001118")]
		Motive,
		[Token(Token = "0x4001119")]
		Msales,
		[Token(Token = "0x400111A")]
		NativeX,
		[Token(Token = "0x400111B")]
		OpenX,
		[Token(Token = "0x400111C")]
		Pandora,
		[Token(Token = "0x400111D")]
		PropellerAds,
		[Token(Token = "0x400111E")]
		Revmob,
		[Token(Token = "0x400111F")]
		RubiconProject,
		[Token(Token = "0x4001120")]
		SiriusAd,
		[Token(Token = "0x4001121")]
		Smaato,
		[Token(Token = "0x4001122")]
		SponsorPay,
		[Token(Token = "0x4001123")]
		SpotXchange,
		[Token(Token = "0x4001124")]
		StartApp,
		[Token(Token = "0x4001125")]
		Tapjoy,
		[Token(Token = "0x4001126")]
		Taptica,
		[Token(Token = "0x4001127")]
		Tremor,
		[Token(Token = "0x4001128")]
		TrialPay,
		[Token(Token = "0x4001129")]
		Twitter,
		[Token(Token = "0x400112A")]
		UnityAds,
		[Token(Token = "0x400112B")]
		Vungle,
		[Token(Token = "0x400112C")]
		Yeahmobi,
		[Token(Token = "0x400112D")]
		YuMe
	}
	[Token(Token = "0x200028C")]
	public enum AuthorizationNetwork
	{
		[Token(Token = "0x400112F")]
		None,
		[Token(Token = "0x4001130")]
		Internal,
		[Token(Token = "0x4001131")]
		Facebook,
		[Token(Token = "0x4001132")]
		Twitter,
		[Token(Token = "0x4001133")]
		Google,
		[Token(Token = "0x4001134")]
		GameCenter
	}
	[Token(Token = "0x200028D")]
	public enum SocialNetwork
	{
		[Token(Token = "0x4001136")]
		None,
		[Token(Token = "0x4001137")]
		Facebook,
		[Token(Token = "0x4001138")]
		Twitter,
		[Token(Token = "0x4001139")]
		Instagram,
		[Token(Token = "0x400113A")]
		GooglePlus,
		[Token(Token = "0x400113B")]
		Pinterest,
		[Token(Token = "0x400113C")]
		WeChat,
		[Token(Token = "0x400113D")]
		Weibo,
		[Token(Token = "0x400113E")]
		QQ,
		[Token(Token = "0x400113F")]
		Zhihu,
		[Token(Token = "0x4001140")]
		VK,
		[Token(Token = "0x4001141")]
		OK_ru
	}
	[Token(Token = "0x200028E")]
	public enum ShareType
	{
		[Token(Token = "0x4001143")]
		None,
		[Token(Token = "0x4001144")]
		TextOnly,
		[Token(Token = "0x4001145")]
		Image,
		[Token(Token = "0x4001146")]
		Video,
		[Token(Token = "0x4001147")]
		Invite,
		[Token(Token = "0x4001148")]
		Achievement
	}
	[Token(Token = "0x200028F")]
	public enum ScreenName
	{
		[Token(Token = "0x400114A")]
		None,
		[Token(Token = "0x400114B")]
		MainMenu,
		[Token(Token = "0x400114C")]
		Settings,
		[Token(Token = "0x400114D")]
		Map,
		[Token(Token = "0x400114E")]
		Lose,
		[Token(Token = "0x400114F")]
		Win,
		[Token(Token = "0x4001150")]
		Credits,
		[Token(Token = "0x4001151")]
		Title,
		[Token(Token = "0x4001152")]
		IAPPromo,
		[Token(Token = "0x4001153")]
		CrossPromo,
		[Token(Token = "0x4001154")]
		FeaturePromo,
		[Token(Token = "0x4001155")]
		Hint,
		[Token(Token = "0x4001156")]
		Pause,
		[Token(Token = "0x4001157")]
		Inventory,
		[Token(Token = "0x4001158")]
		Leaderboard,
		[Token(Token = "0x4001159")]
		Achievements,
		[Token(Token = "0x400115A")]
		Lobby
	}
	[Serializable]
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x76083C", Offset = "0x76083C")]
	public class AnalyticsEventPayload : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762274", Offset = "0x762274")]
		private sealed class <>c__30<T>
		{
			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__30<T> <>9;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__30_0;

			[Token(Token = "0x6001CE6")]
			public <>c__30()
			{
			}

			[Token(Token = "0x6001CE7")]
			internal string <ValidateDataValueExistsInEnum>b__30_0(T x)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x762284", Offset = "0x762284")]
		private sealed class <>c__44<T>
		{
			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__44<T> <>9;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__44_0;

			[Token(Token = "0x6001CE9")]
			public <>c__44()
			{
			}

			[Token(Token = "0x6001CEA")]
			internal string <ConvertStringToEnum>b__44_0(T x)
			{
				return null;
			}
		}

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_WarningFormat_NullValue;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ErrorFormat_InvalidType;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ErrorFormat_InvalidValue;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ErrorFormat_RequiredParamNotSet;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_StandardEventPrefix;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_Error_TooManyParams;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string k_Error_NameNullOrEmpty;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string k_Error_KeyValueCountNotEqual;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string k_PrefsKey_MaxParams;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int k_DefaultMaxParams;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ReadOnlyField]
		private string m_EventName;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private readonly List<string> m_EventDataKeys;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private readonly List<object> m_EventDataValues;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, object> m_EventData;

		[Token(Token = "0x170000E4")]
		public virtual string eventName
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xA994E0", Offset = "0xA994E0", VA = "0xA994E0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xA994E8", Offset = "0xA994E8", VA = "0xA994E8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public Dictionary<string, object> eventData
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xA9958C", Offset = "0xA9958C", VA = "0xA9958C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public int maxParams
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xA99748", Offset = "0xA99748", VA = "0xA99748")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xA99814", Offset = "0xA99814", VA = "0xA99814")]
			set
			{
			}
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xA90D70", Offset = "0xA90D70", VA = "0xA90D70", Slot = "6")]
		protected virtual void ValidatePayload()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xA90EDC", Offset = "0xA90EDC", VA = "0xA90EDC", Slot = "7")]
		protected virtual void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xA998C8", Offset = "0xA998C8", VA = "0xA998C8", Slot = "8")]
		protected virtual void OnValidationFailed(string message)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xA90D74", Offset = "0xA90D74", VA = "0xA90D74")]
		protected void ValidateDataKeyExists(string key)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xA999A8", Offset = "0xA999A8", VA = "0xA999A8")]
		protected void ValidateAtLeastOneDataKeyExists(params string[] keys)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xA99BF0", Offset = "0xA99BF0", VA = "0xA99BF0")]
		protected void ValidateAllDataKeysExist(params string[] keys)
		{
		}

		[Token(Token = "0x60015D1")]
		protected void ValidateDataValueType<T>(string key, object value)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xA99D80", Offset = "0xA99D80", VA = "0xA99D80")]
		protected void ValidateDataValueTypeIsNumeric(string key, object value)
		{
		}

		[Token(Token = "0x60015D3")]
		protected void ValidateDataValueExistsInEnum<T>(string key, string value)
		{
		}

		[Token(Token = "0x60015D4")]
		protected static string GetStandardParamValue<T>(T value) where T : struct
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		public static T CreateInstance<T>([Optional] IDictionary<string, object> eventData) where T : AnalyticsEventPayload
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xA92C88", Offset = "0xA92C88", VA = "0xA92C88")]
		public static AnalyticsEventPayload CreateInstance(Type payloadType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xA929A8", Offset = "0xA929A8", VA = "0xA929A8")]
		public static AnalyticsEventPayload CreateInstance(string eventName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xA99590", Offset = "0xA99590", VA = "0xA99590")]
		public Dictionary<string, object> GetEventData()
		{
			return null;
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xA99E78", Offset = "0xA99E78", VA = "0xA99E78")]
		public void SetEventData(IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xA99934", Offset = "0xA99934", VA = "0xA99934")]
		public bool HasParam(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		public T GetParam<T>(string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xA90A34", Offset = "0xA90A34", VA = "0xA90A34")]
		public void SetParam(string key, object value)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xA92E7C", Offset = "0xA92E7C", VA = "0xA92E7C")]
		public AnalyticsResult Send()
		{
			return default(AnalyticsResult);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xA99ACC", Offset = "0xA99ACC", VA = "0xA99ACC")]
		private static string JoinWords(string conjunction, string[] words)
		{
			return null;
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xA9A330", Offset = "0xA9A330", VA = "0xA9A330")]
		private static string SplitCamelCase(string input)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xA9A11C", Offset = "0xA9A11C", VA = "0xA9A11C")]
		private static string ConvertEnumToString(object value)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		private static T ConvertStringToEnum<T>(string value)
		{
			return (T)null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xA90F44", Offset = "0xA90F44", VA = "0xA90F44")]
		public AnalyticsEventPayload()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class AnalyticsEventPayloadException : UnityException
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xA9992C", Offset = "0xA9992C", VA = "0xA9992C")]
		public AnalyticsEventPayloadException(string message)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class ReadOnlyFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xA9FEAC", Offset = "0xA9FEAC", VA = "0xA9FEAC")]
		public ReadOnlyFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public abstract class AchievementPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_AchievementId;

		[Token(Token = "0x170000E7")]
		public string achievementId
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xA90938", Offset = "0xA90938", VA = "0xA90938")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xA909B4", Offset = "0xA909B4", VA = "0xA909B4")]
			set
			{
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xA90D00", Offset = "0xA90D00", VA = "0xA90D00", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xA90E28", Offset = "0xA90E28", VA = "0xA90E28", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60015EA")]
		protected static T CreateInstance<T>(string achievementId, [Optional] IDictionary<string, object> eventData) where T : AchievementPayload
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xA90EE0", Offset = "0xA90EE0", VA = "0xA90EE0")]
		protected AchievementPayload()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public abstract class AdPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_PlacementId;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Network;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Rewarded;

		[Token(Token = "0x170000E8")]
		public string placementId
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xA91BD4", Offset = "0xA91BD4", VA = "0xA91BD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xA91C50", Offset = "0xA91C50", VA = "0xA91C50")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public string network
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xA91CD0", Offset = "0xA91CD0", VA = "0xA91CD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xA91D4C", Offset = "0xA91D4C", VA = "0xA91D4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public string rewarded
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xA91DCC", Offset = "0xA91DCC", VA = "0xA91DCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xA91E48", Offset = "0xA91E48", VA = "0xA91E48")]
			set
			{
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xA91EC8", Offset = "0xA91EC8", VA = "0xA91EC8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xA91F38", Offset = "0xA91F38", VA = "0xA91F38", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60015F5")]
		protected static T CreateInstance<T>(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData) where T : AdPayload
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		protected static T CreateInstance<T>(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData) where T : AdPayload
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xA918BC", Offset = "0xA918BC", VA = "0xA918BC")]
		protected AdPayload()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public abstract class GamePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_LevelIndex;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_LevelName;

		[Token(Token = "0x170000EB")]
		public int levelIndex
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xA9D2B8", Offset = "0xA9D2B8", VA = "0xA9D2B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xA9D334", Offset = "0xA9D334", VA = "0xA9D334")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public string levelName
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xA9D3D4", Offset = "0xA9D3D4", VA = "0xA9D3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xA9D450", Offset = "0xA9D450", VA = "0xA9D450")]
			set
			{
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xA9D4D0", Offset = "0xA9D4D0", VA = "0xA9D4D0", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60015FE")]
		protected static T CreateInstance<T>(string levelName, [Optional] IDictionary<string, object> eventData) where T : GamePayload
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		protected static T CreateInstance<T>(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData) where T : GamePayload
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xA9D1F8", Offset = "0xA9D1F8", VA = "0xA9D1F8")]
		protected GamePayload()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public abstract class LevelPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_LevelIndex;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_LevelName;

		[Token(Token = "0x170000ED")]
		public int levelIndex
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xA9E31C", Offset = "0xA9E31C", VA = "0xA9E31C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xA9E398", Offset = "0xA9E398", VA = "0xA9E398")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public string levelName
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xA9E438", Offset = "0xA9E438", VA = "0xA9E438")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xA9E4B4", Offset = "0xA9E4B4", VA = "0xA9E4B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xA9E534", Offset = "0xA9E534", VA = "0xA9E534", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xA9E65C", Offset = "0xA9E65C", VA = "0xA9E65C", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001608")]
		protected static T CreateInstance<T>(string levelName, [Optional] IDictionary<string, object> eventData) where T : LevelPayload
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		protected static T CreateInstance<T>(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData) where T : LevelPayload
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xA9E134", Offset = "0xA9E134", VA = "0xA9E134")]
		protected LevelPayload()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public abstract class TutorialPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string k_ParamKey_TutorialId;

		[Token(Token = "0x170000EF")]
		public string tutorialId
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xAA15B0", Offset = "0xAA15B0", VA = "0xAA15B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xAA162C", Offset = "0xAA162C", VA = "0xAA162C")]
			set
			{
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xAA16AC", Offset = "0xAA16AC", VA = "0xAA16AC", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600160F")]
		protected static T CreateInstance<T>([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData) where T : TutorialPayload
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xAA14F0", Offset = "0xAA14F0", VA = "0xAA14F0")]
		protected TutorialPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7608A4", Offset = "0x7608A4")]
	public class AchievementStepPayload : AchievementPayload
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_StepIndex;

		[Token(Token = "0x170000F0")]
		public override string eventName
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xA91084", Offset = "0xA91084", VA = "0xA91084", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public int stepIndex
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xA910EC", Offset = "0xA910EC", VA = "0xA910EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xA91168", Offset = "0xA91168", VA = "0xA91168")]
			set
			{
			}
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xA91208", Offset = "0xA91208", VA = "0xA91208", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xA91280", Offset = "0xA91280", VA = "0xA91280", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xA91344", Offset = "0xA91344", VA = "0xA91344")]
		public static AchievementStepPayload CreateInstance(int stepIndex, string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xA9143C", Offset = "0xA9143C", VA = "0xA9143C")]
		public AchievementStepPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760904", Offset = "0x760904")]
	public class AchievementUnlockedPayload : AchievementPayload
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F2")]
		public override string eventName
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xA91518", Offset = "0xA91518", VA = "0xA91518", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xA91580", Offset = "0xA91580", VA = "0xA91580")]
		public new static AchievementUnlockedPayload CreateInstance(string achievementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xA91600", Offset = "0xA91600", VA = "0xA91600")]
		public AchievementUnlockedPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760964", Offset = "0x760964")]
	public class AdCompletePayload : AdPayload
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F3")]
		public override string eventName
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xA916C0", Offset = "0xA916C0", VA = "0xA916C0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xA91728", Offset = "0xA91728", VA = "0xA91728")]
		public static AdCompletePayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xA917C0", Offset = "0xA917C0", VA = "0xA917C0")]
		public static AdCompletePayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xA91858", Offset = "0xA91858", VA = "0xA91858")]
		public AdCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7609C4", Offset = "0x7609C4")]
	public class AdOfferPayload : AdPayload
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F4")]
		public override string eventName
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xA9197C", Offset = "0xA9197C", VA = "0xA9197C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xA919E4", Offset = "0xA919E4", VA = "0xA919E4")]
		public static AdOfferPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xA91A7C", Offset = "0xA91A7C", VA = "0xA91A7C")]
		public static AdOfferPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xA91B14", Offset = "0xA91B14", VA = "0xA91B14")]
		public AdOfferPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760A24", Offset = "0x760A24")]
	public class AdSkipPayload : AdPayload
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F5")]
		public override string eventName
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xA9212C", Offset = "0xA9212C", VA = "0xA9212C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xA92194", Offset = "0xA92194", VA = "0xA92194")]
		public static AdSkipPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xA9222C", Offset = "0xA9222C", VA = "0xA9222C")]
		public static AdSkipPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xA922C4", Offset = "0xA922C4", VA = "0xA922C4")]
		public AdSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760A84", Offset = "0x760A84")]
	public class AdStartPayload : AdPayload
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F6")]
		public override string eventName
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xA92384", Offset = "0xA92384", VA = "0xA92384", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xA923EC", Offset = "0xA923EC", VA = "0xA923EC")]
		public static AdStartPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xA92484", Offset = "0xA92484", VA = "0xA92484")]
		public static AdStartPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xA9251C", Offset = "0xA9251C", VA = "0xA9251C")]
		public AdStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760AE4", Offset = "0x760AE4")]
	public class ChatMessageSentPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x170000F7")]
		public override string eventName
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xA9A528", Offset = "0xA9A528", VA = "0xA9A528", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xA9A590", Offset = "0xA9A590", VA = "0xA9A590")]
		public ChatMessageSentPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760B44", Offset = "0x760B44")]
	public class ConsumableAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x170000F8")]
		public override string eventName
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xA9A650", Offset = "0xA9A650", VA = "0xA9A650", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public AcquisitionType type
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xA9A6B8", Offset = "0xA9A6B8", VA = "0xA9A6B8")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xA9A734", Offset = "0xA9A734", VA = "0xA9A734")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public string source
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xA9A7D4", Offset = "0xA9A7D4", VA = "0xA9A7D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xA9A850", Offset = "0xA9A850", VA = "0xA9A850")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public new string name
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xA9A8D0", Offset = "0xA9A8D0", VA = "0xA9A8D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163B")]
			[Address(RVA = "0xA9A94C", Offset = "0xA9A94C", VA = "0xA9A94C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public object amount
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xA9A9CC", Offset = "0xA9A9CC", VA = "0xA9A9CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163D")]
			[Address(RVA = "0xA9AA48", Offset = "0xA9AA48", VA = "0xA9AA48")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public object balance
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0xA9AAC8", Offset = "0xA9AAC8", VA = "0xA9AAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163F")]
			[Address(RVA = "0xA9AB44", Offset = "0xA9AB44", VA = "0xA9AB44")]
			set
			{
			}
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xA9ABC4", Offset = "0xA9ABC4", VA = "0xA9ABC4", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xA9ADAC", Offset = "0xA9ADAC", VA = "0xA9ADAC", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xA941B4", Offset = "0xA941B4", VA = "0xA941B4")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xA94344", Offset = "0xA94344", VA = "0xA94344")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, int amount, int balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xA944D0", Offset = "0xA944D0", VA = "0xA944D0")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xA94660", Offset = "0xA94660", VA = "0xA94660")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, float amount, float balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xA94814", Offset = "0xA94814", VA = "0xA94814")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xA949DC", Offset = "0xA949DC", VA = "0xA949DC")]
		public static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xA9AFD4", Offset = "0xA9AFD4", VA = "0xA9AFD4")]
		private static ConsumableAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, object amount, object balance, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xA9B138", Offset = "0xA9B138", VA = "0xA9B138")]
		public ConsumableAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760BA4", Offset = "0x760BA4")]
	public class ConsumableSpentPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Purchase;

		[Token(Token = "0x170000FE")]
		public override string eventName
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xA9B284", Offset = "0xA9B284", VA = "0xA9B284", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public new string name
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xA9B2EC", Offset = "0xA9B2EC", VA = "0xA9B2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xA9B368", Offset = "0xA9B368", VA = "0xA9B368")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public object amount
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xA9B3E8", Offset = "0xA9B3E8", VA = "0xA9B3E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xA9B464", Offset = "0xA9B464", VA = "0xA9B464")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public object balance
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xA9B4E4", Offset = "0xA9B4E4", VA = "0xA9B4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xA9B560", Offset = "0xA9B560", VA = "0xA9B560")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public string itemPurchased
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xA9B5E0", Offset = "0xA9B5E0", VA = "0xA9B5E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001653")]
			[Address(RVA = "0xA9B65C", Offset = "0xA9B65C", VA = "0xA9B65C")]
			set
			{
			}
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xA9B6DC", Offset = "0xA9B6DC", VA = "0xA9B6DC", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xA9B844", Offset = "0xA9B844", VA = "0xA9B844", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xA94B70", Offset = "0xA94B70", VA = "0xA94B70")]
		public static ConsumableSpentPayload CreateInstance(string name, int amount, int balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xA94CE4", Offset = "0xA94CE4", VA = "0xA94CE4")]
		public static ConsumableSpentPayload CreateInstance(string name, float amount, float balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xA94E70", Offset = "0xA94E70", VA = "0xA94E70")]
		public static ConsumableSpentPayload CreateInstance(string name, decimal amount, decimal balance, [Optional] string itemPurchased, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xA9B9B0", Offset = "0xA9B9B0", VA = "0xA9B9B0")]
		private static ConsumableSpentPayload CreateInstance(string name, object amount, object balance, string itemPurchased, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xA9BAD8", Offset = "0xA9BAD8", VA = "0xA9BAD8")]
		public ConsumableSpentPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760C04", Offset = "0x760C04")]
	public class CurrencyAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_Amount;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string k_ParamKey_Balance;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string k_ParamKey_PurchaseId;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string k_ParamKey_PurchaseName;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string k_ParamKey_PurchaseQty;

		[Token(Token = "0x17000103")]
		public override string eventName
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xA9BC08", Offset = "0xA9BC08", VA = "0xA9BC08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public AcquisitionType type
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0xA9BC70", Offset = "0xA9BC70", VA = "0xA9BC70")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xA9BCEC", Offset = "0xA9BCEC", VA = "0xA9BCEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public string source
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xA9BD8C", Offset = "0xA9BD8C", VA = "0xA9BD8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xA9BE08", Offset = "0xA9BE08", VA = "0xA9BE08")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public new string name
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0xA9BE88", Offset = "0xA9BE88", VA = "0xA9BE88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xA9BF04", Offset = "0xA9BF04", VA = "0xA9BF04")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public object amount
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0xA9BF84", Offset = "0xA9BF84", VA = "0xA9BF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xA9C000", Offset = "0xA9C000", VA = "0xA9C000")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public object balance
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xA9C080", Offset = "0xA9C080", VA = "0xA9C080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xA9C0FC", Offset = "0xA9C0FC", VA = "0xA9C0FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public string purchaseId
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xA9C17C", Offset = "0xA9C17C", VA = "0xA9C17C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xA9C1F8", Offset = "0xA9C1F8", VA = "0xA9C1F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public string purchaseName
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xA9C278", Offset = "0xA9C278", VA = "0xA9C278")]
			get
			{
				return null;
			}
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xA9C2F4", Offset = "0xA9C2F4", VA = "0xA9C2F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public int purchaseQty
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xA9C374", Offset = "0xA9C374", VA = "0xA9C374")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xA9C3F0", Offset = "0xA9C3F0", VA = "0xA9C3F0")]
			set
			{
			}
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xA9C490", Offset = "0xA9C490", VA = "0xA9C490", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xA9C678", Offset = "0xA9C678", VA = "0xA9C678", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xA9C93C", Offset = "0xA9C93C", VA = "0xA9C93C")]
		public void SetSource(AcquisitionSource source)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xA9502C", Offset = "0xA9502C", VA = "0xA9502C")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xA95204", Offset = "0xA95204", VA = "0xA95204")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, int amount, int balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xA953D8", Offset = "0xA953D8", VA = "0xA953D8")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xA955A8", Offset = "0xA955A8", VA = "0xA955A8")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, float amount, float balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xA957EC", Offset = "0xA957EC", VA = "0xA957EC")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xA95A34", Offset = "0xA95A34", VA = "0xA95A34")]
		public static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, decimal amount, decimal balance, [Optional] string purchaseId, [Optional] string purchaseName, int purchaseQty = 1, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xA9C9F8", Offset = "0xA9C9F8", VA = "0xA9C9F8")]
		private static CurrencyAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, object amount, object balance, string purchaseId, string purchaseName, int purchaseQty, IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xA9CC28", Offset = "0xA9CC28", VA = "0xA9CC28")]
		public CurrencyAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760C64", Offset = "0x760C64")]
	public class CutsceneSkipPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_CutsceneName;

		[Token(Token = "0x1700010C")]
		public override string eventName
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0xA9CDC8", Offset = "0xA9CDC8", VA = "0xA9CDC8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public string CutsceneName
		{
			[Token(Token = "0x600167A")]
			[Address(RVA = "0xA9CE30", Offset = "0xA9CE30", VA = "0xA9CE30")]
			get
			{
				return null;
			}
			[Token(Token = "0x600167B")]
			[Address(RVA = "0xA9CEAC", Offset = "0xA9CEAC", VA = "0xA9CEAC")]
			set
			{
			}
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xA9CF2C", Offset = "0xA9CF2C", VA = "0xA9CF2C", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xA9CF9C", Offset = "0xA9CF9C", VA = "0xA9CF9C", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xA95BC4", Offset = "0xA95BC4", VA = "0xA95BC4")]
		public new static CutsceneSkipPayload CreateInstance(string cutsceneName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xA9D050", Offset = "0xA9D050", VA = "0xA9D050")]
		public CutsceneSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760CC4", Offset = "0x760CC4")]
	public class GameOverPayload : GamePayload
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x1700010E")]
		public override string eventName
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xA9D12C", Offset = "0xA9D12C", VA = "0xA9D12C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xA95D10", Offset = "0xA95D10", VA = "0xA95D10")]
		public new static GameOverPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xA95E18", Offset = "0xA95E18", VA = "0xA95E18")]
		public static GameOverPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xA9D194", Offset = "0xA9D194", VA = "0xA9D194")]
		public GameOverPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760D24", Offset = "0x760D24")]
	public class GameStartPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x1700010F")]
		public override string eventName
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xA9D658", Offset = "0xA9D658", VA = "0xA9D658", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xA9D6C0", Offset = "0xA9D6C0", VA = "0xA9D6C0")]
		public GameStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760D84", Offset = "0x760D84")]
	public class ItemAcquiredPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_Type;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_Source;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_Name;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string k_ParamKey_ResourceType;

		[Token(Token = "0x17000110")]
		public override string eventName
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xA9D780", Offset = "0xA9D780", VA = "0xA9D780", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public AcquisitionType type
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xA9D7E8", Offset = "0xA9D7E8", VA = "0xA9D7E8")]
			get
			{
				return default(AcquisitionType);
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xA9D864", Offset = "0xA9D864", VA = "0xA9D864")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public string source
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xA9D904", Offset = "0xA9D904", VA = "0xA9D904")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xA9D980", Offset = "0xA9D980", VA = "0xA9D980")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public new string name
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xA9DA00", Offset = "0xA9DA00", VA = "0xA9DA00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xA9DA7C", Offset = "0xA9DA7C", VA = "0xA9DA7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public string resourceType
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xA9DAFC", Offset = "0xA9DAFC", VA = "0xA9DAFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xA9DB78", Offset = "0xA9DB78", VA = "0xA9DB78")]
			set
			{
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA9DBF8", Offset = "0xA9DBF8", VA = "0xA9DBF8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xA9DD60", Offset = "0xA9DD60", VA = "0xA9DD60", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xA95FBC", Offset = "0xA95FBC", VA = "0xA95FBC")]
		public static ItemAcquiredPayload CreateInstance(string name, AcquisitionType type, AcquisitionSource source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xA9612C", Offset = "0xA9612C", VA = "0xA9612C")]
		public static ItemAcquiredPayload CreateInstance(string name, AcquisitionType type, string source, [Optional] string resourceType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xA9DF38", Offset = "0xA9DF38", VA = "0xA9DF38")]
		public ItemAcquiredPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760DE4", Offset = "0x760DE4")]
	public class LevelCompletePayload : LevelPayload
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000115")]
		public override string eventName
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xA9E068", Offset = "0xA9E068", VA = "0xA9E068", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xA962F4", Offset = "0xA962F4", VA = "0xA962F4")]
		public new static LevelCompletePayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xA963FC", Offset = "0xA963FC", VA = "0xA963FC")]
		public static LevelCompletePayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xA9E0D0", Offset = "0xA9E0D0", VA = "0xA9E0D0")]
		public LevelCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760E44", Offset = "0x760E44")]
	public class LevelFailPayload : LevelPayload
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000116")]
		public override string eventName
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xA9E1F4", Offset = "0xA9E1F4", VA = "0xA9E1F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xA96504", Offset = "0xA96504", VA = "0xA96504")]
		public new static LevelFailPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xA9660C", Offset = "0xA9660C", VA = "0xA9660C")]
		public static LevelFailPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xA9E25C", Offset = "0xA9E25C", VA = "0xA9E25C")]
		public LevelFailPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760EA4", Offset = "0x760EA4")]
	public class LevelQuitPayload : LevelPayload
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000117")]
		public override string eventName
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xA9E7E4", Offset = "0xA9E7E4", VA = "0xA9E7E4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xA96714", Offset = "0xA96714", VA = "0xA96714")]
		public new static LevelQuitPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xA9681C", Offset = "0xA9681C", VA = "0xA9681C")]
		public static LevelQuitPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xA9E84C", Offset = "0xA9E84C", VA = "0xA9E84C")]
		public LevelQuitPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760F04", Offset = "0x760F04")]
	public class LevelSkipPayload : LevelPayload
	{
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000118")]
		public override string eventName
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xA9E90C", Offset = "0xA9E90C", VA = "0xA9E90C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xA96924", Offset = "0xA96924", VA = "0xA96924")]
		public new static LevelSkipPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xA96A2C", Offset = "0xA96A2C", VA = "0xA96A2C")]
		public static LevelSkipPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xA9E974", Offset = "0xA9E974", VA = "0xA9E974")]
		public LevelSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760F64", Offset = "0x760F64")]
	public class LevelStartPayload : LevelPayload
	{
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000119")]
		public override string eventName
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xA9EA34", Offset = "0xA9EA34", VA = "0xA9EA34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xA96B34", Offset = "0xA96B34", VA = "0xA96B34")]
		public new static LevelStartPayload CreateInstance(string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xA96C3C", Offset = "0xA96C3C", VA = "0xA96C3C")]
		public static LevelStartPayload CreateInstance(int levelIndex, [Optional] string levelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xA9EA9C", Offset = "0xA9EA9C", VA = "0xA9EA9C")]
		public LevelStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x760FC4", Offset = "0x760FC4")]
	public class LevelUpPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_OldLevelIndex;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string k_ParamKey_NewLevelIndex;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string k_ParamKey_OldLevelName;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string k_ParamKey_NewLevelName;

		[Token(Token = "0x1700011A")]
		public override string eventName
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xA9EB5C", Offset = "0xA9EB5C", VA = "0xA9EB5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public int oldLevelIndex
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xA9EBC4", Offset = "0xA9EBC4", VA = "0xA9EBC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xA9EC40", Offset = "0xA9EC40", VA = "0xA9EC40")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public int newLevelIndex
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xA9ECE0", Offset = "0xA9ECE0", VA = "0xA9ECE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xA9ED5C", Offset = "0xA9ED5C", VA = "0xA9ED5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public string oldLevelName
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xA9EDFC", Offset = "0xA9EDFC", VA = "0xA9EDFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xA9EE78", Offset = "0xA9EE78", VA = "0xA9EE78")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public string newLevelName
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xA9EEF8", Offset = "0xA9EEF8", VA = "0xA9EEF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xA9EF74", Offset = "0xA9EF74", VA = "0xA9EF74")]
			set
			{
			}
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xA9EFF4", Offset = "0xA9EFF4", VA = "0xA9EFF4", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xA9F35C", Offset = "0xA9F35C", VA = "0xA9F35C", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xA96D4C", Offset = "0xA96D4C", VA = "0xA96D4C")]
		public static LevelUpPayload CreateInstance(string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xA96EBC", Offset = "0xA96EBC", VA = "0xA96EBC")]
		public static LevelUpPayload CreateInstance(int oldLevelIndex, int newLevelIndex, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xA96FE0", Offset = "0xA96FE0", VA = "0xA96FE0")]
		public static LevelUpPayload CreateInstance(int oldLevelIndex, int newLevelIndex, string oldLevelName, string newLevelName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xA9F4D4", Offset = "0xA9F4D4", VA = "0xA9F4D4")]
		public LevelUpPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761024", Offset = "0x761024")]
	public class PostAdActionPayload : AdPayload
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x1700011F")]
		public override string eventName
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xA9F604", Offset = "0xA9F604", VA = "0xA9F604", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xA971E0", Offset = "0xA971E0", VA = "0xA971E0")]
		public static PostAdActionPayload CreateInstance(bool rewarded, [Optional] string advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA97310", Offset = "0xA97310", VA = "0xA97310")]
		public static PostAdActionPayload CreateInstance(bool rewarded, AdvertisingNetwork advertisingNetwork, [Optional] string placementId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA9F66C", Offset = "0xA9F66C", VA = "0xA9F66C")]
		public PostAdActionPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761084", Offset = "0x761084")]
	public class PostInstallActionPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ActionId;

		[Token(Token = "0x17000120")]
		public override string eventName
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xA9F72C", Offset = "0xA9F72C", VA = "0xA9F72C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public string actionId
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xA9F794", Offset = "0xA9F794", VA = "0xA9F794")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xA9F810", Offset = "0xA9F810", VA = "0xA9F810")]
			set
			{
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA9F890", Offset = "0xA9F890", VA = "0xA9F890", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA97428", Offset = "0xA97428", VA = "0xA97428")]
		public new static PostInstallActionPayload CreateInstance([Optional] string actionId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA9F944", Offset = "0xA9F944", VA = "0xA9F944")]
		public PostInstallActionPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7610E4", Offset = "0x7610E4")]
	public class PushNotificationClickPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string k_ParamKey_MessageId;

		[Token(Token = "0x17000122")]
		public override string eventName
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xA9FA20", Offset = "0xA9FA20", VA = "0xA9FA20", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public string messageId
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xA9FA88", Offset = "0xA9FA88", VA = "0xA9FA88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xA9FB04", Offset = "0xA9FB04", VA = "0xA9FB04")]
			set
			{
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xA9FB84", Offset = "0xA9FB84", VA = "0xA9FB84", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xA9FBF4", Offset = "0xA9FBF4", VA = "0xA9FBF4", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xA97574", Offset = "0xA97574", VA = "0xA97574")]
		public new static PushNotificationClickPayload CreateInstance(string messageId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xA9FCA8", Offset = "0xA9FCA8", VA = "0xA9FCA8")]
		public PushNotificationClickPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761144", Offset = "0x761144")]
	public class PushNotificationEnablePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000124")]
		public override string eventName
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xA9FD84", Offset = "0xA9FD84", VA = "0xA9FD84", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xA9FDEC", Offset = "0xA9FDEC", VA = "0xA9FDEC")]
		public PushNotificationEnablePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7611A4", Offset = "0x7611A4")]
	public class ScreenVisitPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ScreenName;

		[Token(Token = "0x17000125")]
		public override string eventName
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xA9FEB4", Offset = "0xA9FEB4", VA = "0xA9FEB4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public string screenType
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xA9FF1C", Offset = "0xA9FF1C", VA = "0xA9FF1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xA9FF98", Offset = "0xA9FF98", VA = "0xA9FF98")]
			set
			{
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xAA0018", Offset = "0xAA0018", VA = "0xAA0018")]
		public void SetScreenType(ScreenName screenType)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xAA00B8", Offset = "0xAA00B8", VA = "0xAA00B8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xAA0128", Offset = "0xAA0128", VA = "0xAA0128", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xA9773C", Offset = "0xA9773C", VA = "0xA9773C")]
		public static ScreenVisitPayload CreateInstance(ScreenName screenName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xA9786C", Offset = "0xA9786C", VA = "0xA9786C")]
		public new static ScreenVisitPayload CreateInstance(string screenName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xAA01F8", Offset = "0xAA01F8", VA = "0xAA01F8")]
		public ScreenVisitPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761204", Offset = "0x761204")]
	public class SocialSharePayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_ShareType;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_SocialNetwork;

		[Token(Token = "0x17000127")]
		public override string eventName
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xAA02D4", Offset = "0xAA02D4", VA = "0xAA02D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public string shareType
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xAA033C", Offset = "0xAA033C", VA = "0xAA033C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xAA03B8", Offset = "0xAA03B8", VA = "0xAA03B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public string socialNetwork
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xAA0438", Offset = "0xAA0438", VA = "0xAA0438")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xAA04B4", Offset = "0xAA04B4", VA = "0xAA04B4")]
			set
			{
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xAA0534", Offset = "0xAA0534", VA = "0xAA0534")]
		public void SetShareType(ShareType shareType)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xAA05F0", Offset = "0xAA05F0", VA = "0xAA05F0")]
		public void SetSocialNetwork(SocialNetwork socialNetwork)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xAA06AC", Offset = "0xAA06AC", VA = "0xAA06AC", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xAA07D4", Offset = "0xAA07D4", VA = "0xAA07D4", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xA979C0", Offset = "0xA979C0", VA = "0xA979C0")]
		public static SocialSharePayload CreateInstance(ShareType shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xA97B18", Offset = "0xA97B18", VA = "0xA97B18")]
		public static SocialSharePayload CreateInstance(ShareType shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xA97C58", Offset = "0xA97C58", VA = "0xA97C58")]
		public static SocialSharePayload CreateInstance(string shareType, SocialNetwork socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xA97D98", Offset = "0xA97D98", VA = "0xA97D98")]
		public static SocialSharePayload CreateInstance(string shareType, string socialNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xAA08F4", Offset = "0xAA08F4", VA = "0xAA08F4")]
		public SocialSharePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761264", Offset = "0x761264")]
	public class StoreItemClickPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StoreType;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string k_ParamKey_ItemId;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string k_ParamKey_ItemName;

		[Token(Token = "0x1700012A")]
		public override string eventName
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xAA09EC", Offset = "0xAA09EC", VA = "0xAA09EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public string itemId
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xAA0A54", Offset = "0xAA0A54", VA = "0xAA0A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xAA0AD0", Offset = "0xAA0AD0", VA = "0xAA0AD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public string itemName
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xAA0B50", Offset = "0xAA0B50", VA = "0xAA0B50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xAA0BCC", Offset = "0xAA0BCC", VA = "0xAA0BCC")]
			set
			{
			}
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xAA0C4C", Offset = "0xAA0C4C", VA = "0xAA0C4C", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xAA0D84", Offset = "0xAA0D84", VA = "0xAA0D84", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xA97F18", Offset = "0xA97F18", VA = "0xA97F18")]
		public static StoreItemClickPayload CreateInstance(StoreType storeType, string itemId, [Optional] string itemName, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xAA0F30", Offset = "0xAA0F30", VA = "0xAA0F30")]
		public StoreItemClickPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7612C4", Offset = "0x7612C4")]
	public class StoreOpenedPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StoreType;

		[Token(Token = "0x1700012D")]
		public override string eventName
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xAA1044", Offset = "0xAA1044", VA = "0xAA1044", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public StoreType type
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xAA10AC", Offset = "0xAA10AC", VA = "0xAA10AC")]
			get
			{
				return default(StoreType);
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xAA1128", Offset = "0xAA1128", VA = "0xAA1128")]
			set
			{
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xAA11C8", Offset = "0xAA11C8", VA = "0xAA11C8", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xAA1238", Offset = "0xAA1238", VA = "0xAA1238", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xA980BC", Offset = "0xA980BC", VA = "0xA980BC")]
		public static StoreOpenedPayload CreateInstance(StoreType storeType, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xAA1348", Offset = "0xAA1348", VA = "0xAA1348")]
		public StoreOpenedPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761324", Offset = "0x761324")]
	public class TutorialCompletePayload : TutorialPayload
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x1700012F")]
		public override string eventName
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xAA1424", Offset = "0xAA1424", VA = "0xAA1424", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xA98220", Offset = "0xA98220", VA = "0xA98220")]
		public new static TutorialCompletePayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xAA148C", Offset = "0xAA148C", VA = "0xAA148C")]
		public TutorialCompletePayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761384", Offset = "0x761384")]
	public class TutorialSkipPayload : TutorialPayload
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000130")]
		public override string eventName
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xAA17BC", Offset = "0xAA17BC", VA = "0xAA17BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xA98320", Offset = "0xA98320", VA = "0xA98320")]
		public new static TutorialSkipPayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xAA1824", Offset = "0xAA1824", VA = "0xAA1824")]
		public TutorialSkipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7613E4", Offset = "0x7613E4")]
	public class TutorialStartPayload : TutorialPayload
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x17000131")]
		public override string eventName
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xAA18E4", Offset = "0xAA18E4", VA = "0xAA18E4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xA98420", Offset = "0xA98420", VA = "0xA98420")]
		public new static TutorialStartPayload CreateInstance([Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xAA194C", Offset = "0xAA194C", VA = "0xAA194C")]
		public TutorialStartPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x761444", Offset = "0x761444")]
	public class TutorialStepPayload : TutorialPayload
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_StepIndex;

		[Token(Token = "0x17000132")]
		public override string eventName
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xAA1A0C", Offset = "0xAA1A0C", VA = "0xAA1A0C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public int stepIndex
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xAA1A74", Offset = "0xAA1A74", VA = "0xAA1A74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xAA1AF0", Offset = "0xAA1AF0", VA = "0xAA1AF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xAA1B90", Offset = "0xAA1B90", VA = "0xAA1B90", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xAA1C00", Offset = "0xAA1C00", VA = "0xAA1C00", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xA98528", Offset = "0xA98528", VA = "0xA98528")]
		public static TutorialStepPayload CreateInstance(int stepIndex, [Optional] string tutorialId, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xAA1CC4", Offset = "0xAA1CC4", VA = "0xAA1CC4")]
		public TutorialStepPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7614A4", Offset = "0x7614A4")]
	public class UserSignupPayload : AnalyticsEventPayload
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string standardEventName;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string k_ParamKey_AuthorizationNetwork;

		[Token(Token = "0x17000134")]
		public override string eventName
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xAA1DA0", Offset = "0xAA1DA0", VA = "0xAA1DA0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public string authorizationNetwork
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xAA1E08", Offset = "0xAA1E08", VA = "0xAA1E08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xAA1E84", Offset = "0xAA1E84", VA = "0xAA1E84")]
			set
			{
			}
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xAA1F04", Offset = "0xAA1F04", VA = "0xAA1F04")]
		public void SetAuthorizationNetwork(AuthorizationNetwork authorizationNetwork)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xAA1FC0", Offset = "0xAA1FC0", VA = "0xAA1FC0", Slot = "6")]
		protected override void ValidatePayload()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xAA2030", Offset = "0xAA2030", VA = "0xAA2030", Slot = "7")]
		protected override void ValidateDataField(string key, object value)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xA987EC", Offset = "0xA987EC", VA = "0xA987EC")]
		public static UserSignupPayload CreateInstance(AuthorizationNetwork authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xA986A0", Offset = "0xA986A0", VA = "0xA986A0")]
		public new static UserSignupPayload CreateInstance(string authorizationNetwork, [Optional] IDictionary<string, object> eventData)
		{
			return null;
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xAA2100", Offset = "0xAA2100", VA = "0xAA2100")]
		public UserSignupPayload()
		{
		}
	}
}
namespace UnityEngine.Experiemntal.Rendering.Universal
{
	[Token(Token = "0x20002B9")]
	public class Blit : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x2000406")]
		public class BlitSettings
		{
			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderPassEvent Event;

			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material blitMaterial;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int blitMaterialPassIndex;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Target destination;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string textureId;

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xAA2688", Offset = "0xAA2688", VA = "0xAA2688")]
			public BlitSettings()
			{
			}
		}

		[Token(Token = "0x2000407")]
		public enum Target
		{
			[Token(Token = "0x4001635")]
			Color,
			[Token(Token = "0x4001636")]
			Texture
		}

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlitSettings settings;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTargetHandle m_RenderTextureHandle;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BlitPass blitPass;

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xAA21DC", Offset = "0xAA21DC", VA = "0xAA21DC", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xAA23F4", Offset = "0xAA23F4", VA = "0xAA23F4", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xAA2618", Offset = "0xAA2618", VA = "0xAA2618")]
		public Blit()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	internal class BlitPass : ScriptableRenderPass
	{
		[Token(Token = "0x2000408")]
		public enum RenderTarget
		{
			[Token(Token = "0x4001638")]
			Color,
			[Token(Token = "0x4001639")]
			RenderTexture
		}

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material blitMaterial;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int blitShaderPassIndex;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769198", Offset = "0x769198")]
		private FilterMode <filterMode>k__BackingField;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7691A8", Offset = "0x7691A8")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7691B8", Offset = "0x7691B8")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RenderTargetHandle m_TemporaryColorTexture;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string m_ProfilerTag;

		[Token(Token = "0x17000136")]
		public FilterMode filterMode
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xAA26F8", Offset = "0xAA26F8", VA = "0xAA26F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C6E0", Offset = "0x76C6E0")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xAA2700", Offset = "0xAA2700", VA = "0xAA2700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C6F0", Offset = "0x76C6F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xAA2708", Offset = "0xAA2708", VA = "0xAA2708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C700", Offset = "0x76C700")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xAA2720", Offset = "0xAA2720", VA = "0xAA2720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C710", Offset = "0x76C710")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xAA2738", Offset = "0xAA2738", VA = "0xAA2738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C720", Offset = "0x76C720")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xAA2740", Offset = "0xAA2740", VA = "0xAA2740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C730", Offset = "0x76C730")]
			set
			{
			}
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xAA234C", Offset = "0xAA234C", VA = "0xAA234C")]
		public BlitPass(RenderPassEvent renderPassEvent, Material blitMaterial, int blitShaderPassIndex, string tag)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xAA25FC", Offset = "0xAA25FC", VA = "0xAA25FC")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xAA2748", Offset = "0xAA2748", VA = "0xAA2748", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xAA2948", Offset = "0xAA2948", VA = "0xAA2948", Slot = "5")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x761504", Offset = "0x761504")]
	public sealed class NicerOutline : BaseMeshEffect
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_EffectColor;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 m_EffectDistance;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_UseGraphicAlpha;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_UseFixedDistance;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<UIVertex> verts;

		[Token(Token = "0x17000139")]
		public Color effectColor
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xAA29F8", Offset = "0xAA29F8", VA = "0xAA29F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600172F")]
			[Address(RVA = "0xAA2A04", Offset = "0xAA2A04", VA = "0xAA2A04")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public Vector2 effectDistance
		{
			[Token(Token = "0x6001730")]
			[Address(RVA = "0xAA2AE8", Offset = "0xAA2AE8", VA = "0xAA2AE8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xAA2AF0", Offset = "0xAA2AF0", VA = "0xAA2AF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public bool useFixedDistance
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0xAA2C30", Offset = "0xAA2C30", VA = "0xAA2C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xAA2C38", Offset = "0xAA2C38", VA = "0xAA2C38")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool useGraphicAlpha
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xAA2C44", Offset = "0xAA2C44", VA = "0xAA2C44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xAA2C4C", Offset = "0xAA2C4C", VA = "0xAA2C4C")]
			set
			{
			}
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xAA2D18", Offset = "0xAA2D18", VA = "0xAA2D18")]
		private void ApplyShadowZeroAlloc(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xAA2F78", Offset = "0xAA2F78", VA = "0xAA2F78")]
		private void ApplyShadow(List<UIVertex> verts, Color32 color, int start, int end, float x, float y)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xAA304C", Offset = "0xAA304C", VA = "0xAA304C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xAA33F8", Offset = "0xAA33F8", VA = "0xAA33F8")]
		public NicerOutline()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x20002BC")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x40011C8")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x9C000C", Offset = "0x9C000C", VA = "0x9C000C")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x9C007C", Offset = "0x9C007C", VA = "0x9C007C")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x9C00EC", Offset = "0x9C00EC", VA = "0x9C00EC")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x9C01D0", Offset = "0x9C01D0", VA = "0x9C01D0")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x600173E")]
		[Address(RVA = "0x9C0244", Offset = "0x9C0244", VA = "0x9C0244")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x600173F")]
		[Address(RVA = "0x9C02B4", Offset = "0x9C02B4", VA = "0x9C02B4")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6001740")]
		[Address(RVA = "0x9C0330", Offset = "0x9C0330", VA = "0x9C0330")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x9C03A0", Offset = "0x9C03A0", VA = "0x9C03A0")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x9C03AC", Offset = "0x9C03AC", VA = "0x9C03AC")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x9C03E8", Offset = "0x9C03E8", VA = "0x9C03E8")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x9C03EC", Offset = "0x9C03EC", VA = "0x9C03EC")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6001745")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001746")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002BD")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x762294", Offset = "0x762294")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7622A8", Offset = "0x7622A8")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x200040B")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x200040C")]
		public struct GSALine
		{
			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x200040D")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x200040E")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x200040F")]
		public struct GSARect
		{
			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x40011C9")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001747")]
		[Address(RVA = "0x9C0698", Offset = "0x9C0698", VA = "0x9C0698")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001748")]
		[Address(RVA = "0x9C0728", Offset = "0x9C0728", VA = "0x9C0728")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6001749")]
		[Address(RVA = "0x9C079C", Offset = "0x9C079C", VA = "0x9C079C")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x600174A")]
		[Address(RVA = "0x9C0820", Offset = "0x9C0820", VA = "0x9C0820")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x600174B")]
		[Address(RVA = "0x9C08A4", Offset = "0x9C08A4", VA = "0x9C08A4")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600174C")]
		[Address(RVA = "0x9C0924", Offset = "0x9C0924", VA = "0x9C0924")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x600174D")]
		[Address(RVA = "0x9C09A4", Offset = "0x9C09A4", VA = "0x9C09A4")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x600174E")]
		[Address(RVA = "0x9C0A20", Offset = "0x9C0A20", VA = "0x9C0A20")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600174F")]
		[Address(RVA = "0x9C0AA0", Offset = "0x9C0AA0", VA = "0x9C0AA0")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6001750")]
		[Address(RVA = "0x9C0B20", Offset = "0x9C0B20", VA = "0x9C0B20")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001751")]
		[Address(RVA = "0x9C0BB0", Offset = "0x9C0BB0", VA = "0x9C0BB0")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x9C0C58", Offset = "0x9C0C58", VA = "0x9C0C58")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x9C0C5C", Offset = "0x9C0C5C", VA = "0x9C0C5C")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x9C0C60", Offset = "0x9C0C60", VA = "0x9C0C60")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x9C0C64", Offset = "0x9C0C64", VA = "0x9C0C64")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x9C0C68", Offset = "0x9C0C68", VA = "0x9C0C68")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x9C0C6C", Offset = "0x9C0C6C", VA = "0x9C0C6C")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x9C0CF4", Offset = "0x9C0CF4", VA = "0x9C0CF4")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x9C0CF8", Offset = "0x9C0CF8", VA = "0x9C0CF8")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x9C0CFC", Offset = "0x9C0CFC", VA = "0x9C0CFC")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x9C0D00", Offset = "0x9C0D00", VA = "0x9C0D00")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x9C0D08", Offset = "0x9C0D08", VA = "0x9C0D08")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002BE")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x40011CB")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x40011CC")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x1700013D")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0x9C03F0", Offset = "0x9C03F0", VA = "0x9C03F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x9C04C0", Offset = "0x9C04C0", VA = "0x9C04C0")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x9C04C4", Offset = "0x9C04C4", VA = "0x9C04C4")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x9C04C8", Offset = "0x9C04C8", VA = "0x9C04C8")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x9C04CC", Offset = "0x9C04CC", VA = "0x9C04CC")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x9C0474", Offset = "0x9C0474", VA = "0x9C0474")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000410")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000411")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000412")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000413")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x1700013E")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x9C2158", Offset = "0x9C2158", VA = "0x9C2158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x9C21E8", Offset = "0x9C21E8", VA = "0x9C21E8")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x9C21F0", Offset = "0x9C21F0", VA = "0x9C21F0")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x9C21F8", Offset = "0x9C21F8", VA = "0x9C21F8")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x9C2340", Offset = "0x9C2340", VA = "0x9C2340")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x9C25C0", Offset = "0x9C25C0", VA = "0x9C25C0")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x9C2644", Offset = "0x9C2644", VA = "0x9C2644")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x9C269C", Offset = "0x9C269C", VA = "0x9C269C")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x9C1388", Offset = "0x9C1388", VA = "0x9C1388")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x76C740", Offset = "0x76C740")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x9C1AA0", Offset = "0x9C1AA0", VA = "0x9C1AA0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x76C7A4", Offset = "0x76C7A4")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x9C21E0", Offset = "0x9C21E0", VA = "0x9C21E0")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20002C0")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x10E50DC", Offset = "0x10E50DC", VA = "0x10E50DC")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ControllerHand
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10E4E58", Offset = "0x10E4E58", VA = "0x10E4E58")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public enum ControllerState
	{
		[Token(Token = "0x40011F1")]
		Error = -1,
		[Token(Token = "0x40011F2")]
		DisConnected,
		[Token(Token = "0x40011F3")]
		Connected
	}
	[Token(Token = "0x20002C3")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40011F5")]
		APP = 1,
		[Token(Token = "0x40011F6")]
		TOUCHPAD,
		[Token(Token = "0x40011F7")]
		HOME,
		[Token(Token = "0x40011F8")]
		VOLUMEUP,
		[Token(Token = "0x40011F9")]
		VOLUMEDOWN,
		[Token(Token = "0x40011FA")]
		TRIGGER,
		[Token(Token = "0x40011FB")]
		A,
		[Token(Token = "0x40011FC")]
		B,
		[Token(Token = "0x40011FD")]
		X,
		[Token(Token = "0x40011FE")]
		Y,
		[Token(Token = "0x40011FF")]
		Left,
		[Token(Token = "0x4001200")]
		Right,
		[Token(Token = "0x4001201")]
		Thumbrest
	}
	[Token(Token = "0x20002C4")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001203")]
		No,
		[Token(Token = "0x4001204")]
		SwipeUp,
		[Token(Token = "0x4001205")]
		SwipeDown,
		[Token(Token = "0x4001206")]
		SwipeLeft,
		[Token(Token = "0x4001207")]
		SwipeRight
	}
	[Token(Token = "0x20002C5")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4001209")]
		No,
		[Token(Token = "0x400120A")]
		ClickUp,
		[Token(Token = "0x400120B")]
		ClickDown,
		[Token(Token = "0x400120C")]
		ClickLeft,
		[Token(Token = "0x400120D")]
		ClickRight
	}
	[Token(Token = "0x20002C6")]
	public struct Controller
	{
		[Token(Token = "0x400120E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x10E0634", Offset = "0x10E0634", VA = "0x10E0634")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x10E0730", Offset = "0x10E0730", VA = "0x10E0730")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x10E08B4", Offset = "0x10E08B4", VA = "0x10E08B4")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x10E0AE4", Offset = "0x10E0AE4", VA = "0x10E0AE4")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x10E0BE8", Offset = "0x10E0BE8", VA = "0x10E0BE8")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x10E0D00", Offset = "0x10E0D00", VA = "0x10E0D00")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x10E0E14", Offset = "0x10E0E14", VA = "0x10E0E14")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x10E0EE4", Offset = "0x10E0EE4", VA = "0x10E0EE4")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x10E0FB4", Offset = "0x10E0FB4", VA = "0x10E0FB4")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x10E1084", Offset = "0x10E1084", VA = "0x10E1084")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x10E1154", Offset = "0x10E1154", VA = "0x10E1154")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x10E16A0", Offset = "0x10E16A0", VA = "0x10E16A0")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x10E1BEC", Offset = "0x10E1BEC", VA = "0x10E1BEC")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x10E2138", Offset = "0x10E2138", VA = "0x10E2138")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x10E247C", Offset = "0x10E247C", VA = "0x10E247C")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x10E27C0", Offset = "0x10E27C0", VA = "0x10E27C0")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x10E2B04", Offset = "0x10E2B04", VA = "0x10E2B04")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x10E3050", Offset = "0x10E3050", VA = "0x10E3050")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x10E359C", Offset = "0x10E359C", VA = "0x10E359C")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x10E3768", Offset = "0x10E3768", VA = "0x10E3768")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x10E3828", Offset = "0x10E3828", VA = "0x10E3828")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x10E389C", Offset = "0x10E389C", VA = "0x10E389C")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x10E3958", Offset = "0x10E3958", VA = "0x10E3958")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x10E39CC", Offset = "0x10E39CC", VA = "0x10E39CC")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x10E3A40", Offset = "0x10E3A40", VA = "0x10E3A40")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x10E3AB4", Offset = "0x10E3AB4", VA = "0x10E3AB4")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x10E3B30", Offset = "0x10E3B30", VA = "0x10E3B30")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x10E3BAC", Offset = "0x10E3BAC", VA = "0x10E3BAC")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x10E3C48", Offset = "0x10E3C48", VA = "0x10E3C48")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x10E3CC4", Offset = "0x10E3CC4", VA = "0x10E3CC4")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x10E3D40", Offset = "0x10E3D40", VA = "0x10E3D40")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x10E3DBC", Offset = "0x10E3DBC", VA = "0x10E3DBC")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x10E3E38", Offset = "0x10E3E38", VA = "0x10E3E38")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x10E3EAC", Offset = "0x10E3EAC", VA = "0x10E3EAC")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10E3F20", Offset = "0x10E3F20", VA = "0x10E3F20")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x10E3FF0", Offset = "0x10E3FF0", VA = "0x10E3FF0")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x10E4064", Offset = "0x10E4064", VA = "0x10E4064")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x10E40E0", Offset = "0x10E40E0", VA = "0x10E40E0")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x10E4154", Offset = "0x10E4154", VA = "0x10E4154")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x10E41D0", Offset = "0x10E41D0", VA = "0x10E41D0")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x10E424C", Offset = "0x10E424C", VA = "0x10E424C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x10E42C8", Offset = "0x10E42C8", VA = "0x10E42C8")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x10E433C", Offset = "0x10E433C", VA = "0x10E433C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x10E43B0", Offset = "0x10E43B0", VA = "0x10E43B0")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x10E443C", Offset = "0x10E443C", VA = "0x10E443C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x10E44B8", Offset = "0x10E44B8", VA = "0x10E44B8")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x10E4534", Offset = "0x10E4534", VA = "0x10E4534")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x10E45A8", Offset = "0x10E45A8", VA = "0x10E45A8")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x10E461C", Offset = "0x10E461C", VA = "0x10E461C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x10E4690", Offset = "0x10E4690", VA = "0x10E4690")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x10E470C", Offset = "0x10E470C", VA = "0x10E470C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x80BC3C", Offset = "0x80BC3C", VA = "0x80BC3C")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x80BC40", Offset = "0x80BC40", VA = "0x80BC40")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x80BC44", Offset = "0x80BC44", VA = "0x80BC44")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x10E48EC", Offset = "0x10E48EC", VA = "0x10E48EC")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x10E49A8", Offset = "0x10E49A8", VA = "0x10E49A8")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x10E4A5C", Offset = "0x10E4A5C", VA = "0x10E4A5C")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x10E4B00", Offset = "0x10E4B00", VA = "0x10E4B00")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x10E4BA0", Offset = "0x10E4BA0", VA = "0x10E4BA0")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x10E4C40", Offset = "0x10E4C40", VA = "0x10E4C40")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x10E4CE4", Offset = "0x10E4CE4", VA = "0x10E4CE4")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x10E4D60", Offset = "0x10E4D60", VA = "0x10E4D60")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x10E4DDC", Offset = "0x10E4DDC", VA = "0x10E4DDC")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x10E49AC", Offset = "0x10E49AC", VA = "0x10E49AC")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x10E4A60", Offset = "0x10E4A60", VA = "0x10E4A60")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x10E4B04", Offset = "0x10E4B04", VA = "0x10E4B04")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x10E4BA4", Offset = "0x10E4BA4", VA = "0x10E4BA4")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x10E4C44", Offset = "0x10E4C44", VA = "0x10E4C44")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x10E48F0", Offset = "0x10E48F0", VA = "0x10E48F0")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20002C7")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001210")]
		Controller0,
		[Token(Token = "0x4001211")]
		Controller1
	}
	[Token(Token = "0x20002C8")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001213")]
		Goblin,
		[Token(Token = "0x4001214")]
		Neo,
		[Token(Token = "0x4001215")]
		G2,
		[Token(Token = "0x4001216")]
		Neo2,
		[Token(Token = "0x4001217")]
		Neo3,
		[Token(Token = "0x4001218")]
		NewController
	}
	[Token(Token = "0x20002C9")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x400121A")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x400121B")]
		PUI_VERSION,
		[Token(Token = "0x400121C")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x400121D")]
		EQUIPMENT_SN,
		[Token(Token = "0x400121E")]
		CUSTOMER_SN,
		[Token(Token = "0x400121F")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001220")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001221")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001222")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001223")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001224")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4001225")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4001226")]
		DEVICE_IP
	}
	[Token(Token = "0x20002CA")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4001228")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4001229")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20002CB")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x400122B")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x400122C")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20002CC")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x400122E")]
		S_ON,
		[Token(Token = "0x400122F")]
		S_OFF
	}
	[Token(Token = "0x20002CD")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001231")]
		SINGLE_CLICK,
		[Token(Token = "0x4001232")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001233")]
		LONG_PRESS
	}
	[Token(Token = "0x20002CE")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4001235")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4001236")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4001237")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001238")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4001239")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x400123A")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x400123B")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x400123C")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20002CF")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x400123E")]
		THREE = 3,
		[Token(Token = "0x400123F")]
		TEN = 10,
		[Token(Token = "0x4001240")]
		THIRTY = 30,
		[Token(Token = "0x4001241")]
		SIXTY = 60,
		[Token(Token = "0x4001242")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001243")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001244")]
		NEVER = -1
	}
	[Token(Token = "0x20002D0")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001246")]
		FIFTEEN = 15,
		[Token(Token = "0x4001247")]
		THIRTY = 30,
		[Token(Token = "0x4001248")]
		SIXTY = 60,
		[Token(Token = "0x4001249")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x400124A")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x400124B")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x400124C")]
		NEVER = -1
	}
	[Token(Token = "0x20002D1")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x400124E")]
		SFS_USB,
		[Token(Token = "0x400124F")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001250")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001251")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001252")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001253")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001254")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001255")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001256")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001257")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001258")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001259")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x400125A")]
		SFS_Auto_Calibration,
		[Token(Token = "0x400125B")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20002D2")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x400125D")]
		MTP,
		[Token(Token = "0x400125E")]
		CHARGE
	}
	[Token(Token = "0x20002D3")]
	public struct ToBService
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x10EE33C", Offset = "0x10EE33C", VA = "0x10EE33C")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x10EE518", Offset = "0x10EE518", VA = "0x10EE518")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x10EE5F0", Offset = "0x10EE5F0", VA = "0x10EE5F0")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x10EE6D0", Offset = "0x10EE6D0", VA = "0x10EE6D0")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x10EE7B0", Offset = "0x10EE7B0", VA = "0x10EE7B0")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x10EE8AC", Offset = "0x10EE8AC", VA = "0x10EE8AC")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x10EEA20", Offset = "0x10EEA20", VA = "0x10EEA20")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x10EEB40", Offset = "0x10EEB40", VA = "0x10EEB40")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x10EECF0", Offset = "0x10EECF0", VA = "0x10EECF0")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x10EEE80", Offset = "0x10EEE80", VA = "0x10EEE80")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x10EEF04", Offset = "0x10EEF04", VA = "0x10EEF04")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x10EF084", Offset = "0x10EF084", VA = "0x10EF084")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x10EF2D8", Offset = "0x10EF2D8", VA = "0x10EF2D8")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x10EF44C", Offset = "0x10EF44C", VA = "0x10EF44C")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x10EF56C", Offset = "0x10EF56C", VA = "0x10EF56C")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x10EF668", Offset = "0x10EF668", VA = "0x10EF668")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x10EF814", Offset = "0x10EF814", VA = "0x10EF814")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x10EF960", Offset = "0x10EF960", VA = "0x10EF960")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x10EFA54", Offset = "0x10EFA54", VA = "0x10EFA54")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x10EFB48", Offset = "0x10EFB48", VA = "0x10EFB48")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x10EFC3C", Offset = "0x10EFC3C", VA = "0x10EFC3C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x10EFD30", Offset = "0x10EFD30", VA = "0x10EFD30")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x10EFE24", Offset = "0x10EFE24", VA = "0x10EFE24")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x10EFF18", Offset = "0x10EFF18", VA = "0x10EFF18")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x10F000C", Offset = "0x10F000C", VA = "0x10F000C")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x10F0100", Offset = "0x10F0100", VA = "0x10F0100")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x10F01F4", Offset = "0x10F01F4", VA = "0x10F01F4")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x10F02E8", Offset = "0x10F02E8", VA = "0x10F02E8")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10F041C", Offset = "0x10F041C", VA = "0x10F041C")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001267")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001268")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001269")]
		SEENSOR_COUNT,
		[Token(Token = "0x400126A")]
		ABILITY6DOF,
		[Token(Token = "0x400126B")]
		PLATFORM_TYPE,
		[Token(Token = "0x400126C")]
		TRACKING_MODE,
		[Token(Token = "0x400126D")]
		LOG_LEVEL,
		[Token(Token = "0x400126E")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x400126F")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001270")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001271")]
		iShowFPS,
		[Token(Token = "0x4001272")]
		SensorMode,
		[Token(Token = "0x4001273")]
		LOGICFLOW,
		[Token(Token = "0x4001274")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001275")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001276")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001277")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001278")]
		isEnableBoundary,
		[Token(Token = "0x4001279")]
		Enable_Activity_Rotation,
		[Token(Token = "0x400127A")]
		GetDisplay_Orientation,
		[Token(Token = "0x400127B")]
		GetWaitFrameNum,
		[Token(Token = "0x400127C")]
		GetResetFrameNum,
		[Token(Token = "0x400127D")]
		EnableFFRBYSYS,
		[Token(Token = "0x400127E")]
		RotControllerMode
	}
	[Token(Token = "0x20002D5")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001280")]
		IPD,
		[Token(Token = "0x4001281")]
		VFOV,
		[Token(Token = "0x4001282")]
		HFOV,
		[Token(Token = "0x4001283")]
		NECK_MODEL_X,
		[Token(Token = "0x4001284")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001285")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001286")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20002D6")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001288")]
		X_1 = 1,
		[Token(Token = "0x4001289")]
		X_2 = 2,
		[Token(Token = "0x400128A")]
		X_4 = 4,
		[Token(Token = "0x400128B")]
		X_8 = 8
	}
	[Token(Token = "0x20002D7")]
	public enum PlatForm
	{
		[Token(Token = "0x400128D")]
		Android = 1,
		[Token(Token = "0x400128E")]
		IOS,
		[Token(Token = "0x400128F")]
		Win,
		[Token(Token = "0x4001290")]
		Notsupport
	}
	[Token(Token = "0x20002D8")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001292")]
		BD_0 = 0,
		[Token(Token = "0x4001293")]
		BD_16 = 16,
		[Token(Token = "0x4001294")]
		BD_24 = 24
	}
	[Token(Token = "0x20002D9")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001296")]
		Normal,
		[Token(Token = "0x4001297")]
		High
	}
	[Token(Token = "0x20002DA")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001299")]
		Default,
		[Token(Token = "0x400129A")]
		FirstSensor,
		[Token(Token = "0x400129B")]
		SecondSensor
	}
	[Token(Token = "0x20002DB")]
	public enum Eye
	{
		[Token(Token = "0x400129D")]
		LeftEye,
		[Token(Token = "0x400129E")]
		RightEye,
		[Token(Token = "0x400129F")]
		BothEye
	}
	[Token(Token = "0x20002DC")]
	public enum ResUtilsType
	{
		[Token(Token = "0x40012A1")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x40012A2")]
		TYPE_COLOR,
		[Token(Token = "0x40012A3")]
		TYPE_TEXT,
		[Token(Token = "0x40012A4")]
		TYPE_FONT,
		[Token(Token = "0x40012A5")]
		TYPE_VALUE,
		[Token(Token = "0x40012A6")]
		TYPE_DRAWABLE,
		[Token(Token = "0x40012A7")]
		TYPE_OBJECT,
		[Token(Token = "0x40012A8")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20002DD")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x40012AA")]
		EyeLevel,
		[Token(Token = "0x40012AB")]
		FloorLevel,
		[Token(Token = "0x40012AC")]
		StageLevel
	}
	[Token(Token = "0x20002DE")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x40012AE")]
		Low,
		[Token(Token = "0x40012AF")]
		Med,
		[Token(Token = "0x40012B0")]
		High,
		[Token(Token = "0x40012B1")]
		Top_High
	}
	[Token(Token = "0x20002DF")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x40012B3")]
		MultiPass,
		[Token(Token = "0x40012B4")]
		SinglePass
	}
	[Token(Token = "0x20002E0")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x40012B6")]
		kGazePointValid = 1,
		[Token(Token = "0x40012B7")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40012B8")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40012B9")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40012BA")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20002E1")]
	public enum TrackingMode
	{
		[Token(Token = "0x40012BC")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x40012BD")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x40012BE")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20002E2")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20002E3")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20002E4")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20002E5")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20002E6")]
	public struct EyeSetting
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20002E7")]
	public struct Sensor
	{
		[Token(Token = "0x40012E2")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x10E79B0", Offset = "0x10E79B0", VA = "0x10E79B0")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x10E7A30", Offset = "0x10E7A30", VA = "0x10E7A30")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x10E7AC4", Offset = "0x10E7AC4", VA = "0x10E7AC4")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x10E7B44", Offset = "0x10E7B44", VA = "0x10E7B44")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x10E7BC4", Offset = "0x10E7BC4", VA = "0x10E7BC4")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x10E7C44", Offset = "0x10E7C44", VA = "0x10E7C44")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10E7CC4", Offset = "0x10E7CC4", VA = "0x10E7CC4")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x10E7D44", Offset = "0x10E7D44", VA = "0x10E7D44")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x10E7E1C", Offset = "0x10E7E1C", VA = "0x10E7E1C")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x10E7F00", Offset = "0x10E7F00", VA = "0x10E7F00")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x10E7F74", Offset = "0x10E7F74", VA = "0x10E7F74")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x10E7FE8", Offset = "0x10E7FE8", VA = "0x10E7FE8")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x10E8090", Offset = "0x10E8090", VA = "0x10E8090")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x10E8138", Offset = "0x10E8138", VA = "0x10E8138")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x10E81AC", Offset = "0x10E81AC", VA = "0x10E81AC")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x10E8228", Offset = "0x10E8228", VA = "0x10E8228")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x10E8318", Offset = "0x10E8318", VA = "0x10E8318")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x10E83A0", Offset = "0x10E83A0", VA = "0x10E83A0")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x10E83A4", Offset = "0x10E83A4", VA = "0x10E83A4")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x10E83A8", Offset = "0x10E83A8", VA = "0x10E83A8")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x10E859C", Offset = "0x10E859C", VA = "0x10E859C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x10E87F8", Offset = "0x10E87F8", VA = "0x10E87F8")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x10E87FC", Offset = "0x10E87FC", VA = "0x10E87FC")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x10E89F4", Offset = "0x10E89F4", VA = "0x10E89F4")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x10E89F8", Offset = "0x10E89F8", VA = "0x10E89F8")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x10E89FC", Offset = "0x10E89FC", VA = "0x10E89FC")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x10E8A78", Offset = "0x10E8A78", VA = "0x10E8A78")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x10E8A7C", Offset = "0x10E8A7C", VA = "0x10E8A7C")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x10E8A80", Offset = "0x10E8A80", VA = "0x10E8A80")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x10E8A8C", Offset = "0x10E8A8C", VA = "0x10E8A8C")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x10E8A90", Offset = "0x10E8A90", VA = "0x10E8A90")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x10E8A94", Offset = "0x10E8A94", VA = "0x10E8A94")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x10E8A98", Offset = "0x10E8A98", VA = "0x10E8A98")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x10E83AC", Offset = "0x10E83AC", VA = "0x10E83AC")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x10E8CF8", Offset = "0x10E8CF8", VA = "0x10E8CF8")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x10E85F0", Offset = "0x10E85F0", VA = "0x10E85F0")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x10E8800", Offset = "0x10E8800", VA = "0x10E8800")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x10E8F24", Offset = "0x10E8F24", VA = "0x10E8F24")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x10E8F28", Offset = "0x10E8F28", VA = "0x10E8F28")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x10E93BC", Offset = "0x10E93BC", VA = "0x10E93BC")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E8")]
	public struct Render
	{
		[Token(Token = "0x40012E3")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x10E6168", Offset = "0x10E6168", VA = "0x10E6168")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x10E6238", Offset = "0x10E6238", VA = "0x10E6238")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x10E62C4", Offset = "0x10E62C4", VA = "0x10E62C4")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x10E6344", Offset = "0x10E6344", VA = "0x10E6344")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x10E63B8", Offset = "0x10E63B8", VA = "0x10E63B8")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x10E6448", Offset = "0x10E6448", VA = "0x10E6448")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001800")]
		[Address(RVA = "0x10E64D4", Offset = "0x10E64D4", VA = "0x10E64D4")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001801")]
		[Address(RVA = "0x10E6560", Offset = "0x10E6560", VA = "0x10E6560")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001802")]
		[Address(RVA = "0x10E6628", Offset = "0x10E6628", VA = "0x10E6628")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6001803")]
		[Address(RVA = "0x10E6708", Offset = "0x10E6708", VA = "0x10E6708")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001804")]
		[Address(RVA = "0x10E6844", Offset = "0x10E6844", VA = "0x10E6844")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001805")]
		[Address(RVA = "0x10E68CC", Offset = "0x10E68CC", VA = "0x10E68CC")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x10E69A4", Offset = "0x10E69A4", VA = "0x10E69A4")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001807")]
		[Address(RVA = "0x10E6A4C", Offset = "0x10E6A4C", VA = "0x10E6A4C")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001808")]
		[Address(RVA = "0x10E6AF0", Offset = "0x10E6AF0", VA = "0x10E6AF0")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001809")]
		[Address(RVA = "0x10E6B70", Offset = "0x10E6B70", VA = "0x10E6B70")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x600180A")]
		[Address(RVA = "0x10E6BE4", Offset = "0x10E6BE4", VA = "0x10E6BE4")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x600180B")]
		[Address(RVA = "0x10E6C90", Offset = "0x10E6C90", VA = "0x10E6C90")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600180C")]
		[Address(RVA = "0x10E6D10", Offset = "0x10E6D10", VA = "0x10E6D10")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600180D")]
		[Address(RVA = "0x10E6D90", Offset = "0x10E6D90", VA = "0x10E6D90")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600180E")]
		[Address(RVA = "0x10E6E20", Offset = "0x10E6E20", VA = "0x10E6E20")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600180F")]
		[Address(RVA = "0x10E6EB0", Offset = "0x10E6EB0", VA = "0x10E6EB0")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001810")]
		[Address(RVA = "0x10E6F30", Offset = "0x10E6F30", VA = "0x10E6F30")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x10E6FE0", Offset = "0x10E6FE0", VA = "0x10E6FE0")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x10E6FE4", Offset = "0x10E6FE4", VA = "0x10E6FE4")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x10E6FE8", Offset = "0x10E6FE8", VA = "0x10E6FE8")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x10E709C", Offset = "0x10E709C", VA = "0x10E709C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76C808", Offset = "0x76C808")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x10E70A0", Offset = "0x10E70A0", VA = "0x10E70A0")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x10E70A4", Offset = "0x10E70A4", VA = "0x10E70A4")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x10E71A8", Offset = "0x10E71A8", VA = "0x10E71A8")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x10E71AC", Offset = "0x10E71AC", VA = "0x10E71AC")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x10E72E8", Offset = "0x10E72E8", VA = "0x10E72E8")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x10E72EC", Offset = "0x10E72EC", VA = "0x10E72EC")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x10E72F0", Offset = "0x10E72F0", VA = "0x10E72F0")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x10E72F4", Offset = "0x10E72F4", VA = "0x10E72F4")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x10E7380", Offset = "0x10E7380", VA = "0x10E7380")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x10E7384", Offset = "0x10E7384", VA = "0x10E7384")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x10E74C4", Offset = "0x10E74C4", VA = "0x10E74C4")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x10E74C8", Offset = "0x10E74C8", VA = "0x10E74C8")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x10E7994", Offset = "0x10E7994", VA = "0x10E7994")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x10E7998", Offset = "0x10E7998", VA = "0x10E7998")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x10E799C", Offset = "0x10E799C", VA = "0x10E799C")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x10E79A0", Offset = "0x10E79A0", VA = "0x10E79A0")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x10E79A4", Offset = "0x10E79A4", VA = "0x10E79A4")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x10E79AC", Offset = "0x10E79AC", VA = "0x10E79AC")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public struct System
	{
		[Token(Token = "0x40012E4")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40012E5")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x10E93C0", Offset = "0x10E93C0", VA = "0x10E93C0")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001828")]
		[Address(RVA = "0x10E9450", Offset = "0x10E9450", VA = "0x10E9450")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001829")]
		[Address(RVA = "0x10E94C4", Offset = "0x10E94C4", VA = "0x10E94C4")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x600182A")]
		[Address(RVA = "0x10E9538", Offset = "0x10E9538", VA = "0x10E9538")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x600182B")]
		[Address(RVA = "0x10E95AC", Offset = "0x10E95AC", VA = "0x10E95AC")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x600182C")]
		[Address(RVA = "0x10E9620", Offset = "0x10E9620", VA = "0x10E9620")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0x10E9694", Offset = "0x10E9694", VA = "0x10E9694")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x600182E")]
		[Address(RVA = "0x10E9704", Offset = "0x10E9704", VA = "0x10E9704")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x10E9784", Offset = "0x10E9784", VA = "0x10E9784")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6001830")]
		[Address(RVA = "0x10E9974", Offset = "0x10E9974", VA = "0x10E9974")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x10E99FC", Offset = "0x10E99FC", VA = "0x10E99FC")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6001832")]
		[Address(RVA = "0x10E9A70", Offset = "0x10E9A70", VA = "0x10E9A70")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x10E9AE4", Offset = "0x10E9AE4", VA = "0x10E9AE4")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x10E9B64", Offset = "0x10E9B64", VA = "0x10E9B64")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x10E9BEC", Offset = "0x10E9BEC", VA = "0x10E9BEC")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001836")]
		[Address(RVA = "0x10E9C6C", Offset = "0x10E9C6C", VA = "0x10E9C6C")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x10E9CDC", Offset = "0x10E9CDC", VA = "0x10E9CDC")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x10E9D5C", Offset = "0x10E9D5C", VA = "0x10E9D5C")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x10E9DF4", Offset = "0x10E9DF4", VA = "0x10E9DF4")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x10E9E84", Offset = "0x10E9E84", VA = "0x10E9E84")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x600183B")]
		[Address(RVA = "0x10E9F14", Offset = "0x10E9F14", VA = "0x10E9F14")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x10E9F84", Offset = "0x10E9F84", VA = "0x10E9F84")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x600183D")]
		[Address(RVA = "0x10EA00C", Offset = "0x10EA00C", VA = "0x10EA00C")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x10EA088", Offset = "0x10EA088", VA = "0x10EA088")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x600183F")]
		[Address(RVA = "0x10E60F4", Offset = "0x10E60F4", VA = "0x10E60F4")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6001840")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x10E8AA0", Offset = "0x10E8AA0", VA = "0x10E8AA0")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x10EA110", Offset = "0x10EA110", VA = "0x10EA110")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x10EA368", Offset = "0x10EA368", VA = "0x10EA368")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x10EA3FC", Offset = "0x10EA3FC", VA = "0x10EA3FC")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x10EA444", Offset = "0x10EA444", VA = "0x10EA444")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x10EA44C", Offset = "0x10EA44C", VA = "0x10EA44C")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x10E52EC", Offset = "0x10E52EC", VA = "0x10E52EC")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x10E5728", Offset = "0x10E5728", VA = "0x10E5728")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x10EA454", Offset = "0x10EA454", VA = "0x10EA454")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x10EA53C", Offset = "0x10EA53C", VA = "0x10EA53C")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x10EA648", Offset = "0x10EA648", VA = "0x10EA648")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x10EA754", Offset = "0x10EA754", VA = "0x10EA754")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x10EA860", Offset = "0x10EA860", VA = "0x10EA860")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x10EAB00", Offset = "0x10EAB00", VA = "0x10EAB00")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x10EAD4C", Offset = "0x10EAD4C", VA = "0x10EAD4C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x10EAE58", Offset = "0x10EAE58", VA = "0x10EAE58")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x10EAF64", Offset = "0x10EAF64", VA = "0x10EAF64")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x10EB070", Offset = "0x10EB070", VA = "0x10EB070")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x10EB188", Offset = "0x10EB188", VA = "0x10EB188")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x10EB294", Offset = "0x10EB294", VA = "0x10EB294")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x10EB3B0", Offset = "0x10EB3B0", VA = "0x10EB3B0")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x10EB7D0", Offset = "0x10EB7D0", VA = "0x10EB7D0")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x10EB890", Offset = "0x10EB890", VA = "0x10EB890")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x10EB898", Offset = "0x10EB898", VA = "0x10EB898")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x10EB89C", Offset = "0x10EB89C", VA = "0x10EB89C")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x10EB8A0", Offset = "0x10EB8A0", VA = "0x10EB8A0")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x10EB8A4", Offset = "0x10EB8A4", VA = "0x10EB8A4")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x10EB920", Offset = "0x10EB920", VA = "0x10EB920")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x10EBA68", Offset = "0x10EBA68", VA = "0x10EBA68")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x10EBA6C", Offset = "0x10EBA6C", VA = "0x10EBA6C")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x10EBB00", Offset = "0x10EBB00", VA = "0x10EBB00")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x10EBB94", Offset = "0x10EBB94", VA = "0x10EBB94")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x10EBB98", Offset = "0x10EBB98", VA = "0x10EBB98")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x10EBB9C", Offset = "0x10EBB9C", VA = "0x10EBB9C")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x10EBBA4", Offset = "0x10EBBA4", VA = "0x10EBBA4")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x10EBBA8", Offset = "0x10EBBA8", VA = "0x10EBBA8")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x10EBBAC", Offset = "0x10EBBAC", VA = "0x10EBBAC")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x10EBE14", Offset = "0x10EBE14", VA = "0x10EBE14")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x10EC040", Offset = "0x10EC040", VA = "0x10EC040")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x10EC310", Offset = "0x10EC310", VA = "0x10EC310")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x10EC680", Offset = "0x10EC680", VA = "0x10EC680")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x10EC790", Offset = "0x10EC790", VA = "0x10EC790")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x10EC8E4", Offset = "0x10EC8E4", VA = "0x10EC8E4")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x10ECC40", Offset = "0x10ECC40", VA = "0x10ECC40")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x10ECC48", Offset = "0x10ECC48", VA = "0x10ECC48")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x10ECC4C", Offset = "0x10ECC4C", VA = "0x10ECC4C")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x10ECC50", Offset = "0x10ECC50", VA = "0x10ECC50")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x10ECC54", Offset = "0x10ECC54", VA = "0x10ECC54")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x10ECC58", Offset = "0x10ECC58", VA = "0x10ECC58")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x10ECC5C", Offset = "0x10ECC5C", VA = "0x10ECC5C")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x10ECE4C", Offset = "0x10ECE4C", VA = "0x10ECE4C")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x10ED03C", Offset = "0x10ED03C", VA = "0x10ED03C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x10ED234", Offset = "0x10ED234", VA = "0x10ED234")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x10ED42C", Offset = "0x10ED42C", VA = "0x10ED42C")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x10ED61C", Offset = "0x10ED61C", VA = "0x10ED61C")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x10ED814", Offset = "0x10ED814", VA = "0x10ED814")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x10EDA84", Offset = "0x10EDA84", VA = "0x10EDA84")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x10EDCEC", Offset = "0x10EDCEC", VA = "0x10EDCEC")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x10EDEDC", Offset = "0x10EDEDC", VA = "0x10EDEDC")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x10EE14C", Offset = "0x10EE14C", VA = "0x10EE14C")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002EA")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000414")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001662")]
			OuterBoundary,
			[Token(Token = "0x4001663")]
			PlayArea
		}

		[Token(Token = "0x2000415")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000416")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001669")]
			HandLeft,
			[Token(Token = "0x400166A")]
			HandRight,
			[Token(Token = "0x400166B")]
			Head
		}

		[Token(Token = "0x2000417")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x400166D")]
			PVR_NOREASON,
			[Token(Token = "0x400166E")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x400166F")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4001670")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4001671")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4001672")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x40012E6")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600187E")]
		[Address(RVA = "0xC38960", Offset = "0xC38960", VA = "0xC38960")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xC389D0", Offset = "0xC389D0", VA = "0xC389D0")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xC38A44", Offset = "0xC38A44", VA = "0xC38A44")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001881")]
		[Address(RVA = "0xC38AC4", Offset = "0xC38AC4", VA = "0xC38AC4")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001882")]
		[Address(RVA = "0xC38B38", Offset = "0xC38B38", VA = "0xC38B38")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001883")]
		[Address(RVA = "0xC38BB4", Offset = "0xC38BB4", VA = "0xC38BB4")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001884")]
		[Address(RVA = "0xC38C30", Offset = "0xC38C30", VA = "0xC38C30")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001885")]
		[Address(RVA = "0xC38CAC", Offset = "0xC38CAC", VA = "0xC38CAC")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001886")]
		[Address(RVA = "0xC38DB0", Offset = "0xC38DB0", VA = "0xC38DB0")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001887")]
		[Address(RVA = "0xC38ED8", Offset = "0xC38ED8", VA = "0xC38ED8")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xC38F64", Offset = "0xC38F64", VA = "0xC38F64")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001889")]
		[Address(RVA = "0xC3900C", Offset = "0xC3900C", VA = "0xC3900C")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x600188A")]
		[Address(RVA = "0xC39088", Offset = "0xC39088", VA = "0xC39088")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600188B")]
		[Address(RVA = "0xC39108", Offset = "0xC39108", VA = "0xC39108")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600188C")]
		[Address(RVA = "0xC39184", Offset = "0xC39184", VA = "0xC39184")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x600188D")]
		[Address(RVA = "0xC3920C", Offset = "0xC3920C", VA = "0xC3920C")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x600188E")]
		[Address(RVA = "0xC392A4", Offset = "0xC392A4", VA = "0xC392A4")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600188F")]
		[Address(RVA = "0xC39324", Offset = "0xC39324", VA = "0xC39324")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001890")]
		[Address(RVA = "0xC393B4", Offset = "0xC393B4", VA = "0xC393B4")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001891")]
		[Address(RVA = "0xC39434", Offset = "0xC39434", VA = "0xC39434")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xC394A8", Offset = "0xC394A8", VA = "0xC394A8")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC394AC", Offset = "0xC394AC", VA = "0xC394AC")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xC394B0", Offset = "0xC394B0", VA = "0xC394B0")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xC394B8", Offset = "0xC394B8", VA = "0xC394B8")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xC394BC", Offset = "0xC394BC", VA = "0xC394BC")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xC394C0", Offset = "0xC394C0", VA = "0xC394C0")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xC394C4", Offset = "0xC394C4", VA = "0xC394C4")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xC394C8", Offset = "0xC394C8", VA = "0xC394C8")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xC3960C", Offset = "0xC3960C", VA = "0xC3960C")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xC3975C", Offset = "0xC3975C", VA = "0xC3975C")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xC39938", Offset = "0xC39938", VA = "0xC39938")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xC39994", Offset = "0xC39994", VA = "0xC39994")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xC39998", Offset = "0xC39998", VA = "0xC39998")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xC399A0", Offset = "0xC399A0", VA = "0xC399A0")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xC399A4", Offset = "0xC399A4", VA = "0xC399A4")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xC399AC", Offset = "0xC399AC", VA = "0xC399AC")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xC399B0", Offset = "0xC399B0", VA = "0xC399B0")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xC39AF4", Offset = "0xC39AF4", VA = "0xC39AF4")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xC39C38", Offset = "0xC39C38", VA = "0xC39C38")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xC39E18", Offset = "0xC39E18", VA = "0xC39E18")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xC39F50", Offset = "0xC39F50", VA = "0xC39F50")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xC3A074", Offset = "0xC3A074", VA = "0xC3A074")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xC3A198", Offset = "0xC3A198", VA = "0xC3A198")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002EB")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x10E5104", Offset = "0x10E5104", VA = "0x10E5104")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x10E5420", Offset = "0x10E5420", VA = "0x10E5420")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x10E57B0", Offset = "0x10E57B0", VA = "0x10E57B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76C840", Offset = "0x76C840")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x10E5AB8", Offset = "0x10E5AB8", VA = "0x10E5AB8")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x10E5DD4", Offset = "0x10E5DD4", VA = "0x10E5DD4")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x10E60F0", Offset = "0x10E60F0", VA = "0x10E60F0")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002EC")]
	public enum DeviceCommand
	{
		[Token(Token = "0x40012E8")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x40012E9")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20002ED")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x40012EB")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x40012EC")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x40012ED")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x40012EE")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x40012EF")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20002EE")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x40012F0")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x10F04A0", Offset = "0x10F04A0", VA = "0x10F04A0")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x10F0530", Offset = "0x10F0530", VA = "0x10F0530")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x10F05AC", Offset = "0x10F05AC", VA = "0x10F05AC")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x10F0620", Offset = "0x10F0620", VA = "0x10F0620")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x10F06A8", Offset = "0x10F06A8", VA = "0x10F06A8")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x10F06AC", Offset = "0x10F06AC", VA = "0x10F06AC")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x10F06B0", Offset = "0x10F06B0", VA = "0x10F06B0")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x10F06B4", Offset = "0x10F06B4", VA = "0x10F06B4")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x10F0954", Offset = "0x10F0954", VA = "0x10F0954")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x10F0B7C", Offset = "0x10F0B7C", VA = "0x10F0B7C")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x10F0D7C", Offset = "0x10F0D7C", VA = "0x10F0D7C")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x10F0FC4", Offset = "0x10F0FC4", VA = "0x10F0FC4")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x10F1130", Offset = "0x10F1130", VA = "0x10F1130")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x10F126C", Offset = "0x10F126C", VA = "0x10F126C")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x10F147C", Offset = "0x10F147C", VA = "0x10F147C")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x10F176C", Offset = "0x10F176C", VA = "0x10F176C")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x10F19B8", Offset = "0x10F19B8", VA = "0x10F19B8")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x10F06EC", Offset = "0x10F06EC", VA = "0x10F06EC")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x10F0974", Offset = "0x10F0974", VA = "0x10F0974")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x10F0B80", Offset = "0x10F0B80", VA = "0x10F0B80")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x10F0D80", Offset = "0x10F0D80", VA = "0x10F0D80")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x10F1BB0", Offset = "0x10F1BB0", VA = "0x10F1BB0")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x10F1DFC", Offset = "0x10F1DFC", VA = "0x10F1DFC")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x10F1FF4", Offset = "0x10F1FF4", VA = "0x10F1FF4")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x10F21DC", Offset = "0x10F21DC", VA = "0x10F21DC")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x10F23C4", Offset = "0x10F23C4", VA = "0x10F23C4")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x10F259C", Offset = "0x10F259C", VA = "0x10F259C")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x10F2774", Offset = "0x10F2774", VA = "0x10F2774")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x10F2950", Offset = "0x10F2950", VA = "0x10F2950")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x10F2958", Offset = "0x10F2958", VA = "0x10F2958")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x10F1134", Offset = "0x10F1134", VA = "0x10F1134")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x10F0FC8", Offset = "0x10F0FC8", VA = "0x10F0FC8")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20002EF")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xC32280", Offset = "0xC32280", VA = "0xC32280")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xC322E8", Offset = "0xC322E8", VA = "0xC322E8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xC322EC", Offset = "0xC322EC", VA = "0xC322EC")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xC32490", Offset = "0xC32490", VA = "0xC32490")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xC32604", Offset = "0xC32604", VA = "0xC32604")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public static class Achievements
	{
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xC3266C", Offset = "0xC3266C", VA = "0xC3266C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xC32C7C", Offset = "0xC32C7C", VA = "0xC32C7C")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xC32F3C", Offset = "0xC32F3C", VA = "0xC32F3C")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xC331DC", Offset = "0xC331DC", VA = "0xC331DC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xC33474", Offset = "0xC33474", VA = "0xC33474")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xC33684", Offset = "0xC33684", VA = "0xC33684")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xC33924", Offset = "0xC33924", VA = "0xC33924")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xC33B7C", Offset = "0xC33B7C", VA = "0xC33B7C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xC33DD4", Offset = "0xC33DD4", VA = "0xC33DD4")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xC34194", Offset = "0xC34194", VA = "0xC34194")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F1")]
	public enum AchievementType
	{
		[Token(Token = "0x40012F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x769208", Offset = "0x769208")]
		Unknown,
		[Token(Token = "0x40012F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x769240", Offset = "0x769240")]
		Simple,
		[Token(Token = "0x40012FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x769278", Offset = "0x769278")]
		Bitfield,
		[Token(Token = "0x40012FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7692B0", Offset = "0x7692B0")]
		Count
	}
	[Token(Token = "0x20002F2")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xC32774", Offset = "0xC32774", VA = "0xC32774")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xC32348", Offset = "0xC32348", VA = "0xC32348")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xC324EC", Offset = "0xC324EC", VA = "0xC324EC")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xC34C38", Offset = "0xC34C38", VA = "0xC34C38")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xC34D58", Offset = "0xC34D58", VA = "0xC34D58")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xC34E58", Offset = "0xC34E58", VA = "0xC34E58")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xC34F58", Offset = "0xC34F58", VA = "0xC34F58")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xC32D9C", Offset = "0xC32D9C", VA = "0xC32D9C")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xC3305C", Offset = "0xC3305C", VA = "0xC3305C")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xC332E4", Offset = "0xC332E4", VA = "0xC332E4")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xC3357C", Offset = "0xC3357C", VA = "0xC3357C")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xC3379C", Offset = "0xC3379C", VA = "0xC3379C")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xC33A3C", Offset = "0xC33A3C", VA = "0xC33A3C")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xC33C94", Offset = "0xC33C94", VA = "0xC33C94")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xC33F4C", Offset = "0xC33F4C", VA = "0xC33F4C")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xC35058", Offset = "0xC35058", VA = "0xC35058")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xC351FC", Offset = "0xC351FC", VA = "0xC351FC")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xC352F4", Offset = "0xC352F4", VA = "0xC352F4")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xC34B40", Offset = "0xC34B40", VA = "0xC34B40")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xC353EC", Offset = "0xC353EC", VA = "0xC353EC")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xC354EC", Offset = "0xC354EC", VA = "0xC354EC")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xC355EC", Offset = "0xC355EC", VA = "0xC355EC")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xC356EC", Offset = "0xC356EC", VA = "0xC356EC")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xC3584C", Offset = "0xC3584C", VA = "0xC3584C")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xC3594C", Offset = "0xC3594C", VA = "0xC3594C")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xC35A4C", Offset = "0xC35A4C", VA = "0xC35A4C")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xC35B4C", Offset = "0xC35B4C", VA = "0xC35B4C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xC35C4C", Offset = "0xC35C4C", VA = "0xC35C4C")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xC35D4C", Offset = "0xC35D4C", VA = "0xC35D4C")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xC35E88", Offset = "0xC35E88", VA = "0xC35E88")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xC35EF8", Offset = "0xC35EF8", VA = "0xC35EF8")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xC35FF8", Offset = "0xC35FF8", VA = "0xC35FF8")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xC36158", Offset = "0xC36158", VA = "0xC36158")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xC36258", Offset = "0xC36258", VA = "0xC36258")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xC3640C", Offset = "0xC3640C", VA = "0xC3640C")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xC3650C", Offset = "0xC3650C", VA = "0xC3650C")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xC3660C", Offset = "0xC3660C", VA = "0xC3660C")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xC3670C", Offset = "0xC3670C", VA = "0xC3670C")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xC3680C", Offset = "0xC3680C", VA = "0xC3680C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xC3690C", Offset = "0xC3690C", VA = "0xC3690C")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xC36A0C", Offset = "0xC36A0C", VA = "0xC36A0C")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xC36B0C", Offset = "0xC36B0C", VA = "0xC36B0C")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC36C0C", Offset = "0xC36C0C", VA = "0xC36C0C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC36D0C", Offset = "0xC36D0C", VA = "0xC36D0C")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xC37050", Offset = "0xC37050", VA = "0xC37050")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x600190D")]
		[Address(RVA = "0xC3445C", Offset = "0xC3445C", VA = "0xC3445C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xC3718C", Offset = "0xC3718C", VA = "0xC3718C")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x600190F")]
		[Address(RVA = "0xC346FC", Offset = "0xC346FC", VA = "0xC346FC")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xC3499C", Offset = "0xC3499C", VA = "0xC3499C")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x76153C", Offset = "0x76153C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x1700013F")]
		public int Count
		{
			[Token(Token = "0x6001911")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000140")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001912")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		public T Item
		{
			[Token(Token = "0x6001914")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001915")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001921")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public string NextUrl
		{
			[Token(Token = "0x6001922")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001923")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001913")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001916")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001917")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001918")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001919")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600191A")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x600191C")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600191D")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600191E")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001924")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000418")]
		private class RequestCallback
		{
			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xC37838", Offset = "0xC37838", VA = "0xC37838")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xC37840", Offset = "0xC37840", VA = "0xC37840")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xC37874", Offset = "0xC37874", VA = "0xC37874", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000419")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001CFF")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001D00")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xC3725C", Offset = "0xC3725C", VA = "0xC3725C")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xC373CC", Offset = "0xC373CC", VA = "0xC373CC")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xC37654", Offset = "0xC37654", VA = "0xC37654")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xC376EC", Offset = "0xC376EC", VA = "0xC376EC")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xC374A8", Offset = "0xC374A8", VA = "0xC374A8")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xC37C3C", Offset = "0xC37C3C", VA = "0xC37C3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xC37D38", Offset = "0xC37D38", VA = "0xC37D38")]
		private void Update()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xC37DC4", Offset = "0xC37DC4", VA = "0xC37DC4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xC37E20", Offset = "0xC37E20", VA = "0xC37E20")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x200041A")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000146")]
		public T Data
		{
			[Token(Token = "0x6001930")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600192F")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001931")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20002FC")]
	public class Pvr_Message
	{
		[Token(Token = "0x200041B")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x200041C")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001676")]
			Unknown = 0u,
			[Token(Token = "0x4001677")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001678")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001679")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x400167A")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400167B")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400167C")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400167D")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400167E")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400167F")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001680")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4001681")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x200041D")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7692E8", Offset = "0x7692E8")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000147")]
		public MessageType Type
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xC38044", Offset = "0xC38044", VA = "0xC38044")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000148")]
		public bool IsError
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xC3804C", Offset = "0xC3804C", VA = "0xC3804C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public long RequestID
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xC3805C", Offset = "0xC3805C", VA = "0xC3805C")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700014A")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xC38284", Offset = "0xC38284", VA = "0xC38284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C888", Offset = "0x76C888")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xC3822C", Offset = "0xC3822C", VA = "0xC3822C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C878", Offset = "0x76C878")]
			set
			{
			}
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xC37E30", Offset = "0xC37E30", VA = "0xC37E30")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xC38064", Offset = "0xC38064", VA = "0xC38064", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xC3806C", Offset = "0xC3806C", VA = "0xC3806C", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xC38074", Offset = "0xC38074", VA = "0xC38074", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xC3807C", Offset = "0xC3807C", VA = "0xC3807C", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xC38084", Offset = "0xC38084", VA = "0xC38084", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC3808C", Offset = "0xC3808C", VA = "0xC3808C")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC37448", Offset = "0xC37448", VA = "0xC37448")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FD")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xC34358", Offset = "0xC34358", VA = "0xC34358")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xC343B8", Offset = "0xC343B8", VA = "0xC343B8", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xC343FC", Offset = "0xC343FC", VA = "0xC343FC", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xC345F8", Offset = "0xC345F8", VA = "0xC345F8")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xC34658", Offset = "0xC34658", VA = "0xC34658", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xC3469C", Offset = "0xC3469C", VA = "0xC3469C", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FF")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6001945")]
		[Address(RVA = "0xC34898", Offset = "0xC34898", VA = "0xC34898")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xC348F8", Offset = "0xC348F8", VA = "0xC348F8", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xC3493C", Offset = "0xC3493C", VA = "0xC3493C", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000300")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001948")]
		[Address(RVA = "0xC34A38", Offset = "0xC34A38", VA = "0xC34A38")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xC34A98", Offset = "0xC34A98", VA = "0xC34A98", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xC34ADC", Offset = "0xC34ADC", VA = "0xC34ADC", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000301")]
	public class Error
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xC3430C", Offset = "0xC3430C", VA = "0xC3430C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000302")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x600194C")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x600194D")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class Request
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7692F8", Offset = "0x7692F8")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700014B")]
		public long RequestID
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xC38834", Offset = "0xC38834", VA = "0xC38834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C898", Offset = "0x76C898")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xC3883C", Offset = "0xC3883C", VA = "0xC3883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76C8A8", Offset = "0x76C8A8")]
			set
			{
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xC38808", Offset = "0xC38808", VA = "0xC38808")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xC38844", Offset = "0xC38844", VA = "0xC38844")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xC388CC", Offset = "0xC388CC", VA = "0xC388CC", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xC37D40", Offset = "0xC37D40", VA = "0xC37D40")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
