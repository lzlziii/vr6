using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;
using AK.Wwise;
using B83.Win32;
using BezierSolution;
using City;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FSG.MeshAnimator;
using Folk;
using Il2CppDummyDll;
using InControl;
using JetBrains.Annotations;
using Moments;
using Moments.Encoder;
using MoonMode;
using MoonMode.SaveGame;
using NaughtyAttributes;
using NewtonVR;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.Framework;
using OVRSimpleJSON;
using Shapes;
using SignedDistanceFields;
using Sigtrap.Relays;
using SmartData.Abstract;
using SmartData.Interfaces;
using SmartData.SmartBool.Data;
using SmartData.SmartEvent;
using SmartData.SmartEvent.Data;
using SmartData.SmartFloat;
using SmartData.SmartFloat.Data;
using SmartData.SmartInt.Data;
using SmartData.SmartString.Data;
using SmartData.SmartVector3.Data;
using TMPro;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Utils;
using Vitei;
using Viveport.Internal;

[assembly: AssemblyVersion("1.0.8550.17956")]
[Token(Token = "0x2000002")]
public class AoTGeneratedClassDoNotEdit
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x149CC90", Offset = "0x149CC90", VA = "0x149CC90")]
	public static void DontCallThisItsForAOTCompilationOnly()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x149D36C", Offset = "0x149D36C", VA = "0x149D36C")]
	public AoTGeneratedClassDoNotEdit()
	{
	}
}
[Token(Token = "0x2000003")]
public class AI_Manager : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AI_Manager _instance;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<AI_Unit> _units;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x138AF00", Offset = "0x138AF00", VA = "0x138AF00")]
	public static void Add(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x138B094", Offset = "0x138B094", VA = "0x138B094")]
	public static void Remove(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x138B120", Offset = "0x138B120", VA = "0x138B120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x138B23C", Offset = "0x138B23C", VA = "0x138B23C")]
	public AI_Manager()
	{
	}
}
[Token(Token = "0x2000004")]
public class AI_Unit : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	public enum ActionType
	{
		[Token(Token = "0x400000F")]
		idle,
		[Token(Token = "0x4000010")]
		move,
		[Token(Token = "0x4000011")]
		die,
		[Token(Token = "0x4000012")]
		attack
	}

	[Serializable]
	[Token(Token = "0x2000006")]
	public struct AIAction
	{
		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActionType type;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshAnimationBase[] animations;
	}

	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D513C", Offset = "0x8D513C")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AI_Unit <>4__this;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string> dieAction;

		[Token(Token = "0x600000E")]
		[Address(RVA = "0xFF367C", Offset = "0xFF367C", VA = "0xFF367C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0xFF3684", Offset = "0xFF3684", VA = "0xFF3684")]
		internal void <PerformAction>b__0(string anim)
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _maxMovingUnits;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _movingUnits;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshAnimatorBase meshAnimator;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIAction[] actions;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxMoveDistance;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moveSpeed;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _chooseNewAction;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AIAction _currentAction;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _actionEndTime;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _currentPosition;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _movePosition;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x138B2D4", Offset = "0x138B2D4", VA = "0x138B2D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x138B38C", Offset = "0x138B38C", VA = "0x138B38C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x138B238", Offset = "0x138B238", VA = "0x138B238")]
	public void Tick(float time, float deltaTime)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x138B3EC", Offset = "0x138B3EC", VA = "0x138B3EC")]
	private void PerformAction(float time, float deltaTime)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x138BA3C", Offset = "0x138BA3C", VA = "0x138BA3C")]
	public AI_Unit()
	{
	}
}
[Token(Token = "0x2000008")]
public class ArmySpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000009")]
	public struct Unit
	{
		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int count;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float delay;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loop;
	}

	[Token(Token = "0x200000A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D514C", Offset = "0x8D514C")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmySpawner <>4__this;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <center>5__2;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <j>5__4;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000018")]
			[Address(RVA = "0xFFD4B4", Offset = "0xFFD4B4", VA = "0xFFD4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0xFFD4FC", Offset = "0xFFD4FC", VA = "0xFFD4FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0xFFD11C", Offset = "0xFFD11C", VA = "0xFFD11C")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xFFD148", Offset = "0xFFD148", VA = "0xFFD148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xFFD14C", Offset = "0xFFD14C", VA = "0xFFD14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xFFD4BC", Offset = "0xFFD4BC", VA = "0xFFD4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, Stack<GameObject>> _pool;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 spawnSize;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 sizeMult;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Unit[] units;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x14A2FFC", Offset = "0x14A2FFC", VA = "0x14A2FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E624C", Offset = "0x8E624C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x14A3074", Offset = "0x14A3074", VA = "0x14A3074")]
	private GameObject LoadFromPool(Unit unit)
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x14A3238", Offset = "0x14A3238", VA = "0x14A3238")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x14A3278", Offset = "0x14A3278", VA = "0x14A3278")]
	public ArmySpawner()
	{
	}
}
[Token(Token = "0x200000B")]
public class DelayedDestroy : MonoBehaviour
{
	[Token(Token = "0x200000C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D515C", Offset = "0x8D515C")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedDestroy <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000020")]
			[Address(RVA = "0xE770D8", Offset = "0xE770D8", VA = "0xE770D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000022")]
			[Address(RVA = "0xE77120", Offset = "0xE77120", VA = "0xE77120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600001D")]
		[Address(RVA = "0xE76FA8", Offset = "0xE76FA8", VA = "0xE76FA8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600001E")]
		[Address(RVA = "0xE76FD4", Offset = "0xE76FD4", VA = "0xE76FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0xE76FD8", Offset = "0xE76FD8", VA = "0xE76FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0xE770E0", Offset = "0xE770E0", VA = "0xE770E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF2ECB4", Offset = "0xF2ECB4", VA = "0xF2ECB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E62FC", Offset = "0x8E62FC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF2ED2C", Offset = "0xF2ED2C", VA = "0xF2ED2C")]
	public DelayedDestroy()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D516C", Offset = "0x8D516C")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51A4", Offset = "0x8D51A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AI_Unit> <>9__14_0;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x1058BB8", Offset = "0x1058BB8", VA = "0x1058BB8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0x1058BC0", Offset = "0x1058BC0", VA = "0x1058BC0")]
		internal bool <LateUpdate>b__14_0(AI_Unit x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollMult;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControlled controlled;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float x;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float y;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool locked;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x161556C", Offset = "0x161556C", VA = "0x161556C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x16155A4", Offset = "0x16155A4", VA = "0x16155A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1615F40", Offset = "0x1615F40", VA = "0x1615F40")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1615F70", Offset = "0x1615F70", VA = "0x1615F70")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x200000F")]
public class PlayerControlled : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	private const string AnimIdle = "BreathingIdle";

	[Token(Token = "0x4000039")]
	private const string AnimForward = "Running";

	[Token(Token = "0x400003A")]
	private const string AnimBackward = "RunningBackward";

	[Token(Token = "0x400003B")]
	private const string AnimLeft = "Running";

	[Token(Token = "0x400003C")]
	private const string AnimRight = "Running";

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _moveSpeed;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _origTarget;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentAnim;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x126989C", Offset = "0x126989C", VA = "0x126989C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1269970", Offset = "0x1269970", VA = "0x1269970")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1269A60", Offset = "0x1269A60", VA = "0x1269A60")]
	private void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1269FC0", Offset = "0x1269FC0", VA = "0x1269FC0")]
	public PlayerControlled()
	{
	}
}
[Token(Token = "0x2000010")]
public class BoidComponent : MonoBehaviour
{
	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51B4", Offset = "0x8D51B4")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoidComponent <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000035")]
			[Address(RVA = "0x10007F8", Offset = "0x10007F8", VA = "0x10007F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000037")]
			[Address(RVA = "0x1000840", Offset = "0x1000840", VA = "0x1000840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x1000674", Offset = "0x1000674", VA = "0x1000674")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x10006A0", Offset = "0x10006A0", VA = "0x10006A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x10006A4", Offset = "0x10006A4", VA = "0x10006A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x1000800", Offset = "0x1000800", VA = "0x1000800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion velocity;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x104B678", Offset = "0x104B678", VA = "0x104B678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E63AC", Offset = "0x8E63AC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x104B6F0", Offset = "0x104B6F0", VA = "0x104B6F0")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x104B7D0", Offset = "0x104B7D0", VA = "0x104B7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x104B914", Offset = "0x104B914", VA = "0x104B914")]
	public BoidComponent()
	{
	}
}
[Token(Token = "0x2000012")]
public class SetRandomColor : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51C4", Offset = "0x8D51C4")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRandomColor <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003D")]
			[Address(RVA = "0xEADC18", Offset = "0xEADC18", VA = "0xEADC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600003F")]
			[Address(RVA = "0xEADC60", Offset = "0xEADC60", VA = "0xEADC60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003A")]
		[Address(RVA = "0xEADACC", Offset = "0xEADACC", VA = "0xEADACC")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0xEADAF8", Offset = "0xEADAF8", VA = "0xEADAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0xEADAFC", Offset = "0xEADAFC", VA = "0xEADAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xEADC20", Offset = "0xEADC20", VA = "0xEADC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xEDEC88", Offset = "0xEDEC88", VA = "0xEDEC88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E645C", Offset = "0x8E645C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xEDED00", Offset = "0xEDED00", VA = "0xEDED00")]
	public SetRandomColor()
	{
	}
}
[Token(Token = "0x2000014")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public delegate void OnClick();

	[Token(Token = "0x2000016")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000017")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000018")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000019")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51D4", Offset = "0x8D51D4")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000061")]
		[Address(RVA = "0xE75A10", Offset = "0xE75A10", VA = "0xE75A10")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0xE75A18", Offset = "0xE75A18", VA = "0xE75A18")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51E4", Offset = "0x8D51E4")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000063")]
		[Address(RVA = "0xE75C3C", Offset = "0xE75C3C", VA = "0xE75C3C")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0xE75C44", Offset = "0xE75C44", VA = "0xE75C44")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51F4", Offset = "0x8D51F4")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000065")]
		[Address(RVA = "0xE75E90", Offset = "0xE75E90", VA = "0xE75E90")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xE75E98", Offset = "0xE75E98", VA = "0xE75E98")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5204", Offset = "0x8D5204")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000067")]
		[Address(RVA = "0xE7622C", Offset = "0xE7622C", VA = "0xE7622C")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0xE76234", Offset = "0xE76234", VA = "0xE76234")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5214", Offset = "0x8D5214")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000069")]
		[Address(RVA = "0xE76254", Offset = "0xE76254", VA = "0xE76254")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0xE7625C", Offset = "0xE7625C", VA = "0xE7625C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000048")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000049")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400004A")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xF27974", Offset = "0xF27974", VA = "0xF27974")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xF27EA8", Offset = "0xF27EA8", VA = "0xF27EA8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xF28270", Offset = "0xF28270", VA = "0xF28270")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF2842C", Offset = "0xF2842C", VA = "0xF2842C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF2866C", Offset = "0xF2866C", VA = "0xF2866C")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF28260", Offset = "0xF28260", VA = "0xF28260")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF2899C", Offset = "0xF2899C", VA = "0xF2899C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF28CBC", Offset = "0xF28CBC", VA = "0xF28CBC")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF29084", Offset = "0xF29084", VA = "0xF29084")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xF29188", Offset = "0xF29188", VA = "0xF29188")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xF2936C", Offset = "0xF2936C", VA = "0xF2936C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF29410", Offset = "0xF29410", VA = "0xF29410")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF29600", Offset = "0xF29600", VA = "0xF29600")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF29808", Offset = "0xF29808", VA = "0xF29808")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF29B0C", Offset = "0xF29B0C", VA = "0xF29B0C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF29C08", Offset = "0xF29C08", VA = "0xF29C08")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xF29CB4", Offset = "0xF29CB4", VA = "0xF29CB4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200001E")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x12AB568", Offset = "0x12AB568", VA = "0x12AB568")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x12AB618", Offset = "0x12AB618", VA = "0x12AB618")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x12AB6D8", Offset = "0x12AB6D8", VA = "0x12AB6D8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x12AB714", Offset = "0x12AB714", VA = "0x12AB714")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200001F")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000020")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400007A")]
		On,
		[Token(Token = "0x400007B")]
		Off,
		[Token(Token = "0x400007C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000009")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x177161C", Offset = "0x177161C", VA = "0x177161C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x17715D8", Offset = "0x17715D8", VA = "0x17715D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1771624", Offset = "0x1771624", VA = "0x1771624")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1771680", Offset = "0x1771680", VA = "0x1771680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x17717C4", Offset = "0x17717C4", VA = "0x17717C4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x17717E0", Offset = "0x17717E0", VA = "0x17717E0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1771834", Offset = "0x1771834", VA = "0x1771834")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x17719F0", Offset = "0x17719F0", VA = "0x17719F0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1771B04", Offset = "0x1771B04", VA = "0x1771B04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1771B94", Offset = "0x1771B94", VA = "0x1771B94")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1771C60", Offset = "0x1771C60", VA = "0x1771C60")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1771D14", Offset = "0x1771D14", VA = "0x1771D14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1771E00", Offset = "0x1771E00", VA = "0x1771E00")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000021")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400007E")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400007F")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9CB4", Offset = "0x8D9CB4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9CEC", Offset = "0x8D9CEC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D24", Offset = "0x8D9D24")]
	public float HeightOffset;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D5C", Offset = "0x8D9D5C")]
	public float MinimumHeight;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D94", Offset = "0x8D9D94")]
	public float MaximumHeight;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x13CCE00", Offset = "0x13CCE00", VA = "0x13CCE00")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x13CCE08", Offset = "0x13CCE08", VA = "0x13CCE08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x13CCE94", Offset = "0x13CCE94", VA = "0x13CCE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x13CCF28", Offset = "0x13CCF28", VA = "0x13CCF28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x13CCFBC", Offset = "0x13CCFBC", VA = "0x13CCFBC")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x13CD2E8", Offset = "0x13CD2E8", VA = "0x13CD2E8")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x13CD518", Offset = "0x13CD518", VA = "0x13CD518")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000022")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1777C20", Offset = "0x1777C20", VA = "0x1777C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1777CEC", Offset = "0x1777CEC", VA = "0x1777CEC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000023")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000024")]
	public enum States
	{
		[Token(Token = "0x40000AD")]
		Ready,
		[Token(Token = "0x40000AE")]
		Aim,
		[Token(Token = "0x40000AF")]
		CancelAim,
		[Token(Token = "0x40000B0")]
		PreTeleport,
		[Token(Token = "0x40000B1")]
		CancelTeleport,
		[Token(Token = "0x40000B2")]
		Teleporting,
		[Token(Token = "0x40000B3")]
		PostTeleport
	}

	[Token(Token = "0x2000025")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40000B5")]
		None,
		[Token(Token = "0x40000B6")]
		Aim,
		[Token(Token = "0x40000B7")]
		PreTeleport,
		[Token(Token = "0x40000B8")]
		Teleport
	}

	[Token(Token = "0x2000026")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40000BA")]
		Point,
		[Token(Token = "0x40000BB")]
		Sphere,
		[Token(Token = "0x40000BC")]
		Capsule
	}

	[Token(Token = "0x2000027")]
	public class AimData
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA1AC", Offset = "0x8DA1AC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700000D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60000BA")]
			[Address(RVA = "0x1056E04", Offset = "0x1056E04", VA = "0x1056E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6984", Offset = "0x8E6984")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000BB")]
			[Address(RVA = "0x1056E0C", Offset = "0x1056E0C", VA = "0x1056E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6994", Offset = "0x8E6994")]
			private set
			{
			}
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x1056D80", Offset = "0x1056D80", VA = "0x1056D80")]
		public AimData()
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x1056E14", Offset = "0x1056E14", VA = "0x1056E14")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5224", Offset = "0x8D5224")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x1056BCC", Offset = "0x1056BCC", VA = "0x1056BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C2")]
			[Address(RVA = "0x1056C14", Offset = "0x1056C14", VA = "0x1056C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1056A90", Offset = "0x1056A90", VA = "0x1056A90")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x1056ABC", Offset = "0x1056ABC", VA = "0x1056ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x1056AC0", Offset = "0x1056AC0", VA = "0x1056AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x1056BD4", Offset = "0x1056BD4", VA = "0x1056BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5234", Offset = "0x8D5234")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x10564FC", Offset = "0x10564FC", VA = "0x10564FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0x1056544", Offset = "0x1056544", VA = "0x1056544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x1056374", Offset = "0x1056374", VA = "0x1056374")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x10563A0", Offset = "0x10563A0", VA = "0x10563A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x10563A4", Offset = "0x10563A4", VA = "0x10563A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x1056504", Offset = "0x1056504", VA = "0x1056504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5244", Offset = "0x8D5244")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CC")]
			[Address(RVA = "0x1056628", Offset = "0x1056628", VA = "0x1056628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0x1056670", Offset = "0x1056670", VA = "0x1056670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x105654C", Offset = "0x105654C", VA = "0x105654C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1056578", Offset = "0x1056578", VA = "0x1056578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x105657C", Offset = "0x105657C", VA = "0x105657C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x1056630", Offset = "0x1056630", VA = "0x1056630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5254", Offset = "0x8D5254")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x1056A40", Offset = "0x1056A40", VA = "0x1056A40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0x1056A88", Offset = "0x1056A88", VA = "0x1056A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x1056924", Offset = "0x1056924", VA = "0x1056924")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x1056950", Offset = "0x1056950", VA = "0x1056950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x1056954", Offset = "0x1056954", VA = "0x1056954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x1056A48", Offset = "0x1056A48", VA = "0x1056A48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5264", Offset = "0x8D5264")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0x1056754", Offset = "0x1056754", VA = "0x1056754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0x105679C", Offset = "0x105679C", VA = "0x105679C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1056678", Offset = "0x1056678", VA = "0x1056678")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x10566A4", Offset = "0x10566A4", VA = "0x10566A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x10566A8", Offset = "0x10566A8", VA = "0x10566A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x105675C", Offset = "0x105675C", VA = "0x105675C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5274", Offset = "0x8D5274")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0x1056D30", Offset = "0x1056D30", VA = "0x1056D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0x1056D78", Offset = "0x1056D78", VA = "0x1056D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1056C1C", Offset = "0x1056C1C", VA = "0x1056C1C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1056C48", Offset = "0x1056C48", VA = "0x1056C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1056C4C", Offset = "0x1056C4C", VA = "0x1056C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1056D38", Offset = "0x1056D38", VA = "0x1056D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5284", Offset = "0x8D5284")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x10568D4", Offset = "0x10568D4", VA = "0x10568D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x105691C", Offset = "0x105691C", VA = "0x105691C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x10567A4", Offset = "0x10567A4", VA = "0x10567A4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x10567D0", Offset = "0x10567D0", VA = "0x10567D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x10567D4", Offset = "0x10567D4", VA = "0x10567D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x10568DC", Offset = "0x10568DC", VA = "0x10568DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9DCC", Offset = "0x8D9DCC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9E04", Offset = "0x8D9E04")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9E3C", Offset = "0x8D9E3C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9E74", Offset = "0x8D9E74")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9EAC", Offset = "0x8D9EAC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9EE4", Offset = "0x8D9EE4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9F1C", Offset = "0x8D9F1C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9F54", Offset = "0x8D9F54")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9F8C", Offset = "0x8D9F8C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9F9C", Offset = "0x8D9F9C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9FD4", Offset = "0x8D9FD4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA01C", Offset = "0x8DA01C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA02C", Offset = "0x8DA02C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA064", Offset = "0x8DA064")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA09C", Offset = "0x8DA09C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA0D4", Offset = "0x8DA0D4")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000A")]
	public States CurrentState
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x17787E8", Offset = "0x17787E8", VA = "0x17787E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E650C", Offset = "0x8E650C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x17787F0", Offset = "0x17787F0", VA = "0x17787F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E651C", Offset = "0x8E651C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x1778A14", Offset = "0x1778A14", VA = "0x1778A14")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x1778A3C", Offset = "0x1778A3C", VA = "0x1778A3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E654C", Offset = "0x8E654C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x1778A44", Offset = "0x1778A44", VA = "0x1778A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E655C", Offset = "0x8E655C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x17787F8", Offset = "0x17787F8", VA = "0x17787F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E652C", Offset = "0x8E652C")]
		add
		{
		}
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1778898", Offset = "0x1778898", VA = "0x1778898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E653C", Offset = "0x8E653C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1779084", Offset = "0x1779084", VA = "0x1779084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E65A4", Offset = "0x8E65A4")]
		add
		{
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x1779124", Offset = "0x1779124", VA = "0x1779124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E65B4", Offset = "0x8E65B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x17791C4", Offset = "0x17791C4", VA = "0x17791C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6624", Offset = "0x8E6624")]
		add
		{
		}
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x1779264", Offset = "0x1779264", VA = "0x1779264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6634", Offset = "0x8E6634")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1779304", Offset = "0x1779304", VA = "0x1779304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6644", Offset = "0x8E6644")]
		add
		{
		}
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x17793A4", Offset = "0x17793A4", VA = "0x17793A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6654", Offset = "0x8E6654")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x17794B4", Offset = "0x17794B4", VA = "0x17794B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6664", Offset = "0x8E6664")]
		add
		{
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1779554", Offset = "0x1779554", VA = "0x1779554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6674", Offset = "0x8E6674")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x177966C", Offset = "0x177966C", VA = "0x177966C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E66E4", Offset = "0x8E66E4")]
		add
		{
		}
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x177970C", Offset = "0x177970C", VA = "0x177970C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E66F4", Offset = "0x8E66F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x1779824", Offset = "0x1779824", VA = "0x1779824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6764", Offset = "0x8E6764")]
		add
		{
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x17798C4", Offset = "0x17798C4", VA = "0x17798C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6774", Offset = "0x8E6774")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x17799DC", Offset = "0x17799DC", VA = "0x17799DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E67E4", Offset = "0x8E67E4")]
		add
		{
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1779A7C", Offset = "0x1779A7C", VA = "0x1779A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E67F4", Offset = "0x8E67F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1779B94", Offset = "0x1779B94", VA = "0x1779B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6864", Offset = "0x8E6864")]
		add
		{
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1779C34", Offset = "0x1779C34", VA = "0x1779C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6874", Offset = "0x8E6874")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1779D4C", Offset = "0x1779D4C", VA = "0x1779D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E68E4", Offset = "0x8E68E4")]
		add
		{
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x1779DEC", Offset = "0x1779DEC", VA = "0x1779DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E68F4", Offset = "0x8E68F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x1779F04", Offset = "0x1779F04", VA = "0x1779F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6964", Offset = "0x8E6964")]
		add
		{
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x1779FA4", Offset = "0x1779FA4", VA = "0x1779FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6974", Offset = "0x8E6974")]
		remove
		{
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1778494", Offset = "0x1778494", VA = "0x1778494")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x17784B8", Offset = "0x17784B8", VA = "0x17784B8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1778938", Offset = "0x1778938", VA = "0x1778938")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1778A4C", Offset = "0x1778A4C", VA = "0x1778A4C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1778C98", Offset = "0x1778C98", VA = "0x1778C98")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E656C", Offset = "0x8E656C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1778D4C", Offset = "0x1778D4C", VA = "0x1778D4C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1778E4C", Offset = "0x1778E4C", VA = "0x1778E4C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1778E68", Offset = "0x1778E68", VA = "0x1778E68")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1778F2C", Offset = "0x1778F2C", VA = "0x1778F2C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1778F70", Offset = "0x1778F70", VA = "0x1778F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1778FD4", Offset = "0x1778FD4", VA = "0x1778FD4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x177907C", Offset = "0x177907C", VA = "0x177907C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1779004", Offset = "0x1779004", VA = "0x1779004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E65C4", Offset = "0x8E65C4")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1779444", Offset = "0x1779444", VA = "0x1779444")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x17795F4", Offset = "0x17795F4", VA = "0x17795F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6684", Offset = "0x8E6684")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x17797AC", Offset = "0x17797AC", VA = "0x17797AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6704", Offset = "0x8E6704")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1779964", Offset = "0x1779964", VA = "0x1779964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6784", Offset = "0x8E6784")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1779B1C", Offset = "0x1779B1C", VA = "0x1779B1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6804", Offset = "0x8E6804")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1779CD4", Offset = "0x1779CD4", VA = "0x1779CD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6884", Offset = "0x8E6884")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1779E8C", Offset = "0x1779E8C", VA = "0x1779E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6904", Offset = "0x8E6904")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x177A044", Offset = "0x177A044", VA = "0x177A044")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x177A184", Offset = "0x177A184", VA = "0x177A184")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x177A1B8", Offset = "0x177A1B8", VA = "0x177A1B8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x177A280", Offset = "0x177A280", VA = "0x177A280")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x177A378", Offset = "0x177A378", VA = "0x177A378")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200002F")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xEE2498", Offset = "0xEE2498", VA = "0xEE2498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6BD4", Offset = "0x8E6BD4")]
		add
		{
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xEE2538", Offset = "0xEE2538", VA = "0xEE2538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6BE4", Offset = "0x8E6BE4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xEE25D8", Offset = "0xEE25D8", VA = "0xEE25D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6BF4", Offset = "0x8E6BF4")]
		add
		{
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xEE2678", Offset = "0xEE2678", VA = "0xEE2678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6C04", Offset = "0x8E6C04")]
		remove
		{
		}
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xEE2718", Offset = "0xEE2718", VA = "0xEE2718")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xEE2804", Offset = "0xEE2804", VA = "0xEE2804")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xEE2808", Offset = "0xEE2808", VA = "0xEE2808")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xEE287C", Offset = "0xEE287C", VA = "0xEE287C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xEE29A0", Offset = "0xEE29A0", VA = "0xEE29A0")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xEE2B88", Offset = "0xEE2B88", VA = "0xEE2B88")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xEE2D90", Offset = "0xEE2D90", VA = "0xEE2D90")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000030")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x11FAC60", Offset = "0x11FAC60", VA = "0x11FAC60", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x11FAD00", Offset = "0x11FAD00", VA = "0x11FAD00", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000F4")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x11FADF0", Offset = "0x11FADF0", VA = "0x11FADF0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000031")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA1DC", Offset = "0x8DA1DC")]
	public float Range;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x11FAE00", Offset = "0x11FAE00", VA = "0x11FAE00", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x11FAEFC", Offset = "0x11FAEFC", VA = "0x11FAEFC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000032")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA214", Offset = "0x8DA214")]
	public float Range;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA24C", Offset = "0x8DA24C")]
	public float MinimumElevation;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA284", Offset = "0x8DA284")]
	public float Gravity;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA2BC", Offset = "0x8DA2BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA2BC", Offset = "0x8DA2BC")]
	public float AimVelocity;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA318", Offset = "0x8DA318")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA318", Offset = "0x8DA318")]
	public float AimStep;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x11FAF0C", Offset = "0x11FAF0C", VA = "0x11FAF0C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x11FB09C", Offset = "0x11FB09C", VA = "0x11FB09C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA370", Offset = "0x8DA370")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x11FB0B0", Offset = "0x11FB0B0", VA = "0x11FB0B0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x11FB1EC", Offset = "0x11FB1EC", VA = "0x11FB1EC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x11FB21C", Offset = "0x11FB21C", VA = "0x11FB21C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x11FB24C", Offset = "0x11FB24C", VA = "0x11FB24C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x11FB2FC", Offset = "0x11FB2FC", VA = "0x11FB2FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x11FB368", Offset = "0x11FB368", VA = "0x11FB368", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x11FB3D0", Offset = "0x11FB3D0", VA = "0x11FB3D0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA3A8", Offset = "0x8DA3A8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA3B8", Offset = "0x8DA3B8")]
	public Transform PositionIndicator;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA3F0", Offset = "0x8DA3F0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA428", Offset = "0x8DA428")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x11FB4F4", Offset = "0x11FB4F4", VA = "0x11FB4F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6C14", Offset = "0x8E6C14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x11FB4FC", Offset = "0x11FB4FC", VA = "0x11FB4FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6C24", Offset = "0x8E6C24")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x11FB6B8", Offset = "0x11FB6B8", VA = "0x11FB6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6C34", Offset = "0x8E6C34")]
		add
		{
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x11FB758", Offset = "0x11FB758", VA = "0x11FB758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6C44", Offset = "0x8E6C44")]
		remove
		{
		}
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x11FB508", Offset = "0x11FB508", VA = "0x11FB508")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x11FB5A0", Offset = "0x11FB5A0", VA = "0x11FB5A0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x11FB674", Offset = "0x11FB674", VA = "0x11FB674")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x11FB6B4", Offset = "0x11FB6B4", VA = "0x11FB6B4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x11FB7F8", Offset = "0x11FB7F8", VA = "0x11FB7F8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x11FB85C", Offset = "0x11FB85C", VA = "0x11FB85C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x11FB87C", Offset = "0x11FB87C", VA = "0x11FB87C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000036")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5294", Offset = "0x8D5294")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000118")]
			[Address(RVA = "0xEB0FD4", Offset = "0xEB0FD4", VA = "0xEB0FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0xEB101C", Offset = "0xEB101C", VA = "0xEB101C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xEB0F0C", Offset = "0xEB0F0C", VA = "0xEB0F0C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xEB0F38", Offset = "0xEB0F38", VA = "0xEB0F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xEB0F3C", Offset = "0xEB0F3C", VA = "0xEB0F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xEB0FDC", Offset = "0xEB0FDC", VA = "0xEB0FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52A4", Offset = "0x8D52A4")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011E")]
			[Address(RVA = "0xEB0EBC", Offset = "0xEB0EBC", VA = "0xEB0EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0xEB0F04", Offset = "0xEB0F04", VA = "0xEB0F04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0xEB0DF0", Offset = "0xEB0DF0", VA = "0xEB0DF0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xEB0E1C", Offset = "0xEB0E1C", VA = "0xEB0E1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xEB0E20", Offset = "0xEB0E20", VA = "0xEB0E20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xEB0EC4", Offset = "0xEB0EC4", VA = "0xEB0EC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11FBA88", Offset = "0x11FBA88", VA = "0x11FBA88")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11FBB5C", Offset = "0x11FBB5C", VA = "0x11FBB5C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x11FBBBC", Offset = "0x11FBBBC", VA = "0x11FBBBC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11FBC7C", Offset = "0x11FBC7C", VA = "0x11FBC7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6C54", Offset = "0x8E6C54")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11FBCF4", Offset = "0x11FBCF4", VA = "0x11FBCF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6CB4", Offset = "0x8E6CB4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000112")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x11FBD6C", Offset = "0x11FBD6C", VA = "0x11FBD6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6D14", Offset = "0x8E6D14")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x11FBD98", Offset = "0x11FBD98", VA = "0x11FBD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6D24", Offset = "0x8E6D24")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000038")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA470", Offset = "0x8DA470")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA480", Offset = "0x8DA480")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA4B8", Offset = "0x8DA4B8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA4F0", Offset = "0x8DA4F0")]
	public bool FastTeleport;

	[Token(Token = "0x17000021")]
	public Transform Pointer
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x11FBDC4", Offset = "0x11FBDC4", VA = "0x11FBDC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6DD4", Offset = "0x8E6DD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x11FBDCC", Offset = "0x11FBDCC", VA = "0x11FBDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6DE4", Offset = "0x8E6DE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x11FBDD4", Offset = "0x11FBDD4", VA = "0x11FBDD4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x11FBF2C", Offset = "0x11FBF2C", VA = "0x11FBF2C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x11FBFE4", Offset = "0x11FBFE4", VA = "0x11FBFE4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000039")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200003A")]
	public enum InputModes
	{
		[Token(Token = "0x400010D")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400010E")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400010F")]
		ThumbstickTeleport,
		[Token(Token = "0x4000110")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200003B")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000112")]
		A,
		[Token(Token = "0x4000113")]
		B,
		[Token(Token = "0x4000114")]
		LeftTrigger,
		[Token(Token = "0x4000115")]
		LeftThumbstick,
		[Token(Token = "0x4000116")]
		RightTrigger,
		[Token(Token = "0x4000117")]
		RightThumbstick,
		[Token(Token = "0x4000118")]
		X,
		[Token(Token = "0x4000119")]
		Y
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA528", Offset = "0x8DA528")]
	public InputModes InputMode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA560", Offset = "0x8DA560")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA598", Offset = "0x8DA598")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA5D0", Offset = "0x8DA5D0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x11FBFE8", Offset = "0x11FBFE8", VA = "0x11FBFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x11FBFEC", Offset = "0x11FBFEC", VA = "0x11FBFEC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x11FC3D4", Offset = "0x11FC3D4", VA = "0x11FC3D4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x11FC494", Offset = "0x11FC494", VA = "0x11FC494")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200003C")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200003D")]
	public enum OrientationModes
	{
		[Token(Token = "0x400011E")]
		HeadRelative,
		[Token(Token = "0x400011F")]
		ForwardFacing
	}

	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52B4", Offset = "0x8D52B4")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0xEB1104", Offset = "0xEB1104", VA = "0xEB1104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0xEB114C", Offset = "0xEB114C", VA = "0xEB114C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xEB1024", Offset = "0xEB1024", VA = "0xEB1024")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xEB1050", Offset = "0xEB1050", VA = "0xEB1050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xEB1054", Offset = "0xEB1054", VA = "0xEB1054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0xEB110C", Offset = "0xEB110C", VA = "0xEB110C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x11FC578", Offset = "0x11FC578", VA = "0x11FC578")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x11FC66C", Offset = "0x11FC66C", VA = "0x11FC66C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x11FC674", Offset = "0x11FC674", VA = "0x11FC674", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x11FC6C0", Offset = "0x11FC6C0", VA = "0x11FC6C0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x11FC708", Offset = "0x11FC708", VA = "0x11FC708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6DF4", Offset = "0x8E6DF4")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000130")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x11FC780", Offset = "0x11FC780", VA = "0x11FC780")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x11FC83C", Offset = "0x11FC83C", VA = "0x11FC83C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6E54", Offset = "0x8E6E54")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200003F")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000139")]
	[Address(RVA = "0x11FC868", Offset = "0x11FC868", VA = "0x11FC868", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x11FC86C", Offset = "0x11FC86C", VA = "0x11FC86C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x11FC8E8", Offset = "0x11FC8E8", VA = "0x11FC8E8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000040")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA608", Offset = "0x8DA608")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA640", Offset = "0x8DA640")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA678", Offset = "0x8DA678")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA6B0", Offset = "0x8DA6B0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x11FC8EC", Offset = "0x11FC8EC", VA = "0x11FC8EC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x11FC918", Offset = "0x11FC918", VA = "0x11FC918", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x11FCCC8", Offset = "0x11FCCC8", VA = "0x11FCCC8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA6E8", Offset = "0x8DA6E8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA720", Offset = "0x8DA720")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA758", Offset = "0x8DA758")]
	public float RotateStickThreshold;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x11FCCCC", Offset = "0x11FCCCC", VA = "0x11FCCCC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x11FCD10", Offset = "0x11FCD10", VA = "0x11FCD10", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x11FD0B8", Offset = "0x11FD0B8", VA = "0x11FD0B8")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x11FD0C8", Offset = "0x11FD0C8", VA = "0x11FD0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x11FD0CC", Offset = "0x11FD0CC", VA = "0x11FD0CC")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x11FD0D4", Offset = "0x11FD0D4", VA = "0x11FD0D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x11FD190", Offset = "0x11FD190", VA = "0x11FD190")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x11FD1B8", Offset = "0x11FD1B8", VA = "0x11FD1B8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000043")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA790", Offset = "0x8DA790")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x11FD1D0", Offset = "0x11FD1D0", VA = "0x11FD1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6EB4", Offset = "0x8E6EB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x11FD1D8", Offset = "0x11FD1D8", VA = "0x11FD1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6EC4", Offset = "0x8E6EC4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x11FAC94", Offset = "0x11FAC94", VA = "0x11FAC94", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x11FADBC", Offset = "0x11FADBC", VA = "0x11FADBC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x11FD1E0", Offset = "0x11FD1E0", VA = "0x11FD1E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E6ED4", Offset = "0x8E6ED4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x11FB35C", Offset = "0x11FB35C", VA = "0x11FB35C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x11FB3C8", Offset = "0x11FB3C8", VA = "0x11FB3C8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x11FADF8", Offset = "0x11FADF8", VA = "0x11FADF8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52C4", Offset = "0x8D52C4")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0xEB1424", Offset = "0xEB1424", VA = "0xEB1424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0xEB146C", Offset = "0xEB146C", VA = "0xEB146C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xEB1154", Offset = "0xEB1154", VA = "0xEB1154")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0xEB1180", Offset = "0xEB1180", VA = "0xEB1180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xEB1184", Offset = "0xEB1184", VA = "0xEB1184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xEB142C", Offset = "0xEB142C", VA = "0xEB142C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA7A0", Offset = "0x8DA7A0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000139")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x11FD2BC", Offset = "0x11FD2BC", VA = "0x11FD2BC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x11FD3CC", Offset = "0x11FD3CC", VA = "0x11FD3CC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x11FD3F8", Offset = "0x11FD3F8", VA = "0x11FD3F8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x11FD420", Offset = "0x11FD420", VA = "0x11FD420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6F0C", Offset = "0x8E6F0C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x11FD498", Offset = "0x11FD498", VA = "0x11FD498", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000154")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x11FD4B4", Offset = "0x11FD4B4", VA = "0x11FD4B4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x11FD5D4", Offset = "0x11FD5D4", VA = "0x11FD5D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6F6C", Offset = "0x8E6F6C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000046")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x11FD600", Offset = "0x11FD600", VA = "0x11FD600")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x11FD664", Offset = "0x11FD664", VA = "0x11FD664", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11FD75C", Offset = "0x11FD75C", VA = "0x11FD75C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x11FD854", Offset = "0x11FD854", VA = "0x11FD854")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E6FCC", Offset = "0x8E6FCC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x11FD858", Offset = "0x11FD858", VA = "0x11FD858")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000047")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA7D8", Offset = "0x8DA7D8")]
	public float LOSOffset;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA810", Offset = "0x8DA810")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x11FD864", Offset = "0x11FD864", VA = "0x11FD864", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x11FDA70", Offset = "0x11FDA70", VA = "0x11FDA70")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000048")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x11FDA7C", Offset = "0x11FDA7C", VA = "0x11FDA7C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x11FDB74", Offset = "0x11FDB74", VA = "0x11FDB74")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000049")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000166")]
	[Address(RVA = "0x11FDB78", Offset = "0x11FDB78", VA = "0x11FDB78", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x11FDC0C", Offset = "0x11FDC0C", VA = "0x11FDC0C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000168")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x11FDC9C", Offset = "0x11FDC9C", VA = "0x11FDC9C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200004A")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52D4", Offset = "0x8D52D4")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xEB15AC", Offset = "0xEB15AC", VA = "0xEB15AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0xEB15F4", Offset = "0xEB15F4", VA = "0xEB15F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xEB1474", Offset = "0xEB1474", VA = "0xEB1474")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xEB14A0", Offset = "0xEB14A0", VA = "0xEB14A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xEB14A4", Offset = "0xEB14A4", VA = "0xEB14A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xEB15B4", Offset = "0xEB15B4", VA = "0xEB15B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA848", Offset = "0x8DA848")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA848", Offset = "0x8DA848")]
	public float TransitionDuration;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA8A0", Offset = "0x8DA8A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA8A0", Offset = "0x8DA8A0")]
	public float TeleportDelay;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA8F4", Offset = "0x8DA8F4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x11FDCA4", Offset = "0x11FDCA4", VA = "0x11FDCA4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x11FDCD0", Offset = "0x11FDCD0", VA = "0x11FDCD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E7004", Offset = "0x8E7004")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x11FDD48", Offset = "0x11FDD48", VA = "0x11FDD48")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200004C")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000173")]
	[Address(RVA = "0x11FDEF4", Offset = "0x11FDEF4", VA = "0x11FDEF4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x11FDF10", Offset = "0x11FDF10", VA = "0x11FDF10")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200004D")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200004E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52E4", Offset = "0x8D52E4")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017B")]
			[Address(RVA = "0xEB1768", Offset = "0xEB1768", VA = "0xEB1768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017D")]
			[Address(RVA = "0xEB17B0", Offset = "0xEB17B0", VA = "0xEB17B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xEB15FC", Offset = "0xEB15FC", VA = "0xEB15FC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xEB1628", Offset = "0xEB1628", VA = "0xEB1628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xEB162C", Offset = "0xEB162C", VA = "0xEB162C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xEB1770", Offset = "0xEB1770", VA = "0xEB1770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA92C", Offset = "0x8DA92C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA92C", Offset = "0x8DA92C")]
	public float TransitionDuration;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x11FDF18", Offset = "0x11FDF18", VA = "0x11FDF18", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x11FDF44", Offset = "0x11FDF44", VA = "0x11FDF44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E70B4", Offset = "0x8E70B4")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x11FDFBC", Offset = "0x11FDFBC", VA = "0x11FDFBC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200004F")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000050")]
	public enum PlabackState
	{
		[Token(Token = "0x4000169")]
		Idle = 1,
		[Token(Token = "0x400016A")]
		Preparing,
		[Token(Token = "0x400016B")]
		Buffering,
		[Token(Token = "0x400016C")]
		Ready,
		[Token(Token = "0x400016D")]
		Ended
	}

	[Token(Token = "0x2000051")]
	public enum StereoMode
	{
		[Token(Token = "0x400016F")]
		Unknown = -1,
		[Token(Token = "0x4000170")]
		Mono,
		[Token(Token = "0x4000171")]
		TopBottom,
		[Token(Token = "0x4000172")]
		LeftRight,
		[Token(Token = "0x4000173")]
		Mesh
	}

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x133713C", Offset = "0x133713C", VA = "0x133713C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x133746C", Offset = "0x133746C", VA = "0x133746C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x133773C", Offset = "0x133773C", VA = "0x133773C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x13377AC", Offset = "0x13377AC", VA = "0x13377AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x13378BC", Offset = "0x13378BC", VA = "0x13378BC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000030")]
	public static long Duration
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x13379D0", Offset = "0x13379D0", VA = "0x13379D0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000031")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1337AE4", Offset = "0x1337AE4", VA = "0x1337AE4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000032")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1337BF8", Offset = "0x1337BF8", VA = "0x1337BF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000033")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1337D0C", Offset = "0x1337D0C", VA = "0x1337D0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000034")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1337E20", Offset = "0x1337E20", VA = "0x1337E20")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1337F34", Offset = "0x1337F34", VA = "0x1337F34")]
		set
		{
		}
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x13380A8", Offset = "0x13380A8", VA = "0x13380A8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x13382D4", Offset = "0x13382D4", VA = "0x13382D4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x13383E8", Offset = "0x13383E8", VA = "0x13383E8")]
	public static void Play()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x13384FC", Offset = "0x13384FC", VA = "0x13384FC")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1338610", Offset = "0x1338610", VA = "0x1338610")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x133878C", Offset = "0x133878C", VA = "0x133878C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1338904", Offset = "0x1338904", VA = "0x1338904")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000052")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x13CA8C4", Offset = "0x13CA8C4", VA = "0x13CA8C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7164", Offset = "0x8E7164")]
		add
		{
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x13CA964", Offset = "0x13CA964", VA = "0x13CA964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7174", Offset = "0x8E7174")]
		remove
		{
		}
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x13CAA04", Offset = "0x13CAA04", VA = "0x13CAA04", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x13CAA18", Offset = "0x13CAA18", VA = "0x13CAA18")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000053")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000054")]
	public enum ButtonType
	{
		[Token(Token = "0x4000177")]
		Play,
		[Token(Token = "0x4000178")]
		Pause,
		[Token(Token = "0x4000179")]
		FastForward,
		[Token(Token = "0x400017A")]
		Rewind,
		[Token(Token = "0x400017B")]
		SkipForward,
		[Token(Token = "0x400017C")]
		SkipBack,
		[Token(Token = "0x400017D")]
		Stop
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000035")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x160A340", Offset = "0x160A340", VA = "0x160A340")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x160A348", Offset = "0x160A348", VA = "0x160A348")]
		set
		{
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x160A36C", Offset = "0x160A36C", VA = "0x160A36C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x160B804", Offset = "0x160B804", VA = "0x160B804")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000055")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	public enum VideoShape
	{
		[Token(Token = "0x4000192")]
		_360,
		[Token(Token = "0x4000193")]
		_180,
		[Token(Token = "0x4000194")]
		Quad
	}

	[Token(Token = "0x2000057")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000196")]
		Mono,
		[Token(Token = "0x4000197")]
		TopBottom,
		[Token(Token = "0x4000198")]
		LeftRight,
		[Token(Token = "0x4000199")]
		BottomTop
	}

	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D52F4", Offset = "0x8D52F4")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x1059048", Offset = "0x1059048", VA = "0x1059048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0x1059090", Offset = "0x1059090", VA = "0x1059090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1058E54", Offset = "0x1058E54", VA = "0x1058E54")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x1058E80", Offset = "0x1058E80", VA = "0x1058E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x1058E84", Offset = "0x1058E84", VA = "0x1058E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x1059050", Offset = "0x1059050", VA = "0x1059050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5304", Offset = "0x8D5304")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1058D5C", Offset = "0x1058D5C", VA = "0x1058D5C")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x1058D64", Offset = "0x1058D64", VA = "0x1058D64")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA9B4", Offset = "0x8DA9B4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA9C4", Offset = "0x8DA9C4")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA9D4", Offset = "0x8DA9D4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000036")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1841610", Offset = "0x1841610", VA = "0x1841610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7184", Offset = "0x8E7184")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1841618", Offset = "0x1841618", VA = "0x1841618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7194", Offset = "0x8E7194")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public long Duration
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1841624", Offset = "0x1841624", VA = "0x1841624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E71A4", Offset = "0x8E71A4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x184162C", Offset = "0x184162C", VA = "0x184162C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E71B4", Offset = "0x8E71B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1841634", Offset = "0x1841634", VA = "0x1841634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E71C4", Offset = "0x8E71C4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x184163C", Offset = "0x184163C", VA = "0x184163C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E71D4", Offset = "0x8E71D4")]
		private set
		{
		}
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1841644", Offset = "0x1841644", VA = "0x1841644")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x18418F0", Offset = "0x18418F0", VA = "0x18418F0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1841954", Offset = "0x1841954", VA = "0x1841954")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1841C8C", Offset = "0x1841C8C", VA = "0x1841C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E71E4", Offset = "0x8E71E4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1841D04", Offset = "0x1841D04", VA = "0x1841D04")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1841FEC", Offset = "0x1841FEC", VA = "0x1841FEC")]
	public void Play()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1842080", Offset = "0x1842080", VA = "0x1842080")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1842110", Offset = "0x1842110", VA = "0x1842110")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1842214", Offset = "0x1842214", VA = "0x1842214")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x18427DC", Offset = "0x18427DC", VA = "0x18427DC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1842894", Offset = "0x1842894", VA = "0x1842894")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1842924", Offset = "0x1842924", VA = "0x1842924")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1842A10", Offset = "0x1842A10", VA = "0x1842A10")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200005A")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	private enum PlaybackState
	{
		[Token(Token = "0x40001B6")]
		Playing,
		[Token(Token = "0x40001B7")]
		Paused,
		[Token(Token = "0x40001B8")]
		Rewinding,
		[Token(Token = "0x40001B9")]
		FastForwarding
	}

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1842A20", Offset = "0x1842A20", VA = "0x1842A20")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1842D2C", Offset = "0x1842D2C", VA = "0x1842D2C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1842E58", Offset = "0x1842E58", VA = "0x1842E58")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1842F64", Offset = "0x1842F64", VA = "0x1842F64")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1843044", Offset = "0x1843044", VA = "0x1843044")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1842F38", Offset = "0x1842F38", VA = "0x1842F38")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x18430A4", Offset = "0x18430A4", VA = "0x18430A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1842C18", Offset = "0x1842C18", VA = "0x1842C18")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1843408", Offset = "0x1843408", VA = "0x1843408")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200005C")]
public static class VectorUtil
{
	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x13F5160", Offset = "0x13F5160", VA = "0x13F5160")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200005D")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40001BB")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x149E130", Offset = "0x149E130", VA = "0x149E130")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x149E544", Offset = "0x149E544", VA = "0x149E544")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x149E7D0", Offset = "0x149E7D0", VA = "0x149E7D0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x149E938", Offset = "0x149E938", VA = "0x149E938")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x149EAA4", Offset = "0x149EAA4", VA = "0x149EAA4")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x149EC34", Offset = "0x149EC34", VA = "0x149EC34")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200005E")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40001C4")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xF18B0C", Offset = "0xF18B0C", VA = "0xF18B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xF18B60", Offset = "0xF18B60", VA = "0xF18B60")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xF18B64", Offset = "0xF18B64", VA = "0xF18B64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xF18B68", Offset = "0xF18B68", VA = "0xF18B68")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xF18DDC", Offset = "0xF18DDC", VA = "0xF18DDC")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xF1900C", Offset = "0xF1900C", VA = "0xF1900C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x200005F")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xF29D48", Offset = "0xF29D48", VA = "0xF29D48")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xF2A264", Offset = "0xF2A264", VA = "0xF2A264")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xF2A324", Offset = "0xF2A324", VA = "0xF2A324")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xF2A5A4", Offset = "0xF2A5A4", VA = "0xF2A5A4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xF2A684", Offset = "0xF2A684", VA = "0xF2A684")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xF2A768", Offset = "0xF2A768", VA = "0xF2A768")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xF2A7DC", Offset = "0xF2A7DC", VA = "0xF2A7DC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xF2A7E4", Offset = "0xF2A7E4", VA = "0xF2A7E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E72A4", Offset = "0x8E72A4")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xF2A848", Offset = "0xF2A848", VA = "0xF2A848")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E72B4", Offset = "0x8E72B4")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xF2A8AC", Offset = "0xF2A8AC", VA = "0xF2A8AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E72C4", Offset = "0x8E72C4")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xF2A910", Offset = "0xF2A910", VA = "0xF2A910")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E72D4", Offset = "0x8E72D4")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000060")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1495E50", Offset = "0x1495E50", VA = "0x1495E50")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000061")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x11A9D54", Offset = "0x11A9D54", VA = "0x11A9D54")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x11A9DF8", Offset = "0x11A9DF8", VA = "0x11A9DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x11A9EE4", Offset = "0x11A9EE4", VA = "0x11A9EE4")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x11A9F44", Offset = "0x11A9F44", VA = "0x11A9F44")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000062")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x11F0B50", Offset = "0x11F0B50", VA = "0x11F0B50")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000063")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5324", Offset = "0x8D5324")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E2")]
			[Address(RVA = "0xE7E75C", Offset = "0xE7E75C", VA = "0xE7E75C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0xE7E7A4", Offset = "0xE7E7A4", VA = "0xE7E7A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xE7E5E0", Offset = "0xE7E5E0", VA = "0xE7E5E0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xE7E60C", Offset = "0xE7E60C", VA = "0xE7E60C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xE7E610", Offset = "0xE7E610", VA = "0xE7E610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xE7E764", Offset = "0xE7E764", VA = "0xE7E764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x12AB71C", Offset = "0x12AB71C", VA = "0x12AB71C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x12AB838", Offset = "0x12AB838", VA = "0x12AB838")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x12AB7C0", Offset = "0x12AB7C0", VA = "0x12AB7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E72E4", Offset = "0x8E72E4")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x12AB9E4", Offset = "0x12AB9E4", VA = "0x12AB9E4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000065")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAA04", Offset = "0x8DAA04")]
	public int SubdivisionsU;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAA20", Offset = "0x8DAA20")]
	public int SubdivisionsV;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x13CD9E4", Offset = "0x13CD9E4", VA = "0x13CD9E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x13CE42C", Offset = "0x13CE42C", VA = "0x13CE42C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000066")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700003D")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1777CF4", Offset = "0x1777CF4", VA = "0x1777CF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1777D48", Offset = "0x1777D48", VA = "0x1777D48")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1778170", Offset = "0x1778170", VA = "0x1778170")]
	public void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x177825C", Offset = "0x177825C", VA = "0x177825C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E7394", Offset = "0x8E7394")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001EB")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001ED")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001EE")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001EF")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001F0")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001F1")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001F2")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x17782C0", Offset = "0x17782C0", VA = "0x17782C0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x17782FC", Offset = "0x17782FC", VA = "0x17782FC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x177836C", Offset = "0x177836C", VA = "0x177836C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x17784DC", Offset = "0x17784DC", VA = "0x17784DC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x17785B8", Offset = "0x17785B8", VA = "0x17785B8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1778068", Offset = "0x1778068", VA = "0x1778068")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1778680", Offset = "0x1778680", VA = "0x1778680")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x17786E8", Offset = "0x17786E8", VA = "0x17786E8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x17787E0", Offset = "0x17787E0", VA = "0x17787E0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5344", Offset = "0x8D5344")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000068")]
	public enum DrawMode
	{
		[Token(Token = "0x40001F3")]
		Opaque,
		[Token(Token = "0x40001F4")]
		OpaqueWithClip,
		[Token(Token = "0x40001F5")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40001F6")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700003E")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x133EED0", Offset = "0x133EED0", VA = "0x133EED0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x133EF60", Offset = "0x133EF60", VA = "0x133EF60")]
		set
		{
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x133D94C", Offset = "0x133D94C", VA = "0x133D94C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x133E53C", Offset = "0x133E53C", VA = "0x133E53C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x133E5BC", Offset = "0x133E5BC", VA = "0x133E5BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x133E6AC", Offset = "0x133E6AC", VA = "0x133E6AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x133E79C", Offset = "0x133E79C", VA = "0x133E79C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x133E9A8", Offset = "0x133E9A8", VA = "0x133E9A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x133F02C", Offset = "0x133F02C", VA = "0x133F02C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000069")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x14A4C88", Offset = "0x14A4C88", VA = "0x14A4C88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x14A4E70", Offset = "0x14A4E70", VA = "0x14A4E70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x14A4FF8", Offset = "0x14A4FF8", VA = "0x14A4FF8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x14A5000", Offset = "0x14A5000", VA = "0x14A5000")]
	public void Release()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x14A4FE8", Offset = "0x14A4FE8", VA = "0x14A4FE8")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x14A5008", Offset = "0x14A5008", VA = "0x14A5008")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200006A")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53A4", Offset = "0x8D53A4")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x1000B40", Offset = "0x1000B40", VA = "0x1000B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x1000B88", Offset = "0x1000B88", VA = "0x1000B88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1000A10", Offset = "0x1000A10", VA = "0x1000A10")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x1000A3C", Offset = "0x1000A3C", VA = "0x1000A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1000A40", Offset = "0x1000A40", VA = "0x1000A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1000B48", Offset = "0x1000B48", VA = "0x1000B48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53B4", Offset = "0x8D53B4")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0x1000D48", Offset = "0x1000D48", VA = "0x1000D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x1000D90", Offset = "0x1000D90", VA = "0x1000D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1000B90", Offset = "0x1000B90", VA = "0x1000B90")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1000BBC", Offset = "0x1000BBC", VA = "0x1000BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1000BC0", Offset = "0x1000BC0", VA = "0x1000BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1000D50", Offset = "0x1000D50", VA = "0x1000D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x104D22C", Offset = "0x104D22C", VA = "0x104D22C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x104D500", Offset = "0x104D500", VA = "0x104D500")]
	private void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x104D55C", Offset = "0x104D55C", VA = "0x104D55C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x104D6DC", Offset = "0x104D6DC", VA = "0x104D6DC")]
	public void Release()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x104D7B0", Offset = "0x104D7B0", VA = "0x104D7B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E73CC", Offset = "0x8E73CC")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x104D618", Offset = "0x104D618", VA = "0x104D618")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E742C", Offset = "0x8E742C")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x104D84C", Offset = "0x104D84C", VA = "0x104D84C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200006D")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600021F")]
	[Address(RVA = "0x100E5F0", Offset = "0x100E5F0", VA = "0x100E5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x100E650", Offset = "0x100E650", VA = "0x100E650")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200006E")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x11B2420", Offset = "0x11B2420", VA = "0x11B2420")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x11B2554", Offset = "0x11B2554", VA = "0x11B2554")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x11B25E8", Offset = "0x11B25E8", VA = "0x11B25E8")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x11B2650", Offset = "0x11B2650", VA = "0x11B2650")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x200006F")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53C4", Offset = "0x8D53C4")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0xE7BF40", Offset = "0xE7BF40", VA = "0xE7BF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0xE7BF88", Offset = "0xE7BF88", VA = "0xE7BF88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xE7BD34", Offset = "0xE7BD34", VA = "0xE7BD34")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xE7BD60", Offset = "0xE7BD60", VA = "0xE7BD60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xE7BD64", Offset = "0xE7BD64", VA = "0xE7BD64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xE7BF48", Offset = "0xE7BF48", VA = "0xE7BF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x11B2658", Offset = "0x11B2658", VA = "0x11B2658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x11B293C", Offset = "0x11B293C", VA = "0x11B293C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x11B2C8C", Offset = "0x11B2C8C", VA = "0x11B2C8C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x11B2FE8", Offset = "0x11B2FE8", VA = "0x11B2FE8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x11B32EC", Offset = "0x11B32EC", VA = "0x11B32EC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x11B33E0", Offset = "0x11B33E0", VA = "0x11B33E0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x11B35AC", Offset = "0x11B35AC", VA = "0x11B35AC")]
	public void Release()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x11B34F8", Offset = "0x11B34F8", VA = "0x11B34F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E752C", Offset = "0x8E752C")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x11B3694", Offset = "0x11B3694", VA = "0x11B3694")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000071")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000072")]
	public enum ManipulationType
	{
		[Token(Token = "0x400022B")]
		Default,
		[Token(Token = "0x400022C")]
		ForcedHand,
		[Token(Token = "0x400022D")]
		DollyHand,
		[Token(Token = "0x400022E")]
		DollyAttached,
		[Token(Token = "0x400022F")]
		HorizontalScaled,
		[Token(Token = "0x4000230")]
		VerticalScaled,
		[Token(Token = "0x4000231")]
		Menu
	}

	[Token(Token = "0x2000073")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000074")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000075")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8DAAAC", Offset = "0x8DAAAC")]
	public string ObjectName;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8DAABC", Offset = "0x8DAABC")]
	public string ObjectInstructions;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x12A032C", Offset = "0x12A032C", VA = "0x12A032C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x12A0388", Offset = "0x12A0388", VA = "0x12A0388")]
	public void Release()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x12A039C", Offset = "0x12A039C", VA = "0x12A039C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x12A03B0", Offset = "0x12A03B0", VA = "0x12A03B0")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000076")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAADC", Offset = "0x8DAADC")]
	public int radialDivisions;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB14", Offset = "0x8DAB14")]
	public float borderSize;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB4C", Offset = "0x8DAB4C")]
	public float fingerTaper;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB84", Offset = "0x8DAB84")]
	public float fingerTipLength;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DABBC", Offset = "0x8DABBC")]
	public float webOffset;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x12A7104", Offset = "0x12A7104", VA = "0x12A7104")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x12A7304", Offset = "0x12A7304", VA = "0x12A7304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x12A7510", Offset = "0x12A7510", VA = "0x12A7510")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x12A7B94", Offset = "0x12A7B94", VA = "0x12A7B94")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x12A81C4", Offset = "0x12A81C4", VA = "0x12A81C4")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x12AA840", Offset = "0x12AA840", VA = "0x12AA840")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x12AA8FC", Offset = "0x12AA8FC", VA = "0x12AA8FC")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000077")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x12AA920", Offset = "0x12AA920", VA = "0x12AA920")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x12AAC58", Offset = "0x12AAC58", VA = "0x12AAC58")]
	private void Update()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x12AA9C8", Offset = "0x12AA9C8", VA = "0x12AA9C8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x12AB048", Offset = "0x12AB048", VA = "0x12AB048")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x12AB538", Offset = "0x12AB538", VA = "0x12AB538")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000078")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53D4", Offset = "0x8D53D4")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0x105DF20", Offset = "0x105DF20", VA = "0x105DF20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0x105DF68", Offset = "0x105DF68", VA = "0x105DF68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x105DC50", Offset = "0x105DC50", VA = "0x105DC50")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x105DC7C", Offset = "0x105DC7C", VA = "0x105DC7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x105DC80", Offset = "0x105DC80", VA = "0x105DC80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x105DF28", Offset = "0x105DF28", VA = "0x105DF28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xEBED24", Offset = "0xEBED24", VA = "0xEBED24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xEBEF5C", Offset = "0xEBEF5C", VA = "0xEBEF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xEBFBAC", Offset = "0xEBFBAC", VA = "0xEBFBAC")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xEC07B4", Offset = "0xEC07B4", VA = "0xEC07B4")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xEBEEE4", Offset = "0xEBEEE4", VA = "0xEBEEE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E75DC", Offset = "0x8E75DC")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xEBF1C8", Offset = "0xEBF1C8", VA = "0xEBF1C8")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xEBFE70", Offset = "0xEBFE70", VA = "0xEBFE70")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xEC0A78", Offset = "0xEC0A78", VA = "0xEC0A78")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xEC0B04", Offset = "0xEC0B04", VA = "0xEC0B04")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xEC0B34", Offset = "0xEC0B34", VA = "0xEC0B34")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xEC0940", Offset = "0xEC0940", VA = "0xEC0940")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xEC0C58", Offset = "0xEC0C58", VA = "0xEC0C58")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200007A")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xEC76E8", Offset = "0xEC76E8", VA = "0xEC76E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xEC7880", Offset = "0xEC7880", VA = "0xEC7880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xEC7948", Offset = "0xEC7948", VA = "0xEC7948")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200007B")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	public enum BrushState
	{
		[Token(Token = "0x400026E")]
		Idle,
		[Token(Token = "0x400026F")]
		Inking
	}

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xECB308", Offset = "0xECB308", VA = "0xECB308")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xECB310", Offset = "0xECB310", VA = "0xECB310")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xECB5F8", Offset = "0xECB5F8", VA = "0xECB5F8")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xECB7F0", Offset = "0xECB7F0", VA = "0xECB7F0")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xECB998", Offset = "0xECB998", VA = "0xECB998")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xECB504", Offset = "0xECB504", VA = "0xECB504")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xECBA74", Offset = "0xECBA74", VA = "0xECBA74")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200007D")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xECBB0C", Offset = "0xECBB0C", VA = "0xECBB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xECBCA4", Offset = "0xECBCA4", VA = "0xECBCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xECBE0C", Offset = "0xECBE0C", VA = "0xECBE0C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200007E")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xECBE20", Offset = "0xECBE20", VA = "0xECBE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xECC034", Offset = "0xECC034", VA = "0xECC034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xECC204", Offset = "0xECC204", VA = "0xECC204")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x200007F")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53E4", Offset = "0x8D53E4")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x105EC80", Offset = "0x105EC80", VA = "0x105EC80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x105ECC8", Offset = "0x105ECC8", VA = "0x105ECC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x105EACC", Offset = "0x105EACC", VA = "0x105EACC")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x105EAF8", Offset = "0x105EAF8", VA = "0x105EAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x105EAFC", Offset = "0x105EAFC", VA = "0x105EAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x105EC88", Offset = "0x105EC88", VA = "0x105EC88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53F4", Offset = "0x8D53F4")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0x105EEC4", Offset = "0x105EEC4", VA = "0x105EEC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x105EF0C", Offset = "0x105EF0C", VA = "0x105EF0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x105ECD0", Offset = "0x105ECD0", VA = "0x105ECD0")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x105ECFC", Offset = "0x105ECFC", VA = "0x105ECFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x105ED00", Offset = "0x105ED00", VA = "0x105ED00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x105EECC", Offset = "0x105EECC", VA = "0x105EECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEngine.CanvasGroup mainCanvas;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xECC20C", Offset = "0xECC20C", VA = "0xECC20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xECC558", Offset = "0xECC558", VA = "0xECC558")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xECC7B0", Offset = "0xECC7B0", VA = "0xECC7B0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xECC934", Offset = "0xECC934", VA = "0xECC934")]
	public void Release()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xECC8AC", Offset = "0xECC8AC", VA = "0xECC8AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E768C", Offset = "0x8E768C")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xECCA24", Offset = "0xECCA24", VA = "0xECCA24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E76EC", Offset = "0x8E76EC")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xECCAAC", Offset = "0xECCAAC", VA = "0xECCAAC")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xECCACC", Offset = "0xECCACC", VA = "0xECCACC")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xECCAEC", Offset = "0xECCAEC", VA = "0xECCAEC")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xECC4DC", Offset = "0xECC4DC", VA = "0xECC4DC")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xECCB50", Offset = "0xECCB50", VA = "0xECCB50")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xECCB5C", Offset = "0xECCB5C", VA = "0xECCB5C")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xECC570", Offset = "0xECC570", VA = "0xECC570")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xECCB68", Offset = "0xECCB68", VA = "0xECCB68")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000082")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xECCBAC", Offset = "0xECCBAC", VA = "0xECCBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xECCC6C", Offset = "0xECCC6C", VA = "0xECCC6C")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000083")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x11A9824", Offset = "0x11A9824", VA = "0x11A9824")]
	private void Start()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x11A9A68", Offset = "0x11A9A68", VA = "0x11A9A68")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x11A9AC0", Offset = "0x11A9AC0", VA = "0x11A9AC0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x11A9B0C", Offset = "0x11A9B0C", VA = "0x11A9B0C")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000084")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xEDCAA8", Offset = "0xEDCAA8", VA = "0xEDCAA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xEDCB20", Offset = "0xEDCB20", VA = "0xEDCB20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xEDCE44", Offset = "0xEDCE44", VA = "0xEDCE44")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000085")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xEDE6AC", Offset = "0xEDE6AC", VA = "0xEDE6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xEDEB34", Offset = "0xEDEB34", VA = "0xEDEB34")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000086")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5404", Offset = "0x8D5404")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A2")]
			[Address(RVA = "0x10009C0", Offset = "0x10009C0", VA = "0x10009C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A4")]
			[Address(RVA = "0x1000A08", Offset = "0x1000A08", VA = "0x1000A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1000894", Offset = "0x1000894", VA = "0x1000894")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x10008C0", Offset = "0x10008C0", VA = "0x10008C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x10008C4", Offset = "0x10008C4", VA = "0x10008C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x10009C8", Offset = "0x10009C8", VA = "0x10009C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x104C8F4", Offset = "0x104C8F4", VA = "0x104C8F4")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x104C918", Offset = "0x104C918", VA = "0x104C918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x104CA38", Offset = "0x104CA38", VA = "0x104CA38")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x104CAEC", Offset = "0x104CAEC", VA = "0x104CAEC")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x104CD18", Offset = "0x104CD18", VA = "0x104CD18")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x104CDD0", Offset = "0x104CDD0", VA = "0x104CDD0")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x104CC90", Offset = "0x104CC90", VA = "0x104CC90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E77EC", Offset = "0x8E77EC")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x104CEF0", Offset = "0x104CEF0", VA = "0x104CEF0")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000088")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x104CF08", Offset = "0x104CF08", VA = "0x104CF08")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x104D224", Offset = "0x104D224", VA = "0x104D224")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D5414", Offset = "0x8D5414")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5414", Offset = "0x8D5414")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC94", Offset = "0x8DAC94")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x11C31D8", Offset = "0x11C31D8", VA = "0x11C31D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x11C340C", Offset = "0x11C340C", VA = "0x11C340C")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x11C386C", Offset = "0x11C386C", VA = "0x11C386C")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x11C3274", Offset = "0x11C3274", VA = "0x11C3274")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x11C3A6C", Offset = "0x11C3A6C", VA = "0x11C3A6C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x11C3B60", Offset = "0x11C3B60", VA = "0x11C3B60")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x200008A")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5488", Offset = "0x8D5488")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B4")]
			[Address(RVA = "0x10597C4", Offset = "0x10597C4", VA = "0x10597C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0x105980C", Offset = "0x105980C", VA = "0x105980C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x1059690", Offset = "0x1059690", VA = "0x1059690")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x10596BC", Offset = "0x10596BC", VA = "0x10596BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x10596C0", Offset = "0x10596C0", VA = "0x10596C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x10597CC", Offset = "0x10597CC", VA = "0x10597CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x18442C0", Offset = "0x18442C0", VA = "0x18442C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E789C", Offset = "0x8E789C")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1844338", Offset = "0x1844338", VA = "0x1844338", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1844364", Offset = "0x1844364", VA = "0x1844364", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x18443D8", Offset = "0x18443D8", VA = "0x18443D8")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5498", Offset = "0x8D5498")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xECBE14", Offset = "0xECBE14", VA = "0xECBE14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xECBE18", Offset = "0xECBE18", VA = "0xECBE18")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x200008D")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x119F520", Offset = "0x119F520", VA = "0x119F520")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x119F5A4", Offset = "0x119F5A4", VA = "0x119F5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x119F634", Offset = "0x119F634", VA = "0x119F634")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x200008E")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum Method
	{
		[Token(Token = "0x40002CB")]
		Adapt,
		[Token(Token = "0x40002CC")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40002CD")]
		Scale,
		[Token(Token = "0x40002CE")]
		None
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DACCC", Offset = "0x8DACCC")]
	public Method ScalingX;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DACE0", Offset = "0x8DACE0")]
	public float PaddingX;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DACF8", Offset = "0x8DACF8")]
	public float PaddingXMax;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DAD10", Offset = "0x8DAD10")]
	public Method ScalingY;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAD24", Offset = "0x8DAD24")]
	public float PaddingY;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAD3C", Offset = "0x8DAD3C")]
	public float PaddingYMax;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DAD54", Offset = "0x8DAD54")]
	public Method ScalingZ;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAD68", Offset = "0x8DAD68")]
	public float PaddingZ;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DAD80", Offset = "0x8DAD80")]
	public float PaddingZMax;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAD98", Offset = "0x8DAD98")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DADA8", Offset = "0x8DADA8")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DADB8", Offset = "0x8DADB8")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700004F")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xEE3508", Offset = "0xEE3508", VA = "0xEE3508")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000050")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xEE3524", Offset = "0xEE3524", VA = "0xEE3524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E794C", Offset = "0x8E794C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xEE3530", Offset = "0xEE3530", VA = "0xEE3530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E795C", Offset = "0x8E795C")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xEE353C", Offset = "0xEE353C", VA = "0xEE353C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E796C", Offset = "0x8E796C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xEE3548", Offset = "0xEE3548", VA = "0xEE3548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E797C", Offset = "0x8E797C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public Mesh Mesh
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xEE3554", Offset = "0xEE3554", VA = "0xEE3554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E798C", Offset = "0x8E798C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xEE355C", Offset = "0xEE355C", VA = "0xEE355C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E799C", Offset = "0x8E799C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xEE3564", Offset = "0xEE3564", VA = "0xEE3564")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xEE36AC", Offset = "0xEE36AC", VA = "0xEE36AC")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000090")]
public class SimpleResizer
{
	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xEE36B4", Offset = "0xEE36B4", VA = "0xEE36B4")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xEE39C0", Offset = "0xEE39C0", VA = "0xEE39C0")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xEE3C58", Offset = "0xEE3C58", VA = "0xEE3C58")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xEE3D34", Offset = "0xEE3D34", VA = "0xEE3D34")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x11EB714", Offset = "0x11EB714", VA = "0x11EB714", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x11EB718", Offset = "0x11EB718", VA = "0x11EB718", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x11EBB7C", Offset = "0x11EBB7C", VA = "0x11EBB7C")]
	public Spawnable()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x11EB888", Offset = "0x11EB888", VA = "0x11EB888")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E79AC", Offset = "0x8E79AC")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5508", Offset = "0x8D5508")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	public enum GeometryType
	{
		[Token(Token = "0x40002D6")]
		Plane,
		[Token(Token = "0x40002D7")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000094")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x13FC550", Offset = "0x13FC550", VA = "0x13FC550")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x13FC95C", Offset = "0x13FC95C", VA = "0x13FC95C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x13FD200", Offset = "0x13FD200", VA = "0x13FD200")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x13FD104", Offset = "0x13FD104", VA = "0x13FD104")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x13FD284", Offset = "0x13FD284", VA = "0x13FD284")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5568", Offset = "0x8D5568")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D55C8", Offset = "0x8D55C8")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0xFFC640", Offset = "0xFFC640", VA = "0xFFC640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0xFFC688", Offset = "0xFFC688", VA = "0xFFC688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xFFC47C", Offset = "0xFFC47C", VA = "0xFFC47C")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xFFC4A8", Offset = "0xFFC4A8", VA = "0xFFC4A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xFFC4AC", Offset = "0xFFC4AC", VA = "0xFFC4AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xFFC648", Offset = "0xFFC648", VA = "0xFFC648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DADE8", Offset = "0x8DADE8")]
	private Canvas _canvas;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAE34", Offset = "0x8DAE34")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAE80", Offset = "0x8DAE80")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAECC", Offset = "0x8DAECC")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAF18", Offset = "0x8DAF18")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAF64", Offset = "0x8DAF64")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAFB0", Offset = "0x8DAFB0")]
	private Color _labelBaseColor;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DAFFC", Offset = "0x8DAFFC")]
	private Color _labelHighlightColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB048", Offset = "0x8DB048")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB094", Offset = "0x8DB094")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB0E0", Offset = "0x8DB0E0")]
	[SerializeField]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB12C", Offset = "0x8DB12C")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000053")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x1496530", Offset = "0x1496530", VA = "0x1496530")]
		set
		{
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1495E58", Offset = "0x1495E58", VA = "0x1495E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1495FD0", Offset = "0x1495FD0", VA = "0x1495FD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E79BC", Offset = "0x8E79BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1496048", Offset = "0x1496048", VA = "0x1496048")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x14962C8", Offset = "0x14962C8", VA = "0x14962C8")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x14963C0", Offset = "0x14963C0", VA = "0x14963C0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1496438", Offset = "0x1496438", VA = "0x1496438")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1496550", Offset = "0x1496550", VA = "0x1496550")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1496658", Offset = "0x1496658", VA = "0x1496658")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1496778", Offset = "0x1496778", VA = "0x1496778")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x14960A4", Offset = "0x14960A4", VA = "0x14960A4")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x14961B8", Offset = "0x14961B8", VA = "0x14961B8")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x149684C", Offset = "0x149684C", VA = "0x149684C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x14969A4", Offset = "0x14969A4", VA = "0x14969A4")]
	public Anchor()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x14969AC", Offset = "0x14969AC", VA = "0x14969AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7A1C", Offset = "0x8E7A1C")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1496AD4", Offset = "0x1496AD4", VA = "0x1496AD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7A2C", Offset = "0x8E7A2C")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D55D8", Offset = "0x8D55D8")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000303")]
		Create,
		[Token(Token = "0x4000304")]
		Select
	}

	[Token(Token = "0x2000099")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB178", Offset = "0x8DB178")]
	[SerializeField]
	private GameObject _createModeButton;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB1C4", Offset = "0x8DB1C4")]
	private GameObject _selectModeButton;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB210", Offset = "0x8DB210")]
	[SerializeField]
	private Transform _trackedDevice;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB25C", Offset = "0x8DB25C")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB2A8", Offset = "0x8DB2A8")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB304", Offset = "0x8DB304")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DB350", Offset = "0x8DB350")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000056")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1496AFC", Offset = "0x1496AFC", VA = "0x1496AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1496B04", Offset = "0x1496B04", VA = "0x1496B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1496BDC", Offset = "0x1496BDC", VA = "0x1496BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1496D48", Offset = "0x1496D48", VA = "0x1496D48")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x149719C", Offset = "0x149719C", VA = "0x149719C")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x149720C", Offset = "0x149720C", VA = "0x149720C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1496CD0", Offset = "0x1496CD0", VA = "0x1496CD0")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1497294", Offset = "0x1497294", VA = "0x1497294")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x149731C", Offset = "0x149731C", VA = "0x149731C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1497348", Offset = "0x1497348", VA = "0x1497348")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1497268", Offset = "0x1497268", VA = "0x1497268")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x149708C", Offset = "0x149708C", VA = "0x149708C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1497484", Offset = "0x1497484", VA = "0x1497484")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x14973D0", Offset = "0x14973D0", VA = "0x14973D0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x14973F0", Offset = "0x14973F0", VA = "0x14973F0")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x149759C", Offset = "0x149759C", VA = "0x149759C")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1497410", Offset = "0x1497410", VA = "0x1497410")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x149744C", Offset = "0x149744C", VA = "0x149744C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1496E54", Offset = "0x1496E54", VA = "0x1496E54")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1497694", Offset = "0x1497694", VA = "0x1497694")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x14976C8", Offset = "0x14976C8", VA = "0x14976C8")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1497764", Offset = "0x1497764", VA = "0x1497764")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x14978E0", Offset = "0x14978E0", VA = "0x14978E0")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200009A")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x11EAE4C", Offset = "0x11EAE4C", VA = "0x11EAE4C")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11EB1FC", Offset = "0x11EB1FC", VA = "0x11EB1FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x11EB104", Offset = "0x11EB104", VA = "0x11EB104")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x11EB290", Offset = "0x11EB290", VA = "0x11EB290")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x11EB074", Offset = "0x11EB074", VA = "0x11EB074")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11EB444", Offset = "0x11EB444", VA = "0x11EB444")]
	public SpatialAnchorLoader()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x11EB44C", Offset = "0x11EB44C", VA = "0x11EB44C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7A8C", Offset = "0x8E7A8C")]
	private void <Load>b__4_0(OVRSpatialAnchor.UnboundAnchor[] anchors)
	{
	}
}
[Token(Token = "0x200009B")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5638", Offset = "0x8D5638")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xEB0248", Offset = "0xEB0248", VA = "0xEB0248")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xEB0250", Offset = "0xEB0250", VA = "0xEB0250")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11F0B58", Offset = "0x11F0B58", VA = "0x11F0B58")]
	private void Start()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11F0D74", Offset = "0x11F0D74", VA = "0x11F0D74")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x11F0E84", Offset = "0x11F0E84", VA = "0x11F0E84")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009D")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB3AC", Offset = "0x8DB3AC")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x17774CC", Offset = "0x17774CC", VA = "0x17774CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x17774F4", Offset = "0x17774F4", VA = "0x17774F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x177765C", Offset = "0x177765C", VA = "0x177765C")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x200009E")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB3F8", Offset = "0x8DB3F8")]
	private float m_fixedTimeStep;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB444", Offset = "0x8DB444")]
	private float m_gravityScalar;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xEDCE4C", Offset = "0xEDCE4C", VA = "0xEDCE4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xEDCEB0", Offset = "0xEDCEB0", VA = "0xEDCEB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xEDCEB8", Offset = "0xEDCEB8", VA = "0xEDCEB8")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xEDCF90", Offset = "0xEDCF90", VA = "0xEDCF90")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x200009F")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x4000312")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x4000313")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB4A0", Offset = "0x8DB4A0")]
	[SerializeField]
	private Transform m_trackingSpace;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB4EC", Offset = "0x8DB4EC")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x11F8194", Offset = "0x11F8194", VA = "0x11F8194")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x11F842C", Offset = "0x11F842C", VA = "0x11F842C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x11F8870", Offset = "0x11F8870", VA = "0x11F8870")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x11F89A8", Offset = "0x11F89A8", VA = "0x11F89A8")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x20000A0")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB548", Offset = "0x8DB548")]
	private float m_minExtent;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB5A4", Offset = "0x8DB5A4")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xE98CE8", Offset = "0xE98CE8", VA = "0xE98CE8")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xE98CF0", Offset = "0xE98CF0", VA = "0xE98CF0")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xE98D14", Offset = "0xE98D14", VA = "0xE98D14")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xE98E24", Offset = "0xE98E24", VA = "0xE98E24")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x20000A1")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB610", Offset = "0x8DB610")]
	[SerializeField]
	private Vector2 m_xExtent;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB66C", Offset = "0x8DB66C")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xE98E34", Offset = "0xE98E34", VA = "0xE98E34")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xE98E40", Offset = "0xE98E40", VA = "0xE98E40")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xE98E64", Offset = "0xE98E64", VA = "0xE98E64")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xE99244", Offset = "0xE99244", VA = "0xE99244")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB6D8", Offset = "0x8DB6D8")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xE99258", Offset = "0xE99258", VA = "0xE99258")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xE9927C", Offset = "0xE9927C", VA = "0xE9927C")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xE9929C", Offset = "0xE9929C", VA = "0xE9929C")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x20000A3")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB734", Offset = "0x8DB734")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB780", Offset = "0x8DB780")]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB84C", Offset = "0x8DB84C")]
	private UiBoolInspector m_ax;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xE992A4", Offset = "0xE992A4", VA = "0xE992A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xE992CC", Offset = "0xE992CC", VA = "0xE992CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xE9985C", Offset = "0xE9985C", VA = "0xE9985C")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xE998A0", Offset = "0xE998A0", VA = "0xE998A0")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xE99920", Offset = "0xE99920", VA = "0xE99920")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x20000A4")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB8E8", Offset = "0x8DB8E8")]
	[SerializeField]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xE99930", Offset = "0xE99930", VA = "0xE99930")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xE99C2C", Offset = "0xE99C2C", VA = "0xE99C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xE99D58", Offset = "0xE99D58", VA = "0xE99D58")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xE99E10", Offset = "0xE99E10", VA = "0xE99E10")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xE99E64", Offset = "0xE99E64", VA = "0xE99E64")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xE99F0C", Offset = "0xE99F0C", VA = "0xE99F0C")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xE99E70", Offset = "0xE99E70", VA = "0xE99E70")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xE99F18", Offset = "0xE99F18", VA = "0xE99F18")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xE99FB4", Offset = "0xE99FB4", VA = "0xE99FB4")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xE99DAC", Offset = "0xE99DAC", VA = "0xE99DAC")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xE999F0", Offset = "0xE999F0", VA = "0xE999F0")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xE9A020", Offset = "0xE9A020", VA = "0xE9A020")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x20000A5")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB944", Offset = "0x8DB944")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xE9A028", Offset = "0xE9A028", VA = "0xE9A028")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xE9A04C", Offset = "0xE9A04C", VA = "0xE9A04C")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xE9A0F8", Offset = "0xE9A0F8", VA = "0xE9A0F8")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x20000A6")]
public class Bin : StaticMapped<Bin>
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation m_anim;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip m_openAnim;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip m_closeAnim;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_deleteAnimDuration;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_endLoc;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_heightLoc;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> m_canBin;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_binSFX;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform holder;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRInteractableItem m_examining;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isDeleting;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1049E80", Offset = "0x1049E80", VA = "0x1049E80")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7A9C", Offset = "0x8E7A9C")]
	public static void EnableBinFolk()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x104A020", Offset = "0x104A020", VA = "0x104A020", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x104A07C", Offset = "0x104A07C", VA = "0x104A07C")]
	private void Start()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x104A1E4", Offset = "0x104A1E4", VA = "0x104A1E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x104A41C", Offset = "0x104A41C", VA = "0x104A41C")]
	private void DeleteTheThing(NVRInteractableItem thing, [Optional] Action<NVRInteractableItem> callback)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x104A68C", Offset = "0x104A68C", VA = "0x104A68C")]
	private void ResetAfterDelete(NVRInteractableItem thing)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x104A7A8", Offset = "0x104A7A8", VA = "0x104A7A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x104AA2C", Offset = "0x104AA2C", VA = "0x104AA2C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x104AB9C", Offset = "0x104AB9C", VA = "0x104AB9C")]
	public Bin()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ActivityItem : StaticMapped<ActivityItem>
{
	[Token(Token = "0x20000A8")]
	public delegate void VoidDelegate();

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_emoji;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_happinessAwarded;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_areaOfEffect;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_startLocator;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB9A0", Offset = "0x8DB9A0")]
	private bool <m_inUse>k__BackingField;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Interest m_interest;

	[Token(Token = "0x17000057")]
	public float AreaOfEffectSq
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x138BCCC", Offset = "0x138BCCC", VA = "0x138BCCC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000058")]
	public bool m_inUse
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x138BCD8", Offset = "0x138BCD8", VA = "0x138BCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7AE4", Offset = "0x8E7AE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x138BCE0", Offset = "0x138BCE0", VA = "0x138BCE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7AF4", Offset = "0x8E7AF4")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x138BCEC", Offset = "0x138BCEC", VA = "0x138BCEC", Slot = "7")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x138BDC4", Offset = "0x138BDC4", VA = "0x138BDC4", Slot = "8")]
	public virtual void BeginActivity(Person p, VoidDelegate onActivityComplete)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x138BDC8", Offset = "0x138BDC8", VA = "0x138BDC8", Slot = "9")]
	public virtual void Cancel()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x138BDCC", Offset = "0x138BDCC", VA = "0x138BDCC")]
	public bool IsAppealing(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x138BF84", Offset = "0x138BF84", VA = "0x138BF84")]
	public ActivityItem()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ActivityItemGoWaitReturn : ActivityItem
{
	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5648", Offset = "0x8D5648")]
	private sealed class <DoActivity>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivityItemGoWaitReturn <>4__this;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person folk;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VoidDelegate onActivityComplete;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <waitPos>5__4;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion <waitRot>5__5;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <d>5__6;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FolkAnimationController <fac>5__7;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float <t>5__8;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion <endRot>5__9;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000356")]
			[Address(RVA = "0xFF4060", Offset = "0xFF4060", VA = "0xFF4060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000358")]
			[Address(RVA = "0xFF40A8", Offset = "0xFF40A8", VA = "0xFF40A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xFF3990", Offset = "0xFF3990", VA = "0xFF3990")]
		[DebuggerHidden]
		public <DoActivity>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xFF39BC", Offset = "0xFF39BC", VA = "0xFF39BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xFF39C0", Offset = "0xFF39C0", VA = "0xFF39C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xFF4068", Offset = "0xFF4068", VA = "0xFF4068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB9B0", Offset = "0x8DB9B0")]
	public float m_goDuration;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB9E8", Offset = "0x8DB9E8")]
	public string m_animName;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_waitLocator;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FloatRange m_waitDuration;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent m_onWaitStart;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent m_onWaitEnd;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBA20", Offset = "0x8DBA20")]
	public bool m_turnThenReturn;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DBA58", Offset = "0x8DBA58")]
	public float m_turnDuration;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_returnDuration;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x138C030", Offset = "0x138C030", VA = "0x138C030", Slot = "8")]
	public override void BeginActivity(Person p, VoidDelegate onActivityComplete)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x138C05C", Offset = "0x138C05C", VA = "0x138C05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E7B04", Offset = "0x8E7B04")]
	private IEnumerator DoActivity(Person folk, VoidDelegate onActivityComplete)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x138C104", Offset = "0x138C104", VA = "0x138C104", Slot = "9")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x138C10C", Offset = "0x138C10C", VA = "0x138C10C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x138C2C8", Offset = "0x138C2C8", VA = "0x138C2C8")]
	public ActivityItemGoWaitReturn()
	{
	}
}
[Token(Token = "0x20000AB")]
public class AgentController : MonoBehaviour
{
	[Token(Token = "0x20000AC")]
	public enum RepathType
	{
		[Token(Token = "0x4000374")]
		Never,
		[Token(Token = "0x4000375")]
		IfTransformMoves
	}

	[Token(Token = "0x20000AD")]
	public enum Result
	{
		[Token(Token = "0x4000377")]
		Success,
		[Token(Token = "0x4000378")]
		Failed_TargetMoved
	}

	[Token(Token = "0x20000AE")]
	public delegate void CompletedDelegate(Result result);

	[Token(Token = "0x20000AF")]
	public enum GoRule
	{
		[Token(Token = "0x400037A")]
		GoToExactPoint,
		[Token(Token = "0x400037B")]
		GetAsCloseAsPossible
	}

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBA90", Offset = "0x8DBA90")]
	private bool <m_hasDestination>k__BackingField;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RepathType m_shouldRepath;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_targetTransform;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_targetPosition;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshAgent m_agent;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_defaultSpeed;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AgentLinkMover m_linkMover;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CompletedDelegate OnReachedDestination;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_arrivalEpsilon;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_repathEpsilon;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Debug_Target;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private NavMeshPath m_testPath;

	[Token(Token = "0x1700005B")]
	public bool m_hasDestination
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x138C5D8", Offset = "0x138C5D8", VA = "0x138C5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7BB4", Offset = "0x8E7BB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x138C5E0", Offset = "0x138C5E0", VA = "0x138C5E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7BC4", Offset = "0x8E7BC4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Transform Target
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x138C5EC", Offset = "0x138C5EC", VA = "0x138C5EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public bool IsAgentEnabled
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x138C5F4", Offset = "0x138C5F4", VA = "0x138C5F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public bool IsOnNavMesh
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x138C610", Offset = "0x138C610", VA = "0x138C610")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool IsOnNavMeshLink
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x138C62C", Offset = "0x138C62C", VA = "0x138C62C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public bool HasPath
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x138C648", Offset = "0x138C648", VA = "0x138C648")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x138C664", Offset = "0x138C664", VA = "0x138C664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x138C708", Offset = "0x138C708", VA = "0x138C708")]
	public void SetAgentEnabled(bool b)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x138C904", Offset = "0x138C904", VA = "0x138C904")]
	public void SetSpeedMultiplier(float m)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x138C92C", Offset = "0x138C92C", VA = "0x138C92C")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x138C938", Offset = "0x138C938", VA = "0x138C938")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x138C988", Offset = "0x138C988", VA = "0x138C988")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x138C9D8", Offset = "0x138C9D8", VA = "0x138C9D8")]
	public bool CanSetDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x138CA44", Offset = "0x138CA44", VA = "0x138CA44")]
	public bool CanGetTo(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x138CA50", Offset = "0x138CA50", VA = "0x138CA50")]
	public bool CanGetTo(Vector3 p, out NavMeshPath nmp, float closeEnoughDist = -1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x138CBC4", Offset = "0x138CBC4", VA = "0x138CBC4")]
	public bool GetClosestAccessiblePointOnRadius(Transform t, out Vector3 p, int sampleCount = 8)
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x138CDA0", Offset = "0x138CDA0", VA = "0x138CDA0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E7BD4", Offset = "0x8E7BD4")]
	public void GoToRandom25()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x138CDAC", Offset = "0x138CDAC", VA = "0x138CDAC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E7BEC", Offset = "0x8E7BEC")]
	public void GoToDebugTarget()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x138C3C0", Offset = "0x138C3C0", VA = "0x138C3C0")]
	public void GoToRandom(float maxRange, [Optional] CompletedDelegate onReachedDestination)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x138CEFC", Offset = "0x138CEFC", VA = "0x138CEFC")]
	public bool GoTo(Transform t, RepathType repath, [Optional] CompletedDelegate onReachedDestination)
	{
		return default(bool);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x138CDE8", Offset = "0x138CDE8", VA = "0x138CDE8")]
	public bool GoTo(Vector3 p, GoRule goRule, [Optional] CompletedDelegate onReachedDestination)
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x138C518", Offset = "0x138C518", VA = "0x138C518")]
	public bool IsAtDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x138CF6C", Offset = "0x138CF6C", VA = "0x138CF6C")]
	public bool IsWalkingOnSlope()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x138D04C", Offset = "0x138D04C", VA = "0x138D04C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x138D120", Offset = "0x138D120", VA = "0x138D120")]
	public void DrawPath(Color c)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x138D390", Offset = "0x138D390", VA = "0x138D390")]
	public void DrawPathIM(Color c, float width = 0.1f)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x138D5A0", Offset = "0x138D5A0", VA = "0x138D5A0")]
	public void DrawPathIM(NavMeshPath nmp, Color c, float width = 0.1f, float duration = 0f)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x138D708", Offset = "0x138D708", VA = "0x138D708")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x138D730", Offset = "0x138D730", VA = "0x138D730")]
	public AgentController()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AgentControlGotoRandom : ActionTask<AgentController>
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0x8DBAA0", Offset = "0x8DBAA0")]
	public float maxDistance;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x138C360", Offset = "0x138C360", VA = "0x138C360", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x138C4A0", Offset = "0x138C4A0", VA = "0x138C4A0", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x138C584", Offset = "0x138C584", VA = "0x138C584")]
	public AgentControlGotoRandom()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Ambience : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	private class Cell
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<(Decoration, float)> m_contributors;

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xFFC474", Offset = "0xFFC474", VA = "0xFFC474")]
		public Cell()
		{
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cell[,,] m_cells;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int m_size;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_cellSize;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 start;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x14957FC", Offset = "0x14957FC", VA = "0x14957FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1495800", Offset = "0x1495800", VA = "0x1495800")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E7C04", Offset = "0x8E7C04")]
	private void ResetBaseVars()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1495928", Offset = "0x1495928", VA = "0x1495928")]
	private Vector3 CellCenter(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1495978", Offset = "0x1495978", VA = "0x1495978")]
	public Ambience()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Asteroid : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody m_body;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange Velocity;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrailRenderer trail;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StretchableItem stretchableItem;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxTrailVelocity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxTrailLength;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int Value;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trailStrength;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool beingProcessed;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBAB0", Offset = "0x8DBAB0")]
	public bool m_hasItem;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_itemPrefab;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBAE8", Offset = "0x8DBAE8")]
	private GameObject <m_spawnedItem>k__BackingField;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer m_glowRenderer;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_glowMatIndex;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_glowMpbField;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FloatRange m_glowAlphaRange;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_glowSpeed;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MaterialPropertyBlock m_glowMpb;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color m_glowColour;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public TrackedPool<Asteroid> myPool;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public AsteroidEmitter emitter;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 defaultScale;

	[Token(Token = "0x17000061")]
	public bool BeingProcessed
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x14A3430", Offset = "0x14A3430", VA = "0x14A3430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public GameObject m_spawnedItem
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x14A3438", Offset = "0x14A3438", VA = "0x14A3438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7C1C", Offset = "0x8E7C1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x14A3440", Offset = "0x14A3440", VA = "0x14A3440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E7C2C", Offset = "0x8E7C2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x14A3448", Offset = "0x14A3448", VA = "0x14A3448")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x14A35BC", Offset = "0x14A35BC", VA = "0x14A35BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x14A369C", Offset = "0x14A369C", VA = "0x14A369C")]
	private bool IsBeingHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x14A372C", Offset = "0x14A372C", VA = "0x14A372C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x14A3784", Offset = "0x14A3784", VA = "0x14A3784")]
	public void Fire()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x14A3854", Offset = "0x14A3854", VA = "0x14A3854")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x14A3B08", Offset = "0x14A3B08", VA = "0x14A3B08")]
	public void SetItemPrefab(GameObject prefab, bool isVisible = false)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x14A3BE8", Offset = "0x14A3BE8", VA = "0x14A3BE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x14A3CC4", Offset = "0x14A3CC4", VA = "0x14A3CC4")]
	private void OnExploded(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x14A40B8", Offset = "0x14A40B8", VA = "0x14A40B8")]
	public void BeginProcessing()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x14A40C4", Offset = "0x14A40C4", VA = "0x14A40C4")]
	public Asteroid()
	{
	}
}
[Token(Token = "0x20000B4")]
public class AsteroidEmitter : MonoBehaviour
{
	[Token(Token = "0x20000B5")]
	public enum AsteroidSpawnType
	{
		[Token(Token = "0x40003A5")]
		Scrap,
		[Token(Token = "0x40003A6")]
		Item,
		[Token(Token = "0x40003A7")]
		LockedItem
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_asteroidPrefabs;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange AsteroidIntervalHours;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SpawnRadius;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AimRadius;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double m_nextAsteroidTime;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBB18", Offset = "0x8DBB18")]
	public List<GameObject> m_asteroidsWithItemPrefabs;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBB50", Offset = "0x8DBB50")]
	public float ItemProbability;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBB68", Offset = "0x8DBB68")]
	public float LockedInterestItemProbability;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedPool<Asteroid> m_asteroidPool;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedPool<Asteroid> m_itemAsteroidPool;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x14A4198", Offset = "0x14A4198", VA = "0x14A4198")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x14A425C", Offset = "0x14A425C", VA = "0x14A425C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x14A42DC", Offset = "0x14A42DC", VA = "0x14A42DC")]
	public void EmitNow()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x14A433C", Offset = "0x14A433C", VA = "0x14A433C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x14A43F0", Offset = "0x14A43F0", VA = "0x14A43F0")]
	private AsteroidSpawnType GetSpawnType()
	{
		return default(AsteroidSpawnType);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x14A472C", Offset = "0x14A472C", VA = "0x14A472C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7C3C", Offset = "0x8E7C3C")]
	public void EmitNormalAsteroid()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x14A4734", Offset = "0x14A4734", VA = "0x14A4734")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7C84", Offset = "0x8E7C84")]
	public void EmitItemAsteroid()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x14A473C", Offset = "0x14A473C", VA = "0x14A473C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7CCC", Offset = "0x8E7CCC")]
	public void EmitLockedItemAsteroid()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x14A44A4", Offset = "0x14A44A4", VA = "0x14A44A4")]
	private void EmitAsteroid(AsteroidSpawnType spawnType)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x14A4744", Offset = "0x14A4744", VA = "0x14A4744")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x14A47C8", Offset = "0x14A47C8", VA = "0x14A47C8")]
	public AsteroidEmitter()
	{
	}
}
[Token(Token = "0x20000B6")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5658", Offset = "0x8D5658")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <listenerGO>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0xFFD808", Offset = "0xFFD808", VA = "0xFFD808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0xFFD850", Offset = "0xFFD850", VA = "0xFFD850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xFFD504", Offset = "0xFFD504", VA = "0xFFD504")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xFFD530", Offset = "0xFFD530", VA = "0xFFD530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xFFD534", Offset = "0xFFD534", VA = "0xFFD534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xFFD810", Offset = "0xFFD810", VA = "0xFFD810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioController ms_instance;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_sfxVolume;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_sfxRTPC;

	[Token(Token = "0x17000063")]
	public float SFXVolume
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x14A4AB8", Offset = "0x14A4AB8", VA = "0x14A4AB8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x14A4AC0", Offset = "0x14A4AC0", VA = "0x14A4AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E7D14", Offset = "0x8E7D14")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x14A4B38", Offset = "0x14A4B38", VA = "0x14A4B38")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x14A4BB0", Offset = "0x14A4BB0", VA = "0x14A4BB0")]
	public void SetSFXVolume(float v)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x14A4C24", Offset = "0x14A4C24", VA = "0x14A4C24")]
	public AudioController()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5668", Offset = "0x8D5668")]
public class AutoSetupBuildingDefaults : ScriptableObject
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBB80", Offset = "0x8DBB80")]
	public Vector3 m_windowLightLocalPos;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_windowLightScale;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SDFShape.Shape m_windowLightShape;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBBB8", Offset = "0x8DBBB8")]
	public Vector3 m_lightAttachLightLocalPos;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 m_lightAttachLightScale;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public SDFShape.Shape m_lightAttachLightShape;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x14A75FC", Offset = "0x14A75FC", VA = "0x14A75FC")]
	public AutoSetupBuildingDefaults()
	{
	}
}
[Token(Token = "0x20000B9")]
public class Bank : MonoBehaviour
{
	[Token(Token = "0x20000BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5678", Offset = "0x8D5678")]
	private sealed class <PileFrom>d__30 : IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 <>2__current;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bank <>4__this;

		[Token(Token = "0x17000066")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0xFFDFC8", Offset = "0xFFDFC8", VA = "0xFFDFC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0xFFE014", Offset = "0xFFE014", VA = "0xFFE014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xFFDEE0", Offset = "0xFFDEE0", VA = "0xFFDEE0")]
		[DebuggerHidden]
		public <PileFrom>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xFFDF0C", Offset = "0xFFDF0C", VA = "0xFFDF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xFFDF10", Offset = "0xFFDF10", VA = "0xFFDF10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xFFDFD4", Offset = "0xFFDFD4", VA = "0xFFDFD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5688", Offset = "0x8D5688")]
	private sealed class <SpendScrapAtLocationCR>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bank <>4__this;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer <fillInMeshRenderer>5__2;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xFFEF9C", Offset = "0xFFEF9C", VA = "0xFFEF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0xFFEFE4", Offset = "0xFFEFE4", VA = "0xFFEFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xFFE07C", Offset = "0xFFE07C", VA = "0xFFE07C")]
		[DebuggerHidden]
		public <SpendScrapAtLocationCR>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xFFE0A8", Offset = "0xFFE0A8", VA = "0xFFE0A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xFFE0AC", Offset = "0xFFE0AC", VA = "0xFFE0AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xFFEFA4", Offset = "0xFFEFA4", VA = "0xFFEFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5698", Offset = "0x8D5698")]
	private sealed class <DepositAndFlyToCR>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bank <>4__this;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xFFDE90", Offset = "0xFFDE90", VA = "0xFFDE90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xFFDED8", Offset = "0xFFDED8", VA = "0xFFDED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xFFD858", Offset = "0xFFD858", VA = "0xFFD858")]
		[DebuggerHidden]
		public <DepositAndFlyToCR>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xFFD884", Offset = "0xFFD884", VA = "0xFFD884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xFFD888", Offset = "0xFFD888", VA = "0xFFD888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xFFDE98", Offset = "0xFFDE98", VA = "0xFFDE98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bank Instance;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_startingBalance;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Saveable]
	public float m_balance;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatWriter m_displayBalance;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_hpIncreaseSFX;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string m_hpIncreaseBigSFX;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_hpIncreaseBiggerSFX;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_tickerInterval;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_minTickerChange;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_tickerDuration;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_lastTickerTime;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_tickAmount;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_bigTickerThreshold;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_biggerTickerThreshold;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_scrapLimitLarge;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_scrapLimitMedium;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_scrapLimitSmall;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_scrapPileOffset;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_scrapBlockPrefab;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DBC00", Offset = "0x8DBC00")]
	public static bool ms_scrapFliesToHandWhenSpending;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_destroyedItemRefundFraction;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBC48", Offset = "0x8DBC48")]
	public FloatRange m_flyTimeWithdraw;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_flyRadiusWithdraw;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FloatRange m_flyTimeDeposit;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_flyRadiusDeposit;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_scrapPopVFX;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBC80", Offset = "0x8DBC80")]
	public Material m_flyFillInMaterial;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FloatRange m_flyFillInRange;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material m_flyFillInMaterialInstance;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<ScrapCoin> m_flyingCoins;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Vector3> m_flyingCoinsStart;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Vector3> m_flyingCoinsEnd;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform m_flyingDestination;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshFilter m_fillInObjMF;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 m_fillInObjLocalPos;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion m_fillInObjRelativeRot;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x103E5E8", Offset = "0x103E5E8", VA = "0x103E5E8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E7DC4", Offset = "0x8E7DC4")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x103E650", Offset = "0x103E650", VA = "0x103E650")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x103E77C", Offset = "0x103E77C", VA = "0x103E77C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x103E950", Offset = "0x103E950", VA = "0x103E950")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x103F06C", Offset = "0x103F06C", VA = "0x103F06C")]
	public int CountCoinsForValue(float v)
	{
		return default(int);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x103F0CC", Offset = "0x103F0CC", VA = "0x103F0CC")]
	public List<float> GetCoinAmountsForValue(float v)
	{
		return null;
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x103F1A4", Offset = "0x103F1A4", VA = "0x103F1A4")]
	public List<ScrapCoin> SpawnScrapCoinsNearPlayer(float v)
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x103F414", Offset = "0x103F414", VA = "0x103F414")]
	public List<ScrapCoin> SpawnScrapCoinsAtGarage(float v)
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x103F298", Offset = "0x103F298", VA = "0x103F298")]
	public List<ScrapCoin> SpawnScrapCoinsNearLocation(float v, Vector3 nearPos)
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x103F538", Offset = "0x103F538", VA = "0x103F538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E7DD8", Offset = "0x8E7DD8")]
	private IEnumerator<Vector3> PileFrom(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x103F4F4", Offset = "0x103F4F4", VA = "0x103F4F4")]
	public List<ScrapCoin> SpawnScrapCoins(float v, Vector3 spawnPos)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x103FBE0", Offset = "0x103FBE0", VA = "0x103FBE0")]
	public List<ScrapCoin> SpawnScrapCoins(float v, IEnumerable<Vector3> spawnPoints)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x103F5D4", Offset = "0x103F5D4", VA = "0x103F5D4")]
	public List<ScrapCoin> SpawnScrapCoins(float v, IEnumerator<Vector3> spawnPointsIter)
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x103FCB0", Offset = "0x103FCB0", VA = "0x103FCB0")]
	public void DepositInAnyStorageYard(float v)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1040038", Offset = "0x1040038", VA = "0x1040038")]
	public void DepositInClosest(float v, Vector3 p)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1040500", Offset = "0x1040500", VA = "0x1040500")]
	public void Deposit(float v, Warehouse sy)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x104058C", Offset = "0x104058C", VA = "0x104058C")]
	public bool Withdraw(float v, [Optional] Transform flyTo)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1040B68", Offset = "0x1040B68", VA = "0x1040B68")]
	public bool WithdrawFromAnywhere(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1040E80", Offset = "0x1040E80", VA = "0x1040E80")]
	public bool WithdrawFromLooseScrap(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x104122C", Offset = "0x104122C", VA = "0x104122C")]
	public bool TakeFromLooseScrap(float v, ref List<ScrapCoin> coinsTaken)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1041560", Offset = "0x1041560", VA = "0x1041560")]
	public void SetBalance(float balance)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10415C8", Offset = "0x10415C8", VA = "0x10415C8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7E38", Offset = "0x8E7E38")]
	public void Get10()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x10415D0", Offset = "0x10415D0", VA = "0x10415D0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7E80", Offset = "0x8E7E80")]
	public void Get100()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x10415DC", Offset = "0x10415DC", VA = "0x10415DC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7EC8", Offset = "0x8E7EC8")]
	public void Get1000()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x10415E8", Offset = "0x10415E8", VA = "0x10415E8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7F10", Offset = "0x8E7F10")]
	public void Lose10()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10415F0", Offset = "0x10415F0", VA = "0x10415F0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7F58", Offset = "0x8E7F58")]
	public void Lose100()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10415FC", Offset = "0x10415FC", VA = "0x10415FC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E7FA0", Offset = "0x8E7FA0")]
	public void Lose1000()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1040688", Offset = "0x1040688", VA = "0x1040688")]
	private void WithdrawAndFlyTo(float amt, Transform t)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1041608", Offset = "0x1041608", VA = "0x1041608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E7FE8", Offset = "0x8E7FE8")]
	private IEnumerator SpendScrapAtLocationCR()
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1041680", Offset = "0x1041680", VA = "0x1041680")]
	public void DepositAndFlyFrom(float v, Transform startT)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1041D60", Offset = "0x1041D60", VA = "0x1041D60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8048", Offset = "0x8E8048")]
	private IEnumerator DepositAndFlyToCR()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1041DD8", Offset = "0x1041DD8", VA = "0x1041DD8")]
	public Bank()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BatchObjectBuilder : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class MaterialSetting
	{
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material m_original;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_replaceWith;

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xFFF078", Offset = "0xFFF078", VA = "0xFFF078")]
		public MaterialSetting()
		{
		}
	}

	[Token(Token = "0x20000BF")]
	private enum BatchingStatus
	{
		[Token(Token = "0x40003EE")]
		Clean,
		[Token(Token = "0x40003EF")]
		Dirty,
		[Token(Token = "0x40003F0")]
		Batching
	}

	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56A8", Offset = "0x8D56A8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BatchableObject batchableObject;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<(MeshFilter, int)> <>9__0;

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xFFEFEC", Offset = "0xFFEFEC", VA = "0xFFEFEC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xFFEFF4", Offset = "0xFFEFF4", VA = "0xFFEFF4")]
		internal bool <RemoveBatchableObject>b__0((MeshFilter, int) x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MaterialSetting> m_replacements;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, BatchableObject> m_batchableObjects;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BatchingStatus m_batchingStatus;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_rootHostTransform;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialBatchBundle> m_materialBatchBundles;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1042DA4", Offset = "0x1042DA4", VA = "0x1042DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1042EBC", Offset = "0x1042EBC", VA = "0x1042EBC")]
	private BatchingStatus UpdateBatchedMeshes()
	{
		return default(BatchingStatus);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1043120", Offset = "0x1043120", VA = "0x1043120")]
	private void AddBatchableObject(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1043378", Offset = "0x1043378", VA = "0x1043378")]
	private MaterialBatchBundle GetBundleForId(int id, Material m)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10434A0", Offset = "0x10434A0", VA = "0x10434A0")]
	private bool TryGetBundleForId(int id, out MaterialBatchBundle b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x104357C", Offset = "0x104357C", VA = "0x104357C")]
	private void RemoveBatchableObject(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x10438D4", Offset = "0x10438D4", VA = "0x10438D4")]
	private void RemoveBatchedMaterial(int materialID)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x10439B8", Offset = "0x10439B8", VA = "0x10439B8")]
	public void ApplyReplacements()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1043A9C", Offset = "0x1043A9C", VA = "0x1043A9C")]
	public void Batch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1043AA0", Offset = "0x1043AA0", VA = "0x1043AA0")]
	public void Rebatch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1043AD8", Offset = "0x1043AD8", VA = "0x1043AD8")]
	public void Unbatch(BatchableObject batchableObject)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1043ADC", Offset = "0x1043ADC", VA = "0x1043ADC")]
	public BatchObjectBuilder()
	{
	}
}
[Token(Token = "0x20000C1")]
public class BatchableObject : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	private enum BakeStatus
	{
		[Token(Token = "0x40003FF")]
		Never,
		[Token(Token = "0x4000400")]
		Baked,
		[Token(Token = "0x4000401")]
		Unbaked,
		[Token(Token = "0x4000402")]
		Failed
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_id;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BatchObjectBuilder m_batchObjectBuilder;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer m_objectMeshRenderer;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter m_objectMeshFilter;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int stillFrames;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 prevPosition;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion prevRotation;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BakeStatus m_bakeStatus;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_transform;

	[Token(Token = "0x40003FD")]
	private const int bakeAfterFrames = 5;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1043BAC", Offset = "0x1043BAC", VA = "0x1043BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1043D30", Offset = "0x1043D30", VA = "0x1043D30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1043D78", Offset = "0x1043D78", VA = "0x1043D78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1043E70", Offset = "0x1043E70", VA = "0x1043E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1043E74", Offset = "0x1043E74", VA = "0x1043E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1043F84", Offset = "0x1043F84", VA = "0x1043F84")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1043D7C", Offset = "0x1043D7C", VA = "0x1043D7C")]
	private void Bake()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1043D34", Offset = "0x1043D34", VA = "0x1043D34")]
	private void Unbake()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1043FD8", Offset = "0x1043FD8", VA = "0x1043FD8")]
	public BatchableObject()
	{
	}
}
[Token(Token = "0x20000C3")]
public struct BatchedMeshObject
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshFilter m_meshFilter;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MeshRenderer m_meshRenderer;
}
[Token(Token = "0x20000C4")]
internal class MaterialBatchBundle
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<(MeshFilter, int)> meshFilters;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool dirty;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hasBatched;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BatchedMeshObject batchedMeshObject;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Renderer> batchableRenderers;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x16074C8", Offset = "0x16074C8", VA = "0x16074C8")]
	public void SetRenderersEnabled(bool value)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1607574", Offset = "0x1607574", VA = "0x1607574")]
	public BatchedMeshObject GetBatchedMeshObject(Transform rootHostTransform, List<BatchObjectBuilder.MaterialSetting> replacements)
	{
		return default(BatchedMeshObject);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1607808", Offset = "0x1607808", VA = "0x1607808")]
	public MaterialBatchBundle()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1607894", Offset = "0x1607894", VA = "0x1607894")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8198", Offset = "0x8E8198")]
	private bool <GetBatchedMeshObject>b__8_0(BatchObjectBuilder.MaterialSetting x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C5")]
public class Building : StaticMappedBuilding<Building>
{
	[Token(Token = "0x20000C6")]
	public enum BuildingType
	{
		[Token(Token = "0x400045D")]
		None,
		[Token(Token = "0x400045E")]
		House,
		[Token(Token = "0x400045F")]
		Facility,
		[Token(Token = "0x4000460")]
		XX_Research_XX,
		[Token(Token = "0x4000461")]
		X,
		[Token(Token = "0x4000462")]
		XX,
		[Token(Token = "0x4000463")]
		DropInFacility,
		[Token(Token = "0x4000464")]
		Custom
	}

	[Token(Token = "0x20000C7")]
	public enum Size
	{
		[Token(Token = "0x4000466")]
		Small,
		[Token(Token = "0x4000467")]
		Medium,
		[Token(Token = "0x4000468")]
		Large
	}

	[Token(Token = "0x20000C8")]
	public class DecoEvent : UnityEvent<Building, Decoration>
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1002AD8", Offset = "0x1002AD8", VA = "0x1002AD8")]
		public DecoEvent()
		{
		}
	}

	[Token(Token = "0x20000C9")]
	public class PersonEvent : UnityEvent<Person>
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1002C64", Offset = "0x1002C64", VA = "0x1002C64")]
		public PersonEvent()
		{
		}
	}

	[Token(Token = "0x20000CA")]
	public delegate bool BoolReturnDelegate();

	[Token(Token = "0x20000CB")]
	public enum ConstructionState
	{
		[Token(Token = "0x400046A")]
		Unconstructed,
		[Token(Token = "0x400046B")]
		UnderContruction,
		[Token(Token = "0x400046C")]
		Built
	}

	[Token(Token = "0x20000CC")]
	public class BuildingEvent : UnityEvent<Building>
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1002A8C", Offset = "0x1002A8C", VA = "0x1002A8C")]
		public BuildingEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000CD")]
	public class LightSwitch
	{
		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int materialIndex;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color onColor;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color onEmissionColor;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer renderer;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Building building;

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1002B24", Offset = "0x1002B24", VA = "0x1002B24")]
		public LightSwitch(Building building)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x1002BB0", Offset = "0x1002BB0", VA = "0x1002BB0")]
		public void On()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1002C5C", Offset = "0x1002C5C", VA = "0x1002C5C")]
		public void Off()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x1002BB8", Offset = "0x1002BB8", VA = "0x1002BB8")]
		public void Toggle(bool on)
		{
		}
	}

	[Token(Token = "0x20000CE")]
	public delegate double TimeToLeaveDelegate(Person p);

	[Token(Token = "0x20000CF")]
	public delegate bool BoolDelegate();

	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56B8", Offset = "0x8D56B8")]
	private sealed class <UpdateContruction>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Building <>4__this;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <visibleAddedScrap>5__2;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <scrapLastTime>5__3;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000463")]
			[Address(RVA = "0x1002298", Offset = "0x1002298", VA = "0x1002298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0x10022E0", Offset = "0x10022E0", VA = "0x10022E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1001AE4", Offset = "0x1001AE4", VA = "0x1001AE4")]
		[DebuggerHidden]
		public <UpdateContruction>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1001B10", Offset = "0x1001B10", VA = "0x1001B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1001B14", Offset = "0x1001B14", VA = "0x1001B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x10022A0", Offset = "0x10022A0", VA = "0x10022A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56C8", Offset = "0x8D56C8")]
	private sealed class <ApplyInterestColours>d__164 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animateChanges;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Building <>4__this;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0x1001A94", Offset = "0x1001A94", VA = "0x1001A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x1001ADC", Offset = "0x1001ADC", VA = "0x1001ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x1001444", Offset = "0x1001444", VA = "0x1001444")]
		[DebuggerHidden]
		public <ApplyInterestColours>d__164(int <>1__state)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x1001470", Offset = "0x1001470", VA = "0x1001470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x1001474", Offset = "0x1001474", VA = "0x1001474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1001A9C", Offset = "0x1001A9C", VA = "0x1001A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56D8", Offset = "0x8D56D8")]
	private sealed class <UpdateStatusAtEndOfFrame>d__171 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Building <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046F")]
			[Address(RVA = "0x1002534", Offset = "0x1002534", VA = "0x1002534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x100257C", Offset = "0x100257C", VA = "0x100257C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x10022E8", Offset = "0x10022E8", VA = "0x10022E8")]
		[DebuggerHidden]
		public <UpdateStatusAtEndOfFrame>d__171(int <>1__state)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1002314", Offset = "0x1002314", VA = "0x1002314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1002318", Offset = "0x1002318", VA = "0x1002318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x100253C", Offset = "0x100253C", VA = "0x100253C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_areaOfEffect;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BuildingType m_buildingType;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Size m_buildingSize;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_maxInterests;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Saveable]
	public List<Interest> m_interests;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_capacity;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Person> m_owners;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_requiredOwners;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Saveable]
	public List<Person> m_peopleInside;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_meshColoursAreRemappable;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshFilter[] m_buildingMeshes;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BatchableObject[] m_batchableObjects;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LightSwitch[] m_lights;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Bounds m_boundsLS;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public List<Decoration> m_decorationsToCustomise;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NavMeshSourceTag[] m_navMeshTags;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DecoEvent OnDecorationAdded;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DecoEvent OnDecorationRemoved;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	[Saveable]
	public List<Decoration> m_decorations;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_doorsAutoRotate;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_doorOutsideLocatorDist;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Door[] m_doors;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Door> m_reachableDoors;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SpacefolkWindow[] m_allWindows;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TrackedPool<SpacefolkWindow> m_standableWindows;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public SDFShape[] m_sdfOccluders;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SDFShape[] m_sdfLights;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBD50", Offset = "0x8DBD50")]
	public bool m_showEvents;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PersonEvent OnPersonEnters;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DBD88", Offset = "0x8DBD88")]
	public PersonEvent OnPersonLeaves;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DBDC0", Offset = "0x8DBDC0")]
	public PersonEvent OnOwnerAdded;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBDF8", Offset = "0x8DBDF8")]
	private string m_settledSFX;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string m_settledOrphanedSFX;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool m_reachable;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool m_wasBlocked;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private bool m_isInitialized;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[Saveable]
	public int m_seed;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private XXHash m_rand;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float m_energyBoost;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolReturnDelegate IsOpenForBusinessDelegate;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int m_powerUse;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	[ReadOnly]
	private bool m_isPowered;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private PowerGenerator m_powerGenerator;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBE78", Offset = "0x8DBE78")]
	public string m_sfxConstructionStart;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string m_sfxConstructionStop;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool m_constructionSoundPlaying;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool m_canMoveAfterConstruction;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Saveable]
	public ConstructionState m_constructionState;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject[] m_constructionObjects;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBEC0", Offset = "0x8DBEC0")]
	private float <m_scrapRequired>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[Saveable]
	private float m_scrapAdded;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Building> ms_underConstruction;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DBEE0", Offset = "0x8DBEE0")]
	public BuildingEvent OnContructionComplete;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BuildingEvent OnAnyContructionComplete;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static BuildingEvent OnAnySettles;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static BuildingEvent OnAnyDisabled;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static BuildingEvent OnAnyDestroyed;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int ms_unconstructedCount;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int ms_lastFrameUnconstructedCollected;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<int, Material[]> scaffMats;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private FolkJobs.JobTypes m_job;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public MPB_Texture m_infoStrip;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int RemapGradient;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly int FillInProg;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly int FillInPosRad;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TimeToLeaveDelegate GetEpochTimeToLeaveOverride;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Coroutine m_constructionCR;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Material m_scaffoldMat;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float m_constructionAnimRate;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float m_constructionAnimMaxRate;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<(MeshRenderer, Material[])> m_defaultBuildingMaterials;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<(MeshRenderer, Material[])> m_defaultConstructionMaterials;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private double m_previousScrapAddedAtTime;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private double m_scrapAddedAtTime;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private BuildingBuilder.MatPackage m_scaffoldMatPkg;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public float m_paintColoursTime;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static MeshRenderer ms_fillInMeshRenderer;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool m_statusUpdateQueued;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public BoolDelegate CustomSetInfoStrip;

	[Token(Token = "0x1700006C")]
	public float AreaOfEffectSq
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x104F728", Offset = "0x104F728", VA = "0x104F728")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006D")]
	public Interest m_primaryInterest
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x104F734", Offset = "0x104F734", VA = "0x104F734")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public Vector3 m_boundsCenterWS
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x104F838", Offset = "0x104F838", VA = "0x104F838")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x104FB80", Offset = "0x104FB80", VA = "0x104FB80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public bool NeedsPower
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x104FB90", Offset = "0x104FB90", VA = "0x104FB90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public float m_scrapRequired
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x104FBFC", Offset = "0x104FBFC", VA = "0x104FBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E81BC", Offset = "0x8E81BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x104FC04", Offset = "0x104FC04", VA = "0x104FC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E81CC", Offset = "0x8E81CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float ScrapAdded
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x104FC0C", Offset = "0x104FC0C", VA = "0x104FC0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000073")]
	public static int UnconstructedCount
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x104FC14", Offset = "0x104FC14", VA = "0x104FC14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000074")]
	public bool HasJob
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x105265C", Offset = "0x105265C", VA = "0x105265C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x104F2F0", Offset = "0x104F2F0", VA = "0x104F2F0")]
	public static void InitStaticsIfRequired()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x104F528", Offset = "0x104F528", VA = "0x104F528")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E81A8", Offset = "0x8E81A8")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x104F5FC", Offset = "0x104F5FC", VA = "0x104F5FC")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x104F784", Offset = "0x104F784", VA = "0x104F784")]
	public bool HasAllRequiredOwners()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x104F7DC", Offset = "0x104F7DC", VA = "0x104F7DC")]
	public bool AtCapacity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x104F87C", Offset = "0x104F87C", VA = "0x104F87C")]
	public bool IsFullyDecorated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x104F9CC", Offset = "0x104F9CC", VA = "0x104F9CC")]
	private bool HasDecorationForInterest(Interest interest)
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x104FB88", Offset = "0x104FB88", VA = "0x104FB88")]
	public bool IsPowered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x104FE84", Offset = "0x104FE84", VA = "0x104FE84", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x104FF24", Offset = "0x104FF24", VA = "0x104FF24", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x105002C", Offset = "0x105002C", VA = "0x105002C", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x10500E0", Offset = "0x10500E0", VA = "0x10500E0", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x10504F0", Offset = "0x10504F0", VA = "0x10504F0", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x105122C", Offset = "0x105122C", VA = "0x105122C")]
	private void RegisterInitialOccupants()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1050B74", Offset = "0x1050B74", VA = "0x1050B74")]
	private void SetInternalLinksEnabled(bool b)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1050C30", Offset = "0x1050C30", VA = "0x1050C30")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1051890", Offset = "0x1051890", VA = "0x1051890")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1051894", Offset = "0x1051894", VA = "0x1051894")]
	private void OnWillSettle(bool wasBlocked)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1050D60", Offset = "0x1050D60", VA = "0x1050D60")]
	private void RotateDoors()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x10518A0", Offset = "0x10518A0", VA = "0x10518A0")]
	public void OnEndInteractionAndSettled()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1051AE0", Offset = "0x1051AE0", VA = "0x1051AE0")]
	public static void RecalculateAllReachability()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1051C88", Offset = "0x1051C88", VA = "0x1051C88")]
	public void CalculateReachability()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1051FA8", Offset = "0x1051FA8", VA = "0x1051FA8")]
	public void DebugMakeAllDoorsReachable()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1050A6C", Offset = "0x1050A6C", VA = "0x1050A6C")]
	public void CollectFeatures()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x10520A4", Offset = "0x10520A4", VA = "0x10520A4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E81DC", Offset = "0x8E81DC")]
	private void LightsOnDebug()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x10521B0", Offset = "0x10521B0", VA = "0x10521B0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E81F4", Offset = "0x8E81F4")]
	private void LightsOffDebug()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x10520AC", Offset = "0x10520AC", VA = "0x10520AC")]
	private void SetLightsOn(bool on)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1050A28", Offset = "0x1050A28", VA = "0x1050A28")]
	public void Power(bool power)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x10521B8", Offset = "0x10521B8", VA = "0x10521B8")]
	public void SetupWithoutOwner(Interest intr, FacilityDefinition fd)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x10522B0", Offset = "0x10522B0", VA = "0x10522B0")]
	public bool IsOpenForBusiness()
	{
		return default(bool);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1052394", Offset = "0x1052394", VA = "0x1052394")]
	public void TakeOwnership(Person p)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x10523FC", Offset = "0x10523FC", VA = "0x10523FC")]
	public void PersonStartsEntering(Person p)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1051338", Offset = "0x1051338", VA = "0x1051338")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1052458", Offset = "0x1052458", VA = "0x1052458")]
	public void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1052624", Offset = "0x1052624", VA = "0x1052624")]
	public FolkJobs.JobTypes GetJob(bool checkForPower = true)
	{
		return default(FolkJobs.JobTypes);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1052654", Offset = "0x1052654", VA = "0x1052654")]
	public void SetJob(FolkJobs.JobTypes job)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x105266C", Offset = "0x105266C", VA = "0x105266C")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x105271C", Offset = "0x105271C", VA = "0x105271C")]
	public void RemapColours(Texture2D remapTex)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1050890", Offset = "0x1050890", VA = "0x1050890")]
	private void SetupLights()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1052894", Offset = "0x1052894", VA = "0x1052894")]
	private LightSwitch SetupLight(Renderer r, int m)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1050D54", Offset = "0x1050D54", VA = "0x1050D54")]
	private void SetScrapRequiredForConstruction(float s)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x10529E0", Offset = "0x10529E0", VA = "0x10529E0")]
	public float RemainingScrapRequired()
	{
		return default(float);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1050FB0", Offset = "0x1050FB0", VA = "0x1050FB0")]
	private void StartConstruction()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1052A68", Offset = "0x1052A68", VA = "0x1052A68")]
	public void TryAddScrap(float scrapIn, out float notAdded)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x10529F0", Offset = "0x10529F0", VA = "0x10529F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E820C", Offset = "0x8E820C")]
	private IEnumerator UpdateContruction()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1052B60", Offset = "0x1052B60", VA = "0x1052B60")]
	private void ResetMaterialMapsToDefaults(List<(MeshRenderer, Material[])> map)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1050FFC", Offset = "0x1050FFC", VA = "0x1050FFC")]
	public void FinishConstruction(bool triggerEvents, bool animateChanges)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1052C7C", Offset = "0x1052C7C", VA = "0x1052C7C")]
	private void AddDecorationsAsInterests(bool animateChanges)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1052FF8", Offset = "0x1052FF8", VA = "0x1052FF8")]
	public void Explode(Vector3 position, float radius)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1053298", Offset = "0x1053298", VA = "0x1053298")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E826C", Offset = "0x8E826C")]
	public static void CompleteAllConstruction()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1053400", Offset = "0x1053400", VA = "0x1053400")]
	public void DebugCompleteConstruction(bool speedup = true)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1053478", Offset = "0x1053478", VA = "0x1053478")]
	public void DecorationWasAdded(Decoration newDeco)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1053588", Offset = "0x1053588", VA = "0x1053588")]
	public void DecorationWasRemoved(Decoration deco)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1053620", Offset = "0x1053620", VA = "0x1053620")]
	public bool CanBeEntered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x10536AC", Offset = "0x10536AC", VA = "0x10536AC")]
	public bool IsAppealing(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x105373C", Offset = "0x105373C", VA = "0x105373C")]
	public bool HasInterest(Interest primaryInterest, Interest secondaryInterest)
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1052E1C", Offset = "0x1052E1C", VA = "0x1052E1C")]
	private void UpdateInterestDefinedAttributes(bool animateChanges)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x105385C", Offset = "0x105385C", VA = "0x105385C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E82B4", Offset = "0x8E82B4")]
	public void TestFillIn()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x10537D0", Offset = "0x10537D0", VA = "0x10537D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E82CC", Offset = "0x8E82CC")]
	private IEnumerator ApplyInterestColours(bool animateChanges)
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x105388C", Offset = "0x105388C", VA = "0x105388C")]
	public void HideInfoStrip()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x10538BC", Offset = "0x10538BC", VA = "0x10538BC")]
	public void SetInfoStrip(InfoStripRenderer.Category cat)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1053974", Offset = "0x1053974", VA = "0x1053974")]
	public void SetInfoStrip(InfoStripRenderer.Category cat, bool showInter0, Interest inter0, bool showInter1, Interest inter1, bool showInter2, Interest inter2)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1053A78", Offset = "0x1053A78", VA = "0x1053A78")]
	public void SetInfoStrip(string text, Color borderCol)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1051C44", Offset = "0x1051C44", VA = "0x1051C44")]
	public void SetShouldUpdateStatus()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1053B60", Offset = "0x1053B60", VA = "0x1053B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E832C", Offset = "0x8E832C")]
	private IEnumerator UpdateStatusAtEndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1053BD8", Offset = "0x1053BD8", VA = "0x1053BD8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E838C", Offset = "0x8E838C")]
	public void SetAppropriateInfoStrip()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1053E50", Offset = "0x1053E50", VA = "0x1053E50")]
	private void SetUnderConstructionBuildStrip()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1053F24", Offset = "0x1053F24", VA = "0x1053F24")]
	private void SetUndecoratedInfoStrip()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1054118", Offset = "0x1054118", VA = "0x1054118")]
	public float DistSqToClosestDoor(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1054234", Offset = "0x1054234", VA = "0x1054234")]
	public Door ClosestReachableDoor(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x10542DC", Offset = "0x10542DC", VA = "0x10542DC")]
	public Door ClosestReachableDoor(Vector3 p, out float dSq)
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1054394", Offset = "0x1054394", VA = "0x1054394")]
	public Door ClosestDoor(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x105443C", Offset = "0x105443C", VA = "0x105443C")]
	public bool TryGetWindowForMetadata(BlockMetadata location, out SpacefolkWindow window)
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1054820", Offset = "0x1054820", VA = "0x1054820")]
	public Building()
	{
	}
}
[Token(Token = "0x20000D3")]
public class BuildingBuilder : MonoBehaviour
{
	[Token(Token = "0x20000D4")]
	public class MatPackage
	{
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material m_singleMat;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Material[]> matList;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x10032F4", Offset = "0x10032F4", VA = "0x10032F4")]
		public MatPackage(Material srcMat)
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1002118", Offset = "0x1002118", VA = "0x1002118")]
		public Material[] GetArrayForLen(int len)
		{
			return null;
		}
	}

	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56E8", Offset = "0x8D56E8")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingBuilder <>4__this;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ngo>5__2;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047E")]
			[Address(RVA = "0x10032A4", Offset = "0x10032A4", VA = "0x10032A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x10032EC", Offset = "0x10032EC", VA = "0x10032EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1003090", Offset = "0x1003090", VA = "0x1003090")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x10030BC", Offset = "0x10030BC", VA = "0x10030BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x10030C0", Offset = "0x10030C0", VA = "0x10030C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x10032AC", Offset = "0x10032AC", VA = "0x10032AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BuildingBuilder Instance;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_signage;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF18", Offset = "0x8DBF18")]
	public float m_constructionBaseRateScrapPerHr;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_constructionScaffoldMaterial;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_gotPowerScaffoldTex;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_noPowerScaffoldTex;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_fillInMaterial;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material m_infoStripMaterial;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPiecePropertyList m_dummyBuilding;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_maxNumber;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedPool<MatPackage> m_scaffoldMats;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x13C7318", Offset = "0x13C7318", VA = "0x13C7318")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E8494", Offset = "0x8E8494")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x13C7368", Offset = "0x13C7368", VA = "0x13C7368")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x13C7468", Offset = "0x13C7468", VA = "0x13C7468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x13C7734", Offset = "0x13C7734", VA = "0x13C7734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E84A8", Offset = "0x8E84A8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x13C75B8", Offset = "0x13C75B8", VA = "0x13C75B8")]
	private void AllocateScaffoldMaterialPackages()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x13C77AC", Offset = "0x13C77AC", VA = "0x13C77AC")]
	private MatPackage CreateMatPackage()
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x13C7810", Offset = "0x13C7810", VA = "0x13C7810")]
	public BuildingBuilder()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Anomaly : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PowerGenerator m_attachedPowerGenerator;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x149ADCC", Offset = "0x149ADCC", VA = "0x149ADCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x149AF48", Offset = "0x149AF48", VA = "0x149AF48")]
	public Anomaly()
	{
	}
}
[Token(Token = "0x20000D7")]
public class DefenceBeacon : StaticMappedBuilding<DefenceBeacon>, PersonDoDropInJob.IJobProviding
{
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56F8", Offset = "0x8D56F8")]
	private sealed class <HidePreview>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefenceBeacon <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0xE76D88", Offset = "0xE76D88", VA = "0xE76D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0xE76DD0", Offset = "0xE76DD0", VA = "0xE76DD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xE76C8C", Offset = "0xE76C8C", VA = "0xE76C8C")]
		[DebuggerHidden]
		public <HidePreview>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xE76CB8", Offset = "0xE76CB8", VA = "0xE76CB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xE76CBC", Offset = "0xE76CBC", VA = "0xE76CBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xE76D90", Offset = "0xE76D90", VA = "0xE76D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5708", Offset = "0x8D5708")]
	private sealed class <PreviewCR>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefenceBeacon <>4__this;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <d>5__3;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049A")]
			[Address(RVA = "0xE76F58", Offset = "0xE76F58", VA = "0xE76F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0xE76FA0", Offset = "0xE76FA0", VA = "0xE76FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xE76DD8", Offset = "0xE76DD8", VA = "0xE76DD8")]
		[DebuggerHidden]
		public <PreviewCR>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xE76E04", Offset = "0xE76E04", VA = "0xE76E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xE76E08", Offset = "0xE76E08", VA = "0xE76E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xE76F60", Offset = "0xE76F60", VA = "0xE76F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_folkCapacity;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBF50", Offset = "0x8DBF50")]
	public float m_folkDrainToZeroTime;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_normalFolkProtection;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_minRadius;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_maxRadius;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_protectiveBubble;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_protectiveBubbleVisualiser;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBF88", Offset = "0x8DBF88")]
	private float <m_currentRadius>k__BackingField;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_radiusLerp;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isSetup;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine m_previewCR;

	[Token(Token = "0x1700007D")]
	public float m_currentRadius
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xF2E440", Offset = "0xF2E440", VA = "0xF2E440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8558", Offset = "0x8E8558")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xF2E448", Offset = "0xF2E448", VA = "0xF2E448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8568", Offset = "0x8E8568")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool JobActive
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xF2E450", Offset = "0xF2E450", VA = "0xF2E450", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xF2E458", Offset = "0xF2E458", VA = "0xF2E458", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xF2E460", Offset = "0xF2E460", VA = "0xF2E460")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xF2E4EC", Offset = "0xF2E4EC", VA = "0xF2E4EC", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xF2E780", Offset = "0xF2E780", VA = "0xF2E780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8578", Offset = "0x8E8578")]
	private IEnumerator HidePreview()
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xF2E7F8", Offset = "0xF2E7F8", VA = "0xF2E7F8")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xF2E800", Offset = "0xF2E800", VA = "0xF2E800")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xF2E83C", Offset = "0xF2E83C", VA = "0xF2E83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E85D8", Offset = "0x8E85D8")]
	private IEnumerator PreviewCR()
	{
		return null;
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xF2E8B4", Offset = "0xF2E8B4", VA = "0xF2E8B4")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xF2E910", Offset = "0xF2E910", VA = "0xF2E910")]
	private void OnConstructionComplete(Building bldg)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xF2E96C", Offset = "0xF2E96C", VA = "0xF2E96C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xF2EC10", Offset = "0xF2EC10", VA = "0xF2EC10")]
	public DefenceBeacon()
	{
	}
}
[Token(Token = "0x20000DA")]
public class DropInFacility : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	private enum State
	{
		[Token(Token = "0x40004B2")]
		Empty,
		[Token(Token = "0x40004B3")]
		InUse,
		[Token(Token = "0x40004B4")]
		Closed
	}

	[Token(Token = "0x20000DC")]
	public delegate void VoidDelegate();

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hackyShouldRemoveReachableDoors;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_requiredWorkers;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> m_availableStandLocs;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<(Person, Transform)> m_occupants;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoidDelegate OnEnterInUse;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VoidDelegate OnUpdateInUse;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VoidDelegate OnExitInUse;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_bldg;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_sfxDoorClose;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x100CAA0", Offset = "0x100CAA0", VA = "0x100CAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x100D0CC", Offset = "0x100D0CC", VA = "0x100D0CC")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x100D0D4", Offset = "0x100D0D4", VA = "0x100D0D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x100D128", Offset = "0x100D128", VA = "0x100D128")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x100D1B0", Offset = "0x100D1B0", VA = "0x100D1B0")]
	private void Enter_InUse()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x100D1C4", Offset = "0x100D1C4", VA = "0x100D1C4")]
	private void Update_InUse()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x100D25C", Offset = "0x100D25C", VA = "0x100D25C")]
	private void ExitInUse()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x100D270", Offset = "0x100D270", VA = "0x100D270")]
	private void Enter_Closed()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x100D274", Offset = "0x100D274", VA = "0x100D274")]
	private void Update_Closed()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x100D278", Offset = "0x100D278", VA = "0x100D278")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x100D4D0", Offset = "0x100D4D0", VA = "0x100D4D0")]
	public void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x100D6F0", Offset = "0x100D6F0", VA = "0x100D6F0")]
	public DropInFacility()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x100D77C", Offset = "0x100D77C", VA = "0x100D77C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E86D8", Offset = "0x8E86D8")]
	private bool <Start>b__13_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DD")]
public class Facility : StaticMappedBuilding<Facility>
{
	[Token(Token = "0x20000DE")]
	public class FacilityEvent : UnityEvent<Facility>
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xE7B130", Offset = "0xE7B130", VA = "0xE7B130")]
		public FacilityEvent()
		{
		}
	}

	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5718", Offset = "0x8D5718")]
	private sealed class <AddSign>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Facility <>4__this;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CityPiece <cp>5__2;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Interest <interestA>5__3;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Decoration <signDeco>5__4;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody <rb>5__5;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0xE7B0E0", Offset = "0xE7B0E0", VA = "0xE7B0E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0xE7B128", Offset = "0xE7B128", VA = "0xE7B128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xE7A6FC", Offset = "0xE7A6FC", VA = "0xE7A6FC")]
		[DebuggerHidden]
		public <AddSign>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xE7A728", Offset = "0xE7A728", VA = "0xE7A728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xE7A72C", Offset = "0xE7A72C", VA = "0xE7A72C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xE7B0E8", Offset = "0xE7B0E8", VA = "0xE7B0E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FacilityDefinition m_definition;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XXHash m_rand;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random m_signRand;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private System.Random m_nameRand;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SignAppearance m_sign;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_displayName;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_nameFinalised;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public FacilityCategory m_category;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_maxStock;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[ReadOnly]
	[Saveable]
	public int m_stock;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_stockReplenishTimeDays;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Saveable]
	private double m_nextReplenishEpochTime;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_signGlow;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform m_stockProgress;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FacilityEvent OnAnyFacilitySettles;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FacilityEvent OnAnyDestroyed;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_hasAutoPlacedDecorations;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxDoorClose;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBFF0", Offset = "0x8DBFF0")]
	public int m_giveItemEvery;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int m_nextItemAt;

	[Token(Token = "0x17000084")]
	public bool IsSetup
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1019A14", Offset = "0x1019A14", VA = "0x1019A14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1019A80", Offset = "0x1019A80", VA = "0x1019A80", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x101A148", Offset = "0x101A148", VA = "0x101A148")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x101A2B0", Offset = "0x101A2B0", VA = "0x101A2B0")]
	public void SetupWithoutOwner(Interest intr, FacilityDefinition fd)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x101A04C", Offset = "0x101A04C", VA = "0x101A04C")]
	private void TryAddSign()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x101A318", Offset = "0x101A318", VA = "0x101A318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E86E8", Offset = "0x8E86E8")]
	private IEnumerator AddSign()
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x101A390", Offset = "0x101A390", VA = "0x101A390")]
	private void UpdateDisplayName()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x101A864", Offset = "0x101A864", VA = "0x101A864")]
	public double GetEpochTimeToLeave(Person p)
	{
		return default(double);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x101A8E0", Offset = "0x101A8E0", VA = "0x101A8E0")]
	private void OnPersonLeaves(Person p)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x101AA44", Offset = "0x101AA44", VA = "0x101AA44")]
	private void OnPersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x101AAA4", Offset = "0x101AAA4", VA = "0x101AAA4")]
	private bool GiveFolkRandomItem(Person p)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x101AD10", Offset = "0x101AD10", VA = "0x101AD10")]
	private bool IsOpenForBusiness()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x101A938", Offset = "0x101A938", VA = "0x101A938")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8748", Offset = "0x8E8748")]
	private void RemoveStock()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x101A2BC", Offset = "0x101A2BC", VA = "0x101A2BC")]
	private void InitialiseStock()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x101AD20", Offset = "0x101AD20", VA = "0x101AD20")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8760", Offset = "0x8E8760")]
	public void ReplenishStock()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x101A14C", Offset = "0x101A14C", VA = "0x101A14C")]
	public void UpdateStock()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x101A6A4", Offset = "0x101A6A4", VA = "0x101A6A4")]
	public void SetSignOpenForBusiness()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x101A540", Offset = "0x101A540", VA = "0x101A540")]
	public void SetSignClosedForBusiness()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x101AD64", Offset = "0x101AD64", VA = "0x101AD64")]
	public void OnContructionComplete(Building bldg)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x101B074", Offset = "0x101B074", VA = "0x101B074")]
	private void OnDecorationAdded(Building bldg, Decoration newDeco)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x101B344", Offset = "0x101B344", VA = "0x101B344")]
	private void OnDecorationRemoved(Building bldg, Decoration newDeco)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x101B348", Offset = "0x101B348", VA = "0x101B348")]
	public Facility()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x101B4EC", Offset = "0x101B4EC", VA = "0x101B4EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8778", Offset = "0x8E8778")]
	private void <Start>b__22_0()
	{
	}
}
[Token(Token = "0x20000E0")]
public class House : StaticMappedBuilding<House>
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC028", Offset = "0x8DC028")]
	public string m_sfxOwnerAdded;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxDoorClose;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xFBA39C", Offset = "0xFBA39C", VA = "0xFBA39C", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xFBA5EC", Offset = "0xFBA5EC", VA = "0xFBA5EC", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xFBA698", Offset = "0xFBA698", VA = "0xFBA698")]
	private void OnOwnerAdded(Person p)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xFBA824", Offset = "0xFBA824", VA = "0xFBA824")]
	private bool SetInfoStrip()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xFBA8F0", Offset = "0xFBA8F0", VA = "0xFBA8F0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E87D8", Offset = "0x8E87D8")]
	public static void HighlightEmptyHomes()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xFBAA88", Offset = "0xFBAA88", VA = "0xFBAA88")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E8820", Offset = "0x8E8820")]
	public static void DehighlightEmptyHomes()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xFBABFC", Offset = "0xFBABFC", VA = "0xFBABFC")]
	public House()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PowerGenerator : StaticMappedBuilding<PowerGenerator>, Snappable.IDelegate
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PowerCapacity;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[ReadOnly]
	[SerializeField]
	private int m_powerUsed;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] PowerLabels;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_requireAnomolyToPower;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_antenna;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_antennaRadius;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anomaly m_anomalyNear;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem m_anomalyParticles;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_powerArcs;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Building m_building;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnyObjectSensor m_powerSupplySensor;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SnappableWorldAffordance m_powerBoxAffordance;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_restrictedPlacement;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_restrictedPlacementPosition;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 m_restrictedPlacementRotation;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC098", Offset = "0x8DC098")]
	public string m_sfxArcStart;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxArcStop;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_sfxPlayerHandInserted;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_sfxPlayerHandRemoved;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_sfxConnected;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_sfxDisconnected;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_sfxOperatingStart;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_sfxOperatingStop;

	[Token(Token = "0x17000087")]
	public int PowerUsage
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x128C908", Offset = "0x128C908", VA = "0x128C908")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x128C910", Offset = "0x128C910", VA = "0x128C910", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x128CB88", Offset = "0x128CB88", VA = "0x128CB88", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x128CF70", Offset = "0x128CF70", VA = "0x128CF70")]
	public void SetBuilding(Building building)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x128D04C", Offset = "0x128D04C", VA = "0x128D04C")]
	private void OnBuildingConstructed(Building bldg)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x128D0DC", Offset = "0x128D0DC", VA = "0x128D0DC")]
	private void OnEndInteractionAndSettled()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x128D51C", Offset = "0x128D51C", VA = "0x128D51C")]
	public void RestrictPlacement(Vector3 pos, Vector3 rot)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x128CC38", Offset = "0x128CC38", VA = "0x128CC38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8868", Offset = "0x8E8868")]
	public static void CalculateAllLoads(bool fromSave = false)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x128D61C", Offset = "0x128D61C", VA = "0x128D61C")]
	private void CalculateLoad()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x128CB04", Offset = "0x128CB04", VA = "0x128CB04")]
	private void SetLabelText(string text)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x128D778", Offset = "0x128D778", VA = "0x128D778", Slot = "9")]
	public Snappable.SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x128DB60", Offset = "0x128DB60", VA = "0x128DB60", Slot = "10")]
	public Snappable.SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x128DC98", Offset = "0x128DC98", VA = "0x128DC98", Slot = "11")]
	public void SnappableShowingPreview(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x128DC9C", Offset = "0x128DC9C", VA = "0x128DC9C", Slot = "12")]
	public void SnappableInteractionDidBegin(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x128DD3C", Offset = "0x128DD3C", VA = "0x128DD3C", Slot = "13")]
	public void SnappableInteractionDidEnd(Snappable snappable)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x128D534", Offset = "0x128D534", VA = "0x128D534")]
	private void ConnectSparksOnLoad()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x128D968", Offset = "0x128D968", VA = "0x128D968")]
	private Anomaly FindNearbyAnomaly(Vector3 antennaLocation)
	{
		return null;
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x128D180", Offset = "0x128D180", VA = "0x128D180")]
	private void UpdatePowerArcs(Vector3 sourcePosition, bool playSound = true)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x128DDD0", Offset = "0x128DDD0", VA = "0x128DDD0")]
	public PowerGenerator()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5728", Offset = "0x8D5728")]
public class Refinery : StaticMappedBuilding<Refinery>, PersonDoDropInJob.IJobProviding
{
	[Token(Token = "0x20000E3")]
	public enum State
	{
		[Token(Token = "0x4000513")]
		Idle,
		[Token(Token = "0x4000514")]
		Preparing,
		[Token(Token = "0x4000515")]
		Processing,
		[Token(Token = "0x4000516")]
		ProcessComplete
	}

	[Serializable]
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5788", Offset = "0x8D5788")]
	private sealed class <>c
	{
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, Vector3> <>9__61_0;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x10670CC", Offset = "0x10670CC", VA = "0x10670CC")]
		public <>c()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x10670D4", Offset = "0x10670D4", VA = "0x10670D4")]
		internal Vector3 <Enter_ProcessComplete>b__61_0(Transform t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DropInFacility m_dropIn;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnyObjectSensor m_sensor;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatConst m_processingValueMultiplier;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatConst m_refundValueMultiplier;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_PreparingDurHrs;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_ProcessingDurHrs;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_coolDownDurHrs;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_speedPerExtraWorker;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_asteroidHasItemSpeedMultiplier;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem m_workingFX;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_machineryEnterLoc;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform m_texticleLoc;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform m_funnelLoc;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_grinderL;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_grinderLRotateSpeed;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform m_grinderR;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_grinderRRotateSpeed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject m_currentlyProcessing;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody m_currentlyProcessingRB;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_currentlyProcessingScrapValue;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject m_currentlyProcessingBonusItemPrefab;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int m_latestMoneyEarned;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC0D0", Offset = "0x8DC0D0")]
	public GameObject m_outputVFX;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Transform> m_outputLocators;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<AnyObjectSensor> m_outputBlockedSensors;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC108", Offset = "0x8DC108")]
	public Transform m_foundItemLoc;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_prefabOfObjectToDiscover;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_lastObjectDiscovered;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC140", Offset = "0x8DC140")]
	public string m_sfxStartRefining;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_sfxStopRefining;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_sfxGetInput;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string m_sfxOutput;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_playingOperatingSound;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int m_scrapToProcess;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private IEnumerator<Transform> m_outputLocatorEnumerator;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 startP;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int m_outputsRequired;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float m_processingProgress;

	[Token(Token = "0x17000088")]
	public State CurrentState
	{
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x119B5A8", Offset = "0x119B5A8", VA = "0x119B5A8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000089")]
	public bool JobActive
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x119B5F4", Offset = "0x119B5F4", VA = "0x119B5F4", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x119B610", Offset = "0x119B610", VA = "0x119B610", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	private float WorkRate
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x119B618", Offset = "0x119B618", VA = "0x119B618")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008C")]
	private int FreeOutputs
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x119C6FC", Offset = "0x119C6FC", VA = "0x119C6FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x119B750", Offset = "0x119B750", VA = "0x119B750", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x119BF30", Offset = "0x119BF30", VA = "0x119BF30")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x119BFE8", Offset = "0x119BFE8", VA = "0x119BFE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x119C1D4", Offset = "0x119C1D4", VA = "0x119C1D4")]
	private void OnEnterInUse()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x119C1D8", Offset = "0x119C1D8", VA = "0x119C1D8")]
	private void OnUpdateInUse()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x119C22C", Offset = "0x119C22C", VA = "0x119C22C")]
	private void OnExitInUse()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x119C2BC", Offset = "0x119C2BC", VA = "0x119C2BC")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x119C828", Offset = "0x119C828", VA = "0x119C828")]
	private void Enter_Preparing()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x119C93C", Offset = "0x119C93C", VA = "0x119C93C")]
	private void Update_Preparing()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x119CBB4", Offset = "0x119CBB4", VA = "0x119CBB4")]
	private void Enter_Processing()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x119CBEC", Offset = "0x119CBEC", VA = "0x119CBEC")]
	private void Update_Processing()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x119CEE4", Offset = "0x119CEE4", VA = "0x119CEE4")]
	private void Enter_ProcessComplete()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x119DC64", Offset = "0x119DC64", VA = "0x119DC64")]
	private void Update_ProcessComplete()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x119DD10", Offset = "0x119DD10", VA = "0x119DD10")]
	private bool SetInfoStrip()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x119DDFC", Offset = "0x119DDFC", VA = "0x119DDFC")]
	public Refinery()
	{
	}
}
[Token(Token = "0x20000E5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D5798", Offset = "0x8D5798")]
public class RocketBoosterControlRoom : StaticMappedBuilding<RocketBoosterControlRoom>, PersonDoDropInJob.IJobProviding
{
	[Serializable]
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D57F8", Offset = "0x8D57F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Objective> <>9__36_0;

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x106780C", Offset = "0x106780C", VA = "0x106780C")]
		public <>c()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1067814", Offset = "0x1067814", VA = "0x1067814")]
		internal bool <DoPersonEnters>b__36_0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5808", Offset = "0x8D5808")]
	private sealed class <DoPersonEnters>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person p;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RocketBoosterControlRoom <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x10681CC", Offset = "0x10681CC", VA = "0x10681CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x1068214", Offset = "0x1068214", VA = "0x1068214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1067890", Offset = "0x1067890", VA = "0x1067890")]
		[DebuggerHidden]
		public <DoPersonEnters>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x10678BC", Offset = "0x10678BC", VA = "0x10678BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10678C0", Offset = "0x10678C0", VA = "0x10678C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x10681D4", Offset = "0x10681D4", VA = "0x10681D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5818", Offset = "0x8D5818")]
	private sealed class <LaunchAllSequence>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RocketBoosterControlRoom <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x10691E4", Offset = "0x10691E4", VA = "0x10691E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0x106922C", Offset = "0x106922C", VA = "0x106922C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x106821C", Offset = "0x106821C", VA = "0x106821C")]
		[DebuggerHidden]
		public <LaunchAllSequence>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1068248", Offset = "0x1068248", VA = "0x1068248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x106824C", Offset = "0x106824C", VA = "0x106824C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x10691EC", Offset = "0x10691EC", VA = "0x10691EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ms_launchStarted;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool ms_boostersActivated;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_requiredFolk;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> m_enableWhenOccupied;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ParticleSystem> m_fxBoosterReady;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> m_fxBoosterActive;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC178", Offset = "0x8DC178")]
	private DropInFacility <m_dropIn>k__BackingField;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_boostDownDuration;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_cityMoveSpeed;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Ease m_moveDownEase;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_boostShakeStrength;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_presequenceChatterInterval;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_countdownInterval;

	[Token(Token = "0x4000526")]
	private const string m_presequenceSFXPlay = "rocketending_prepsequence_play";

	[Token(Token = "0x4000527")]
	private const string m_presequenceSFXStop = "rocketending_prepsequence_stop";

	[Token(Token = "0x4000528")]
	private const string m_countdown5SFXPlay = "rocketending_countdown_5_play";

	[Token(Token = "0x4000529")]
	private const string m_countdown5SFXStop = "rocketending_countdown_5_stop";

	[Token(Token = "0x400052A")]
	private const string m_countdown4SFXPlay = "rocketending_countdown_4_play";

	[Token(Token = "0x400052B")]
	private const string m_countdown4SFXStop = "rocketending_countdown_4_stop";

	[Token(Token = "0x400052C")]
	private const string m_countdown3SFXPlay = "rocketending_countdown_3_play";

	[Token(Token = "0x400052D")]
	private const string m_countdown3SFXStop = "rocketending_countdown_3_stop";

	[Token(Token = "0x400052E")]
	private const string m_countdown2SFXPlay = "rocketending_countdown_2_play";

	[Token(Token = "0x400052F")]
	private const string m_countdown2SFXStop = "rocketending_countdown_2_stop";

	[Token(Token = "0x4000530")]
	private const string m_countdown1SFXPlay = "rocketending_countdown_1_play";

	[Token(Token = "0x4000531")]
	private const string m_blastoffSFXPlay = "rocketending_blastoff_play";

	[Token(Token = "0x4000532")]
	private const string m_blastoffSFXStop = "rocketending_blastoff_stop";

	[Token(Token = "0x1700008D")]
	public DropInFacility m_dropIn
	{
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x11A14DC", Offset = "0x11A14DC", VA = "0x11A14DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8880", Offset = "0x8E8880")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x11A14E4", Offset = "0x11A14E4", VA = "0x11A14E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8890", Offset = "0x8E8890")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public bool JobActive
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x11A14EC", Offset = "0x11A14EC", VA = "0x11A14EC", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public bool JobRequiresWellRested
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x11A14F4", Offset = "0x11A14F4", VA = "0x11A14F4", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11A14FC", Offset = "0x11A14FC", VA = "0x11A14FC", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11A18C8", Offset = "0x11A18C8", VA = "0x11A18C8", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11A19C0", Offset = "0x11A19C0", VA = "0x11A19C0")]
	public void PersonEnters(Person p)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11A19EC", Offset = "0x11A19EC", VA = "0x11A19EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E88A0", Offset = "0x8E88A0")]
	private IEnumerator DoPersonEnters(Person p)
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x11A1A80", Offset = "0x11A1A80", VA = "0x11A1A80")]
	private void PersonLeaves(Person p)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x11A1B1C", Offset = "0x11A1B1C", VA = "0x11A1B1C")]
	private void OnEnterInUse()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x11A1B28", Offset = "0x11A1B28", VA = "0x11A1B28")]
	private void OnUpdateInUse()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x11A1B2C", Offset = "0x11A1B2C", VA = "0x11A1B2C")]
	private void OnExitInUse()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x11A1B38", Offset = "0x11A1B38", VA = "0x11A1B38")]
	public void ActivateBooster(bool b)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x11A1B58", Offset = "0x11A1B58", VA = "0x11A1B58")]
	public void AllOccupantsSay(string s)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x11A1C24", Offset = "0x11A1C24", VA = "0x11A1C24")]
	public void AllBoostersAllOccupantsSay(string s)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x11A1E18", Offset = "0x11A1E18", VA = "0x11A1E18")]
	public void RandomOccupantSay(string s)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x11A1EC4", Offset = "0x11A1EC4", VA = "0x11A1EC4")]
	public void AllBoostersRandomOccupantSay(string s)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x11A202C", Offset = "0x11A202C", VA = "0x11A202C")]
	private void MoveThingDownwards(Transform t)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x11A23D8", Offset = "0x11A23D8", VA = "0x11A23D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8900", Offset = "0x8E8900")]
	public void StartLaunchAllSequence()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x11A2404", Offset = "0x11A2404", VA = "0x11A2404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8918", Offset = "0x8E8918")]
	private IEnumerator LaunchAllSequence()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x11A247C", Offset = "0x11A247C", VA = "0x11A247C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8978", Offset = "0x8E8978")]
	public void DebugBoosterReady()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x11A2488", Offset = "0x11A2488", VA = "0x11A2488")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8990", Offset = "0x8E8990")]
	public void DebugBoosterNotReady()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x11A2494", Offset = "0x11A2494", VA = "0x11A2494")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E89A8", Offset = "0x8E89A8")]
	public void DebugBoosterActive()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x11A24A4", Offset = "0x11A24A4", VA = "0x11A24A4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E89C0", Offset = "0x8E89C0")]
	public void DebugBoosterNotActive()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x11A24B4", Offset = "0x11A24B4", VA = "0x11A24B4")]
	public RocketBoosterControlRoom()
	{
	}
}
[Token(Token = "0x20000E9")]
public class SignAppearance : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_interestItemLoc;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_textSign;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_glow;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_glowIntensity;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_glowAlpha;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_nameText;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_stockText;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xEE2274", Offset = "0xEE2274", VA = "0xEE2274")]
	public void Setup(Interest inter, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xEE2484", Offset = "0xEE2484", VA = "0xEE2484")]
	public SignAppearance()
	{
	}
}
[Token(Token = "0x20000EA")]
public class StaticMappedBuilding<T> : StaticMapped<T> where T : UnityEngine.Component
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> AllBuilt;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Building m_bldg;

	[Token(Token = "0x6000529")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600052B")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600052C")]
	private void OnBuilt(Building bldg)
	{
	}

	[Token(Token = "0x600052D")]
	public StaticMappedBuilding()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Warehouse : StaticMapped<Warehouse>
{
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5828", Offset = "0x8D5828")]
	private sealed class <AllBuilt>d__0 : IEnumerable<Warehouse>, IEnumerable, IEnumerator<Warehouse>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Warehouse <>2__current;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, Warehouse>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x17000095")]
		private Warehouse System.Collections.Generic.IEnumerator<Warehouse>.Current
		{
			[Token(Token = "0x600053E")]
			[Address(RVA = "0xEBB990", Offset = "0xEBB990", VA = "0xEBB990", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0xEBB9D8", Offset = "0xEBB9D8", VA = "0xEBB9D8", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xEBB688", Offset = "0xEBB688", VA = "0xEBB688")]
		[DebuggerHidden]
		public <AllBuilt>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xEBB6C0", Offset = "0xEBB6C0", VA = "0xEBB6C0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xEBB730", Offset = "0xEBB730", VA = "0xEBB730", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xEBB6DC", Offset = "0xEBB6DC", VA = "0xEBB6DC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xEBB998", Offset = "0xEBB998", VA = "0xEBB998", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xEBB9E0", Offset = "0xEBB9E0", VA = "0xEBB9E0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Warehouse> System.Collections.Generic.IEnumerable<Warehouse>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xEBBA74", Offset = "0xEBBA74", VA = "0xEBBA74", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5838", Offset = "0x8D5838")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Warehouse <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xEBBD08", Offset = "0xEBBD08", VA = "0xEBBD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0xEBBD50", Offset = "0xEBBD50", VA = "0xEBBD50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xEBBA78", Offset = "0xEBBA78", VA = "0xEBBA78")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xEBBAA4", Offset = "0xEBBAA4", VA = "0xEBBAA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xEBBAA8", Offset = "0xEBBAA8", VA = "0xEBBAA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xEBBD10", Offset = "0xEBBD10", VA = "0xEBBD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	public float m_scrapCount;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_capacity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_signs;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_scrapBlockPrefab;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_topOfPileLocator;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Building m_bldg;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_scrapPopFX;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_playerGrapWithdrawAmount;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnyObjectSensor m_sensor;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC1A8", Offset = "0x8DC1A8")]
	private string m_sfxGetScrap;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_initialised;

	[Token(Token = "0x17000094")]
	public bool IsFull
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x13FF720", Offset = "0x13FF720", VA = "0x13FF720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x13FF6C4", Offset = "0x13FF6C4", VA = "0x13FF6C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8A78", Offset = "0x8E8A78")]
	public static IEnumerable<Warehouse> AllBuilt()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x13FF730", Offset = "0x13FF730", VA = "0x13FF730")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8AD8", Offset = "0x8E8AD8")]
	public void DebugDepost10()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x13FF888", Offset = "0x13FF888", VA = "0x13FF888")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E8AF0", Offset = "0x8E8AF0")]
	public void DebugWithdraw10()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x13FF758", Offset = "0x13FF758", VA = "0x13FF758")]
	public void Deposit(float amtIn, out float remainder)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x13FF8B0", Offset = "0x13FF8B0", VA = "0x13FF8B0")]
	public float Withdraw(float v, out float remainder)
	{
		return default(float);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x13FF9F8", Offset = "0x13FF9F8", VA = "0x13FF9F8")]
	private void UpdateSigns()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x13FFBB4", Offset = "0x13FFBB4", VA = "0x13FFBB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8B08", Offset = "0x8E8B08")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x13FFC2C", Offset = "0x13FFC2C", VA = "0x13FFC2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1400258", Offset = "0x1400258", VA = "0x1400258")]
	public static Warehouse ClosestWarehouseWithScrap(Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1400468", Offset = "0x1400468", VA = "0x1400468")]
	public Warehouse()
	{
	}
}
[Token(Token = "0x20000EE")]
public class CameraMouseControl : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_target;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_moveSpeed;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_rotSpeed;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_lastMousePos;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x13CAEC8", Offset = "0x13CAEC8", VA = "0x13CAEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x13CB15C", Offset = "0x13CB15C", VA = "0x13CB15C")]
	public CameraMouseControl()
	{
	}
}
[Token(Token = "0x20000EF")]
public class CharacterModel : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public enum Emotion
	{
		[Token(Token = "0x400057D")]
		Neutral,
		[Token(Token = "0x400057E")]
		Happy,
		[Token(Token = "0x400057F")]
		Sad,
		[Token(Token = "0x4000580")]
		Surprised
	}

	[Serializable]
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5848", Offset = "0x8D5848")]
	private sealed class <>c
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__36_0;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__36_1;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__36_2;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__36_3;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__36_4;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, MeshRenderer> <>9__36_5;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<MeshRenderer, bool> <>9__36_6;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Renderer, bool> <>9__36_7;

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x10039D8", Offset = "0x10039D8", VA = "0x10039D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x10039E0", Offset = "0x10039E0", VA = "0x10039E0")]
		internal bool <Start>b__36_0(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1003A50", Offset = "0x1003A50", VA = "0x1003A50")]
		internal bool <Start>b__36_1(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1003AC0", Offset = "0x1003AC0", VA = "0x1003AC0")]
		internal bool <Start>b__36_2(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1003B30", Offset = "0x1003B30", VA = "0x1003B30")]
		internal bool <Start>b__36_3(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1003BA0", Offset = "0x1003BA0", VA = "0x1003BA0")]
		internal bool <Start>b__36_4(Transform s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1003C10", Offset = "0x1003C10", VA = "0x1003C10")]
		internal MeshRenderer <Start>b__36_5(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1003C64", Offset = "0x1003C64", VA = "0x1003C64")]
		internal bool <Start>b__36_6(MeshRenderer s)
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1003D24", Offset = "0x1003D24", VA = "0x1003D24")]
		internal bool <Start>b__36_7(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_defaultHead;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_defaultBody;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC1E0", Offset = "0x8DC1E0")]
	public Transform m_bodyBone;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_headBone;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_rightHandBone;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_leftHandBone;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Emotion m_currentEmotion;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_minTimeBetweenChanges;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_changedAt;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_duration;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC218", Offset = "0x8DC218")]
	public Transform m_emotionFXLocator;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_HappyFXPrefab;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_sadFXPrefab;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_SurprisedFXPrefab;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem m_currentEmotionFX;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> m_allEmotionFX;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public Color m_skinColour;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_colField;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_hueShiftField;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FloatRange HueShiftRange;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[ReadOnly]
	private float m_hueShift;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Renderer> _renderers;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock _bodyPropBlock;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MaterialPropertyBlock _headPropBlock;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject _head;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Mouth _mouth;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform _hatTransform;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private FolkAnimationController m_charModelAnimationController;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public XXHash m_rand;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer m_bodyRenderer;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[ReadOnly]
	private MeshRenderer[] m_headRenderers;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool m_setMeshColours;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool m_doHueShift;

	[Token(Token = "0x17000099")]
	public Transform HatTransform
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x13CE434", Offset = "0x13CE434", VA = "0x13CE434")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x13CE43C", Offset = "0x13CE43C", VA = "0x13CE43C")]
	private void Start()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x13CF2DC", Offset = "0x13CF2DC", VA = "0x13CF2DC")]
	public void SetOutfit(Interest interest)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x13CF420", Offset = "0x13CF420", VA = "0x13CF420")]
	public void SetEmotion(Emotion e, float duration, bool force = false, bool doFX = false)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x13CF60C", Offset = "0x13CF60C", VA = "0x13CF60C")]
	public void SetTalking(bool talking)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x13CF660", Offset = "0x13CF660", VA = "0x13CF660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x13CF834", Offset = "0x13CF834", VA = "0x13CF834")]
	public CharacterModel()
	{
	}
}
[Token(Token = "0x20000F2")]
public class CityBlocker : MonoBehaviour, ICityPiece
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC2E0", Offset = "0x8DC2E0")]
	private CityPiecePlacement[] <placements>k__BackingField;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC2F0", Offset = "0x8DC2F0")]
	private CityBlockerPlacement[] <blockers>k__BackingField;

	[Token(Token = "0x1700009A")]
	public CityPiecePlacement[] placements
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x13D09A0", Offset = "0x13D09A0", VA = "0x13D09A0", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C28", Offset = "0x8E8C28")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x13D09A8", Offset = "0x13D09A8", VA = "0x13D09A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C38", Offset = "0x8E8C38")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x13D09B0", Offset = "0x13D09B0", VA = "0x13D09B0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C48", Offset = "0x8E8C48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x13D09B8", Offset = "0x13D09B8", VA = "0x13D09B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C58", Offset = "0x8E8C58")]
		private set
		{
		}
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x13D09C0", Offset = "0x13D09C0", VA = "0x13D09C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x13D0A4C", Offset = "0x13D0A4C", VA = "0x13D0A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x13D0BEC", Offset = "0x13D0BEC", VA = "0x13D0BEC")]
	private void Bake(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x13D0CF0", Offset = "0x13D0CF0", VA = "0x13D0CF0")]
	public CityBlocker()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000564")]
	[Address(RVA = "0x13D0CF8", Offset = "0x13D0CF8", VA = "0x13D0CF8", Slot = "4")]
	private GameObject ICityPiece.get_gameObject()
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x13D0D00", Offset = "0x13D0D00", VA = "0x13D0D00", Slot = "5")]
	private int ICityPiece.GetInstanceID()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F3")]
public class CityPiece : MonoBehaviour, Snappable.IDelegate, ICityPiece
{
	[Token(Token = "0x20000F4")]
	public class CityPieceEvent : UnityEvent<CityPiece>
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x10054AC", Offset = "0x10054AC", VA = "0x10054AC")]
		public CityPieceEvent()
		{
		}
	}

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityPieceProperties m_properties;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CityStructure m_cityStructure;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BatchableObject[] m_batchableObjects;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC310", Offset = "0x8DC310")]
	private CityPiecePlacement[] <placements>k__BackingField;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC320", Offset = "0x8DC320")]
	private CityBlockerPlacement[] <blockers>k__BackingField;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BoundsInt[] m_boundsAABB;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Saveable]
	private bool m_isBaked;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_firstBakeComplete;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Snappable.IDelegate m_snappableDelegate;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityPieceEvent OnUnbake;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3? m_previousBakedPosition;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion? m_previousBakedRotation;

	[Token(Token = "0x1700009C")]
	public CityPiecePlacement[] placements
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x13D0D88", Offset = "0x13D0D88", VA = "0x13D0D88", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C68", Offset = "0x8E8C68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x13D0D90", Offset = "0x13D0D90", VA = "0x13D0D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C78", Offset = "0x8E8C78")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x13D0D98", Offset = "0x13D0D98", VA = "0x13D0D98", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C88", Offset = "0x8E8C88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x13D0DA0", Offset = "0x13D0DA0", VA = "0x13D0DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8C98", Offset = "0x8E8C98")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public bool IsBaked
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x13D0DA8", Offset = "0x13D0DA8", VA = "0x13D0DA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x13D0DC8", Offset = "0x13D0DC8", VA = "0x13D0DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x13D0EEC", Offset = "0x13D0EEC", VA = "0x13D0EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x13D130C", Offset = "0x13D130C", VA = "0x13D130C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x13D13D0", Offset = "0x13D13D0", VA = "0x13D13D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x13D13D4", Offset = "0x13D13D4", VA = "0x13D13D4", Slot = "4")]
	public Snappable.SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x13D1E18", Offset = "0x13D1E18", VA = "0x13D1E18", Slot = "5")]
	public Snappable.SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation)
	{
		return default(Snappable.SnapOutcome);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x13D2038", Offset = "0x13D2038", VA = "0x13D2038", Slot = "6")]
	public void SnappableShowingPreview(Snappable snappable)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x13D2104", Offset = "0x13D2104", VA = "0x13D2104", Slot = "7")]
	public void SnappableInteractionDidBegin(Snappable snappable)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x13D21EC", Offset = "0x13D21EC", VA = "0x13D21EC", Slot = "8")]
	public void SnappableInteractionDidEnd(Snappable snappable)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x13D2324", Offset = "0x13D2324", VA = "0x13D2324")]
	public void AddInteractionComponents([Optional] Mesh snappablePreviewMesh)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x13D1244", Offset = "0x13D1244", VA = "0x13D1244")]
	public void Bake(Vector3 position, Quaternion rotation, bool fullBake = false)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x13D1310", Offset = "0x13D1310", VA = "0x13D1310")]
	private void Unbake()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x13D128C", Offset = "0x13D128C", VA = "0x13D128C")]
	private void OnSettled()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x13D24D0", Offset = "0x13D24D0", VA = "0x13D24D0")]
	private bool CanBakeNavMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x13C8B8C", Offset = "0x13C8B8C", VA = "0x13C8B8C")]
	public FastBoundsInt GetBlockerBounds()
	{
		return default(FastBoundsInt);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x13D24F0", Offset = "0x13D24F0", VA = "0x13D24F0")]
	public CityPiece()
	{
	}

	[SpecialName]
	[Token(Token = "0x600057B")]
	[Address(RVA = "0x13D24F8", Offset = "0x13D24F8", VA = "0x13D24F8", Slot = "9")]
	private GameObject ICityPiece.get_gameObject()
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x13D2500", Offset = "0x13D2500", VA = "0x13D2500", Slot = "10")]
	private int ICityPiece.GetInstanceID()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F5")]
public class CityPiecePlacement : CityBlockerPlacement
{
	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5858", Offset = "0x8D5858")]
	private sealed class <BlockConnectionLocations>d__7 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private FastBlockMetadata <>2__current;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CityPiecePlacement[] cityPiecePlacements;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CityPiecePlacement[] <>3__cityPiecePlacements;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool sidesOnly;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__sidesOnly;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CityPiecePlacement[] <>7__wrap1;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <>7__wrap2;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CityPiecePlacement <cityPiecePlacement>5__4;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FastBoundsInt <structuredBounds>5__5;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <z>5__6;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int <y>5__7;

		[Token(Token = "0x1700009F")]
		private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
		{
			[Token(Token = "0x6000583")]
			[Address(RVA = "0x1005A14", Offset = "0x1005A14", VA = "0x1005A14", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(FastBlockMetadata);
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x1005A68", Offset = "0x1005A68", VA = "0x1005A68", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x10054F8", Offset = "0x10054F8", VA = "0x10054F8")]
		[DebuggerHidden]
		public <BlockConnectionLocations>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1005530", Offset = "0x1005530", VA = "0x1005530", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1005534", Offset = "0x1005534", VA = "0x1005534", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1005A28", Offset = "0x1005A28", VA = "0x1005A28", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1005AD0", Offset = "0x1005AD0", VA = "0x1005AD0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1005B88", Offset = "0x1005B88", VA = "0x1005B88", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_connectionsLeft;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool m_connectionsRight;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool m_connectionsTop;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool m_connectionsBottom;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_connectionsFront;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_connectionsBack;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool _boundsCurrent;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x13C6FC4", Offset = "0x13C6FC4", VA = "0x13C6FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8CA8", Offset = "0x8E8CA8")]
	public static IEnumerable<FastBlockMetadata> BlockConnectionLocations(CityPiecePlacement[] cityPiecePlacements, bool sidesOnly = false)
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x13D2508", Offset = "0x13D2508", VA = "0x13D2508")]
	public CityPiecePlacement()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5868", Offset = "0x8D5868")]
public class CityPieceProperties : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x20000F8")]
	public enum Type
	{
		[Token(Token = "0x40005BD")]
		Generic,
		[Token(Token = "0x40005BE")]
		BuildingHouse,
		[Token(Token = "0x40005BF")]
		BuildingFacility,
		[Token(Token = "0x40005C0")]
		BuildingDropInFacility,
		[Token(Token = "0x40005C1")]
		BuildingCustom
	}

	[Token(Token = "0x20000F9")]
	public enum PowerDetails
	{
		[Token(Token = "0x40005C3")]
		Unpowered,
		[Token(Token = "0x40005C4")]
		NeedsPower,
		[Token(Token = "0x40005C5")]
		GeneratesPower
	}

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type m_pieceType;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC340", Offset = "0x8DC340")]
	public Building.Size m_facilitySize;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC38C", Offset = "0x8DC38C")]
	public FacilityCategory m_facilityCategory;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC3D8", Offset = "0x8DC3D8")]
	public FacilityDefinition m_facilityDefinition;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_mesh;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AutoSetupBuildingDefaults m_lightingSDFDefaults;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_purchaseCost;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_buildCost;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PowerDetails m_powerDetails;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC424", Offset = "0x8DC424")]
	public float m_powerConsumption;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC470", Offset = "0x8DC470")]
	public float m_powerGeneration;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool m_designerOnly;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_localisationKeyStem;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_indestructible;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_generatedPrefab;

	[Token(Token = "0x170000A1")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x13D2520", Offset = "0x13D2520", VA = "0x13D2520", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x13D2528", Offset = "0x13D2528", VA = "0x13D2528", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x13D2530", Offset = "0x13D2530", VA = "0x13D2530")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x13D2558", Offset = "0x13D2558", VA = "0x13D2558")]
	public CityPieceProperties()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5878", Offset = "0x8D5878")]
public class CityPiecePropertyList : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectWithProbabilityList<CityPieceProperties> m_cityPiecePropertiesWithProbabilities;

	[Token(Token = "0x170000A2")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x13D2560", Offset = "0x13D2560", VA = "0x13D2560", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x13D2568", Offset = "0x13D2568", VA = "0x13D2568", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x13D2570", Offset = "0x13D2570", VA = "0x13D2570")]
	public CityPieceProperties Random([Optional] UnityEngine.Object exclude)
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x13D25D8", Offset = "0x13D25D8", VA = "0x13D25D8")]
	public CityPiecePropertyList()
	{
	}
}
[Token(Token = "0x20000FB")]
public class CityPieceVolume : ScriptableObject
{
	[Token(Token = "0x20000FC")]
	[Flags]
	public enum Edge
	{
		[Token(Token = "0x40005CD")]
		Left = 1,
		[Token(Token = "0x40005CE")]
		Right = 2,
		[Token(Token = "0x40005CF")]
		Top = 4,
		[Token(Token = "0x40005D0")]
		Bottom = 8,
		[Token(Token = "0x40005D1")]
		Front = 0x10,
		[Token(Token = "0x40005D2")]
		Back = 0x20
	}

	[Serializable]
	[Token(Token = "0x20000FD")]
	public struct VolumeAABB
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bounds m_bounds;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Edge m_connectedEdges;
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5898", Offset = "0x8D5898")]
	private sealed class <BlockLocations>d__6 : IEnumerable<Vector3Int>, IEnumerable, IEnumerator<Vector3Int>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3Int <>2__current;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityPieceVolume <>4__this;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 position;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 <>3__position;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rotation;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VolumeAABB[] <>7__wrap1;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap2;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private BoundsInt.PositionEnumerator <>7__wrap3;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] <>7__wrap4;

		[Token(Token = "0x170000A3")]
		private Vector3Int System.Collections.Generic.IEnumerator<UnityEngine.Vector3Int>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x1006510", Offset = "0x1006510", VA = "0x1006510", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3Int);
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x1006560", Offset = "0x1006560", VA = "0x1006560", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1006078", Offset = "0x1006078", VA = "0x1006078")]
		[DebuggerHidden]
		public <BlockLocations>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x10060B0", Offset = "0x10060B0", VA = "0x10060B0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x10060F8", Offset = "0x10060F8", VA = "0x10060F8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x10060E0", Offset = "0x10060E0", VA = "0x10060E0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1006520", Offset = "0x1006520", VA = "0x1006520", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x10065C8", Offset = "0x10065C8", VA = "0x10065C8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3Int> System.Collections.Generic.IEnumerable<UnityEngine.Vector3Int>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1006690", Offset = "0x1006690", VA = "0x1006690", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58A8", Offset = "0x8D58A8")]
	private sealed class <BlockConnectionLocations>d__7 : IEnumerable<Vector3Int>, IEnumerable, IEnumerator<Vector3Int>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3Int <>2__current;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityPieceVolume <>4__this;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 position;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 <>3__position;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rotation;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion <>3__rotation;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VolumeAABB[] <>7__wrap1;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap2;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private BoundsInt.PositionEnumerator <>7__wrap3;

		[Token(Token = "0x170000A5")]
		private Vector3Int System.Collections.Generic.IEnumerator<UnityEngine.Vector3Int>.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x1005EF4", Offset = "0x1005EF4", VA = "0x1005EF4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3Int);
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x1005F44", Offset = "0x1005F44", VA = "0x1005F44", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1005B8C", Offset = "0x1005B8C", VA = "0x1005B8C")]
		[DebuggerHidden]
		public <BlockConnectionLocations>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1005BC4", Offset = "0x1005BC4", VA = "0x1005BC4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1005C0C", Offset = "0x1005C0C", VA = "0x1005C0C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1005BF4", Offset = "0x1005BF4", VA = "0x1005BF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1005F04", Offset = "0x1005F04", VA = "0x1005F04", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1005FAC", Offset = "0x1005FAC", VA = "0x1005FAC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3Int> System.Collections.Generic.IEnumerable<UnityEngine.Vector3Int>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1006074", Offset = "0x1006074", VA = "0x1006074", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VolumeAABB[] m_volumes;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] m_solidBlocks;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] m_connectionPoints;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x13D25E0", Offset = "0x13D25E0", VA = "0x13D25E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8D78", Offset = "0x8E8D78")]
	public IEnumerable<Vector3Int> BlockLocations(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x13D26A4", Offset = "0x13D26A4", VA = "0x13D26A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8DD8", Offset = "0x8E8DD8")]
	public IEnumerable<Vector3Int> BlockConnectionLocations(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x13D2768", Offset = "0x13D2768", VA = "0x13D2768")]
	public static Vector3 StructureLocationToWorldPosition(Vector3Int structureLocation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x13D2880", Offset = "0x13D2880", VA = "0x13D2880")]
	private static BoundsInt MakeStructureBounds(Bounds worldBounds, Vector3 position, Quaternion rotation)
	{
		return default(BoundsInt);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x13D2BD4", Offset = "0x13D2BD4", VA = "0x13D2BD4")]
	private static Vector3Int MakeStructureLocation(Vector3 location, Vector3 position, Quaternion rotation)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x13D2CF8", Offset = "0x13D2CF8", VA = "0x13D2CF8")]
	public CityPieceVolume()
	{
	}
}
[Token(Token = "0x2000100")]
public class CityStructure : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	public enum PlacementQueryResult
	{
		[Token(Token = "0x40005F2")]
		BadPlacement,
		[Token(Token = "0x40005F3")]
		UnconnectedPlacement,
		[Token(Token = "0x40005F4")]
		PossiblePlacement,
		[Token(Token = "0x40005F5")]
		GoodPlacement
	}

	[Token(Token = "0x2000102")]
	public static class Cubes
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 Single;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 Double;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 Window;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Vector3 DoorOffset;
	}

	[Token(Token = "0x2000103")]
	public static class Sign
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Width;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int Height;
	}

	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58B8", Offset = "0x8D58B8")]
	private sealed class <GetForBounds>d__14 : IEnumerable<BlockMetadata>, IEnumerable, IEnumerator<BlockMetadata>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BlockMetadata <>2__current;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerable<FastVector3Int> positions;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IEnumerable<FastVector3Int> <>3__positions;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CityStructure <>4__this;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IEnumerator<FastVector3Int> <>7__wrap1;

		[Token(Token = "0x170000A7")]
		private BlockMetadata System.Collections.Generic.IEnumerator<City.BlockMetadata>.Current
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x1006ADC", Offset = "0x1006ADC", VA = "0x1006ADC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(BlockMetadata);
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x1006B2C", Offset = "0x1006B2C", VA = "0x1006B2C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1006694", Offset = "0x1006694", VA = "0x1006694")]
		[DebuggerHidden]
		public <GetForBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x10066CC", Offset = "0x10066CC", VA = "0x10066CC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x10067A4", Offset = "0x10067A4", VA = "0x10067A4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x10066E8", Offset = "0x10066E8", VA = "0x10066E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1006AEC", Offset = "0x1006AEC", VA = "0x1006AEC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1006B94", Offset = "0x1006B94", VA = "0x1006B94", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<BlockMetadata> System.Collections.Generic.IEnumerable<City.BlockMetadata>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1006C54", Offset = "0x1006C54", VA = "0x1006C54", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxBlocksPerEdge;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuildingBaker _baker;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<long, BlockMetadata> m_blockToMetadata;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<long, long[]> m_cityPieceIDToBlocks;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x13D2D50", Offset = "0x13D2D50", VA = "0x13D2D50")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x13D2F44", Offset = "0x13D2F44", VA = "0x13D2F44")]
	public bool GetBakedMetadata(FastBlockMetadata metadata, out BlockMetadata baked)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x13D2FC4", Offset = "0x13D2FC4", VA = "0x13D2FC4")]
	public bool GetBakedMetadata(int x, int y, int z, out BlockMetadata baked)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x13D3060", Offset = "0x13D3060", VA = "0x13D3060")]
	public long CalculateBlockLocation(BlockMetadata metadata)
	{
		return default(long);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x13C6EE0", Offset = "0x13C6EE0", VA = "0x13C6EE0")]
	public long CalculateBlockLocation(FastBlockMetadata metadata)
	{
		return default(long);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x13D307C", Offset = "0x13D307C", VA = "0x13D307C")]
	public long CalculateBlockLocation(Vector3Int position)
	{
		return default(long);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x13C6CC0", Offset = "0x13C6CC0", VA = "0x13C6CC0")]
	public long CalculateBlockLocation(FastVector3Int position)
	{
		return default(long);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x13D304C", Offset = "0x13D304C", VA = "0x13D304C")]
	public long CalculateBlockLocation(int x, int y, int z)
	{
		return default(long);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x13C8AF8", Offset = "0x13C8AF8", VA = "0x13C8AF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8F18", Offset = "0x8E8F18")]
	public IEnumerable<BlockMetadata> GetForBounds(IEnumerable<FastVector3Int> positions)
	{
		return null;
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x13D15C8", Offset = "0x13D15C8", VA = "0x13D15C8")]
	public PlacementQueryResult QueryPlacement(CityPiece cityPiece, Vector3 position, Quaternion rotation)
	{
		return default(PlacementQueryResult);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x13D322C", Offset = "0x13D322C", VA = "0x13D322C")]
	public bool LocationIsBlocked(GameObject ignore, long blockLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x13D30EC", Offset = "0x13D30EC", VA = "0x13D30EC")]
	public bool LocationIsBlocked(BlockMetadata metadata, [Optional] GameObject ignore)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x13D33C8", Offset = "0x13D33C8", VA = "0x13D33C8")]
	public static bool MaterialBlocksMaterial(BlockerMaterial locationMaterial, BlockerMaterial queryMaterial)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x13D0CC0", Offset = "0x13D0CC0", VA = "0x13D0CC0")]
	public void Bake(ICityPiece cityPiece, Vector3 position, Quaternion rotation, bool fullBake)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x13D24B4", Offset = "0x13D24B4", VA = "0x13D24B4")]
	public void Unbake(ICityPiece cityPiece)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x13D33E0", Offset = "0x13D33E0", VA = "0x13D33E0")]
	public CityStructure()
	{
	}
}
[Token(Token = "0x2000105")]
public interface ICityPiece
{
	[Token(Token = "0x170000A9")]
	GameObject gameObject
	{
		[Token(Token = "0x60005C5")]
		get;
	}

	[Token(Token = "0x170000AA")]
	CityPiecePlacement[] placements
	{
		[Token(Token = "0x60005C7")]
		get;
	}

	[Token(Token = "0x170000AB")]
	CityBlockerPlacement[] blockers
	{
		[Token(Token = "0x60005C8")]
		get;
	}

	[Token(Token = "0x60005C6")]
	int GetInstanceID();
}
[Token(Token = "0x2000106")]
public class TheCity : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	public struct CityLocationAttributes
	{
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool connected;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool powered;
	}

	[Token(Token = "0x2000108")]
	public struct CityPieceSnappedDetails
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;
	}

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float GridEdgeSize;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TheCity s_instance;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityStructure m_cityStructure;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalNavMeshBuilder m_navMeshBuilder;

	[Token(Token = "0x170000AC")]
	public static TheCity Instance
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x10B2490", Offset = "0x10B2490", VA = "0x10B2490")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x10B25CC", Offset = "0x10B25CC", VA = "0x10B25CC")]
	public GameObject AddCityPiece(CityPieceProperties properties)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x10B273C", Offset = "0x10B273C", VA = "0x10B273C")]
	public TheCity()
	{
	}
}
[Token(Token = "0x2000109")]
public class ClickToBuild : MonoBehaviour
{
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_prefab;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_collisionMask;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_model;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_model2;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x13D3540", Offset = "0x13D3540", VA = "0x13D3540")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x13D38C8", Offset = "0x13D38C8", VA = "0x13D38C8")]
	public ClickToBuild()
	{
	}
}
[Token(Token = "0x200010A")]
public class ControllerButtonLocator : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons Button;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x13D7DF4", Offset = "0x13D7DF4", VA = "0x13D7DF4")]
	public ControllerButtonLocator()
	{
	}
}
[Token(Token = "0x200010B")]
public class ControllerLocator : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	public enum Hands
	{
		[Token(Token = "0x4000612")]
		Left,
		[Token(Token = "0x4000613")]
		Right
	}

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hands Hand;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x13D7DFC", Offset = "0x13D7DFC", VA = "0x13D7DFC")]
	public ControllerLocator()
	{
	}
}
[Token(Token = "0x200010D")]
public class Credits : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58C8", Offset = "0x8D58C8")]
	private sealed class <DoReset>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Credits <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x10072B4", Offset = "0x10072B4", VA = "0x10072B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x10072FC", Offset = "0x10072FC", VA = "0x10072FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x10070E4", Offset = "0x10070E4", VA = "0x10070E4")]
		[DebuggerHidden]
		public <DoReset>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1007110", Offset = "0x1007110", VA = "0x1007110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1007114", Offset = "0x1007114", VA = "0x1007114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x10072BC", Offset = "0x10072BC", VA = "0x10072BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC4BC", Offset = "0x8DC4BC")]
	public RectTransform m_creditsContent;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_creditsText;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform m_creditsViewport;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform m_endMarker;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_scroll;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_scrolllSpeed;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_controllerScrollBoost;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_anchoredPos;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC4F4", Offset = "0x8DC4F4")]
	public Button m_creditsFinishedButton;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x13D8BE8", Offset = "0x13D8BE8", VA = "0x13D8BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8FE8", Offset = "0x8E8FE8")]
	private IEnumerator DoReset()
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x13D8C60", Offset = "0x13D8C60", VA = "0x13D8C60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x13D8C8C", Offset = "0x13D8C8C", VA = "0x13D8C8C")]
	public void Close()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x13D8CB8", Offset = "0x13D8CB8", VA = "0x13D8CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x13D8E68", Offset = "0x13D8E68", VA = "0x13D8E68")]
	public Credits()
	{
	}
}
[Token(Token = "0x200010F")]
public class DateTimeSpecificEnabler : MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UDateTime m_from;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UDateTime m_to;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xF20EB8", Offset = "0xF20EB8", VA = "0xF20EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xF20F7C", Offset = "0xF20F7C", VA = "0xF20F7C")]
	public DateTimeSpecificEnabler()
	{
	}
}
[Token(Token = "0x2000110")]
public class DeathZone : MonoBehaviour
{
	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xF20F84", Offset = "0xF20F84", VA = "0xF20F84")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xF210CC", Offset = "0xF210CC", VA = "0xF210CC")]
	public DeathZone()
	{
	}
}
[Token(Token = "0x2000111")]
public class Decoration : StaticMapped<Decoration>
{
	[Token(Token = "0x2000112")]
	public enum Placement
	{
		[Token(Token = "0x400062E")]
		Anywhere,
		[Token(Token = "0x400062F")]
		AboveDoor,
		[Token(Token = "0x4000630")]
		BesideDoor,
		[Token(Token = "0x4000631")]
		OnWall,
		[Token(Token = "0x4000632")]
		OnGround,
		[Token(Token = "0x4000633")]
		OnGroundSnapped
	}

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Interest m_interest;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_setEmoji;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] m_setText;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] m_textOptions;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC52C", Offset = "0x8DC52C")]
	public Placement m_rules;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_preferSignTransform;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_canReparent;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PointAndSnap m_pointAndSnap;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_nameKey;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_textFormat;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_isSetup;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xF2C5B0", Offset = "0xF2C5B0", VA = "0xF2C5B0")]
	public bool HasSpecialInterest()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xF2C6E4", Offset = "0xF2C6E4", VA = "0xF2C6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xF2CA70", Offset = "0xF2CA70", VA = "0xF2CA70")]
	private void OnPickup()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xF2CB3C", Offset = "0xF2CB3C", VA = "0xF2CB3C")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xF2CFCC", Offset = "0xF2CFCC", VA = "0xF2CFCC")]
	public void OnExplode()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xF2CE10", Offset = "0xF2CE10", VA = "0xF2CE10")]
	private void DecorateBuilding()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xF2CFD0", Offset = "0xF2CFD0", VA = "0xF2CFD0")]
	private void RemoveFromBuilding()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xF2CED8", Offset = "0xF2CED8", VA = "0xF2CED8")]
	private void UpdateParentColliders(Transform target)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xF2D098", Offset = "0xF2D098", VA = "0xF2D098")]
	public void Setup(Interest interest, float appeal, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xF2D398", Offset = "0xF2D398", VA = "0xF2D398")]
	public void AutoPlace(Spaceport spaceport, Building b)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xF2D638", Offset = "0xF2D638", VA = "0xF2D638")]
	public static Decoration Spawn(List<GameObject> prefabs, Vector3 p, Interest interest)
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xF2D7F4", Offset = "0xF2D7F4", VA = "0xF2D7F4")]
	public Decoration()
	{
	}
}
[Token(Token = "0x2000113")]
public class DefenceBubble : MonoBehaviour
{
	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xF2ECA4", Offset = "0xF2ECA4", VA = "0xF2ECA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xF2ECA8", Offset = "0xF2ECA8", VA = "0xF2ECA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xF2ECAC", Offset = "0xF2ECAC", VA = "0xF2ECAC")]
	public DefenceBubble()
	{
	}
}
[Token(Token = "0x2000114")]
public class Door : SpacefolkWindow
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58D8", Offset = "0x8D58D8")]
	private sealed class <Open>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xE7774C", Offset = "0xE7774C", VA = "0xE7774C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xE77794", Offset = "0xE77794", VA = "0xE77794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xE774B4", Offset = "0xE774B4", VA = "0xE774B4")]
		[DebuggerHidden]
		public <Open>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xE774E0", Offset = "0xE774E0", VA = "0xE774E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xE774E4", Offset = "0xE774E4", VA = "0xE774E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xE77754", Offset = "0xE77754", VA = "0xE77754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58E8", Offset = "0x8D58E8")]
	private sealed class <Close>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Door <>4__this;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0xE77464", Offset = "0xE77464", VA = "0xE77464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0xE774AC", Offset = "0xE774AC", VA = "0xE774AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xE77234", Offset = "0xE77234", VA = "0xE77234")]
		[DebuggerHidden]
		public <Close>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xE77260", Offset = "0xE77260", VA = "0xE77260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xE77264", Offset = "0xE77264", VA = "0xE77264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE7746C", Offset = "0xE7746C", VA = "0xE7746C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC564", Offset = "0x8DC564")]
	public Color m_unreachableLightColour;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_unreachableIndicator;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_animatesOpenClose;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_doorObject;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_doorOpenAngle;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_doorOpenAngleHatch;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BatchableObject m_doorBatchableObject;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Building m_building;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC59C", Offset = "0x8DC59C")]
	public string m_sfxDoorOpen;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxDoorClose;

	[Token(Token = "0x170000AF")]
	public Transform DoorObject
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x100A494", Offset = "0x100A494", VA = "0x100A494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public override FastVector3Int Normal
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x100A520", Offset = "0x100A520", VA = "0x100A520", Slot = "5")]
		get
		{
			return default(FastVector3Int);
		}
	}

	[Token(Token = "0x170000B1")]
	public Building Building
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x100A624", Offset = "0x100A624", VA = "0x100A624")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x100A6D8", Offset = "0x100A6D8", VA = "0x100A6D8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9098", Offset = "0x8E9098")]
	public void OpenNow()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x100A790", Offset = "0x100A790", VA = "0x100A790")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E90B0", Offset = "0x8E90B0")]
	public void CloseNow()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x100A848", Offset = "0x100A848", VA = "0x100A848", Slot = "4")]
	public override (Transform, Bounds) GetWorldBlockBounds(Vector3 offset)
	{
		return default((Transform, Bounds));
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x100A708", Offset = "0x100A708", VA = "0x100A708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E90C8", Offset = "0x8E90C8")]
	public IEnumerator Open(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x100A7C0", Offset = "0x100A7C0", VA = "0x100A7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9128", Offset = "0x8E9128")]
	public IEnumerator Close(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x100AA18", Offset = "0x100AA18", VA = "0x100AA18")]
	public bool IsReachable()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x100AA7C", Offset = "0x100AA7C", VA = "0x100AA7C")]
	public Door()
	{
	}
}
[Token(Token = "0x2000117")]
public class ElectricityArc : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_max_number_on;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_min_number_on;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_actual_number_on;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_max_time;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_min_time;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_time_to_switch;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x100DE44", Offset = "0x100DE44", VA = "0x100DE44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x100DE8C", Offset = "0x100DE8C", VA = "0x100DE8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x100E21C", Offset = "0x100E21C", VA = "0x100E21C")]
	public ElectricityArc()
	{
	}
}
[Token(Token = "0x2000118")]
public class EnableDisableCopier : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_source;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_copy;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_invert;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x100E23C", Offset = "0x100E23C", VA = "0x100E23C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x100E378", Offset = "0x100E378", VA = "0x100E378")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x100E3E0", Offset = "0x100E3E0", VA = "0x100E3E0")]
	private void OnSourceEnabled(GameObject source)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x100E418", Offset = "0x100E418", VA = "0x100E418")]
	private void OnSourceDisabled(GameObject source)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x100E450", Offset = "0x100E450", VA = "0x100E450")]
	public EnableDisableCopier()
	{
	}
}
[Token(Token = "0x2000119")]
public class EstateAgent : MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnDataChanged;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<House> m_housesToCollectFolkFor;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x100E988", Offset = "0x100E988", VA = "0x100E988")]
	public int NumHousesInQueue()
	{
		return default(int);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x100E9D4", Offset = "0x100E9D4", VA = "0x100E9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x100F000", Offset = "0x100F000", VA = "0x100F000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x100EB44", Offset = "0x100EB44", VA = "0x100EB44")]
	private void SetupUnownedHouses()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x100F268", Offset = "0x100F268", VA = "0x100F268")]
	public bool HasHouseReadyToMoveInto()
	{
		return default(bool);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x100F340", Offset = "0x100F340", VA = "0x100F340")]
	public bool HasHomelessPeople(out Person first)
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x100F500", Offset = "0x100F500", VA = "0x100F500")]
	public bool HasAtLeastOneEmptyHouse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x100F6B4", Offset = "0x100F6B4", VA = "0x100F6B4")]
	public static int HouseShortage()
	{
		return default(int);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x100F7EC", Offset = "0x100F7EC", VA = "0x100F7EC")]
	public House DequeueNextHouse()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x100F840", Offset = "0x100F840", VA = "0x100F840")]
	private void NewHouseDecorated(Building bldg, Decoration deco)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x100F9E0", Offset = "0x100F9E0", VA = "0x100F9E0")]
	private List<Person> GetAllHomeless()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x100F950", Offset = "0x100F950", VA = "0x100F950")]
	private void SetUpNewlyDecoratedHouse(House newHouse)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x100FBD0", Offset = "0x100FBD0", VA = "0x100FBD0")]
	private bool TryToHomeTheHomeless(House newHouse)
	{
		return default(bool);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x100F100", Offset = "0x100F100", VA = "0x100F100")]
	private void OnAnyConstructionCompleted(Building bldg)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x100FDAC", Offset = "0x100FDAC", VA = "0x100FDAC")]
	public EstateAgent()
	{
	}
}
[Token(Token = "0x200011A")]
public class EventEnableComponent : Triggerable
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour[] m_components;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enable;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x10115C0", Offset = "0x10115C0", VA = "0x10115C0", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1011630", Offset = "0x1011630", VA = "0x1011630")]
	public EventEnableComponent()
	{
	}
}
[Token(Token = "0x200011B")]
public class Face : MonoBehaviour
{
	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1017ED0", Offset = "0x1017ED0", VA = "0x1017ED0")]
	public Face()
	{
	}
}
[Token(Token = "0x200011C")]
public enum FacilityCategory
{
	[Token(Token = "0x4000654")]
	None = -1,
	[Token(Token = "0x4000655")]
	Food,
	[Token(Token = "0x4000656")]
	Entertainment,
	[Token(Token = "0x4000657")]
	Health
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D58F8", Offset = "0x8D58F8")]
public class FacilityDefinition : ScriptableObject
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] CategoryColour;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] CategoryColourMuted;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string[] CategoryEmoji;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[] CategoryStringKey;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC5D4", Offset = "0x8DC5D4")]
	public UnityEngine.Object[] m_customBehaviourOptions;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC60C", Offset = "0x8DC60C")]
	public FloatRange m_stayTimeInHours;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] m_nameKeys;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FacilityCategory m_category;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x101B578", Offset = "0x101B578", VA = "0x101B578")]
	public FacilityDefinition()
	{
	}
}
[Token(Token = "0x200011E")]
public class FacilityInfoSign : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_interestLbl;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_capacityLbl;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Building m_bldg;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x101BAF4", Offset = "0x101BAF4", VA = "0x101BAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x101BC48", Offset = "0x101BC48", VA = "0x101BC48")]
	private void UpdateAllDisplay()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x101BC4C", Offset = "0x101BC4C", VA = "0x101BC4C")]
	public void UpdateCapacityDisplay(Person p)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x101BD40", Offset = "0x101BD40", VA = "0x101BD40")]
	public FacilityInfoSign()
	{
	}
}
[Token(Token = "0x200011F")]
public class FlatScreenUI : MonoBehaviour
{
	[Token(Token = "0x6000625")]
	[Address(RVA = "0x11B36E0", Offset = "0x11B36E0", VA = "0x11B36E0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9228", Offset = "0x8E9228")]
	private void Toggle()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x11B3738", Offset = "0x11B3738", VA = "0x11B3738")]
	public FlatScreenUI()
	{
	}
}
[Token(Token = "0x2000120")]
public class PersonDoActivity : ActionTask<Person>
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<ActivityItem> activity;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x12522F0", Offset = "0x12522F0", VA = "0x12522F0", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x12528C0", Offset = "0x12528C0", VA = "0x12528C0")]
	private void GoToActivityResult(AgentController.Result r)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1252D2C", Offset = "0x1252D2C", VA = "0x1252D2C")]
	private void ActivityComplete()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1252F80", Offset = "0x1252F80", VA = "0x1252F80", Slot = "17")]
	protected override void OnStop(bool interrupted)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1253000", Offset = "0x1253000", VA = "0x1253000")]
	public PersonDoActivity()
	{
	}
}
[Token(Token = "0x2000121")]
public class PersonDoDropInJob : ActionTask<Person>
{
	[Token(Token = "0x2000122")]
	public interface IJobProviding
	{
		[Token(Token = "0x170000B6")]
		bool JobActive
		{
			[Token(Token = "0x6000630")]
			get;
		}

		[Token(Token = "0x170000B7")]
		bool JobRequiresWellRested
		{
			[Token(Token = "0x6000631")]
			get;
		}
	}

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IJobProviding m_jobProvider;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x125304C", Offset = "0x125304C", VA = "0x125304C", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x12530D0", Offset = "0x12530D0", VA = "0x12530D0", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1253424", Offset = "0x1253424", VA = "0x1253424", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x12534A4", Offset = "0x12534A4", VA = "0x12534A4")]
	public PersonDoDropInJob()
	{
	}
}
[Token(Token = "0x2000123")]
public class PersonDoParty : ActionTask<Person>
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<float> m_partyTime;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastTalkTime;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x12534F0", Offset = "0x12534F0", VA = "0x12534F0", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x1253678", Offset = "0x1253678", VA = "0x1253678", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x12536F8", Offset = "0x12536F8", VA = "0x12536F8")]
	public PersonDoParty()
	{
	}
}
[Token(Token = "0x2000124")]
public class PersonDroppedOnDoor : ConditionTask<Person>
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1253774", Offset = "0x1253774", VA = "0x1253774", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x12538DC", Offset = "0x12538DC", VA = "0x12538DC")]
	public PersonDroppedOnDoor()
	{
	}
}
[Token(Token = "0x2000125")]
public class PersonFindAppealingHouse : ConditionTask<Person>
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1254E94", Offset = "0x1254E94", VA = "0x1254E94", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1255090", Offset = "0x1255090", VA = "0x1255090")]
	public PersonFindAppealingHouse()
	{
	}
}
[Token(Token = "0x2000126")]
public class PersonFindJob : ConditionTask<Person>
{
	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<FolkJobs.JobTypes> jobType;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<Building> building;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x12553EC", Offset = "0x12553EC", VA = "0x12553EC", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x12556BC", Offset = "0x12556BC", VA = "0x12556BC")]
	public PersonFindJob()
	{
	}
}
[Token(Token = "0x2000127")]
public class PersonGetScrap : ActionTask<Person>
{
	[Token(Token = "0x2000128")]
	private enum State
	{
		[Token(Token = "0x4000678")]
		Idle,
		[Token(Token = "0x4000679")]
		Searching,
		[Token(Token = "0x400067A")]
		FoundScrap,
		[Token(Token = "0x400067B")]
		GoingForScrap,
		[Token(Token = "0x400067C")]
		NoScrapAvailable
	}

	[Serializable]
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5908", Offset = "0x8D5908")]
	private sealed class <>c
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<(Warehouse, Door, ScrapCoin, float)> <>9__13_0;

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1062B20", Offset = "0x1062B20", VA = "0x1062B20")]
		public <>c()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1062B28", Offset = "0x1062B28", VA = "0x1062B28")]
		internal int <SearchAndSortScrapByDistanceCR>b__13_0((Warehouse, Door, ScrapCoin, float) a, (Warehouse, Door, ScrapCoin, float) b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5918", Offset = "0x8D5918")]
	private sealed class <SearchAndSortScrapByDistanceCR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersonGetScrap <>4__this;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, Warehouse>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x1063670", Offset = "0x1063670", VA = "0x1063670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x10636B8", Offset = "0x10636B8", VA = "0x10636B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1062B38", Offset = "0x1062B38", VA = "0x1062B38")]
		[DebuggerHidden]
		public <SearchAndSortScrapByDistanceCR>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1062B64", Offset = "0x1062B64", VA = "0x1062B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1062BD4", Offset = "0x1062BD4", VA = "0x1062BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1062B80", Offset = "0x1062B80", VA = "0x1062B80")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x1063678", Offset = "0x1063678", VA = "0x1063678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool CanGetFromYard;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool MagicScrapFromWarehouseToHand;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string CantGetScrapStringKey;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string ScrapWentMissingStringKey;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Warehouse m_targetWarehouse;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Door m_targetDoor;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ScrapCoin m_targetCoin;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_targetPos;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<(Warehouse, Door, ScrapCoin, float)> m_scrapLoc;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine cr;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1256D04", Offset = "0x1256D04", VA = "0x1256D04")]
	private PersonGetScrap()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1257250", Offset = "0x1257250", VA = "0x1257250", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x12572A8", Offset = "0x12572A8", VA = "0x12572A8", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x12572FC", Offset = "0x12572FC", VA = "0x12572FC")]
	private float PathLengthSqTo(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x12574AC", Offset = "0x12574AC", VA = "0x12574AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9270", Offset = "0x8E9270")]
	private IEnumerator SearchAndSortScrapByDistanceCR()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1256DF4", Offset = "0x1256DF4", VA = "0x1256DF4")]
	private void InitStateMachine()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1257524", Offset = "0x1257524", VA = "0x1257524")]
	private void Enter_Idle()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1257528", Offset = "0x1257528", VA = "0x1257528")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1257580", Offset = "0x1257580", VA = "0x1257580")]
	private void Exit_Idle()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1257584", Offset = "0x1257584", VA = "0x1257584")]
	private void Enter_Searching()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x12575DC", Offset = "0x12575DC", VA = "0x12575DC")]
	private void Update_Searching()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x12575E0", Offset = "0x12575E0", VA = "0x12575E0")]
	private void Exit_Searching()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x12575E4", Offset = "0x12575E4", VA = "0x12575E4")]
	private void Enter_FoundScrap()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x12575E8", Offset = "0x12575E8", VA = "0x12575E8")]
	private void Update_FoundScrap()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1257864", Offset = "0x1257864", VA = "0x1257864")]
	private void Exit_FoundScrap()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1257868", Offset = "0x1257868", VA = "0x1257868")]
	private void Enter_GoingForScrap()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x125786C", Offset = "0x125786C", VA = "0x125786C")]
	private void Update_GoingForScrap()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1257C0C", Offset = "0x1257C0C", VA = "0x1257C0C")]
	private void Exit_GoingForScrap()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1257C10", Offset = "0x1257C10", VA = "0x1257C10")]
	private void Enter_NoScrapAvailable()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1257C14", Offset = "0x1257C14", VA = "0x1257C14")]
	private void Update_NoScrapAvailable()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1257C7C", Offset = "0x1257C7C", VA = "0x1257C7C")]
	private void Exit_NoScrapAvailable()
	{
	}
}
[Token(Token = "0x200012B")]
public class PersonGoPickUpItem : ActionTask<Person>
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<HoldableItem> m_itemParam;

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1257C80", Offset = "0x1257C80", VA = "0x1257C80", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1257CE0", Offset = "0x1257CE0", VA = "0x1257CE0")]
	private bool SetOutForItem(HoldableItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1257EE8", Offset = "0x1257EE8", VA = "0x1257EE8")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x12581FC", Offset = "0x12581FC", VA = "0x12581FC", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x12582A8", Offset = "0x12582A8", VA = "0x12582A8")]
	public PersonGoPickUpItem()
	{
	}
}
[Token(Token = "0x200012C")]
public class PersonGotoBuilding : ActionTask<Person>
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Building> building;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Door m_targetDoor;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1258460", Offset = "0x1258460", VA = "0x1258460", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x125875C", Offset = "0x125875C", VA = "0x125875C")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x12589A0", Offset = "0x12589A0", VA = "0x12589A0", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x12589A4", Offset = "0x12589A4", VA = "0x12589A4")]
	public PersonGotoBuilding()
	{
	}
}
[Token(Token = "0x200012D")]
public class PersonGotoDoor : ActionTask<Person>
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Door> door;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Door m_targetDoor;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x12589F0", Offset = "0x12589F0", VA = "0x12589F0", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1258A50", Offset = "0x1258A50", VA = "0x1258A50")]
	private bool SetOutForDoor(Door d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1258DFC", Offset = "0x1258DFC", VA = "0x1258DFC")]
	private void OnReachedDest(AgentController.Result r)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1259160", Offset = "0x1259160", VA = "0x1259160", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1259164", Offset = "0x1259164", VA = "0x1259164")]
	public PersonGotoDoor()
	{
	}
}
[Token(Token = "0x200012E")]
public class PersonHasMetHappinessGoal : ConditionTask<Person>
{
	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1259258", Offset = "0x1259258", VA = "0x1259258", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1259260", Offset = "0x1259260", VA = "0x1259260")]
	public PersonHasMetHappinessGoal()
	{
	}
}
[Token(Token = "0x200012F")]
public class PersonIsGivenHP : ConditionTask<Person>
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Interest> interest;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<FacilityCategory> category;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1259D0C", Offset = "0x1259D0C", VA = "0x1259D0C", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1259DE4", Offset = "0x1259DE4", VA = "0x1259DE4")]
	public PersonIsGivenHP()
	{
	}
}
[Token(Token = "0x2000130")]
public class PersonReadyToDoJob : ConditionTask<Person>
{
	[Token(Token = "0x600066C")]
	[Address(RVA = "0x125A88C", Offset = "0x125A88C", VA = "0x125A88C", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x125A9BC", Offset = "0x125A9BC", VA = "0x125A9BC")]
	public PersonReadyToDoJob()
	{
	}
}
[Token(Token = "0x2000131")]
public class PersonReceiveHP : ActionTask<Person>
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BBParameter<Interest> interest;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BBParameter<FacilityCategory> category;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_duration;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x125AA08", Offset = "0x125AA08", VA = "0x125AA08", Slot = "15")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x125AAC8", Offset = "0x125AAC8", VA = "0x125AAC8", Slot = "16")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x125AB10", Offset = "0x125AB10", VA = "0x125AB10", Slot = "18")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x125AB78", Offset = "0x125AB78", VA = "0x125AB78")]
	public PersonReceiveHP()
	{
	}
}
[Token(Token = "0x2000132")]
public class ScenarioIsEndgame : ConditionTask<Person>
{
	[Token(Token = "0x6000672")]
	[Address(RVA = "0xEDA254", Offset = "0xEDA254", VA = "0xEDA254", Slot = "17")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xEDA308", Offset = "0xEDA308", VA = "0xEDA308")]
	public ScenarioIsEndgame()
	{
	}
}
[Token(Token = "0x2000133")]
public abstract class FolkAbility : MonoBehaviour
{
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5928", Offset = "0x8D5928")]
	private sealed class <WaitForPersonInit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAbility <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xE7C094", Offset = "0xE7C094", VA = "0xE7C094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xE7C0DC", Offset = "0xE7C0DC", VA = "0xE7C0DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xE7BFDC", Offset = "0xE7BFDC", VA = "0xE7BFDC")]
		[DebuggerHidden]
		public <WaitForPersonInit>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE7C008", Offset = "0xE7C008", VA = "0xE7C008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xE7C00C", Offset = "0xE7C00C", VA = "0xE7C00C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xE7C09C", Offset = "0xE7C09C", VA = "0xE7C09C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public Person Person;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string NameKey;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> AttachedObjects;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] AttachPrefabs;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BehaviourTree BehaviourTree;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, string> boneLUT;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x11B4A08", Offset = "0x11B4A08", VA = "0x11B4A08", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x11B4B44", Offset = "0x11B4B44", VA = "0x11B4B44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9320", Offset = "0x8E9320")]
	private IEnumerator WaitForPersonInit()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x11B4BBC", Offset = "0x11B4BBC", VA = "0x11B4BBC", Slot = "5")]
	protected virtual void PersonInitialized()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x11B4BC0", Offset = "0x11B4BC0", VA = "0x11B4BC0", Slot = "6")]
	public virtual void BecomeActive()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x11B4BE0", Offset = "0x11B4BE0", VA = "0x11B4BE0", Slot = "7")]
	public virtual void BecomeInactive()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x11B4BF0", Offset = "0x11B4BF0", VA = "0x11B4BF0", Slot = "8")]
	public virtual bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x11B4BF8", Offset = "0x11B4BF8", VA = "0x11B4BF8", Slot = "9")]
	public virtual void Begin()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x11B4BFC", Offset = "0x11B4BFC", VA = "0x11B4BFC", Slot = "10")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9380", Offset = "0x8E9380")]
	public virtual void Do()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x11B4C00", Offset = "0x11B4C00", VA = "0x11B4C00", Slot = "11")]
	public virtual bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x11B4C08", Offset = "0x11B4C08", VA = "0x11B4C08", Slot = "12")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x11B4C0C", Offset = "0x11B4C0C", VA = "0x11B4C0C")]
	public void InitMeshes()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x11B50A0", Offset = "0x11B50A0", VA = "0x11B50A0", Slot = "13")]
	protected virtual void AttachObject(Transform t)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x11B4BD0", Offset = "0x11B4BD0", VA = "0x11B4BD0")]
	private void EnableAttachedObjects(bool b)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x11B5438", Offset = "0x11B5438", VA = "0x11B5438")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9398", Offset = "0x8E9398")]
	public void DebugShowMeshes()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x11B5448", Offset = "0x11B5448", VA = "0x11B5448")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E93B0", Offset = "0x8E93B0")]
	public void DebugHideMeshes()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x11B5458", Offset = "0x11B5458", VA = "0x11B5458")]
	protected FolkAbility()
	{
	}
}
[Token(Token = "0x2000135")]
public class FolkAbilityBirthdayParty : FolkAbility
{
	[Token(Token = "0x2000136")]
	private enum State
	{
		[Token(Token = "0x40006A3")]
		Idle,
		[Token(Token = "0x40006A4")]
		GetReady,
		[Token(Token = "0x40006A5")]
		Party,
		[Token(Token = "0x40006A6")]
		CleanUp
	}

	[Serializable]
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5938", Offset = "0x8D5938")]
	private sealed class <>c
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__17_0;

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xE7C148", Offset = "0xE7C148", VA = "0xE7C148")]
		public <>c()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xE7C150", Offset = "0xE7C150", VA = "0xE7C150")]
		internal bool <PartyHard>b__17_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem m_particles;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public double m_partyDurationHrs;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double m_partyEndTime;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_partyInProgress;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_nextUpdate;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Person> m_partyGoers;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State m_state;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC654", Offset = "0x8DC654")]
	public string m_sfxBirthday;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x11B54B4", Offset = "0x11B54B4", VA = "0x11B54B4", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x11B54E8", Offset = "0x11B54E8", VA = "0x11B54E8", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x11B5820", Offset = "0x11B5820", VA = "0x11B5820", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x11B5828", Offset = "0x11B5828", VA = "0x11B5828", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x11B5850", Offset = "0x11B5850", VA = "0x11B5850")]
	private void LetsGetThisPartyStarted()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x11B5AB8", Offset = "0x11B5AB8", VA = "0x11B5AB8")]
	private void PartyHard()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x11B60A4", Offset = "0x11B60A4", VA = "0x11B60A4")]
	private void DeathOfAParty()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x11B62A0", Offset = "0x11B62A0", VA = "0x11B62A0", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x11B64BC", Offset = "0x11B64BC", VA = "0x11B64BC")]
	public FolkAbilityBirthdayParty()
	{
	}
}
[Token(Token = "0x2000138")]
public class FolkAbilityBuild : FolkAbility
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float BuildSpeedFactor;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x11B657C", Offset = "0x11B657C", VA = "0x11B657C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x11B6580", Offset = "0x11B6580", VA = "0x11B6580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x11B65E4", Offset = "0x11B65E4", VA = "0x11B65E4")]
	public FolkAbilityBuild()
	{
	}
}
[Token(Token = "0x2000139")]
public class FolkAbilityCarryScrap : FolkAbility
{
	[Token(Token = "0x6000699")]
	[Address(RVA = "0x11B65F0", Offset = "0x11B65F0", VA = "0x11B65F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x11B661C", Offset = "0x11B661C", VA = "0x11B661C", Slot = "13")]
	protected override void AttachObject(Transform t)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x11B66A4", Offset = "0x11B66A4", VA = "0x11B66A4")]
	public FolkAbilityCarryScrap()
	{
	}
}
[Token(Token = "0x200013A")]
public class FolkAbilityDigForTreasure : FolkAbility
{
	[Token(Token = "0x200013B")]
	private enum State
	{
		[Token(Token = "0x40006C2")]
		Idle,
		[Token(Token = "0x40006C3")]
		Digging,
		[Token(Token = "0x40006C4")]
		Settle,
		[Token(Token = "0x40006C5")]
		OpeningTreasure,
		[Token(Token = "0x40006C6")]
		TidyUp,
		[Token(Token = "0x40006C7")]
		Cancel
	}

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_doingIt;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_nextUpdate;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_searchDurationSecs;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_digDurationSecs;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_settleDurationSecs;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_openTreasureDurationSecs;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_tidyUpDurationSecs;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_hrsBetweenDigs;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_digVfx;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_treasureChest;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_VfxTreasureOpenPrefab;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC68C", Offset = "0x8DC68C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC68C", Offset = "0x8DC68C")]
	public float m_chanceToFindScrap;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FloatRange m_scrapToFind;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] m_objectsToFind;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animation m_digAnim;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationClip m_digAnimClip;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC6E0", Offset = "0x8DC6E0")]
	public string m_sfxDig;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxOpenChest;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject m_foundItem;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string m_toSay;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x11B66A8", Offset = "0x11B66A8", VA = "0x11B66A8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x11B6C18", Offset = "0x11B6C18", VA = "0x11B6C18", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x11B6C60", Offset = "0x11B6C60", VA = "0x11B6C60", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x11B6C68", Offset = "0x11B6C68", VA = "0x11B6C68", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x11B6CBC", Offset = "0x11B6CBC", VA = "0x11B6CBC")]
	private void OnExitedBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x11B6CEC", Offset = "0x11B6CEC", VA = "0x11B6CEC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x11B6CF8", Offset = "0x11B6CF8", VA = "0x11B6CF8", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x11B6D70", Offset = "0x11B6D70", VA = "0x11B6D70", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x11B67BC", Offset = "0x11B67BC", VA = "0x11B67BC")]
	private void InitStateMachine()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x11B6EDC", Offset = "0x11B6EDC", VA = "0x11B6EDC")]
	private void Enter_Idle()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x11B6EE0", Offset = "0x11B6EE0", VA = "0x11B6EE0")]
	private void Update_Idle()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x11B6F4C", Offset = "0x11B6F4C", VA = "0x11B6F4C")]
	private void Exit_Idle()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x11B6F50", Offset = "0x11B6F50", VA = "0x11B6F50")]
	private Vector3 GetDigPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x11B6FD0", Offset = "0x11B6FD0", VA = "0x11B6FD0")]
	private void Enter_Digging()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x11B7200", Offset = "0x11B7200", VA = "0x11B7200")]
	private void Update_Digging()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x11B739C", Offset = "0x11B739C", VA = "0x11B739C")]
	private void Exit_Digging()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x11B7464", Offset = "0x11B7464", VA = "0x11B7464")]
	private void Enter_Settle()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x11B7468", Offset = "0x11B7468", VA = "0x11B7468")]
	private void Update_Settle()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x11B74F0", Offset = "0x11B74F0", VA = "0x11B74F0")]
	private void Exit_Settle()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x11B74F4", Offset = "0x11B74F4", VA = "0x11B74F4")]
	private void Enter_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x11B7978", Offset = "0x11B7978", VA = "0x11B7978")]
	private void Update_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x11B7A00", Offset = "0x11B7A00", VA = "0x11B7A00")]
	private void Exit_OpeningTreasure()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x11B7BDC", Offset = "0x11B7BDC", VA = "0x11B7BDC")]
	private void Enter_TidyUp()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x11B7BE0", Offset = "0x11B7BE0", VA = "0x11B7BE0")]
	private void Update_TidyUp()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x11B7C68", Offset = "0x11B7C68", VA = "0x11B7C68")]
	private void Exit_TidyUp()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x11B7D5C", Offset = "0x11B7D5C", VA = "0x11B7D5C")]
	public FolkAbilityDigForTreasure()
	{
	}
}
[Token(Token = "0x200013C")]
public class FolkAbilityEfficientBuilder : FolkAbility
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScrapUseMultiplier;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x11B7E74", Offset = "0x11B7E74", VA = "0x11B7E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x11B7EA4", Offset = "0x11B7EA4", VA = "0x11B7EA4")]
	public FolkAbilityEfficientBuilder()
	{
	}
}
[Token(Token = "0x200013D")]
public class FolkAbilityGiveOutCovetedItem : FolkAbility
{
	[Token(Token = "0x200013E")]
	private enum State
	{
		[Token(Token = "0x40006D4")]
		Idle,
		[Token(Token = "0x40006D5")]
		GetReady,
		[Token(Token = "0x40006D6")]
		Party,
		[Token(Token = "0x40006D7")]
		CleanUp
	}

	[Serializable]
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5948", Offset = "0x8D5948")]
	private sealed class <>c
	{
		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__11_0;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<HappinessGoal> <>9__15_0;

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xE7C230", Offset = "0xE7C230", VA = "0xE7C230")]
		public <>c()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xE7C238", Offset = "0xE7C238", VA = "0xE7C238")]
		internal bool <WantsToDo>b__11_0(HappinessGoal x)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xE7C2B4", Offset = "0xE7C2B4", VA = "0xE7C2B4")]
		internal bool <Do>b__15_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_dailyQuota;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_remainingQuota;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem m_particles;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_nextUpdate;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public double m_activityDurationHrs;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double m_activityEndTime;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_activityInProgress;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Person> m_participants;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private State m_state;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x11B7EB0", Offset = "0x11B7EB0", VA = "0x11B7EB0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x11B7EB4", Offset = "0x11B7EB4", VA = "0x11B7EB4", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x11B7EE8", Offset = "0x11B7EE8", VA = "0x11B7EE8", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x11B83D8", Offset = "0x11B83D8", VA = "0x11B83D8", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x11B83E0", Offset = "0x11B83E0", VA = "0x11B83E0", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x11B8C0C", Offset = "0x11B8C0C", VA = "0x11B8C0C", Slot = "12")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x11B8D30", Offset = "0x11B8D30", VA = "0x11B8D30")]
	public FolkAbilityGiveOutCovetedItem()
	{
	}
}
[Token(Token = "0x2000140")]
public class FolkAbilityGrabAsteroid : FolkAbility
{
	[Token(Token = "0x2000141")]
	public enum States
	{
		[Token(Token = "0x40006E9")]
		Idle,
		[Token(Token = "0x40006EA")]
		Casting,
		[Token(Token = "0x40006EB")]
		Reeling
	}

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC718", Offset = "0x8DC718")]
	public Transform Hook;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReelSpeed;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CastSpeed;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinHookDist;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxHookDist;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float HookTimer;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float HookDuration;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ElasticLine Line;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform TargetHand;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Asteroid> AsteroidsInRange;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Asteroid reelingInScrap;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC750", Offset = "0x8DC750")]
	private States <State>k__BackingField;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve YOffsetCurve;

	[Token(Token = "0x170000BC")]
	public States State
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x11B8DCC", Offset = "0x11B8DCC", VA = "0x11B8DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9418", Offset = "0x8E9418")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x11B8DD4", Offset = "0x11B8DD4", VA = "0x11B8DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9428", Offset = "0x8E9428")]
		private set
		{
		}
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x11B8DDC", Offset = "0x11B8DDC", VA = "0x11B8DDC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x11B8E6C", Offset = "0x11B8E6C", VA = "0x11B8E6C", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x11B8EEC", Offset = "0x11B8EEC", VA = "0x11B8EEC", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x11B8F00", Offset = "0x11B8F00", VA = "0x11B8F00", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x11B8FCC", Offset = "0x11B8FCC", VA = "0x11B8FCC")]
	private void DoIdle()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x11B92A4", Offset = "0x11B92A4", VA = "0x11B92A4")]
	private void DoCasting()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x11B948C", Offset = "0x11B948C", VA = "0x11B948C")]
	private void DoReeling()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x11B95C0", Offset = "0x11B95C0", VA = "0x11B95C0")]
	private void FaceScrap()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x11B9758", Offset = "0x11B9758", VA = "0x11B9758")]
	private bool LineReeledIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x11B97EC", Offset = "0x11B97EC", VA = "0x11B97EC")]
	private void ReelLineIn()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x11B8E00", Offset = "0x11B8E00", VA = "0x11B8E00")]
	private void HideLine()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x11B96EC", Offset = "0x11B96EC", VA = "0x11B96EC")]
	private void ShowLine()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x11B994C", Offset = "0x11B994C", VA = "0x11B994C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x11B99C0", Offset = "0x11B99C0", VA = "0x11B99C0")]
	private void DropAnyAsteroids()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x11B9DFC", Offset = "0x11B9DFC", VA = "0x11B9DFC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x11B9EFC", Offset = "0x11B9EFC", VA = "0x11B9EFC")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x11BA038", Offset = "0x11BA038", VA = "0x11BA038")]
	public FolkAbilityGrabAsteroid()
	{
	}
}
[Token(Token = "0x2000142")]
public class FolkAbilityGrabScrap : FolkAbility
{
	[Token(Token = "0x2000143")]
	public enum States
	{
		[Token(Token = "0x40006F5")]
		Idle,
		[Token(Token = "0x40006F6")]
		Casting,
		[Token(Token = "0x40006F7")]
		Reeling
	}

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC760", Offset = "0x8DC760")]
	public Transform Hook;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ReelSpeed;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CastSpeed;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinHookDist;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ElasticLine Line;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ScrapCoin> scrapInRange;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ScrapCoin reelingInScrap;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private States State;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x11BA23C", Offset = "0x11BA23C", VA = "0x11BA23C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x11BA368", Offset = "0x11BA368", VA = "0x11BA368")]
	private void OnItemHeld(HoldableItem item)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x11BA584", Offset = "0x11BA584", VA = "0x11BA584", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x11BA618", Offset = "0x11BA618", VA = "0x11BA618", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x11BA62C", Offset = "0x11BA62C", VA = "0x11BA62C", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x11BAA4C", Offset = "0x11BAA4C", VA = "0x11BAA4C")]
	private bool LineReeledIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x11BAAE0", Offset = "0x11BAAE0", VA = "0x11BAAE0")]
	private void ReelLineIn()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x11BA310", Offset = "0x11BA310", VA = "0x11BA310")]
	private void HideLine()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x11BA9F4", Offset = "0x11BA9F4", VA = "0x11BA9F4")]
	private void ShowLine()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x11BAC40", Offset = "0x11BAC40", VA = "0x11BAC40")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x11BACB4", Offset = "0x11BACB4", VA = "0x11BACB4")]
	private void DropAnyScrap()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x11BAD78", Offset = "0x11BAD78", VA = "0x11BAD78")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x11BAEA4", Offset = "0x11BAEA4", VA = "0x11BAEA4")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x11BAFE0", Offset = "0x11BAFE0", VA = "0x11BAFE0")]
	public FolkAbilityGrabScrap()
	{
	}
}
[Token(Token = "0x2000144")]
public class FolkAbilityHPBurst : FolkAbility
{
	[Token(Token = "0x2000145")]
	private enum State
	{
		[Token(Token = "0x4000708")]
		Idle,
		[Token(Token = "0x4000709")]
		StartingUp,
		[Token(Token = "0x400070A")]
		GettingReady,
		[Token(Token = "0x400070B")]
		GiveOutHP,
		[Token(Token = "0x400070C")]
		CoolDown,
		[Token(Token = "0x400070D")]
		DoneForToday
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_interactionRadius;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_maxFolk;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_dailyQuota;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_remainingQuota;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FacilityCategory m_category;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private State m_state;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_lookingForGoodSpotDuration;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_timeBetweenSearches;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_gettingReadyDuration;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_coolDownDuration;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_nextActionTime;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_vfxPrefab;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_onCompleteManyKey;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_onCompleteOneKey;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Person> m_folkToBoost;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x11BB078", Offset = "0x11BB078", VA = "0x11BB078", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x11BB07C", Offset = "0x11BB07C", VA = "0x11BB07C", Slot = "6")]
	public override void BecomeActive()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x11BB0C8", Offset = "0x11BB0C8", VA = "0x11BB0C8", Slot = "8")]
	public override bool WantsToDo()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x11BB4BC", Offset = "0x11BB4BC", VA = "0x11BB4BC", Slot = "11")]
	public override bool IsDoing()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x11BB174", Offset = "0x11BB174", VA = "0x11BB174")]
	public List<Person> FillFolkToBoostList()
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x11BB4D8", Offset = "0x11BB4D8", VA = "0x11BB4D8", Slot = "10")]
	public override void Do()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x11BBA18", Offset = "0x11BBA18", VA = "0x11BBA18")]
	public FolkAbilityHPBurst()
	{
	}
}
[Token(Token = "0x2000146")]
public class FolkAbilityProcessScrap : FolkAbility
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScrapBonusFactor;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x11BBB08", Offset = "0x11BBB08", VA = "0x11BBB08")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x11BBB38", Offset = "0x11BBB38", VA = "0x11BBB38")]
	public FolkAbilityProcessScrap()
	{
	}
}
[Token(Token = "0x2000147")]
public class FolkAbilityProtectionBubble : FolkAbility
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float ProtectionFactor;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x11BBB44", Offset = "0x11BBB44", VA = "0x11BBB44")]
	public float GetProtectionFactor()
	{
		return default(float);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x11BBB78", Offset = "0x11BBB78", VA = "0x11BBB78")]
	public FolkAbilityProtectionBubble()
	{
	}
}
[Token(Token = "0x2000148")]
public class FolkAbilityRestock : FolkAbility
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FacilityCategory m_category;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_vfxPrefab;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x11BBB84", Offset = "0x11BBB84", VA = "0x11BBB84", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x11BBC50", Offset = "0x11BBC50", VA = "0x11BBC50")]
	private void OnExitedBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x11BBDC4", Offset = "0x11BBDC4", VA = "0x11BBDC4")]
	public FolkAbilityRestock()
	{
	}
}
[Token(Token = "0x2000149")]
public class FolkAbilityRun : FolkAbility
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float SpeedFactor;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AgentController m_agentController;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x11BBDC8", Offset = "0x11BBDC8", VA = "0x11BBDC8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x11BBE6C", Offset = "0x11BBE6C", VA = "0x11BBE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x11BBEFC", Offset = "0x11BBEFC", VA = "0x11BBEFC")]
	public FolkAbilityRun()
	{
	}
}
[Token(Token = "0x200014A")]
public class CovetThing : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	public enum Category
	{
		[Token(Token = "0x400071E")]
		SpecificThing,
		[Token(Token = "0x400071F")]
		InterestItem
	}

	[Token(Token = "0x200014C")]
	public enum Response
	{
		[Token(Token = "0x4000721")]
		Null = -1,
		[Token(Token = "0x4000722")]
		Good,
		[Token(Token = "0x4000723")]
		OK,
		[Token(Token = "0x4000724")]
		Bad
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Saveable]
	public Category m_category;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC7B8", Offset = "0x8DC7B8")]
	public string m_specificPrefabGUID;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject m_specificPrefab;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DC82C", Offset = "0x8DC82C")]
	public Interest m_interest;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Person m_person;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC87C", Offset = "0x8DC87C")]
	private bool <m_hasThing>k__BackingField;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Saveable]
	public bool m_everHadThing;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnItemChanged;

	[Token(Token = "0x170000BD")]
	public bool m_hasThing
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x13D7E04", Offset = "0x13D7E04", VA = "0x13D7E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9438", Offset = "0x8E9438")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x13D7E0C", Offset = "0x13D7E0C", VA = "0x13D7E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9448", Offset = "0x8E9448")]
		private set
		{
		}
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x13D7E18", Offset = "0x13D7E18", VA = "0x13D7E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x13D7FDC", Offset = "0x13D7FDC", VA = "0x13D7FDC")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x13D80C0", Offset = "0x13D80C0", VA = "0x13D80C0")]
	public void Randomise()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x13D816C", Offset = "0x13D816C", VA = "0x13D816C")]
	private void AssignCategory(Category category)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x13D820C", Offset = "0x13D820C", VA = "0x13D820C")]
	public string GetInfo()
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x13D840C", Offset = "0x13D840C", VA = "0x13D840C")]
	public Response CheckItem(HoldableItem item)
	{
		return default(Response);
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x13D8600", Offset = "0x13D8600", VA = "0x13D8600")]
	private void GetItem(HoldableItem item)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x13D883C", Offset = "0x13D883C", VA = "0x13D883C")]
	private void PlayerTakesItem(HoldableItem item)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x13D8B2C", Offset = "0x13D8B2C", VA = "0x13D8B2C")]
	public CovetThing()
	{
	}
}
[Token(Token = "0x200014D")]
public class FolkAnimationController : MonoBehaviour
{
	[Token(Token = "0x200014E")]
	public enum States
	{
		[Token(Token = "0x4000750")]
		Idle,
		[Token(Token = "0x4000751")]
		Walking,
		[Token(Token = "0x4000752")]
		Climbing,
		[Token(Token = "0x4000753")]
		Building,
		[Token(Token = "0x4000754")]
		PickedUp,
		[Token(Token = "0x4000755")]
		Activity,
		[Token(Token = "0x4000756")]
		Creating,
		[Token(Token = "0x4000757")]
		Talking,
		[Token(Token = "0x4000758")]
		Floating,
		[Token(Token = "0x4000759")]
		Dancing,
		[Token(Token = "0x400075A")]
		Cheering,
		[Token(Token = "0x400075B")]
		GoingThroughDoor,
		[Token(Token = "0x400075C")]
		Sitting
	}

	[Token(Token = "0x200014F")]
	public enum Emotions
	{
		[Token(Token = "0x400075E")]
		Normal,
		[Token(Token = "0x400075F")]
		Creative,
		[Token(Token = "0x4000760")]
		Happy,
		[Token(Token = "0x4000761")]
		Sad,
		[Token(Token = "0x4000762")]
		Bored,
		[Token(Token = "0x4000763")]
		Tired,
		[Token(Token = "0x4000764")]
		Hungry
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5958", Offset = "0x8D5958")]
	private sealed class <Start>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAnimationController <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xE7C9CC", Offset = "0xE7C9CC", VA = "0xE7C9CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xE7CA14", Offset = "0xE7CA14", VA = "0xE7CA14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xE7C330", Offset = "0xE7C330", VA = "0xE7C330")]
		[DebuggerHidden]
		public <Start>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xE7C35C", Offset = "0xE7C35C", VA = "0xE7C35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xE7C360", Offset = "0xE7C360", VA = "0xE7C360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xE7C9D4", Offset = "0xE7C9D4", VA = "0xE7C9D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_crossFadeDuration;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animation m_animator;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshAnimatorBase m_meshAnimator;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_animWalk;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_animIdle;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string m_animHappy;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string m_animSad;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string m_animClimbing;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string m_animSitting;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string m_animBuilding;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string m_animPickedUp;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string m_animCreating;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string m_animCreativeWalk;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string m_animCreativeIdle;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string m_animSadWalk;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string m_animSadIdle;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string m_animBoredWalk;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private string m_animBoredIdle;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private string m_animTiredWalk;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string m_animTiredIdle;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string m_animHungryWalk;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private string m_animHungryIdle;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private string m_animHappyWalk;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private string m_animHappyIdle;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private string m_animTalk;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private string m_animFloat;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private string m_animCheer;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private string m_animDance1;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private string m_animDance2;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private string m_animDance3;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	[ReadOnly]
	private States m_state;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[ReadOnly]
	[SerializeField]
	private Emotions m_emotion;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] animDurations;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string m_animActivity;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Action postOneshotCallback;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float oneshotFinishesAt;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool m_debug;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int[] m_cachedIndices;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float m_moveSpeed;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float m_buildSpeed;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool m_isInitialized;

	[Token(Token = "0x170000BE")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x11BBF08", Offset = "0x11BBF08", VA = "0x11BBF08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x11BBF10", Offset = "0x11BBF10", VA = "0x11BBF10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9458", Offset = "0x8E9458")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x11BBF88", Offset = "0x11BBF88", VA = "0x11BBF88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11BC188", Offset = "0x11BC188", VA = "0x11BC188")]
	public bool SetState(States state, bool forceInterrupt = false, bool forceChange = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x11BC350", Offset = "0x11BC350", VA = "0x11BC350")]
	private bool UpdateAnimation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11BCAF4", Offset = "0x11BCAF4", VA = "0x11BCAF4")]
	public bool SetEmotion(Emotions emotion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x11BCAB0", Offset = "0x11BCAB0", VA = "0x11BCAB0")]
	private float GetAnimSpeed(States state)
	{
		return default(float);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x11BCADC", Offset = "0x11BCADC", VA = "0x11BCADC")]
	private float GetAnimStartTime(States state)
	{
		return default(float);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x11BC32C", Offset = "0x11BC32C", VA = "0x11BC32C")]
	private bool IsInterrubtible(States state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x11BCB24", Offset = "0x11BCB24", VA = "0x11BCB24")]
	public void SetMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x11BCB2C", Offset = "0x11BCB2C", VA = "0x11BCB2C")]
	public void SetBuildSpeed(float speed)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x11BC9D0", Offset = "0x11BC9D0", VA = "0x11BC9D0")]
	private int GetAnimIndex(States state, Emotions emotion)
	{
		return default(int);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x11BC85C", Offset = "0x11BC85C", VA = "0x11BC85C")]
	private string GetAnimName(States state, Emotions emotion)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x11BCB34", Offset = "0x11BCB34", VA = "0x11BCB34")]
	public void SetPickedUp(bool pickedUp)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x11BCB40", Offset = "0x11BCB40", VA = "0x11BCB40")]
	private void ToggleState(States state, bool on)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x11BCB70", Offset = "0x11BCB70", VA = "0x11BCB70")]
	public void SetFloating(bool floating)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x11BCB7C", Offset = "0x11BCB7C", VA = "0x11BCB7C")]
	public void DoActivityAnim(AnimationClip animClip)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x11BCBB4", Offset = "0x11BCBB4", VA = "0x11BCBB4")]
	public void DoActivityAnim(string animName)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x11BCD5C", Offset = "0x11BCD5C", VA = "0x11BCD5C")]
	public void StopActivityAnim()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x11B71F4", Offset = "0x11B71F4", VA = "0x11B71F4")]
	public void SetCreating(bool creating)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x11BCD7C", Offset = "0x11BCD7C", VA = "0x11BCD7C")]
	public void SetClimbing(bool climbing)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x11BCD88", Offset = "0x11BCD88", VA = "0x11BCD88")]
	public void SetSitting(bool sitting)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x11BCD94", Offset = "0x11BCD94", VA = "0x11BCD94")]
	public bool ShouldntContinue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x11BCDA4", Offset = "0x11BCDA4", VA = "0x11BCDA4")]
	public void PlayOneshot(States state, [Optional] Action then)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x11BCE2C", Offset = "0x11BCE2C", VA = "0x11BCE2C")]
	public void SetBuilding(bool building)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x11BCE38", Offset = "0x11BCE38", VA = "0x11BCE38")]
	public void SetTalking(bool talking)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x11B6294", Offset = "0x11B6294", VA = "0x11B6294")]
	public void SetDancing(bool dancing)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x11BCE44", Offset = "0x11BCE44", VA = "0x11BCE44")]
	public void SetCheering(bool cheering)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x11BCE50", Offset = "0x11BCE50", VA = "0x11BCE50")]
	public FolkAnimationController()
	{
	}
}
[Token(Token = "0x2000151")]
public class FolkAnimationObjectHider : StateMachineBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string GameObjectName;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject go;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x11BCE6C", Offset = "0x11BCE6C", VA = "0x11BCE6C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x11BCF44", Offset = "0x11BCF44", VA = "0x11BCF44", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x11BCFA8", Offset = "0x11BCFA8", VA = "0x11BCFA8")]
	public FolkAnimationObjectHider()
	{
	}
}
[Token(Token = "0x2000152")]
public class FolkHead : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 hat_bone_pos;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 hat_bone_rot;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool show_hat;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh hat_mesh;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x11C11A4", Offset = "0x11C11A4", VA = "0x11C11A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x11C11AC", Offset = "0x11C11AC", VA = "0x11C11AC")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x11C12F4", Offset = "0x11C12F4", VA = "0x11C12F4")]
	public FolkHead()
	{
	}
}
[Token(Token = "0x2000153")]
public class FolkHappiness : StaticMapped<FolkHappiness>
{
	[Token(Token = "0x2000154")]
	public delegate void voidDelegate();

	[Token(Token = "0x2000155")]
	public class HappinessTarget
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_value;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_debugDescription;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public voidDelegate OnTargetHit;

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xE7D60C", Offset = "0xE7D60C", VA = "0xE7D60C")]
		public HappinessTarget()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5968", Offset = "0x8D5968")]
	private sealed class <>c
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HappinessGoal> <>9__35_0;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<HappinessGoal> <>9__35_1;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<HappinessGoal> <>9__35_2;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<HappinessTarget> <>9__58_0;

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE7D564", Offset = "0xE7D564", VA = "0xE7D564")]
		public <>c()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xE7D56C", Offset = "0xE7D56C", VA = "0xE7D56C")]
		internal int <Start>b__35_0(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xE7D594", Offset = "0xE7D594", VA = "0xE7D594")]
		internal int <Start>b__35_1(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xE7D5BC", Offset = "0xE7D5BC", VA = "0xE7D5BC")]
		internal int <Start>b__35_2(HappinessGoal a, HappinessGoal b)
		{
			return default(int);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xE7D5E4", Offset = "0xE7D5E4", VA = "0xE7D5E4")]
		internal int <AddHappinessTarget>b__58_0(HappinessTarget a, HappinessTarget b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Person m_person;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public int LatestHappiness;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB0C", Offset = "0x8DCB0C")]
	private List<HappinessGoal> <m_allGoals>k__BackingField;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB1C", Offset = "0x8DCB1C")]
	private int <m_allGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB2C", Offset = "0x8DCB2C")]
	private List<HappinessGoal> <m_lifetimeGoals>k__BackingField;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB3C", Offset = "0x8DCB3C")]
	private int <m_lifetimeGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB4C", Offset = "0x8DCB4C")]
	private List<HappinessGoal> <m_dailyGoals>k__BackingField;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB5C", Offset = "0x8DCB5C")]
	private int <m_dailyGoalsCountNotHidden>k__BackingField;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HappinessGoal.HGEvent OnAnyHappinessGoalChanged;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityEvent OnGlobalHappinessChanged;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool m_staticsInitialised;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<HappinessTarget> ms_happinessTargets;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB6C", Offset = "0x8DCB6C")]
	private static int <GlobalTotalHappiness>k__BackingField;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB7C", Offset = "0x8DCB7C")]
	private static int <GlobalMaxTotalHappiness>k__BackingField;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB8C", Offset = "0x8DCB8C")]
	private static float <GlobalNormalisedHappiness>k__BackingField;

	[Token(Token = "0x170000C1")]
	public List<HappinessGoal> m_allGoals
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x11BEA70", Offset = "0x11BEA70", VA = "0x11BEA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9508", Offset = "0x8E9508")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x11BEA78", Offset = "0x11BEA78", VA = "0x11BEA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9518", Offset = "0x8E9518")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public int m_allGoalsCountNotHidden
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x11BEA80", Offset = "0x11BEA80", VA = "0x11BEA80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9528", Offset = "0x8E9528")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x11BEA88", Offset = "0x11BEA88", VA = "0x11BEA88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9538", Offset = "0x8E9538")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public List<HappinessGoal> m_lifetimeGoals
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x11BEA90", Offset = "0x11BEA90", VA = "0x11BEA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9548", Offset = "0x8E9548")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x11BEA98", Offset = "0x11BEA98", VA = "0x11BEA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9558", Offset = "0x8E9558")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public int m_lifetimeGoalsCountNotHidden
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x11BEAA0", Offset = "0x11BEAA0", VA = "0x11BEAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9568", Offset = "0x8E9568")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x11BEAA8", Offset = "0x11BEAA8", VA = "0x11BEAA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9578", Offset = "0x8E9578")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public List<HappinessGoal> m_dailyGoals
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x11BEAB0", Offset = "0x11BEAB0", VA = "0x11BEAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9588", Offset = "0x8E9588")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x11BEAB8", Offset = "0x11BEAB8", VA = "0x11BEAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9598", Offset = "0x8E9598")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public int m_dailyGoalsCountNotHidden
	{
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x11BEAC0", Offset = "0x11BEAC0", VA = "0x11BEAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95A8", Offset = "0x8E95A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x11BEAC8", Offset = "0x11BEAC8", VA = "0x11BEAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95B8", Offset = "0x8E95B8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public static int GlobalTotalHappiness
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x11C0850", Offset = "0x11C0850", VA = "0x11C0850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95DC", Offset = "0x8E95DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x11C08B4", Offset = "0x11C08B4", VA = "0x11C08B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95EC", Offset = "0x8E95EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public static int GlobalMaxTotalHappiness
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x11C091C", Offset = "0x11C091C", VA = "0x11C091C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95FC", Offset = "0x8E95FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x11C0980", Offset = "0x11C0980", VA = "0x11C0980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E960C", Offset = "0x8E960C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static float GlobalNormalisedHappiness
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x11C09E8", Offset = "0x11C09E8", VA = "0x11C09E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E961C", Offset = "0x8E961C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x11C0A4C", Offset = "0x11C0A4C", VA = "0x11C0A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E962C", Offset = "0x8E962C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x11BEAD0", Offset = "0x11BEAD0", VA = "0x11BEAD0")]
	public int GetNumLifetimeGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x11BEB80", Offset = "0x11BEB80", VA = "0x11BEB80")]
	public int GetNumLifetimeGoalsNotComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x11BEBD8", Offset = "0x11BEBD8", VA = "0x11BEBD8")]
	public int GetNumDailyGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x11BEC88", Offset = "0x11BEC88", VA = "0x11BEC88")]
	public int GetNumDailyGoalsNotComplete()
	{
		return default(int);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x11BECE0", Offset = "0x11BECE0", VA = "0x11BECE0")]
	public int GetNumAllGoalsComplete()
	{
		return default(int);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x11BED90", Offset = "0x11BED90", VA = "0x11BED90")]
	public float GetNormalisedAllGoalsComplete()
	{
		return default(float);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x11BEE64", Offset = "0x11BEE64", VA = "0x11BEE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x11BEF2C", Offset = "0x11BEF2C", VA = "0x11BEF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x11BFA38", Offset = "0x11BFA38", VA = "0x11BFA38")]
	public void CheckAll()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x11BFADC", Offset = "0x11BFADC", VA = "0x11BFADC")]
	private void OnWakeUp(Person p)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x11BFB80", Offset = "0x11BFB80", VA = "0x11BFB80")]
	private void OnHappinessGoalStateChange(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x11C03E4", Offset = "0x11C03E4", VA = "0x11C03E4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E95C8", Offset = "0x8E95C8")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x11C051C", Offset = "0x11C051C", VA = "0x11C051C")]
	private static void InitStatics()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x11C0724", Offset = "0x11C0724", VA = "0x11C0724")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x11BD698", Offset = "0x11BD698", VA = "0x11BD698")]
	public static void AddHappinessTarget(int value, string debugDescription, voidDelegate onTargetHit)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x11BFC48", Offset = "0x11BFC48", VA = "0x11BFC48")]
	public void UpdateGlobalHappinessCounts()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x11C0ABC", Offset = "0x11C0ABC", VA = "0x11C0ABC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E963C", Offset = "0x8E963C")]
	public void MaxOutHappiness()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x11C0BD8", Offset = "0x11C0BD8", VA = "0x11C0BD8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9654", Offset = "0x8E9654")]
	public void ResetHappiness()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x11C0CF4", Offset = "0x11C0CF4", VA = "0x11C0CF4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E966C", Offset = "0x8E966C")]
	public static void AllFolkMaxOutHappiness()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x11C1018", Offset = "0x11C1018", VA = "0x11C1018")]
	public FolkHappiness()
	{
	}
}
[Token(Token = "0x2000157")]
public class HG_CityHasEnoughFacility : FacilityHappinessGoal
{
	[Token(Token = "0x600075B")]
	[Address(RVA = "0x12A2134", Offset = "0x12A2134", VA = "0x12A2134")]
	public HG_CityHasEnoughFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x12A2250", Offset = "0x12A2250", VA = "0x12A2250", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x12A2260", Offset = "0x12A2260", VA = "0x12A2260", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x12A2368", Offset = "0x12A2368", VA = "0x12A2368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96B4", Offset = "0x8E96B4")]
	private void <.ctor>b__0_0(Facility x)
	{
	}
}
[Token(Token = "0x2000158")]
public class Check_HG_CitHasEnoughFacility : HG_Check_Facility<HG_CityHasEnoughFacility>
{
	[Token(Token = "0x600075F")]
	[Address(RVA = "0x13CFF48", Offset = "0x13CFF48", VA = "0x13CFF48")]
	public Check_HG_CitHasEnoughFacility()
	{
	}
}
[Token(Token = "0x2000159")]
public class HG_GotCovetedItem : HappinessGoal
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CovetThing m_covet;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x12A2374", Offset = "0x12A2374", VA = "0x12A2374")]
	public HG_GotCovetedItem(Person p, float importance)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x12A2580", Offset = "0x12A2580", VA = "0x12A2580", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x12A2640", Offset = "0x12A2640", VA = "0x12A2640", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x12A2718", Offset = "0x12A2718", VA = "0x12A2718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96C4", Offset = "0x8E96C4")]
	private void <.ctor>b__1_0()
	{
	}
}
[Token(Token = "0x200015A")]
public class Check_HG_GotCovetedItem : HG_Check<HG_GotCovetedItem>
{
	[Token(Token = "0x6000764")]
	[Address(RVA = "0x13CFF94", Offset = "0x13CFF94", VA = "0x13CFF94")]
	public Check_HG_GotCovetedItem()
	{
	}
}
[Token(Token = "0x200015B")]
public class HG_HasSlept : HappinessGoal
{
	[Token(Token = "0x6000765")]
	[Address(RVA = "0x12A2724", Offset = "0x12A2724", VA = "0x12A2724")]
	public HG_HasSlept(Person p, float importance)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x12A2804", Offset = "0x12A2804", VA = "0x12A2804")]
	private void OnWakeUp(Person p)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x12A280C", Offset = "0x12A280C", VA = "0x12A280C", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x12A2814", Offset = "0x12A2814", VA = "0x12A2814", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200015C")]
public class Check_HG_HasSlept : HG_Check<HG_HasSlept>
{
	[Token(Token = "0x6000769")]
	[Address(RVA = "0x13CFFE0", Offset = "0x13CFFE0", VA = "0x13CFFE0")]
	public Check_HG_HasSlept()
	{
	}
}
[Token(Token = "0x200015D")]
public class HG_HouseIsDecorated : HappinessGoal
{
	[Token(Token = "0x600076A")]
	[Address(RVA = "0x12A2858", Offset = "0x12A2858", VA = "0x12A2858")]
	public HG_HouseIsDecorated(Person p, float importance)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x12A2A4C", Offset = "0x12A2A4C", VA = "0x12A2A4C")]
	public void OnMovedIntoHouse(Person p)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x12A2BA8", Offset = "0x12A2BA8", VA = "0x12A2BA8", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x12A2C0C", Offset = "0x12A2C0C", VA = "0x12A2C0C", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x12A2C50", Offset = "0x12A2C50", VA = "0x12A2C50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96D4", Offset = "0x8E96D4")]
	private void <.ctor>b__0_0(Building b, Decoration d)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x12A2C5C", Offset = "0x12A2C5C", VA = "0x12A2C5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96E4", Offset = "0x8E96E4")]
	private void <.ctor>b__0_1(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x12A2C68", Offset = "0x12A2C68", VA = "0x12A2C68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96F4", Offset = "0x8E96F4")]
	private void <OnMovedIntoHouse>b__1_0(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x12A2C74", Offset = "0x12A2C74", VA = "0x12A2C74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9704", Offset = "0x8E9704")]
	private void <OnMovedIntoHouse>b__1_1(Building b, Decoration d)
	{
	}
}
[Token(Token = "0x200015E")]
public class Check_HG_HouseIsDecorated : HG_Check<HG_HouseIsDecorated>
{
	[Token(Token = "0x6000772")]
	[Address(RVA = "0x13D002C", Offset = "0x13D002C", VA = "0x13D002C")]
	public Check_HG_HouseIsDecorated()
	{
	}
}
[Token(Token = "0x200015F")]
public class HG_HouseIsDefended : HappinessGoal
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_isVerySafe;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_couldBeSafe;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x12A2C80", Offset = "0x12A2C80", VA = "0x12A2C80")]
	public HG_HouseIsDefended(Person p, float importance)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x12A2D90", Offset = "0x12A2D90", VA = "0x12A2D90", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x12A3048", Offset = "0x12A3048", VA = "0x12A3048", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x12A30BC", Offset = "0x12A30BC", VA = "0x12A30BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9714", Offset = "0x8E9714")]
	private void <.ctor>b__2_0(Building x)
	{
	}
}
[Token(Token = "0x2000160")]
public class Check_HG_HouseIsDefended : HG_Check<HG_HouseIsDefended>
{
	[Token(Token = "0x6000777")]
	[Address(RVA = "0x13D0078", Offset = "0x13D0078", VA = "0x13D0078")]
	public Check_HG_HouseIsDefended()
	{
	}
}
[Token(Token = "0x2000161")]
public class HG_HouseOwned : HappinessGoal
{
	[Token(Token = "0x6000778")]
	[Address(RVA = "0x12A30C8", Offset = "0x12A30C8", VA = "0x12A30C8")]
	public HG_HouseOwned(Person p, float importance)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x12A328C", Offset = "0x12A328C", VA = "0x12A328C")]
	private void OnBuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x12A3360", Offset = "0x12A3360", VA = "0x12A3360")]
	public void OnMovedIntoHouse(Person p)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x12A3434", Offset = "0x12A3434", VA = "0x12A3434", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x12A3478", Offset = "0x12A3478", VA = "0x12A3478", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x2000162")]
public class Check_HG_HouseOwned : HG_Check<HG_HouseOwned>
{
	[Token(Token = "0x600077D")]
	[Address(RVA = "0x13D00C4", Offset = "0x13D00C4", VA = "0x13D00C4")]
	public Check_HG_HouseOwned()
	{
	}
}
[Token(Token = "0x2000163")]
public class HG_NeigbourhoodHasFacility : FacilityHappinessGoal
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_neighbourhoodRadius;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x12A34EC", Offset = "0x12A34EC", VA = "0x12A34EC")]
	public HG_NeigbourhoodHasFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x12A3998", Offset = "0x12A3998", VA = "0x12A3998")]
	private void BuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x12A3A6C", Offset = "0x12A3A6C", VA = "0x12A3A6C")]
	private void ConstructionComplete(Building b)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x12A3CF4", Offset = "0x12A3CF4", VA = "0x12A3CF4")]
	private void OnDecorationAdded(Building b, Decoration d)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x12A3E6C", Offset = "0x12A3E6C", VA = "0x12A3E6C", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x12A3DE4", Offset = "0x12A3DE4", VA = "0x12A3DE4")]
	private bool CheckBuilding(Building b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x12A3900", Offset = "0x12A3900", VA = "0x12A3900")]
	private bool HasInterestingFacility(Building b, out Facility facility)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x12A3BC4", Offset = "0x12A3BC4", VA = "0x12A3BC4")]
	private bool CheckFacility(Facility f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x12A3FC8", Offset = "0x12A3FC8", VA = "0x12A3FC8", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x12A4100", Offset = "0x12A4100", VA = "0x12A4100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9724", Offset = "0x8E9724")]
	private void <.ctor>b__1_0(Person x)
	{
	}
}
[Token(Token = "0x2000164")]
public class Check_HG_NeighbourhoodHasFacility : HG_Check_Facility<HG_NeigbourhoodHasFacility>
{
	[Token(Token = "0x6000788")]
	[Address(RVA = "0x13D0110", Offset = "0x13D0110", VA = "0x13D0110")]
	public Check_HG_NeighbourhoodHasFacility()
	{
	}
}
[Token(Token = "0x2000165")]
public class HG_SeenMyInterest : HappinessGoal
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_requiredCount;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x12A410C", Offset = "0x12A410C", VA = "0x12A410C")]
	public HG_SeenMyInterest(Person p, int count, float importance)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x12A41D4", Offset = "0x12A41D4", VA = "0x12A41D4", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12A421C", Offset = "0x12A421C", VA = "0x12A421C", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x12A4338", Offset = "0x12A4338", VA = "0x12A4338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9734", Offset = "0x8E9734")]
	private void <.ctor>b__1_0()
	{
	}
}
[Token(Token = "0x2000166")]
public class HG_Check_HasSlept : HG_Check<HG_HasSlept>
{
	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12A2050", Offset = "0x12A2050", VA = "0x12A2050")]
	public HG_Check_HasSlept()
	{
	}
}
[Token(Token = "0x2000167")]
public class HG_VisitedFacility : FacilityHappinessGoal
{
	[Token(Token = "0x600078E")]
	[Address(RVA = "0x12A4344", Offset = "0x12A4344", VA = "0x12A4344")]
	public HG_VisitedFacility(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x12A4430", Offset = "0x12A4430", VA = "0x12A4430")]
	private void OnEnteredBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12A450C", Offset = "0x12A450C", VA = "0x12A450C", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x12A4514", Offset = "0x12A4514", VA = "0x12A4514", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x2000168")]
public class HG_Check_VisitedFacility : HG_Check_Facility<HG_VisitedFacility>
{
	[Token(Token = "0x6000792")]
	[Address(RVA = "0x12A209C", Offset = "0x12A209C", VA = "0x12A209C")]
	public HG_Check_VisitedFacility()
	{
	}
}
[Token(Token = "0x2000169")]
public class HG_VisitedFacilityForMyInterest : FacilityHappinessGoal
{
	[Token(Token = "0x6000793")]
	[Address(RVA = "0x12A461C", Offset = "0x12A461C", VA = "0x12A461C")]
	public HG_VisitedFacilityForMyInterest(Person p, FacilityCategory category, float importance)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x12A4708", Offset = "0x12A4708", VA = "0x12A4708")]
	private void OnEnteredBuilding(Person p, Building b)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x12A4818", Offset = "0x12A4818", VA = "0x12A4818", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x12A4820", Offset = "0x12A4820", VA = "0x12A4820", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200016A")]
public class HG_Check_VisitedFacilityForMyInterest : HG_Check_Facility<HG_VisitedFacilityForMyInterest>
{
	[Token(Token = "0x6000797")]
	[Address(RVA = "0x12A20E8", Offset = "0x12A20E8", VA = "0x12A20E8")]
	public HG_Check_VisitedFacilityForMyInterest()
	{
	}
}
[Token(Token = "0x200016B")]
public class HG_WentToBirthdayParty : HappinessGoal
{
	[Token(Token = "0x6000798")]
	[Address(RVA = "0x12A4A9C", Offset = "0x12A4A9C", VA = "0x12A4A9C")]
	public HG_WentToBirthdayParty(Person p, float importance)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x12A4AC4", Offset = "0x12A4AC4", VA = "0x12A4AC4", Slot = "4")]
	public override bool Check()
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12A4AF8", Offset = "0x12A4AF8", VA = "0x12A4AF8", Slot = "5")]
	public override string GetTitle()
	{
		return null;
	}
}
[Token(Token = "0x200016C")]
public class Check_HG_WentToBirthdayParty : HG_Check<HG_WentToBirthdayParty>
{
	[Token(Token = "0x600079B")]
	[Address(RVA = "0x13D015C", Offset = "0x13D015C", VA = "0x13D015C")]
	public Check_HG_WentToBirthdayParty()
	{
	}
}
[Token(Token = "0x200016D")]
public abstract class HappinessGoal
{
	[Token(Token = "0x200016E")]
	public class HGEvent : UnityEvent<HappinessGoal>
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xE7EA90", Offset = "0xE7EA90", VA = "0xE7EA90")]
		public HGEvent()
		{
		}
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_importance;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Person m_person;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCB9C", Offset = "0x8DCB9C")]
	private bool <m_completed>k__BackingField;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HGEvent OnStatusChanged;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_hidden;

	[Token(Token = "0x170000CA")]
	protected bool m_completed
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x12ACD30", Offset = "0x12ACD30", VA = "0x12ACD30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9744", Offset = "0x8E9744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x12ACD38", Offset = "0x12ACD38", VA = "0x12ACD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9754", Offset = "0x8E9754")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public bool IsComplete
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x12A2258", Offset = "0x12A2258", VA = "0x12A2258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x12A25B4", Offset = "0x12A25B4", VA = "0x12A25B4")]
	public void SetComplete(bool b)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x12A24B4", Offset = "0x12A24B4", VA = "0x12A24B4")]
	protected HappinessGoal(Person p, float importance)
	{
	}

	[Token(Token = "0x60007A1")]
	public abstract bool Check();

	[Token(Token = "0x60007A2")]
	public abstract string GetTitle();
}
[Token(Token = "0x200016F")]
public abstract class FacilityHappinessGoal : HappinessGoal
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCBAC", Offset = "0x8DCBAC")]
	private FacilityCategory <m_category>k__BackingField;

	[Token(Token = "0x170000CC")]
	public FacilityCategory m_category
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x101BAB8", Offset = "0x101BAB8", VA = "0x101BAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9764", Offset = "0x8E9764")]
		get
		{
			return default(FacilityCategory);
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x101BAC0", Offset = "0x101BAC0", VA = "0x101BAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9774", Offset = "0x8E9774")]
		protected set
		{
		}
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x101BAC8", Offset = "0x101BAC8", VA = "0x101BAC8")]
	protected FacilityHappinessGoal(Person p, FacilityCategory cat, float importance)
	{
	}
}
[Token(Token = "0x2000170")]
public abstract class HG_Check<T> : ConditionTask<Person> where T : HappinessGoal
{
	[Serializable]
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5978", Offset = "0x8D5978")]
	private sealed class <>c
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<HappinessGoal, bool> <>9__2_0;

		[Token(Token = "0x60007AD")]
		public <>c()
		{
		}

		[Token(Token = "0x60007AE")]
		internal bool <FindGoal>b__2_0(HappinessGoal g)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public HappinessGoal Goal;

	[Token(Token = "0x60007A7")]
	protected override string OnInit()
	{
		return null;
	}

	[Token(Token = "0x60007A8")]
	protected virtual HappinessGoal FindGoal()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	protected HappinessGoal SearchAllGoals(Func<HappinessGoal, bool> predicate)
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AB")]
	protected HG_Check()
	{
	}
}
[Token(Token = "0x2000172")]
public abstract class HG_Check_Facility<T> : HG_Check<T> where T : FacilityHappinessGoal
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FacilityCategory m_category;

	[Token(Token = "0x60007AF")]
	protected override HappinessGoal FindGoal()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	protected HG_Check_Facility()
	{
	}

	[Token(Token = "0x60007B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9784", Offset = "0x8E9784")]
	private bool <FindGoal>b__1_0(HappinessGoal g)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5988", Offset = "0x8D5988")]
public class FolkJob : ScriptableObject
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HatPrefab;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BehaviourTree BehaviourTree;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FolkJobs.JobTypes JobType;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x11C130C", Offset = "0x11C130C", VA = "0x11C130C")]
	public FolkJob()
	{
	}
}
[Token(Token = "0x2000174")]
public class FolkJobs : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	public enum JobTypes
	{
		[Token(Token = "0x400079F")]
		None,
		[Token(Token = "0x40007A0")]
		Building,
		[Token(Token = "0x40007A1")]
		ProcessingScrap,
		[Token(Token = "0x40007A2")]
		RocketLab,
		[Token(Token = "0x40007A3")]
		MovingScrap,
		[Token(Token = "0x40007A4")]
		Defending
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FolkJob[] AllJobs;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] JobAssignSFX;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	[ReadOnly]
	public JobTypes currentJobType;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FolkJob currentJob;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Person person;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentHat;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool wantToQuitJob;

	[Token(Token = "0x170000CD")]
	public JobTypes CurrentJobType
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x11C1314", Offset = "0x11C1314", VA = "0x11C1314")]
		get
		{
			return default(JobTypes);
		}
	}

	[Token(Token = "0x170000CE")]
	public string InfoString
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x11C131C", Offset = "0x11C131C", VA = "0x11C131C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x11C13D0", Offset = "0x11C13D0", VA = "0x11C13D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x11C142C", Offset = "0x11C142C", VA = "0x11C142C")]
	public void SetCurrent(JobTypes job)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x11C16FC", Offset = "0x11C16FC", VA = "0x11C16FC")]
	private void OnPlayerGivesItem_Builder(HoldableItem hi)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x11C1828", Offset = "0x11C1828", VA = "0x11C1828")]
	public static bool JobRequiresHasSlept(JobTypes job)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x11C1844", Offset = "0x11C1844", VA = "0x11C1844")]
	public FolkJobs()
	{
	}
}
[Token(Token = "0x2000176")]
public class Mouth : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D59E8", Offset = "0x8D59E8")]
	private sealed class <>c
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__26_0;

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1058C94", Offset = "0x1058C94", VA = "0x1058C94")]
		public <>c()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1058C9C", Offset = "0x1058C9C", VA = "0x1058C9C")]
		internal bool <Start>b__26_0(Transform t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCC04", Offset = "0x8DCC04")]
	[ReadOnly]
	[SerializeField]
	private Transform A;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCC60", Offset = "0x8DCC60")]
	[ReadOnly]
	[SerializeField]
	private Transform E;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCCBC", Offset = "0x8DCCBC")]
	[ReadOnly]
	private Transform I;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCD18", Offset = "0x8DCD18")]
	[ReadOnly]
	[SerializeField]
	private Transform O;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCD74", Offset = "0x8DCD74")]
	private Transform U;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCDD0", Offset = "0x8DCDD0")]
	[ReadOnly]
	[SerializeField]
	private Transform Closed;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCE2C", Offset = "0x8DCE2C")]
	[SerializeField]
	[ReadOnly]
	private Transform Happy;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCE88", Offset = "0x8DCE88")]
	[SerializeField]
	private Transform Sad;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCEE4", Offset = "0x8DCEE4")]
	private Transform Suprised;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> mouthShapes;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform oldShape;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform[] head_xforms;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCF40", Offset = "0x8DCF40")]
	public float min_time;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float max_time;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCF78", Offset = "0x8DCF78")]
	private Transform eyesOpen;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DCFB0", Offset = "0x8DCFB0")]
	private Transform eyesShut;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_minBlinkTime;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_maxBlinkTime;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomBlinkTime;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_blinkTime;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeOfLastBlink;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isBlinking;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mouthSwitchTime;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool talk;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CharacterModel.Emotion m_currentEmotion;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private CharacterModel.Emotion m_shownEmotion;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1615F8C", Offset = "0x1615F8C", VA = "0x1615F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1616BE8", Offset = "0x1616BE8", VA = "0x1616BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1616F80", Offset = "0x1616F80", VA = "0x1616F80")]
	public void StartTalking()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x16170BC", Offset = "0x16170BC", VA = "0x16170BC")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1616C80", Offset = "0x1616C80", VA = "0x1616C80")]
	private Transform SetMouthShape(Transform old_shape)
	{
		return null;
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x16170E8", Offset = "0x16170E8", VA = "0x16170E8")]
	public void SetEmotion(CharacterModel.Emotion emotion)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1616F8C", Offset = "0x1616F8C", VA = "0x1616F8C")]
	private void HideAllMouths()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1616B44", Offset = "0x1616B44", VA = "0x1616B44")]
	private void UpdateEmotion(bool force = false)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1616B38", Offset = "0x1616B38", VA = "0x1616B38")]
	private float MouthSwitchTime()
	{
		return default(float);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1616E70", Offset = "0x1616E70", VA = "0x1616E70")]
	public void BlinkController()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x16170F8", Offset = "0x16170F8", VA = "0x16170F8")]
	public Mouth()
	{
	}
}
[Token(Token = "0x2000178")]
[SelectionBase]
public class Person : StaticMapped<Person>, ISaveableComponent
{
	[Token(Token = "0x2000179")]
	public class PersonEvent : UnityEvent<Person>
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1062518", Offset = "0x1062518", VA = "0x1062518")]
		public PersonEvent()
		{
		}
	}

	[Token(Token = "0x200017A")]
	public class HoldEvent : UnityEvent<HoldableItem>
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1062480", Offset = "0x1062480", VA = "0x1062480")]
		public HoldEvent()
		{
		}
	}

	[Token(Token = "0x200017B")]
	public class PersonBuildingEvent : UnityEvent<Person, Building>
	{
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x10624CC", Offset = "0x10624CC", VA = "0x10624CC")]
		public PersonBuildingEvent()
		{
		}
	}

	[Token(Token = "0x200017C")]
	private struct Visit
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool successful;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1062564", Offset = "0x1062564", VA = "0x1062564")]
		public Visit(float t, bool s)
		{
		}
	}

	[Token(Token = "0x200017D")]
	public enum ChatStatus
	{
		[Token(Token = "0x400085A")]
		TooBusyToChat,
		[Token(Token = "0x400085B")]
		AvailableToChat,
		[Token(Token = "0x400085C")]
		Chatting,
		[Token(Token = "0x400085D")]
		ChatLeader,
		[Token(Token = "0x400085E")]
		ChatCancelled
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A08", Offset = "0x8D5A08")]
	private sealed class <Start>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] <intro>5__2;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x1062430", Offset = "0x1062430", VA = "0x1062430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x1062478", Offset = "0x1062478", VA = "0x1062478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x1061080", Offset = "0x1061080", VA = "0x1061080")]
		[DebuggerHidden]
		public <Start>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x10610AC", Offset = "0x10610AC", VA = "0x10610AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x10610B0", Offset = "0x10610B0", VA = "0x10610B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1062438", Offset = "0x1062438", VA = "0x1062438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A18", Offset = "0x8D5A18")]
	private sealed class <PokedUpdate>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <targetObject>5__2;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x10607E4", Offset = "0x10607E4", VA = "0x10607E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x106082C", Offset = "0x106082C", VA = "0x106082C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1060120", Offset = "0x1060120", VA = "0x1060120")]
		[DebuggerHidden]
		public <PokedUpdate>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x106014C", Offset = "0x106014C", VA = "0x106014C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1060150", Offset = "0x1060150", VA = "0x1060150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x10607EC", Offset = "0x10607EC", VA = "0x10607EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A28", Offset = "0x8D5A28")]
	private sealed class <>c
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<(Vector3, float)> <>9__199_0;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x105EF78", Offset = "0x105EF78", VA = "0x105EF78")]
		public <>c()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x105EF80", Offset = "0x105EF80", VA = "0x105EF80")]
		internal int <UpdateHeld>b__199_0((Vector3, float) a, (Vector3, float) b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A38", Offset = "0x8D5A38")]
	private sealed class <PutDownCoroutine>d__204 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <sp>5__2;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <sr>5__3;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <tp>5__4;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <tr>5__5;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <mt>5__6;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <dur>5__7;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x1061030", Offset = "0x1061030", VA = "0x1061030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x1061078", Offset = "0x1061078", VA = "0x1061078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1060834", Offset = "0x1060834", VA = "0x1060834")]
		[DebuggerHidden]
		public <PutDownCoroutine>d__204(int <>1__state)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1060860", Offset = "0x1060860", VA = "0x1060860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1060864", Offset = "0x1060864", VA = "0x1060864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1061038", Offset = "0x1061038", VA = "0x1061038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A48", Offset = "0x8D5A48")]
	private sealed class <FreeFloatingCR>d__206 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <helpDuration>5__2;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <rotSpeed>5__4;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x105F444", Offset = "0x105F444", VA = "0x105F444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x105F48C", Offset = "0x105F48C", VA = "0x105F48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x105F21C", Offset = "0x105F21C", VA = "0x105F21C")]
		[DebuggerHidden]
		public <FreeFloatingCR>d__206(int <>1__state)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x105F248", Offset = "0x105F248", VA = "0x105F248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x105F24C", Offset = "0x105F24C", VA = "0x105F24C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x105F44C", Offset = "0x105F44C", VA = "0x105F44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A58", Offset = "0x8D5A58")]
	private sealed class <GetPotentialActivities>d__212 : IEnumerable<ActivityItem>, IEnumerable, IEnumerator<ActivityItem>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ActivityItem <>2__current;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person <>4__this;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, ActivityItem>.ValueCollection.Enumerator <>7__wrap1;

		[Token(Token = "0x170000E1")]
		private ActivityItem System.Collections.Generic.IEnumerator<ActivityItem>.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x105F774", Offset = "0x105F774", VA = "0x105F774", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x105F7BC", Offset = "0x105F7BC", VA = "0x105F7BC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x105F494", Offset = "0x105F494", VA = "0x105F494")]
		[DebuggerHidden]
		public <GetPotentialActivities>d__212(int <>1__state)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x105F4CC", Offset = "0x105F4CC", VA = "0x105F4CC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x105F53C", Offset = "0x105F53C", VA = "0x105F53C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x105F4E8", Offset = "0x105F4E8", VA = "0x105F4E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x105F77C", Offset = "0x105F77C", VA = "0x105F77C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x105F7C4", Offset = "0x105F7C4", VA = "0x105F7C4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<ActivityItem> System.Collections.Generic.IEnumerable<ActivityItem>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x105F874", Offset = "0x105F874", VA = "0x105F874", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A68", Offset = "0x8D5A68")]
	private sealed class <DoAbilityUntilDone>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0x105F1CC", Offset = "0x105F1CC", VA = "0x105F1CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x105F214", Offset = "0x105F214", VA = "0x105F214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x105EFB4", Offset = "0x105EFB4", VA = "0x105EFB4")]
		[DebuggerHidden]
		public <DoAbilityUntilDone>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x105EFE0", Offset = "0x105EFE0", VA = "0x105EFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x105EFE4", Offset = "0x105EFE4", VA = "0x105EFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x105F1D4", Offset = "0x105F1D4", VA = "0x105F1D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A78", Offset = "0x8D5A78")]
	private sealed class <JoinChatSession>d__251 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person leader;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0x105FDC8", Offset = "0x105FDC8", VA = "0x105FDC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x105FE10", Offset = "0x105FE10", VA = "0x105FE10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x105F878", Offset = "0x105F878", VA = "0x105F878")]
		[DebuggerHidden]
		public <JoinChatSession>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x105F8A4", Offset = "0x105F8A4", VA = "0x105F8A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x105F8A8", Offset = "0x105F8A8", VA = "0x105F8A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x105FDD0", Offset = "0x105FDD0", VA = "0x105FDD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A88", Offset = "0x8D5A88")]
	private sealed class <LeadChatSession>d__255 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Person <>4__this;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lastChat>5__2;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <chatAboutWant>5__3;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <chatSubject>5__4;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0x10600D0", Offset = "0x10600D0", VA = "0x10600D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0x1060118", Offset = "0x1060118", VA = "0x1060118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x105FE18", Offset = "0x105FE18", VA = "0x105FE18")]
		[DebuggerHidden]
		public <LeadChatSession>d__255(int <>1__state)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x105FE44", Offset = "0x105FE44", VA = "0x105FE44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x105FE48", Offset = "0x105FE48", VA = "0x105FE48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x10600D8", Offset = "0x10600D8", VA = "0x10600D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DCFE8", Offset = "0x8DCFE8")]
	public static bool ms_doIntro;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PersonEvent OnPersonJoinsSociety;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_readyToJoinSociety;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BehaviourTreeOwner m_behaviourTree;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public BehaviourTree m_jobBehaviourTree;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BehaviourTree m_abilityBehaviourTree;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ReadOnly]
	[Saveable]
	public Building m_inBuilding;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Saveable]
	[ReadOnly]
	public double m_willLeaveBuildingAtEpochTime;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public FolkHappiness m_happiness;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_doIntro;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool m_autoStartBehaviour;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Saveable]
	public Interest m_primaryInterest;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Saveable]
	public Interest m_secondaryInterest;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_infoMenuAttachPt;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Saveable]
	public Building m_house;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Saveable]
	public Building m_assignedHouse;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PersonHousing housing;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Building m_currentlyBuilding;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD110", Offset = "0x8DD110")]
	[HideInInspector]
	public CharacterModel m_charaModel;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FolkAnimationController m_charModelAnimationController;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD15C", Offset = "0x8DD15C")]
	public Handedness m_chirality;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_eyes;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_head;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_rightHand;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_leftHand;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform m_backpack;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_rightHandDefaultLocalPos;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_leftHandDefaultLocalPos;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD194", Offset = "0x8DD194")]
	[ReadOnly]
	[Saveable]
	public double m_bedTime;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[ReadOnly]
	[Saveable]
	public bool m_hasStaminaBoost;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	[HideInInspector]
	[Saveable]
	public bool m_asleep;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	[Saveable]
	public double m_wakeUpTime;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PersonSleepCycle sleepCycle;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_sleepyZzzs;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float m_ZzzsScale;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DD298", Offset = "0x8DD298")]
	public static bool SleepyZzzsAsTexticles;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject m_sleepVfxPrefab;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject m_sleepVfxInstance;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[ReadOnly]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD2E0", Offset = "0x8DD2E0")]
	public HeldItems m_heldItems;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public HoldEvent OnItemHeld;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HoldEvent OnPlayerGivesItem;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public HoldEvent OnPlayerTakesItem;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD32C", Offset = "0x8DD32C")]
	public float m_viewCone;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_viewDistance;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Disc m_viewConeVis;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LayerMask m_viewLayerMask;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> m_appealingThingsIveSeen;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float m_attentionSpan;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[Saveable]
	public int TotalAppealingThingsIveSeen;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public UnityEvent OnSawSomethingImInterestedIn;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD374", Offset = "0x8DD374")]
	public AgentController m_agentControl;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float m_minTimeBetweenTryToGoPlaces;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD3C0", Offset = "0x8DD3C0")]
	public float m_chatSpacing;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Saveable]
	public bool m_introComplete;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Person ms_someoneChatting;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static UnityEvent m_onSomeoneFinishedIntro;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD408", Offset = "0x8DD408")]
	public bool[] m_visitedToday;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD440", Offset = "0x8DD440")]
	public PersonExpressions expressions;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string m_voiceSelectorRTPC;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string m_talkPlaySFX;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string m_talkStopSFX;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string m_searchingSFX;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string m_getHappinessSFX;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string m_getHappinessLotsSFX;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public string m_homeBuildSFX;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string m_heldSFX;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string m_droppedSFX;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string m_hoverSFX;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float ExtraHappySFXThreshold;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD478", Offset = "0x8DD478")]
	public FolkJobs Jobs;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD4B0", Offset = "0x8DD4B0")]
	public string[] m_nameFormats;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 m_lastPos;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[Saveable]
	public int m_seed;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private XXHash m_rand;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD4F8", Offset = "0x8DD4F8")]
	public float BaseAsteroidToScrapRate;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	[HideInInspector]
	public float AsteroidToScrapRateMultiplier;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float BaseConstructionRate;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	[HideInInspector]
	public float ConstructionRateMultiplier;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float ScrapEfficiencyMultiplier;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float m_maxScrapCarry;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD550", Offset = "0x8DD550")]
	private FolkAbility <m_ability>k__BackingField;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool m_canDoAbility;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject m_canDoAbilityFXPrefab;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject m_canNotDoAbilityFXPrefab;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	[Saveable]
	public bool m_beenToBirthdayParty;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD598", Offset = "0x8DD598")]
	public float m_doorSelectDistMax;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD5D0", Offset = "0x8DD5D0")]
	public bool EmotionAutoUpdates;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float m_walkSpeedHungryMultiplier;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool m_isPickedUp;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public PersonEvent OnMovedIntoHouse;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public PersonBuildingEvent OnEnteredBuilding;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public PersonBuildingEvent OnExitedBuilding;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public PersonEvent OnWakeUp;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD608", Offset = "0x8DD608")]
	private int m_minCheckAfterFramesVal;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private int m_infrequentUpdateSpacing;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int ms_nextFrameCheckOffset;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static BezierLine[] ms_bezLine;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static SpriteRenderer[] ms_dropIndicator;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Color m_lineColour;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject m_placementIndicatorPrefab;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject m_dropIndicatorPrefab;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static List<TwoStateSelection> ms_placePts;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD640", Offset = "0x8DD640")]
	public float m_pokeInfoDuration;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Coroutine m_pokeCR;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private FolkAnimationController.Emotions m_spikedEmotion;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float m_spikedEmotionTimeLeft;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Collider[] ms_nearbyColliders;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static RaycastHit[] ms_nearbyRaycastHits;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private List<Interest> m_visibleNow;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private float m_itemFlyTime;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public float m_doorOpenCloseDuration;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool m_agentWasEnabledOnPickup;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Coroutine GettingPutDownCR;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Coroutine IsFreeFloatingCR;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public Door m_playerSelectedDoor;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public HoldableItem m_playerSelectedItem;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public Door m_playerDroppedOnDoor;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[HideInInspector]
	public bool m_prioritiseJob;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public float m_placePointRadius;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float m_placePointRadiusMax;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public float m_heldGotoGroundDist;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public float m_heldGotoGroundSpeed;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject m_landOnGroundFXPrefab;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private List<(Vector3, float)> m_closePoints;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool handWasLeft;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public FloatRange m_buildingStayTimeGameHours;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Building m_aiTargetBuilding;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private Dictionary<Building, Visit> m_visitationLog;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Dictionary<ActivityItem, Visit> m_activityLog;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public double m_minHrsBetweenActivities;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private double m_lastActivityStartTime;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private double m_lastActivityTime;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public ActivityItem m_targetActivity;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private bool m_initialized;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD6B8", Offset = "0x8DD6B8")]
	public ChatStatus m_chatStatus;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public float m_chatRadius;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public FloatRange m_chatDurationSecs;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public float m_thisChatDurationSecs;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public double m_hrsBetweenChats;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public double m_lastChatFinishedAt;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Person m_hasRequestedAChat;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public List<Person> m_chatGroup;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public float m_chatUtteranceSeparationSecs;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private string[] m_chatWords;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private List<string> m_wants;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private string m_aiStatus;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private GameObject m_aiObject;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private Interest m_givenHPInterest;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private FacilityCategory m_givenHPCategory;

	[Token(Token = "0x170000CF")]
	public BehaviourTreeOwner BehaviourTree
	{
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xECFA80", Offset = "0xECFA80", VA = "0xECFA80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public FolkAnimationController AnimationController
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xECFA88", Offset = "0xECFA88", VA = "0xECFA88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public int NumAppealingThingsIveSeen
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xECFA90", Offset = "0xECFA90", VA = "0xECFA90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D2")]
	public static UnityEvent OnSomeoneFinishedIntro
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xECFAE4", Offset = "0xECFAE4", VA = "0xECFAE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public NVRInteractableItem NVRII
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xECFE48", Offset = "0xECFE48", VA = "0xECFE48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public XXHash Rand
	{
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xECFE50", Offset = "0xECFE50", VA = "0xECFE50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public FolkAbility m_ability
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xECFE58", Offset = "0xECFE58", VA = "0xECFE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E97A8", Offset = "0x8E97A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xECFE60", Offset = "0xECFE60", VA = "0xECFE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E97B8", Offset = "0x8E97B8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public bool IsPickedUp
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xECFE70", Offset = "0xECFE70", VA = "0xECFE70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D7")]
	public IEnumerable<HoldableItem> AllHeldItems
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xED2910", Offset = "0xED2910", VA = "0xED2910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public bool Initialized
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xED5998", Offset = "0xED5998", VA = "0xED5998")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xECF814", Offset = "0xECF814", VA = "0xECF814")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E9794", Offset = "0x8E9794")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xECF954", Offset = "0xECF954", VA = "0xECF954")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xECFBC4", Offset = "0xECFBC4", VA = "0xECFBC4")]
	public void SetVisitedToday(FacilityCategory fc, bool b)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xECFDFC", Offset = "0xECFDFC", VA = "0xECFDFC")]
	public void AnnounceLeavingFacility(FacilityCategory fc)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xECFE40", Offset = "0xECFE40", VA = "0xECFE40")]
	public string GetHappinessSFX()
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xECFE78", Offset = "0xECFE78", VA = "0xECFE78")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E97C8", Offset = "0x8E97C8")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xECFEDC", Offset = "0xECFEDC", VA = "0xECFEDC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xECFFC0", Offset = "0xECFFC0", VA = "0xECFFC0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xED002C", Offset = "0xED002C", VA = "0xED002C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xED00A8", Offset = "0xED00A8", VA = "0xED00A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xED0428", Offset = "0xED0428", VA = "0xED0428")]
	private void OnHousingStateChanged()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xED0478", Offset = "0xED0478", VA = "0xED0478")]
	public void Setup(Interest interest, bool joinSocietyImmediately)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xED06D4", Offset = "0xED06D4", VA = "0xED06D4")]
	private void SetupUI()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xED1014", Offset = "0xED1014", VA = "0xED1014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E97DC", Offset = "0x8E97DC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xED108C", Offset = "0xED108C", VA = "0xED108C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xED2600", Offset = "0xED2600", VA = "0xED2600", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xED2674", Offset = "0xED2674", VA = "0xED2674")]
	public void TrySay(string s)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xED26BC", Offset = "0xED26BC", VA = "0xED26BC")]
	public void Say(string s, CharacterModel.Emotion emotion = CharacterModel.Emotion.Happy)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xED2724", Offset = "0xED2724", VA = "0xED2724")]
	public void ShowThought(string shortThought, string detailedThought = "", CharacterModel.Emotion emotion = CharacterModel.Emotion.Neutral, [Optional] string sfxId)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xED27AC", Offset = "0xED27AC", VA = "0xED27AC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xED288C", Offset = "0xED288C", VA = "0xED288C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E983C", Offset = "0x8E983C")]
	private IEnumerator PokedUpdate()
	{
		return null;
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xED2904", Offset = "0xED2904", VA = "0xED2904")]
	public void SpikeEmotion(FolkAnimationController.Emotions emotion, float durationSeconds)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xED2554", Offset = "0xED2554", VA = "0xED2554")]
	private void UpdateEmotion()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xED251C", Offset = "0xED251C", VA = "0xED251C")]
	private void UpdateHeldItems()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xED292C", Offset = "0xED292C", VA = "0xED292C")]
	public static void CheckForBadlyHeldItems()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xECFF14", Offset = "0xECFF14", VA = "0xECFF14")]
	private void UpdateViewConeVis()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xED11B0", Offset = "0xED11B0", VA = "0xED11B0")]
	private void CheckView()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xED1444", Offset = "0xED1444", VA = "0xED1444")]
	private void UpdateTiredDisplay()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xED2B24", Offset = "0xED2B24", VA = "0xED2B24")]
	private void CheckAppealingObject(int i)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xED2E6C", Offset = "0xED2E6C", VA = "0xED2E6C")]
	private bool DoesObjectAppeal(Collider appealingCollider, out GameObject appealingObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xED3070", Offset = "0xED3070", VA = "0xED3070")]
	private bool HasSeenAppealingObject(GameObject appealingObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xED31E8", Offset = "0xED31E8", VA = "0xED31E8")]
	public void DropScrap()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xED323C", Offset = "0xED323C", VA = "0xED323C")]
	public void DropNotScrap()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xED3290", Offset = "0xED3290", VA = "0xED3290")]
	public void DropRandomItem()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xED32AC", Offset = "0xED32AC", VA = "0xED32AC")]
	public HeldItems.Holds GetFreeHand(HoldSlotType holdType)
	{
		return default(HeldItems.Holds);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xED32D4", Offset = "0xED32D4", VA = "0xED32D4")]
	public Transform GetFreeHandTransform(HoldSlotType holdType)
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xED3368", Offset = "0xED3368", VA = "0xED3368")]
	public void HoldItem(HoldableItem itemToHold, bool givenByPlayer = false, bool teleportToHand = false, bool dropSomethingIfHandsAreFull = false, float flyTime = -1f)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xED332C", Offset = "0xED332C", VA = "0xED332C")]
	public Transform GetHandForHold(HeldItems.Holds hold)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xED3530", Offset = "0xED3530", VA = "0xED3530")]
	public bool IsHoldingAnything()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xED354C", Offset = "0xED354C", VA = "0xED354C")]
	public bool IsHoldingSomethingInEitherHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xED3568", Offset = "0xED3568", VA = "0xED3568")]
	public bool CanHoldMore()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FB")]
	public bool IsHolding<T>()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xED3584", Offset = "0xED3584", VA = "0xED3584")]
	public bool IsHoldingThisScrap(ScrapCoin coin)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xED35A0", Offset = "0xED35A0", VA = "0xED35A0")]
	public bool CanCarryMoreScrap()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xED35D8", Offset = "0xED35D8", VA = "0xED35D8")]
	public bool TryGetHeldScrap(out ScrapCoin scrapCoin)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xED35F4", Offset = "0xED35F4", VA = "0xED35F4")]
	public void ReleaseHeldItem(HoldableItem item, bool takenByPlayer = false)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xED361C", Offset = "0xED361C", VA = "0xED361C")]
	public void ReleaseHeldItem(HeldItems.Holds hold, bool takenByPlayer = false)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xED3644", Offset = "0xED3644", VA = "0xED3644")]
	public void AddBackpack()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xED3660", Offset = "0xED3660", VA = "0xED3660")]
	public void RemoveBackpack()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xED367C", Offset = "0xED367C", VA = "0xED367C")]
	public void SetHouse(Building b)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xED371C", Offset = "0xED371C", VA = "0xED371C")]
	public void AssignHouse(Building b)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xED38A4", Offset = "0xED38A4", VA = "0xED38A4")]
	public void PickedUp()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xED1698", Offset = "0xED1698", VA = "0xED1698")]
	private void UpdateHeld()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xED4024", Offset = "0xED4024", VA = "0xED4024")]
	private void DrawTargetLocationLine(float dsqToTarget, float maxAllowedDSq, Vector3 targetP1, Vector3 targetP2)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xED433C", Offset = "0xED433C", VA = "0xED433C")]
	public void PutDown()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xED4A98", Offset = "0xED4A98", VA = "0xED4A98")]
	private bool ValidateJob(FolkJobs.JobTypes newJob, Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xED4B6C", Offset = "0xED4B6C", VA = "0xED4B6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E989C", Offset = "0x8E989C")]
	private IEnumerator PutDownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xED4BE4", Offset = "0xED4BE4", VA = "0xED4BE4")]
	public void StartFloating()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xED4C74", Offset = "0xED4C74", VA = "0xED4C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E98FC", Offset = "0x8E98FC")]
	private IEnumerator FreeFloatingCR()
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xED4CEC", Offset = "0xED4CEC", VA = "0xED4CEC")]
	public void LandOnGroundFX()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xED37EC", Offset = "0xED37EC", VA = "0xED37EC")]
	public void InterruptBehaviourTreeIfNotBusy()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xED4DA0", Offset = "0xED4DA0", VA = "0xED4DA0")]
	private static float TimeSince(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xED4DC8", Offset = "0xED4DC8", VA = "0xED4DC8")]
	public Facility FindAppealingFacility()
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xED52D8", Offset = "0xED52D8", VA = "0xED52D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E995C", Offset = "0x8E995C")]
	public IEnumerable<ActivityItem> GetPotentialActivities()
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xED5350", Offset = "0xED5350", VA = "0xED5350")]
	public void LogVisit(Building b, bool wasSuccess)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xED51C4", Offset = "0xED51C4", VA = "0xED51C4")]
	private bool CanTryToVisit(Building b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xED545C", Offset = "0xED545C", VA = "0xED545C")]
	public bool WantsToDoActivity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xED54CC", Offset = "0xED54CC", VA = "0xED54CC")]
	public void LogVisit(ActivityItem ai, bool wasSuccess)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xED5604", Offset = "0xED5604", VA = "0xED5604")]
	private bool CanTryToVisit(ActivityItem ai)
	{
		return default(bool);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xED5714", Offset = "0xED5714", VA = "0xED5714")]
	public void GoToSleep()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xED574C", Offset = "0xED574C", VA = "0xED574C")]
	private void DisplaySleepVfx()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xED3D3C", Offset = "0xED3D3C", VA = "0xED3D3C")]
	public void WakeUp(WakeUpType wakeUpType)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xED57E8", Offset = "0xED57E8", VA = "0xED57E8")]
	public void RegisterAbility(FolkAbility ability)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xED5828", Offset = "0xED5828", VA = "0xED5828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E99BC", Offset = "0x8E99BC")]
	public IEnumerator DoAbilityUntilDone()
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xED58A0", Offset = "0xED58A0", VA = "0xED58A0")]
	public bool HasJob()
	{
		return default(bool);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xED58C4", Offset = "0xED58C4", VA = "0xED58C4")]
	public void EnterBuilding(Building building, float duration)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xED5990", Offset = "0xED5990", VA = "0xED5990")]
	public void StartEnteringBuilding(Building building)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xED3CF8", Offset = "0xED3CF8", VA = "0xED3CF8")]
	public void LeaveBuilding()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xED59A0", Offset = "0xED59A0", VA = "0xED59A0")]
	private bool HasChattedRecently()
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xED5A10", Offset = "0xED5A10", VA = "0xED5A10")]
	public bool SearchForChatPals()
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xED5D5C", Offset = "0xED5D5C", VA = "0xED5D5C")]
	public void CreateChatSession()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xED5EF8", Offset = "0xED5EF8", VA = "0xED5EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9A1C", Offset = "0x8E9A1C")]
	public IEnumerator JoinChatSession(Person leader)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xED5F8C", Offset = "0xED5F8C", VA = "0xED5F8C")]
	private void UpdateWants()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xED6018", Offset = "0xED6018", VA = "0xED6018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9A7C", Offset = "0x8E9A7C")]
	private IEnumerator LeadChatSession()
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xED3EC4", Offset = "0xED3EC4", VA = "0xED3EC4")]
	private void CancelChatSession()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xED6090", Offset = "0xED6090", VA = "0xED6090")]
	public bool CanDoAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xED6098", Offset = "0xED6098", VA = "0xED6098")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9ADC", Offset = "0x8E9ADC")]
	private void SetAbilityActive()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xECFCBC", Offset = "0xECFCBC", VA = "0xECFCBC")]
	public void SetCanDoAbility(bool b)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xED60A0", Offset = "0xED60A0", VA = "0xED60A0")]
	public void GiveHappinessPoint(Interest interest, FacilityCategory category)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xED617C", Offset = "0xED617C", VA = "0xED617C")]
	public bool GetGivenHP(out Interest interest, out FacilityCategory category)
	{
		return default(bool);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xED5EC0", Offset = "0xED5EC0", VA = "0xED5EC0")]
	public void SetAIStatus(string s, GameObject o)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xED6258", Offset = "0xED6258", VA = "0xED6258", Slot = "7")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xED6278", Offset = "0xED6278", VA = "0xED6278", Slot = "8")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xED627C", Offset = "0xED627C", VA = "0xED627C", Slot = "9")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xED62E4", Offset = "0xED62E4", VA = "0xED62E4")]
	private void MoveIntoOwnHouse()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xED63D8", Offset = "0xED63D8", VA = "0xED63D8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9AF4", Offset = "0x8E9AF4")]
	private static void MakeSuperBuilders()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xED65C0", Offset = "0xED65C0", VA = "0xED65C0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9B3C", Offset = "0x8E9B3C")]
	private static void WakeEveryone()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xED6728", Offset = "0xED6728", VA = "0xED6728")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9B84", Offset = "0x8E9B84")]
	private static void EveryoneStayAwake()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xED68C0", Offset = "0xED68C0", VA = "0xED68C0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9BCC", Offset = "0x8E9BCC")]
	private static void EveryoneSkills()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xED6A2C", Offset = "0xED6A2C", VA = "0xED6A2C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9C14", Offset = "0x8E9C14")]
	private static void StaminaBoost()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xED6B98", Offset = "0xED6B98", VA = "0xED6B98")]
	public Person()
	{
	}
}
[Token(Token = "0x2000187")]
public class PersonGenerator : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A98", Offset = "0x8D5A98")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Interest inter;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PersonGenerator <>4__this;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1062A74", Offset = "0x1062A74", VA = "0x1062A74")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1062A7C", Offset = "0x1062A7C", VA = "0x1062A7C")]
		internal void <GetRuntimeDebugMenuItems>b__0()
		{
		}
	}

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_personPrefab;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntRange m_numInterests;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> m_spawnPoints;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_parentTransform;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextSpawnIdx;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_spawnAtStart;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_startSpawnUniqueInterests;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_doIntros;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<DebugMenu.voidDelegate> delegates;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1256384", Offset = "0x1256384", VA = "0x1256384")]
	public void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x12566A4", Offset = "0x12566A4", VA = "0x12566A4")]
	public void GetRuntimeDebugMenuItems(DebugMenu dm)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x12568E4", Offset = "0x12568E4", VA = "0x12568E4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8E9EFC", Offset = "0x8E9EFC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9EFC", Offset = "0x8E9EFC")]
	public void GenerateNew()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x12568F4", Offset = "0x12568F4", VA = "0x12568F4")]
	public void GenerateNew(bool joinSocietyImmediately = false)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1256904", Offset = "0x1256904", VA = "0x1256904")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E9F60", Offset = "0x8E9F60")]
	public void GenerateAllInterests()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1256480", Offset = "0x1256480", VA = "0x1256480")]
	public Person GenerateNew(Interest forceInterest, bool holdRandomObject = false, bool joinSocietyImmediately = false)
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1256AA0", Offset = "0x1256AA0", VA = "0x1256AA0")]
	private static void HoldRandomObject(Person p)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1256C30", Offset = "0x1256C30", VA = "0x1256C30")]
	public PersonGenerator()
	{
	}
}
[Token(Token = "0x2000189")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_xSpeed;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_ySpeed;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_zSpeed;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x11A2624", Offset = "0x11A2624", VA = "0x11A2624")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x11A2718", Offset = "0x11A2718", VA = "0x11A2718")]
	public Rotate()
	{
	}
}
[Token(Token = "0x200018A")]
public class FolkFinder : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	private enum State
	{
		[Token(Token = "0x40008A6")]
		Idle,
		[Token(Token = "0x40008A7")]
		AnalysingObject,
		[Token(Token = "0x40008A8")]
		LaunchingCollector,
		[Token(Token = "0x40008A9")]
		WaitingForCollector,
		[Token(Token = "0x40008AA")]
		ReceivingCollector,
		[Token(Token = "0x40008AB")]
		InvalidObject
	}

	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5AA8", Offset = "0x8D5AA8")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinder <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0xE7CFF0", Offset = "0xE7CFF0", VA = "0xE7CFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0xE7D038", Offset = "0xE7D038", VA = "0xE7D038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xE7CD08", Offset = "0xE7CD08", VA = "0xE7CD08")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xE7CD34", Offset = "0xE7CD34", VA = "0xE7CD34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xE7CD38", Offset = "0xE7CD38", VA = "0xE7CD38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xE7CFF8", Offset = "0xE7CFF8", VA = "0xE7CFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5AB8", Offset = "0x8D5AB8")]
	private sealed class <CloseDoorCR>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinder <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xE7CCB8", Offset = "0xE7CCB8", VA = "0xE7CCB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xE7CD00", Offset = "0xE7CD00", VA = "0xE7CD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xE7CBAC", Offset = "0xE7CBAC", VA = "0xE7CBAC")]
		[DebuggerHidden]
		public <CloseDoorCR>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xE7CBD8", Offset = "0xE7CBD8", VA = "0xE7CBD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xE7CBDC", Offset = "0xE7CBDC", VA = "0xE7CBDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xE7CCC0", Offset = "0xE7CCC0", VA = "0xE7CCC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FolkFinderDrone m_drone;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EstateAgent m_estateAgent;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_launchDurationSecs;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_droneTravelDurationOverrideDays;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StateMachine<State> m_sm;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6F0", Offset = "0x8DD6F0")]
	private int <m_launchesAvailable>k__BackingField;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_happinessPerLaunch;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_nextLaunchHPRequired;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnDataChanged;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Spaceport m_spaceport;

	[Token(Token = "0x170000E9")]
	public int m_launchesAvailable
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x11BD4D8", Offset = "0x11BD4D8", VA = "0x11BD4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FA8", Offset = "0x8E9FA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x11BD4E0", Offset = "0x11BD4E0", VA = "0x11BD4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FB8", Offset = "0x8E9FB8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x11BD4E8", Offset = "0x11BD4E8", VA = "0x11BD4E8")]
	public void SetCanNeverLaunch()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x11BD4FC", Offset = "0x11BD4FC", VA = "0x11BD4FC")]
	public bool IsIdle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x11BD550", Offset = "0x11BD550", VA = "0x11BD550")]
	private void OnHPTargetMet()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x11BD8C0", Offset = "0x11BD8C0", VA = "0x11BD8C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x11BDAC0", Offset = "0x11BDAC0", VA = "0x11BDAC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9FC8", Offset = "0x8E9FC8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x11BDB38", Offset = "0x11BDB38", VA = "0x11BDB38")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB028", Offset = "0x8EB028")]
	private void DebugLaunchGetZero()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x11BDBE0", Offset = "0x11BDBE0", VA = "0x11BDBE0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB040", Offset = "0x8EB040")]
	private void DebugLaunchGetOne()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x11BDCD4", Offset = "0x11BDCD4", VA = "0x11BDCD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x11BDD28", Offset = "0x11BDD28", VA = "0x11BDD28")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x11BDDC8", Offset = "0x11BDDC8", VA = "0x11BDDC8")]
	private void UpdateLaunchingCollector()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x11BDEFC", Offset = "0x11BDEFC", VA = "0x11BDEFC")]
	private void UpdateWaitingForCollector()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x11BDF00", Offset = "0x11BDF00", VA = "0x11BDF00")]
	private void UpdateReceivingCollector()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x11BDF04", Offset = "0x11BDF04", VA = "0x11BDF04")]
	public void StartReceiving()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x11BDF5C", Offset = "0x11BDF5C", VA = "0x11BDF5C")]
	public void EndReceiving()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x11BE008", Offset = "0x11BE008", VA = "0x11BE008")]
	public void OpenSpaceportDoor()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x11BDFDC", Offset = "0x11BDFDC", VA = "0x11BDFDC")]
	public void CloseSpaceportDoor()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x11BE024", Offset = "0x11BE024", VA = "0x11BE024")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB058", Offset = "0x8EB058")]
	private IEnumerator CloseDoorCR()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x11BE09C", Offset = "0x11BE09C", VA = "0x11BE09C")]
	public FolkFinder()
	{
	}
}
[Token(Token = "0x200018E")]
public abstract class FolkFinderDrone : MonoBehaviour
{
	[Token(Token = "0x600089F")]
	[Address(RVA = "0x11BE11C", Offset = "0x11BE11C", VA = "0x11BE11C", Slot = "4")]
	public virtual void Launch(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x11BE120", Offset = "0x11BE120", VA = "0x11BE120")]
	protected FolkFinderDrone()
	{
	}
}
[Token(Token = "0x200018F")]
public class FolkFinderDroneStarterBot : FolkFinderDrone
{
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5AC8", Offset = "0x8D5AC8")]
	private sealed class <SearchAndReturn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkFinderDroneStarterBot <>4__this;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FolkFinder folkFinder;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Interest interestToFind;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Building house;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <p>5__3;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <pickedUp>5__4;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <journeyTimeInRealSeconds>5__5;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xE7D4B0", Offset = "0xE7D4B0", VA = "0xE7D4B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xE7D4F8", Offset = "0xE7D4F8", VA = "0xE7D4F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xE7D040", Offset = "0xE7D040", VA = "0xE7D040")]
		[DebuggerHidden]
		public <SearchAndReturn>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xE7D06C", Offset = "0xE7D06C", VA = "0xE7D06C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xE7D070", Offset = "0xE7D070", VA = "0xE7D070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xE7D4B8", Offset = "0xE7D4B8", VA = "0xE7D4B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busStop;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> m_folkLocators;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_journeyDurationDays;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BezierSpline m_spline;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PersonGenerator m_personGen;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Person m_folkOnBoard;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD700", Offset = "0x8DD700")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD700", Offset = "0x8DD700")]
	public float m_collectFolkAtProgress;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_playStartLandingAtRealSecsBefore;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_playLandingAtRealSecsBefore;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD754", Offset = "0x8DD754")]
	public Animator m_anim;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_launchAnimTrigger;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_startLandingAnimTrigger;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_landingAnimTrigger;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD78C", Offset = "0x8DD78C")]
	public string m_sfxFolkAppear;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_sfxBusEnginePlay;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_sfxBusEngineStop;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string m_sfxBusEnginePowerUp;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxBusEnginePowerDown;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x11BE128", Offset = "0x11BE128", VA = "0x11BE128")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x11BE240", Offset = "0x11BE240", VA = "0x11BE240", Slot = "4")]
	public override void Launch(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x11BE338", Offset = "0x11BE338", VA = "0x11BE338")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB158", Offset = "0x8EB158")]
	private IEnumerator SearchAndReturn(FolkFinder folkFinder, Interest interestToFind, Building house)
	{
		return null;
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x11BE3FC", Offset = "0x11BE3FC", VA = "0x11BE3FC")]
	private void PositionBus(float t, BezierSpline spline, Transform trans)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x11BE4F0", Offset = "0x11BE4F0", VA = "0x11BE4F0")]
	private void PickUpPeople(List<Interest> interestsToFind, Building house)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x11BE604", Offset = "0x11BE604", VA = "0x11BE604")]
	private void PickupAPerson(Interest interest, Transform folkLocator, Building house)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x11BE768", Offset = "0x11BE768", VA = "0x11BE768")]
	private void AppearFolk()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x11BE828", Offset = "0x11BE828", VA = "0x11BE828")]
	private void DropFolk()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x11BE904", Offset = "0x11BE904", VA = "0x11BE904")]
	public FolkFinderDroneStarterBot()
	{
	}
}
[Token(Token = "0x2000191")]
public class FreeFloatingStore : MonoBehaviour
{
	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x11C31C8", Offset = "0x11C31C8", VA = "0x11C31C8")]
	public FreeFloatingStore()
	{
	}
}
[Token(Token = "0x2000192")]
public class GameControllerMovement : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_moveSpeed;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_rotSpeed;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DD7C4", Offset = "0x8DD7C4")]
	public static bool m_invertY;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DD80C", Offset = "0x8DD80C")]
	public static float ms_speed;

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x11C3B68", Offset = "0x11C3B68", VA = "0x11C3B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x11C3C5C", Offset = "0x11C3C5C", VA = "0x11C3C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x11C41D4", Offset = "0x11C41D4", VA = "0x11C41D4")]
	public GameControllerMovement()
	{
	}
}
[Token(Token = "0x2000193")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5AD8", Offset = "0x8D5AD8")]
public class GameObjectList : ScriptableObject
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectWithProbabilityList<GameObject> m_gameObjectsWithProbabilities;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x11C4B50", Offset = "0x11C4B50", VA = "0x11C4B50")]
	public GameObject Random()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x11C4BAC", Offset = "0x11C4BAC", VA = "0x11C4BAC")]
	public void Add(GameObject[] list)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x11C4D48", Offset = "0x11C4D48", VA = "0x11C4D48")]
	public GameObjectList()
	{
	}
}
[Token(Token = "0x2000194")]
public class GraphicsDebug : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DD850", Offset = "0x8DD850")]
	public int m_msaa;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_msaaWas;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DD890", Offset = "0x8DD890")]
	public int m_foveatedRendering;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_foveatedRenderingWas;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x12A053C", Offset = "0x12A053C", VA = "0x12A053C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x12A05B0", Offset = "0x12A05B0", VA = "0x12A05B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x12A07E0", Offset = "0x12A07E0", VA = "0x12A07E0")]
	public GraphicsDebug()
	{
	}
}
[Token(Token = "0x2000195")]
public class Hat : MonoBehaviour
{
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x12AD2D4", Offset = "0x12AD2D4", VA = "0x12AD2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x12AD2D8", Offset = "0x12AD2D8", VA = "0x12AD2D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x12AD2DC", Offset = "0x12AD2DC", VA = "0x12AD2DC")]
	public Hat()
	{
	}
}
[Token(Token = "0x2000196")]
public class HelpfulRobot : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x12AF000", Offset = "0x12AF000", VA = "0x12AF000")]
	public void DoFolkArriving()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x12AF058", Offset = "0x12AF058", VA = "0x12AF058")]
	public HelpfulRobot()
	{
	}
}
[Token(Token = "0x2000197")]
public class HighlightEvent : MonoBehaviour
{
	[Token(Token = "0x14000010")]
	public event Action OnHighlighted
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x12AF260", Offset = "0x12AF260", VA = "0x12AF260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB208", Offset = "0x8EB208")]
		add
		{
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x12AF300", Offset = "0x12AF300", VA = "0x12AF300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB218", Offset = "0x8EB218")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnUnhighlighted
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x12AF3A0", Offset = "0x12AF3A0", VA = "0x12AF3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB228", Offset = "0x8EB228")]
		add
		{
		}
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x12AF440", Offset = "0x12AF440", VA = "0x12AF440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB238", Offset = "0x8EB238")]
		remove
		{
		}
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x12AF4E0", Offset = "0x12AF4E0", VA = "0x12AF4E0")]
	public void Highlighted()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x12AF4F4", Offset = "0x12AF4F4", VA = "0x12AF4F4")]
	public void Unhighlighted()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x12AF508", Offset = "0x12AF508", VA = "0x12AF508")]
	public HighlightEvent()
	{
	}
}
[Token(Token = "0x2000198")]
public class HighlightStyleOverride : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_outlineMat;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_outlineCutThroughMat;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_placementOKMaterial;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_placementBadMaterial;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_TNTCountdownMaterial;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_placementSuggestionMaterial;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_copyPropertyBlock;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x12AF580", Offset = "0x12AF580", VA = "0x12AF580")]
	public HighlightStyleOverride()
	{
	}
}
[Token(Token = "0x2000199")]
[ExecuteInEditMode]
public class Highlighter : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	[Flags]
	public enum Style
	{
		[Token(Token = "0x40008ED")]
		None = 0,
		[Token(Token = "0x40008EE")]
		Outline = 1,
		[Token(Token = "0x40008EF")]
		OutlineCutThrough = 2,
		[Token(Token = "0x40008F0")]
		PlacementOK = 4,
		[Token(Token = "0x40008F1")]
		PlacementBad = 8,
		[Token(Token = "0x40008F2")]
		TNTCountdown = 0x10,
		[Token(Token = "0x40008F3")]
		PlacementSuggestion = 0x20
	}

	[Token(Token = "0x200019B")]
	private struct HighlightedObject
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Style style;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshFilter[] meshFilters;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HighlightStyleOverride[] overrides;
	}

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Highlighter Instance;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_outlineMat;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_outlineCutThroughMat;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_placementOKMaterial;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_placementBadMaterial;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_TNTCountdownMaterial;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_placementSuggestionMaterial;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[OVRLayer]
	public int m_renderLayer;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameObject, HighlightedObject> m_highlighted;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> texNames;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x12AF588", Offset = "0x12AF588", VA = "0x12AF588")]
	private Material GetMat(Style s, [Optional] HighlightStyleOverride styleOverride)
	{
		return null;
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x12AF624", Offset = "0x12AF624", VA = "0x12AF624")]
	public static void Highlight(bool value, GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x12AFCEC", Offset = "0x12AFCEC", VA = "0x12AFCEC")]
	public static void HighlightOn(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x12AFD74", Offset = "0x12AFD74", VA = "0x12AFD74")]
	public static void HighlightOn(GameObject target, Style style, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x12AFDFC", Offset = "0x12AFDFC", VA = "0x12AFDFC")]
	public static void HighlightOff(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x12AFE84", Offset = "0x12AFE84", VA = "0x12AFE84")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Style style, int renderLayer)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x12AFF78", Offset = "0x12AFF78", VA = "0x12AFF78")]
	public static void DrawAllSubmeshes(Mesh mesh, Matrix4x4 matrix, Style style, int renderLayer)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x12B00B0", Offset = "0x12B00B0", VA = "0x12B00B0")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Material mat, int renderLayer)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x12B0168", Offset = "0x12B0168", VA = "0x12B0168")]
	public static void Draw(Mesh mesh, Matrix4x4 matrix, Material mat, MaterialPropertyBlock props, int renderLayer)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x12B0230", Offset = "0x12B0230", VA = "0x12B0230")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EB248", Offset = "0x8EB248")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x12B0280", Offset = "0x12B0280", VA = "0x12B0280")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x12B0380", Offset = "0x12B0380", VA = "0x12B0380")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12AF6BC", Offset = "0x12AF6BC", VA = "0x12AF6BC")]
	private Style GetObjectHighlight(GameObject target)
	{
		return default(Style);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x12AF744", Offset = "0x12AF744", VA = "0x12AF744")]
	private void SetObjectHighlight(GameObject target, Style style)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x12B04C8", Offset = "0x12B04C8", VA = "0x12B04C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x12B0BBC", Offset = "0x12B0BBC", VA = "0x12B0BBC")]
	public Highlighter()
	{
	}
}
[Token(Token = "0x200019C")]
public class HoldableItem : MonoBehaviour
{
	[Token(Token = "0x200019D")]
	private enum KinematicState
	{
		[Token(Token = "0x4000903")]
		Unknown = -1,
		[Token(Token = "0x4000904")]
		False,
		[Token(Token = "0x4000905")]
		True
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B08", Offset = "0x8D5B08")]
	private sealed class <UpdateHeld>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoldableItem <>4__this;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Person <targetP>5__2;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xE7F6C0", Offset = "0xE7F6C0", VA = "0xE7F6C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xE7F708", Offset = "0xE7F708", VA = "0xE7F708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xE7F314", Offset = "0xE7F314", VA = "0xE7F314")]
		[DebuggerHidden]
		public <UpdateHeld>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xE7F340", Offset = "0xE7F340", VA = "0xE7F340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xE7F344", Offset = "0xE7F344", VA = "0xE7F344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xE7F6C8", Offset = "0xE7F6C8", VA = "0xE7F6C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B18", Offset = "0x8D5B18")]
	private sealed class <FlyToHand>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoldableItem <>4__this;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetParent;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetPosLocal;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion <startRot>5__3;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float <t>5__4;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <maxHeight>5__5;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrailRenderer <tr>5__6;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xE7F2C4", Offset = "0xE7F2C4", VA = "0xE7F2C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xE7F30C", Offset = "0xE7F30C", VA = "0xE7F30C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xE7EE68", Offset = "0xE7EE68", VA = "0xE7EE68")]
		[DebuggerHidden]
		public <FlyToHand>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xE7EE94", Offset = "0xE7EE94", VA = "0xE7EE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xE7EE98", Offset = "0xE7EE98", VA = "0xE7EE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xE7F2CC", Offset = "0xE7F2CC", VA = "0xE7F2CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_consuamable;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	[Saveable]
	public Person m_heldBy;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_heldOnFrame;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HoldSlotType slotType;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody m_rb;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_heldLocator;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_closeDist;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_lineSz;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private KinematicState m_wasKinematicOnPickup;

	[Token(Token = "0x170000F0")]
	public Transform HeldLocator
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x12B0E18", Offset = "0x12B0E18", VA = "0x12B0E18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x12B0EE8", Offset = "0x12B0EE8", VA = "0x12B0EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x12B0FD0", Offset = "0x12B0FD0", VA = "0x12B0FD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x12B10F8", Offset = "0x12B10F8", VA = "0x12B10F8")]
	public void CheckIfBadlyHeld()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x12B1280", Offset = "0x12B1280", VA = "0x12B1280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x12B144C", Offset = "0x12B144C", VA = "0x12B144C")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x12B1580", Offset = "0x12B1580", VA = "0x12B1580")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x12B1508", Offset = "0x12B1508", VA = "0x12B1508")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB25C", Offset = "0x8EB25C")]
	private IEnumerator UpdateHeld()
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x12B15CC", Offset = "0x12B15CC", VA = "0x12B15CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB2BC", Offset = "0x8EB2BC")]
	private IEnumerator FlyToHand(float duration, Transform targetParent, Vector3 targetPosLocal, Quaternion rotationOffset)
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x12B16B4", Offset = "0x12B16B4", VA = "0x12B16B4")]
	public void UpdateHeldItemPosition()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x12B17CC", Offset = "0x12B17CC", VA = "0x12B17CC")]
	public void Hold(float flyTime)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x12B0CAC", Offset = "0x12B0CAC", VA = "0x12B0CAC")]
	public void Release()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x12B1A34", Offset = "0x12B1A34", VA = "0x12B1A34")]
	public HoldableItem()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x12B1A54", Offset = "0x12B1A54", VA = "0x12B1A54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB31C", Offset = "0x8EB31C")]
	private bool <UpdateHeld>g__PersonCanHoldSomethingNew|17_0(Person p)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001A0")]
public interface ISfHandHoverResponder
{
	[Token(Token = "0x60008F2")]
	void BeginHovering(SpacefolkHand hand);

	[Token(Token = "0x60008F3")]
	void OnHovering(SpacefolkHand hand);

	[Token(Token = "0x60008F4")]
	void EndHovering(SpacefolkHand hand);
}
[Token(Token = "0x20001A1")]
public class IdentityOnAwake : MonoBehaviour
{
	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xFC0F64", Offset = "0xFC0F64", VA = "0xFC0F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xFC0FA0", Offset = "0xFC0FA0", VA = "0xFC0FA0")]
	public IdentityOnAwake()
	{
	}
}
[Token(Token = "0x20001A2")]
public class InfoStripRenderer : MonoBehaviour
{
	[Token(Token = "0x20001A3")]
	public enum Category
	{
		[Token(Token = "0x4000929")]
		Misc,
		[Token(Token = "0x400092A")]
		NeedPower,
		[Token(Token = "0x400092B")]
		NeedMaterials,
		[Token(Token = "0x400092C")]
		NeedDecoration,
		[Token(Token = "0x400092D")]
		UnderConstruction
	}

	[Token(Token = "0x20001A4")]
	private struct StripInfo
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string text;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Category cat;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color borderCol;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Interest inter0;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interest inter1;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Interest inter2;

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xE852F0", Offset = "0xE852F0", VA = "0xE852F0")]
		public StripInfo(string text, Category cat, Color borderCol, Interest inter0, Interest inter1, Interest inter2)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xE8538C", Offset = "0xE8538C", VA = "0xE8538C")]
		public StripInfo(string text, Color borderCol)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xE85408", Offset = "0xE85408", VA = "0xE85408")]
		public StripInfo(Category cat, Interest inter0, Interest inter1, Interest inter2)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xE854BC", Offset = "0xE854BC", VA = "0xE854BC")]
		public StripInfo(Category cat)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xE8555C", Offset = "0xE8555C", VA = "0xE8555C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xE856D0", Offset = "0xE856D0", VA = "0xE856D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoStripRenderer Instance;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera m_cam;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas m_canvas;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_miscText;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] m_miscColourElements;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image[] m_interestIcon0;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image[] m_interestIcon1;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image[] m_interestIcon2;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite m_questionMark;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_Misc;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_NeedPower;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_NeedMaterials;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_NeedDecoration;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_UnderConstruction;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> m_allLayouts;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Dictionary<StripInfo, RenderTexture> m_textures;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RenderTexture m_renderTex;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<StripInfo, int> m_lastRenderFrames;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xFC4988", Offset = "0xFC4988", VA = "0xFC4988")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EB3CC", Offset = "0x8EB3CC")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xFC49D8", Offset = "0xFC49D8", VA = "0xFC49D8")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xFC4AD8", Offset = "0xFC4AD8", VA = "0xFC4AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xFC4DE0", Offset = "0xFC4DE0", VA = "0xFC4DE0")]
	public Texture GetTexture(Building forBuilding, Category cat, bool showInter0, Interest inter0, bool showInter1, Interest inter1, bool showInter2, Interest inter2)
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xFC55AC", Offset = "0xFC55AC", VA = "0xFC55AC")]
	public Texture GetTexture(Building forBuilding, Category cat)
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xFC56F4", Offset = "0xFC56F4", VA = "0xFC56F4")]
	public Texture GetTexture(Building forBuilding, string text, Color borderCol)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xFC5128", Offset = "0xFC5128", VA = "0xFC5128")]
	private Texture Render(StripInfo stripInfo)
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xFC5884", Offset = "0xFC5884", VA = "0xFC5884")]
	public InfoStripRenderer()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5B28", Offset = "0x8D5B28")]
public class Interest : ScriptableObject, ISaveGameReferableObject
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveGameReferenceGUID;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_icon;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_emoji;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_displayNameKey;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_displayNameKeyPlural;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient m_colours;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD958", Offset = "0x8DD958")]
	public Texture2D m_colourMap;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD990", Offset = "0x8DD990")]
	public TextAsset m_itemData;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextAsset m_localisationData;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD9C8", Offset = "0x8DD9C8")]
	public GameObject m_shopPrefab;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> m_decorations;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> m_signs;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> m_endGameItems;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDA00", Offset = "0x8DDA00")]
	public List<GameObject> m_generatedDecorations;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<GameObject> m_generatedSigns;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDA38", Offset = "0x8DDA38")]
	public List<GameObject> m_unlockedAtStartDecorations;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDA70", Offset = "0x8DDA70")]
	public List<GameObject> m_heads;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<GameObject> m_bodies;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FolkAbility[] m_folkAbilities;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDAA8", Offset = "0x8DDAA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDAA8", Offset = "0x8DDAA8")]
	public string MeshDirectory;

	[NonSerialized]
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB08", Offset = "0x8DDB08")]
	public string GeneratedPrefabDirectory;

	[NonSerialized]
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[NotNull]
	private List<string> m_nouns;

	[NonSerialized]
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[NotNull]
	private List<string> m_adjectives;

	[NonSerialized]
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[NotNull]
	private List<Person> m_activePeople;

	[NonSerialized]
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[NotNull]
	private List<GameObject> m_unlockedDecorations;

	[NonSerialized]
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[NotNull]
	private List<GameObject> m_lockedDecorations;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ms_onlyEnglishNounsAndAdjectives;

	[Token(Token = "0x170000F5")]
	private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xFCF6E0", Offset = "0xFCF6E0", VA = "0xFCF6E0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xFCF6E8", Offset = "0xFCF6E8", VA = "0xFCF6E8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public int ActivePeopleCount
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xFCF6F0", Offset = "0xFCF6F0", VA = "0xFCF6F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F7")]
	public int UnlockedDecorationsCount
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xFCF73C", Offset = "0xFCF73C", VA = "0xFCF73C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F8")]
	public List<string> Nouns
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0xFCF788", Offset = "0xFCF788", VA = "0xFCF788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public string CountDisplay
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xFCF790", Offset = "0xFCF790", VA = "0xFCF790")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xFCF838", Offset = "0xFCF838", VA = "0xFCF838")]
	public void InitInGame()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xFCF9EC", Offset = "0xFCF9EC", VA = "0xFCF9EC")]
	public void ClearArrays()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xFCFB00", Offset = "0xFCFB00", VA = "0xFCFB00")]
	public void AddPerson(Person person)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xFCFBC0", Offset = "0xFCFBC0", VA = "0xFCFBC0")]
	public Color GetRandomColour([Optional] System.Random rand)
	{
		return default(Color);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xFCFC08", Offset = "0xFCFC08", VA = "0xFCFC08")]
	public Color GetColour(float f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xFCF83C", Offset = "0xFCF83C", VA = "0xFCF83C")]
	public void InitLockedDecorations()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xFCFC24", Offset = "0xFCFC24", VA = "0xFCFC24")]
	public void UnlockAllDecorationPrefabs()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xFCFCD0", Offset = "0xFCFCD0", VA = "0xFCFCD0")]
	public void UnlockDecorationPrefab(GameObject prefab)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xFCFF74", Offset = "0xFCFF74", VA = "0xFCFF74")]
	public bool IsDecorationLocked(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xFCFFD8", Offset = "0xFCFFD8", VA = "0xFCFFD8")]
	public GameObject GetRandomLockedDecorationPrefab(bool returnUnlockedIfNull = true, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xFD007C", Offset = "0xFD007C", VA = "0xFD007C")]
	public GameObject GetRandomDecorationPrefab([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xFD016C", Offset = "0xFD016C", VA = "0xFD016C")]
	public GameObject GetRandomSignPrefab([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xFD025C", Offset = "0xFD025C", VA = "0xFD025C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB3E0", Offset = "0x8EB3E0")]
	private void GenerateColourMapFromGradient()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xFD03BC", Offset = "0xFD03BC", VA = "0xFD03BC")]
	public List<string> WordListToStringList(string wordList)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xFD0584", Offset = "0xFD0584", VA = "0xFD0584")]
	public string GetNounRandomLocalised([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xFD07CC", Offset = "0xFD07CC", VA = "0xFD07CC")]
	public string GetAdjectiveRandomLocalised([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xFD0A14", Offset = "0xFD0A14", VA = "0xFD0A14")]
	public void RemapMeshColours(GameObject go)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xFD0A80", Offset = "0xFD0A80", VA = "0xFD0A80")]
	public void RemapMeshColours(MeshFilter[] meshFilters)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xFD0BAC", Offset = "0xFD0BAC", VA = "0xFD0BAC")]
	public void AddLocalisationsToLanguage()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xFD0C98", Offset = "0xFD0C98", VA = "0xFD0C98")]
	public Interest()
	{
	}
}
[Token(Token = "0x20001A6")]
public class ItemManipulator : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_spinSFX;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRButtons m_rotRight;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_hand;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float triggerAt;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 m_axisWas;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_currentRotation;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion m_targetRotation;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RotSpeed;

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xFD1EC4", Offset = "0xFD1EC4", VA = "0xFD1EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xFD1FDC", Offset = "0xFD1FDC", VA = "0xFD1FDC")]
	private void OnBeginInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xFD2018", Offset = "0xFD2018", VA = "0xFD2018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xFD2354", Offset = "0xFD2354", VA = "0xFD2354")]
	public ItemManipulator()
	{
	}
}
[Token(Token = "0x20001A7")]
public class LODSettings : MonoBehaviour
{
	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float crossFadeAnimationDuration;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x115E95C", Offset = "0x115E95C", VA = "0x115E95C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x115E994", Offset = "0x115E994", VA = "0x115E994")]
	public LODSettings()
	{
	}
}
[Token(Token = "0x20001A8")]
public class LevelEditable : MonoBehaviour
{
	[Token(Token = "0x6000926")]
	[Address(RVA = "0x177237C", Offset = "0x177237C", VA = "0x177237C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1772488", Offset = "0x1772488", VA = "0x1772488")]
	public void WakeUp()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1772604", Offset = "0x1772604", VA = "0x1772604")]
	public LevelEditable()
	{
	}
}
[Token(Token = "0x20001A9")]
public class LevelEditor : MonoBehaviour
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PlayerIsEditing;

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x177260C", Offset = "0x177260C", VA = "0x177260C")]
	private void Start()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x17726C8", Offset = "0x17726C8", VA = "0x17726C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1772944", Offset = "0x1772944", VA = "0x1772944")]
	public LevelEditor()
	{
	}
}
[Token(Token = "0x20001AA")]
[ExecuteInEditMode]
public class LineRendererSpline : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer m_line;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierSpline m_spline;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_numPoints;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] m_points;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1775BCC", Offset = "0x1775BCC", VA = "0x1775BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1775D54", Offset = "0x1775D54", VA = "0x1775D54")]
	private void Update()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1775BD0", Offset = "0x1775BD0", VA = "0x1775BD0")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1775D58", Offset = "0x1775D58", VA = "0x1775D58")]
	public LineRendererSpline()
	{
	}
}
[Token(Token = "0x20001AB")]
public class LocalisationLoader : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_localisationData;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x177694C", Offset = "0x177694C", VA = "0x177694C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1776A38", Offset = "0x1776A38", VA = "0x1776A38")]
	public void LoadedNewLanguage()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1776AD4", Offset = "0x1776AD4", VA = "0x1776AD4")]
	public LocalisationLoader()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Magpie : MonoBehaviour
{
	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B48", Offset = "0x8D5B48")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool arrived;

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1057180", Offset = "0x1057180", VA = "0x1057180")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1057188", Offset = "0x1057188", VA = "0x1057188")]
		internal void <Abduction>b__0()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B58", Offset = "0x8D5B58")]
	private sealed class <Abduction>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Magpie <>4__this;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScrapCoin target;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass23_0 <>8__1;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ScrapCoin> <targets>5__2;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x10581DC", Offset = "0x10581DC", VA = "0x10581DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x1058224", Offset = "0x1058224", VA = "0x1058224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1057194", Offset = "0x1057194", VA = "0x1057194")]
		[DebuggerHidden]
		public <Abduction>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x10571C0", Offset = "0x10571C0", VA = "0x10571C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x10571C4", Offset = "0x10571C4", VA = "0x10571C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x10581E4", Offset = "0x10581E4", VA = "0x10581E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ms_terrainCollisionLayerMask;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ms_abductionCollisionLayerMask;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RaycastHit[] ms_abductionHits;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_modelTransform;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem m_abductionParticles;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_collisionRadius;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_abductionCollectionTransform;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_abductionCollectionRadius;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ScrapCoin m_abductionTarget;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_approachOffset;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_escapeOffset;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_maxAbductionTarget;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_arrived;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_teleportInSFX;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_teleportOutSFX;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_enginePowerUpSFX;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_enginePowerDownSFX;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_tractorBeamOnSFX;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_tractorBeamOffSFX;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_getScrapSFX;

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1605B3C", Offset = "0x1605B3C", VA = "0x1605B3C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EB3F8", Offset = "0x8EB3F8")]
	private static void SetupStatics()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1605CA4", Offset = "0x1605CA4", VA = "0x1605CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1605CCC", Offset = "0x1605CCC", VA = "0x1605CCC")]
	public void Abduct(ScrapCoin target)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1605D20", Offset = "0x1605D20", VA = "0x1605D20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB408", Offset = "0x8EB408")]
	private IEnumerator Abduction(ScrapCoin target)
	{
		return null;
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1605DB4", Offset = "0x1605DB4", VA = "0x1605DB4")]
	private Vector3 FindApproachPosition(Vector3 target, float offsetRadius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1605F44", Offset = "0x1605F44", VA = "0x1605F44")]
	public Magpie()
	{
	}
}
[Token(Token = "0x20001AF")]
public class MagpieNest : MonoBehaviour
{
	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Magpie m_magpie;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_scrapCountTrigger;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_scrapCountHighTrigger;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_lowWaitValue;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_highWaitValue;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_wait;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1606094", Offset = "0x1606094", VA = "0x1606094")]
	private void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x160627C", Offset = "0x160627C", VA = "0x160627C")]
	public MagpieNest()
	{
	}
}
[Token(Token = "0x20001B0")]
public class MaterialPrewarm : MonoBehaviour
{
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PassType[] ms_passTypes;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] m_prewarmMaterials;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] m_additionalKeywords;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1607918", Offset = "0x1607918", VA = "0x1607918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x1607C78", Offset = "0x1607C78", VA = "0x1607C78")]
	public MaterialPrewarm()
	{
	}
}
[Token(Token = "0x20001B1")]
public class MenuButtonHighlightUtility : MonoBehaviour
{
	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_enableOnHighlight;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRCanvasInput m_canvasInput;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isOn;

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x160B868", Offset = "0x160B868", VA = "0x160B868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x160B8F8", Offset = "0x160B8F8", VA = "0x160B8F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x160BA04", Offset = "0x160BA04", VA = "0x160BA04")]
	public MenuButtonHighlightUtility()
	{
	}
}
[Token(Token = "0x20001B2")]
public static class MeshExtensions
{
	[Token(Token = "0x600094A")]
	[Address(RVA = "0x160FE04", Offset = "0x160FE04", VA = "0x160FE04")]
	public static (Vector3, Vector3) GetRandomPoint(this Mesh mesh)
	{
		return default((Vector3, Vector3));
	}
}
[Token(Token = "0x20001B3")]
public class ModelRotator : MonoBehaviour
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float x_rot_speed;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float y_rot_speed;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z_rot_speed;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xRot;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yRot;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zRot;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float x_rot_random;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_rot_random;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z_rot_random;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x16108DC", Offset = "0x16108DC", VA = "0x16108DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x161094C", Offset = "0x161094C", VA = "0x161094C")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1610A40", Offset = "0x1610A40", VA = "0x1610A40")]
	public ModelRotator()
	{
	}
}
[Token(Token = "0x20001B4")]
public class ModelScalerMiddle : MonoBehaviour
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PointA;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PointB;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float x_scale;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float y;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float y_scale;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float z;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float z_scale;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scale_reducer;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1610A48", Offset = "0x1610A48", VA = "0x1610A48")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1610A4C", Offset = "0x1610A4C", VA = "0x1610A4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1610E1C", Offset = "0x1610E1C", VA = "0x1610E1C")]
	public ModelScalerMiddle()
	{
	}
}
[Token(Token = "0x20001B5")]
public abstract class Modifier : MonoBehaviour
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DescriptionKey;

	[Token(Token = "0x170000FC")]
	public virtual string LocalisedDesc
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x161129C", Offset = "0x161129C", VA = "0x161129C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000952")]
	public abstract void ApplyOnScenarioInit();

	[Token(Token = "0x6000953")]
	public abstract void ApplyOnLoad();

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1611304", Offset = "0x1611304", VA = "0x1611304")]
	protected Modifier()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Modifier_ : Modifier
{
	[Token(Token = "0x6000955")]
	[Address(RVA = "0x161130C", Offset = "0x161130C", VA = "0x161130C", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1611310", Offset = "0x1611310", VA = "0x1611310", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1611314", Offset = "0x1611314", VA = "0x1611314")]
	public Modifier_()
	{
	}
}
[Token(Token = "0x20001B7")]
public class Modifier_AsteroidsIntervalInHours : Modifier_WithRange
{
	[Token(Token = "0x6000958")]
	[Address(RVA = "0x161131C", Offset = "0x161131C", VA = "0x161131C", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1611328", Offset = "0x1611328", VA = "0x1611328", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x16113C8", Offset = "0x16113C8", VA = "0x16113C8")]
	public Modifier_AsteroidsIntervalInHours()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Modifier_DaysBetweenSolarFlares : Modifier_WithValue
{
	[Token(Token = "0x600095B")]
	[Address(RVA = "0x16113E8", Offset = "0x16113E8", VA = "0x16113E8", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x16113F4", Offset = "0x16113F4", VA = "0x16113F4", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1611460", Offset = "0x1611460", VA = "0x1611460")]
	public Modifier_DaysBetweenSolarFlares()
	{
	}
}
[Token(Token = "0x20001B9")]
public class Modifier_DisableShopItems : Modifier
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CityPieceProperties[] m_cityPieceProperties;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CityPiecePropertyList[] m_cityPieceLists;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1611470", Offset = "0x1611470", VA = "0x1611470", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1611508", Offset = "0x1611508", VA = "0x1611508", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1611474", Offset = "0x1611474", VA = "0x1611474")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB4C8", Offset = "0x8EB4C8")]
	public void DisableItems()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x161150C", Offset = "0x161150C", VA = "0x161150C")]
	public Modifier_DisableShopItems()
	{
	}
}
[Token(Token = "0x20001BA")]
public class Modifier_FolkCovetSpecificItemsOnly : Modifier
{
	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1611514", Offset = "0x1611514", VA = "0x1611514", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1611518", Offset = "0x1611518", VA = "0x1611518", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x161151C", Offset = "0x161151C", VA = "0x161151C")]
	public Modifier_FolkCovetSpecificItemsOnly()
	{
	}
}
[Token(Token = "0x20001BB")]
public class Modifier_NoFolkGetRescued : Modifier
{
	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1611524", Offset = "0x1611524", VA = "0x1611524", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x16115A4", Offset = "0x16115A4", VA = "0x16115A4", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x16115A8", Offset = "0x16115A8", VA = "0x16115A8")]
	public Modifier_NoFolkGetRescued()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Modifier_NoSolarFlares : Modifier
{
	[Token(Token = "0x6000968")]
	[Address(RVA = "0x16115B0", Offset = "0x16115B0", VA = "0x16115B0", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x16115BC", Offset = "0x16115BC", VA = "0x16115BC", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1611640", Offset = "0x1611640", VA = "0x1611640")]
	public Modifier_NoSolarFlares()
	{
	}
}
[Token(Token = "0x20001BD")]
public class Modifier_ReplaceBatchedMaterials : Modifier
{
	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BatchObjectBuilder.MaterialSetting> m_replacements;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1611648", Offset = "0x1611648", VA = "0x1611648", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1611654", Offset = "0x1611654", VA = "0x1611654", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1611708", Offset = "0x1611708", VA = "0x1611708")]
	public Modifier_ReplaceBatchedMaterials()
	{
	}
}
[Token(Token = "0x20001BE")]
public class Modifier_RescueLaunchFirstCost : Modifier_WithValue
{
	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1611710", Offset = "0x1611710", VA = "0x1611710", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1611714", Offset = "0x1611714", VA = "0x1611714", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1611718", Offset = "0x1611718", VA = "0x1611718")]
	public Modifier_RescueLaunchFirstCost()
	{
	}
}
[Token(Token = "0x20001BF")]
public class Modifier_SolarFlaresPerHour : Modifier_WithValue
{
	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1611720", Offset = "0x1611720", VA = "0x1611720", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x161172C", Offset = "0x161172C", VA = "0x161172C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x16117B4", Offset = "0x16117B4", VA = "0x16117B4")]
	public Modifier_SolarFlaresPerHour()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Modifier_SolarFlaresStartAtScrapBalance : Modifier_WithValue
{
	[Token(Token = "0x6000974")]
	[Address(RVA = "0x16117BC", Offset = "0x16117BC", VA = "0x16117BC", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x16117C8", Offset = "0x16117C8", VA = "0x16117C8", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1611850", Offset = "0x1611850", VA = "0x1611850")]
	public Modifier_SolarFlaresStartAtScrapBalance()
	{
	}
}
[Token(Token = "0x20001C1")]
public class Modifier_SolarFlaresStartAtTimeDays : Modifier_WithValue
{
	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1611858", Offset = "0x1611858", VA = "0x1611858", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1611864", Offset = "0x1611864", VA = "0x1611864", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x16118CC", Offset = "0x16118CC", VA = "0x16118CC")]
	public Modifier_SolarFlaresStartAtTimeDays()
	{
	}
}
[Token(Token = "0x20001C2")]
public class Modifier_SpawnPrefabs : Modifier
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_prefabsToSpawn;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x16118D4", Offset = "0x16118D4", VA = "0x16118D4", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1611988", Offset = "0x1611988", VA = "0x1611988", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x161198C", Offset = "0x161198C", VA = "0x161198C")]
	public Modifier_SpawnPrefabs()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Modifier_StartWithAlternateMusic : Modifier
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_selectorName;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1611994", Offset = "0x1611994", VA = "0x1611994", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1611A1C", Offset = "0x1611A1C", VA = "0x1611A1C", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1611AA4", Offset = "0x1611AA4", VA = "0x1611AA4")]
	public Modifier_StartWithAlternateMusic()
	{
	}
}
[Token(Token = "0x20001C4")]
public class Modifier_StartWithMessage : Modifier
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_highlightColour;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] m_messageKeys;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextMessageKey;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DialogueBox m_dialogueBox;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1611AAC", Offset = "0x1611AAC", VA = "0x1611AAC", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1611C20", Offset = "0x1611C20", VA = "0x1611C20")]
	public void NextMessage()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1611E44", Offset = "0x1611E44", VA = "0x1611E44", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1611E48", Offset = "0x1611E48", VA = "0x1611E48")]
	public Modifier_StartWithMessage()
	{
	}
}
[Token(Token = "0x20001C5")]
public class Modifier_StartWithScrap : Modifier_WithValue
{
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B78", Offset = "0x8D5B78")]
	private sealed class <CoinAppearCR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier_StartWithScrap <>4__this;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ScrapCoin> <coins>5__2;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <delay>5__3;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__4;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x1058B04", Offset = "0x1058B04", VA = "0x1058B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x1058B4C", Offset = "0x1058B4C", VA = "0x1058B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x10587B8", Offset = "0x10587B8", VA = "0x10587B8")]
		[DebuggerHidden]
		public <CoinAppearCR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x10587E4", Offset = "0x10587E4", VA = "0x10587E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x10587E8", Offset = "0x10587E8", VA = "0x10587E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1058B0C", Offset = "0x1058B0C", VA = "0x1058B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_vfxScrapAppear;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1611E7C", Offset = "0x1611E7C", VA = "0x1611E7C", Slot = "5")]
	public override void ApplyOnScenarioInit()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1611EA8", Offset = "0x1611EA8", VA = "0x1611EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB4E0", Offset = "0x8EB4E0")]
	private IEnumerator CoinAppearCR()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1611F20", Offset = "0x1611F20", VA = "0x1611F20", Slot = "6")]
	public override void ApplyOnLoad()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1611F24", Offset = "0x1611F24", VA = "0x1611F24")]
	public Modifier_StartWithScrap()
	{
	}
}
[Token(Token = "0x20001C7")]
public abstract class Modifier_WithRange : Modifier
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Min;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Max;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x16113D8", Offset = "0x16113D8", VA = "0x16113D8")]
	protected Modifier_WithRange()
	{
	}
}
[Token(Token = "0x20001C8")]
public abstract class Modifier_WithValue : Modifier
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x170000FF")]
	public override string LocalisedDesc
	{
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1611F2C", Offset = "0x1611F2C", VA = "0x1611F2C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1611468", Offset = "0x1611468", VA = "0x1611468")]
	protected Modifier_WithValue()
	{
	}
}
[Token(Token = "0x20001C9")]
public class MouseDownInfo : MonoBehaviour
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent DoOnMouseDown;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1614F30", Offset = "0x1614F30", VA = "0x1614F30")]
	public MouseDownInfo()
	{
	}
}
[Token(Token = "0x20001CA")]
public class MouseMovable : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_collisionMask;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_moving;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x16152CC", Offset = "0x16152CC", VA = "0x16152CC")]
	public MouseMovable()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MusicPlayer : MonoBehaviour
{
	[Token(Token = "0x20001CC")]
	public delegate void StringDelegate(string s);

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B88", Offset = "0x8D5B88")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicPlayer <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x1059288", Offset = "0x1059288", VA = "0x1059288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x10592D0", Offset = "0x10592D0", VA = "0x10592D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1059098", Offset = "0x1059098", VA = "0x1059098")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x10590C4", Offset = "0x10590C4", VA = "0x10590C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x10590C8", Offset = "0x10590C8", VA = "0x10590C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1059290", Offset = "0x1059290", VA = "0x1059290", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicPlayer ms_instance;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_rtcpMusicVolume;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_sfxTitleMusicPlay;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_sfxTitleMusicStop;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxLoadingMusicPlay;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxLoadingMusicStop;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_sfxSpacefolkFMPlay;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_sfxSpacefolkFMStop;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_sfxScenarioCompletePlay;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_sfxScenarioCompleteStop;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_radioSelectorSwitch;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_radioSelectorStandard;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_radioSelectorToUse;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDB90", Offset = "0x8DDB90")]
	public string m_titleMusicSwitch;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_normalTitleMusic;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_loudnessIsOn;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxLoudnessOn;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxLoudnessOff;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public StringDelegate OnSongChanged;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_musicVolume;

	[Token(Token = "0x17000100")]
	public float MusicVolume
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x1843418", Offset = "0x1843418", VA = "0x1843418")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1843420", Offset = "0x1843420", VA = "0x1843420")]
	public static void OnSceneLoaded(Scene scene, LoadSceneMode loadMode)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x184350C", Offset = "0x184350C", VA = "0x184350C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1843638", Offset = "0x1843638", VA = "0x1843638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB590", Offset = "0x8EB590")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x18436B0", Offset = "0x18436B0", VA = "0x18436B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1843728", Offset = "0x1843728", VA = "0x1843728")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB5F0", Offset = "0x8EB5F0")]
	private void StopAllMusic()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x184347C", Offset = "0x184347C", VA = "0x184347C")]
	private void StartCorrectMusicForScene(Scene scene)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1843898", Offset = "0x1843898", VA = "0x1843898")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB608", Offset = "0x8EB608")]
	public void PlaySpacefolkFM()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x18439B4", Offset = "0x18439B4", VA = "0x18439B4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB620", Offset = "0x8EB620")]
	public void StopSpacefolkFM()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1843AC0", Offset = "0x1843AC0", VA = "0x1843AC0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB638", Offset = "0x8EB638")]
	public void NextTrack()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1843810", Offset = "0x1843810", VA = "0x1843810")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB650", Offset = "0x8EB650")]
	public void PlayTitleMusic()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1843BBC", Offset = "0x1843BBC", VA = "0x1843BBC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB668", Offset = "0x8EB668")]
	public void StopTitleMusic()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1843C3C", Offset = "0x1843C3C", VA = "0x1843C3C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB680", Offset = "0x8EB680")]
	public void PlayLoadingMusic()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1843CC4", Offset = "0x1843CC4", VA = "0x1843CC4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB698", Offset = "0x8EB698")]
	public void StopLoadingMusic()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1843D44", Offset = "0x1843D44", VA = "0x1843D44")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB6B0", Offset = "0x8EB6B0")]
	public void PlayScenarioCompleteMusic()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1843DCC", Offset = "0x1843DCC", VA = "0x1843DCC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EB6C8", Offset = "0x8EB6C8")]
	public void StopScenarioCompleteMusic()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1843E4C", Offset = "0x1843E4C", VA = "0x1843E4C")]
	public void SetVolume(float v)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1843EC0", Offset = "0x1843EC0", VA = "0x1843EC0")]
	public void SetLoudness(bool b)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1843F64", Offset = "0x1843F64", VA = "0x1843F64")]
	public void ToggleLoudness()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1843F74", Offset = "0x1843F74", VA = "0x1843F74")]
	private void WwiseCallback(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1844040", Offset = "0x1844040", VA = "0x1844040")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x20001CE")]
public class NVRI_NoCollisionOnPickUp : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CF")]
	public struct ColliderDetails
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider m_collider;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_trigger;
	}

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColliderDetails[] m_colliderDetails;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Snappable m_snappable;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRInteractableItem m_nvii;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x184F65C", Offset = "0x184F65C", VA = "0x184F65C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x184F81C", Offset = "0x184F81C", VA = "0x184F81C")]
	public void SetupColliderDefaults()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x184FA18", Offset = "0x184FA18", VA = "0x184FA18")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x184FA88", Offset = "0x184FA88", VA = "0x184FA88")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x184FB04", Offset = "0x184FB04", VA = "0x184FB04")]
	public NVRI_NoCollisionOnPickUp()
	{
	}
}
[Token(Token = "0x20001D0")]
public class NVRI_RegenNavOnPutDown : MonoBehaviour
{
	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x184FB0C", Offset = "0x184FB0C", VA = "0x184FB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x184FC34", Offset = "0x184FC34", VA = "0x184FC34")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x184FC90", Offset = "0x184FC90", VA = "0x184FC90")]
	public NVRI_RegenNavOnPutDown()
	{
	}
}
[Token(Token = "0x20001D1")]
public class NVR_HandAudio : MonoBehaviour
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pickupSFX;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_putdownSFX;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1333828", Offset = "0x1333828", VA = "0x1333828")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1333964", Offset = "0x1333964", VA = "0x1333964")]
	private void OnBeginInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1333A50", Offset = "0x1333A50", VA = "0x1333A50")]
	private void OnEndInteraction(NVRInteractable i)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1333C20", Offset = "0x1333C20", VA = "0x1333C20")]
	public NVR_HandAudio()
	{
	}
}
[Token(Token = "0x20001D2")]
public class AutoLadder : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_bottomOffsetDist;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_topInsetDist;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh m_mesh;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_mat;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_agentOffset;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDBC8", Offset = "0x8DDBC8")]
	public LayerMask m_layerMask;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_rayStartOffset;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_rayLengthDown;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_rayLengthOut;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OffMeshLink m_offMeshLink;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDC00", Offset = "0x8DDC00")]
	private float <m_height>k__BackingField;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDC10", Offset = "0x8DDC10")]
	private Quaternion <m_rotation>k__BackingField;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Saveable]
	public bool m_isPlaced;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] dirs;

	[Token(Token = "0x17000103")]
	public float m_height
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x14A5018", Offset = "0x14A5018", VA = "0x14A5018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB730", Offset = "0x8EB730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x14A5020", Offset = "0x14A5020", VA = "0x14A5020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB740", Offset = "0x8EB740")]
		private set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public Quaternion m_rotation
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x14A5028", Offset = "0x14A5028", VA = "0x14A5028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB750", Offset = "0x8EB750")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x14A5034", Offset = "0x14A5034", VA = "0x14A5034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB760", Offset = "0x8EB760")]
		private set
		{
		}
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x14A5040", Offset = "0x14A5040", VA = "0x14A5040")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x14A50CC", Offset = "0x14A50CC", VA = "0x14A50CC")]
	private void CacheData()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x14A5234", Offset = "0x14A5234", VA = "0x14A5234")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x14A5298", Offset = "0x14A5298", VA = "0x14A5298")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x14A5338", Offset = "0x14A5338", VA = "0x14A5338")]
	private void UpdateNavlinkAgentOffset()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x14A53B4", Offset = "0x14A53B4", VA = "0x14A53B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x14A556C", Offset = "0x14A556C", VA = "0x14A556C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x14A55A4", Offset = "0x14A55A4", VA = "0x14A55A4")]
	public void Invalidate()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x14A55AC", Offset = "0x14A55AC", VA = "0x14A55AC")]
	public bool PlaceFromTop(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x14A564C", Offset = "0x14A564C", VA = "0x14A564C")]
	public bool PlaceFromTop(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x14A5B38", Offset = "0x14A5B38", VA = "0x14A5B38")]
	public bool PlaceFromBottom(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x14A5BE0", Offset = "0x14A5BE0", VA = "0x14A5BE0")]
	public bool PlaceFromBottom(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x14A600C", Offset = "0x14A600C", VA = "0x14A600C")]
	public bool PlaceFromMidpoint(Vector3 searchFrom)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x14A60AC", Offset = "0x14A60AC", VA = "0x14A60AC")]
	public bool PlaceFromMidpoint(Vector3 searchFrom, out Vector3 topOut, out Vector3 bottomOut)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x14A6504", Offset = "0x14A6504", VA = "0x14A6504", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x14A6508", Offset = "0x14A6508", VA = "0x14A6508", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x14A650C", Offset = "0x14A650C", VA = "0x14A650C", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x14A6510", Offset = "0x14A6510", VA = "0x14A6510")]
	public AutoLadder()
	{
	}
}
[Token(Token = "0x20001D3")]
public class AutoLadderInteractable : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoLadder m_autoLadder;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PointAndSnap m_pointAndSnap;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_collider;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_model;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CityPiece attached;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 oldPos;

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x14A6614", Offset = "0x14A6614", VA = "0x14A6614")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x14A6838", Offset = "0x14A6838", VA = "0x14A6838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x14A699C", Offset = "0x14A699C", VA = "0x14A699C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x14A6B04", Offset = "0x14A6B04", VA = "0x14A6B04")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x14A6E44", Offset = "0x14A6E44", VA = "0x14A6E44")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x14A705C", Offset = "0x14A705C", VA = "0x14A705C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x14A72E8", Offset = "0x14A72E8", VA = "0x14A72E8")]
	private void OnAttachedUnbake(CityPiece attachedPiece)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x14A73F0", Offset = "0x14A73F0", VA = "0x14A73F0")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hit)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x14A7528", Offset = "0x14A7528", VA = "0x14A7528")]
	public void UpdatePositionFromLadder()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x14A75E8", Offset = "0x14A75E8", VA = "0x14A75E8", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x14A75EC", Offset = "0x14A75EC", VA = "0x14A75EC", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x14A75F0", Offset = "0x14A75F0", VA = "0x14A75F0", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x14A75F4", Offset = "0x14A75F4", VA = "0x14A75F4")]
	public AutoLadderInteractable()
	{
	}
}
[Token(Token = "0x20001D4")]
public class NavAgentDestinationSetter : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent m_agent;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1338B68", Offset = "0x1338B68", VA = "0x1338B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1338CD8", Offset = "0x1338CD8", VA = "0x1338CD8")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1338D68", Offset = "0x1338D68", VA = "0x1338D68")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1338EAC", Offset = "0x1338EAC", VA = "0x1338EAC")]
	public NavAgentDestinationSetter()
	{
	}
}
[Token(Token = "0x20001D5")]
public class NavLinkCustomMovement : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B98", Offset = "0x8D5B98")]
	private sealed class <UpdateLinkMovement>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x105BBFC", Offset = "0x105BBFC", VA = "0x105BBFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x105BC44", Offset = "0x105BC44", VA = "0x105BC44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x105BBB4", Offset = "0x105BBB4", VA = "0x105BBB4")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x105BBE0", Offset = "0x105BBE0", VA = "0x105BBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x105BBE4", Offset = "0x105BBE4", VA = "0x105BBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x105BC04", Offset = "0x105BC04", VA = "0x105BC04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1338EB4", Offset = "0x1338EB4", VA = "0x1338EB4", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB770", Offset = "0x8EB770")]
	public virtual IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1338F10", Offset = "0x1338F10", VA = "0x1338F10", Slot = "5")]
	public virtual void CancelFor(NavMeshAgent agent)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1338F14", Offset = "0x1338F14", VA = "0x1338F14", Slot = "6")]
	public virtual void DoReset()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1338F18", Offset = "0x1338F18", VA = "0x1338F18")]
	public NavLinkCustomMovement()
	{
	}
}
[Token(Token = "0x20001D7")]
public class NavLinkTeleport : NavLinkCustomMovement
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BA8", Offset = "0x8D5BA8")]
	private sealed class <UpdateLinkMovement>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavLinkTeleport <>4__this;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <teleportStart>5__2;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <teleportEnd>5__3;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <linkEnd>5__4;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Door <doorEnter>5__5;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <moveDur>5__6;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion <facingTP>5__7;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <startPos>5__8;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion <startRot>5__9;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject <charaModel>5__10;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Door <doorExit>5__11;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float <t>5__12;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x105C8C4", Offset = "0x105C8C4", VA = "0x105C8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x105C90C", Offset = "0x105C90C", VA = "0x105C90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x105BC4C", Offset = "0x105BC4C", VA = "0x105BC4C")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x105BC78", Offset = "0x105BC78", VA = "0x105BC78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x105BC7C", Offset = "0x105BC7C", VA = "0x105BC7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x105C8CC", Offset = "0x105C8CC", VA = "0x105C8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_durationBasedOnAgentSpeed;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DDC30", Offset = "0x8DDC30")]
	public float m_agentSpeedMultiplier;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_agentEnterSpeedMultiplier;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideIfAttribute", RVA = "0x8DDC68", Offset = "0x8DDC68")]
	public float m_teleportDuration;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDCA0", Offset = "0x8DDCA0")]
	public Transform m_linkA;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_teleportA;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDCD8", Offset = "0x8DDCD8")]
	public Transform m_teleportB;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_linkB;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDD10", Offset = "0x8DDD10")]
	public GameObject m_teleportStartFXPrefab;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_teleportStartSFXEvent;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDD48", Offset = "0x8DDD48")]
	public GameObject m_teleportEndFXPrefab;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_teleportEndSFXEvent;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1338F20", Offset = "0x1338F20", VA = "0x1338F20", Slot = "5")]
	public override void CancelFor(NavMeshAgent agent)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1338F94", Offset = "0x1338F94", VA = "0x1338F94", Slot = "6")]
	public override void DoReset()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x133901C", Offset = "0x133901C", VA = "0x133901C", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB820", Offset = "0x8EB820")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x13390B0", Offset = "0x13390B0", VA = "0x13390B0")]
	public NavLinkTeleport()
	{
	}
}
[Token(Token = "0x20001D9")]
public class NavlinkEndpoint : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavLinkCustomMovement m_navlink;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x133AF6C", Offset = "0x133AF6C", VA = "0x133AF6C")]
	public NavlinkEndpoint()
	{
	}
}
[Token(Token = "0x20001DA")]
public class NavlinkPolyLine : NavLinkCustomMovement
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BB8", Offset = "0x8D5BB8")]
	private sealed class <UpdateLinkMovement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavlinkPolyLine <>4__this;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OffMeshLinkData <data>5__2;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FolkAnimationController <anim>5__3;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <lineEndPt>5__4;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 <lineDirXZ>5__5;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool <goingForward>5__6;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool <ladderAnimStateHasChanged>5__7;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <d>5__8;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float <lineLen>5__9;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x105CE18", Offset = "0x105CE18", VA = "0x105CE18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x105CE60", Offset = "0x105CE60", VA = "0x105CE60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x105C914", Offset = "0x105C914", VA = "0x105C914")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x105C940", Offset = "0x105C940", VA = "0x105C940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x105C944", Offset = "0x105C944", VA = "0x105C944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x105CE20", Offset = "0x105CE20", VA = "0x105CE20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vitei.Line m_line;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speedMul;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange m_speedRange;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isLadder;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 AgentPositionOffset;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x133AF74", Offset = "0x133AF74", VA = "0x133AF74")]
	public float GetLineLen()
	{
		return default(float);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x133B034", Offset = "0x133B034", VA = "0x133B034")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x133B0E8", Offset = "0x133B0E8", VA = "0x133B0E8")]
	public Vector3 GetAtDistFromStart_World(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x133B29C", Offset = "0x133B29C", VA = "0x133B29C", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB8D0", Offset = "0x8EB8D0")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x133B330", Offset = "0x133B330", VA = "0x133B330")]
	public NavlinkPolyLine()
	{
	}
}
[Token(Token = "0x20001DC")]
public class NavlinkZipLine : NavLinkCustomMovement
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BC8", Offset = "0x8D5BC8")]
	private sealed class <UpdateLinkMovement>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavlinkZipLine <>4__this;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OffMeshLinkData <data>5__2;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FolkAnimationController <anim>5__3;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool <goingForward>5__4;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <lastPt>5__5;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform <seat>5__6;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 <jumpPos>5__7;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion <jumpRot>5__8;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float <d>5__9;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float <t>5__10;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float <lineLen>5__11;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion <finishRot>5__12;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x105D980", Offset = "0x105D980", VA = "0x105D980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x105D9C8", Offset = "0x105D9C8", VA = "0x105D9C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x105CE68", Offset = "0x105CE68", VA = "0x105CE68")]
		[DebuggerHidden]
		public <UpdateLinkMovement>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x105CE94", Offset = "0x105CE94", VA = "0x105CE94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x105CE98", Offset = "0x105CE98", VA = "0x105CE98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x105D988", Offset = "0x105D988", VA = "0x105D988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Polyline m_line;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speedMul;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_offset;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_sliderParent;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] m_sliders;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<GameObject, Transform> m_seats;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_currentSlider;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_transitionTime;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_jumpHeight;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_SFXStart;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_SFXStop;

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x133B3C4", Offset = "0x133B3C4", VA = "0x133B3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x133B590", Offset = "0x133B590", VA = "0x133B590")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x133B628", Offset = "0x133B628", VA = "0x133B628")]
	public float GetLineLen()
	{
		return default(float);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x133B6F4", Offset = "0x133B6F4", VA = "0x133B6F4")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x133B7A0", Offset = "0x133B7A0", VA = "0x133B7A0")]
	public Vector3 GetAtDistFromStart_World(float d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x133B970", Offset = "0x133B970", VA = "0x133B970", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB980", Offset = "0x8EB980")]
	public override IEnumerator UpdateLinkMovement(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x133BA04", Offset = "0x133BA04", VA = "0x133BA04", Slot = "6")]
	public override void DoReset()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x133BA14", Offset = "0x133BA14", VA = "0x133BA14")]
	public NavlinkZipLine()
	{
	}
}
[Token(Token = "0x20001DE")]
public class OVRControllerHider : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doneRight;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool doneLeft;

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x133D7AC", Offset = "0x133D7AC", VA = "0x133D7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x133D944", Offset = "0x133D944", VA = "0x133D944")]
	public OVRControllerHider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class ObjectWithProbability<T>
{
	[Serializable]
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BD8", Offset = "0x8D5BD8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithProbability<T>> <>9__7_0;

		[Token(Token = "0x6000A1B")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A1C")]
		internal int <Sort>b__7_0(ObjectWithProbability<T> a, ObjectWithProbability<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T m_gameObj;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_probability;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_normalisedProbability;

	[Token(Token = "0x6000A15")]
	public ObjectWithProbability(T obj, float prob)
	{
	}

	[Token(Token = "0x6000A16")]
	public ObjectWithProbability(T obj, Probability prob)
	{
	}

	[Token(Token = "0x6000A17")]
	public static void NormaliseProbabilities(List<ObjectWithProbability<T>> plist)
	{
	}

	[Token(Token = "0x6000A18")]
	public static void ReNormaliseProbabilities(List<ObjectWithProbability<T>> plist, int keepIdx)
	{
	}

	[Token(Token = "0x6000A19")]
	public static void Sort(List<ObjectWithProbability<T>> plist)
	{
	}
}
[Serializable]
[Token(Token = "0x20001E1")]
public class ObjectWithProbabilityList<T> where T : class
{
	[Serializable]
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BE8", Offset = "0x8D5BE8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithProbability<T>> <>9__3_0;

		[Token(Token = "0x6000A22")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A23")]
		internal int <Random>b__3_0(ObjectWithProbability<T> a, ObjectWithProbability<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float transitionTime;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_valuesAreProbabilities;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<ObjectWithProbability<T>> m_gameObjects;

	[Token(Token = "0x6000A1D")]
	public T Random([Optional] UnityEngine.Object exclude, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	public void Add(ObjectWithProbability<T> gowp)
	{
	}

	[Token(Token = "0x6000A1F")]
	public bool Contains(T go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A20")]
	public ObjectWithProbabilityList()
	{
	}
}
[Token(Token = "0x20001E3")]
public class ObjectWithValue<T>
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T m_obj;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_value;

	[Token(Token = "0x6000A24")]
	public ObjectWithValue()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ObjectWithValueList<T>
{
	[Serializable]
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5BF8", Offset = "0x8D5BF8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<ObjectWithValue<T>> <>9__2_0;

		[Token(Token = "0x6000A28")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A29")]
		internal int <Random>b__2_0(ObjectWithValue<T> a, ObjectWithValue<T> b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_valuesAreProbabilities;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<ObjectWithValue<T>> m_objVal;

	[Token(Token = "0x6000A25")]
	public T Random()
	{
		return (T)null;
	}

	[Token(Token = "0x6000A26")]
	public ObjectWithValueList()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ObjectiveTracker : MonoBehaviour
{
	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xEC24A4", Offset = "0xEC24A4", VA = "0xEC24A4")]
	public ObjectiveTracker()
	{
	}
}
[Token(Token = "0x20001E7")]
public abstract class Objective : MonoBehaviour
{
	[Token(Token = "0x20001E8")]
	public enum States
	{
		[Token(Token = "0x4000A49")]
		Inactive,
		[Token(Token = "0x4000A4A")]
		Active,
		[Token(Token = "0x4000A4B")]
		Completed
	}

	[Token(Token = "0x20001E9")]
	public class ObjectiveEvent : UnityEvent<Objective>
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x105E330", Offset = "0x105E330", VA = "0x105E330")]
		public ObjectiveEvent()
		{
		}
	}

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DescriptionKey;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Objective PrerequesiteObjective;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ShowInObjectiveList;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool ShowNotificationOnCompletion;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool DisableSaveWhenActive;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool AutoSaveOnCompletion;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Saveable]
	[SerializeField]
	protected States CurrentState;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected States StateLastFrame;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectiveEvent OnStateChanged;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ObjectiveEvent OnCompleted;

	[Token(Token = "0x1700010D")]
	public virtual string LocalisedDesc
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xEC21C8", Offset = "0xEC21C8", VA = "0xEC21C8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010E")]
	public bool DidChangeState
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xEC2230", Offset = "0xEC2230", VA = "0xEC2230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010F")]
	public States State
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xEC2240", Offset = "0xEC2240", VA = "0xEC2240")]
		get
		{
			return default(States);
		}
	}

	[Token(Token = "0x17000110")]
	public abstract string Text
	{
		[Token(Token = "0x6000A2F")]
		get;
	}

	[Token(Token = "0x17000111")]
	public abstract bool IsComplete
	{
		[Token(Token = "0x6000A30")]
		get;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xEC2248", Offset = "0xEC2248", VA = "0xEC2248")]
	public void SetState(States newState)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xEC2250", Offset = "0xEC2250", VA = "0xEC2250", Slot = "7")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xEC226C", Offset = "0xEC226C", VA = "0xEC226C", Slot = "8")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xEC2270", Offset = "0xEC2270", VA = "0xEC2270", Slot = "9")]
	public virtual void Begin()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xEC227C", Offset = "0xEC227C", VA = "0xEC227C", Slot = "10")]
	public virtual void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xEC22E4", Offset = "0xEC22E4", VA = "0xEC22E4", Slot = "11")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xEC23F8", Offset = "0xEC23F8", VA = "0xEC23F8")]
	protected Objective()
	{
	}
}
[Token(Token = "0x20001EA")]
public class Objective_ActivateRocketBoosters : Objective
{
	[Token(Token = "0x17000112")]
	public override string Text
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xEC24AC", Offset = "0xEC24AC", VA = "0xEC24AC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xEC2520", Offset = "0xEC2520", VA = "0xEC2520", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xEC2584", Offset = "0xEC2584", VA = "0xEC2584", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xEC2764", Offset = "0xEC2764", VA = "0xEC2764")]
	public Objective_ActivateRocketBoosters()
	{
	}
}
[Token(Token = "0x20001EB")]
public class Objective_BuildDefence : Objective_HitValue
{
	[Token(Token = "0x17000114")]
	public override string Text
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xEC2768", Offset = "0xEC2768", VA = "0xEC2768", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xEC28D0", Offset = "0xEC28D0", VA = "0xEC28D0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xEC295C", Offset = "0xEC295C", VA = "0xEC295C")]
	public Objective_BuildDefence()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Objective_BuildFacilitiesAny : Objective_HitValue
{
	[Token(Token = "0x17000116")]
	public override string Text
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xEC2964", Offset = "0xEC2964", VA = "0xEC2964", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000117")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xEC2ACC", Offset = "0xEC2ACC", VA = "0xEC2ACC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xEC2B58", Offset = "0xEC2B58", VA = "0xEC2B58")]
	public Objective_BuildFacilitiesAny()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Objective_BuildHouses : Objective_HitValue
{
	[Token(Token = "0x17000118")]
	public override string Text
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xEC2B5C", Offset = "0xEC2B5C", VA = "0xEC2B5C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xEC2CC4", Offset = "0xEC2CC4", VA = "0xEC2CC4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xEC2D50", Offset = "0xEC2D50", VA = "0xEC2D50")]
	public Objective_BuildHouses()
	{
	}
}
[Token(Token = "0x20001EE")]
public class Objective_BuildNumberOfBuildings : Objective_HitValue
{
	[Token(Token = "0x1700011A")]
	public override string Text
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xEC2D54", Offset = "0xEC2D54", VA = "0xEC2D54", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xEC2EBC", Offset = "0xEC2EBC", VA = "0xEC2EBC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xEC2F48", Offset = "0xEC2F48", VA = "0xEC2F48")]
	public Objective_BuildNumberOfBuildings()
	{
	}
}
[Token(Token = "0x20001EF")]
public class Objective_BuildNumberOfFacilities : Objective_HitValue
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public FacilityCategory m_category;

	[Token(Token = "0x1700011C")]
	public override string Text
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xEC2F4C", Offset = "0xEC2F4C", VA = "0xEC2F4C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xEC32C0", Offset = "0xEC32C0", VA = "0xEC32C0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xEC31AC", Offset = "0xEC31AC", VA = "0xEC31AC", Slot = "12")]
	public override string LocalisedDescForValue(int thisVal)
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xEC309C", Offset = "0xEC309C", VA = "0xEC309C")]
	private int NumBuilt()
	{
		return default(int);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xEC32EC", Offset = "0xEC32EC", VA = "0xEC32EC")]
	public Objective_BuildNumberOfFacilities()
	{
	}
}
[Token(Token = "0x20001F0")]
public class Objective_BuildPower : Objective_HitValue
{
	[Token(Token = "0x1700011E")]
	public override string Text
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xEC32F0", Offset = "0xEC32F0", VA = "0xEC32F0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xEC3458", Offset = "0xEC3458", VA = "0xEC3458", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xEC34E4", Offset = "0xEC34E4", VA = "0xEC34E4")]
	public Objective_BuildPower()
	{
	}
}
[Token(Token = "0x20001F1")]
public class Objective_BuildRefineries : Objective_HitValue
{
	[Token(Token = "0x17000120")]
	public override string Text
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xEC34E8", Offset = "0xEC34E8", VA = "0xEC34E8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xEC3650", Offset = "0xEC3650", VA = "0xEC3650", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xEC36DC", Offset = "0xEC36DC", VA = "0xEC36DC")]
	public Objective_BuildRefineries()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Objective_BuildRocketBoosters : Objective_HitValue
{
	[Token(Token = "0x17000122")]
	public override string Text
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xEC36E0", Offset = "0xEC36E0", VA = "0xEC36E0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xEC3848", Offset = "0xEC3848", VA = "0xEC3848", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xEC38D4", Offset = "0xEC38D4", VA = "0xEC38D4")]
	public Objective_BuildRocketBoosters()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Objective_BuildWarehouses : Objective_HitValue
{
	[Token(Token = "0x17000124")]
	public override string Text
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xEC38D8", Offset = "0xEC38D8", VA = "0xEC38D8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000125")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xEC3A40", Offset = "0xEC3A40", VA = "0xEC3A40", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xEC3D44", Offset = "0xEC3D44", VA = "0xEC3D44")]
	public Objective_BuildWarehouses()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Objective_GetCovetedItems : Objective_HitValue
{
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C08", Offset = "0x8D5C08")]
	private sealed class <StartCR>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Objective_GetCovetedItems <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x105E840", Offset = "0x105E840", VA = "0x105E840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x105E888", Offset = "0x105E888", VA = "0x105E888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x105E56C", Offset = "0x105E56C", VA = "0x105E56C")]
		[DebuggerHidden]
		public <StartCR>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x105E598", Offset = "0x105E598", VA = "0x105E598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x105E59C", Offset = "0x105E59C", VA = "0x105E59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x105E848", Offset = "0x105E848", VA = "0x105E848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C18", Offset = "0x8D5C18")]
	private sealed class <AddPersonsHGCovets_CR>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Objective_GetCovetedItems <>4__this;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Person p;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x105E51C", Offset = "0x105E51C", VA = "0x105E51C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x105E564", Offset = "0x105E564", VA = "0x105E564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x105E464", Offset = "0x105E464", VA = "0x105E464")]
		[DebuggerHidden]
		public <AddPersonsHGCovets_CR>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x105E490", Offset = "0x105E490", VA = "0x105E490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x105E494", Offset = "0x105E494", VA = "0x105E494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x105E524", Offset = "0x105E524", VA = "0x105E524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C28", Offset = "0x8D5C28")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__6_0;

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x105E3E0", Offset = "0x105E3E0", VA = "0x105E3E0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x105E3E8", Offset = "0x105E3E8", VA = "0x105E3E8")]
		internal bool <AddPersonsHGCovets>b__6_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<HG_GotCovetedItem> m_hgCovets;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_numComplete;

	[Token(Token = "0x17000126")]
	public override string Text
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xEC41BC", Offset = "0xEC41BC", VA = "0xEC41BC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xEC42D4", Offset = "0xEC42D4", VA = "0xEC42D4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xEC3D48", Offset = "0xEC3D48", VA = "0xEC3D48", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xEC3D94", Offset = "0xEC3D94", VA = "0xEC3D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBA30", Offset = "0x8EBA30")]
	private IEnumerator StartCR()
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xEC3E0C", Offset = "0xEC3E0C", VA = "0xEC3E0C")]
	private void OnPersonCreated(Person p)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xEC3E38", Offset = "0xEC3E38", VA = "0xEC3E38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBA90", Offset = "0x8EBA90")]
	private IEnumerator AddPersonsHGCovets_CR(Person p)
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xEC3ECC", Offset = "0xEC3ECC", VA = "0xEC3ECC")]
	private void AddPersonsHGCovets(Person p)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xEC4108", Offset = "0xEC4108", VA = "0xEC4108")]
	private void OnAnyHGCovetStatusChange(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xEC42E8", Offset = "0xEC42E8", VA = "0xEC42E8")]
	public Objective_GetCovetedItems()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Objective_HappinessCount : Objective_HitValue
{
	[Token(Token = "0x1700012C")]
	public override string Text
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xEC4368", Offset = "0xEC4368", VA = "0xEC4368", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xEC44F0", Offset = "0xEC44F0", VA = "0xEC44F0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xEC45A4", Offset = "0xEC45A4", VA = "0xEC45A4")]
	public Objective_HappinessCount()
	{
	}
}
[Token(Token = "0x20001F9")]
public abstract class Objective_HitValue : Objective
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Value;

	[Token(Token = "0x1700012E")]
	public override string LocalisedDesc
	{
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xEC45A8", Offset = "0xEC45A8", VA = "0xEC45A8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xEC468C", Offset = "0xEC468C", VA = "0xEC468C", Slot = "12")]
	public virtual string LocalisedDescForValue(int thisVal)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xEC2960", Offset = "0xEC2960", VA = "0xEC2960")]
	protected Objective_HitValue()
	{
	}
}
[Token(Token = "0x20001FA")]
public class Objective_PlaceDecorations : Objective_HitValue
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_targetDecoCount;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_startDecoCount;

	[Token(Token = "0x1700012F")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xEC4770", Offset = "0xEC4770", VA = "0xEC4770", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	public override string Text
	{
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xEC4808", Offset = "0xEC4808", VA = "0xEC4808", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xEC4988", Offset = "0xEC4988", VA = "0xEC4988", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xEC4A4C", Offset = "0xEC4A4C", VA = "0xEC4A4C")]
	public Objective_PlaceDecorations()
	{
	}
}
[Token(Token = "0x20001FB")]
public class Objective_PopulationCount : Objective_HitValue
{
	[Token(Token = "0x17000131")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xEC4A50", Offset = "0xEC4A50", VA = "0xEC4A50", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public override string Text
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xEC4C28", Offset = "0xEC4C28", VA = "0xEC4C28", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xEC4DA0", Offset = "0xEC4DA0", VA = "0xEC4DA0")]
	public Objective_PopulationCount()
	{
	}
}
[Token(Token = "0x20001FC")]
public class Objective_Sandbox : Objective
{
	[Token(Token = "0x17000133")]
	public override string Text
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xEC4DA4", Offset = "0xEC4DA4", VA = "0xEC4DA4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xEC4E18", Offset = "0xEC4E18", VA = "0xEC4E18", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xEC4E20", Offset = "0xEC4E20", VA = "0xEC4E20")]
	public Objective_Sandbox()
	{
	}
}
[Token(Token = "0x20001FD")]
public class Objective_ScrapBalance : Objective_HitValue
{
	[Token(Token = "0x17000135")]
	public override string Text
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xEC4E24", Offset = "0xEC4E24", VA = "0xEC4E24", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xEC4F8C", Offset = "0xEC4F8C", VA = "0xEC4F8C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xEC5010", Offset = "0xEC5010", VA = "0xEC5010")]
	public Objective_ScrapBalance()
	{
	}
}
[Token(Token = "0x20001FE")]
public class Objective_SurviveSolarFlares : Objective_HitValue
{
	[Token(Token = "0x17000137")]
	public override string Text
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xEC5014", Offset = "0xEC5014", VA = "0xEC5014", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xEC5168", Offset = "0xEC5168", VA = "0xEC5168", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xEC51DC", Offset = "0xEC51DC", VA = "0xEC51DC")]
	public Objective_SurviveSolarFlares()
	{
	}
}
[Token(Token = "0x20001FF")]
public class ScenarioManager : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C38", Offset = "0x8D5C38")]
	private sealed class <ShowAutoSave>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xEACB90", Offset = "0xEACB90", VA = "0xEACB90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xEACBD8", Offset = "0xEACBD8", VA = "0xEACBD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xEACA74", Offset = "0xEACA74", VA = "0xEACA74")]
		[DebuggerHidden]
		public <ShowAutoSave>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xEACAA0", Offset = "0xEACAA0", VA = "0xEACAA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xEACAA4", Offset = "0xEACAA4", VA = "0xEACAA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xEACB98", Offset = "0xEACB98", VA = "0xEACB98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C48", Offset = "0x8D5C48")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button gotoMenuBtn;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button stayHereBtn;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueBox dialogueBox;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xEAB9B0", Offset = "0xEAB9B0", VA = "0xEAB9B0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xEAB9B8", Offset = "0xEAB9B8", VA = "0xEAB9B8")]
		internal void <OnObjectivesCompleteCR>b__1()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xEAB9D8", Offset = "0xEAB9D8", VA = "0xEAB9D8")]
		internal void <OnObjectivesCompleteCR>b__2()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xEAB9F8", Offset = "0xEAB9F8", VA = "0xEAB9F8")]
		internal void <OnObjectivesCompleteCR>b__3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C58", Offset = "0x8D5C58")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Objective> <>9__20_0;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xEAB914", Offset = "0xEAB914", VA = "0xEAB914")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xEAB91C", Offset = "0xEAB91C", VA = "0xEAB91C")]
		internal bool <OnObjectivesCompleteCR>b__20_0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C68", Offset = "0x8D5C68")]
	private sealed class <OnObjectivesCompleteCR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayBeforeMessage;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass20_0 <>8__1;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <numC>5__2;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0xEACA24", Offset = "0xEACA24", VA = "0xEACA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xEACA6C", Offset = "0xEACA6C", VA = "0xEACA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xEABFAC", Offset = "0xEABFAC", VA = "0xEABFAC")]
		[DebuggerHidden]
		public <OnObjectivesCompleteCR>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xEABFD8", Offset = "0xEABFD8", VA = "0xEABFD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xEABFDC", Offset = "0xEABFDC", VA = "0xEABFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xEACA2C", Offset = "0xEACA2C", VA = "0xEACA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C78", Offset = "0x8D5C78")]
	private sealed class <DoCompleteAllObjectives>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioManager <>4__this;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Objective>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xEABF5C", Offset = "0xEABF5C", VA = "0xEABF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xEABFA4", Offset = "0xEABFA4", VA = "0xEABFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xEABADC", Offset = "0xEABADC", VA = "0xEABADC")]
		[DebuggerHidden]
		public <DoCompleteAllObjectives>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xEABB08", Offset = "0xEABB08", VA = "0xEABB08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xEABB78", Offset = "0xEABB78", VA = "0xEABB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xEABB24", Offset = "0xEABB24", VA = "0xEABB24")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xEABF64", Offset = "0xEABF64", VA = "0xEABF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C88", Offset = "0x8D5C88")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Objective o;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xEABA28", Offset = "0xEABA28", VA = "0xEABA28")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xEABA30", Offset = "0xEABA30", VA = "0xEABA30")]
		internal bool <PopulateObjectives>b__0(Objective x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScenarioManager Instance;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Scenario m_currentScenario;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public List<Objective> m_objectives;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	public List<string> m_completedObjectives;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public List<Modifier> m_modifiers;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDDF8", Offset = "0x8DDDF8")]
	public GameObject m_scenarioCompleteDialogue;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_confettiVFXPrefab;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_maxConfettis;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool AllObjectivesConsideredComplete;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool ScenarioCompleteAnimationComplete;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_autoSaveIcon;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_autoSaveShowDur;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xEDA354", Offset = "0xEDA354", VA = "0xEDA354")]
	public bool AreAllObjectivesActuallyComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xEDA484", Offset = "0xEDA484", VA = "0xEDA484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xEDA4D8", Offset = "0xEDA4D8", VA = "0xEDA4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xEDA628", Offset = "0xEDA628", VA = "0xEDA628")]
	public void ObjectiveCompleteDialogueReturnToMenu()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xEDA780", Offset = "0xEDA780", VA = "0xEDA780")]
	public void ObjectiveCompleteResumePlaying()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xEDA870", Offset = "0xEDA870", VA = "0xEDA870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBB90", Offset = "0x8EBB90")]
	private IEnumerator ShowAutoSave()
	{
		return null;
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xEDA8E8", Offset = "0xEDA8E8", VA = "0xEDA8E8")]
	private void OnObjectiveComplete(Objective o)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xEDAAD8", Offset = "0xEDAAD8", VA = "0xEDAAD8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EBBF0", Offset = "0x8EBBF0")]
	public void OnAllObjectivesComplete()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xEDAB08", Offset = "0xEDAB08", VA = "0xEDAB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBC08", Offset = "0x8EBC08")]
	private IEnumerator OnObjectivesCompleteCR(float delayBeforeMessage)
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xEDAB90", Offset = "0xEDAB90", VA = "0xEDAB90")]
	private string GetCurrentScenarioCompleteMessage()
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xEDAC94", Offset = "0xEDAC94", VA = "0xEDAC94")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EBC68", Offset = "0x8EBC68")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EBC68", Offset = "0x8EBC68")]
	private void DebugCompleteAllObjectives()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xEDACC0", Offset = "0xEDACC0", VA = "0xEDACC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBCCC", Offset = "0x8EBCCC")]
	private IEnumerator DoCompleteAllObjectives()
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xEDAD38", Offset = "0xEDAD38", VA = "0xEDAD38")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EBD2C", Offset = "0x8EBD2C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EBD2C", Offset = "0x8EBD2C")]
	private void DebugCompleteActiveObjectives()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xEDAE80", Offset = "0xEDAE80", VA = "0xEDAE80")]
	public void InitialiseWithScenario(Scenario s)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xEDB5C8", Offset = "0xEDB5C8", VA = "0xEDB5C8")]
	public void ResumeWithScenario(Scenario s)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xEDB538", Offset = "0xEDB538", VA = "0xEDB538")]
	private void PerformCommonScenarioSetup(Scenario s)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xEDBAB4", Offset = "0xEDBAB4", VA = "0xEDBAB4")]
	private void PopulateObjectives()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xEDC54C", Offset = "0xEDC54C", VA = "0xEDC54C")]
	private void PopulateModifiers()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xEDCA14", Offset = "0xEDCA14", VA = "0xEDCA14")]
	public ScenarioManager()
	{
	}
}
[Token(Token = "0x2000206")]
public class TutObjective_BreakAsteroids : Objective
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5C98", Offset = "0x8D5C98")]
	private sealed class <ShowStartMessage>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BreakAsteroids <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xEB3CC0", Offset = "0xEB3CC0", VA = "0xEB3CC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xEB3D08", Offset = "0xEB3D08", VA = "0xEB3D08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xEB3B64", Offset = "0xEB3B64", VA = "0xEB3B64")]
		[DebuggerHidden]
		public <ShowStartMessage>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xEB3B90", Offset = "0xEB3B90", VA = "0xEB3B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xEB3B94", Offset = "0xEB3B94", VA = "0xEB3B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xEB3CC8", Offset = "0xEB3CC8", VA = "0xEB3CC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatRange m_asteroidRate;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FloatRange m_asteroidRateWas;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AsteroidEmitter m_asteroidEmitter;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_numPopped;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_targetNumToPop;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_startMessageShown;

	[Token(Token = "0x1700013F")]
	public override string Text
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x10C1130", Offset = "0x10C1130", VA = "0x10C1130", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000140")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x10C11A4", Offset = "0x10C11A4", VA = "0x10C11A4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x10C11B4", Offset = "0x10C11B4", VA = "0x10C11B4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x10C11BC", Offset = "0x10C11BC", VA = "0x10C11BC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x10C1444", Offset = "0x10C1444", VA = "0x10C1444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBE80", Offset = "0x8EBE80")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x10C14BC", Offset = "0x10C14BC", VA = "0x10C14BC", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x10C1700", Offset = "0x10C1700", VA = "0x10C1700")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x10C1870", Offset = "0x10C1870", VA = "0x10C1870")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x10C19CC", Offset = "0x10C19CC", VA = "0x10C19CC")]
	private void AsteroidPopped(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x10C1B9C", Offset = "0x10C1B9C", VA = "0x10C1B9C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x10C1BA4", Offset = "0x10C1BA4", VA = "0x10C1BA4")]
	public TutObjective_BreakAsteroids()
	{
	}
}
[Token(Token = "0x2000208")]
public class TutObjective_BuildHouse : Objective
{
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CA8", Offset = "0x8D5CA8")]
	private sealed class <ShowStartMessage>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BuildHouse <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xEB4030", Offset = "0xEB4030", VA = "0xEB4030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xEB4078", Offset = "0xEB4078", VA = "0xEB4078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xEB3DCC", Offset = "0xEB3DCC", VA = "0xEB3DCC")]
		[DebuggerHidden]
		public <ShowStartMessage>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xEB3DF8", Offset = "0xEB3DF8", VA = "0xEB3DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xEB3DFC", Offset = "0xEB3DFC", VA = "0xEB3DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xEB4038", Offset = "0xEB4038", VA = "0xEB4038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CB8", Offset = "0x8D5CB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Person> <>9__21_0;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Person> <>9__21_1;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xEB3D74", Offset = "0xEB3D74", VA = "0xEB3D74")]
		public <>c()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xEB3D7C", Offset = "0xEB3D7C", VA = "0xEB3D7C")]
		internal bool <Update>b__21_0(Person x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xEB3DA8", Offset = "0xEB3DA8", VA = "0xEB3DA8")]
		internal bool <Update>b__21_1(Person x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_placedHouse;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_houseConstructed;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_folkMovedIn;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool m_holdingAHouse;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] m_availableShopPrefabs;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_housesInWorld;

	[Token(Token = "0x17000143")]
	public override string Text
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x10C1C5C", Offset = "0x10C1C5C", VA = "0x10C1C5C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x10C1CD0", Offset = "0x10C1CD0", VA = "0x10C1CD0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x10C1D5C", Offset = "0x10C1D5C", VA = "0x10C1D5C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x10C1D64", Offset = "0x10C1D64", VA = "0x10C1D64", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x10C20B0", Offset = "0x10C20B0", VA = "0x10C20B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBF30", Offset = "0x8EBF30")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x10C2128", Offset = "0x10C2128", VA = "0x10C2128", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x10C2570", Offset = "0x10C2570", VA = "0x10C2570")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x10C2798", Offset = "0x10C2798", VA = "0x10C2798")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x10C29C0", Offset = "0x10C29C0", VA = "0x10C29C0")]
	private void BuildingSettles(Building b)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x10C2AF0", Offset = "0x10C2AF0", VA = "0x10C2AF0")]
	private void ConstructionComplete(Building b)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x10C2BAC", Offset = "0x10C2BAC", VA = "0x10C2BAC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x10C3784", Offset = "0x10C3784", VA = "0x10C3784")]
	public TutObjective_BuildHouse()
	{
	}
}
[Token(Token = "0x200020B")]
public class TutObjective_BuildPower : Objective
{
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CC8", Offset = "0x8D5CC8")]
	private sealed class <ShowStartMessage>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_BuildPower <>4__this;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xEB4340", Offset = "0xEB4340", VA = "0xEB4340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xEB4388", Offset = "0xEB4388", VA = "0xEB4388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xEB413C", Offset = "0xEB413C", VA = "0xEB413C")]
		[DebuggerHidden]
		public <ShowStartMessage>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xEB4168", Offset = "0xEB4168", VA = "0xEB4168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xEB416C", Offset = "0xEB416C", VA = "0xEB416C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xEB4348", Offset = "0xEB4348", VA = "0xEB4348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CD8", Offset = "0x8D5CD8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Person> <>9__19_0;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Person> <>9__19_1;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xEB40E4", Offset = "0xEB40E4", VA = "0xEB40E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xEB40EC", Offset = "0xEB40EC", VA = "0xEB40EC")]
		internal bool <Update>b__19_0(Person x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xEB4118", Offset = "0xEB4118", VA = "0xEB4118")]
		internal bool <Update>b__19_1(Person x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Building m_powerConnectedToCloud;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_powerConstructed;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_powerStationPrefab;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PopOffItemAvailability m_powerStationShopItem;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool powerStationExistsLastFrame;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 m_pieceLocation;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 m_pieceRotation;

	[Token(Token = "0x17000147")]
	public override string Text
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x10C378C", Offset = "0x10C378C", VA = "0x10C378C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x10C3800", Offset = "0x10C3800", VA = "0x10C3800", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x10C3884", Offset = "0x10C3884", VA = "0x10C3884", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x10C388C", Offset = "0x10C388C", VA = "0x10C388C", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x10C3A58", Offset = "0x10C3A58", VA = "0x10C3A58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBFE0", Offset = "0x8EBFE0")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x10C3AD0", Offset = "0x10C3AD0", VA = "0x10C3AD0", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000AE3")]
	private T GetHeldComponent<T>() where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x10C3BAC", Offset = "0x10C3BAC", VA = "0x10C3BAC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x10C4574", Offset = "0x10C4574", VA = "0x10C4574")]
	private void DrawPlacementHint()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x10C46C8", Offset = "0x10C46C8", VA = "0x10C46C8")]
	public TutObjective_BuildPower()
	{
	}
}
[Token(Token = "0x200020E")]
public class TutObjective_InfoPanels : Objective
{
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CE8", Offset = "0x8D5CE8")]
	private sealed class <ShowStartMessage>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_InfoPanels <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xEB46D8", Offset = "0xEB46D8", VA = "0xEB46D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xEB4720", Offset = "0xEB4720", VA = "0xEB4720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xEB4390", Offset = "0xEB4390", VA = "0xEB4390")]
		[DebuggerHidden]
		public <ShowStartMessage>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xEB43BC", Offset = "0xEB43BC", VA = "0xEB43BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xEB43C0", Offset = "0xEB43C0", VA = "0xEB43C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xEB46E0", Offset = "0xEB46E0", VA = "0xEB46E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_openedMenu;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool m_complete;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UICityBasicInfo m_cityBasicInfo;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UICityNeeds m_cityNeeds;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UIObjectiveList m_objectiveList;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UIPersonListPanel m_personList;

	[Token(Token = "0x1700014B")]
	public override string Text
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x10C470C", Offset = "0x10C470C", VA = "0x10C470C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x10C4780", Offset = "0x10C4780", VA = "0x10C4780", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x10C4788", Offset = "0x10C4788", VA = "0x10C4788", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x10C4790", Offset = "0x10C4790", VA = "0x10C4790", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x10C48CC", Offset = "0x10C48CC", VA = "0x10C48CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC090", Offset = "0x8EC090")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x10C4944", Offset = "0x10C4944", VA = "0x10C4944", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x10C4CD8", Offset = "0x10C4CD8", VA = "0x10C4CD8", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x10C4E88", Offset = "0x10C4E88", VA = "0x10C4E88")]
	public TutObjective_InfoPanels()
	{
	}
}
[Token(Token = "0x2000210")]
public class TutObjective_Movement : Objective
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_distanceTarget;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_rotateTarget;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_distanceMoved;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_angleRotated;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_playerTrans;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_playerPosLastFrame;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_playerRotLastFrame;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_startMessageHideAt;

	[Token(Token = "0x1700014F")]
	public override string Text
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10C4E90", Offset = "0x10C4E90", VA = "0x10C4E90", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10C4F04", Offset = "0x10C4F04", VA = "0x10C4F04", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x10C4F30", Offset = "0x10C4F30", VA = "0x10C4F30", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x10C4FBC", Offset = "0x10C4FBC", VA = "0x10C4FBC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x10C50B0", Offset = "0x10C50B0", VA = "0x10C50B0", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x10C518C", Offset = "0x10C518C", VA = "0x10C518C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x10C57D0", Offset = "0x10C57D0", VA = "0x10C57D0")]
	public TutObjective_Movement()
	{
	}
}
[Token(Token = "0x2000211")]
public class TutObjective_NEW : Objective_HitValue
{
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5CF8", Offset = "0x8D5CF8")]
	private sealed class <ShowStartMessage>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NEW <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xEB4884", Offset = "0xEB4884", VA = "0xEB4884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xEB48CC", Offset = "0xEB48CC", VA = "0xEB48CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xEB4728", Offset = "0xEB4728", VA = "0xEB4728")]
		[DebuggerHidden]
		public <ShowStartMessage>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xEB4754", Offset = "0xEB4754", VA = "0xEB4754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xEB4758", Offset = "0xEB4758", VA = "0xEB4758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xEB488C", Offset = "0xEB488C", VA = "0xEB488C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_numThing;

	[Token(Token = "0x17000151")]
	public override string Text
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x10C57E4", Offset = "0x10C57E4", VA = "0x10C57E4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x10C5858", Offset = "0x10C5858", VA = "0x10C5858", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x10C5870", Offset = "0x10C5870", VA = "0x10C5870", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x10C5878", Offset = "0x10C5878", VA = "0x10C5878", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x10C58B0", Offset = "0x10C58B0", VA = "0x10C58B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC140", Offset = "0x8EC140")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x10C5928", Offset = "0x10C5928", VA = "0x10C5928", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x10C59F4", Offset = "0x10C59F4", VA = "0x10C59F4", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x10C59FC", Offset = "0x10C59FC", VA = "0x10C59FC")]
	public TutObjective_NEW()
	{
	}
}
[Token(Token = "0x2000213")]
public class TutObjective_NewInterest : Objective
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D08", Offset = "0x8D5D08")]
	private sealed class <ShowStartMessage>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewInterest <>4__this;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0xEB4EF8", Offset = "0xEB4EF8", VA = "0xEB4EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xEB4F40", Offset = "0xEB4F40", VA = "0xEB4F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xEB4D9C", Offset = "0xEB4D9C", VA = "0xEB4D9C")]
		[DebuggerHidden]
		public <ShowStartMessage>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xEB4DC8", Offset = "0xEB4DC8", VA = "0xEB4DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xEB4DCC", Offset = "0xEB4DCC", VA = "0xEB4DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xEB4F00", Offset = "0xEB4F00", VA = "0xEB4F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D18", Offset = "0x8D5D18")]
	private sealed class <GotANewItem>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewInterest <>4__this;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject item;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <interName>5__2;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xEB4D4C", Offset = "0xEB4D4C", VA = "0xEB4D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xEB4D94", Offset = "0xEB4D94", VA = "0xEB4D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xEB48D4", Offset = "0xEB48D4", VA = "0xEB48D4")]
		[DebuggerHidden]
		public <GotANewItem>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xEB4900", Offset = "0xEB4900", VA = "0xEB4900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xEB4904", Offset = "0xEB4904", VA = "0xEB4904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xEB4D54", Offset = "0xEB4D54", VA = "0xEB4D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_completed;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AsteroidEmitter m_asteroidEmitter;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_itemProbabilityBefore;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_lockedItemProbabilityBefore;

	[Token(Token = "0x17000155")]
	public override string Text
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x10C5A04", Offset = "0x10C5A04", VA = "0x10C5A04", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x10C5A78", Offset = "0x10C5A78", VA = "0x10C5A78", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x10C5A80", Offset = "0x10C5A80", VA = "0x10C5A80", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x10C5A88", Offset = "0x10C5A88", VA = "0x10C5A88", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x10C5CCC", Offset = "0x10C5CCC", VA = "0x10C5CCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC1F0", Offset = "0x8EC1F0")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x10C5D44", Offset = "0x10C5D44", VA = "0x10C5D44", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x10C5F48", Offset = "0x10C5F48", VA = "0x10C5F48")]
	private void OnBeginInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x10C60A4", Offset = "0x10C60A4", VA = "0x10C60A4")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x10C6200", Offset = "0x10C6200", VA = "0x10C6200")]
	private void AsteroidPopped(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x10C62DC", Offset = "0x10C62DC", VA = "0x10C62DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC250", Offset = "0x8EC250")]
	private IEnumerator GotANewItem(GameObject item)
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x10C6370", Offset = "0x10C6370", VA = "0x10C6370", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x10C6428", Offset = "0x10C6428", VA = "0x10C6428")]
	public TutObjective_NewInterest()
	{
	}
}
[Token(Token = "0x2000216")]
public class TutObjective_NewPerson : Objective
{
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D28", Offset = "0x8D5D28")]
	private sealed class <ShowStartMessage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_NewPerson <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xEB5188", Offset = "0xEB5188", VA = "0xEB5188", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xEB51D0", Offset = "0xEB51D0", VA = "0xEB51D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xEB4F48", Offset = "0xEB4F48", VA = "0xEB4F48")]
		[DebuggerHidden]
		public <ShowStartMessage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xEB4F74", Offset = "0xEB4F74", VA = "0xEB4F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xEB4F78", Offset = "0xEB4F78", VA = "0xEB4F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xEB5190", Offset = "0xEB5190", VA = "0xEB5190", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_newFolkMovedIn;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_newFolkArrived;

	[Token(Token = "0x1700015B")]
	public override string Text
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x10C6438", Offset = "0x10C6438", VA = "0x10C6438", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015C")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x10C64AC", Offset = "0x10C64AC", VA = "0x10C64AC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x10C64B4", Offset = "0x10C64B4", VA = "0x10C64B4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x10C64BC", Offset = "0x10C64BC", VA = "0x10C64BC", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x10C6514", Offset = "0x10C6514", VA = "0x10C6514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC350", Offset = "0x8EC350")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x10C658C", Offset = "0x10C658C", VA = "0x10C658C", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x10C671C", Offset = "0x10C671C", VA = "0x10C671C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x10C6C98", Offset = "0x10C6C98", VA = "0x10C6C98")]
	public TutObjective_NewPerson()
	{
	}
}
[Token(Token = "0x2000218")]
public class TutObjective_SpecialistFacilities : Objective
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D38", Offset = "0x8D5D38")]
	private sealed class <ShowStartMessage>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_SpecialistFacilities <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xEB551C", Offset = "0xEB551C", VA = "0xEB551C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xEB5564", Offset = "0xEB5564", VA = "0xEB5564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xEB51D8", Offset = "0xEB51D8", VA = "0xEB51D8")]
		[DebuggerHidden]
		public <ShowStartMessage>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xEB5204", Offset = "0xEB5204", VA = "0xEB5204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xEB5208", Offset = "0xEB5208", VA = "0xEB5208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xEB5524", Offset = "0xEB5524", VA = "0xEB5524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool m_constructionComplete;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Facility m_completedFacility;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityPieceProperties[] m_availableCityPieces;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityPiecePropertyList[] m_availableCityPieceLists;

	[Token(Token = "0x1700015F")]
	public override string Text
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x10C6CA0", Offset = "0x10C6CA0", VA = "0x10C6CA0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x10C6D14", Offset = "0x10C6D14", VA = "0x10C6D14", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x10C6D80", Offset = "0x10C6D80", VA = "0x10C6D80", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x10C6DEC", Offset = "0x10C6DEC", VA = "0x10C6DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC400", Offset = "0x8EC400")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x10C6E64", Offset = "0x10C6E64", VA = "0x10C6E64", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x10C70DC", Offset = "0x10C70DC", VA = "0x10C70DC", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x10C7770", Offset = "0x10C7770", VA = "0x10C7770")]
	public TutObjective_SpecialistFacilities()
	{
	}
}
[Token(Token = "0x200021A")]
public class TutObjective_Wait : Objective_HitValue
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_frameCount;

	[Token(Token = "0x17000163")]
	public override string Text
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xE8AB6C", Offset = "0xE8AB6C", VA = "0xE8AB6C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000164")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xE8AB74", Offset = "0xE8AB74", VA = "0xE8AB74", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xE8AB84", Offset = "0xE8AB84", VA = "0xE8AB84", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xE8AB98", Offset = "0xE8AB98", VA = "0xE8AB98")]
	public TutObjective_Wait()
	{
	}
}
[Token(Token = "0x200021B")]
public class TutObjective_WhatIsHappiness : Objective
{
	[Serializable]
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D48", Offset = "0x8D5D48")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<HappinessGoal> <>9__13_0;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xEB55D0", Offset = "0xEB55D0", VA = "0xEB55D0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xEB55D8", Offset = "0xEB55D8", VA = "0xEB55D8")]
		internal bool <Begin>b__13_0(HappinessGoal x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D58", Offset = "0x8D5D58")]
	private sealed class <ShowStartMessage>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_WhatIsHappiness <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xEB60D4", Offset = "0xEB60D4", VA = "0xEB60D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xEB611C", Offset = "0xEB611C", VA = "0xEB611C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xEB5C34", Offset = "0xEB5C34", VA = "0xEB5C34")]
		[DebuggerHidden]
		public <ShowStartMessage>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xEB5C60", Offset = "0xEB5C60", VA = "0xEB5C60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xEB5C64", Offset = "0xEB5C64", VA = "0xEB5C64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xEB60DC", Offset = "0xEB60DC", VA = "0xEB60DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D68", Offset = "0x8D5D68")]
	private sealed class <GotSMINowMoreHP>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutObjective_WhatIsHappiness <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xEB5BE4", Offset = "0xEB5BE4", VA = "0xEB5BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xEB5C2C", Offset = "0xEB5C2C", VA = "0xEB5C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xEB5654", Offset = "0xEB5654", VA = "0xEB5654")]
		[DebuggerHidden]
		public <GotSMINowMoreHP>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xEB5680", Offset = "0xEB5680", VA = "0xEB5680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xEB5684", Offset = "0xEB5684", VA = "0xEB5684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xEB5BEC", Offset = "0xEB5BEC", VA = "0xEB5BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CityPieceProperties[] m_notAvailableCityPieces;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_startMessageShown;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_busReadyToLaunch;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HG_SeenMyInterest m_HgSeenMyInterest;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_seenAllInterestItems;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool m_seenAllInterestItemsMsgComplete;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_happinessNeededWas;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x17000165")]
	public override string Text
	{
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xE8ABA0", Offset = "0xE8ABA0", VA = "0xE8ABA0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public override bool IsComplete
	{
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xE8AC14", Offset = "0xE8AC14", VA = "0xE8AC14", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xE8AC1C", Offset = "0xE8AC1C", VA = "0xE8AC1C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xE8AC24", Offset = "0xE8AC24", VA = "0xE8AC24", Slot = "9")]
	public override void Begin()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xE8AEA4", Offset = "0xE8AEA4", VA = "0xE8AEA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC4B0", Offset = "0x8EC4B0")]
	private IEnumerator ShowStartMessage()
	{
		return null;
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xE8AF1C", Offset = "0xE8AF1C", VA = "0xE8AF1C", Slot = "10")]
	public override void Finish(bool isForced = false)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xE8AFF8", Offset = "0xE8AFF8", VA = "0xE8AFF8")]
	private void HgSeenMyInterestStatusChanged(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xE8B04C", Offset = "0xE8B04C", VA = "0xE8B04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC510", Offset = "0x8EC510")]
	private IEnumerator GotSMINowMoreHP()
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xE8B0C4", Offset = "0xE8B0C4", VA = "0xE8B0C4", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xE8B3E4", Offset = "0xE8B3E4", VA = "0xE8B3E4")]
	public TutObjective_WhatIsHappiness()
	{
	}
}
[Token(Token = "0x200021F")]
public class OculusWwiseInitialize : MonoBehaviour
{
	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xEC51E0", Offset = "0xEC51E0", VA = "0xEC51E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xEC51E4", Offset = "0xEC51E4", VA = "0xEC51E4")]
	public OculusWwiseInitialize()
	{
	}
}
[Token(Token = "0x2000220")]
public class ModelVolume : MonoBehaviour
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_scaleAdjustment;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1610E3C", Offset = "0x1610E3C", VA = "0x1610E3C")]
	public float GetScaleForPreviewBounds(Bounds previewBounds)
	{
		return default(float);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1610EE0", Offset = "0x1610EE0", VA = "0x1610EE0")]
	public void ScaleToFit(Transform previewItem)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1611138", Offset = "0x1611138", VA = "0x1611138")]
	public ModelVolume()
	{
	}
}
[Token(Token = "0x2000221")]
public class PaletteToggler : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_myItem;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_hideItems;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xECA460", Offset = "0xECA460", VA = "0xECA460")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xECA4B4", Offset = "0xECA4B4", VA = "0xECA4B4")]
	public PaletteToggler()
	{
	}
}
[Token(Token = "0x2000222")]
public class PopOffCityPiece : MonoBehaviour
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityPiecePropertyList m_availableCityPieces;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CityPieceProperties m_availableCityPiece;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_itemNameSizePercent;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1289450", Offset = "0x1289450", VA = "0x1289450")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x12894B0", Offset = "0x12894B0", VA = "0x12894B0")]
	public PopOffCityPiece()
	{
	}
}
[Token(Token = "0x2000223")]
public class PopOffItem : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	public class NVRHandEvent : UnityEvent<NVRHand>
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x106628C", Offset = "0x106628C", VA = "0x106628C")]
		public NVRHandEvent()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D78", Offset = "0x8D5D78")]
	private sealed class <HideShopCR>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x106623C", Offset = "0x106623C", VA = "0x106623C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x1066284", Offset = "0x1066284", VA = "0x1066284", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1066134", Offset = "0x1066134", VA = "0x1066134")]
		[DebuggerHidden]
		public <HideShopCR>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1066160", Offset = "0x1066160", VA = "0x1066160", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1066164", Offset = "0x1066164", VA = "0x1066164", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1066244", Offset = "0x1066244", VA = "0x1066244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_base;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_popOffDist;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_modelRoot;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRHandEvent OnPopOff;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDE30", Offset = "0x8DDE30")]
	public float m_lerpBackRate;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color m_lineDefaultColour;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color m_lineWillPopColour;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_colourBlendCurve;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_popFX;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDE68", Offset = "0x8DDE68")]
	public ushort pulseDurationMS;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_lastPulse;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve m_hapticPulse;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_hapticAmp;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ElasticLine m_eLine;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_hasPopped;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x12894C0", Offset = "0x12894C0", VA = "0x12894C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x12896CC", Offset = "0x12896CC", VA = "0x12896CC")]
	private void HideShop(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x12896F8", Offset = "0x12896F8", VA = "0x12896F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC610", Offset = "0x8EC610")]
	private IEnumerator HideShopCR()
	{
		return null;
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1289754", Offset = "0x1289754", VA = "0x1289754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1289CE8", Offset = "0x1289CE8", VA = "0x1289CE8")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1289D34", Offset = "0x1289D34", VA = "0x1289D34")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1289C1C", Offset = "0x1289C1C", VA = "0x1289C1C")]
	private void PopOff()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1289CC0", Offset = "0x1289CC0", VA = "0x1289CC0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC670", Offset = "0x8EC670")]
	private void DoReset()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1289D38", Offset = "0x1289D38", VA = "0x1289D38")]
	public PopOffItem()
	{
	}
}
[Token(Token = "0x2000226")]
public class PopOffItemAvailability : MonoBehaviour, IToolTipProvider
{
	[Token(Token = "0x2000227")]
	public enum LockReason
	{
		[Token(Token = "0x4000B11")]
		NotManualLocked = -1,
		[Token(Token = "0x4000B12")]
		Modifier,
		[Token(Token = "0x4000B13")]
		Restricted,
		[Token(Token = "0x4000B14")]
		HP,
		[Token(Token = "0x4000B15")]
		NotYetFound
	}

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_cantBuyMaterial;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_availableLastFrame;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PopOffItem m_poi;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PopOffShopItem m_posi;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItemCost m_poic;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_poiii;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shop m_shop;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_unavailableUI;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_Text m_unavailableLabel;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer m_unavailableSprite;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_tooltip;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color m_unavailableToolTipColor;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool[] m_locked;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] m_lockReason;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string[] m_lockToolTip;

	[Token(Token = "0x1700016D")]
	public string ToolTipText
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1289E6C", Offset = "0x1289E6C", VA = "0x1289E6C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public int ToolTipOrder
	{
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1289E74", Offset = "0x1289E74", VA = "0x1289E74", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016F")]
	public bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1289E7C", Offset = "0x1289E7C", VA = "0x1289E7C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public Color ToolTipColor
	{
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1289E8C", Offset = "0x1289E8C", VA = "0x1289E8C", Slot = "7")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1289E98", Offset = "0x1289E98", VA = "0x1289E98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x128A370", Offset = "0x128A370", VA = "0x128A370")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x128A4B4", Offset = "0x128A4B4", VA = "0x128A4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x128A53C", Offset = "0x128A53C", VA = "0x128A53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x128A544", Offset = "0x128A544", VA = "0x128A544")]
	public bool HasBeenFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x128A584", Offset = "0x128A584", VA = "0x128A584")]
	public void SetCustomLockedNone()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x128A688", Offset = "0x128A688", VA = "0x128A688")]
	public void SetCustomLocked(bool b, LockReason reason, string tooltip)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x128A7B0", Offset = "0x128A7B0", VA = "0x128A7B0")]
	private bool IsAvailable(out string reason)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x128A0D4", Offset = "0x128A0D4", VA = "0x128A0D4")]
	private void UpdateAvailable(bool force = false)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x128AACC", Offset = "0x128AACC", VA = "0x128AACC")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x128AAD4", Offset = "0x128AAD4", VA = "0x128AAD4")]
	public PopOffItemAvailability()
	{
	}
}
[Token(Token = "0x2000228")]
public class PopOffItemCost : MonoBehaviour
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_cost;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_buildCost;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_priceLabel;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_priceBGs;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_hideLabelsForZeroCost;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_requiresScaffold;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItem m_poi;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x128ADFC", Offset = "0x128ADFC", VA = "0x128ADFC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x128AEEC", Offset = "0x128AEEC", VA = "0x128AEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x128B058", Offset = "0x128B058", VA = "0x128B058")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x128B170", Offset = "0x128B170", VA = "0x128B170")]
	private void ItemPurchased(NVRHand h)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x128B370", Offset = "0x128B370", VA = "0x128B370")]
	public void SetCost(float c, float buildCost = 0f, bool requiresScaffold = false)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x128B4C0", Offset = "0x128B4C0", VA = "0x128B4C0")]
	public PopOffItemCost()
	{
	}
}
[Token(Token = "0x2000229")]
public class PopOffPrefab : MonoBehaviour
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_prefabs;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x128B4D0", Offset = "0x128B4D0", VA = "0x128B4D0")]
	public PopOffPrefab()
	{
	}
}
[Token(Token = "0x200022A")]
public class PopOffShopItem : MonoBehaviour, IToolTipProvider, ISfHandHoverResponder
{
	[Serializable]
	[Token(Token = "0x200022B")]
	public class Item
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_locKey;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_toolTipLocKey;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_shopItem;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_previewObject;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer m_previewObjectRenderer;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material m_previewDefaultMaterial;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PurchasableItem m_purchasableItem;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x10662D8", Offset = "0x10662D8", VA = "0x10662D8")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200022C")]
	public enum Alignment
	{
		[Token(Token = "0x4000B37")]
		TransformOrigin,
		[Token(Token = "0x4000B38")]
		GrabPoint
	}

	[Token(Token = "0x200022D")]
	public delegate void ModelChangeDelegate();

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Item[] m_items;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item m_currentItem;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Alignment m_alignToHand;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro m_nameLabel;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopOffItem m_popOffItem;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PopOffItemAvailability m_popOffItemAvailability;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToolTip m_toolTip;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_itemNameSizePercent;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_doPopTween;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_tooltip;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ModelChangeDelegate OnModelChanged;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_modelVisible;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material m_overrideMaterial;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float xwas;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float triggerAt;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string ms_nextItemSound;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string ms_prevItemSound;

	[Token(Token = "0x17000171")]
	public string ToolTipText
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x128B4D8", Offset = "0x128B4D8", VA = "0x128B4D8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public int ToolTipOrder
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x128B53C", Offset = "0x128B53C", VA = "0x128B53C", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000173")]
	public bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x128B544", Offset = "0x128B544", VA = "0x128B544", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public Color ToolTipColor
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x128B54C", Offset = "0x128B54C", VA = "0x128B54C", Slot = "7")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x128B554", Offset = "0x128B554", VA = "0x128B554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x128B6DC", Offset = "0x128B6DC", VA = "0x128B6DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x128B770", Offset = "0x128B770", VA = "0x128B770")]
	public void PickNextPrefab()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x128BC0C", Offset = "0x128BC0C", VA = "0x128BC0C")]
	public void PickPrevPrefab()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x128B680", Offset = "0x128B680", VA = "0x128B680")]
	public void PickNewPrefab()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x128B818", Offset = "0x128B818", VA = "0x128B818")]
	public void SetupNewPrefab(Item newItem)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x128BCB4", Offset = "0x128BCB4", VA = "0x128BCB4")]
	private void SetCost()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x128BDB8", Offset = "0x128BDB8", VA = "0x128BDB8")]
	private void OnPoppedOff(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x128AA7C", Offset = "0x128AA7C", VA = "0x128AA7C")]
	public void SetModelVisible(bool b)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x128A974", Offset = "0x128A974", VA = "0x128A974")]
	public void SetModelOverrideMaterial(Material overrideMaterial)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x128C3A4", Offset = "0x128C3A4", VA = "0x128C3A4", Slot = "8")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x128C48C", Offset = "0x128C48C", VA = "0x128C48C", Slot = "9")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x128C71C", Offset = "0x128C71C", VA = "0x128C71C", Slot = "10")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x128C7B0", Offset = "0x128C7B0", VA = "0x128C7B0")]
	public PopOffShopItem()
	{
	}
}
[Token(Token = "0x200022E")]
public class PauseGame
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string ms_pauseSFX;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ms_unPauseSFX;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool ms_paused;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool ms_inputPaused;

	[Token(Token = "0x17000175")]
	public static bool IsPaused
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xECCC74", Offset = "0xECCC74", VA = "0xECCC74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public static bool IsInputPaused
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xECCCD8", Offset = "0xECCCD8", VA = "0xECCCD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xECCD3C", Offset = "0xECCD3C", VA = "0xECCD3C")]
	public static void DoPause()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xECCEFC", Offset = "0xECCEFC", VA = "0xECCEFC")]
	public static void DoResume()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xECCFE4", Offset = "0xECCFE4", VA = "0xECCFE4")]
	public static void DoPauseInput()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xECD108", Offset = "0xECD108", VA = "0xECD108")]
	public static void DoResumeInput()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xECCE2C", Offset = "0xECCE2C", VA = "0xECCE2C")]
	private static void EndEphemeralGameInteractions()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xECD224", Offset = "0xECD224", VA = "0xECD224")]
	public PauseGame()
	{
	}
}
[Token(Token = "0x200022F")]
public class PersonHousing
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Building ownedHouse;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Building assignedHouse;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PersonHousingState state;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onStateChanged;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1259370", Offset = "0x1259370", VA = "0x1259370")]
	public PersonHousing(Building owned, Building assigned)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x12595B4", Offset = "0x12595B4", VA = "0x12595B4")]
	private void OnBuildingDestroyed(Building b)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1254FA8", Offset = "0x1254FA8", VA = "0x1254FA8")]
	public bool AssignedHouseIsOwnedByAnother(Person person)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1259698", Offset = "0x1259698", VA = "0x1259698")]
	public void Assign(Building house)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x125504C", Offset = "0x125504C", VA = "0x125504C")]
	public void Unassign()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1259794", Offset = "0x1259794", VA = "0x1259794")]
	public bool TryGetOwned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x125974C", Offset = "0x125974C", VA = "0x125974C")]
	public bool TryGetAssigned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x12597DC", Offset = "0x12597DC", VA = "0x12597DC")]
	public bool TryGetOwnedOrAssigned(out Building building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x125981C", Offset = "0x125981C", VA = "0x125981C")]
	public void MoveIn(Building newHouse, Person person)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x12594D4", Offset = "0x12594D4", VA = "0x12594D4")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1259B10", Offset = "0x1259B10", VA = "0x1259B10")]
	public void Highlight(bool value, bool includeAssigned, Highlighter.Style style = Highlighter.Style.OutlineCutThrough)
	{
	}
}
[Token(Token = "0x2000230")]
public enum PersonHousingState
{
	[Token(Token = "0x4000B42")]
	Homeless,
	[Token(Token = "0x4000B43")]
	Housed,
	[Token(Token = "0x4000B44")]
	Assigned
}
[Token(Token = "0x2000231")]
public class PhotoTaker : MonoBehaviour
{
	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x125C25C", Offset = "0x125C25C", VA = "0x125C25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x125C260", Offset = "0x125C260", VA = "0x125C260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x125C264", Offset = "0x125C264", VA = "0x125C264")]
	public PhotoTaker()
	{
	}
}
[Token(Token = "0x2000232")]
public class PhraseMaker
{
	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x125C26C", Offset = "0x125C26C", VA = "0x125C26C")]
	public static string GenerateFacilityName(FacilityDefinition fd, System.Random rand, List<Interest> interests)
	{
		return null;
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x125C4A8", Offset = "0x125C4A8", VA = "0x125C4A8")]
	public PhraseMaker()
	{
	}
}
[Token(Token = "0x2000233")]
public class PicoXRRecalibrationSetup : MonoBehaviour
{
	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x125C4B0", Offset = "0x125C4B0", VA = "0x125C4B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x125C5D0", Offset = "0x125C5D0", VA = "0x125C5D0")]
	public PicoXRRecalibrationSetup()
	{
	}
}
[Token(Token = "0x2000234")]
public class PinToController : MonoBehaviour
{
	[Token(Token = "0x2000235")]
	public enum Handedness
	{
		[Token(Token = "0x4000B49")]
		Right,
		[Token(Token = "0x4000B4A")]
		Left
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5D88", Offset = "0x8D5D88")]
	private sealed class <Pin>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PinToController <>4__this;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <placed>5__2;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x1063C70", Offset = "0x1063C70", VA = "0x1063C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x1063CB8", Offset = "0x1063CB8", VA = "0x1063CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1063950", Offset = "0x1063950", VA = "0x1063950")]
		[DebuggerHidden]
		public <Pin>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x106397C", Offset = "0x106397C", VA = "0x106397C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1063980", Offset = "0x1063980", VA = "0x1063980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1063C78", Offset = "0x1063C78", VA = "0x1063C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons m_button;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Handedness m_handIfUndefined;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x125C5D8", Offset = "0x125C5D8", VA = "0x125C5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x125C67C", Offset = "0x125C67C", VA = "0x125C67C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x125C604", Offset = "0x125C604", VA = "0x125C604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC6D8", Offset = "0x8EC6D8")]
	private IEnumerator Pin()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x125C6F0", Offset = "0x125C6F0", VA = "0x125C6F0")]
	public PinToController()
	{
	}
}
[Token(Token = "0x2000237")]
public class PlatformSpecialLoader : MonoBehaviour
{
	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x125D448", Offset = "0x125D448", VA = "0x125D448")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x125D5C8", Offset = "0x125D5C8", VA = "0x125D5C8")]
	public PlatformSpecialLoader()
	{
	}
}
[Token(Token = "0x2000238")]
public class PointAndSnap : MonoBehaviour
{
	[Token(Token = "0x2000239")]
	public delegate void OnPickupDelegate();

	[Token(Token = "0x200023A")]
	public delegate void OnReleasedDelegate(bool didSnap, bool validPlacement, RaycastHit hitInfo);

	[Token(Token = "0x200023B")]
	public delegate bool ValidTarget(Collider collider);

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DDEA0", Offset = "0x8DDEA0")]
	public static bool ms_highlightBlockers;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DDEE8", Offset = "0x8DDEE8")]
	public static bool ms_edgeSnapping;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DDF30", Offset = "0x8DDF30")]
	public static float ms_edgeSnapScale;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DDF78", Offset = "0x8DDF78")]
	public static float ms_edgeSnapInset;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DDFB8", Offset = "0x8DDFB8")]
	public static bool ms_edgeSnappingAuto;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DE000", Offset = "0x8DE000")]
	public static float ms_edgeSnapAutoDist;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DE040", Offset = "0x8DE040")]
	public static float ms_edgeSnapRayDist;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Collider[] ms_overlapColliderResults;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_customUI;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8DE080", Offset = "0x8DE080")]
	public PointAndSnapUI m_ui;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter m_previewMeshSource;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_showMeshPreview;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_rayLength;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_rayStartOffset;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE0C0", Offset = "0x8DE0C0")]
	public float m_rayHandCorrectionFraction;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_rayVec;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ReadOnly]
	public bool m_rayHit;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RaycastHit m_hitInfo;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_pickUpPos;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion m_pickupRot;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE0E8", Offset = "0x8DE0E8")]
	private Transform <m_pickupParent>k__BackingField;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public OnPickupDelegate OnWillPickUp;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public OnPickupDelegate OnWasPickedUp;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public OnReleasedDelegate OnSnap;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ValidTarget CheckForValidTarget;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform rayLocator;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool rayLocatorWasRotated;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int defaultLayerMask;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bounds m_placementTestBounds;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Collider m_placementCollider;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool m_doCollision;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int m_placementCorrectionAttempts;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool validPlacement;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool validPlacementAtHitPoint;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly float[] placementAttemptDistances;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool updateHeld;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform m_transform;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE0F8", Offset = "0x8DE0F8")]
	public float m_edgeCheckDist;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_edgeCheckHeight;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float m_edgeCheckDepth;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 m_snappedPosition;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion m_snappedRotation;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool m_edgeSnapping;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject model;

	[Token(Token = "0x17000179")]
	public Transform m_pickupParent
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1285DC8", Offset = "0x1285DC8", VA = "0x1285DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC788", Offset = "0x8EC788")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1285DD0", Offset = "0x1285DD0", VA = "0x1285DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC798", Offset = "0x8EC798")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1285DD8", Offset = "0x1285DD8", VA = "0x1285DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x12863AC", Offset = "0x12863AC", VA = "0x12863AC")]
	private void HideUI()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x12864DC", Offset = "0x12864DC", VA = "0x12864DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1286A2C", Offset = "0x1286A2C", VA = "0x1286A2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1286B74", Offset = "0x1286B74", VA = "0x1286B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1286C0C", Offset = "0x1286C0C", VA = "0x1286C0C")]
	private void CheckForPossibleSnap()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1287CEC", Offset = "0x1287CEC", VA = "0x1287CEC")]
	private Bounds GetTestBounds(Vector3 potential3dModelPosition, Quaternion potential3dModelRotation, Vector3 rayLocatorLocalPosition)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1287EF4", Offset = "0x1287EF4", VA = "0x1287EF4")]
	private void UpdateOnRayHit(Vector3 potential3dModelPosition, Quaternion potential3dModelRotation)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1288198", Offset = "0x1288198", VA = "0x1288198")]
	private void UpdateOnRayMiss()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1287798", Offset = "0x1287798", VA = "0x1287798")]
	private Vector3 ValidateRayStart(Vector3 rayLocatorLocalPosition, Vector3 rayDirection)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x128829C", Offset = "0x128829C", VA = "0x128829C")]
	private bool Depenetrate(Vector3 rayDirection, Vector3 rayStart, int numTerrainColliders, out Vector3 depenetratedPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x128851C", Offset = "0x128851C", VA = "0x128851C")]
	private static void DebugBounds(Bounds bounds, Quaternion rotation, Color color)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1288B30", Offset = "0x1288B30", VA = "0x1288B30")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1288CA0", Offset = "0x1288CA0", VA = "0x1288CA0")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1286670", Offset = "0x1286670", VA = "0x1286670")]
	private void Reinit()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1288BAC", Offset = "0x1288BAC", VA = "0x1288BAC")]
	private void UpdateParentColliders(Transform target)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1288D3C", Offset = "0x1288D3C", VA = "0x1288D3C")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1287BD4", Offset = "0x1287BD4", VA = "0x1287BD4")]
	private Vector3 GetOffsetPosition(Quaternion rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x12879F4", Offset = "0x12879F4", VA = "0x12879F4")]
	private Quaternion GetRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x12890BC", Offset = "0x12890BC", VA = "0x12890BC")]
	public PointAndSnap()
	{
	}
}
[Token(Token = "0x200023C")]
public class PointAndSnapUI : MonoBehaviour
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shapes.Line m_line;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_snapTargetVis;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter m_3dModel;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer m_3dModelRenderer;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_blueMaterial;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_redMaterial;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x1289298", Offset = "0x1289298", VA = "0x1289298")]
	public PointAndSnapUI()
	{
	}
}
[Token(Token = "0x200023D")]
[ExecuteInEditMode]
public class PolylineSpline : Vitei.Line
{
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5DA8", Offset = "0x8D5DA8")]
	private sealed class <GeneratePoints>d__5 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Point <>2__current;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PolylineSpline <>4__this;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <step>5__2;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x1700017A")]
		private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x1065FD4", Offset = "0x1065FD4", VA = "0x1065FD4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Point);
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x1066020", Offset = "0x1066020", VA = "0x1066020", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1065ED4", Offset = "0x1065ED4", VA = "0x1065ED4")]
		[DebuggerHidden]
		public <GeneratePoints>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1065F0C", Offset = "0x1065F0C", VA = "0x1065F0C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1065F10", Offset = "0x1065F10", VA = "0x1065F10", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1065FE0", Offset = "0x1065FE0", VA = "0x1065FE0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1066080", Offset = "0x1066080", VA = "0x1066080", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1066130", Offset = "0x1066130", VA = "0x1066130", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_start;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_end;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_startCache;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_endCache;

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x12892A0", Offset = "0x12892A0", VA = "0x12892A0", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC7A8", Offset = "0x8EC7A8")]
	protected override IEnumerable<Point> GeneratePoints()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1289318", Offset = "0x1289318", VA = "0x1289318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1289394", Offset = "0x1289394", VA = "0x1289394", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x128931C", Offset = "0x128931C", VA = "0x128931C")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1289448", Offset = "0x1289448", VA = "0x1289448")]
	public PolylineSpline()
	{
	}
}
[Token(Token = "0x200023F")]
public class Probability : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	public enum Rarity
	{
		[Token(Token = "0x4000B91")]
		Common = 50,
		[Token(Token = "0x4000B92")]
		Uncommon = 30,
		[Token(Token = "0x4000B93")]
		Rare = 10,
		[Token(Token = "0x4000B94")]
		Epic = 5,
		[Token(Token = "0x4000B95")]
		Legendary = 3,
		[Token(Token = "0x4000B96")]
		Mythic = 1,
		[Token(Token = "0x4000B97")]
		Custom = -1
	}

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rarity m_rarity;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DE140", Offset = "0x8DE140")]
	private float m_value;

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x128E5C8", Offset = "0x128E5C8", VA = "0x128E5C8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x128E5E0", Offset = "0x128E5E0", VA = "0x128E5E0")]
	public float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x128E5FC", Offset = "0x128E5FC", VA = "0x128E5FC")]
	public void SetValue(float p)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x128E60C", Offset = "0x128E60C", VA = "0x128E60C")]
	public Probability()
	{
	}
}
[Token(Token = "0x2000241")]
public class ProgressBar_Sprites : MonoBehaviour
{
	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE1A0", Offset = "0x8DE1A0")]
	public float m_progress;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_maxWidth;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_borderWidth;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer m_fillSprite;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer m_fillSpriteBorder;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE1B8", Offset = "0x8DE1B8")]
	public bool m_updateInEditor;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x128EDBC", Offset = "0x128EDBC", VA = "0x128EDBC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x128EDD0", Offset = "0x128EDD0", VA = "0x128EDD0")]
	public void SetProgress(float prog)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x128EED0", Offset = "0x128EED0", VA = "0x128EED0")]
	public ProgressBar_Sprites()
	{
	}
}
[Token(Token = "0x2000242")]
public class Progression : MonoBehaviour
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TheSun m_theSun;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_solarFlaresStartAtScrapBalance;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x128EEE4", Offset = "0x128EEE4", VA = "0x128EEE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x128EFA4", Offset = "0x128EFA4", VA = "0x128EFA4")]
	public Progression()
	{
	}
}
[Token(Token = "0x2000243")]
public class PurchasableItem : MonoBehaviour
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_cost;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_buildCost;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_requiresScaffold;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StretchableItem stretcher;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasStretcher;

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x128EFB4", Offset = "0x128EFB4", VA = "0x128EFB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x128F194", Offset = "0x128F194", VA = "0x128F194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x128F248", Offset = "0x128F248", VA = "0x128F248")]
	private void OnExploded(StretchableItem si, GameObject newCreatedObj)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x128F678", Offset = "0x128F678", VA = "0x128F678")]
	private void OnDidNotExplode(StretchableItem si)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x128F83C", Offset = "0x128F83C", VA = "0x128F83C")]
	public PurchasableItem()
	{
	}
}
[Token(Token = "0x2000244")]
public class Radio : MonoBehaviour
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_songName;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_songNameLabel;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_volumeSteps;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_scrollSpeed;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_numLetters;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_textMonoSpace;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_poweredOffText;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_eventTurnOn;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string m_eventTurnOff;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_sfxLoudnessPush;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_sfxLoudnessRelease;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_sfxPowerPush;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string m_sfxPowerRelease;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string m_sfxVolumePush;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string m_sfxVolumeRelease;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string m_sfxNextTrackPush;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_sfxNextTrackRelease;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isOn;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_volume;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] m_buttonsHiddenToStart;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] m_scrollingText;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int m_lastIdx;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_scrollTimer;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_delayBeforeCanTurnOff;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_turnedOnAt;

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1293E2C", Offset = "0x1293E2C", VA = "0x1293E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x12941BC", Offset = "0x12941BC", VA = "0x12941BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x129426C", Offset = "0x129426C", VA = "0x129426C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EC878", Offset = "0x8EC878")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC878", Offset = "0x8EC878")]
	public void RadioOn()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1294338", Offset = "0x1294338", VA = "0x1294338")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EC8DC", Offset = "0x8EC8DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC8DC", Offset = "0x8EC8DC")]
	public void RadioOff()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1294410", Offset = "0x1294410", VA = "0x1294410")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC940", Offset = "0x8EC940")]
	public void VolUpPressed()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1294574", Offset = "0x1294574", VA = "0x1294574")]
	public void VolUpUnPressed()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1294660", Offset = "0x1294660", VA = "0x1294660")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC958", Offset = "0x8EC958")]
	public void VolDnPressed()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x12947C4", Offset = "0x12947C4", VA = "0x12947C4")]
	public void VolDnUnPressed()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x12948B0", Offset = "0x12948B0", VA = "0x12948B0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC970", Offset = "0x8EC970")]
	public void LoudnessPressed()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x12949C8", Offset = "0x12949C8", VA = "0x12949C8")]
	public void LoudnessUnPressed()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1294AB4", Offset = "0x1294AB4", VA = "0x1294AB4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC988", Offset = "0x8EC988")]
	public void NextTrackPressed()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1294BE0", Offset = "0x1294BE0", VA = "0x1294BE0")]
	public void NextTrackUnPressed()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1294CCC", Offset = "0x1294CCC", VA = "0x1294CCC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EC9A0", Offset = "0x8EC9A0")]
	public void PowerPressed()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1294DEC", Offset = "0x1294DEC", VA = "0x1294DEC")]
	public void PowerUnPressed()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1294ED8", Offset = "0x1294ED8", VA = "0x1294ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1294F88", Offset = "0x1294F88", VA = "0x1294F88")]
	private void SetSongName(string sn)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1293F50", Offset = "0x1293F50", VA = "0x1293F50")]
	private void SetScrollingText(string sn)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1294FB8", Offset = "0x1294FB8", VA = "0x1294FB8")]
	public Radio()
	{
	}
}
[Token(Token = "0x2000245")]
public class Relationship
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Person m_personA;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Person m_personB;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_totalTimeSentTogether;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_longestTimeSentTogether;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x119DF18", Offset = "0x119DF18", VA = "0x119DF18")]
	public Relationship()
	{
	}
}
[Token(Token = "0x2000246")]
public class RemapMeshColours : MonoBehaviour
{
	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] m_meshes;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	public Interest m_interest;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x119E244", Offset = "0x119E244", VA = "0x119E244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x119E248", Offset = "0x119E248", VA = "0x119E248")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x119E2DC", Offset = "0x119E2DC", VA = "0x119E2DC")]
	public void SetInterest(Interest interest)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x119E2E4", Offset = "0x119E2E4", VA = "0x119E2E4")]
	public RemapMeshColours()
	{
	}
}
[Token(Token = "0x2000247")]
public class ResearchItem : MonoBehaviour
{
	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_modelBaseLoc;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_notDiscovered;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_text;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_progressBar;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_inProgressMaterial;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x119F644", Offset = "0x119F644", VA = "0x119F644")]
	public ResearchItem()
	{
	}
}
[Token(Token = "0x2000248")]
public class RobotAnimationListener : MonoBehaviour
{
	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTakeOff;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDropFolk;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnAppearFolk;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x11A07E4", Offset = "0x11A07E4", VA = "0x11A07E4")]
	private void TakeOff()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x11A0800", Offset = "0x11A0800", VA = "0x11A0800")]
	private void DropFolk()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x11A081C", Offset = "0x11A081C", VA = "0x11A081C")]
	private void AppearFolk()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x11A0838", Offset = "0x11A0838", VA = "0x11A0838")]
	public RobotAnimationListener()
	{
	}
}
[Token(Token = "0x2000249")]
public class PlayerProfile
{
	[Token(Token = "0x200024A")]
	public class ScenarioMetadata
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_completed;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> m_interestsDiscovered;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x10653CC", Offset = "0x10653CC", VA = "0x10653CC")]
		public ScenarioMetadata(string name)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1064AAC", Offset = "0x1064AAC", VA = "0x1064AAC")]
		public static ScenarioMetadata FromJSON(JSONNode node)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1065148", Offset = "0x1065148", VA = "0x1065148")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}

	[Token(Token = "0x200024B")]
	private struct ProfileData
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScenarioMetadata[] m_scenarioMetadata;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_musicVolume;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_sfxVolume;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageCode m_language;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> m_presentsOpened;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_passthroughEnabled;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_controllerModelsEnabled;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x10645DC", Offset = "0x10645DC", VA = "0x10645DC")]
		public static ProfileData FromJSON(JSONNode node)
		{
			return default(ProfileData);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1064D0C", Offset = "0x1064D0C", VA = "0x1064D0C")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string ms_fileName;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string ms_fileExtension;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, ScenarioMetadata> ms_scenarioData;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<string> ms_presentsOpened;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float ms_musicVolume;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float ms_sfxVolume;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static LanguageCode ms_language;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int ms_passthroughEnabled;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int ms_controllerModelsEnabled;

	[Token(Token = "0x1700017C")]
	public static string ms_savePath
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1284738", Offset = "0x1284738", VA = "0x1284738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x12847C0", Offset = "0x12847C0", VA = "0x12847C0")]
	public static Dictionary<string, ScenarioMetadata> GetAllScenarioData()
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1284D84", Offset = "0x1284D84", VA = "0x1284D84")]
	private static string ProfileFilename()
	{
		return null;
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1284828", Offset = "0x1284828", VA = "0x1284828")]
	private static void LoadData()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1284E54", Offset = "0x1284E54", VA = "0x1284E54")]
	public static void SaveData()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1285300", Offset = "0x1285300", VA = "0x1285300")]
	public static bool IsScenarioComplete(Scenario s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x12853D8", Offset = "0x12853D8", VA = "0x12853D8")]
	public static ScenarioMetadata GetScenarioMetaData(Scenario s)
	{
		return null;
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1285518", Offset = "0x1285518", VA = "0x1285518")]
	public static void MarkScenarioComplete(Scenario s)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x128558C", Offset = "0x128558C", VA = "0x128558C")]
	public static void MarkInterestsDiscovered(Scenario s, List<Interest> interests)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x128572C", Offset = "0x128572C", VA = "0x128572C")]
	public static void SetMusicVolume(float v)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x128579C", Offset = "0x128579C", VA = "0x128579C")]
	public static float GetMusicVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1285804", Offset = "0x1285804", VA = "0x1285804")]
	public static void SetSFXVolume(float v)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1285874", Offset = "0x1285874", VA = "0x1285874")]
	public static float GetSFXVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x12858DC", Offset = "0x12858DC", VA = "0x12858DC")]
	public static void SetLanguage(LanguageCode l)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1285944", Offset = "0x1285944", VA = "0x1285944")]
	public static LanguageCode GetLanguage()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x12859AC", Offset = "0x12859AC", VA = "0x12859AC")]
	public static void SetPassthroughEnabled(bool b)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1285A18", Offset = "0x1285A18", VA = "0x1285A18")]
	public static int GetPassthroughEnabled()
	{
		return default(int);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1285A80", Offset = "0x1285A80", VA = "0x1285A80")]
	public static void SetControllerModelsEnabled(bool b)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1285AEC", Offset = "0x1285AEC", VA = "0x1285AEC")]
	public static int GetControllerModelsEnabled()
	{
		return default(int);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1285B54", Offset = "0x1285B54", VA = "0x1285B54")]
	public static void SetPresentOpened(string id, bool saveImmediately = true)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1285C14", Offset = "0x1285C14", VA = "0x1285C14")]
	public static bool GetPresentOpened(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1285CA4", Offset = "0x1285CA4", VA = "0x1285CA4")]
	public PlayerProfile()
	{
	}
}
[Token(Token = "0x200024C")]
public class SaveGame : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	private enum LoadMode
	{
		[Token(Token = "0x4000BF0")]
		None,
		[Token(Token = "0x4000BF1")]
		NewGame,
		[Token(Token = "0x4000BF2")]
		LoadGame,
		[Token(Token = "0x4000BF3")]
		Designer
	}

	[Serializable]
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5DB8", Offset = "0x8D5DB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FileInfo, DateTime> <>9__27_0;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<FileInfo, string> <>9__27_1;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<FileInfo, DateTime> <>9__28_0;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<FileInfo, string> <>9__28_1;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xEA99D8", Offset = "0xEA99D8", VA = "0xEA99D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xEA99E0", Offset = "0xEA99E0", VA = "0xEA99E0")]
		internal DateTime <GetSaveGames>b__27_0(FileInfo f)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xEA99FC", Offset = "0xEA99FC", VA = "0xEA99FC")]
		internal string <GetSaveGames>b__27_1(FileInfo f)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xEA9A1C", Offset = "0xEA9A1C", VA = "0xEA9A1C")]
		internal DateTime <GetAllSaveGames>b__28_0(FileInfo f)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xEA9A38", Offset = "0xEA9A38", VA = "0xEA9A38")]
		internal string <GetAllSaveGames>b__28_1(FileInfo f)
		{
			return null;
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5DC8", Offset = "0x8D5DC8")]
	private sealed class <SceneLoadCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveGame <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xEAA2B8", Offset = "0xEAA2B8", VA = "0xEAA2B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xEAA300", Offset = "0xEAA300", VA = "0xEAA300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xEA9A58", Offset = "0xEA9A58", VA = "0xEA9A58")]
		[DebuggerHidden]
		public <SceneLoadCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xEA9A84", Offset = "0xEA9A84", VA = "0xEA9A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xEA9A88", Offset = "0xEA9A88", VA = "0xEA9A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xEAA2C0", Offset = "0xEAA2C0", VA = "0xEAA2C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5DD8", Offset = "0x8D5DD8")]
	private sealed class <VerifyAndRebuildPlayerProfileCR>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showProgress;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SaveGame <>4__this;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <saveFileCount>5__2;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <changeCount>5__3;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UIScenarioMenu> <playerHasAccessedMenu>5__4;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIScenarioMenu[] <allScenarioMenus>5__5;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIScenarioMenu <scenarioMenu>5__7;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <j>5__8;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Scenario <scenario>5__9;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string[] <>7__wrap9;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap10;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SaveGameProgressionData <sgpd>5__12;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xEAB01C", Offset = "0xEAB01C", VA = "0xEAB01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xEAB064", Offset = "0xEAB064", VA = "0xEAB064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xEAA308", Offset = "0xEAA308", VA = "0xEAA308")]
		[DebuggerHidden]
		public <VerifyAndRebuildPlayerProfileCR>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xEAA334", Offset = "0xEAA334", VA = "0xEAA334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xEAA338", Offset = "0xEAA338", VA = "0xEAA338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xEAB024", Offset = "0xEAB024", VA = "0xEAB024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE0")]
	private const int DefaultEditorSlot = 99;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string GameSceneName;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string TitleSceneName;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AutoSaveKeyword;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SaveGame instance;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string ms_fileExtension;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string _currentSavePath;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE200", Offset = "0x8DE200")]
	private bool <HasLoaded>k__BackingField;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shop m_shop;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scenario m_loadScenario;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LoadMode m_loadMode;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE210", Offset = "0x8DE210")]
	public bool m_loadEditor;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_editTimeAutoload;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_saveScenarioMap;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RobotDialogueBox m_progressBox;

	[Token(Token = "0x1700017D")]
	public static SaveGame Instance
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11AAB74", Offset = "0x11AAB74", VA = "0x11AAB74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public static string ms_saveDirectory
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x11AABD8", Offset = "0x11AABD8", VA = "0x11AABD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public bool HasLoaded
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x11AAD94", Offset = "0x11AAD94", VA = "0x11AAD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC9B8", Offset = "0x8EC9B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x11AAD9C", Offset = "0x11AAD9C", VA = "0x11AAD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC9C8", Offset = "0x8EC9C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x11AAC60", Offset = "0x11AAC60", VA = "0x11AAC60")]
	public static void SetSavePath(string p)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x11AAD30", Offset = "0x11AAD30", VA = "0x11AAD30")]
	public static string GetSavePath()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x11AADA8", Offset = "0x11AADA8", VA = "0x11AADA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x11AB100", Offset = "0x11AB100", VA = "0x11AB100")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x11AB1EC", Offset = "0x11AB1EC", VA = "0x11AB1EC")]
	public void LoadScenarioForNewSave(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x11AB518", Offset = "0x11AB518", VA = "0x11AB518")]
	public static string[] GetSaveGames(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x11AB848", Offset = "0x11AB848", VA = "0x11AB848")]
	public static string[] GetAllSaveGames()
	{
		return null;
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x11ABB64", Offset = "0x11ABB64", VA = "0x11ABB64")]
	public void LoadSaveGame(Scenario scenario, string savePath)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x11ABC00", Offset = "0x11ABC00", VA = "0x11ABC00")]
	public void DesignScenario(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x11ABCAC", Offset = "0x11ABCAC", VA = "0x11ABCAC")]
	public void DoAutosave()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x11ABCC0", Offset = "0x11ABCC0", VA = "0x11ABCC0")]
	public void DoSave(bool isAutoSave)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x11ABCD8", Offset = "0x11ABCD8", VA = "0x11ABCD8")]
	private void DoSaveGame(bool isAutoSave)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x11ABCD4", Offset = "0x11ABCD4", VA = "0x11ABCD4")]
	private void DoSaveScenario()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x11AC4A8", Offset = "0x11AC4A8", VA = "0x11AC4A8")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x11AC500", Offset = "0x11AC500", VA = "0x11AC500")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC9D8", Offset = "0x8EC9D8")]
	private IEnumerator SceneLoadCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x11AB448", Offset = "0x11AB448", VA = "0x11AB448")]
	private void TriggerSceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x11AB298", Offset = "0x11AB298", VA = "0x11AB298")]
	private string GetNewSaveSlotForScenario(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x11AC578", Offset = "0x11AC578", VA = "0x11AC578")]
	private string SaveGamePathForScenario(Scenario scenario, int idx)
	{
		return null;
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x11AC6E4", Offset = "0x11AC6E4", VA = "0x11AC6E4")]
	public void DoReturnToTitle()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x11AC750", Offset = "0x11AC750", VA = "0x11AC750")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECA38", Offset = "0x8ECA38")]
	public void SaveEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x11AC7D0", Offset = "0x11AC7D0", VA = "0x11AC7D0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECA50", Offset = "0x8ECA50")]
	public void LoadEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x11AC87C", Offset = "0x11AC87C", VA = "0x11AC87C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECA68", Offset = "0x8ECA68")]
	public void DeleteEditorSavedGame()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x11AC8A0", Offset = "0x11AC8A0", VA = "0x11AC8A0")]
	public Scenario GetScenarioFromFilename(string fullPathToFile)
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x11ACD80", Offset = "0x11ACD80", VA = "0x11ACD80")]
	public bool LoadSaveWithFilename(string fullPathToFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x11ACE28", Offset = "0x11ACE28", VA = "0x11ACE28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECA80", Offset = "0x8ECA80")]
	public void RebuildPlayerProfile()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x11ACE30", Offset = "0x11ACE30", VA = "0x11ACE30")]
	public void RebuildPlayerProfile(bool showProgress)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x11ACE80", Offset = "0x11ACE80", VA = "0x11ACE80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECA98", Offset = "0x8ECA98")]
	private IEnumerator VerifyAndRebuildPlayerProfileCR(bool showProgress)
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x11ACF0C", Offset = "0x11ACF0C", VA = "0x11ACF0C")]
	private void ShowRebuildProgress(string message, float progress)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x11AD064", Offset = "0x11AD064", VA = "0x11AD064")]
	public SaveGame()
	{
	}
}
[Token(Token = "0x2000251")]
public class SaveGameFileDropper : MonoBehaviour
{
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x11B1AC8", Offset = "0x11B1AC8", VA = "0x11B1AC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x11B1B4C", Offset = "0x11B1B4C", VA = "0x11B1B4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x11B1B54", Offset = "0x11B1B54", VA = "0x11B1B54")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x11B1D3C", Offset = "0x11B1D3C", VA = "0x11B1D3C")]
	public SaveGameFileDropper()
	{
	}
}
[Token(Token = "0x2000252")]
public class SaveGameScreenshotTaker : MonoBehaviour
{
	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraToTexture m_camToTex;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_lookatTarget;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xED97A8", Offset = "0xED97A8", VA = "0xED97A8")]
	public void TakeScreenshot(string pathAndFilename, bool async)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xED99A0", Offset = "0xED99A0", VA = "0xED99A0")]
	public SaveGameScreenshotTaker()
	{
	}
}
[Token(Token = "0x2000253")]
public class ItemUnlockProgression : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	public enum ItemType
	{
		[Token(Token = "0x4000C11")]
		CityPiece,
		[Token(Token = "0x4000C12")]
		CityPieceList,
		[Token(Token = "0x4000C13")]
		Prefab
	}

	[Serializable]
	[Token(Token = "0x2000255")]
	public class UnlockableShopItem
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemType m_itemType;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DE258", Offset = "0x8DE258")]
		public CityPieceProperties m_cityPiece;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DE2A8", Offset = "0x8DE2A8")]
		public CityPiecePropertyList m_cityPieceList;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DE2F8", Offset = "0x8DE2F8")]
		public GameObject m_prefab;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_HPRequired;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PopOffItemAvailability m_itemAvailability;

		[Token(Token = "0x17000184")]
		public string ItemIdentifier
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xE869D0", Offset = "0xE869D0", VA = "0xE869D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xE86AB0", Offset = "0xE86AB0", VA = "0xE86AB0")]
		public UnlockableShopItem()
		{
		}
	}

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UnlockableShopItem> m_lockedItems;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Saveable]
	public List<string> m_unlockedItemIdentifiers;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_newInterestAfterUnlocking;

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xFD23CC", Offset = "0xFD23CC", VA = "0xFD23CC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xFD2DB8", Offset = "0xFD2DB8", VA = "0xFD2DB8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ECB98", Offset = "0x8ECB98")]
	public void UnlockAllHPLockedItems()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xFD29D4", Offset = "0xFD29D4", VA = "0xFD29D4")]
	public void ProcessUnlockItems()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xFD30D8", Offset = "0xFD30D8", VA = "0xFD30D8")]
	public void InitShopItems(ShopForInterest shop)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xFD3318", Offset = "0xFD3318", VA = "0xFD3318")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ECBE0", Offset = "0x8ECBE0")]
	public static void UnlockEverything()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xFD3398", Offset = "0xFD3398", VA = "0xFD3398")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ECC28", Offset = "0x8ECC28")]
	public static void UnlockItems()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xFD34CC", Offset = "0xFD34CC", VA = "0xFD34CC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ECC70", Offset = "0x8ECC70")]
	public void UnlockBuildings()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xFCFE78", Offset = "0xFCFE78", VA = "0xFCFE78")]
	public void OnNewDecoUnlocked(Interest inter, GameObject decoPrefab)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xFD364C", Offset = "0xFD364C", VA = "0xFD364C")]
	public ItemUnlockProgression()
	{
	}
}
[Token(Token = "0x2000256")]
public class SaveGameProgressionData
{
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_savePath;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public bool m_isLoaded;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<Interest> m_unlockedInterests;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> m_completedObjectiveNames;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_anyLoadInProgress;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xED8D20", Offset = "0xED8D20", VA = "0xED8D20")]
	public SaveGameProgressionData(string pathToSave, bool asyncLoad = true)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xED8E2C", Offset = "0xED8E2C", VA = "0xED8E2C")]
	public void AsyncLoadProgresionData()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xED8F20", Offset = "0xED8F20", VA = "0xED8F20")]
	private void LoadProgressionDataThreadFn()
	{
	}
}
[Serializable]
[Token(Token = "0x2000257")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5DE8", Offset = "0x8D5DE8")]
public class Scenario : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000258")]
	public class TweakedObjective
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Objective Objective;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xEAB7AC", Offset = "0xEAB7AC", VA = "0xEAB7AC")]
		public string GetLocalisedDescription()
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xEAB8A0", Offset = "0xEAB8A0", VA = "0xEAB8A0")]
		public TweakedObjective()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000259")]
	public class TweakedModifier
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Modifier Modifier;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Value;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Min;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Max;

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xEAB794", Offset = "0xEAB794", VA = "0xEAB794")]
		public TweakedModifier()
		{
		}
	}

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_localisationData;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Name_Key;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Description_Key;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Scenario[] PrerequisiteScenarios;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFinal;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MenuModelPrefab;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SkyboxPrefab;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8DE378", Offset = "0x8DE378")]
	public int StartingFolk;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE3C4", Offset = "0x8DE3C4")]
	public TweakedObjective[] Objectives;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE3FC", Offset = "0x8DE3FC")]
	public TweakedModifier[] Modifiers;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE434", Offset = "0x8DE434")]
	public Interest[] AvailableInterests;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8DE46C", Offset = "0x8DE46C")]
	public int StartingInterests;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8DE4B8", Offset = "0x8DE4B8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE4B8", Offset = "0x8DE4B8")]
	public List<Interest> AlwaysStartWithInterests;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "ValidateInputAttribute", RVA = "0x8DE534", Offset = "0x8DE534")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE534", Offset = "0x8DE534")]
	public List<Interest> PotentialStartingInterests;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DE5B0", Offset = "0x8DE5B0")]
	[SerializeField]
	private string FilenameBase;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public string Filename;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xED9F70", Offset = "0xED9F70", VA = "0xED9F70")]
	private bool ValidateStartingFolk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xED9FC8", Offset = "0xED9FC8", VA = "0xED9FC8")]
	public string GetFilenameBase()
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xEDA00C", Offset = "0xEDA00C", VA = "0xEDA00C")]
	private bool StartingInterestsLessThanAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xEDA034", Offset = "0xEDA034", VA = "0xEDA034")]
	private bool ValidateAlwaysStartInterests()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xEDA13C", Offset = "0xEDA13C", VA = "0xEDA13C")]
	private bool ValidatePotentialInterests()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xEDA244", Offset = "0xEDA244", VA = "0xEDA244")]
	public Scenario()
	{
	}
}
[Token(Token = "0x200025A")]
public class UIScenarioMenu : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E48", Offset = "0x8D5E48")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xEB6CFC", Offset = "0xEB6CFC", VA = "0xEB6CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xEB6D44", Offset = "0xEB6D44", VA = "0xEB6D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xEB6974", Offset = "0xEB6974", VA = "0xEB6974")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xEB69A0", Offset = "0xEB69A0", VA = "0xEB69A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xEB69A4", Offset = "0xEB69A4", VA = "0xEB69A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xEB6D04", Offset = "0xEB6D04", VA = "0xEB6D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E58", Offset = "0x8D5E58")]
	private sealed class <UpdateInterestDetailsFromPlayerProfile>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UIScenarioMenuPanel>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerProfile.ScenarioMetadata <smd>5__3;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xEB74A0", Offset = "0xEB74A0", VA = "0xEB74A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xEB74E8", Offset = "0xEB74E8", VA = "0xEB74E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xEB6D4C", Offset = "0xEB6D4C", VA = "0xEB6D4C")]
		[DebuggerHidden]
		public <UpdateInterestDetailsFromPlayerProfile>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xEB6D78", Offset = "0xEB6D78", VA = "0xEB6D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xEB6DE8", Offset = "0xEB6DE8", VA = "0xEB6DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xEB6D94", Offset = "0xEB6D94", VA = "0xEB6D94")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xEB74A8", Offset = "0xEB74A8", VA = "0xEB74A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E68", Offset = "0x8D5E68")]
	private sealed class <UpdatePlayerProfileForScenario>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenu <>4__this;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario scenario;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SaveGameProgressionData> <waitingForLoad>5__2;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, SaveGameProgressionData> <savesForThisScenario>5__3;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xEB7A30", Offset = "0xEB7A30", VA = "0xEB7A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xEB7A78", Offset = "0xEB7A78", VA = "0xEB7A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xEB74F0", Offset = "0xEB74F0", VA = "0xEB74F0")]
		[DebuggerHidden]
		public <UpdatePlayerProfileForScenario>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xEB751C", Offset = "0xEB751C", VA = "0xEB751C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xEB7520", Offset = "0xEB7520", VA = "0xEB7520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xEB7A38", Offset = "0xEB7A38", VA = "0xEB7A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scenario[] m_scenarios;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_scenarioPanelPrefab;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UIScenarioMenuPanel> m_scenarioPanels;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radius;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_spacingDeg;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_forwardItem;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_appearCascadeDelay;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_autoLayoutPanels;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_subMenu;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE5F8", Offset = "0x8DE5F8")]
	public float m_selectMoveDurShow;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_selectMoveDurHide;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Ease m_selectMoveEase;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_selectMoveDurShowHideOthersDur;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Ease m_selectShowHideEase;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool m_hasStarted;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image m_loadingIndicator;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Interest> m_allInterests;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Interest> m_allUnlockedInterests;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<Scenario, Dictionary<string, SaveGameProgressionData>> m_progDataPerScenario;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Dictionary<string, SaveGameProgressionData> m_allProgData;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xE95084", Offset = "0xE95084", VA = "0xE95084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECCB8", Offset = "0x8ECCB8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xE950FC", Offset = "0xE950FC", VA = "0xE950FC")]
	private void AddScenarios(Scenario[] scenarios)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xE952D8", Offset = "0xE952D8", VA = "0xE952D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xE95680", Offset = "0xE95680", VA = "0xE95680")]
	private Vector3 GetPos(int itemId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xE956EC", Offset = "0xE956EC", VA = "0xE956EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xE95980", Offset = "0xE95980", VA = "0xE95980")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECD18", Offset = "0x8ECD18")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xE95DE8", Offset = "0xE95DE8", VA = "0xE95DE8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ECD30", Offset = "0x8ECD30")]
	public void UnlockAllScenarios()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xE95EF8", Offset = "0xE95EF8", VA = "0xE95EF8")]
	public void ShowOnly(UIScenarioMenuPanel panel)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xE961B0", Offset = "0xE961B0", VA = "0xE961B0")]
	public void ShowAll()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xE95608", Offset = "0xE95608", VA = "0xE95608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECD78", Offset = "0x8ECD78")]
	public IEnumerator UpdateInterestDetailsFromPlayerProfile()
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xE964CC", Offset = "0xE964CC", VA = "0xE964CC")]
	public SaveGameProgressionData GetSaveGameProgData(string path)
	{
		return null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xE965A8", Offset = "0xE965A8", VA = "0xE965A8")]
	public Dictionary<string, SaveGameProgressionData> GetProgressionDataForScenario(Scenario s)
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xE9662C", Offset = "0xE9662C", VA = "0xE9662C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECDD8", Offset = "0x8ECDD8")]
	private IEnumerator UpdatePlayerProfileForScenario(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xE966C0", Offset = "0xE966C0", VA = "0xE966C0")]
	public UIScenarioMenu()
	{
	}
}
[Token(Token = "0x200025E")]
public class UIScenarioMenuPanel : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E78", Offset = "0x8D5E78")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playSound;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIScenarioMenuPanel <>4__this;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xEB7A80", Offset = "0xEB7A80", VA = "0xEB7A80")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xEB7A88", Offset = "0xEB7A88", VA = "0xEB7A88")]
		internal void <AppearAfter>b__0()
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E88", Offset = "0x8D5E88")]
	private sealed class <UpdateInterestDetails>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioMenuPanel <>4__this;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerProfile.ScenarioMetadata <smd>5__2;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIScenarioMenu <scenarioMenu>5__3;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xEB7FA0", Offset = "0xEB7FA0", VA = "0xEB7FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xEB7FE8", Offset = "0xEB7FE8", VA = "0xEB7FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xEB7B34", Offset = "0xEB7B34", VA = "0xEB7B34")]
		[DebuggerHidden]
		public <UpdateInterestDetails>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xEB7B60", Offset = "0xEB7B60", VA = "0xEB7B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xEB7B64", Offset = "0xEB7B64", VA = "0xEB7B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xEB7FA8", Offset = "0xEB7FA8", VA = "0xEB7FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scenario scenario;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text Name;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text Description;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text ObjectivesText;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Locked;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ModelContainer;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform LineContainer;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ConnectionLeftLoc;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ConnectionRightLoc;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button btnSelect;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button btnDetailsNewGame;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button btnDetailsBack;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button btnDesigner;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Unlocked;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject UnlockedContent;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ConfirmRestartMenu;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject DetailsPanel;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject SavesList;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject SavePanelPrefab;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform[] m_detailLocators;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public bool m_allDataPopulated;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool m_subMenusCreated;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool m_allPrerequisitesComplete;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public string[] m_saveGamePaths;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public List<UIScenarioSavePanel> m_savePanels;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image m_loadingIndicator;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ScrollRect m_saveScrollRect;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_ScrollMul;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_saveScrollDur;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float maxOvershoot;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector2 m_scrollTarget;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Button m_scrollLButton;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Button m_scrollRButton;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xE9548C", Offset = "0xE9548C", VA = "0xE9548C")]
	public void AppearAfter(float delay, float dur, Ease ease, bool playSound)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xE96848", Offset = "0xE96848", VA = "0xE96848")]
	private void CheckPrerequisites()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xE96928", Offset = "0xE96928", VA = "0xE96928")]
	public void ReCheckPrerequisites()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xE96BB8", Offset = "0xE96BB8", VA = "0xE96BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xE96F4C", Offset = "0xE96F4C", VA = "0xE96F4C", Slot = "4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ECF28", Offset = "0x8ECF28")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xE96978", Offset = "0xE96978", VA = "0xE96978")]
	public void PopulateDetails()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xE95ADC", Offset = "0xE95ADC", VA = "0xE95ADC")]
	public void CreateSubMenus()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xE97104", Offset = "0xE97104", VA = "0xE97104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECF40", Offset = "0x8ECF40")]
	public IEnumerator UpdateInterestDetails()
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xE9717C", Offset = "0xE9717C", VA = "0xE9717C")]
	public void ShowDetails()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xE97270", Offset = "0xE97270", VA = "0xE97270")]
	public void HideDetails()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xE972FC", Offset = "0xE972FC", VA = "0xE972FC")]
	public void StartNew()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xE973B4", Offset = "0xE973B4", VA = "0xE973B4")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xE973F8", Offset = "0xE973F8", VA = "0xE973F8")]
	private void ConfirmRestart()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xE973FC", Offset = "0xE973FC", VA = "0xE973FC")]
	private void CancelRestart()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xE97440", Offset = "0xE97440", VA = "0xE97440")]
	private void DesignStage()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE974F8", Offset = "0xE974F8", VA = "0xE974F8")]
	public void ScrollSavesLeft()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE97694", Offset = "0xE97694", VA = "0xE97694")]
	public void ScrollSavesRight()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE97500", Offset = "0xE97500", VA = "0xE97500")]
	private void ScrollSaves(float amt)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE976A0", Offset = "0xE976A0", VA = "0xE976A0")]
	public void PopulateConnections()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xE97938", Offset = "0xE97938", VA = "0xE97938")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE97B5C", Offset = "0xE97B5C", VA = "0xE97B5C")]
	public UIScenarioMenuPanel()
	{
	}
}
[Token(Token = "0x2000261")]
public class UIScenarioSavePanel : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5E98", Offset = "0x8D5E98")]
	private sealed class <Refresh>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioSavePanel <>4__this;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xEB8FD0", Offset = "0xEB8FD0", VA = "0xEB8FD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xEB9018", Offset = "0xEB9018", VA = "0xEB9018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xEB8658", Offset = "0xEB8658", VA = "0xEB8658")]
		[DebuggerHidden]
		public <Refresh>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xEB8684", Offset = "0xEB8684", VA = "0xEB8684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xEB875C", Offset = "0xEB875C", VA = "0xEB875C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xEB86A0", Offset = "0xEB86A0", VA = "0xEB86A0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xEB8FD8", Offset = "0xEB8FD8", VA = "0xEB8FD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EA8", Offset = "0x8D5EA8")]
	private sealed class <PopulateProgressionDetails>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScenarioSavePanel <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xEB8608", Offset = "0xEB8608", VA = "0xEB8608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xEB8650", Offset = "0xEB8650", VA = "0xEB8650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xEB7FF0", Offset = "0xEB7FF0", VA = "0xEB7FF0")]
		[DebuggerHidden]
		public <PopulateProgressionDetails>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xEB801C", Offset = "0xEB801C", VA = "0xEB801C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xEB8020", Offset = "0xEB8020", VA = "0xEB8020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xEB8610", Offset = "0xEB8610", VA = "0xEB8610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_label;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_timeLabel;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage m_image;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_detailsRoot;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_objectivesLabel;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GridLayoutGroup m_interestsGrid;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_interestIconPrefab;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Scenario m_scenario;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_savePath;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture m_screenshot;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SaveGameProgressionData m_progressionData;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE97BF4", Offset = "0xE97BF4", VA = "0xE97BF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE97C40", Offset = "0xE97C40", VA = "0xE97C40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ECFF0", Offset = "0x8ECFF0")]
	public IEnumerator Refresh()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE97CB8", Offset = "0xE97CB8", VA = "0xE97CB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED050", Offset = "0x8ED050")]
	public IEnumerator PopulateProgressionDetails()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xE97D30", Offset = "0xE97D30", VA = "0xE97D30")]
	public void LoadMe()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xE97DE8", Offset = "0xE97DE8", VA = "0xE97DE8")]
	public void DeleteMe()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE97F5C", Offset = "0xE97F5C", VA = "0xE97F5C")]
	public UIScenarioSavePanel()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE97F64", Offset = "0xE97F64", VA = "0xE97F64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED0B0", Offset = "0x8ED0B0")]
	private void <DeleteMe>b__15_0()
	{
	}
}
[Token(Token = "0x2000264")]
public class ScrapCoin : StaticListable<ScrapCoin>, ISaveableComponent
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] ms_raycastResult;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int ms_terrainLayerMask;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TrackedPool<GameObject> Pool;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Saveable]
	[SerializeField]
	private float _value;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Collider[] m_colliders;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody m_rigidBody;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_nvrii;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HoldableItem m_holdableItem;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Large;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Medium;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Small;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_randomQuery;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrailRenderer m_trail;

	[Token(Token = "0x17000191")]
	public NVRInteractableItem Interactable
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xEDCFB0", Offset = "0xEDCFB0", VA = "0xEDCFB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public float m_value
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xEDD1EC", Offset = "0xEDD1EC", VA = "0xEDD1EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xEDD09C", Offset = "0xEDD09C", VA = "0xEDD09C")]
		set
		{
		}
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xEDCFB8", Offset = "0xEDCFB8", VA = "0xEDCFB8")]
	public static ScrapCoin GetFromPool(float value)
	{
		return null;
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xEDD1F4", Offset = "0xEDD1F4", VA = "0xEDD1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xEDD400", Offset = "0xEDD400", VA = "0xEDD400", Slot = "7")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xEDD404", Offset = "0xEDD404", VA = "0xEDD404", Slot = "8")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xEDD408", Offset = "0xEDD408", VA = "0xEDD408", Slot = "9")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xEDD4EC", Offset = "0xEDD4EC", VA = "0xEDD4EC")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xEDD678", Offset = "0xEDD678", VA = "0xEDD678")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xEDD77C", Offset = "0xEDD77C", VA = "0xEDD77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xEDD5A4", Offset = "0xEDD5A4", VA = "0xEDD5A4")]
	public void SetCollidersAsTrigger(bool value)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xEDD67C", Offset = "0xEDD67C", VA = "0xEDD67C")]
	private void QueryGravity()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xEDD7F4", Offset = "0xEDD7F4", VA = "0xEDD7F4")]
	public ScrapCoin()
	{
	}
}
[Token(Token = "0x2000265")]
public class ScrapParticleExplosion : MonoBehaviour
{
	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem MainParticles;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem scrapParticles;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float awakeAt;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Lifetime;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xEDD8F4", Offset = "0xEDD8F4", VA = "0xEDD8F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xEDD9F0", Offset = "0xEDD9F0", VA = "0xEDD9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xEDDA4C", Offset = "0xEDDA4C", VA = "0xEDDA4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xEDDA84", Offset = "0xEDDA84", VA = "0xEDDA84")]
	public ScrapParticleExplosion()
	{
	}
}
[Token(Token = "0x2000266")]
public class Screenshotter : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	private enum State
	{
		[Token(Token = "0x4000CB0")]
		Idle,
		[Token(Token = "0x4000CB1")]
		Generating,
		[Token(Token = "0x4000CB2")]
		Saving
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EB8", Offset = "0x8D5EB8")]
	private sealed class <CameraForTrailerCR>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InstaCam <ic>5__2;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xEAD078", Offset = "0xEAD078", VA = "0xEAD078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xEAD0C0", Offset = "0xEAD0C0", VA = "0xEAD0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xEACBE0", Offset = "0xEACBE0", VA = "0xEACBE0")]
		[DebuggerHidden]
		public <CameraForTrailerCR>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xEACC0C", Offset = "0xEACC0C", VA = "0xEACC0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xEACC10", Offset = "0xEACC10", VA = "0xEACC10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xEAD080", Offset = "0xEAD080", VA = "0xEAD080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EC8", Offset = "0x8D5EC8")]
	private sealed class <DoSphereGrab>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screenshotter <>4__this;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <instaCamPos>5__2;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <instaCamRot>5__3;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<GameObject, int> <layerDict>5__4;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera <cam>5__5;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Recorder <recorder>5__6;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <longStep>5__7;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <i>5__8;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0xEADA7C", Offset = "0xEADA7C", VA = "0xEADA7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xEADAC4", Offset = "0xEADAC4", VA = "0xEADAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xEAD0C8", Offset = "0xEAD0C8", VA = "0xEAD0C8")]
		[DebuggerHidden]
		public <DoSphereGrab>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xEAD0F4", Offset = "0xEAD0F4", VA = "0xEAD0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xEAD0F8", Offset = "0xEAD0F8", VA = "0xEAD0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xEADA84", Offset = "0xEADA84", VA = "0xEADA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_focalPoint;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_height;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE6A8", Offset = "0x8DE6A8")]
	public int m_framesToCapture;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_fps;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_width;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE6E0", Offset = "0x8DE6E0")]
	public int m_quality;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State m_state;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_progress;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xEDDA94", Offset = "0xEDDA94", VA = "0xEDDA94")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xEDDB74", Offset = "0xEDDB74", VA = "0xEDDB74")]
	private string GetFilenameWithPath(string extension)
	{
		return null;
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xEDDE38", Offset = "0xEDDE38", VA = "0xEDDE38")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED160", Offset = "0x8ED160")]
	public void ToggleCamera()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xEDDF30", Offset = "0xEDDF30", VA = "0xEDDF30")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED1A8", Offset = "0x8ED1A8")]
	private void CameraForTrailer()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xEDDF5C", Offset = "0xEDDF5C", VA = "0xEDDF5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED1F0", Offset = "0x8ED1F0")]
	private IEnumerator CameraForTrailerCR()
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xEDDFB8", Offset = "0xEDDFB8", VA = "0xEDDFB8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED250", Offset = "0x8ED250")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED250", Offset = "0x8ED250")]
	public void SingleCapture()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xEDE0CC", Offset = "0xEDE0CC", VA = "0xEDE0CC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED2B4", Offset = "0x8ED2B4")]
	public void OrbitGif()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xEDE170", Offset = "0xEDE170", VA = "0xEDE170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xEDE0F8", Offset = "0xEDE0F8", VA = "0xEDE0F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED2FC", Offset = "0x8ED2FC")]
	private IEnumerator DoSphereGrab()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xEDE174", Offset = "0xEDE174", VA = "0xEDE174")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xEDE188", Offset = "0xEDE188", VA = "0xEDE188")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xEDE190", Offset = "0xEDE190", VA = "0xEDE190")]
	public Screenshotter()
	{
	}
}
[Token(Token = "0x200026A")]
public class SetActiveRandom : MonoBehaviour
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE6FC", Offset = "0x8DE6FC")]
	public float m_isEnabledProbability;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_objects;

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xEDEB44", Offset = "0xEDEB44", VA = "0xEDEB44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xEDEBFC", Offset = "0xEDEBFC", VA = "0xEDEBFC")]
	public SetActiveRandom()
	{
	}
}
[Token(Token = "0x200026B")]
public class SetOneActiveRandom : MonoBehaviour
{
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objects;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xEDEC0C", Offset = "0xEDEC0C", VA = "0xEDEC0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xEDEC80", Offset = "0xEDEC80", VA = "0xEDEC80")]
	public SetOneActiveRandom()
	{
	}
}
[Token(Token = "0x200026C")]
public class InfoToggler : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIPersonListPanel m_personPanel;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xFC588C", Offset = "0xFC588C", VA = "0xFC588C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xFC5910", Offset = "0xFC5910", VA = "0xFC5910")]
	public void OpenAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xFC5AA8", Offset = "0xFC5AA8", VA = "0xFC5AA8")]
	public void OpenAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xFC5984", Offset = "0xFC5984", VA = "0xFC5984")]
	private void Toggle(NVRHand hand)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xFC5B1C", Offset = "0xFC5B1C", VA = "0xFC5B1C")]
	public InfoToggler()
	{
	}
}
[Token(Token = "0x200026D")]
public class Shop : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_interestShopPrefab;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_levelDesignShopPrefab;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_maxUnbuiltBuildings;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Interest, ShopForInterest> m_interestShops;

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xEE0E4C", Offset = "0xEE0E4C", VA = "0xEE0E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xEE0F6C", Offset = "0xEE0F6C", VA = "0xEE0F6C")]
	public void CloseShop()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xEE0FC8", Offset = "0xEE0FC8", VA = "0xEE0FC8")]
	public void AddInterestShopFront(Interest interest)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xEE11C8", Offset = "0xEE11C8", VA = "0xEE11C8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED3FC", Offset = "0x8ED3FC")]
	public void AddLevelDesignShop()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xEE12BC", Offset = "0xEE12BC", VA = "0xEE12BC")]
	public static void SetAllItemsAvailable(bool available, bool setCorrectFacilitiesAvailable = true)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xEE1494", Offset = "0xEE1494", VA = "0xEE1494")]
	public static void SetBasicsAvailable()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xEE14F0", Offset = "0xEE14F0", VA = "0xEE14F0")]
	public static void SetPrefabsAvailable(GameObject[] prefabs, bool available)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xEE169C", Offset = "0xEE169C", VA = "0xEE169C")]
	public static void SetItemsNotAvailable(CityPieceProperties[] unlockPieces, CityPiecePropertyList[] unlockLists, PopOffItemAvailability.LockReason lockReason = PopOffItemAvailability.LockReason.Restricted, [Optional] string lockToolTip)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xEE18C4", Offset = "0xEE18C4", VA = "0xEE18C4")]
	public static void SetItemsAvailable(CityPieceProperties[] unlockPieces, CityPiecePropertyList[] unlockLists, PopOffItemAvailability.LockReason lockReason = PopOffItemAvailability.LockReason.Restricted)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xEE1ACC", Offset = "0xEE1ACC", VA = "0xEE1ACC")]
	public static void SetAllInterestItemsAvailable(bool available)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xEE1D70", Offset = "0xEE1D70", VA = "0xEE1D70")]
	public static void SetDecorationAvailable(GameObject prefab)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xEE20D8", Offset = "0xEE20D8", VA = "0xEE20D8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED444", Offset = "0x8ED444")]
	public static void Unlock1InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xEE20E0", Offset = "0xEE20E0", VA = "0xEE20E0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED48C", Offset = "0x8ED48C")]
	public static void Unlock2InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xEE20E8", Offset = "0xEE20E8", VA = "0xEE20E8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED4D4", Offset = "0x8ED4D4")]
	public static void Unlock3InterestFacilities()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xEE1428", Offset = "0xEE1428", VA = "0xEE1428")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED51C", Offset = "0x8ED51C")]
	public static void UnlockFacilitiesForAvailableInterests()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xEDB7B0", Offset = "0xEDB7B0", VA = "0xEDB7B0")]
	public static void UnlockFacilitiesUpTo(int maxInterests)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xEE20F0", Offset = "0xEE20F0", VA = "0xEE20F0")]
	public Shop()
	{
	}
}
[Token(Token = "0x200026E")]
public class ShopForInterest : StaticMapped<ShopForInterest>
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Interest m_interest;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_maxItemsWide;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PopOffShopItem m_item0;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PopOffShopItem m_itemHoriz;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PopOffShopItem m_itemVert;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PopOffShopItem[] m_allPopOffs;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro m_nameLabel;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer m_interestIcon;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_tabLocator;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MeshFilter> m_remappableMeshes;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xEE2100", Offset = "0xEE2100", VA = "0xEE2100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xEE21F4", Offset = "0xEE21F4", VA = "0xEE21F4")]
	public ShopForInterest()
	{
	}
}
[Token(Token = "0x200026F")]
public class SnappableWorldAffordance : StaticMapped<SnappableWorldAffordance>
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_affordanceVisuals;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_ignoreIfInteracting;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_usable;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_limitVisibility;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Type m_showFor;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Snappable m_snappable;

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xEE8E2C", Offset = "0xEE8E2C", VA = "0xEE8E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xEE8BDC", Offset = "0xEE8BDC", VA = "0xEE8BDC")]
	public void OnBeginSnappableInteraction(Snappable snappable)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xEE8EA8", Offset = "0xEE8EA8", VA = "0xEE8EA8")]
	public void OnEndSnappableInteraction(Snappable snappable)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xEE8EC0", Offset = "0xEE8EC0", VA = "0xEE8EC0")]
	public SnappableWorldAffordance()
	{
	}
}
[Token(Token = "0x2000270")]
public class SolarFlare : StaticMapped<SolarFlare>
{
	[Serializable]
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5ED8", Offset = "0x8D5ED8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SolarFlare, float> <>9__0_0;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xEAFEB0", Offset = "0xEAFEB0", VA = "0xEAFEB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xEAFEB8", Offset = "0xEAFEB8", VA = "0xEAFEB8")]
		internal float <TimeInHrsToNextFlareImpact>b__0_0(SolarFlare f)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EE8", Offset = "0x8D5EE8")]
	private sealed class <ApplySpline>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SolarFlare <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xEB002C", Offset = "0xEB002C", VA = "0xEB002C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xEB0074", Offset = "0xEB0074", VA = "0xEB0074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xEAFED4", Offset = "0xEAFED4", VA = "0xEAFED4")]
		[DebuggerHidden]
		public <ApplySpline>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xEAFF00", Offset = "0xEAFF00", VA = "0xEAFF00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xEAFF04", Offset = "0xEAFF04", VA = "0xEAFF04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xEB0034", Offset = "0xEB0034", VA = "0xEB0034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_flareModel;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BezierWalker m_splineWalker;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BezierWalkerWithTime m_splineWalkerWithTime;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_splineStartPoint;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_splineMidPoint;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_splineEndPoint;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LineRenderer m_line;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LineRendererSpline m_lineSpline;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SphereCollider m_explosionCollider;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_explosionPrefab;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_dudExplosionPrefab;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE714", Offset = "0x8DE714")]
	public string m_sfxStartLoop;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxStop;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string m_sfxWarn;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string m_sfxImpactDefenceBubble;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string m_sfxImpactAnythingElse;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_sfxDistRTPC;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_maxDistForSfx;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_warningSfxAtRealSecondsBeforeImpact;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_splineLastNormalizedT;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_splineLen;

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xEED018", Offset = "0xEED018", VA = "0xEED018")]
	public static float TimeInHrsToNextFlareImpact()
	{
		return default(float);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xEED20C", Offset = "0xEED20C", VA = "0xEED20C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xEED29C", Offset = "0xEED29C", VA = "0xEED29C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xEED440", Offset = "0xEED440", VA = "0xEED440")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED564", Offset = "0x8ED564")]
	public void GeneratePath()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xEED734", Offset = "0xEED734", VA = "0xEED734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED57C", Offset = "0x8ED57C")]
	private IEnumerator ApplySpline()
	{
		return null;
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xEED7AC", Offset = "0xEED7AC", VA = "0xEED7AC")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xEED8FC", Offset = "0xEED8FC", VA = "0xEED8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xEED99C", Offset = "0xEED99C", VA = "0xEED99C")]
	public void Impact(Collider hitCollider)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xEEE3DC", Offset = "0xEEE3DC", VA = "0xEEE3DC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xEEE464", Offset = "0xEEE464", VA = "0xEEE464")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xEEE4F8", Offset = "0xEEE4F8", VA = "0xEEE4F8")]
	public float TimeInHrsToImpact()
	{
		return default(float);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xEEE594", Offset = "0xEEE594", VA = "0xEEE594")]
	public SolarFlare()
	{
	}
}
[Token(Token = "0x2000273")]
public class SpacefolkControllerLayout : MonoBehaviour
{
	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_deviceName;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_xrLoaderName;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_root;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_ui;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_ctrlModel;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xEEE6F4", Offset = "0xEEE6F4", VA = "0xEEE6F4")]
	public SpacefolkControllerLayout()
	{
	}
}
[Token(Token = "0x2000274")]
public class SpacefolkHand : MonoBehaviour
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRInteractable m_currentHover;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentHighlight;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ISfHandHoverResponder m_currentHoverResponder;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_sfxHighlight;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_sfxRelease;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIButton uiButtonHovering;

	[Token(Token = "0x17000199")]
	public NVRHand NVRHand
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xEEE6FC", Offset = "0xEEE6FC", VA = "0xEEE6FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public UIButton HoveringButton
	{
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xEEE704", Offset = "0xEEE704", VA = "0xEEE704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xEEE70C", Offset = "0xEEE70C", VA = "0xEEE70C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xEEE824", Offset = "0xEEE824", VA = "0xEEE824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xEEEC2C", Offset = "0xEEEC2C", VA = "0xEEEC2C")]
	private void StartHover(NVRInteractable newItem)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xEEE9C0", Offset = "0xEEE9C0", VA = "0xEEE9C0")]
	private void StopHover(NVRInteractable nvri)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xEEEF70", Offset = "0xEEEF70", VA = "0xEEEF70")]
	public void RefreshHoverState()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xEEEF78", Offset = "0xEEEF78", VA = "0xEEEF78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xEEEF84", Offset = "0xEEEF84", VA = "0xEEEF84")]
	private void OnEndInteraction(NVRInteractable nvrii)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xEEF070", Offset = "0xEEF070", VA = "0xEEF070")]
	public void HoverUIButton(UIButton button)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xEEF078", Offset = "0xEEF078", VA = "0xEEF078")]
	public SpacefolkHand()
	{
	}
}
[Token(Token = "0x2000275")]
public class SpacefolkHandModel : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	public enum State
	{
		[Token(Token = "0x4000D18")]
		Idle,
		[Token(Token = "0x4000D19")]
		Hover,
		[Token(Token = "0x4000D1A")]
		Point,
		[Token(Token = "0x4000D1B")]
		Grab
	}

	[Serializable]
	[Token(Token = "0x2000277")]
	public class DeviceSetup
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_pluginName;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_root;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_ui;

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xEB007C", Offset = "0xEB007C", VA = "0xEB007C")]
		public DeviceSetup()
		{
		}
	}

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator m_animator;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public State m_state;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpacefolkHand m_hand;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_forcePointing;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_root;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_uiLocator;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE75C", Offset = "0x8DE75C")]
	private SpacefolkControllerLayout <m_activeLayout>k__BackingField;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform m_rootOculus_Oculus;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_uiOculus_Oculus;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform m_rootOculus_OpenVR;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_uiOculus_OpenVR;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform m_uiVive;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform m_rootVive;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_uiKnuckles;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform m_rootKnuckles;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform m_uiG2;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform m_rootG2;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DeviceSetup[] m_devices;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpacefolkControllerLayout[] m_deviceLayouts;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_laserLocator;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE76C", Offset = "0x8DE76C")]
	private bool <m_locatorsSetUp>k__BackingField;

	[Token(Token = "0x1700019B")]
	public SpacefolkControllerLayout m_activeLayout
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xEEF0F8", Offset = "0xEEF0F8", VA = "0xEEF0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED62C", Offset = "0x8ED62C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xEEF100", Offset = "0xEEF100", VA = "0xEEF100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED63C", Offset = "0x8ED63C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public bool m_locatorsSetUp
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xEEF108", Offset = "0xEEF108", VA = "0xEEF108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED64C", Offset = "0x8ED64C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xEEF110", Offset = "0xEEF110", VA = "0xEEF110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED65C", Offset = "0x8ED65C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xEEF11C", Offset = "0xEEF11C", VA = "0xEEF11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xEEF40C", Offset = "0xEEF40C", VA = "0xEEF40C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xEEF36C", Offset = "0xEEF36C", VA = "0xEEF36C")]
	public void SetIdle()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xEEFC74", Offset = "0xEEFC74", VA = "0xEEFC74")]
	public void SetHovering()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xEEFBF8", Offset = "0xEEFBF8", VA = "0xEEFBF8")]
	public void SetPointing()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xEEFB50", Offset = "0xEEFB50", VA = "0xEEFB50")]
	public void SetGrabbing()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xEEFD1C", Offset = "0xEEFD1C", VA = "0xEEFD1C")]
	public SpacefolkHandModel()
	{
	}
}
[Token(Token = "0x2000278")]
public class SpacefolkMenuPresent : MonoBehaviour
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_idInPlayerProfile;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_activeWhenOpened;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_activeWhenClosed;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ParticleSystem> m_playOnOpen;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_audioOnOpen;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_titleMusicSwitchValue;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Scenario[] PrerequisiteScenarios;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button m_showMenuButton;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_menuToShow;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[ReadOnly]
	public GameObject m_myMenu;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[ReadOnly]
	public Button m_menuToShowBackButton;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x11EA0FC", Offset = "0x11EA0FC", VA = "0x11EA0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x11EA594", Offset = "0x11EA594", VA = "0x11EA594")]
	public void Open()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x11EA688", Offset = "0x11EA688", VA = "0x11EA688")]
	public SpacefolkMenuPresent()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x11EA6E4", Offset = "0x11EA6E4", VA = "0x11EA6E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED66C", Offset = "0x8ED66C")]
	private void <Start>b__11_0()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x11EA704", Offset = "0x11EA704", VA = "0x11EA704")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED67C", Offset = "0x8ED67C")]
	private void <Start>b__11_1()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x11EA724", Offset = "0x11EA724", VA = "0x11EA724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED68C", Offset = "0x8ED68C")]
	private void <Start>b__11_2()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x11EA744", Offset = "0x11EA744", VA = "0x11EA744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED69C", Offset = "0x8ED69C")]
	private void <Start>b__11_3()
	{
	}
}
[Token(Token = "0x2000279")]
public class SpacefolkSkybox : MonoBehaviour
{
	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer m_skyboxRenderer;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer m_starsRenderer;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cubemap m_lightingMatCap;

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x11EA764", Offset = "0x11EA764", VA = "0x11EA764")]
	public SpacefolkSkybox()
	{
	}
}
[Token(Token = "0x200027A")]
public class SpacefolkUtil
{
	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x11EA76C", Offset = "0x11EA76C", VA = "0x11EA76C")]
	public static Bounds GetBoundsNoDeco(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x11EA90C", Offset = "0x11EA90C", VA = "0x11EA90C")]
	public SpacefolkUtil()
	{
	}
}
[Token(Token = "0x200027B")]
public class SpacefolkWindow : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE79C", Offset = "0x8DE79C")]
	public Transform m_standLocStart;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_standLocEnd;

	[Token(Token = "0x1700019D")]
	public virtual FastVector3Int Normal
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x11EAB08", Offset = "0x11EAB08", VA = "0x11EAB08", Slot = "5")]
		get
		{
			return default(FastVector3Int);
		}
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x11EA914", Offset = "0x11EA914", VA = "0x11EA914", Slot = "4")]
	public virtual (Transform, Bounds) GetWorldBlockBounds(Vector3 offset)
	{
		return default((Transform, Bounds));
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x11EABAC", Offset = "0x11EABAC", VA = "0x11EABAC")]
	public SpacefolkWindow()
	{
	}
}
[Token(Token = "0x200027C")]
public class Spaceport : MonoBehaviour
{
	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_openParam;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_openDoorSFX;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_closeDoorSFX;

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x11EABB4", Offset = "0x11EABB4", VA = "0x11EABB4")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x11EACC0", Offset = "0x11EACC0", VA = "0x11EACC0")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x11EADCC", Offset = "0x11EADCC", VA = "0x11EADCC")]
	public Spaceport()
	{
	}
}
[Token(Token = "0x200027D")]
public class StaticListable<T> : MonoBehaviour where T : UnityEngine.Component
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> AllActive;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> All;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnNewCreated;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnActivated;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnRemoved;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnDeactivated;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChanged;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int m_id;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int s_id;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T component;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isInitialised;

	[Token(Token = "0x6000D75")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8ED6AC", Offset = "0x8ED6AC")]
	[AOTStubRequired]
	public static void ResetStaticListableStatics()
	{
	}

	[Token(Token = "0x6000D76")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000D77")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D78")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D79")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7A")]
	public StaticListable()
	{
	}
}
[Token(Token = "0x200027E")]
public class StretchableItem : MonoBehaviour
{
	[Token(Token = "0x200027F")]
	public enum Scale
	{
		[Token(Token = "0x4000D77")]
		Unknown,
		[Token(Token = "0x4000D78")]
		CarryItem,
		[Token(Token = "0x4000D79")]
		NormalItem,
		[Token(Token = "0x4000D7A")]
		GiantItem
	}

	[Token(Token = "0x2000280")]
	public class StretchableItemAndGOEvent : UnityEvent<StretchableItem, GameObject>
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xEB09C4", Offset = "0xEB09C4", VA = "0xEB09C4")]
		public StretchableItemAndGOEvent()
		{
		}
	}

	[Token(Token = "0x2000281")]
	public class StretchableItemEvent : UnityEvent<StretchableItem>
	{
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xEB0A10", Offset = "0xEB0A10", VA = "0xEB0A10")]
		public StretchableItemEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000282")]
	public class ScaleSettings
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_scale;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MonoBehaviour> m_enabled;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MonoBehaviour> m_disabled;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xEB0904", Offset = "0xEB0904", VA = "0xEB0904")]
		public ScaleSettings(float scale)
		{
		}
	}

	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EF8", Offset = "0x8D5EF8")]
	private sealed class <Explode>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StretchableItem <>4__this;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <newObject>5__2;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRHand <firstHand>5__3;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand <secondHand>5__4;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRInteractableItem <newNvr>5__5;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xEB08B4", Offset = "0xEB08B4", VA = "0xEB08B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xEB08FC", Offset = "0xEB08FC", VA = "0xEB08FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xEB0274", Offset = "0xEB0274", VA = "0xEB0274")]
		[DebuggerHidden]
		public <Explode>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xEB02A0", Offset = "0xEB02A0", VA = "0xEB02A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xEB02A4", Offset = "0xEB02A4", VA = "0xEB02A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xEB08BC", Offset = "0xEB08BC", VA = "0xEB08BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject ScrapFXAttractor;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DE7E4", Offset = "0x8DE7E4")]
	private static bool ms_debugSFX;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRInteractableItem nvr;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_body;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer[] m_meshRenderers;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxStretch;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Spring_K;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Spring_B;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Spring_M;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float scaleVel;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[HideInInspector]
	private float initialHandDistance;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool exploded;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float explodedAt;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StretchableItemAndGOEvent DidExplode;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StretchableItemEvent DidNotExplode;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ScrapParticleExplosion Explosion;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DE864", Offset = "0x8DE864")]
	public static bool StretchToDuplicate;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE8AC", Offset = "0x8DE8AC")]
	public bool OnlyScrap;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[ReadOnly]
	public bool CanExplode;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool CanScale;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startScale;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initialHandAPos;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initialHandBPos;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE8F4", Offset = "0x8DE8F4")]
	public float StretchEffect;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float StretchEffectEpsilon;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float MinStretchRadius;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool debug_NoSpring;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool debug_Draw;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ScaleSettings[] m_snapScales;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 handAPos;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 handBPos;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 handAStartPos;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 handBStartPos;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float stretchRadius;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float stretchRadiusMin;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool stretching;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[ReadOnly]
	[Saveable]
	public Scale currentScale;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE944", Offset = "0x8DE944")]
	public GameObject m_vfxEnlarge;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_vfxCompress;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_vfxDuplicate;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE97C", Offset = "0x8DE97C")]
	public string m_sfxPlay;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string m_sfxStop;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_sfxBreak;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_sfxEnlarge;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string m_sfxCompress;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string m_sfxDuplicate;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_sfxRtpcVelocity;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_sfxRtpcAmount;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string m_sfx;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string m_sfxSwitchVariety;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string[] m_sfxSwitchOpVariety;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string m_sfxCollide;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string m_sfxRTPCCollide;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float handsDistLastFrame;

	[Token(Token = "0x1700019E")]
	public bool Exploded
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x11F4BDC", Offset = "0x11F4BDC", VA = "0x11F4BDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	public bool WillDuplicate
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x11F4BE4", Offset = "0x11F4BE4", VA = "0x11F4BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x11F4A54", Offset = "0x11F4A54", VA = "0x11F4A54")]
	public static void SetFXAttractorPos(Vector3 p)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x11F4C64", Offset = "0x11F4C64", VA = "0x11F4C64")]
	private Scale ScaleIdxToScale(int idx)
	{
		return default(Scale);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x11F4C7C", Offset = "0x11F4C7C", VA = "0x11F4C7C")]
	private void ApplyCurrentScale()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x11F4D34", Offset = "0x11F4D34", VA = "0x11F4D34")]
	public void SetScale(Scale scale)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x11F50B4", Offset = "0x11F50B4", VA = "0x11F50B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x11F52D8", Offset = "0x11F52D8", VA = "0x11F52D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x11F53CC", Offset = "0x11F53CC", VA = "0x11F53CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x11F53DC", Offset = "0x11F53DC", VA = "0x11F53DC")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x11F5520", Offset = "0x11F5520", VA = "0x11F5520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x11F4E90", Offset = "0x11F4E90", VA = "0x11F4E90")]
	private void SetInitialHandDistance()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x11F5678", Offset = "0x11F5678", VA = "0x11F5678")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x11F567C", Offset = "0x11F567C", VA = "0x11F567C")]
	private void EndStretchSfx()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x11F578C", Offset = "0x11F578C", VA = "0x11F578C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x11F60EC", Offset = "0x11F60EC", VA = "0x11F60EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED6E8", Offset = "0x8ED6E8")]
	private IEnumerator Explode()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x11F63D8", Offset = "0x11F63D8", VA = "0x11F63D8")]
	private NVRInteractableItem DuplicateOnExplode()
	{
		return null;
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x11F6604", Offset = "0x11F6604", VA = "0x11F6604")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED748", Offset = "0x8ED748")]
	private void ScaleUp()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x11F66C4", Offset = "0x11F66C4", VA = "0x11F66C4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED760", Offset = "0x8ED760")]
	private void ScaleDown()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x11F6164", Offset = "0x11F6164", VA = "0x11F6164")]
	private void UpdateStretchEffect()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x11F6784", Offset = "0x11F6784", VA = "0x11F6784")]
	public StretchableItem()
	{
	}
}
[Token(Token = "0x2000284")]
[ExecuteInEditMode]
public class StretchyModel : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter m_meshFilter;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh m_sourceMesh;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh m_destMesh;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_pt1Source;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_pt2Source;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_pt1Dest;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_pt2Dest;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] m_vs;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] m_ts;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] m_ns;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color[] m_cs;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3[] m_vd;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_td;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] m_nd;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color[] m_cd;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x11F6CD0", Offset = "0x11F6CD0", VA = "0x11F6CD0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x11F6CDC", Offset = "0x11F6CDC", VA = "0x11F6CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x11F6CE0", Offset = "0x11F6CE0", VA = "0x11F6CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x11F6CE4", Offset = "0x11F6CE4", VA = "0x11F6CE4")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x11F732C", Offset = "0x11F732C", VA = "0x11F732C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x11F748C", Offset = "0x11F748C", VA = "0x11F748C")]
	public StretchyModel()
	{
	}
}
[Token(Token = "0x2000285")]
public class TNT : MonoBehaviour
{
	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PointAndSnap m_pointAndSnap;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DE9B4", Offset = "0x8DE9B4")]
	public static bool ms_instantExplode;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timeout;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_textMesh;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_explosionFXPrefab;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE9FC", Offset = "0x8DE9FC")]
	public float m_refundFraction;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatConst m_processingValueMultiplier;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_countdownActive;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_timeRemaining;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_destructionRefund;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_destructionTarget;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEA14", Offset = "0x8DEA14")]
	public string m_sfxPlaced;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string m_sfxStartCountdown;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxStopCountdown;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_sfxExplodeBuilding;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_sfxExplodeItem;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_sfxControlSwitch;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string m_sfxControlModeNormal;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_sfxControlModeFinal;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float m_finalSfxFromSecondsRemain;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x11F9854", Offset = "0x11F9854", VA = "0x11F9854")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x11F9A08", Offset = "0x11F9A08", VA = "0x11F9A08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x11F9A88", Offset = "0x11F9A88", VA = "0x11F9A88")]
	private static bool CheckForValidTarget(Collider targetCollider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x11F9C00", Offset = "0x11F9C00", VA = "0x11F9C00")]
	private void OnPickup()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x11F9D3C", Offset = "0x11F9D3C", VA = "0x11F9D3C")]
	private void OnSnap(bool didSnap, bool validPlacement, RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x11FA16C", Offset = "0x11FA16C", VA = "0x11FA16C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x11FA850", Offset = "0x11FA850", VA = "0x11FA850")]
	public static void ExplodeThing(GameObject thingToExplode, Vector3 position, float radius)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x11F9ED4", Offset = "0x11F9ED4", VA = "0x11F9ED4")]
	private bool FindDestructionTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x11FAAAC", Offset = "0x11FAAAC", VA = "0x11FAAAC")]
	public TNT()
	{
	}
}
[Token(Token = "0x2000286")]
public class FolkAnimationTester : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F18", Offset = "0x8D5F18")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FolkAnimationTester <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xE7CB5C", Offset = "0xE7CB5C", VA = "0xE7CB5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xE7CBA4", Offset = "0xE7CBA4", VA = "0xE7CBA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xE7CA1C", Offset = "0xE7CA1C", VA = "0xE7CA1C")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xE7CA48", Offset = "0xE7CA48", VA = "0xE7CA48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xE7CA4C", Offset = "0xE7CA4C", VA = "0xE7CA4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xE7CB64", Offset = "0xE7CB64", VA = "0xE7CB64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FolkAnimationController[] folk;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Person[] persons;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PersonGenerator personGen;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableBehaviours;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool disableEmotions;

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x11BCFB0", Offset = "0x11BCFB0", VA = "0x11BCFB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ED7C8", Offset = "0x8ED7C8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x11BD028", Offset = "0x11BD028", VA = "0x11BD028")]
	private void GetAllFolk()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x11BD188", Offset = "0x11BD188", VA = "0x11BD188")]
	private void SetEmotions(FolkAnimationController.Emotions emotion)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x11BD20C", Offset = "0x11BD20C", VA = "0x11BD20C")]
	public void SetHappy()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x11BD214", Offset = "0x11BD214", VA = "0x11BD214")]
	public void SetNeutral()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x11BD21C", Offset = "0x11BD21C", VA = "0x11BD21C")]
	public void SetSad()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x11BD224", Offset = "0x11BD224", VA = "0x11BD224")]
	public void SetBored()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x11BD22C", Offset = "0x11BD22C", VA = "0x11BD22C")]
	public void SetHungry()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x11BD234", Offset = "0x11BD234", VA = "0x11BD234")]
	public void SetTired()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x11BD23C", Offset = "0x11BD23C", VA = "0x11BD23C")]
	public void SetWalking()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x11BD2E8", Offset = "0x11BD2E8", VA = "0x11BD2E8")]
	public void SetState(FolkAnimationController.States state)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x11BD368", Offset = "0x11BD368", VA = "0x11BD368")]
	public void PlayOneshot(FolkAnimationController.States state)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x11BD3E4", Offset = "0x11BD3E4", VA = "0x11BD3E4")]
	public void MakeCheer()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x11BD3EC", Offset = "0x11BD3EC", VA = "0x11BD3EC")]
	public void SetDancing()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x11BD3F4", Offset = "0x11BD3F4", VA = "0x11BD3F4")]
	public void AddPerson()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x11BD428", Offset = "0x11BD428", VA = "0x11BD428")]
	public void RemovePerson()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x11BD4D0", Offset = "0x11BD4D0", VA = "0x11BD4D0")]
	public FolkAnimationTester()
	{
	}
}
[Token(Token = "0x2000288")]
public class PersonActivityTester : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActivityItem ActivityItem;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Person Person;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1251D74", Offset = "0x1251D74", VA = "0x1251D74")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED878", Offset = "0x8ED878")]
	private void DoActivity()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1251E74", Offset = "0x1251E74", VA = "0x1251E74")]
	private void GoToActivityResult(AgentController.Result result)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x1251EC8", Offset = "0x1251EC8", VA = "0x1251EC8")]
	public PersonActivityTester()
	{
	}
}
[Token(Token = "0x2000289")]
public class TextTextureMaker : MonoBehaviour
{
	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8DEA4C", Offset = "0x8DEA4C")]
	[Multiline]
	public string m_text;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset m_font;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D latest;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TextMeshPro m_tmp;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera m_cam;

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1200330", Offset = "0x1200330", VA = "0x1200330")]
	public Texture2D MakeTextureWithMyText()
	{
		return null;
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1200384", Offset = "0x1200384", VA = "0x1200384")]
	public static Texture2D MakeTexture(string txt, TMP_FontAsset font, bool saveToFile, Color bgColour)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x120096C", Offset = "0x120096C", VA = "0x120096C")]
	public TextTextureMaker()
	{
	}
}
[Token(Token = "0x200028A")]
public class TheGame : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x200028B")]
	public class TestObject : StaticMapped<TestObject>
	{
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xEB1EF0", Offset = "0xEB1EF0", VA = "0xEB1EF0")]
		public TestObject()
		{
		}
	}

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TheGame Instance;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CityName;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_maxCityRadius;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEAB8", Offset = "0x8DEAB8")]
	public float m_startTimeHr;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_realSecondsPerGameHour;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Saveable]
	[ReadOnly]
	public double m_gameEpochTimeHrs;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double m_gameDeltaTimeHrs;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float m_hoursInDaytime;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_hoursInANight;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[ReadOnly]
	public string m_realTimePerGameDay;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEB48", Offset = "0x8DEB48")]
	public GameObject m_skybox;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Cubemap m_defaultMatCap;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light m_light;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Gradient m_sunColour;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TheSun m_theSun;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] m_dayNightMaterials;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color[] m_dayNightMaterialDefaultColour;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEB80", Offset = "0x8DEB80")]
	[Saveable]
	public List<Interest> m_allInterests;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Saveable]
	[ReadOnly]
	public List<Interest> m_unlockedInterests;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public List<Interest> m_lockedInterests;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action<Interest> OnAnyInterestChanged;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<Interest> OnAnyInterestUnlocked;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEC14", Offset = "0x8DEC14")]
	public Shop m_shop;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] m_alwaysAvailableShopItemPrefabs;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEC4C", Offset = "0x8DEC4C")]
	private Interest <m_noInterest>k__BackingField;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEC5C", Offset = "0x8DEC5C")]
	private Interest <m_anyInterest>k__BackingField;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEC6C", Offset = "0x8DEC6C")]
	private CircularPrefabPool <m_pointAndSnapUIPrefabPool>k__BackingField;

	[Token(Token = "0x170001A4")]
	public float GameHoursPerFullDay
	{
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x10B27A4", Offset = "0x10B27A4", VA = "0x10B27A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A5")]
	public float deltaGameDays
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x10B27B0", Offset = "0x10B27B0", VA = "0x10B27B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A6")]
	public float RealSecondsPerFullDay
	{
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x10B280C", Offset = "0x10B280C", VA = "0x10B280C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A7")]
	public float DaysPerRealSecond
	{
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x10B27F0", Offset = "0x10B27F0", VA = "0x10B27F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A8")]
	public float RealSecondsToGameHours
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x10B2820", Offset = "0x10B2820", VA = "0x10B2820")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A9")]
	public float RealSecondsToGameDays
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x10B2830", Offset = "0x10B2830", VA = "0x10B2830")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AA")]
	public float GameHoursToRealSeconds
	{
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x10B284C", Offset = "0x10B284C", VA = "0x10B284C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AB")]
	public float GameDaysRealSeconds
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x10B2854", Offset = "0x10B2854", VA = "0x10B2854")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AC")]
	public Interest m_noInterest
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x10B2D74", Offset = "0x10B2D74", VA = "0x10B2D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED890", Offset = "0x8ED890")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x10B2D7C", Offset = "0x10B2D7C", VA = "0x10B2D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED8A0", Offset = "0x8ED8A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public Interest m_anyInterest
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x10B2D84", Offset = "0x10B2D84", VA = "0x10B2D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED8B0", Offset = "0x8ED8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x10B2D8C", Offset = "0x10B2D8C", VA = "0x10B2D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED8C0", Offset = "0x8ED8C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public CircularPrefabPool m_pointAndSnapUIPrefabPool
	{
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x10B2D94", Offset = "0x10B2D94", VA = "0x10B2D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED8D0", Offset = "0x8ED8D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x10B2D9C", Offset = "0x10B2D9C", VA = "0x10B2D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ED8E0", Offset = "0x8ED8E0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x10B2868", Offset = "0x10B2868", VA = "0x10B2868")]
	public bool IsInsideSafeZone(Transform transform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x10B28D4", Offset = "0x10B28D4", VA = "0x10B28D4")]
	public float AddDayTimes(float start, float offsetHours)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x10B28F4", Offset = "0x10B28F4", VA = "0x10B28F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x10B2B94", Offset = "0x10B2B94", VA = "0x10B2B94")]
	public void ResetInterests(Interest[] availableInterests)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x10B2C3C", Offset = "0x10B2C3C", VA = "0x10B2C3C")]
	private void ClearInterests(List<Interest> interests)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x10B2DA4", Offset = "0x10B2DA4", VA = "0x10B2DA4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8ED8F0", Offset = "0x8ED8F0")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x10B2DF4", Offset = "0x10B2DF4", VA = "0x10B2DF4")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x10B2EF4", Offset = "0x10B2EF4", VA = "0x10B2EF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x10B34FC", Offset = "0x10B34FC", VA = "0x10B34FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x10B35E8", Offset = "0x10B35E8", VA = "0x10B35E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x10B369C", Offset = "0x10B369C", VA = "0x10B369C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED904", Offset = "0x8ED904")]
	public void TestNotification()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x10B36E0", Offset = "0x10B36E0", VA = "0x10B36E0")]
	public void Notification(string s)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x10B3760", Offset = "0x10B3760", VA = "0x10B3760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x10B3A78", Offset = "0x10B3A78", VA = "0x10B3A78")]
	private void NewPersonAdded(Person p)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x10B3A7C", Offset = "0x10B3A7C", VA = "0x10B3A7C")]
	public void UnlockInterest(Interest inter)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x10B3C84", Offset = "0x10B3C84", VA = "0x10B3C84")]
	private void UnlockInterestAndShop(Interest inter)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x10B3D64", Offset = "0x10B3D64", VA = "0x10B3D64")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED91C", Offset = "0x8ED91C")]
	public void QuickStart()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x10B3E84", Offset = "0x10B3E84", VA = "0x10B3E84", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x10B3E88", Offset = "0x10B3E88", VA = "0x10B3E88", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x10B3F20", Offset = "0x10B3F20", VA = "0x10B3F20", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x10B402C", Offset = "0x10B402C", VA = "0x10B402C")]
	public void SetSkyboxAndLighting(GameObject skyboxPrefab)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x10B4328", Offset = "0x10B4328", VA = "0x10B4328")]
	public void LoadedNewLanguage()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x10B43C8", Offset = "0x10B43C8", VA = "0x10B43C8")]
	public TheGame()
	{
	}
}
[Token(Token = "0x200028C")]
public class TheSun : MonoBehaviour
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxFlares;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_flarePrefab;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SolarFlare> m_flares;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double m_flareEveryXDays;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double m_nextFlareLaunch;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient m_flareWarningColour;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Saveable]
	[ReadOnly]
	public float m_flaresLaunched;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Saveable]
	[ReadOnly]
	public float m_flaresImpacted;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double m_hrsToLaunchLastFrame;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_daysOfWarnings;

	[Token(Token = "0x170001AF")]
	public float FlareProgress
	{
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x10B38F0", Offset = "0x10B38F0", VA = "0x10B38F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x10B4468", Offset = "0x10B4468", VA = "0x10B4468")]
	public double TimeInHrsToNextFlareLaunch()
	{
		return default(double);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x10B3A48", Offset = "0x10B3A48", VA = "0x10B3A48")]
	public Color GetFlareColour()
	{
		return default(Color);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x10B44DC", Offset = "0x10B44DC", VA = "0x10B44DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x10B46BC", Offset = "0x10B46BC", VA = "0x10B46BC")]
	public void StartFlaring(float timeToFirstLaunch = -1f)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x10B47AC", Offset = "0x10B47AC", VA = "0x10B47AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x10B4AE8", Offset = "0x10B4AE8", VA = "0x10B4AE8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED964", Offset = "0x8ED964")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED964", Offset = "0x8ED964")]
	public void LaunchSolarFlare()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x10B4CD8", Offset = "0x10B4CD8", VA = "0x10B4CD8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8ED9C8", Offset = "0x8ED9C8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8ED9C8", Offset = "0x8ED9C8")]
	public void StopAllSolarFlares()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x10B4E08", Offset = "0x10B4E08", VA = "0x10B4E08")]
	public TheSun()
	{
	}
}
[Token(Token = "0x200028D")]
public class ThoughtBubble : MonoBehaviour
{
	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro m_tmp;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_timer;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x10B4E2C", Offset = "0x10B4E2C", VA = "0x10B4E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x10B4EB4", Offset = "0x10B4EB4", VA = "0x10B4EB4")]
	public void SetText(string s, float duration)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x10B4EFC", Offset = "0x10B4EFC", VA = "0x10B4EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x10B4F98", Offset = "0x10B4F98", VA = "0x10B4F98")]
	public ThoughtBubble()
	{
	}
}
[Token(Token = "0x200028E")]
public class TitleScreenPauser : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pauseSFX;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_unPauseSFX;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isOculusPaused;

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x10B4FA0", Offset = "0x10B4FA0", VA = "0x10B4FA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x10B50C0", Offset = "0x10B50C0", VA = "0x10B50C0")]
	public TitleScreenPauser()
	{
	}
}
[Token(Token = "0x200028F")]
public interface IToolTipProvider
{
	[Token(Token = "0x170001B0")]
	string ToolTipText
	{
		[Token(Token = "0x6000DFD")]
		get;
	}

	[Token(Token = "0x170001B1")]
	int ToolTipOrder
	{
		[Token(Token = "0x6000DFE")]
		get;
	}

	[Token(Token = "0x170001B2")]
	bool ToolTipOverrideColor
	{
		[Token(Token = "0x6000DFF")]
		get;
	}

	[Token(Token = "0x170001B3")]
	Color ToolTipColor
	{
		[Token(Token = "0x6000E00")]
		get;
	}
}
[Token(Token = "0x2000290")]
public class ToolTip : MonoBehaviour
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_uiLocator;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_tip;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<IToolTipProvider> m_providers;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x10B8160", Offset = "0x10B8160", VA = "0x10B8160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x10B832C", Offset = "0x10B832C", VA = "0x10B832C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x10B886C", Offset = "0x10B886C", VA = "0x10B886C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x10B8920", Offset = "0x10B8920", VA = "0x10B8920")]
	public void AddProvider(IToolTipProvider provider)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x10B8A04", Offset = "0x10B8A04", VA = "0x10B8A04")]
	public void RemoveProvider(IToolTipProvider provider)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x10B8AEC", Offset = "0x10B8AEC", VA = "0x10B8AEC")]
	private int ProviderSort(IToolTipProvider x, IToolTipProvider y)
	{
		return default(int);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x10B8CF8", Offset = "0x10B8CF8", VA = "0x10B8CF8")]
	public ToolTip()
	{
	}
}
[Token(Token = "0x2000291")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string TxtButtonCol;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xE8B3F4", Offset = "0xE8B3F4", VA = "0xE8B3F4")]
	public static string GetControlLocKeySpecialCase(string prefix)
	{
		return null;
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xE8BD14", Offset = "0xE8BD14", VA = "0xE8BD14")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x2000292")]
public class TutorialLabel : MonoBehaviour
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DECEC", Offset = "0x8DECEC")]
	[Multiline]
	public string m_textKey;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRButtons m_button;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_isAxis;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_buttonPressCount;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_axisMove;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastAxis;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_labelTag;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_labelTarget;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Spring m_spring;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_wwiseEvent;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_wwiseObject;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xE8BD80", Offset = "0xE8BD80", VA = "0xE8BD80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xE8BDE4", Offset = "0xE8BDE4", VA = "0xE8BDE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xE8BED0", Offset = "0xE8BED0", VA = "0xE8BED0")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xE8C340", Offset = "0xE8C340", VA = "0xE8C340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xE8C50C", Offset = "0xE8C50C", VA = "0xE8C50C")]
	public TutorialLabel()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xE8C51C", Offset = "0xE8C51C", VA = "0xE8C51C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDA2C", Offset = "0x8EDA2C")]
	private bool <Setup>b__15_0(ControllerLocator h)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xE8C584", Offset = "0xE8C584", VA = "0xE8C584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDA3C", Offset = "0x8EDA3C")]
	private bool <Setup>b__15_1(ControllerButtonLocator b)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000293")]
public class TwoStateSelection : MonoBehaviour
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_selected;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_unselected;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xE8CA04", Offset = "0xE8CA04", VA = "0xE8CA04")]
	public void SetSelected(bool b)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xE8CA44", Offset = "0xE8CA44", VA = "0xE8CA44")]
	public TwoStateSelection()
	{
	}
}
[Token(Token = "0x2000294")]
public class BankBalanceLabel : MonoBehaviour
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVar m_float;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_format;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastSeenIntValue;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1042340", Offset = "0x1042340", VA = "0x1042340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1042508", Offset = "0x1042508", VA = "0x1042508")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1042644", Offset = "0x1042644", VA = "0x1042644")]
	private void ValueChanged(float v)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x10426A0", Offset = "0x10426A0", VA = "0x10426A0")]
	public BankBalanceLabel()
	{
	}
}
[Token(Token = "0x2000295")]
public class DialogueBox : MonoBehaviour
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_title;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_message;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button m_buttonRight;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button m_buttonLeft;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_gameWasPaused;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_disableButtonsOnPause;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem m_vfxVanish;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_buttonWasActiveR;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_buttonWasActiveL;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1007E08", Offset = "0x1007E08", VA = "0x1007E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1007E9C", Offset = "0x1007E9C", VA = "0x1007E9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1007F60", Offset = "0x1007F60", VA = "0x1007F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x10081E0", Offset = "0x10081E0", VA = "0x10081E0")]
	public DialogueBox()
	{
	}
}
[Token(Token = "0x2000296")]
public class FolkPin : MonoBehaviour
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_timer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_speed;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_flightDuration;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_startPos;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Person m_person;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve m_yOffset;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailRenderer m_trail;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_trailMaxLen;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 lastfn;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 rot;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x11C1AB4", Offset = "0x11C1AB4", VA = "0x11C1AB4")]
	public void Launch(Vector3 fromPos, Person person)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x11C1C40", Offset = "0x11C1C40", VA = "0x11C1C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x11C1F48", Offset = "0x11C1F48", VA = "0x11C1F48")]
	public FolkPin()
	{
	}
}
[Token(Token = "0x2000297")]
public class HandBlendShape : MonoBehaviour
{
	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform blendShapeBone;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer hand;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int blendShapeIndex;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x12A6F9C", Offset = "0x12A6F9C", VA = "0x12A6F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x12A7038", Offset = "0x12A7038", VA = "0x12A7038")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x12A70FC", Offset = "0x12A70FC", VA = "0x12A70FC")]
	public HandBlendShape()
	{
	}
}
[Token(Token = "0x2000298")]
public class LoadGameButton : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button button;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1775E10", Offset = "0x1775E10", VA = "0x1775E10")]
	public LoadGameButton()
	{
	}
}
[Token(Token = "0x2000299")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_subMenus;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_languageSwitchButtons;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_languageButtonPrefab;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_languageButtonContainer;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1606298", Offset = "0x1606298", VA = "0x1606298")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1606644", Offset = "0x1606644", VA = "0x1606644")]
	public void NextLanguage()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x16066E0", Offset = "0x16066E0", VA = "0x16066E0")]
	public void QuitApp()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x16066E8", Offset = "0x16066E8", VA = "0x16066E8")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x200029A")]
public class MainMenuOptions : MonoBehaviour
{
	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButtonSlider m_musicSlider;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButtonSlider m_sfxSlider;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DED38", Offset = "0x8DED38")]
	public SkyboxToPassthrough m_skyboxToPassthrough;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerModels m_vrControllerModels;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_passthroughButton;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_passthroughToggle;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_showControllersButton;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text m_showControllerToggle;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x16066F0", Offset = "0x16066F0", VA = "0x16066F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x160689C", Offset = "0x160689C", VA = "0x160689C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x16069FC", Offset = "0x16069FC", VA = "0x16069FC")]
	private void OnSFXChange(float v)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1606A64", Offset = "0x1606A64", VA = "0x1606A64")]
	private void OnMusicChange(float v)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1606ACC", Offset = "0x1606ACC", VA = "0x1606ACC")]
	public void OnTogglePassthrough()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1606B58", Offset = "0x1606B58", VA = "0x1606B58")]
	public void OnToggleShowControllers()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1606BE4", Offset = "0x1606BE4", VA = "0x1606BE4")]
	public MainMenuOptions()
	{
	}
}
[Token(Token = "0x200029B")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseMenu ms_instance;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_pauseSFX;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_unPauseSFX;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButtonSlider m_musicSlider;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButtonSlider m_sfxSlider;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer m_pauseWorldOverlay;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_menuUI;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] m_otherPages;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_shown;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_overlayFadeDuration;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color m_overlayOnColor;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color m_overlayOffColor;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Camera m_overlayUICamera;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button[] m_saveButtons;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_Text[] m_saveText;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text[] m_hack_noSaveInTutorialText;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool m_canPause;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isOculusPaused;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] m_hiddenButtons;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DebugMenuUGUI m_debugMenu;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_debugButton;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NVRHand m_hand;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DED70", Offset = "0x8DED70")]
	public SkyboxToPassthrough m_skyboxToPassthrough;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRControllerModels m_vrControllerModels;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_optionsMenuButton;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_passthroughButton;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TMP_Text m_passthroughToggle;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_showControllersButton;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TMP_Text m_showControllerToggle;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xECD2B8", Offset = "0xECD2B8", VA = "0xECD2B8")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xECD3DC", Offset = "0xECD3DC", VA = "0xECD3DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xECD678", Offset = "0xECD678", VA = "0xECD678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xECD83C", Offset = "0xECD83C", VA = "0xECD83C")]
	private void OnSFXChange(float v)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xECD8A4", Offset = "0xECD8A4", VA = "0xECD8A4")]
	private void OnMusicChange(float v)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xECD90C", Offset = "0xECD90C", VA = "0xECD90C")]
	public static void Show()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xECDF40", Offset = "0xECDF40", VA = "0xECDF40")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xECDFEC", Offset = "0xECDFEC", VA = "0xECDFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xECD9B4", Offset = "0xECD9B4", VA = "0xECD9B4")]
	private void DoShow()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xECD598", Offset = "0xECD598", VA = "0xECD598")]
	private void DoHide(bool instant = false)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xECE250", Offset = "0xECE250", VA = "0xECE250")]
	public void ToggleAtLeftHand()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xECE2E4", Offset = "0xECE2E4", VA = "0xECE2E4")]
	public void ToggleAtRightHand()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xECE2D0", Offset = "0xECE2D0", VA = "0xECE2D0")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xECE364", Offset = "0xECE364", VA = "0xECE364")]
	public void OnSaveClicked()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xECE414", Offset = "0xECE414", VA = "0xECE414")]
	public void OnQuitWithoutSaveClicked()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xECE4C0", Offset = "0xECE4C0", VA = "0xECE4C0")]
	public void OnQuitWithSaveClicked()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xECE5BC", Offset = "0xECE5BC", VA = "0xECE5BC")]
	public void OnTogglePassthrough()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xECE648", Offset = "0xECE648", VA = "0xECE648")]
	public void OnToggleShowControllers()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xECE6D4", Offset = "0xECE6D4", VA = "0xECE6D4")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200029C")]
public class RobotDialogueBox : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	public enum TimeBarState
	{
		[Token(Token = "0x4000E52")]
		HideTimeBar,
		[Token(Token = "0x4000E53")]
		ShowTimeBar
	}

	[Token(Token = "0x200029E")]
	public enum Status
	{
		[Token(Token = "0x4000E55")]
		WrongMessage = -1,
		[Token(Token = "0x4000E56")]
		No,
		[Token(Token = "0x4000E57")]
		Yes_FullReadTime,
		[Token(Token = "0x4000E58")]
		Yes_JustEnough
	}

	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F28", Offset = "0x8D5F28")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RobotDialogueBox <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x1067758", Offset = "0x1067758", VA = "0x1067758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x10677A0", Offset = "0x10677A0", VA = "0x10677A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10674AC", Offset = "0x10674AC", VA = "0x10674AC")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x10674D8", Offset = "0x10674D8", VA = "0x10674D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x10674DC", Offset = "0x10674DC", VA = "0x10674DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1067760", Offset = "0x1067760", VA = "0x1067760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F38", Offset = "0x8D5F38")]
	private sealed class <HideInCR>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RobotDialogueBox <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x106745C", Offset = "0x106745C", VA = "0x106745C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x10674A4", Offset = "0x10674A4", VA = "0x10674A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1067348", Offset = "0x1067348", VA = "0x1067348")]
		[DebuggerHidden]
		public <HideInCR>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1067374", Offset = "0x1067374", VA = "0x1067374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1067378", Offset = "0x1067378", VA = "0x1067378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1067464", Offset = "0x1067464", VA = "0x1067464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RobotDialogueBox Instance;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_message;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_hasBesideRobotLocator;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_besideRobotLocator;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_headlockedLocator;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_targetTransform;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] m_showWhenHeadlocked;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] m_showWhenAtRobot;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_goToHeadLockedAngle;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_goToRobotAngle;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_lerpRate;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_initialised;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_currentMessage;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_rebuildMessage;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_popupSFX;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_currentReadTime;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_messageChangedAt;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_timeBarEnabled;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DEDA8", Offset = "0x8DEDA8")]
	public RectTransform m_timeBar;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DEDE0", Offset = "0x8DEDE0")]
	public float m_timebarMaxX;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool m_doTypewriterEffect;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DEE18", Offset = "0x8DEE18")]
	private float m_displayCharCount;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DEE50", Offset = "0x8DEE50")]
	public float m_displaySpeed;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x11A0840", Offset = "0x11A0840", VA = "0x11A0840")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EDA4C", Offset = "0x8EDA4C")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x11A0890", Offset = "0x11A0890", VA = "0x11A0890")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x11A0990", Offset = "0x11A0990", VA = "0x11A0990")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x11A0AE8", Offset = "0x11A0AE8", VA = "0x11A0AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDA60", Offset = "0x8EDA60")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x11A0B60", Offset = "0x11A0B60", VA = "0x11A0B60")]
	private void GoToRobot()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x11A0BA8", Offset = "0x11A0BA8", VA = "0x11A0BA8")]
	private void GoToHeadlocked()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x11A0BF0", Offset = "0x11A0BF0", VA = "0x11A0BF0")]
	public void SetMessage(string msg, TimeBarState showTimeBar = TimeBarState.HideTimeBar)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x11A0E00", Offset = "0x11A0E00", VA = "0x11A0E00")]
	public void SetAutoHideMessage(string msg)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x11A0E74", Offset = "0x11A0E74", VA = "0x11A0E74")]
	public Status LatestMessageShownForLongEnough()
	{
		return default(Status);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x11A0ED4", Offset = "0x11A0ED4", VA = "0x11A0ED4")]
	public Status MessageShownForLongEnough(string msg)
	{
		return default(Status);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x11A0F4C", Offset = "0x11A0F4C", VA = "0x11A0F4C")]
	public static string StyleText(string msg, Color highlightCol)
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x11A0F78", Offset = "0x11A0F78", VA = "0x11A0F78")]
	public static string StyleText(string msg, string highlightCol = "0068F1")
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x11A10CC", Offset = "0x11A10CC", VA = "0x11A10CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x11A0E2C", Offset = "0x11A0E2C", VA = "0x11A0E2C")]
	public void HideIn(float seconds)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x11A13B4", Offset = "0x11A13B4", VA = "0x11A13B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDAC0", Offset = "0x8EDAC0")]
	private IEnumerator HideInCR(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x11A143C", Offset = "0x11A143C", VA = "0x11A143C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x11A1444", Offset = "0x11A1444", VA = "0x11A1444")]
	public RobotDialogueBox()
	{
	}
}
[Token(Token = "0x20002A1")]
public class ScaffoldBalanceLabel : MonoBehaviour
{
	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_text;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shop m_shop;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_unconstructed;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xED9E28", Offset = "0xED9E28", VA = "0xED9E28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xED9E94", Offset = "0xED9E94", VA = "0xED9E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xED9F60", Offset = "0xED9F60", VA = "0xED9F60")]
	public ScaffoldBalanceLabel()
	{
	}
}
[Token(Token = "0x20002A2")]
public class SmartDataStringToTMP : MonoBehaviour
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringVar m_string;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xEE5890", Offset = "0xEE5890", VA = "0xEE5890")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xEE59D8", Offset = "0xEE59D8", VA = "0xEE59D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xEE5B14", Offset = "0xEE5B14", VA = "0xEE5B14")]
	private void ValueChanged(string v)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xEE5B34", Offset = "0xEE5B34", VA = "0xEE5B34")]
	public SmartDataStringToTMP()
	{
	}
}
[Token(Token = "0x20002A3")]
[ExecuteInEditMode]
public class SpriteFader : MonoBehaviour
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_sprite;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_curve;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_timer;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x11F0A50", Offset = "0x11F0A50", VA = "0x11F0A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x11F0A58", Offset = "0x11F0A58", VA = "0x11F0A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x11F0B48", Offset = "0x11F0B48", VA = "0x11F0B48")]
	public SpriteFader()
	{
	}
}
[Token(Token = "0x20002A4")]
public class ToggleWheel : MonoBehaviour
{
	[Token(Token = "0x20002A5")]
	public struct ItemDetails
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sprite m_sprite;
	}

	[Token(Token = "0x20002A6")]
	public interface IDataSource
	{
		[Token(Token = "0x170001B9")]
		int ToggleWheelItemCount
		{
			[Token(Token = "0x6000E74")]
			get;
		}

		[Token(Token = "0x6000E75")]
		ItemDetails ToggleWheelItemDetails(int index);
	}

	[Token(Token = "0x20002A7")]
	private struct VisibleItem
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToggleWheelItem m_iconItem;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform m_hostTransform;
	}

	[Token(Token = "0x20002A8")]
	public class ChangeEvent : UnityEvent<ToggleWheel, float>
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xEB2104", Offset = "0xEB2104", VA = "0xEB2104")]
		public ChangeEvent()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F58", Offset = "0x8D5F58")]
	private sealed class <RotateRing>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheel <>4__this;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentIndex;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int newIndex;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xEB20B4", Offset = "0xEB20B4", VA = "0xEB20B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xEB20FC", Offset = "0xEB20FC", VA = "0xEB20FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xEB1F68", Offset = "0xEB1F68", VA = "0xEB1F68")]
		[DebuggerHidden]
		public <RotateRing>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xEB1F94", Offset = "0xEB1F94", VA = "0xEB1F94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xEB1F98", Offset = "0xEB1F98", VA = "0xEB1F98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xEB20BC", Offset = "0xEB20BC", VA = "0xEB20BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IDataSource m_dataSource;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_arc;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_sideItemCount;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_toggleTransitionTime;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_rotationDuration;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_focusedItemScale;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_edgeItemScale;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_scaleCurve;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleWheelItem m_itemPrefab;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_itemHostTransform;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ChangeEvent m_changeEvent;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_invert;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_currentIndex;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_itemCount;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VisibleItem[] m_visibleItems;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_rotating;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_inputDelta;

	[Token(Token = "0x170001B8")]
	public int Index
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x10B5140", Offset = "0x10B5140", VA = "0x10B5140")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x10B515C", Offset = "0x10B515C", VA = "0x10B515C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x10B539C", Offset = "0x10B539C", VA = "0x10B539C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x10B53A4", Offset = "0x10B53A4", VA = "0x10B53A4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x10B58D8", Offset = "0x10B58D8", VA = "0x10B58D8")]
	public void ToggleGoLeft()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x10B59A4", Offset = "0x10B59A4", VA = "0x10B59A4")]
	public void ToggleGoRight()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x10B58E8", Offset = "0x10B58E8", VA = "0x10B58E8")]
	private void HandleInput()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x10B53D4", Offset = "0x10B53D4", VA = "0x10B53D4")]
	private void SetupVisibleItems()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x10B5A40", Offset = "0x10B5A40", VA = "0x10B5A40")]
	public void SetCurrentIndex(int idx)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x10B55CC", Offset = "0x10B55CC", VA = "0x10B55CC")]
	private void Layout(float focusItemIndex, bool clockwise)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x10B59B4", Offset = "0x10B59B4", VA = "0x10B59B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDBC0", Offset = "0x8EDBC0")]
	private IEnumerator RotateRing(int currentIndex, int newIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x10B5A68", Offset = "0x10B5A68", VA = "0x10B5A68")]
	public ToggleWheel()
	{
	}
}
[Token(Token = "0x20002AA")]
public class ToggleWheelItem : MonoBehaviour
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_iconSpriteRenderer;

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x10B5B28", Offset = "0x10B5B28", VA = "0x10B5B28", Slot = "4")]
	public virtual void Setup(ToggleWheel.ItemDetails details)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x10B5B44", Offset = "0x10B5B44", VA = "0x10B5B44")]
	public ToggleWheelItem()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ToggleWheelMenu : StaticMapped<ToggleWheelMenu>, ToggleWheel.IDataSource
{
	[Token(Token = "0x20002AC")]
	public interface IItem
	{
		[Token(Token = "0x170001BE")]
		Sprite m_wheelToggleMenuIcon
		{
			[Token(Token = "0x6000E9B")]
			get;
		}
	}

	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F68", Offset = "0x8D5F68")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheelMenu <>4__this;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xEB2410", Offset = "0xEB2410", VA = "0xEB2410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xEB2458", Offset = "0xEB2458", VA = "0xEB2458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xEB21E8", Offset = "0xEB21E8", VA = "0xEB21E8")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xEB2214", Offset = "0xEB2214", VA = "0xEB2214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xEB2218", Offset = "0xEB2218", VA = "0xEB2218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xEB2418", Offset = "0xEB2418", VA = "0xEB2418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F78", Offset = "0x8D5F78")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ToggleWheelMenuItem> <>9__23_0;

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xEB21B4", Offset = "0xEB21B4", VA = "0xEB21B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xEB21BC", Offset = "0xEB21BC", VA = "0xEB21BC")]
		internal int <RegisterItem>b__23_0(ToggleWheelMenuItem a, ToggleWheelMenuItem b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_shopOpenSFX;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_shopCloseSFX;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_shopSwitchSFX;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ToggleWheel m_toggleWheel;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ToggleWheelMenuItem> m_menuItems;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ToggleWheelMenuItem m_activeMenuItem;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEE88", Offset = "0x8DEE88")]
	private NVRHand <m_currentHand>k__BackingField;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpacefolkHandModel m_currentHandModel;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TransformMatcher m_transformMatcher;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_initialised;

	[Token(Token = "0x170001BC")]
	public NVRHand m_currentHand
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x10B5B4C", Offset = "0x10B5B4C", VA = "0x10B5B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDC70", Offset = "0x8EDC70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x10B5B54", Offset = "0x10B5B54", VA = "0x10B5B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDC80", Offset = "0x8EDC80")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public int ToggleWheelItemCount
	{
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x10B5B5C", Offset = "0x10B5B5C", VA = "0x10B5B5C", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x10B5BA8", Offset = "0x10B5BA8", VA = "0x10B5BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x10B5C68", Offset = "0x10B5C68", VA = "0x10B5C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDC90", Offset = "0x8EDC90")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x10B5CE0", Offset = "0x10B5CE0", VA = "0x10B5CE0")]
	private void OnToggleWheelChange(ToggleWheel toggleWheel, float transitionDuration)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x10B5F90", Offset = "0x10B5F90", VA = "0x10B5F90")]
	public int GetActiveIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x10B5FC0", Offset = "0x10B5FC0", VA = "0x10B5FC0")]
	public int SetActiveIdx(int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x10B5E00", Offset = "0x10B5E00", VA = "0x10B5E00")]
	public void ActivateActiveItem()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x10B6030", Offset = "0x10B6030", VA = "0x10B6030")]
	public void AddNewItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x10B60C0", Offset = "0x10B60C0", VA = "0x10B60C0")]
	private void RegisterItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x10B6250", Offset = "0x10B6250", VA = "0x10B6250")]
	private void ReparentAndPrepareItem(ToggleWheelMenuItem item)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x10B62AC", Offset = "0x10B62AC", VA = "0x10B62AC", Slot = "8")]
	public ToggleWheel.ItemDetails ToggleWheelItemDetails(int index)
	{
		return default(ToggleWheel.ItemDetails);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x10B633C", Offset = "0x10B633C", VA = "0x10B633C")]
	public void ToggleAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x10B65C4", Offset = "0x10B65C4", VA = "0x10B65C4")]
	public void ToggleAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x10B6638", Offset = "0x10B6638", VA = "0x10B6638")]
	public void OpenAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x10B68B4", Offset = "0x10B68B4", VA = "0x10B68B4")]
	public void OpenAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x10B6928", Offset = "0x10B6928", VA = "0x10B6928")]
	public void CloseAtPlayersLeftHand()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x10B6A30", Offset = "0x10B6A30", VA = "0x10B6A30")]
	public void CloseAtPlayersRightHand()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x10B63B0", Offset = "0x10B63B0", VA = "0x10B63B0")]
	public void ToggleAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x10B66AC", Offset = "0x10B66AC", VA = "0x10B66AC")]
	public void OpenAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x10B699C", Offset = "0x10B699C", VA = "0x10B699C")]
	public void CloseAtHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x10B6BC8", Offset = "0x10B6BC8", VA = "0x10B6BC8")]
	private void SnapAndOpen(NVRHand hand)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x10B6AA4", Offset = "0x10B6AA4", VA = "0x10B6AA4")]
	public void Close()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x10B70F4", Offset = "0x10B70F4", VA = "0x10B70F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x10B711C", Offset = "0x10B711C", VA = "0x10B711C")]
	public static void CloseAll()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x10B7280", Offset = "0x10B7280", VA = "0x10B7280")]
	public static void HideAll()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x10B73E4", Offset = "0x10B73E4", VA = "0x10B73E4")]
	public ToggleWheelMenu()
	{
	}
}
[Token(Token = "0x20002AF")]
public class ToggleWheelMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_menuIcon;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_automaticRegistration;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DEE98", Offset = "0x8DEE98")]
	public int m_order;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x10B7520", Offset = "0x10B7520", VA = "0x10B7520")]
	public ToggleWheelMenuItem()
	{
	}
}
[Token(Token = "0x20002B0")]
public class ToggleWheelMenuOpenTrigger : Triggerable
{
	[Token(Token = "0x20002B1")]
	public enum Hand
	{
		[Token(Token = "0x4000E99")]
		Left,
		[Token(Token = "0x4000E9A")]
		Right
	}

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToggleWheelMenu m_menu;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hand m_hand;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x10B7538", Offset = "0x10B7538", VA = "0x10B7538", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x10B757C", Offset = "0x10B757C", VA = "0x10B757C")]
	public ToggleWheelMenuOpenTrigger()
	{
	}
}
[Token(Token = "0x20002B2")]
public class ToggleWheelMenuOpener : MonoBehaviour
{
	[Token(Token = "0x20002B3")]
	private enum SuperBool
	{
		[Token(Token = "0x4000EA7")]
		Undefined = -1,
		[Token(Token = "0x4000EA8")]
		False,
		[Token(Token = "0x4000EA9")]
		True
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F88", Offset = "0x8D5F88")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleWheelMenuOpener <>4__this;

		[Token(Token = "0x170001C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xEB262C", Offset = "0xEB262C", VA = "0xEB262C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xEB2674", Offset = "0xEB2674", VA = "0xEB2674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xEB2460", Offset = "0xEB2460", VA = "0xEB2460")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xEB248C", Offset = "0xEB248C", VA = "0xEB248C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xEB2490", Offset = "0xEB2490", VA = "0xEB2490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xEB2634", Offset = "0xEB2634", VA = "0xEB2634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DEED0", Offset = "0x8DEED0")]
	private NVRHand m_hand;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_canTriggerWhilstInteracting;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_triggerAt;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_requireClickOnVive;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DEF30", Offset = "0x8DEF30")]
	public float m_triggerAtOnViveClick;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SuperBool m_requireClick;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_axisWas;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ToggleWheelMenu m_upMenu;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ToggleWheelMenu m_downMenu;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_initialised;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x10B758C", Offset = "0x10B758C", VA = "0x10B758C")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x10B7594", Offset = "0x10B7594", VA = "0x10B7594")]
	public NVRHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x10B759C", Offset = "0x10B759C", VA = "0x10B759C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDD40", Offset = "0x8EDD40")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x10B7614", Offset = "0x10B7614", VA = "0x10B7614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x10B78B8", Offset = "0x10B78B8", VA = "0x10B78B8")]
	public void UpPressed()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x10B798C", Offset = "0x10B798C", VA = "0x10B798C")]
	public void DownPressed()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x10B7A60", Offset = "0x10B7A60", VA = "0x10B7A60")]
	public ToggleWheelMenuOpener()
	{
	}
}
[Token(Token = "0x20002B5")]
public class InfoMenuFolk : TouchInfoMenu
{
	[Serializable]
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F98", Offset = "0x8D5F98")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UIToggleIconWithHighlight> <>9__39_0;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UIToggleIconWithHighlight> <>9__39_1;

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE85098", Offset = "0xE85098", VA = "0xE85098")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE850A0", Offset = "0xE850A0", VA = "0xE850A0")]
		internal void <ScrollToGoal>b__39_0(UIToggleIconWithHighlight x)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE850C0", Offset = "0xE850C0", VA = "0xE850C0")]
		internal void <ScrollToGoal>b__39_1(UIToggleIconWithHighlight x)
		{
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5FA8", Offset = "0x8D5FA8")]
	private sealed class <GoalScroll>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfoMenuFolk <>4__this;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetx;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <start>5__2;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <end>5__3;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__4;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xE852A0", Offset = "0xE852A0", VA = "0xE852A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xE852E8", Offset = "0xE852E8", VA = "0xE852E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE850E0", Offset = "0xE850E0", VA = "0xE850E0")]
		[DebuggerHidden]
		public <GoalScroll>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE8510C", Offset = "0xE8510C", VA = "0xE8510C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE85110", Offset = "0xE85110", VA = "0xE85110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE852A8", Offset = "0xE852A8", VA = "0xE852A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] m_panelRoots;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text[] m_nameLabels;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer[] m_interestIcon;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text[] m_jobLabels;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text[] m_abilityLabel;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_goalIconContainer;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_goalIconPrefab;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_dailyGoalIconPrefab;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<UIToggleIconWithHighlight> m_goalIcons;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<UIToggleIconWithHighlight> m_dailyGoalIcons;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_goalContainer;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_goalPrefab;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_dailyGoalPrefab;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<UIFolkGoalSmall> m_goals;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<UIFolkGoalSmall> m_dailyGoals;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_selectedGoal;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int m_goalCount;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_dailyGoalCount;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine m_scrollCR;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_scrollDur;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEF68", Offset = "0x8DEF68")]
	public SpriteRenderer m_visitedFood;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer m_visitedEntertainment;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SpriteRenderer m_visitedHealth;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ProgressBar_Sprites m_sleepBar;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TMP_Text m_sleepBarLabel;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Person m_currentPerson;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_goalIconSpacing;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_goalDetailSpacing;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xFC3138", Offset = "0xFC3138", VA = "0xFC3138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xFC32E0", Offset = "0xFC32E0", VA = "0xFC32E0", Slot = "4")]
	public override bool IsValidFor(NVRInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xFC3378", Offset = "0xFC3378", VA = "0xFC3378", Slot = "5")]
	public override void StartInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xFC34F4", Offset = "0xFC34F4", VA = "0xFC34F4", Slot = "6")]
	public override Transform GetAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xFC3510", Offset = "0xFC3510", VA = "0xFC3510")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EDDF0", Offset = "0x8EDDF0")]
	private void SetPerson()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xFC34CC", Offset = "0xFC34CC", VA = "0xFC34CC")]
	private void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xFC3538", Offset = "0xFC3538", VA = "0xFC3538")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xFC41CC", Offset = "0xFC41CC", VA = "0xFC41CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xFC4404", Offset = "0xFC4404", VA = "0xFC4404")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EDE08", Offset = "0x8EDE08")]
	public void ScrollGoalsLeft()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xFC4784", Offset = "0xFC4784", VA = "0xFC4784")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EDE20", Offset = "0x8EDE20")]
	public void ScrollGoalsRight()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xFC4790", Offset = "0xFC4790", VA = "0xFC4790")]
	public void ScrollToGoal(Transform c)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xFC4410", Offset = "0xFC4410", VA = "0xFC4410")]
	public void ScrollToGoal(int id)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xFC47C8", Offset = "0xFC47C8", VA = "0xFC47C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDE38", Offset = "0x8EDE38")]
	private IEnumerator GoalScroll(float targetx)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xFC4850", Offset = "0xFC4850", VA = "0xFC4850")]
	public InfoMenuFolk()
	{
	}
}
[Token(Token = "0x20002B8")]
public abstract class TouchInfoMenu : MonoBehaviour
{
	[Token(Token = "0x6000ECD")]
	public abstract bool IsValidFor(NVRInteractable interactable);

	[Token(Token = "0x6000ECE")]
	public abstract void StartInteraction(NVRInteractable interactable);

	[Token(Token = "0x6000ECF")]
	public abstract Transform GetAttachPoint();

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x10B910C", Offset = "0x10B910C", VA = "0x10B910C")]
	protected TouchInfoMenu()
	{
	}
}
[Token(Token = "0x20002B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D5FB8", Offset = "0x8D5FB8")]
public class TouchInfoMenuList : ScriptableObject
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TouchInfoMenu[] InfoMenus;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<TouchInfoMenu, TouchInfoMenu> menuCache;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x10B9114", Offset = "0x10B9114", VA = "0x10B9114")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x10B92F0", Offset = "0x10B92F0", VA = "0x10B92F0")]
	public TouchInfoMenu GetInfoMenuFor(NVRInteractable interactable)
	{
		return null;
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x10B9480", Offset = "0x10B9480", VA = "0x10B9480")]
	public bool HasMenuFor(NVRInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x10B9510", Offset = "0x10B9510", VA = "0x10B9510")]
	public TouchInfoMenuList()
	{
	}
}
[Token(Token = "0x20002BA")]
public class UIButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button Button;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_rh;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_lh;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpacefolkHand m_lhAnim;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpacefolkHand m_rhAnim;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider HoverArea;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxCollider TouchArea;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ms_minDistance;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UIButton ms_closestButton;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpacefolkHand m_closestHand;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_pointAt;

	[Token(Token = "0x4000EE1")]
	private const float k_nearishDistance = 5f;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float k_buttonCooldown;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_pressedAt;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_enabledAt;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool pressed;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool hovering;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AK.Wwise.Event HoverSFX;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AK.Wwise.Event ClickSFX;

	[Token(Token = "0x170001C5")]
	public Vector3 PointAt
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE8CDC8", Offset = "0xE8CDC8", VA = "0xE8CDC8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnClick
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE8CDD4", Offset = "0xE8CDD4", VA = "0xE8CDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDEE8", Offset = "0x8EDEE8")]
		add
		{
		}
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE8CE74", Offset = "0xE8CE74", VA = "0xE8CE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDEF8", Offset = "0x8EDEF8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xE8CF14", Offset = "0xE8CF14", VA = "0xE8CF14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xE8CF3C", Offset = "0xE8CF3C", VA = "0xE8CF3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xE8D564", Offset = "0xE8D564", VA = "0xE8D564")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xE8D314", Offset = "0xE8D314", VA = "0xE8D314")]
	private void InteractWith(Vector3 interactPos, SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xE8D754", Offset = "0xE8D754", VA = "0xE8D754")]
	private void Hover()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xE8D7D4", Offset = "0xE8D7D4", VA = "0xE8D7D4")]
	private void UnHover()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xE8D808", Offset = "0xE8D808", VA = "0xE8D808")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xE8D674", Offset = "0xE8D674", VA = "0xE8D674")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EDF08", Offset = "0x8EDF08")]
	public void Pressed()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xE8D804", Offset = "0xE8D804", VA = "0xE8D804", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xE8D79C", Offset = "0xE8D79C", VA = "0xE8D79C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xE8D98C", Offset = "0xE8D98C", VA = "0xE8D98C", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xE8D9E4", Offset = "0xE8D9E4", VA = "0xE8D9E4")]
	public UIButton()
	{
	}
}
[Token(Token = "0x20002BB")]
public class UIButtonSlider : MonoBehaviour
{
	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button Up;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Down;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Track;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float value;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Increment;

	[Token(Token = "0x14000013")]
	public event Action<float> ValueChanged
	{
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE8DA48", Offset = "0xE8DA48", VA = "0xE8DA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDF20", Offset = "0x8EDF20")]
		add
		{
		}
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE8DAE8", Offset = "0xE8DAE8", VA = "0xE8DAE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EDF30", Offset = "0x8EDF30")]
		remove
		{
		}
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xE8DB88", Offset = "0xE8DB88", VA = "0xE8DB88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xE8DC74", Offset = "0xE8DC74", VA = "0xE8DC74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xE8DC98", Offset = "0xE8DC98", VA = "0xE8DC98")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xE8DCA0", Offset = "0xE8DCA0", VA = "0xE8DCA0")]
	private void OnUpClick()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xE8DD18", Offset = "0xE8DD18", VA = "0xE8DD18")]
	private void OnDownClick()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xE8DD90", Offset = "0xE8DD90", VA = "0xE8DD90")]
	public UIButtonSlider()
	{
	}
}
[Token(Token = "0x20002BC")]
public class UICityBasicInfo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002BD")]
	public class MoodPair
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DEFF8", Offset = "0x8DEFF8")]
		public float m_val;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite m_icon;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xEB6150", Offset = "0xEB6150", VA = "0xEB6150")]
		public MoodPair(float c, Sprite e)
		{
		}
	}

	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5FFC", Offset = "0x8D5FFC")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float hp;

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xEB6124", Offset = "0xEB6124", VA = "0xEB6124")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xEB612C", Offset = "0xEB612C", VA = "0xEB612C")]
		internal bool <NormalisedHappinessAsMoodIcon>b__0(MoodPair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] m_moodIcon;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_hpLabel;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_populationLabel;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_populationLabelDetail;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DEFC0", Offset = "0x8DEFC0")]
	public List<MoodPair> m_moods;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> m_popDetails;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xE8DDA4", Offset = "0xE8DDA4", VA = "0xE8DDA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xE8E100", Offset = "0xE8E100", VA = "0xE8E100")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xE8E0D4", Offset = "0xE8E0D4", VA = "0xE8E0D4")]
	private void UpdateAll()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xE8E7E4", Offset = "0xE8E7E4", VA = "0xE8E7E4")]
	public Sprite NormalisedHappinessAsMoodIcon(float hp)
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xE8E920", Offset = "0xE8E920", VA = "0xE8E920")]
	public Sprite CurrentHappinessAsMoodIcon()
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xE8E3C4", Offset = "0xE8E3C4", VA = "0xE8E3C4")]
	private void UpdateHappinessCounter()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xE8E620", Offset = "0xE8E620", VA = "0xE8E620")]
	private void UpdateFolkCounter()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xE8E724", Offset = "0xE8E724", VA = "0xE8E724")]
	private void UpdateInterestsCounter(Interest interest)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xE8E9CC", Offset = "0xE8E9CC", VA = "0xE8E9CC")]
	private string GetPopDetail(List<Interest> unlockedInterests)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xE8EB8C", Offset = "0xE8EB8C", VA = "0xE8EB8C")]
	public UICityBasicInfo()
	{
	}
}
[Token(Token = "0x20002BF")]
public class UICityNeedRow : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_titleBG;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_icon;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_title;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_content;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xE8EC10", Offset = "0xE8EC10", VA = "0xE8EC10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xE8EC14", Offset = "0xE8EC14", VA = "0xE8EC14")]
	public UICityNeedRow()
	{
	}
}
[Token(Token = "0x20002C0")]
public class UICityNeed_Facility : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FacilityCategory m_category;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] m_titleText;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] m_categoryNameKeys;

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xE8EC1C", Offset = "0xE8EC1C", VA = "0xE8EC1C", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xE8F084", Offset = "0xE8F084", VA = "0xE8F084")]
	public void Init(FacilityCategory category)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xE8F2E8", Offset = "0xE8F2E8", VA = "0xE8F2E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xE8EC20", Offset = "0xE8EC20", VA = "0xE8EC20")]
	private void Refresh(object x)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xE8F56C", Offset = "0xE8F56C", VA = "0xE8F56C")]
	public UICityNeed_Facility()
	{
	}
}
[Token(Token = "0x20002C1")]
public class UICityNeed_FolkFinder : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FolkFinder m_folkFinder;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EstateAgent m_estateAgent;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xE8F7FC", Offset = "0xE8F7FC", VA = "0xE8F7FC", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xE8FCE4", Offset = "0xE8FCE4", VA = "0xE8FCE4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xE8FEF4", Offset = "0xE8FEF4", VA = "0xE8FEF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xE8F800", Offset = "0xE8F800", VA = "0xE8F800")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xE90060", Offset = "0xE90060", VA = "0xE90060")]
	public UICityNeed_FolkFinder()
	{
	}
}
[Token(Token = "0x20002C2")]
public class UICityNeed_Houses : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xE90068", Offset = "0xE90068", VA = "0xE90068", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xE90248", Offset = "0xE90248", VA = "0xE90248")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xE904A4", Offset = "0xE904A4", VA = "0xE904A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xE9006C", Offset = "0xE9006C", VA = "0xE9006C")]
	private void Refresh(object x)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xE90724", Offset = "0xE90724", VA = "0xE90724")]
	public UICityNeed_Houses()
	{
	}
}
[Token(Token = "0x20002C3")]
public class UICityNeed_RocketBoosters : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D600C", Offset = "0x8D600C")]
	private sealed class <InitCR>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICityNeed_RocketBoosters <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xEB656C", Offset = "0xEB656C", VA = "0xEB656C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xEB65B4", Offset = "0xEB65B4", VA = "0xEB65B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xEB6258", Offset = "0xEB6258", VA = "0xEB6258")]
		[DebuggerHidden]
		public <InitCR>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xEB6284", Offset = "0xEB6284", VA = "0xEB6284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xEB6288", Offset = "0xEB6288", VA = "0xEB6288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xEB6574", Offset = "0xEB6574", VA = "0xEB6574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D601C", Offset = "0x8D601C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Interest> <>9__6_0;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xEB61F8", Offset = "0xEB61F8", VA = "0xEB61F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xEB6200", Offset = "0xEB6200", VA = "0xEB6200")]
		internal int <Refresh>b__6_0(Interest a, Interest b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Objective_BuildRocketBoosters m_objBuildBoosters;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xE9072C", Offset = "0xE9072C", VA = "0xE9072C", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xE91128", Offset = "0xE91128", VA = "0xE91128")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xE91154", Offset = "0xE91154", VA = "0xE91154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDF40", Offset = "0x8EDF40")]
	private IEnumerator InitCR()
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xE911CC", Offset = "0xE911CC", VA = "0xE911CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xE90730", Offset = "0xE90730", VA = "0xE90730")]
	private void Refresh(UnityEngine.Object x)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xE913CC", Offset = "0xE913CC", VA = "0xE913CC")]
	public UICityNeed_RocketBoosters()
	{
	}
}
[Token(Token = "0x20002C6")]
public class UICityNeed_SolarFlare : MonoBehaviour, IUICityNeed
{
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D602C", Offset = "0x8D602C")]
	private sealed class <UpdateCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UICityNeed_SolarFlare <>4__this;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nextUpdateT>5__2;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xEB66A8", Offset = "0xEB66A8", VA = "0xEB66A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xEB66F0", Offset = "0xEB66F0", VA = "0xEB66F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xEB65BC", Offset = "0xEB65BC", VA = "0xEB65BC")]
		[DebuggerHidden]
		public <UpdateCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xEB65E8", Offset = "0xEB65E8", VA = "0xEB65E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xEB65EC", Offset = "0xEB65EC", VA = "0xEB65EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xEB66B0", Offset = "0xEB66B0", VA = "0xEB66B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UICityNeedRow m_row;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine m_runningCR;

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xE913D4", Offset = "0xE913D4", VA = "0xE913D4", Slot = "4")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xE91880", Offset = "0xE91880", VA = "0xE91880")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xE919D0", Offset = "0xE919D0", VA = "0xE919D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xE91958", Offset = "0xE91958", VA = "0xE91958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EDFF0", Offset = "0x8EDFF0")]
	private IEnumerator UpdateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xE913D8", Offset = "0xE913D8", VA = "0xE913D8")]
	private float Refresh()
	{
		return default(float);
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xE91BD8", Offset = "0xE91BD8", VA = "0xE91BD8")]
	public UICityNeed_SolarFlare()
	{
	}
}
[Token(Token = "0x20002C8")]
public interface IUICityNeed
{
	[Token(Token = "0x6000F26")]
	void RefreshNow();
}
[Token(Token = "0x20002C9")]
public class UICityNeeds : MonoBehaviour
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HorizontalOrVerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_standardRowPrefab;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_solarFlareRowPrefab;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UICityNeedRow> m_rows;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite m_iconFolkGeneric;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite m_iconBus;

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xE91BE0", Offset = "0xE91BE0", VA = "0xE91BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xE91E3C", Offset = "0xE91E3C", VA = "0xE91E3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xE91BE4", Offset = "0xE91BE4", VA = "0xE91BE4")]
	private void RebuildList()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xE91F74", Offset = "0xE91F74", VA = "0xE91F74")]
	private GameObject AddRow(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xE920E8", Offset = "0xE920E8", VA = "0xE920E8")]
	public UICityNeeds()
	{
	}
}
[Token(Token = "0x20002CA")]
public class UIFolkGoalSmall : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_iconComplete;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_iconNotComplete;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xE9216C", Offset = "0xE9216C", VA = "0xE9216C")]
	public void SetContent(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xE92250", Offset = "0xE92250", VA = "0xE92250")]
	public UIFolkGoalSmall()
	{
	}
}
[Token(Token = "0x20002CB")]
public class UIFolkInfoFullDetailsPanel : MonoBehaviour
{
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xE92258", Offset = "0xE92258", VA = "0xE92258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xE9225C", Offset = "0xE9225C", VA = "0xE9225C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xE92260", Offset = "0xE92260", VA = "0xE92260")]
	public UIFolkInfoFullDetailsPanel()
	{
	}
}
[Token(Token = "0x20002CC")]
public class UIHappinessGoalRow : MonoBehaviour
{
	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_bg;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_icon;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_content;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_completedEmoji;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_notCompletedEmoji;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_completedIconColour;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color m_notCompletedIconColour;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color m_completedTextColour;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color m_notCompletedTextColour;

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xE92268", Offset = "0xE92268", VA = "0xE92268")]
	public void SetConent(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xE923EC", Offset = "0xE923EC", VA = "0xE923EC")]
	public UIHappinessGoalRow()
	{
	}
}
[Token(Token = "0x20002CD")]
public class UIHoverDummy : MonoBehaviour, ISfHandHoverResponder
{
	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_focalPoint;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AK.Wwise.Event m_hoveringSFX;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_hoveringFrame;

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xE925D0", Offset = "0xE925D0", VA = "0xE925D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xE92678", Offset = "0xE92678", VA = "0xE92678", Slot = "4")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xE9267C", Offset = "0xE9267C", VA = "0xE9267C", Slot = "6")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xE92680", Offset = "0xE92680", VA = "0xE92680", Slot = "5")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xE926E8", Offset = "0xE926E8", VA = "0xE926E8")]
	public UIHoverDummy()
	{
	}
}
[Token(Token = "0x20002CE")]
public class UIMenuInterestIcon : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_icon;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_iconNotSet;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xE926F0", Offset = "0xE926F0", VA = "0xE926F0")]
	public void SetIcon(Sprite newSprite, Color col)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xE92980", Offset = "0xE92980", VA = "0xE92980")]
	public UIMenuInterestIcon()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xE92988", Offset = "0xE92988", VA = "0xE92988")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE0A0", Offset = "0x8EE0A0")]
	private void <SetIcon>b__2_0()
	{
	}
}
[Token(Token = "0x20002CF")]
public class UIObjectiveList : MonoBehaviour
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_cityName;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HorizontalOrVerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_rowPrefab;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UIObjectiveRow> m_rows;

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xE929B8", Offset = "0xE929B8", VA = "0xE929B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xE92A30", Offset = "0xE92A30", VA = "0xE92A30")]
	private void RebuildList()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xE92F34", Offset = "0xE92F34", VA = "0xE92F34")]
	public UIObjectiveList()
	{
	}
}
[Token(Token = "0x20002D0")]
public class UIObjectiveRow : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Objective m_objective;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_incompleteIcon;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_completeIcon;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_text;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_inactiveAlpha;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xE92FB8", Offset = "0xE92FB8", VA = "0xE92FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xE92E4C", Offset = "0xE92E4C", VA = "0xE92E4C")]
	public void SetObjective(Objective obj)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xE92FC0", Offset = "0xE92FC0", VA = "0xE92FC0")]
	private void Refresh(Objective obj)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xE9312C", Offset = "0xE9312C", VA = "0xE9312C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xE931BC", Offset = "0xE931BC", VA = "0xE931BC")]
	public UIObjectiveRow()
	{
	}
}
[Token(Token = "0x20002D1")]
public class UIPersonDetailPanel : MonoBehaviour
{
	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_happinessGoalTitle;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_dailyHappinesspGoalTitle;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_nameLabel;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_oddRowColour;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_evenRowColour;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UIHappinessGoalRow> m_happinesGoalRows;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<UIHappinessGoalRow> m_dailyHappinesGoalRows;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_isInitialised;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xE931CC", Offset = "0xE931CC", VA = "0xE931CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xE931D0", Offset = "0xE931D0", VA = "0xE931D0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xE93460", Offset = "0xE93460", VA = "0xE93460")]
	public void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xE93BF8", Offset = "0xE93BF8", VA = "0xE93BF8")]
	public UIPersonDetailPanel()
	{
	}
}
[Token(Token = "0x20002D2")]
public class UIPersonInfoRow : StaticMapped<UIPersonInfoRow>, ISfHandHoverResponder
{
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D603C", Offset = "0x8D603C")]
	private sealed class <GrabbedCR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPersonInfoRow <>4__this;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand <hand>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0xEB6924", Offset = "0xEB6924", VA = "0xEB6924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0xEB696C", Offset = "0xEB696C", VA = "0xEB696C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xEB66F8", Offset = "0xEB66F8", VA = "0xEB66F8")]
		[DebuggerHidden]
		public <GrabbedCR>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xEB6724", Offset = "0xEB6724", VA = "0xEB6724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xEB6728", Offset = "0xEB6728", VA = "0xEB6728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xEB692C", Offset = "0xEB692C", VA = "0xEB692C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_name;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_interest;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_hp;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_homelessIcon;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_dontHaveThingAlpha;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Person m_person;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIPersonDetailPanel m_detailPanel;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FolkPin m_pin;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_pinShownIndicator;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xE93C8C", Offset = "0xE93C8C", VA = "0xE93C8C")]
	public void SetPerson(Person p)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xE93E88", Offset = "0xE93E88", VA = "0xE93E88")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xE93FD0", Offset = "0xE93FD0", VA = "0xE93FD0")]
	private void OnAnyHappinessGoalChanged(HappinessGoal hg)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xE93FD4", Offset = "0xE93FD4", VA = "0xE93FD4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xE940C8", Offset = "0xE940C8", VA = "0xE940C8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE0B0", Offset = "0x8EE0B0")]
	public void BeginHovering()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xE940CC", Offset = "0xE940CC", VA = "0xE940CC", Slot = "7")]
	public void BeginHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xE9439C", Offset = "0xE9439C", VA = "0xE9439C", Slot = "8")]
	public void OnHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xE94028", Offset = "0xE94028", VA = "0xE94028", Slot = "9")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE0C8", Offset = "0x8EE0C8")]
	public void EndHovering(SpacefolkHand hand)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xE943A0", Offset = "0xE943A0", VA = "0xE943A0")]
	public void Grabbed()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xE943CC", Offset = "0xE943CC", VA = "0xE943CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE0E0", Offset = "0x8EE0E0")]
	private IEnumerator GrabbedCR()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xE94444", Offset = "0xE94444", VA = "0xE94444")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE94448", Offset = "0xE94448", VA = "0xE94448")]
	public UIPersonInfoRow()
	{
	}
}
[Token(Token = "0x20002D4")]
public class UIPersonListPanel : MonoBehaviour
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_titleText;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_maxRows;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_firstEntry;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_overviewPrefab;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<UIPersonInfoRow> m_rows;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_layoutGroupTransform;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_UIPersonListPanelPrefab;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xE944CC", Offset = "0xE944CC", VA = "0xE944CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xE94C98", Offset = "0xE94C98", VA = "0xE94C98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xE94F50", Offset = "0xE94F50", VA = "0xE94F50")]
	private void NewPersonArrives(Person p)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xE944DC", Offset = "0xE944DC", VA = "0xE944DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE190", Offset = "0x8EE190")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xE95070", Offset = "0xE95070", VA = "0xE95070")]
	public UIPersonListPanel()
	{
	}
}
[Token(Token = "0x20002D5")]
public class UISetPosZero : MonoBehaviour
{
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xE98004", Offset = "0xE98004", VA = "0xE98004")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xE98070", Offset = "0xE98070", VA = "0xE98070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xE98074", Offset = "0xE98074", VA = "0xE98074")]
	public UISetPosZero()
	{
	}
}
[Token(Token = "0x20002D6")]
public class UIToggleIconWithHighlight : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_iconOn;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_iconOff;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_highlight;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xE9807C", Offset = "0xE9807C", VA = "0xE9807C")]
	public void SetToggle(bool on)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xE980C8", Offset = "0xE980C8", VA = "0xE980C8")]
	public void SetHighlight(bool on)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xE980E8", Offset = "0xE980E8", VA = "0xE980E8")]
	public UIToggleIconWithHighlight()
	{
	}
}
[Token(Token = "0x20002D7")]
public class UITouchInfoMenu : MonoBehaviour
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_root;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRHand m_hand;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TransformMatcher m_transformMatcher;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TouchInfoMenuList TouchMenus;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TouchInfoMenu currentMenu;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_cacheCleared;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xE981F4", Offset = "0xE981F4", VA = "0xE981F4")]
	public static void SceneLoaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xE982E4", Offset = "0xE982E4", VA = "0xE982E4")]
	private void OnBeginInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xE985F4", Offset = "0xE985F4", VA = "0xE985F4")]
	private void OnEndInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xE9869C", Offset = "0xE9869C", VA = "0xE9869C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE989A0", Offset = "0xE989A0", VA = "0xE989A0")]
	private void OnEndHovering(NVRInteractable arg0)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE989A4", Offset = "0xE989A4", VA = "0xE989A4")]
	private void OnBeginHovering(NVRInteractable arg0)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xE989A8", Offset = "0xE989A8", VA = "0xE989A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xE98A5C", Offset = "0xE98A5C", VA = "0xE98A5C")]
	public UITouchInfoMenu()
	{
	}
}
[Token(Token = "0x20002D8")]
public class UI_Btn_SetLanguage : MonoBehaviour
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageCode m_langCode;

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xE98A68", Offset = "0xE98A68", VA = "0xE98A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xE98B20", Offset = "0xE98B20", VA = "0xE98B20")]
	private void OnPressed()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xE98BC4", Offset = "0xE98BC4", VA = "0xE98BC4")]
	public UI_Btn_SetLanguage()
	{
	}
}
[Token(Token = "0x20002D9")]
public class UI_HackyFolkGoalSelector : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InfoMenuFolk m_menu;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int id;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xE98BCC", Offset = "0xE98BCC", VA = "0xE98BCC")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xE98BF0", Offset = "0xE98BF0", VA = "0xE98BF0")]
	public UI_HackyFolkGoalSelector()
	{
	}
}
[Token(Token = "0x20002DA")]
[ExecuteInEditMode]
public class UIHeightMatcher : MonoBehaviour
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform m_source;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform m_me;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xE92530", Offset = "0xE92530", VA = "0xE92530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xE925C8", Offset = "0xE925C8", VA = "0xE925C8")]
	public UIHeightMatcher()
	{
	}
}
[Token(Token = "0x20002DB")]
public class UIScrollIndicator : StaticMapped<UIScrollIndicator>
{
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xE97F8C", Offset = "0xE97F8C", VA = "0xE97F8C")]
	public UIScrollIndicator()
	{
	}
}
[Token(Token = "0x20002DC")]
public class UIToolTip : StaticMapped<UIToolTip>
{
	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image m_bg;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color m_defaultColour;

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xE980F0", Offset = "0xE980F0", VA = "0xE980F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xE98148", Offset = "0xE98148", VA = "0xE98148")]
	public void OverrideColour(bool shouldOVerride, Color c)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xE9817C", Offset = "0xE9817C", VA = "0xE9817C")]
	public UIToolTip()
	{
	}
}
[Token(Token = "0x20002DD")]
public class UVScroll : MonoBehaviour
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 speed;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xE98BF8", Offset = "0xE98BF8", VA = "0xE98BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xE98C54", Offset = "0xE98C54", VA = "0xE98C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xE98CE0", Offset = "0xE98CE0", VA = "0xE98CE0")]
	public UVScroll()
	{
	}
}
[Token(Token = "0x20002DE")]
public class UnityEventOnEnableDisable : MonoBehaviour
{
	[Token(Token = "0x20002DF")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xEB9464", Offset = "0xEB9464", VA = "0xEB9464")]
		public GameObjectEvent()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectEvent OnEnabled;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObjectEvent OnDisabled;

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xE9A8EC", Offset = "0xE9A8EC", VA = "0xE9A8EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xE9A954", Offset = "0xE9A954", VA = "0xE9A954")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xE9A9BC", Offset = "0xE9A9BC", VA = "0xE9A9BC")]
	public UnityEventOnEnableDisable()
	{
	}
}
[Token(Token = "0x20002E0")]
public class UnityLifecycleEvents : MonoBehaviour
{
	[Token(Token = "0x14000014")]
	public event Action<GameObject> OnEnabled
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xE9F6CC", Offset = "0xE9F6CC", VA = "0xE9F6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1A8", Offset = "0x8EE1A8")]
		add
		{
		}
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xE9F76C", Offset = "0xE9F76C", VA = "0xE9F76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1B8", Offset = "0x8EE1B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<GameObject> OnDisabled
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xE9F80C", Offset = "0xE9F80C", VA = "0xE9F80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1C8", Offset = "0x8EE1C8")]
		add
		{
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xE9F8AC", Offset = "0xE9F8AC", VA = "0xE9F8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1D8", Offset = "0x8EE1D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<GameObject> OnAwoke
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xE9F94C", Offset = "0xE9F94C", VA = "0xE9F94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1E8", Offset = "0x8EE1E8")]
		add
		{
		}
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xE9F9EC", Offset = "0xE9F9EC", VA = "0xE9F9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE1F8", Offset = "0x8EE1F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<GameObject> OnStarted
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xE9FA8C", Offset = "0xE9FA8C", VA = "0xE9FA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE208", Offset = "0x8EE208")]
		add
		{
		}
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xE9FB2C", Offset = "0xE9FB2C", VA = "0xE9FB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE218", Offset = "0x8EE218")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<GameObject> OnDestroyed
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xE9FBCC", Offset = "0xE9FBCC", VA = "0xE9FBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE228", Offset = "0x8EE228")]
		add
		{
		}
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xE9FC6C", Offset = "0xE9FC6C", VA = "0xE9FC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE238", Offset = "0x8EE238")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xE9FD0C", Offset = "0xE9FD0C", VA = "0xE9FD0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xE9FD7C", Offset = "0xE9FD7C", VA = "0xE9FD7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xE9FDEC", Offset = "0xE9FDEC", VA = "0xE9FDEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xE9FE5C", Offset = "0xE9FE5C", VA = "0xE9FE5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xE9FECC", Offset = "0xE9FECC", VA = "0xE9FECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xE9FF3C", Offset = "0xE9FF3C", VA = "0xE9FF3C")]
	public UnityLifecycleEvents()
	{
	}
}
[Token(Token = "0x20002E1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D605C", Offset = "0x8D605C")]
public class UnityObjectList : ScriptableObject
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityObjectWithValueList m_list;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xE9FFB8", Offset = "0xE9FFB8", VA = "0xE9FFB8")]
	public UnityEngine.Object Random([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xEA0000", Offset = "0xEA0000", VA = "0xEA0000")]
	public UnityObjectWithValue RandomObjVal([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xEA0298", Offset = "0xEA0298", VA = "0xEA0298")]
	public void CloneFrom(UnityObjectList source)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xEA0584", Offset = "0xEA0584", VA = "0xEA0584")]
	public UnityObjectList()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E2")]
public class UnityObjectWithValue
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEngine.Object m_obj;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_value;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_valueNorm;

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xEA058C", Offset = "0xEA058C", VA = "0xEA058C")]
	public UnityObjectWithValue()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E3")]
public class UnityObjectWithValueList
{
	[Serializable]
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D606C", Offset = "0x8D606C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<UnityObjectWithValue> <>9__2_0;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xEB9564", Offset = "0xEB9564", VA = "0xEB9564")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xEB956C", Offset = "0xEB956C", VA = "0xEB956C")]
		internal int <RandomObjVal>b__2_0(UnityObjectWithValue a, UnityObjectWithValue b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<UnityObjectWithValue> m_objValList;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xE9FFE0", Offset = "0xE9FFE0", VA = "0xE9FFE0")]
	public UnityEngine.Object Random([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xEA0018", Offset = "0xEA0018", VA = "0xEA0018")]
	public UnityObjectWithValue RandomObjVal([Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xEA0594", Offset = "0xEA0594", VA = "0xEA0594")]
	public static void NormaliseValues(List<UnityObjectWithValue> plist)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xEA06B8", Offset = "0xEA06B8", VA = "0xEA06B8")]
	public void Add(GameObject[] list)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xEA07B4", Offset = "0xEA07B4", VA = "0xEA07B4")]
	public void Add(UnityObjectWithValue owv)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xEA0500", Offset = "0xEA0500", VA = "0xEA0500")]
	public UnityObjectWithValueList()
	{
	}
}
[Token(Token = "0x20002E5")]
public class UtilityAI
{
	[Token(Token = "0x20002E6")]
	public enum ExecutionState
	{
		[Token(Token = "0x4000F76")]
		Running,
		[Token(Token = "0x4000F77")]
		Finished
	}

	[Token(Token = "0x20002E7")]
	public delegate void voidDelegate();

	[Token(Token = "0x20002E8")]
	public delegate ExecutionState ActionDelegate();

	[Token(Token = "0x20002E9")]
	public delegate string stringDelegate();

	[Token(Token = "0x20002EA")]
	public delegate float ScorerDelegate(float min, float max);

	[Token(Token = "0x20002EB")]
	public struct Scorer
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScorerDelegate del;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float min;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float max;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xEB9954", Offset = "0xEB9954", VA = "0xEB9954")]
		public Scorer(ScorerDelegate d, float _min, float _max)
		{
		}
	}

	[Token(Token = "0x20002EC")]
	public class AIAction
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActionDelegate action;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public voidDelegate actionEnter;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public voidDelegate actionExit;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public stringDelegate getInfo;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Scorer> scorers;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xEB9650", Offset = "0xEB9650", VA = "0xEB9650")]
		public AIAction()
		{
		}
	}

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string emptystring;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AIAction> m_actions;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AIAction m_runningAction;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timer;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_debug;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool m_paused;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string debugStr;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x13F0D30", Offset = "0x13F0D30", VA = "0x13F0D30")]
	public static string EmptyString()
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x13F0D94", Offset = "0x13F0D94", VA = "0x13F0D94")]
	public AIAction GetRunningAction()
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x13F0D9C", Offset = "0x13F0D9C", VA = "0x13F0D9C")]
	public void Pause(bool p)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x13F0DA8", Offset = "0x13F0DA8", VA = "0x13F0DA8")]
	public UtilityAI()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x13F0E3C", Offset = "0x13F0E3C", VA = "0x13F0E3C")]
	public AIAction AddAction(string name, ActionDelegate action, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x13F1020", Offset = "0x13F1020", VA = "0x13F1020")]
	public AIAction AddAction(string name, ActionDelegate action, voidDelegate enter, voidDelegate exit, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x13F0EE8", Offset = "0x13F0EE8", VA = "0x13F0EE8")]
	public AIAction AddAction(string name, ActionDelegate action, voidDelegate enter, voidDelegate exit, stringDelegate getInfo, params Scorer[] scorers)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x13F10DC", Offset = "0x13F10DC", VA = "0x13F10DC")]
	public void Interrupt()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x13F1128", Offset = "0x13F1128", VA = "0x13F1128")]
	public void Update()
	{
	}
}
[Token(Token = "0x20002ED")]
public class JoesCoolBugReporter : MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D607C", Offset = "0x8D607C")]
	private sealed class <DoAndroidLogCat>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x170001CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xE8825C", Offset = "0xE8825C", VA = "0xE8825C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xE882A4", Offset = "0xE882A4", VA = "0xE882A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xE88144", Offset = "0xE88144", VA = "0xE88144")]
		[DebuggerHidden]
		public <DoAndroidLogCat>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xE88170", Offset = "0xE88170", VA = "0xE88170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xE88174", Offset = "0xE88174", VA = "0xE88174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xE88264", Offset = "0xE88264", VA = "0xE88264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D608C", Offset = "0x8D608C")]
	private sealed class <DoAndroidBugReport>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xE880F4", Offset = "0xE880F4", VA = "0xE880F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xE8813C", Offset = "0xE8813C", VA = "0xE8813C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xE87FE0", Offset = "0xE87FE0", VA = "0xE87FE0")]
		[DebuggerHidden]
		public <DoAndroidBugReport>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xE8800C", Offset = "0xE8800C", VA = "0xE8800C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xE88010", Offset = "0xE88010", VA = "0xE88010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xE880FC", Offset = "0xE880FC", VA = "0xE880FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D609C", Offset = "0x8D609C")]
	private sealed class <RunCommandAndSaveOutput>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JoesCoolBugReporter <>4__this;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string command;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string outputPath;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string arguments;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xE88744", Offset = "0xE88744", VA = "0xE88744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xE8878C", Offset = "0xE8878C", VA = "0xE8878C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xE882AC", Offset = "0xE882AC", VA = "0xE882AC")]
		[DebuggerHidden]
		public <RunCommandAndSaveOutput>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xE882D8", Offset = "0xE882D8", VA = "0xE882D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xE882DC", Offset = "0xE882DC", VA = "0xE882DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xE8874C", Offset = "0xE8874C", VA = "0xE8874C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StreamWriter fileWriter;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Process runningProc;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF080", Offset = "0x8DF080")]
	private bool <SaveInProgress>k__BackingField;

	[Token(Token = "0x170001CC")]
	public string LogPath
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x114CC18", Offset = "0x114CC18", VA = "0x114CC18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CD")]
	public string BugreportPath
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x114CCF4", Offset = "0x114CCF4", VA = "0x114CCF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CE")]
	public bool SaveInProgress
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x114CDD0", Offset = "0x114CDD0", VA = "0x114CDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE2D8", Offset = "0x8EE2D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x114CDD8", Offset = "0x114CDD8", VA = "0x114CDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EE2E8", Offset = "0x8EE2E8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x114C9C8", Offset = "0x114C9C8", VA = "0x114C9C8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EE248", Offset = "0x8EE248")]
	public void SaveBugreportBundle()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x114CAF0", Offset = "0x114CAF0", VA = "0x114CAF0")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EE290", Offset = "0x8EE290")]
	public void SaveLogOutput()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x114CBA0", Offset = "0x114CBA0", VA = "0x114CBA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE2F8", Offset = "0x8EE2F8")]
	private IEnumerator DoAndroidLogCat()
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x114CA78", Offset = "0x114CA78", VA = "0x114CA78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE358", Offset = "0x8EE358")]
	private IEnumerator DoAndroidBugReport()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x114CDE4", Offset = "0x114CDE4", VA = "0x114CDE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE3B8", Offset = "0x8EE3B8")]
	private IEnumerator RunCommandAndSaveOutput(string command, string outputPath, string arguments = "")
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x114CEA8", Offset = "0x114CEA8", VA = "0x114CEA8")]
	private void GotCommandOutput(object sender, DataReceivedEventArgs e)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x114CED8", Offset = "0x114CED8", VA = "0x114CED8")]
	public JoesCoolBugReporter()
	{
	}
}
[Token(Token = "0x20002F1")]
public class LODTweaker : MonoBehaviour
{
	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DF090", Offset = "0x8DF090")]
	private float LodBias;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8DF0D0", Offset = "0x8DF0D0")]
	private float MaxLod;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x115E99C", Offset = "0x115E99C", VA = "0x115E99C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x115E9D4", Offset = "0x115E9D4", VA = "0x115E9D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x115EA20", Offset = "0x115EA20", VA = "0x115EA20")]
	public LODTweaker()
	{
	}
}
[Token(Token = "0x20002F2")]
public static class Matrix4x4Extensions
{
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1608C54", Offset = "0x1608C54", VA = "0x1608C54")]
	public static Vector3 Position(this ref Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x1608C60", Offset = "0x1608C60", VA = "0x1608C60")]
	public static Quaternion Rotation(this ref Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1608C78", Offset = "0x1608C78", VA = "0x1608C78")]
	public static Vector3 Scale(this ref Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1608D40", Offset = "0x1608D40", VA = "0x1608D40")]
	public static void Decompose(this ref Matrix4x4 matrix, out Vector3 localPosition, out Quaternion localRotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1608DAC", Offset = "0x1608DAC", VA = "0x1608DAC")]
	public static void Apply(this ref Matrix4x4 matrix, Transform transform)
	{
	}
}
[Token(Token = "0x20002F3")]
public class ObjectCycler : MonoBehaviour
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Objects;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int o;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xEBE468", Offset = "0xEBE468", VA = "0xEBE468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xEBE4EC", Offset = "0xEBE4EC", VA = "0xEBE4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xEBE470", Offset = "0xEBE470", VA = "0xEBE470")]
	private void Activate(int _o)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xEBE5D4", Offset = "0xEBE5D4", VA = "0xEBE5D4")]
	public ObjectCycler()
	{
	}
}
[Token(Token = "0x20002F4")]
public class ObjectDuplicator : MonoBehaviour
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3Int Number;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Spacing;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Contents;

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xEBE5DC", Offset = "0xEBE5DC", VA = "0xEBE5DC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xEBE684", Offset = "0xEBE684", VA = "0xEBE684")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE558", Offset = "0x8EE558")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xEBE890", Offset = "0xEBE890", VA = "0xEBE890")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE570", Offset = "0x8EE570")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xEBECE0", Offset = "0xEBECE0", VA = "0xEBECE0")]
	public ObjectDuplicator()
	{
	}
}
[Token(Token = "0x20002F5")]
public static class RandomExtensions
{
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x12956EC", Offset = "0x12956EC", VA = "0x12956EC")]
	public static float NextFloat(this System.Random rand)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x1295714", Offset = "0x1295714", VA = "0x1295714")]
	public static float Range(this System.Random rand, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x1295768", Offset = "0x1295768", VA = "0x1295768")]
	public static double Range(this System.Random rand, double min, double max)
	{
		return default(double);
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x12957B8", Offset = "0x12957B8", VA = "0x12957B8")]
	public static int Range(this System.Random rand, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x12957D8", Offset = "0x12957D8", VA = "0x12957D8")]
	public static float value(this System.Random rand)
	{
		return default(float);
	}
}
[Token(Token = "0x20002F6")]
public class StaticMapped<T> : MonoBehaviour where T : UnityEngine.Component
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, T> AllActive;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, T> All;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnNewCreated;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnActivated;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnRemoved;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<T> OnDeactivated;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnChanged;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int m_id;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int s_id;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public T component;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isInitialised;

	[Token(Token = "0x6000FEB")]
	[AOTStubRequired]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EE5D8", Offset = "0x8EE5D8")]
	public static void ResetStaticListableStatics()
	{
	}

	[Token(Token = "0x6000FEC")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000FED")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FEE")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000FEF")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF0")]
	public static T At(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FF1")]
	public static T FindActive(Predicate<T> predicate)
	{
		return null;
	}

	[Token(Token = "0x6000FF2")]
	public static T ActiveAt(int index)
	{
		return null;
	}

	[Token(Token = "0x6000FF3")]
	public StaticMapped()
	{
	}
}
[Token(Token = "0x20002F7")]
public class VRControllerModels : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60CC", Offset = "0x8D60CC")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xEBA880", Offset = "0xEBA880", VA = "0xEBA880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xEBA8C8", Offset = "0xEBA8C8", VA = "0xEBA8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xEBA750", Offset = "0xEBA750", VA = "0xEBA750")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xEBA77C", Offset = "0xEBA77C", VA = "0xEBA77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xEBA780", Offset = "0xEBA780", VA = "0xEBA780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xEBA888", Offset = "0xEBA888", VA = "0xEBA888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60DC", Offset = "0x8D60DC")]
	private sealed class <GetControllers>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldBeOn;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xEBA700", Offset = "0xEBA700", VA = "0xEBA700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xEBA748", Offset = "0xEBA748", VA = "0xEBA748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xEBA170", Offset = "0xEBA170", VA = "0xEBA170")]
		[DebuggerHidden]
		public <GetControllers>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xEBA19C", Offset = "0xEBA19C", VA = "0xEBA19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xEBA1A0", Offset = "0xEBA1A0", VA = "0xEBA1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xEBA708", Offset = "0xEBA708", VA = "0xEBA708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60EC", Offset = "0x8D60EC")]
	private sealed class <TweenControllerVisibility>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float target;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerModels <>4__this;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <start>5__2;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__3;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xEBAC2C", Offset = "0xEBAC2C", VA = "0xEBAC2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xEBAC74", Offset = "0xEBAC74", VA = "0xEBAC74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xEBA8D0", Offset = "0xEBA8D0", VA = "0xEBA8D0")]
		[DebuggerHidden]
		public <TweenControllerVisibility>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xEBA8FC", Offset = "0xEBA8FC", VA = "0xEBA8FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xEBA900", Offset = "0xEBA900", VA = "0xEBA900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xEBAC34", Offset = "0xEBAC34", VA = "0xEBAC34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ControllersVisible;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_controllerMaterial;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_transitionDuration;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_runtimeControllerMat;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> m_controllerModelGOs;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> m_controllerModelRenderers;

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x13F266C", Offset = "0x13F266C", VA = "0x13F266C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE614", Offset = "0x8EE614")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x13F26E4", Offset = "0x13F26E4", VA = "0x13F26E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE674", Offset = "0x8EE674")]
	private IEnumerator GetControllers(bool shouldBeOn)
	{
		return null;
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x13F2770", Offset = "0x13F2770", VA = "0x13F2770")]
	public bool Toggle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x13F2844", Offset = "0x13F2844", VA = "0x13F2844")]
	public void SetVisible(bool shouldBeVisible, float duration = -1f, float delay = 0f)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x13F293C", Offset = "0x13F293C", VA = "0x13F293C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE6D4", Offset = "0x8EE6D4")]
	private IEnumerator TweenControllerVisibility(float target, float duration, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x13F29D8", Offset = "0x13F29D8", VA = "0x13F29D8")]
	public VRControllerModels()
	{
	}
}
[Token(Token = "0x20002FB")]
public class BusStop : MonoBehaviour
{
	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntRange m_numFolkToDropOff;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF130", Offset = "0x8DF130")]
	public int m_initialNoBusDropoffFolkCount;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_initialDropoffUniqueInterests;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF168", Offset = "0x8DF168")]
	public float m_firstDropoffAfterDays;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_firstDropoffFolkCount;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF1A0", Offset = "0x8DF1A0")]
	public float m_gameDaysBetween;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_spaceBus;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BezierSpline m_spline;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_busStop;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_busStopsFor;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float busStartHeight;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 busStartPos;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 busTarget;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_busSpeed;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_busPrelandDistance;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_busJingleDistance;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_busLandingJingle;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnWillArriveSoon;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PersonGenerator m_personGenerator;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_timeBetween;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_timer;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_dropoffCount;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF1D8", Offset = "0x8DF1D8")]
	public GameObject infoTut;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_droppingOffTimer;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool hasPlayedJingle;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool hasPrelanded;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool hasLanded;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	private bool hasTakenOff;

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x13C92EC", Offset = "0x13C92EC", VA = "0x13C92EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x13C9320", Offset = "0x13C9320", VA = "0x13C9320")]
	private void Start()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x13C9524", Offset = "0x13C9524", VA = "0x13C9524")]
	private void Update()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x13C9858", Offset = "0x13C9858", VA = "0x13C9858")]
	public void BusTakeOff()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x13C9864", Offset = "0x13C9864", VA = "0x13C9864")]
	public void BusDropFolk()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x13C9964", Offset = "0x13C9964", VA = "0x13C9964")]
	public BusStop()
	{
	}
}
[Token(Token = "0x20002FC")]
public class LightVolumeUtilities : MonoBehaviour
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60FC", Offset = "0x8D60FC")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material from;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x10562B8", Offset = "0x10562B8", VA = "0x10562B8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x10562C0", Offset = "0x10562C0", VA = "0x10562C0")]
		internal bool <SwapMats>b__0(MeshRenderer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_buildingDefaultMaterial;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumeLightingOnlyMaterial;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_SDFVisualiseMaterialR;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_SDFVisualiseMaterialG;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_SDFVisualiseMaterialB;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_SDFVisualiseMaterialA;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x1774D54", Offset = "0x1774D54", VA = "0x1774D54")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE824", Offset = "0x8EE824")]
	public void SetBuildingDefaultMaterials()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x1775170", Offset = "0x1775170", VA = "0x1775170")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE83C", Offset = "0x8EE83C")]
	public void SetVolumeLightingOnlyMaterial()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x17751BC", Offset = "0x17751BC", VA = "0x17751BC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE854", Offset = "0x8EE854")]
	public void SetSDFVisualiseMaterialsR()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x1775208", Offset = "0x1775208", VA = "0x1775208")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE86C", Offset = "0x8EE86C")]
	public void SetSDFVisualiseMaterialsG()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x1775254", Offset = "0x1775254", VA = "0x1775254")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE884", Offset = "0x8EE884")]
	public void SetSDFVisualiseMaterialsB()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x17752A0", Offset = "0x17752A0", VA = "0x17752A0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE89C", Offset = "0x8EE89C")]
	public void SetSDFVisualiseMaterialsA()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1774DA4", Offset = "0x1774DA4", VA = "0x1774DA4")]
	private void SwapMats(Material from, Material to)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x17752F0", Offset = "0x17752F0", VA = "0x17752F0")]
	public LightVolumeUtilities()
	{
	}
}
[Token(Token = "0x20002FE")]
public class RebakeOnSnap : MonoBehaviour
{
	[Token(Token = "0x20002FF")]
	public delegate bool NavMeshEnabledDelegate();

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_calculateLighting;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_calculateNavigation;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_calculateReachability;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavMeshEnabledDelegate m_navMeshEnabledDelegate;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshSourceTag[] m_navMeshSourceTags;

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x129838C", Offset = "0x129838C", VA = "0x129838C")]
	private void Start()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x12987A0", Offset = "0x12987A0", VA = "0x12987A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x129881C", Offset = "0x129881C", VA = "0x129881C")]
	private void Rebake_PointAndSnap(bool didSnap, bool validPlacement, RaycastHit hitinfo)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x1298820", Offset = "0x1298820", VA = "0x1298820")]
	private void Rebake()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x12987A4", Offset = "0x12987A4", VA = "0x12987A4")]
	private void Unbake()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x1298898", Offset = "0x1298898", VA = "0x1298898")]
	private void Bake()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x1298ADC", Offset = "0x1298ADC", VA = "0x1298ADC")]
	public RebakeOnSnap()
	{
	}
}
[Token(Token = "0x2000300")]
public class SDF : MonoBehaviour
{
	[Token(Token = "0x6001028")]
	[Address(RVA = "0x11A2720", Offset = "0x11A2720", VA = "0x11A2720")]
	public static float SDFMap(Vector3 worldPos, List<SDFShape> shapeList)
	{
		return default(float);
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x11A2D1C", Offset = "0x11A2D1C", VA = "0x11A2D1C")]
	public SDF()
	{
	}
}
[Token(Token = "0x2000301")]
public class SDFCommon
{
	[Token(Token = "0x600102A")]
	[Address(RVA = "0x11A2F10", Offset = "0x11A2F10", VA = "0x11A2F10")]
	public static float frac(float f)
	{
		return default(float);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x11A2F1C", Offset = "0x11A2F1C", VA = "0x11A2F1C")]
	public static Vector3 frac(Vector3 f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x11A2F38", Offset = "0x11A2F38", VA = "0x11A2F38")]
	public static Vector3 clamp(Vector3 v, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x11A2FBC", Offset = "0x11A2FBC", VA = "0x11A2FBC")]
	public static Vector3 sqrt(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x11A3030", Offset = "0x11A3030", VA = "0x11A3030")]
	public static float step(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x11A3044", Offset = "0x11A3044", VA = "0x11A3044")]
	public static float vmax(Vector3 v)
	{
		return default(float);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x11A3070", Offset = "0x11A3070", VA = "0x11A3070")]
	public static Vector4 opU(Vector4 d1, Vector4 d2)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x11A3088", Offset = "0x11A3088", VA = "0x11A3088")]
	public static Vector4 opU_PaperValley(Vector4 d1, Vector4 d2)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x11A30C0", Offset = "0x11A30C0", VA = "0x11A30C0")]
	public static float smin_exponential(float a, float b, float k = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x11A3120", Offset = "0x11A3120", VA = "0x11A3120")]
	public static float smin(float a, float b, float k)
	{
		return default(float);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x11A31A4", Offset = "0x11A31A4", VA = "0x11A31A4")]
	public static Vector2 smin(Vector2 a, Vector2 b, float k)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x11A325C", Offset = "0x11A325C", VA = "0x11A325C")]
	public static float smax(float a, float b, float k)
	{
		return default(float);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x11A32E0", Offset = "0x11A32E0", VA = "0x11A32E0")]
	public static Vector3 smax(Vector3 a, Vector3 b, float k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x11A335C", Offset = "0x11A335C", VA = "0x11A335C")]
	public static Vector3 rotX(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x11A33C4", Offset = "0x11A33C4", VA = "0x11A33C4")]
	public static Vector3 rotY(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x11A342C", Offset = "0x11A342C", VA = "0x11A342C")]
	public static Vector3 rotZ(Vector3 p, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x11A3494", Offset = "0x11A3494", VA = "0x11A3494")]
	public static Matrix4x4 inverse(Matrix4x4 input)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x11A34D4", Offset = "0x11A34D4", VA = "0x11A34D4")]
	public static Vector3 opTx(Vector3 p, Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x11A2A80", Offset = "0x11A2A80", VA = "0x11A2A80")]
	public static float sdSphere(Vector3 p, float r)
	{
		return default(float);
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x11A2ABC", Offset = "0x11A2ABC", VA = "0x11A2ABC")]
	public static float sdBoxcheap(Vector3 p, Vector3 s)
	{
		return default(float);
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x11A2B0C", Offset = "0x11A2B0C", VA = "0x11A2B0C")]
	public static float sdCapsule(Vector3 p, Vector3 a, Vector3 b, float r)
	{
		return default(float);
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x11A2BD4", Offset = "0x11A2BD4", VA = "0x11A2BD4")]
	public static float sdCappedCylinder(Vector3 p, Vector2 h)
	{
		return default(float);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x11A3548", Offset = "0x11A3548", VA = "0x11A3548")]
	public static float sdCone(Vector3 p, Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x11A2C80", Offset = "0x11A2C80", VA = "0x11A2C80")]
	public static float sdConeApprox(Vector3 p, Vector3 s)
	{
		return default(float);
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x11A366C", Offset = "0x11A366C", VA = "0x11A366C")]
	public static float det(Vector2 a, Vector2 b)
	{
		return default(float);
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x11A367C", Offset = "0x11A367C", VA = "0x11A367C")]
	public static Vector3 getClosest(Vector2 b0, Vector2 b1, Vector2 b2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x11A381C", Offset = "0x11A381C", VA = "0x11A381C")]
	public static Vector4 sdBezierAllData(Vector3 p, Vector3 a, Vector3 b, Vector3 c)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x11A3AF0", Offset = "0x11A3AF0", VA = "0x11A3AF0")]
	public static float sdBezier(Vector3 p, Vector3 a, Vector3 b, Vector3 c, float width, float from, float to, float taperLen)
	{
		return default(float);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x11A3BA4", Offset = "0x11A3BA4", VA = "0x11A3BA4")]
	public static float sdBezier(Vector3 p, Vector3 a, Vector3 b, Vector3 c, float width, float from, float to, float taperLen, out float bezT)
	{
		return default(float);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x11A3C60", Offset = "0x11A3C60", VA = "0x11A3C60")]
	public static Vector3 hsv2rgb(float h, float s, float v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x11A3E2C", Offset = "0x11A3E2C", VA = "0x11A3E2C")]
	public SDFCommon()
	{
	}
}
[Token(Token = "0x2000302")]
public class SDFGPUInterface
{
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float[] ms_shapeType;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] ms_combineMode;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector4[] ms_scale;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Matrix4x4[] ms_invMatrix;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int MaxShapes;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int SDFShapeType;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int SDFShapeCombine;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SDFShapeWorldScale;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int SDFShapeMatrixInv;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int SDFShapeCount;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x11A3E34", Offset = "0x11A3E34", VA = "0x11A3E34")]
	static SDFGPUInterface()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x11A4044", Offset = "0x11A4044", VA = "0x11A4044")]
	public static bool SendShapesToGPU(SDFCatList catList)
	{
		return default(bool);
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x11A48B4", Offset = "0x11A48B4", VA = "0x11A48B4")]
	public SDFGPUInterface()
	{
	}
}
[Token(Token = "0x2000303")]
public class SDFShape : StaticMapped<SDFShape>
{
	[Token(Token = "0x2000304")]
	public enum Category
	{
		[Token(Token = "0x4000FFF")]
		All = -2,
		[Token(Token = "0x4001000")]
		None,
		[Token(Token = "0x4001001")]
		A,
		[Token(Token = "0x4001002")]
		B,
		[Token(Token = "0x4001003")]
		C,
		[Token(Token = "0x4001004")]
		D
	}

	[Token(Token = "0x2000305")]
	public enum Combine
	{
		[Token(Token = "0x4001006")]
		Add,
		[Token(Token = "0x4001007")]
		Subtract,
		[Token(Token = "0x4001008")]
		Intersect,
		[Token(Token = "0x4001009")]
		Blend,
		[Token(Token = "0x400100A")]
		Blend2,
		[Token(Token = "0x400100B")]
		Blend3,
		[Token(Token = "0x400100C")]
		Blend4
	}

	[Token(Token = "0x2000306")]
	public enum Shape
	{
		[Token(Token = "0x400100E")]
		None,
		[Token(Token = "0x400100F")]
		Sphere,
		[Token(Token = "0x4001010")]
		Cuboid,
		[Token(Token = "0x4001011")]
		Capsule,
		[Token(Token = "0x4001012")]
		Bezier,
		[Token(Token = "0x4001013")]
		Cylinder,
		[Token(Token = "0x4001014")]
		Cone
	}

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Category ms_showCategory;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Category m_category;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Combine m_combine;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shape m_shape;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF210", Offset = "0x8DF210")]
	public Transform m_bezierPtA;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF260", Offset = "0x8DF260")]
	public Transform m_bezierPtB;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF2B0", Offset = "0x8DF2B0")]
	public Transform m_bezierPtC;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF300", Offset = "0x8DF300")]
	public float m_bezierWidth;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF350", Offset = "0x8DF350")]
	public float m_bezierStart;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF3A0", Offset = "0x8DF3A0")]
	public float m_bezierEnd;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8DF3F0", Offset = "0x8DF3F0")]
	public float m_bezierTaper;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool sentToGPU;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool m_drawAllGizmos;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Color[] GizmoCol;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool m_alwaysShowShape;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool m_alwaysShowBounds;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 min;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 max;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Bounds _bounds;

	[Token(Token = "0x170001DB")]
	public Bounds m_bounds
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x11A493C", Offset = "0x11A493C", VA = "0x11A493C")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x11A48BC", Offset = "0x11A48BC", VA = "0x11A48BC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x11A4980", Offset = "0x11A4980", VA = "0x11A4980")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x11A4D58", Offset = "0x11A4D58", VA = "0x11A4D58")]
	private void GetBezierBounds(Vector3 p0, Vector3 p1, Vector3 p2, ref Bounds b)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x11A5090", Offset = "0x11A5090", VA = "0x11A5090")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x11A5148", Offset = "0x11A5148", VA = "0x11A5148")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x11A51E4", Offset = "0x11A51E4", VA = "0x11A51E4")]
	private void DrawGizmos(Color col)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x11A5C84", Offset = "0x11A5C84", VA = "0x11A5C84")]
	public static void GizmoCylinder(Vector3 p, int res = 16)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x11A5AF4", Offset = "0x11A5AF4", VA = "0x11A5AF4")]
	public static void GizmoCylinderZ(Vector3 p, float len, float width, int res = 16)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x11A5DE4", Offset = "0x11A5DE4", VA = "0x11A5DE4")]
	public static void GizmoCone(Vector3 p, int res = 16)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x11A5F44", Offset = "0x11A5F44", VA = "0x11A5F44")]
	public Vector3 GetSourcePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x11A58A0", Offset = "0x11A58A0", VA = "0x11A58A0")]
	public Vector3 GetBezierWorldPositionAtTime(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x11A5A0C", Offset = "0x11A5A0C", VA = "0x11A5A0C")]
	public float GetBezierLength(int approximationSteps)
	{
		return default(float);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x11A5FD4", Offset = "0x11A5FD4", VA = "0x11A5FD4")]
	public void RepositionAtBezierPtA()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x11A6008", Offset = "0x11A6008", VA = "0x11A6008")]
	public void RepositionOriginAt(Vector3 v)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x11A6118", Offset = "0x11A6118", VA = "0x11A6118")]
	public SDFShape()
	{
	}
}
[Token(Token = "0x2000307")]
public class SDFTo3DTexture : MonoBehaviour
{
	[Token(Token = "0x2000308")]
	private enum RenderPassMode
	{
		[Token(Token = "0x400103F")]
		FirstPass,
		[Token(Token = "0x4001040")]
		Add
	}

	[Token(Token = "0x2000309")]
	private enum RenderStatus
	{
		[Token(Token = "0x4001042")]
		Clean,
		[Token(Token = "0x4001043")]
		Dirty,
		[Token(Token = "0x4001044")]
		Rendering
	}

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SDFTo3DTexture Instance;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_autoResUnitsToTexel;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3Int m_volumeResolution;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_autoSizePadding;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader m_renderShader;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderPassMode m_rpMode;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera m_renderRig;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_renderMaterial;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer m_quadRenderer;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF440", Offset = "0x8DF440")]
	public bool m_applyBlur;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DF478", Offset = "0x8DF478")]
	public float m_blurAmount;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8DF4B0", Offset = "0x8DF4B0")]
	public Shader m_blurShader;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_blurMaterial;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[ReadOnly]
	private RenderTexture m_intermediateTex;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	private RenderTexture m_intermediateBlurred;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	private Texture3D m_volumeTex;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF518", Offset = "0x8DF518")]
	public bool m_showSlicesGizmo;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool m_showResolutionGizmo;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool m_autoRefreshInPlayMode;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_refreshEvery;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool m_resizeTexture;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[ReadOnly]
	public string m_volumeTextureSize;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SDFShape.Category m_showCategory;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF560", Offset = "0x8DF560")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF560", Offset = "0x8DF560")]
	public int numShapesToSendToGPU;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderStatus m_renderStatus;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool m_doSetupSize;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly List<SDFShape> m_sdfShapeList;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SDFCatList> SDFCategories;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int SDFToTexFeedbackOffset;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int SDFToTexChannelFirstPass;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int SDFToTexAdd;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int SDFToTexChannel;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int SDFToTexPageHeight;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int ResX;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int ResY;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int Rmul;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int SDFVolTexTex;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SDFVolTexInverseMtx;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int SDFVolTexMtx;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int SDFVolTexReadOffset;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float nextRefresh;

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x11A6314", Offset = "0x11A6314", VA = "0x11A6314")]
	public static void ClearStatics(Scene arg0)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x11A6450", Offset = "0x11A6450", VA = "0x11A6450")]
	private static List<SDFCatList> CreateCatLists()
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x11A6560", Offset = "0x11A6560", VA = "0x11A6560")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11A6730", Offset = "0x11A6730", VA = "0x11A6730")]
	private void Start()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11A6784", Offset = "0x11A6784", VA = "0x11A6784")]
	private void Update()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11A6954", Offset = "0x11A6954", VA = "0x11A6954")]
	public static void Render()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11A6734", Offset = "0x11A6734", VA = "0x11A6734")]
	public void InitRendering()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11A7290", Offset = "0x11A7290", VA = "0x11A7290")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x11A6A30", Offset = "0x11A6A30", VA = "0x11A6A30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE8B4", Offset = "0x8EE8B4")]
	public void AutoSize()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x11A6CE4", Offset = "0x11A6CE4", VA = "0x11A6CE4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE8CC", Offset = "0x8EE8CC")]
	public void AutoResolution()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11A7438", Offset = "0x11A7438", VA = "0x11A7438")]
	private float GetTexSizeInMB()
	{
		return default(float);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x11A74B0", Offset = "0x11A74B0", VA = "0x11A74B0")]
	private void InitRenderOnGPU()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x11A7BF4", Offset = "0x11A7BF4", VA = "0x11A7BF4")]
	private int GetSDFCategoryIndex(SDFShape.Category cat)
	{
		return default(int);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x11A7010", Offset = "0x11A7010", VA = "0x11A7010")]
	public void InitShapes()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11A6F70", Offset = "0x11A6F70", VA = "0x11A6F70")]
	private bool TextureSizeIsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11A6820", Offset = "0x11A6820", VA = "0x11A6820")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EE8E4", Offset = "0x8EE8E4")]
	public void RenderOnGPU()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11A7ED8", Offset = "0x11A7ED8", VA = "0x11A7ED8")]
	private void RenderShapes(SDFCatList sdfCat)
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11A856C", Offset = "0x11A856C", VA = "0x11A856C")]
	public bool RenderSomeOnGPU(SDFCatList catList)
	{
		return default(bool);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11A804C", Offset = "0x11A804C", VA = "0x11A804C")]
	private void ApplyBlurGPU()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11A7C00", Offset = "0x11A7C00", VA = "0x11A7C00")]
	public void SetShaderGlobals()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x11A8848", Offset = "0x11A8848", VA = "0x11A8848")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x11A896C", Offset = "0x11A896C", VA = "0x11A896C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x11A8C50", Offset = "0x11A8C50", VA = "0x11A8C50")]
	public SDFTo3DTexture()
	{
	}
}
[Token(Token = "0x200030A")]
public class SkyboxToPassthrough : MonoBehaviour
{
	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF5B8", Offset = "0x8DF5B8")]
	public float m_progress;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_fadingMat;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m_originalMaterial;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_skyboxMat;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_targetProgress;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[OVRLayer]
	public int m_skyboxLayer;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer m_skyBoxRenderer;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_skyboxMatIdx;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock m_skyboxPropBlock;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_skyProgField;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer m_starsRenderer;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_starsMatIdx;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock m_starsPropBlock;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string m_starsColField;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_canDoIntro;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Scenario m_tutorialSceanrioForIntroMessage;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OVRPassthroughLayer m_passthroughLayer;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xEE4084", Offset = "0xEE4084", VA = "0xEE4084")]
	public bool IsPassthroughOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xEE4098", Offset = "0xEE4098", VA = "0xEE4098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xEE40A0", Offset = "0xEE40A0", VA = "0xEE40A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xEE40A4", Offset = "0xEE40A4", VA = "0xEE40A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xEE409C", Offset = "0xEE409C", VA = "0xEE409C")]
	private void EnableSDKPassthroughLayer(bool b)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xEE40A8", Offset = "0xEE40A8", VA = "0xEE40A8")]
	public void SetSkybox(SpacefolkSkybox ssb)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xEE40AC", Offset = "0xEE40AC", VA = "0xEE40AC")]
	public bool Toggle()
	{
		return default(bool);
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xEE40B4", Offset = "0xEE40B4", VA = "0xEE40B4")]
	public void SetPassthroughImmediately(bool passthroughOn, bool actuallyChangePassthroughLayerActiveState = true)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xEE40B8", Offset = "0xEE40B8", VA = "0xEE40B8")]
	private void OnApplicationPause(bool p)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xEE40BC", Offset = "0xEE40BC", VA = "0xEE40BC")]
	public SkyboxToPassthrough()
	{
	}
}
[Token(Token = "0x200030B")]
public class FG_GameObjectGUIDs : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool _dirty;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string[] guids;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public UnityEngine.Object[] objects;

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1017C70", Offset = "0x1017C70", VA = "0x1017C70")]
	private FG_GameObjectGUIDs()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x1017D48", Offset = "0x1017D48", VA = "0x1017D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x1017DB0", Offset = "0x1017DB0", VA = "0x1017DB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1017E18", Offset = "0x1017E18", VA = "0x1017E18")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x200030C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D610C", Offset = "0x8D610C")]
public class CubeKiller : MonoBehaviour
{
	[Token(Token = "0x6001084")]
	[Address(RVA = "0xF18968", Offset = "0xF18968", VA = "0xF18968")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xF189E8", Offset = "0xF189E8", VA = "0xF189E8")]
	public CubeKiller()
	{
	}
}
[Token(Token = "0x200030D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6144", Offset = "0x8D6144")]
public class CubeSpawner : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D617C", Offset = "0x8D617C")]
	private sealed class <SpawnCube>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeSpawner <>4__this;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x10075DC", Offset = "0x10075DC", VA = "0x10075DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x1007624", Offset = "0x1007624", VA = "0x1007624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x100742C", Offset = "0x100742C", VA = "0x100742C")]
		[DebuggerHidden]
		public <SpawnCube>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1007458", Offset = "0x1007458", VA = "0x1007458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x100745C", Offset = "0x100745C", VA = "0x100745C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x10075E4", Offset = "0x10075E4", VA = "0x10075E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CubePrefab;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Interval;

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xF189F0", Offset = "0xF189F0", VA = "0xF189F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xF18A84", Offset = "0xF18A84", VA = "0xF18A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE8FC", Offset = "0x8EE8FC")]
	private IEnumerator SpawnCube()
	{
		return null;
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xF18AFC", Offset = "0xF18AFC", VA = "0xF18AFC")]
	public CubeSpawner()
	{
	}
}
[Token(Token = "0x200030F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D618C", Offset = "0x8D618C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D618C", Offset = "0x8D618C")]
public class Record : MonoBehaviour
{
	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Recorder m_Recorder;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Progress;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_LastFile;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsSaving;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x1298AE4", Offset = "0x1298AE4", VA = "0x1298AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x1298D28", Offset = "0x1298D28", VA = "0x1298D28")]
	private void OnProcessingDone()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x1298D34", Offset = "0x1298D34", VA = "0x1298D34")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x1298D48", Offset = "0x1298D48", VA = "0x1298D48")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x1298D84", Offset = "0x1298D84", VA = "0x1298D84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1298D88", Offset = "0x1298D88", VA = "0x1298D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x1298DFC", Offset = "0x1298DFC", VA = "0x1298DFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x1299314", Offset = "0x1299314", VA = "0x1299314")]
	public Record()
	{
	}
}
[Token(Token = "0x2000310")]
public enum Chirality
{
	[Token(Token = "0x4001064")]
	Undefined = -1,
	[Token(Token = "0x4001065")]
	Right,
	[Token(Token = "0x4001066")]
	Left
}
[Token(Token = "0x2000311")]
public class GizmoUtils
{
	[Token(Token = "0x6001097")]
	[Address(RVA = "0x129EC54", Offset = "0x129EC54", VA = "0x129EC54")]
	public static void ToggleGizmos(bool gizmosOn)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x129EC58", Offset = "0x129EC58", VA = "0x129EC58")]
	public GizmoUtils()
	{
	}
}
[Token(Token = "0x2000312")]
public enum OffMeshLinkMoveMethod
{
	[Token(Token = "0x4001068")]
	Teleport,
	[Token(Token = "0x4001069")]
	NormalSpeed,
	[Token(Token = "0x400106A")]
	Parabola,
	[Token(Token = "0x400106B")]
	Curve
}
[Token(Token = "0x2000313")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6210", Offset = "0x8D6210")]
public class AgentLinkMover : MonoBehaviour, ISaveableComponent
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6270", Offset = "0x8D6270")]
	private sealed class <DoMoveWithCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator coroutine;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xFF4700", Offset = "0xFF4700", VA = "0xFF4700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xFF4748", Offset = "0xFF4748", VA = "0xFF4748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xFF45FC", Offset = "0xFF45FC", VA = "0xFF45FC")]
		[DebuggerHidden]
		public <DoMoveWithCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xFF4628", Offset = "0xFF4628", VA = "0xFF4628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xFF462C", Offset = "0xFF462C", VA = "0xFF462C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xFF4708", Offset = "0xFF4708", VA = "0xFF4708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6280", Offset = "0x8D6280")]
	private sealed class <NormalSpeed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endPos>5__2;

		[Token(Token = "0x170001E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xFF4944", Offset = "0xFF4944", VA = "0xFF4944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xFF498C", Offset = "0xFF498C", VA = "0xFF498C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xFF4750", Offset = "0xFF4750", VA = "0xFF4750")]
		[DebuggerHidden]
		public <NormalSpeed>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xFF477C", Offset = "0xFF477C", VA = "0xFF477C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xFF4780", Offset = "0xFF4780", VA = "0xFF4780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xFF494C", Offset = "0xFF494C", VA = "0xFF494C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6290", Offset = "0x8D6290")]
	private sealed class <Parabola>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float height;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xFF4B98", Offset = "0xFF4B98", VA = "0xFF4B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xFF4BE0", Offset = "0xFF4BE0", VA = "0xFF4BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xFF4994", Offset = "0xFF4994", VA = "0xFF4994")]
		[DebuggerHidden]
		public <Parabola>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xFF49C0", Offset = "0xFF49C0", VA = "0xFF49C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xFF49C4", Offset = "0xFF49C4", VA = "0xFF49C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xFF4BA0", Offset = "0xFF4BA0", VA = "0xFF4BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62A0", Offset = "0x8D62A0")]
	private sealed class <Curve>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AgentLinkMover <>4__this;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <normalizedTime>5__4;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xFF45AC", Offset = "0xFF45AC", VA = "0xFF45AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xFF45F4", Offset = "0xFF45F4", VA = "0xFF45F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xFF43AC", Offset = "0xFF43AC", VA = "0xFF43AC")]
		[DebuggerHidden]
		public <Curve>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xFF43D8", Offset = "0xFF43D8", VA = "0xFF43D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xFF43DC", Offset = "0xFF43DC", VA = "0xFF43DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xFF45B4", Offset = "0xFF45B4", VA = "0xFF45B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OffMeshLinkMoveMethod m_Method;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve m_Curve;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine moveCoroutine;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavLinkCustomMovement customMove;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshAgent agent;

	[Token(Token = "0x170001DE")]
	public bool IsMoving
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x138C82C", Offset = "0x138C82C", VA = "0x138C82C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x138D744", Offset = "0x138D744", VA = "0x138D744")]
	private void Start()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x138D7B8", Offset = "0x138D7B8", VA = "0x138D7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x138C83C", Offset = "0x138C83C", VA = "0x138C83C")]
	public void CancelMovement()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x138DB30", Offset = "0x138DB30", VA = "0x138DB30")]
	private void FinishMove()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x138D95C", Offset = "0x138D95C", VA = "0x138D95C")]
	private void MoveWithCoroutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x138DB78", Offset = "0x138DB78", VA = "0x138DB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EE9AC", Offset = "0x8EE9AC")]
	private IEnumerator DoMoveWithCoroutine(IEnumerator coroutine)
	{
		return null;
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x138D988", Offset = "0x138D988", VA = "0x138D988")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EEA0C", Offset = "0x8EEA0C")]
	private IEnumerator NormalSpeed(NavMeshAgent agent)
	{
		return null;
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x138DA00", Offset = "0x138DA00", VA = "0x138DA00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EEA6C", Offset = "0x8EEA6C")]
	private IEnumerator Parabola(NavMeshAgent agent, float height, float duration)
	{
		return null;
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x138DA8C", Offset = "0x138DA8C", VA = "0x138DA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EEACC", Offset = "0x8EEACC")]
	private IEnumerator Curve(NavMeshAgent agent, float duration)
	{
		return null;
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x138DC0C", Offset = "0x138DC0C", VA = "0x138DC0C", Slot = "4")]
	public void OnWillSaveToSaveGame()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x138DC78", Offset = "0x138DC78", VA = "0x138DC78", Slot = "5")]
	public void OnDidSaveToSaveGame()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x138DC7C", Offset = "0x138DC7C", VA = "0x138DC7C", Slot = "6")]
	public void OnLoadedFromSaveGame()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x138DC80", Offset = "0x138DC80", VA = "0x138DC80")]
	public AgentLinkMover()
	{
	}
}
[Token(Token = "0x2000318")]
public class DestroyOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_Tag;

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xF2FD6C", Offset = "0xF2FD6C", VA = "0xF2FD6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xF2FE30", Offset = "0xF2FE30", VA = "0xF2FE30")]
	public DestroyOnTrigger()
	{
	}
}
[Token(Token = "0x2000319")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D62B0", Offset = "0x8D62B0")]
public class DungeonManager : MonoBehaviour
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_Width;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_Height;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Spacing;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_Tiles;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x100D84C", Offset = "0x100D84C", VA = "0x100D84C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x100DB90", Offset = "0x100DB90", VA = "0x100DB90")]
	public DungeonManager()
	{
	}
}
[Token(Token = "0x200031A")]
public class EnableIffSleeping : MonoBehaviour
{
	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour m_Behaviour;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x100E458", Offset = "0x100E458", VA = "0x100E458")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x100E4B4", Offset = "0x100E4B4", VA = "0x100E4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x100E5E8", Offset = "0x100E5E8", VA = "0x100E5E8")]
	public EnableIffSleeping()
	{
	}
}
[Token(Token = "0x200031B")]
public class FreeCam : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	public enum RotationAxes
	{
		[Token(Token = "0x400109B")]
		MouseXAndY,
		[Token(Token = "0x400109C")]
		MouseX,
		[Token(Token = "0x400109D")]
		MouseY
	}

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lockHeight;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationY;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x11C2F00", Offset = "0x11C2F00", VA = "0x11C2F00")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x11C31A0", Offset = "0x11C31A0", VA = "0x11C31A0")]
	public FreeCam()
	{
	}
}
[Token(Token = "0x200031D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D62C4", Offset = "0x8D62C4")]
public class LocalNavMeshBuilder : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_Size;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_Centre;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshData m_NavMesh;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.AsyncOperation m_Operation;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshDataInstance m_Instance;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<NavMeshBuildSource> m_Sources;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_dirty;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Action> m_callbacks;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_processing;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Action> m_callbackCache;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool generatedOnce;

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x1775E18", Offset = "0x1775E18", VA = "0x1775E18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x1775ED0", Offset = "0x1775ED0", VA = "0x1775ED0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x1775EDC", Offset = "0x1775EDC", VA = "0x1775EDC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EEC6C", Offset = "0x8EEC6C")]
	public void UpdateNavMesh(params Action[] callbacks)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x1775F90", Offset = "0x1775F90", VA = "0x1775F90")]
	private static Vector3 Quantize(Vector3 v, Vector3 quant)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x177614C", Offset = "0x177614C", VA = "0x177614C")]
	private static Vector3 QuantizeMax(Vector3 v, Vector3 quant)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x1776174", Offset = "0x1776174", VA = "0x1776174")]
	private Bounds QuantizedBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x1776294", Offset = "0x1776294", VA = "0x1776294")]
	private void SetBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x17762DC", Offset = "0x17762DC", VA = "0x17762DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x17764A8", Offset = "0x17764A8", VA = "0x17764A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x17766C0", Offset = "0x17766C0", VA = "0x17766C0")]
	private void NavMeshGenerationCompleted(UnityEngine.AsyncOperation obj)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x177683C", Offset = "0x177683C", VA = "0x177683C")]
	public LocalNavMeshBuilder()
	{
	}
}
[Token(Token = "0x200031E")]
public class MeshTool : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum ExtrudeMethod
	{
		[Token(Token = "0x40010AF")]
		Vertical,
		[Token(Token = "0x40010B0")]
		MeshNormal
	}

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshFilter> m_Filters;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Radius;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Power;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExtrudeMethod m_Method;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit m_HitInfo;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1610084", Offset = "0x1610084", VA = "0x1610084")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x16100A8", Offset = "0x16100A8", VA = "0x16100A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1610370", Offset = "0x1610370", VA = "0x1610370")]
	private void ModifyMesh(Vector3 displacement, Vector3 center)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1610788", Offset = "0x1610788", VA = "0x1610788")]
	private static float Gaussian(Vector3 pos, Vector3 mean, float dev)
	{
		return default(float);
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x16107FC", Offset = "0x16107FC", VA = "0x16107FC")]
	public MeshTool()
	{
	}
}
[Token(Token = "0x2000320")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D62D8", Offset = "0x8D62D8")]
public class NavMeshPrefabInstance : MonoBehaviour
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NavMeshData m_NavMesh;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_FollowTransform;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private NavMeshDataInstance m_Instance;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<NavMeshPrefabInstance> s_TrackedInstances;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_Position;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion m_Rotation;

	[Token(Token = "0x170001E7")]
	public NavMeshData navMeshData
	{
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x13390CC", Offset = "0x13390CC", VA = "0x13390CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x13390D4", Offset = "0x13390D4", VA = "0x13390D4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public bool followTransform
	{
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x13390DC", Offset = "0x13390DC", VA = "0x13390DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x13390E4", Offset = "0x13390E4", VA = "0x13390E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public static List<NavMeshPrefabInstance> trackedInstances
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1339118", Offset = "0x1339118", VA = "0x1339118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x133917C", Offset = "0x133917C", VA = "0x133917C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x1339488", Offset = "0x1339488", VA = "0x1339488")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x1339628", Offset = "0x1339628", VA = "0x1339628")]
	public void UpdateInstance()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x13391C4", Offset = "0x13391C4", VA = "0x13391C4")]
	private void AddInstance()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x1339304", Offset = "0x1339304", VA = "0x1339304")]
	private void AddTracking()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x13394B4", Offset = "0x13394B4", VA = "0x13394B4")]
	private void RemoveTracking()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x13390EC", Offset = "0x13390EC", VA = "0x13390EC")]
	private void SetFollowTransform(bool value)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x1339654", Offset = "0x1339654", VA = "0x1339654")]
	private bool HasMoved()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x1339720", Offset = "0x1339720", VA = "0x1339720")]
	private static void UpdateTrackedInstances()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x1339884", Offset = "0x1339884", VA = "0x1339884")]
	public NavMeshPrefabInstance()
	{
	}
}
[Token(Token = "0x2000321")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6314", Offset = "0x8D6314")]
public class NavMeshSourceTag : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	private enum KillMode
	{
		[Token(Token = "0x40010C0")]
		Off,
		[Token(Token = "0x40010C1")]
		Func,
		[Token(Token = "0x40010C2")]
		Inline
	}

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ms_staticsInitialised;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, NavMeshSourceTag> ms_tags;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static KillMode ms_killMode;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsBlocker;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IsCityPiece;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasSource;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private NavMeshBuildSource m_buildSource;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x1339918", Offset = "0x1339918", VA = "0x1339918")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EEC84", Offset = "0x8EEC84")]
	[AOTStubRequired]
	public static void ResetStatics()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x133999C", Offset = "0x133999C", VA = "0x133999C")]
	private static void SceneUnloaded(Scene unloadingScene)
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x1339AD4", Offset = "0x1339AD4", VA = "0x1339AD4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EECC0", Offset = "0x8EECC0")]
	public static void NextNavMeshKillMode()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x1339C48", Offset = "0x1339C48", VA = "0x1339C48")]
	private void Start()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x1339DA8", Offset = "0x1339DA8", VA = "0x1339DA8")]
	private bool DestroyIfUnsafe()
	{
		return default(bool);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x1339F54", Offset = "0x1339F54", VA = "0x1339F54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x1339FF4", Offset = "0x1339FF4", VA = "0x1339FF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x133A0EC", Offset = "0x133A0EC", VA = "0x133A0EC")]
	private static Matrix4x4 GetBlockerTransform(MeshFilter mf, NavMeshBuildSettings buildSettings)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x133A4CC", Offset = "0x133A4CC", VA = "0x133A4CC")]
	public static void Collect(ref List<NavMeshBuildSource> sources, LocalNavMeshBuilder builder, NavMeshBuildSettings buildSettings, out Bounds bounds)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x133AC4C", Offset = "0x133AC4C", VA = "0x133AC4C")]
	private static void CreateBlockerMesh(LocalNavMeshBuilder builder, NavMeshSourceTag tag, Matrix4x4 mat, Mesh m2, Vector3 scale)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x133AEB8", Offset = "0x133AEB8", VA = "0x133AEB8")]
	public NavMeshSourceTag()
	{
	}
}
[Token(Token = "0x2000323")]
public class Oscillator : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Amplitude;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_Period;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_Direction;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_StartPosition;

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xEC57B8", Offset = "0xEC57B8", VA = "0xEC57B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xEC57F4", Offset = "0xEC57F4", VA = "0xEC57F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xEC589C", Offset = "0xEC589C", VA = "0xEC589C")]
	public Oscillator()
	{
	}
}
[Token(Token = "0x2000324")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6328", Offset = "0x8D6328")]
public class RandomInstancing : MonoBehaviour
{
	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Prefab;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_PoolSize;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_InstancesPerTile;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_RandomPosition;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_RandomOrientation;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Height;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_BaseHash;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_Size;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> m_Instances;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_Used;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_LocX;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_LocZ;

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x1295800", Offset = "0x1295800", VA = "0x1295800")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x1295970", Offset = "0x1295970", VA = "0x1295970")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x1295B7C", Offset = "0x1295B7C", VA = "0x1295B7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x1295CD0", Offset = "0x1295CD0", VA = "0x1295CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x129597C", Offset = "0x129597C", VA = "0x129597C")]
	private void UpdateInstances()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x1295CD4", Offset = "0x1295CD4", VA = "0x1295CD4")]
	private int UpdateTileInstances(int i, int j)
	{
		return default(int);
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x129607C", Offset = "0x129607C", VA = "0x129607C")]
	private static int Hash2(int i, int j)
	{
		return default(int);
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x129609C", Offset = "0x129609C", VA = "0x129609C")]
	private static float Random(ref int seed)
	{
		return default(float);
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x1296110", Offset = "0x1296110", VA = "0x1296110")]
	public RandomInstancing()
	{
	}
}
[Token(Token = "0x2000325")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D633C", Offset = "0x8D633C")]
public class RandomWalk : MonoBehaviour
{
	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Range;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NavMeshAgent m_Agent;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_initialTarget;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x12961B8", Offset = "0x12961B8", VA = "0x12961B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x1296214", Offset = "0x1296214", VA = "0x1296214")]
	public bool IsAtDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x1296284", Offset = "0x1296284", VA = "0x1296284")]
	private void Update()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x12962F0", Offset = "0x12962F0", VA = "0x12962F0")]
	public RandomWalk()
	{
	}
}
[Token(Token = "0x2000326")]
public class SpawnPrefabOnKeyDown : MonoBehaviour
{
	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Prefab;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode m_KeyCode;

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x11EB59C", Offset = "0x11EB59C", VA = "0x11EB59C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x11EB70C", Offset = "0x11EB70C", VA = "0x11EB70C")]
	public SpawnPrefabOnKeyDown()
	{
	}
}
[Token(Token = "0x2000327")]
public class FileDragAndDrop : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D639C", Offset = "0x8D639C")]
	private sealed class <>c
	{
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, string, string> <>9__3_0;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xE7B848", Offset = "0xE7B848", VA = "0xE7B848")]
		public <>c()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xE7B850", Offset = "0xE7B850", VA = "0xE7B850")]
		internal string <OnFiles>b__3_0(string a, string b)
		{
			return null;
		}
	}

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> log;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x101CFC4", Offset = "0x101CFC4", VA = "0x101CFC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x101D048", Offset = "0x101D048", VA = "0x101D048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x101D050", Offset = "0x101D050", VA = "0x101D050")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x101D414", Offset = "0x101D414", VA = "0x101D414")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x101D698", Offset = "0x101D698", VA = "0x101D698")]
	public FileDragAndDrop()
	{
	}
}
[Token(Token = "0x2000329")]
public class ImageExample : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	private class DropInfo
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string file;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pos;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xE8502C", Offset = "0xE8502C", VA = "0xE8502C")]
		public DropInfo()
		{
		}
	}

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D[] textures;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DropInfo dropInfo;

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xFC0FA8", Offset = "0xFC0FA8", VA = "0xFC0FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xFC102C", Offset = "0xFC102C", VA = "0xFC102C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xFC1034", Offset = "0xFC1034", VA = "0xFC1034")]
	private void OnFiles(List<string> aFiles, POINT aPos)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xFC12EC", Offset = "0xFC12EC", VA = "0xFC12EC")]
	private void LoadImage(int aIndex, DropInfo aInfo)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xFC14E0", Offset = "0xFC14E0", VA = "0xFC14E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xFC1AB4", Offset = "0xFC1AB4", VA = "0xFC1AB4")]
	public ImageExample()
	{
	}
}
[Token(Token = "0x200032B")]
public enum AkAudioAPI
{
	[Token(Token = "0x40010E0")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x40010E1")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x40010E2")]
	AkAudioAPI_Default
}
[Token(Token = "0x200032C")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001EA")]
	public uint uPoolSize
	{
		[Token(Token = "0x600111D")]
		[Address(RVA = "0x139B8F0", Offset = "0x139B8F0", VA = "0x139B8F0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x139A0B8", Offset = "0x139A0B8", VA = "0x139A0B8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x139B958", Offset = "0x139B958", VA = "0x139B958")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x139A130", Offset = "0x139A130", VA = "0x139A130")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x139B9C0", Offset = "0x139B9C0", VA = "0x139B9C0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x139A1A8", Offset = "0x139A1A8", VA = "0x139A1A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x139BA28", Offset = "0x139BA28", VA = "0x139BA28")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x139A220", Offset = "0x139A220", VA = "0x139A220")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x139BA90", Offset = "0x139BA90", VA = "0x139BA90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x139A298", Offset = "0x139A298", VA = "0x139A298")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x139BAF8", Offset = "0x139BAF8", VA = "0x139BAF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x139A310", Offset = "0x139A310", VA = "0x139A310")]
		set
		{
		}
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x139B644", Offset = "0x139B644", VA = "0x139B644")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x139B684", Offset = "0x139B684", VA = "0x139B684")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x139B6D0", Offset = "0x139B6D0", VA = "0x139B6D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x139B704", Offset = "0x139B704", VA = "0x139B704", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x139B774", Offset = "0x139B774", VA = "0x139B774", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x13957B4", Offset = "0x13957B4", VA = "0x13957B4")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x200032D")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40010E6")]
	AkNoAlloc = 0,
	[Token(Token = "0x40010E7")]
	AkMalloc = 1,
	[Token(Token = "0x40010E8")]
	AkAllocMask = 1,
	[Token(Token = "0x40010E9")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40010EA")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x200032E")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F0")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xE2BA7C", Offset = "0xE2BA7C", VA = "0xE2BA7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600112D")]
		[Address(RVA = "0xE2B904", Offset = "0xE2B904", VA = "0xE2B904")]
		set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xE2BD28", Offset = "0xE2BD28", VA = "0xE2BD28")]
		get
		{
			return null;
		}
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xE2BBFC", Offset = "0xE2BBFC", VA = "0xE2BBFC")]
		set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xE2BF94", Offset = "0xE2BF94", VA = "0xE2BF94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0xE2BE68", Offset = "0xE2BE68", VA = "0xE2BE68")]
		set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0xE2C200", Offset = "0xE2C200", VA = "0xE2C200")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0xE2C0D4", Offset = "0xE2C0D4", VA = "0xE2C0D4")]
		set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0xE2C444", Offset = "0xE2C444", VA = "0xE2C444")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001135")]
		[Address(RVA = "0xE2C340", Offset = "0xE2C340", VA = "0xE2C340")]
		set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0xE2C62C", Offset = "0xE2C62C", VA = "0xE2C62C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001137")]
		[Address(RVA = "0xE2C528", Offset = "0xE2C528", VA = "0xE2C528")]
		set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0xE2C814", Offset = "0xE2C814", VA = "0xE2C814")]
		get
		{
			return default(AkAudioAPI);
		}
		[Token(Token = "0x6001139")]
		[Address(RVA = "0xE2C710", Offset = "0xE2C710", VA = "0xE2C710")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public uint uSampleRate
	{
		[Token(Token = "0x600113C")]
		[Address(RVA = "0xE2C9FC", Offset = "0xE2C9FC", VA = "0xE2C9FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600113B")]
		[Address(RVA = "0xE2C8F8", Offset = "0xE2C8F8", VA = "0xE2C8F8")]
		set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0xE2CBE4", Offset = "0xE2CBE4", VA = "0xE2CBE4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600113D")]
		[Address(RVA = "0xE2CAE0", Offset = "0xE2CAE0", VA = "0xE2CAE0")]
		set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xE2CDCC", Offset = "0xE2CDCC", VA = "0xE2CDCC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0xE2CCC8", Offset = "0xE2CCC8", VA = "0xE2CCC8")]
		set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0xE2CFB4", Offset = "0xE2CFB4", VA = "0xE2CFB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001141")]
		[Address(RVA = "0xE2CEB0", Offset = "0xE2CEB0", VA = "0xE2CEB0")]
		set
		{
		}
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xE2B5DC", Offset = "0xE2B5DC", VA = "0xE2B5DC")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xE2B61C", Offset = "0xE2B61C", VA = "0xE2B61C")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xE2B668", Offset = "0xE2B668", VA = "0xE2B668", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xE2B69C", Offset = "0xE2B69C", VA = "0xE2B69C", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xE2B70C", Offset = "0xE2B70C", VA = "0xE2B70C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xE2D0A0", Offset = "0xE2D0A0", VA = "0xE2D0A0")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x200032F")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6001144")]
	[Address(RVA = "0xE57F8C", Offset = "0xE57F8C", VA = "0xE57F8C")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001145")]
	[Address(RVA = "0xE3CCBC", Offset = "0xE3CCBC", VA = "0xE3CCBC")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6001146")]
	[Address(RVA = "0xE57F90", Offset = "0xE57F90", VA = "0xE57F90")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001147")]
	[Address(RVA = "0xE58020", Offset = "0xE58020", VA = "0xE58020")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001148")]
	[Address(RVA = "0xE580A0", Offset = "0xE580A0", VA = "0xE580A0")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001149")]
	[Address(RVA = "0xE58130", Offset = "0xE58130", VA = "0xE58130")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114A")]
	[Address(RVA = "0xE581B0", Offset = "0xE581B0", VA = "0xE581B0")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x600114B")]
	[Address(RVA = "0xE58224", Offset = "0xE58224", VA = "0xE58224")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114C")]
	[Address(RVA = "0xE582A4", Offset = "0xE582A4", VA = "0xE582A4")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114D")]
	[Address(RVA = "0xE58324", Offset = "0xE58324", VA = "0xE58324")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600114E")]
	[Address(RVA = "0xE583B4", Offset = "0xE583B4", VA = "0xE583B4")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600114F")]
	[Address(RVA = "0xE58434", Offset = "0xE58434", VA = "0xE58434")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001150")]
	[Address(RVA = "0xE584C4", Offset = "0xE584C4", VA = "0xE584C4")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001151")]
	[Address(RVA = "0xE58544", Offset = "0xE58544", VA = "0xE58544")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001152")]
	[Address(RVA = "0xE585D4", Offset = "0xE585D4", VA = "0xE585D4")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001153")]
	[Address(RVA = "0xE58654", Offset = "0xE58654", VA = "0xE58654")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6001154")]
	[Address(RVA = "0xE586C8", Offset = "0xE586C8", VA = "0xE586C8")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001155")]
	[Address(RVA = "0xE58748", Offset = "0xE58748", VA = "0xE58748")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001156")]
	[Address(RVA = "0xE587C8", Offset = "0xE587C8", VA = "0xE587C8")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001157")]
	[Address(RVA = "0xE58848", Offset = "0xE58848", VA = "0xE58848")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001158")]
	[Address(RVA = "0xE588C8", Offset = "0xE588C8", VA = "0xE588C8")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001159")]
	[Address(RVA = "0xE58970", Offset = "0xE58970", VA = "0xE58970")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x600115A")]
	[Address(RVA = "0xE58A58", Offset = "0xE58A58", VA = "0xE58A58")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600115B")]
	[Address(RVA = "0xE58AE8", Offset = "0xE58AE8", VA = "0xE58AE8")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x600115C")]
	[Address(RVA = "0xE58B90", Offset = "0xE58B90", VA = "0xE58B90")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x600115D")]
	[Address(RVA = "0xE58C28", Offset = "0xE58C28", VA = "0xE58C28")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x600115E")]
	[Address(RVA = "0xE58CF0", Offset = "0xE58CF0", VA = "0xE58CF0")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x600115F")]
	[Address(RVA = "0xE58D64", Offset = "0xE58D64", VA = "0xE58D64")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001160")]
	[Address(RVA = "0xE28FD0", Offset = "0xE28FD0", VA = "0xE28FD0")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001161")]
	[Address(RVA = "0xE290C4", Offset = "0xE290C4", VA = "0xE290C4")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001162")]
	[Address(RVA = "0xE291B8", Offset = "0xE291B8", VA = "0xE291B8")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001163")]
	[Address(RVA = "0xE292AC", Offset = "0xE292AC", VA = "0xE292AC")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001164")]
	[Address(RVA = "0xE29390", Offset = "0xE29390", VA = "0xE29390")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001165")]
	[Address(RVA = "0xE29468", Offset = "0xE29468", VA = "0xE29468")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001166")]
	[Address(RVA = "0xE29578", Offset = "0xE29578", VA = "0xE29578")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001167")]
	[Address(RVA = "0xE29684", Offset = "0xE29684", VA = "0xE29684")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6001168")]
	[Address(RVA = "0xE28EDC", Offset = "0xE28EDC", VA = "0xE28EDC")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001169")]
	[Address(RVA = "0xE58DE4", Offset = "0xE58DE4", VA = "0xE58DE4")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600116A")]
	[Address(RVA = "0xE58E74", Offset = "0xE58E74", VA = "0xE58E74")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116B")]
	[Address(RVA = "0xE58EF4", Offset = "0xE58EF4", VA = "0xE58EF4")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600116C")]
	[Address(RVA = "0xE58F84", Offset = "0xE58F84", VA = "0xE58F84")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116D")]
	[Address(RVA = "0xE59004", Offset = "0xE59004", VA = "0xE59004")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600116E")]
	[Address(RVA = "0xE59084", Offset = "0xE59084", VA = "0xE59084")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600116F")]
	[Address(RVA = "0xE59114", Offset = "0xE59114", VA = "0xE59114")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001170")]
	[Address(RVA = "0xE59194", Offset = "0xE59194", VA = "0xE59194")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001171")]
	[Address(RVA = "0xE59224", Offset = "0xE59224", VA = "0xE59224")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001172")]
	[Address(RVA = "0xE592A4", Offset = "0xE592A4", VA = "0xE592A4")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001173")]
	[Address(RVA = "0xE59334", Offset = "0xE59334", VA = "0xE59334")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001174")]
	[Address(RVA = "0xE593B4", Offset = "0xE593B4", VA = "0xE593B4")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001175")]
	[Address(RVA = "0xE5945C", Offset = "0xE5945C", VA = "0xE5945C")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001176")]
	[Address(RVA = "0xE594FC", Offset = "0xE594FC", VA = "0xE594FC")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001177")]
	[Address(RVA = "0xE59570", Offset = "0xE59570", VA = "0xE59570")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001178")]
	[Address(RVA = "0xE349D8", Offset = "0xE349D8", VA = "0xE349D8")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001179")]
	[Address(RVA = "0xE34AE0", Offset = "0xE34AE0", VA = "0xE34AE0")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600117A")]
	[Address(RVA = "0xE34BE4", Offset = "0xE34BE4", VA = "0xE34BE4")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600117B")]
	[Address(RVA = "0xE34CD8", Offset = "0xE34CD8", VA = "0xE34CD8")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600117C")]
	[Address(RVA = "0xE34DCC", Offset = "0xE34DCC", VA = "0xE34DCC")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600117D")]
	[Address(RVA = "0xE34EC0", Offset = "0xE34EC0", VA = "0xE34EC0")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600117E")]
	[Address(RVA = "0xE348DC", Offset = "0xE348DC", VA = "0xE348DC")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600117F")]
	[Address(RVA = "0xE3CD88", Offset = "0xE3CD88", VA = "0xE3CD88")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6001180")]
	[Address(RVA = "0xE3CE54", Offset = "0xE3CE54", VA = "0xE3CE54")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6001181")]
	[Address(RVA = "0xE3CF20", Offset = "0xE3CF20", VA = "0xE3CF20")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001182")]
	[Address(RVA = "0xE3CFEC", Offset = "0xE3CFEC", VA = "0xE3CFEC")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001183")]
	[Address(RVA = "0xE3D0B8", Offset = "0xE3D0B8", VA = "0xE3D0B8")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6001184")]
	[Address(RVA = "0xE3D184", Offset = "0xE3D184", VA = "0xE3D184")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6001185")]
	[Address(RVA = "0xE3D250", Offset = "0xE3D250", VA = "0xE3D250")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6001186")]
	[Address(RVA = "0xE595F0", Offset = "0xE595F0", VA = "0xE595F0")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001187")]
	[Address(RVA = "0xE59680", Offset = "0xE59680", VA = "0xE59680")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001188")]
	[Address(RVA = "0xE59700", Offset = "0xE59700", VA = "0xE59700")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001189")]
	[Address(RVA = "0xE59790", Offset = "0xE59790", VA = "0xE59790")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600118A")]
	[Address(RVA = "0xE59810", Offset = "0xE59810", VA = "0xE59810")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600118B")]
	[Address(RVA = "0xE598A0", Offset = "0xE598A0", VA = "0xE598A0")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600118C")]
	[Address(RVA = "0xE59920", Offset = "0xE59920", VA = "0xE59920")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600118D")]
	[Address(RVA = "0xE599B0", Offset = "0xE599B0", VA = "0xE599B0")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600118E")]
	[Address(RVA = "0xE59A30", Offset = "0xE59A30", VA = "0xE59A30")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600118F")]
	[Address(RVA = "0xE59AC0", Offset = "0xE59AC0", VA = "0xE59AC0")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001190")]
	[Address(RVA = "0xE59B40", Offset = "0xE59B40", VA = "0xE59B40")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001191")]
	[Address(RVA = "0xE59BD0", Offset = "0xE59BD0", VA = "0xE59BD0")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001192")]
	[Address(RVA = "0xE59C50", Offset = "0xE59C50", VA = "0xE59C50")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001193")]
	[Address(RVA = "0xE59CD0", Offset = "0xE59CD0", VA = "0xE59CD0")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001194")]
	[Address(RVA = "0xE59D50", Offset = "0xE59D50", VA = "0xE59D50")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001195")]
	[Address(RVA = "0xE59DD0", Offset = "0xE59DD0", VA = "0xE59DD0")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001196")]
	[Address(RVA = "0xE59E50", Offset = "0xE59E50", VA = "0xE59E50")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001197")]
	[Address(RVA = "0xE59ED0", Offset = "0xE59ED0", VA = "0xE59ED0")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001198")]
	[Address(RVA = "0xE59F98", Offset = "0xE59F98", VA = "0xE59F98")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001199")]
	[Address(RVA = "0xE5A020", Offset = "0xE5A020", VA = "0xE5A020")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x600119A")]
	[Address(RVA = "0xE5A094", Offset = "0xE5A094", VA = "0xE5A094")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119B")]
	[Address(RVA = "0xE5A114", Offset = "0xE5A114", VA = "0xE5A114")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600119C")]
	[Address(RVA = "0xE5A1A4", Offset = "0xE5A1A4", VA = "0xE5A1A4")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119D")]
	[Address(RVA = "0xE5A224", Offset = "0xE5A224", VA = "0xE5A224")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119E")]
	[Address(RVA = "0xE5A2A4", Offset = "0xE5A2A4", VA = "0xE5A2A4")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600119F")]
	[Address(RVA = "0xE5A324", Offset = "0xE5A324", VA = "0xE5A324")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xE5A3A4", Offset = "0xE5A3A4", VA = "0xE5A3A4")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xE5A43C", Offset = "0xE5A43C", VA = "0xE5A43C")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xE5A4D4", Offset = "0xE5A4D4", VA = "0xE5A4D4")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xE5A548", Offset = "0xE5A548", VA = "0xE5A548")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xE5A5C8", Offset = "0xE5A5C8", VA = "0xE5A5C8")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xE5A63C", Offset = "0xE5A63C", VA = "0xE5A63C")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xE5A6B0", Offset = "0xE5A6B0", VA = "0xE5A6B0")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xE5A730", Offset = "0xE5A730", VA = "0xE5A730")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xE5A7A4", Offset = "0xE5A7A4", VA = "0xE5A7A4")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xE5A818", Offset = "0xE5A818", VA = "0xE5A818")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xE30364", Offset = "0xE30364", VA = "0xE30364")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xE3048C", Offset = "0xE3048C", VA = "0xE3048C")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xE30268", Offset = "0xE30268", VA = "0xE30268")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xE305E8", Offset = "0xE305E8", VA = "0xE305E8")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xE30714", Offset = "0xE30714", VA = "0xE30714")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xE30840", Offset = "0xE30840", VA = "0xE30840")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xE3094C", Offset = "0xE3094C", VA = "0xE3094C")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xE30A40", Offset = "0xE30A40", VA = "0xE30A40")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xE30B34", Offset = "0xE30B34", VA = "0xE30B34")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xE30C28", Offset = "0xE30C28", VA = "0xE30C28")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xE30D1C", Offset = "0xE30D1C", VA = "0xE30D1C")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xE30E10", Offset = "0xE30E10", VA = "0xE30E10")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xE2E074", Offset = "0xE2E074", VA = "0xE2E074")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xE2DF78", Offset = "0xE2DF78", VA = "0xE2DF78")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xE2E18C", Offset = "0xE2E18C", VA = "0xE2E18C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xE2E2B0", Offset = "0xE2E2B0", VA = "0xE2E2B0")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xE2E458", Offset = "0xE2E458", VA = "0xE2E458")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xE2E5B0", Offset = "0xE2E5B0", VA = "0xE2E5B0")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xE2E6B4", Offset = "0xE2E6B4", VA = "0xE2E6B4")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xE2E80C", Offset = "0xE2E80C", VA = "0xE2E80C")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xE2E910", Offset = "0xE2E910", VA = "0xE2E910")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xE2EA04", Offset = "0xE2EA04", VA = "0xE2EA04")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xE2EAE8", Offset = "0xE2EAE8", VA = "0xE2EAE8")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xE2EBCC", Offset = "0xE2EBCC", VA = "0xE2EBCC")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xE2ED0C", Offset = "0xE2ED0C", VA = "0xE2ED0C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xE2EE30", Offset = "0xE2EE30", VA = "0xE2EE30")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xE2EFB0", Offset = "0xE2EFB0", VA = "0xE2EFB0")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xE2F100", Offset = "0xE2F100", VA = "0xE2F100")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xE2F278", Offset = "0xE2F278", VA = "0xE2F278")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xE2F3AC", Offset = "0xE2F3AC", VA = "0xE2F3AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xE2F490", Offset = "0xE2F490", VA = "0xE2F490")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xE2F5AC", Offset = "0xE2F5AC", VA = "0xE2F5AC")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xE2F6D8", Offset = "0xE2F6D8", VA = "0xE2F6D8")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xE2F7CC", Offset = "0xE2F7CC", VA = "0xE2F7CC")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xE2F900", Offset = "0xE2F900", VA = "0xE2F900")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xE2FA60", Offset = "0xE2FA60", VA = "0xE2FA60")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xE2FB64", Offset = "0xE2FB64", VA = "0xE2FB64")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xE2FC60", Offset = "0xE2FC60", VA = "0xE2FC60")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xE2FD5C", Offset = "0xE2FD5C", VA = "0xE2FD5C")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xE2FE90", Offset = "0xE2FE90", VA = "0xE2FE90")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xE2FFBC", Offset = "0xE2FFBC", VA = "0xE2FFBC")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xE2D8FC", Offset = "0xE2D8FC", VA = "0xE2D8FC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xE2DA50", Offset = "0xE2DA50", VA = "0xE2DA50")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xE2DB8C", Offset = "0xE2DB8C", VA = "0xE2DB8C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xE2DCB0", Offset = "0xE2DCB0", VA = "0xE2DCB0")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xE2DDBC", Offset = "0xE2DDBC", VA = "0xE2DDBC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xE2DEB8", Offset = "0xE2DEB8", VA = "0xE2DEB8")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xE2D648", Offset = "0xE2D648", VA = "0xE2D648")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xE3D4B8", Offset = "0xE3D4B8", VA = "0xE3D4B8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xE3D6E4", Offset = "0xE3D6E4", VA = "0xE3D6E4")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xE3D878", Offset = "0xE3D878", VA = "0xE3D878")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xE3D958", Offset = "0xE3D958", VA = "0xE3D958")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xE3DA50", Offset = "0xE3DA50", VA = "0xE3DA50")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xE3DB58", Offset = "0xE3DB58", VA = "0xE3DB58")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xE3DC48", Offset = "0xE3DC48", VA = "0xE3DC48")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xE3DD40", Offset = "0xE3DD40", VA = "0xE3DD40")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xE3DE48", Offset = "0xE3DE48", VA = "0xE3DE48")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xE3DF38", Offset = "0xE3DF38", VA = "0xE3DF38")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xE3E030", Offset = "0xE3E030", VA = "0xE3E030")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xE3E138", Offset = "0xE3E138", VA = "0xE3E138")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xE3E228", Offset = "0xE3E228", VA = "0xE3E228")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xE3E320", Offset = "0xE3E320", VA = "0xE3E320")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xE3E428", Offset = "0xE3E428", VA = "0xE3E428")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xE3E518", Offset = "0xE3E518", VA = "0xE3E518")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xE3E5F8", Offset = "0xE3E5F8", VA = "0xE3E5F8")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xE3E6F0", Offset = "0xE3E6F0", VA = "0xE3E6F0")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xE3E840", Offset = "0xE3E840", VA = "0xE3E840")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xE3E920", Offset = "0xE3E920", VA = "0xE3E920")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xE29CAC", Offset = "0xE29CAC", VA = "0xE29CAC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xE29DE0", Offset = "0xE29DE0", VA = "0xE29DE0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xE29F58", Offset = "0xE29F58", VA = "0xE29F58")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xE2A09C", Offset = "0xE2A09C", VA = "0xE2A09C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xE2A1D0", Offset = "0xE2A1D0", VA = "0xE2A1D0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xE2A2DC", Offset = "0xE2A2DC", VA = "0xE2A2DC")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xE2A3D0", Offset = "0xE2A3D0", VA = "0xE2A3D0")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xE2A4C4", Offset = "0xE2A4C4", VA = "0xE2A4C4")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xE2A5B8", Offset = "0xE2A5B8", VA = "0xE2A5B8")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xE2A6AC", Offset = "0xE2A6AC", VA = "0xE2A6AC")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xE2A7A0", Offset = "0xE2A7A0", VA = "0xE2A7A0")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xE2A8A8", Offset = "0xE2A8A8", VA = "0xE2A8A8")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xE2A9F8", Offset = "0xE2A9F8", VA = "0xE2A9F8")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xE29BB0", Offset = "0xE29BB0", VA = "0xE29BB0")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xE5A898", Offset = "0xE5A898", VA = "0xE5A898")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xE5A928", Offset = "0xE5A928", VA = "0xE5A928")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xE5A9A8", Offset = "0xE5A9A8", VA = "0xE5A9A8")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xE5AA1C", Offset = "0xE5AA1C", VA = "0xE5AA1C")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001200")]
	[Address(RVA = "0xE5AA9C", Offset = "0xE5AA9C", VA = "0xE5AA9C")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001201")]
	[Address(RVA = "0xE5AB2C", Offset = "0xE5AB2C", VA = "0xE5AB2C")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001202")]
	[Address(RVA = "0xE5ABAC", Offset = "0xE5ABAC", VA = "0xE5ABAC")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001203")]
	[Address(RVA = "0xE5AC3C", Offset = "0xE5AC3C", VA = "0xE5AC3C")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001204")]
	[Address(RVA = "0xE5ACBC", Offset = "0xE5ACBC", VA = "0xE5ACBC")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001205")]
	[Address(RVA = "0xE5AD4C", Offset = "0xE5AD4C", VA = "0xE5AD4C")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001206")]
	[Address(RVA = "0xE5ADCC", Offset = "0xE5ADCC", VA = "0xE5ADCC")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001207")]
	[Address(RVA = "0xE5AE5C", Offset = "0xE5AE5C", VA = "0xE5AE5C")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001208")]
	[Address(RVA = "0xE5AEDC", Offset = "0xE5AEDC", VA = "0xE5AEDC")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001209")]
	[Address(RVA = "0xE5AF6C", Offset = "0xE5AF6C", VA = "0xE5AF6C")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120A")]
	[Address(RVA = "0xE5AFEC", Offset = "0xE5AFEC", VA = "0xE5AFEC")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600120B")]
	[Address(RVA = "0xE5B07C", Offset = "0xE5B07C", VA = "0xE5B07C")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120C")]
	[Address(RVA = "0xE5B104", Offset = "0xE5B104", VA = "0xE5B104")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600120D")]
	[Address(RVA = "0xE5B194", Offset = "0xE5B194", VA = "0xE5B194")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600120E")]
	[Address(RVA = "0xE5B214", Offset = "0xE5B214", VA = "0xE5B214")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600120F")]
	[Address(RVA = "0xE5B2A4", Offset = "0xE5B2A4", VA = "0xE5B2A4")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001210")]
	[Address(RVA = "0xE5B324", Offset = "0xE5B324", VA = "0xE5B324")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001211")]
	[Address(RVA = "0xE5B3B4", Offset = "0xE5B3B4", VA = "0xE5B3B4")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001212")]
	[Address(RVA = "0xE5B434", Offset = "0xE5B434", VA = "0xE5B434")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001213")]
	[Address(RVA = "0xE5B4C4", Offset = "0xE5B4C4", VA = "0xE5B4C4")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001214")]
	[Address(RVA = "0xE5B544", Offset = "0xE5B544", VA = "0xE5B544")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001215")]
	[Address(RVA = "0xE5B5D4", Offset = "0xE5B5D4", VA = "0xE5B5D4")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001216")]
	[Address(RVA = "0xE5B654", Offset = "0xE5B654", VA = "0xE5B654")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001217")]
	[Address(RVA = "0xE5B6E4", Offset = "0xE5B6E4", VA = "0xE5B6E4")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001218")]
	[Address(RVA = "0xE5B764", Offset = "0xE5B764", VA = "0xE5B764")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001219")]
	[Address(RVA = "0xE5B7F4", Offset = "0xE5B7F4", VA = "0xE5B7F4")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121A")]
	[Address(RVA = "0xE5B87C", Offset = "0xE5B87C", VA = "0xE5B87C")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600121B")]
	[Address(RVA = "0xE5B90C", Offset = "0xE5B90C", VA = "0xE5B90C")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121C")]
	[Address(RVA = "0xE5B994", Offset = "0xE5B994", VA = "0xE5B994")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600121D")]
	[Address(RVA = "0xE5BA38", Offset = "0xE5BA38", VA = "0xE5BA38")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600121E")]
	[Address(RVA = "0xE5BAB8", Offset = "0xE5BAB8", VA = "0xE5BAB8")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600121F")]
	[Address(RVA = "0xE5BB48", Offset = "0xE5BB48", VA = "0xE5BB48")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001220")]
	[Address(RVA = "0xE5BBC8", Offset = "0xE5BBC8", VA = "0xE5BBC8")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001221")]
	[Address(RVA = "0xE5BC58", Offset = "0xE5BC58", VA = "0xE5BC58")]
	public static extern float CSharp_AkInitSettings_fDebugOutOfRangeLimit_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001222")]
	[Address(RVA = "0xE5BCD8", Offset = "0xE5BCD8", VA = "0xE5BCD8")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001223")]
	[Address(RVA = "0xE5BD68", Offset = "0xE5BD68", VA = "0xE5BD68")]
	public static extern bool CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001224")]
	[Address(RVA = "0xE5BDF0", Offset = "0xE5BDF0", VA = "0xE5BDF0")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001225")]
	[Address(RVA = "0xE5BE64", Offset = "0xE5BE64", VA = "0xE5BE64")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001226")]
	[Address(RVA = "0xE5BEE4", Offset = "0xE5BEE4", VA = "0xE5BEE4")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001227")]
	[Address(RVA = "0xE5BF74", Offset = "0xE5BF74", VA = "0xE5BF74")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001228")]
	[Address(RVA = "0xE5BFF4", Offset = "0xE5BFF4", VA = "0xE5BFF4")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001229")]
	[Address(RVA = "0xE5C084", Offset = "0xE5C084", VA = "0xE5C084")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122A")]
	[Address(RVA = "0xE5C104", Offset = "0xE5C104", VA = "0xE5C104")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600122B")]
	[Address(RVA = "0xE5C194", Offset = "0xE5C194", VA = "0xE5C194")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122C")]
	[Address(RVA = "0xE5C214", Offset = "0xE5C214", VA = "0xE5C214")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600122D")]
	[Address(RVA = "0xE5C294", Offset = "0xE5C294", VA = "0xE5C294")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600122E")]
	[Address(RVA = "0xE5C308", Offset = "0xE5C308", VA = "0xE5C308")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600122F")]
	[Address(RVA = "0xE5C398", Offset = "0xE5C398", VA = "0xE5C398")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6001230")]
	[Address(RVA = "0xE5C40C", Offset = "0xE5C40C", VA = "0xE5C40C")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001231")]
	[Address(RVA = "0xE3E9F8", Offset = "0xE3E9F8", VA = "0xE3E9F8")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6001232")]
	[Address(RVA = "0xE3EAE8", Offset = "0xE3EAE8", VA = "0xE3EAE8")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001233")]
	[Address(RVA = "0xE3EC08", Offset = "0xE3EC08", VA = "0xE3EC08")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001234")]
	[Address(RVA = "0xE3ED20", Offset = "0xE3ED20", VA = "0xE3ED20")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001235")]
	[Address(RVA = "0xE3EE04", Offset = "0xE3EE04", VA = "0xE3EE04")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001236")]
	[Address(RVA = "0xE3EEF4", Offset = "0xE3EEF4", VA = "0xE3EEF4")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001237")]
	[Address(RVA = "0xE3EFE4", Offset = "0xE3EFE4", VA = "0xE3EFE4")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001238")]
	[Address(RVA = "0xE3F0D4", Offset = "0xE3F0D4", VA = "0xE3F0D4")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001239")]
	[Address(RVA = "0xE3F1DC", Offset = "0xE3F1DC", VA = "0xE3F1DC")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x600123A")]
	[Address(RVA = "0xE3F304", Offset = "0xE3F304", VA = "0xE3F304")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600123B")]
	[Address(RVA = "0xE3F42C", Offset = "0xE3F42C", VA = "0xE3F42C")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x600123C")]
	[Address(RVA = "0xE3F55C", Offset = "0xE3F55C", VA = "0xE3F55C")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600123D")]
	[Address(RVA = "0xE3F66C", Offset = "0xE3F66C", VA = "0xE3F66C")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x600123E")]
	[Address(RVA = "0xE3F754", Offset = "0xE3F754", VA = "0xE3F754")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x600123F")]
	[Address(RVA = "0xE3F834", Offset = "0xE3F834", VA = "0xE3F834")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001240")]
	[Address(RVA = "0xE3F90C", Offset = "0xE3F90C", VA = "0xE3F90C")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001241")]
	[Address(RVA = "0xE3F9F0", Offset = "0xE3F9F0", VA = "0xE3F9F0")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_0(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001242")]
	[Address(RVA = "0xE3FB10", Offset = "0xE3FB10", VA = "0xE3FB10")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001243")]
	[Address(RVA = "0xE3FC08", Offset = "0xE3FC08", VA = "0xE3FC08")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001244")]
	[Address(RVA = "0xE3FE64", Offset = "0xE3FE64", VA = "0xE3FE64")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001245")]
	[Address(RVA = "0xE400F0", Offset = "0xE400F0", VA = "0xE400F0")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001246")]
	[Address(RVA = "0xE4033C", Offset = "0xE4033C", VA = "0xE4033C")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001247")]
	[Address(RVA = "0xE404E8", Offset = "0xE404E8", VA = "0xE404E8")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001248")]
	[Address(RVA = "0xE4073C", Offset = "0xE4073C", VA = "0xE4073C")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001249")]
	[Address(RVA = "0xE409E0", Offset = "0xE409E0", VA = "0xE409E0")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600124A")]
	[Address(RVA = "0xE40C44", Offset = "0xE40C44", VA = "0xE40C44")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600124B")]
	[Address(RVA = "0xE40E08", Offset = "0xE40E08", VA = "0xE40E08")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600124C")]
	[Address(RVA = "0xE40F94", Offset = "0xE40F94", VA = "0xE40F94")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600124D")]
	[Address(RVA = "0xE41128", Offset = "0xE41128", VA = "0xE41128")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600124E")]
	[Address(RVA = "0xE412A4", Offset = "0xE412A4", VA = "0xE412A4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600124F")]
	[Address(RVA = "0xE41408", Offset = "0xE41408", VA = "0xE41408")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001250")]
	[Address(RVA = "0xE41510", Offset = "0xE41510", VA = "0xE41510")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001251")]
	[Address(RVA = "0xE41684", Offset = "0xE41684", VA = "0xE41684")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001252")]
	[Address(RVA = "0xE41830", Offset = "0xE41830", VA = "0xE41830")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001253")]
	[Address(RVA = "0xE419C4", Offset = "0xE419C4", VA = "0xE419C4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001254")]
	[Address(RVA = "0xE41B40", Offset = "0xE41B40", VA = "0xE41B40")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001255")]
	[Address(RVA = "0xE41C60", Offset = "0xE41C60", VA = "0xE41C60")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001256")]
	[Address(RVA = "0xE41DE0", Offset = "0xE41DE0", VA = "0xE41DE0")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001257")]
	[Address(RVA = "0xE41F3C", Offset = "0xE41F3C", VA = "0xE41F3C")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001258")]
	[Address(RVA = "0xE4202C", Offset = "0xE4202C", VA = "0xE4202C")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001259")]
	[Address(RVA = "0xE42104", Offset = "0xE42104", VA = "0xE42104")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x600125A")]
	[Address(RVA = "0xE421F0", Offset = "0xE421F0", VA = "0xE421F0")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x600125B")]
	[Address(RVA = "0xE42300", Offset = "0xE42300", VA = "0xE42300")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x600125C")]
	[Address(RVA = "0xE42410", Offset = "0xE42410", VA = "0xE42410")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600125D")]
	[Address(RVA = "0xE424F0", Offset = "0xE424F0", VA = "0xE424F0")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600125E")]
	[Address(RVA = "0xE42600", Offset = "0xE42600", VA = "0xE42600")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600125F")]
	[Address(RVA = "0xE42710", Offset = "0xE42710", VA = "0xE42710")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001260")]
	[Address(RVA = "0xE42894", Offset = "0xE42894", VA = "0xE42894")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001261")]
	[Address(RVA = "0xE42A10", Offset = "0xE42A10", VA = "0xE42A10")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001262")]
	[Address(RVA = "0xE42B74", Offset = "0xE42B74", VA = "0xE42B74")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001263")]
	[Address(RVA = "0xE42CE0", Offset = "0xE42CE0", VA = "0xE42CE0")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001264")]
	[Address(RVA = "0xE42E74", Offset = "0xE42E74", VA = "0xE42E74")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001265")]
	[Address(RVA = "0xE42FF0", Offset = "0xE42FF0", VA = "0xE42FF0")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001266")]
	[Address(RVA = "0xE4317C", Offset = "0xE4317C", VA = "0xE4317C")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001267")]
	[Address(RVA = "0xE43300", Offset = "0xE43300", VA = "0xE43300")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001268")]
	[Address(RVA = "0xE4346C", Offset = "0xE4346C", VA = "0xE4346C")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001269")]
	[Address(RVA = "0xE435E8", Offset = "0xE435E8", VA = "0xE435E8")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600126A")]
	[Address(RVA = "0xE43784", Offset = "0xE43784", VA = "0xE43784")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600126B")]
	[Address(RVA = "0xE43908", Offset = "0xE43908", VA = "0xE43908")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600126C")]
	[Address(RVA = "0xE5C48C", Offset = "0xE5C48C", VA = "0xE5C48C")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600126D")]
	[Address(RVA = "0xE43AC8", Offset = "0xE43AC8", VA = "0xE43AC8")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600126E")]
	[Address(RVA = "0xE5C50C", Offset = "0xE5C50C", VA = "0xE5C50C")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600126F")]
	[Address(RVA = "0xE43C24", Offset = "0xE43C24", VA = "0xE43C24")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001270")]
	[Address(RVA = "0xE43D2C", Offset = "0xE43D2C", VA = "0xE43D2C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001271")]
	[Address(RVA = "0xE43E34", Offset = "0xE43E34", VA = "0xE43E34")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001272")]
	[Address(RVA = "0xE43F70", Offset = "0xE43F70", VA = "0xE43F70")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001273")]
	[Address(RVA = "0xE44048", Offset = "0xE44048", VA = "0xE44048")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001274")]
	[Address(RVA = "0xE44130", Offset = "0xE44130", VA = "0xE44130")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001275")]
	[Address(RVA = "0xE44238", Offset = "0xE44238", VA = "0xE44238")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001276")]
	[Address(RVA = "0xE44328", Offset = "0xE44328", VA = "0xE44328")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001277")]
	[Address(RVA = "0xE44430", Offset = "0xE44430", VA = "0xE44430")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001278")]
	[Address(RVA = "0xE44550", Offset = "0xE44550", VA = "0xE44550")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001279")]
	[Address(RVA = "0xE44658", Offset = "0xE44658", VA = "0xE44658")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600127A")]
	[Address(RVA = "0xE44748", Offset = "0xE44748", VA = "0xE44748")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600127B")]
	[Address(RVA = "0xE44828", Offset = "0xE44828", VA = "0xE44828")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x600127C")]
	[Address(RVA = "0xE44900", Offset = "0xE44900", VA = "0xE44900")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x600127D")]
	[Address(RVA = "0xE44A68", Offset = "0xE44A68", VA = "0xE44A68")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x600127E")]
	[Address(RVA = "0xE44B88", Offset = "0xE44B88", VA = "0xE44B88")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x600127F")]
	[Address(RVA = "0xE44CC8", Offset = "0xE44CC8", VA = "0xE44CC8")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001280")]
	[Address(RVA = "0xE44E2C", Offset = "0xE44E2C", VA = "0xE44E2C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001281")]
	[Address(RVA = "0xE44F90", Offset = "0xE44F90", VA = "0xE44F90")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001282")]
	[Address(RVA = "0xE450F4", Offset = "0xE450F4", VA = "0xE450F4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001283")]
	[Address(RVA = "0xE45238", Offset = "0xE45238", VA = "0xE45238")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001284")]
	[Address(RVA = "0xE45320", Offset = "0xE45320", VA = "0xE45320")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6001285")]
	[Address(RVA = "0xE45404", Offset = "0xE45404", VA = "0xE45404")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001286")]
	[Address(RVA = "0xE4550C", Offset = "0xE4550C", VA = "0xE4550C")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001287")]
	[Address(RVA = "0xE4562C", Offset = "0xE4562C", VA = "0xE4562C")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001288")]
	[Address(RVA = "0xE45734", Offset = "0xE45734", VA = "0xE45734")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001289")]
	[Address(RVA = "0xE45854", Offset = "0xE45854", VA = "0xE45854")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600128A")]
	[Address(RVA = "0xE459F0", Offset = "0xE459F0", VA = "0xE459F0")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600128B")]
	[Address(RVA = "0xE45BA4", Offset = "0xE45BA4", VA = "0xE45BA4")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600128C")]
	[Address(RVA = "0xE45D40", Offset = "0xE45D40", VA = "0xE45D40")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600128D")]
	[Address(RVA = "0xE45EF4", Offset = "0xE45EF4", VA = "0xE45EF4")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600128E")]
	[Address(RVA = "0xE4602C", Offset = "0xE4602C", VA = "0xE4602C")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600128F")]
	[Address(RVA = "0xE4614C", Offset = "0xE4614C", VA = "0xE4614C")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001290")]
	[Address(RVA = "0xE4626C", Offset = "0xE4626C", VA = "0xE4626C")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001291")]
	[Address(RVA = "0xE46304", Offset = "0xE46304", VA = "0xE46304")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001292")]
	[Address(RVA = "0xE46480", Offset = "0xE46480", VA = "0xE46480")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001293")]
	[Address(RVA = "0xE4662C", Offset = "0xE4662C", VA = "0xE4662C")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001294")]
	[Address(RVA = "0xE5C58C", Offset = "0xE5C58C", VA = "0xE5C58C")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001295")]
	[Address(RVA = "0xE467B0", Offset = "0xE467B0", VA = "0xE467B0")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001296")]
	[Address(RVA = "0xE468D4", Offset = "0xE468D4", VA = "0xE468D4")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001297")]
	[Address(RVA = "0xE469F8", Offset = "0xE469F8", VA = "0xE469F8")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001298")]
	[Address(RVA = "0xE46B00", Offset = "0xE46B00", VA = "0xE46B00")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001299")]
	[Address(RVA = "0xE46C84", Offset = "0xE46C84", VA = "0xE46C84")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600129A")]
	[Address(RVA = "0xE46E3C", Offset = "0xE46E3C", VA = "0xE46E3C")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600129B")]
	[Address(RVA = "0xE46FF4", Offset = "0xE46FF4", VA = "0xE46FF4")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x600129C")]
	[Address(RVA = "0xE47190", Offset = "0xE47190", VA = "0xE47190")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600129D")]
	[Address(RVA = "0xE47290", Offset = "0xE47290", VA = "0xE47290")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x600129E")]
	[Address(RVA = "0xE475D8", Offset = "0xE475D8", VA = "0xE475D8")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600129F")]
	[Address(RVA = "0xE476E8", Offset = "0xE476E8", VA = "0xE476E8")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xE47AD8", Offset = "0xE47AD8", VA = "0xE47AD8")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xE47C7C", Offset = "0xE47C7C", VA = "0xE47C7C")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xE47DBC", Offset = "0xE47DBC", VA = "0xE47DBC")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xE47ED4", Offset = "0xE47ED4", VA = "0xE47ED4")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xE48248", Offset = "0xE48248", VA = "0xE48248")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xE483A4", Offset = "0xE483A4", VA = "0xE483A4")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xE487BC", Offset = "0xE487BC", VA = "0xE487BC")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xE489AC", Offset = "0xE489AC", VA = "0xE489AC")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xE48B48", Offset = "0xE48B48", VA = "0xE48B48")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xE48CA4", Offset = "0xE48CA4", VA = "0xE48CA4")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xE48DD8", Offset = "0xE48DD8", VA = "0xE48DD8")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xE48EFC", Offset = "0xE48EFC", VA = "0xE48EFC")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xE49020", Offset = "0xE49020", VA = "0xE49020")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xE49180", Offset = "0xE49180", VA = "0xE49180")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xE49300", Offset = "0xE49300", VA = "0xE49300")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xE4947C", Offset = "0xE4947C", VA = "0xE4947C")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xE49618", Offset = "0xE49618", VA = "0xE49618")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xE4979C", Offset = "0xE4979C", VA = "0xE4979C")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xE49908", Offset = "0xE49908", VA = "0xE49908")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xE49A18", Offset = "0xE49A18", VA = "0xE49A18")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xE49B8C", Offset = "0xE49B8C", VA = "0xE49B8C")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xE49D40", Offset = "0xE49D40", VA = "0xE49D40")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xE49EDC", Offset = "0xE49EDC", VA = "0xE49EDC")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xE4A060", Offset = "0xE4A060", VA = "0xE4A060")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xE4A188", Offset = "0xE4A188", VA = "0xE4A188")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xE4A2D0", Offset = "0xE4A2D0", VA = "0xE4A2D0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xE4A428", Offset = "0xE4A428", VA = "0xE4A428")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xE4A568", Offset = "0xE4A568", VA = "0xE4A568")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xE4A690", Offset = "0xE4A690", VA = "0xE4A690")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xE4A7D0", Offset = "0xE4A7D0", VA = "0xE4A7D0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xE4A940", Offset = "0xE4A940", VA = "0xE4A940")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xE4AA98", Offset = "0xE4AA98", VA = "0xE4AA98")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xE4ABD8", Offset = "0xE4ABD8", VA = "0xE4ABD8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xE4AD64", Offset = "0xE4AD64", VA = "0xE4AD64")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xE4AEE0", Offset = "0xE4AEE0", VA = "0xE4AEE0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xE4B044", Offset = "0xE4B044", VA = "0xE4B044")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xE4B190", Offset = "0xE4B190", VA = "0xE4B190")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xE4B280", Offset = "0xE4B280", VA = "0xE4B280")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xE4B3D4", Offset = "0xE4B3D4", VA = "0xE4B3D4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xE4B568", Offset = "0xE4B568", VA = "0xE4B568")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xE4B6E4", Offset = "0xE4B6E4", VA = "0xE4B6E4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xE4B848", Offset = "0xE4B848", VA = "0xE4B848")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xE4B950", Offset = "0xE4B950", VA = "0xE4B950")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xE4BAA4", Offset = "0xE4BAA4", VA = "0xE4BAA4")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xE4BBF8", Offset = "0xE4BBF8", VA = "0xE4BBF8")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xE4BD70", Offset = "0xE4BD70", VA = "0xE4BD70")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xE4BEB4", Offset = "0xE4BEB4", VA = "0xE4BEB4")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xE4BFCC", Offset = "0xE4BFCC", VA = "0xE4BFCC")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xE4C0CC", Offset = "0xE4C0CC", VA = "0xE4C0CC")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xE4C254", Offset = "0xE4C254", VA = "0xE4C254")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xE4C3C8", Offset = "0xE4C3C8", VA = "0xE4C3C8")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xE4C4E0", Offset = "0xE4C4E0", VA = "0xE4C4E0")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xE4C5F0", Offset = "0xE4C5F0", VA = "0xE4C5F0")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xE4C700", Offset = "0xE4C700", VA = "0xE4C700")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xE4C820", Offset = "0xE4C820", VA = "0xE4C820")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xE4C920", Offset = "0xE4C920", VA = "0xE4C920")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xE4CA4C", Offset = "0xE4CA4C", VA = "0xE4CA4C")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xE4CB60", Offset = "0xE4CB60", VA = "0xE4CB60")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xE4CCEC", Offset = "0xE4CCEC", VA = "0xE4CCEC")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xE4CE90", Offset = "0xE4CE90", VA = "0xE4CE90")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xE4CF98", Offset = "0xE4CF98", VA = "0xE4CF98")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xE4D088", Offset = "0xE4D088", VA = "0xE4D088")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xE4D15C", Offset = "0xE4D15C", VA = "0xE4D15C")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xE4D254", Offset = "0xE4D254", VA = "0xE4D254")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xE4D344", Offset = "0xE4D344", VA = "0xE4D344")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xE4D418", Offset = "0xE4D418", VA = "0xE4D418")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xE4D538", Offset = "0xE4D538", VA = "0xE4D538")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xE4D668", Offset = "0xE4D668", VA = "0xE4D668")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xE4D768", Offset = "0xE4D768", VA = "0xE4D768")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xE4D868", Offset = "0xE4D868", VA = "0xE4D868")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xE4D980", Offset = "0xE4D980", VA = "0xE4D980")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xE4DA80", Offset = "0xE4DA80", VA = "0xE4DA80")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xE4DBB0", Offset = "0xE4DBB0", VA = "0xE4DBB0")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xE4DCA0", Offset = "0xE4DCA0", VA = "0xE4DCA0")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xE4DD80", Offset = "0xE4DD80", VA = "0xE4DD80")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xE4DE58", Offset = "0xE4DE58", VA = "0xE4DE58")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xE4DF24", Offset = "0xE4DF24", VA = "0xE4DF24")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xE4DFF0", Offset = "0xE4DFF0", VA = "0xE4DFF0")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xE3B2A8", Offset = "0xE3B2A8", VA = "0xE3B2A8")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xE3B39C", Offset = "0xE3B39C", VA = "0xE3B39C")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xE3B490", Offset = "0xE3B490", VA = "0xE3B490")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xE3B584", Offset = "0xE3B584", VA = "0xE3B584")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xE3B678", Offset = "0xE3B678", VA = "0xE3B678")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xE3B76C", Offset = "0xE3B76C", VA = "0xE3B76C")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xE3B860", Offset = "0xE3B860", VA = "0xE3B860")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xE3B954", Offset = "0xE3B954", VA = "0xE3B954")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xE3BA48", Offset = "0xE3BA48", VA = "0xE3BA48")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xE3BB3C", Offset = "0xE3BB3C", VA = "0xE3BB3C")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xE3BC30", Offset = "0xE3BC30", VA = "0xE3BC30")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xE3BD24", Offset = "0xE3BD24", VA = "0xE3BD24")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xE3BE18", Offset = "0xE3BE18", VA = "0xE3BE18")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xE3BF0C", Offset = "0xE3BF0C", VA = "0xE3BF0C")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xE3C000", Offset = "0xE3C000", VA = "0xE3C000")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xE3C0F4", Offset = "0xE3C0F4", VA = "0xE3C0F4")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xE3C1E8", Offset = "0xE3C1E8", VA = "0xE3C1E8")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xE3C2DC", Offset = "0xE3C2DC", VA = "0xE3C2DC")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001300")]
	[Address(RVA = "0xE3C3D8", Offset = "0xE3C3D8", VA = "0xE3C3D8")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001301")]
	[Address(RVA = "0xE3B1B4", Offset = "0xE3B1B4", VA = "0xE3B1B4")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001302")]
	[Address(RVA = "0xE4E0BC", Offset = "0xE4E0BC", VA = "0xE4E0BC")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6001303")]
	[Address(RVA = "0xE4E188", Offset = "0xE4E188", VA = "0xE4E188")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6001304")]
	[Address(RVA = "0xE5C60C", Offset = "0xE5C60C", VA = "0xE5C60C")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001305")]
	[Address(RVA = "0xE5C69C", Offset = "0xE5C69C", VA = "0xE5C69C")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001306")]
	[Address(RVA = "0xE5C71C", Offset = "0xE5C71C", VA = "0xE5C71C")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001307")]
	[Address(RVA = "0xE5C7AC", Offset = "0xE5C7AC", VA = "0xE5C7AC")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001308")]
	[Address(RVA = "0xE5C82C", Offset = "0xE5C82C", VA = "0xE5C82C")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001309")]
	[Address(RVA = "0xE5C8BC", Offset = "0xE5C8BC", VA = "0xE5C8BC")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130A")]
	[Address(RVA = "0xE5C93C", Offset = "0xE5C93C", VA = "0xE5C93C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x600130B")]
	[Address(RVA = "0xE5C9B0", Offset = "0xE5C9B0", VA = "0xE5C9B0")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130C")]
	[Address(RVA = "0xE5CA30", Offset = "0xE5CA30", VA = "0xE5CA30")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600130D")]
	[Address(RVA = "0xE5CAC0", Offset = "0xE5CAC0", VA = "0xE5CAC0")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600130E")]
	[Address(RVA = "0xE5CB40", Offset = "0xE5CB40", VA = "0xE5CB40")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600130F")]
	[Address(RVA = "0xE5CBD0", Offset = "0xE5CBD0", VA = "0xE5CBD0")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001310")]
	[Address(RVA = "0xE5CC50", Offset = "0xE5CC50", VA = "0xE5CC50")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6001311")]
	[Address(RVA = "0xE5CCC4", Offset = "0xE5CCC4", VA = "0xE5CCC4")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001312")]
	[Address(RVA = "0xE5CD44", Offset = "0xE5CD44", VA = "0xE5CD44")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001313")]
	[Address(RVA = "0xE5CDD4", Offset = "0xE5CDD4", VA = "0xE5CDD4")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001314")]
	[Address(RVA = "0xE5CE54", Offset = "0xE5CE54", VA = "0xE5CE54")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001315")]
	[Address(RVA = "0xE5CEE4", Offset = "0xE5CEE4", VA = "0xE5CEE4")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001316")]
	[Address(RVA = "0xE5CF64", Offset = "0xE5CF64", VA = "0xE5CF64")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x6001317")]
	[Address(RVA = "0xE5CFD8", Offset = "0xE5CFD8", VA = "0xE5CFD8")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001318")]
	[Address(RVA = "0xE5D058", Offset = "0xE5D058", VA = "0xE5D058")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001319")]
	[Address(RVA = "0xE5D0E8", Offset = "0xE5D0E8", VA = "0xE5D0E8")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131A")]
	[Address(RVA = "0xE5D168", Offset = "0xE5D168", VA = "0xE5D168")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600131B")]
	[Address(RVA = "0xE5D1F8", Offset = "0xE5D1F8", VA = "0xE5D1F8")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131C")]
	[Address(RVA = "0xE5D278", Offset = "0xE5D278", VA = "0xE5D278")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x600131D")]
	[Address(RVA = "0xE5D2EC", Offset = "0xE5D2EC", VA = "0xE5D2EC")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600131E")]
	[Address(RVA = "0xE5D36C", Offset = "0xE5D36C", VA = "0xE5D36C")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600131F")]
	[Address(RVA = "0xE5D3FC", Offset = "0xE5D3FC", VA = "0xE5D3FC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001320")]
	[Address(RVA = "0xE5D47C", Offset = "0xE5D47C", VA = "0xE5D47C")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001321")]
	[Address(RVA = "0xE5D50C", Offset = "0xE5D50C", VA = "0xE5D50C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001322")]
	[Address(RVA = "0xE5D58C", Offset = "0xE5D58C", VA = "0xE5D58C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001323")]
	[Address(RVA = "0xE5D600", Offset = "0xE5D600", VA = "0xE5D600")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001324")]
	[Address(RVA = "0xE5D680", Offset = "0xE5D680", VA = "0xE5D680")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001325")]
	[Address(RVA = "0xE5D710", Offset = "0xE5D710", VA = "0xE5D710")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001326")]
	[Address(RVA = "0xE5D790", Offset = "0xE5D790", VA = "0xE5D790")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001327")]
	[Address(RVA = "0xE5D804", Offset = "0xE5D804", VA = "0xE5D804")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001328")]
	[Address(RVA = "0xE5D884", Offset = "0xE5D884", VA = "0xE5D884")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001329")]
	[Address(RVA = "0xE5D914", Offset = "0xE5D914", VA = "0xE5D914")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132A")]
	[Address(RVA = "0xE5D994", Offset = "0xE5D994", VA = "0xE5D994")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x600132B")]
	[Address(RVA = "0xE5DA08", Offset = "0xE5DA08", VA = "0xE5DA08")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132C")]
	[Address(RVA = "0xE5DA88", Offset = "0xE5DA88", VA = "0xE5DA88")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600132D")]
	[Address(RVA = "0xE5DB18", Offset = "0xE5DB18", VA = "0xE5DB18")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600132E")]
	[Address(RVA = "0xE5DB98", Offset = "0xE5DB98", VA = "0xE5DB98")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600132F")]
	[Address(RVA = "0xE5DC28", Offset = "0xE5DC28", VA = "0xE5DC28")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001330")]
	[Address(RVA = "0xE5DCA8", Offset = "0xE5DCA8", VA = "0xE5DCA8")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001331")]
	[Address(RVA = "0xE5DD38", Offset = "0xE5DD38", VA = "0xE5DD38")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001332")]
	[Address(RVA = "0xE5DDB8", Offset = "0xE5DDB8", VA = "0xE5DDB8")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001333")]
	[Address(RVA = "0xE5DE48", Offset = "0xE5DE48", VA = "0xE5DE48")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001334")]
	[Address(RVA = "0xE5DEC8", Offset = "0xE5DEC8", VA = "0xE5DEC8")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001335")]
	[Address(RVA = "0xE5DF58", Offset = "0xE5DF58", VA = "0xE5DF58")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001336")]
	[Address(RVA = "0xE5DFD8", Offset = "0xE5DFD8", VA = "0xE5DFD8")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001337")]
	[Address(RVA = "0xE5E068", Offset = "0xE5E068", VA = "0xE5E068")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001338")]
	[Address(RVA = "0xE5E0E8", Offset = "0xE5E0E8", VA = "0xE5E0E8")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001339")]
	[Address(RVA = "0xE5E178", Offset = "0xE5E178", VA = "0xE5E178")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133A")]
	[Address(RVA = "0xE5E1F8", Offset = "0xE5E1F8", VA = "0xE5E1F8")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600133B")]
	[Address(RVA = "0xE5E288", Offset = "0xE5E288", VA = "0xE5E288")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133C")]
	[Address(RVA = "0xE5E308", Offset = "0xE5E308", VA = "0xE5E308")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600133D")]
	[Address(RVA = "0xE5E398", Offset = "0xE5E398", VA = "0xE5E398")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600133E")]
	[Address(RVA = "0xE5E418", Offset = "0xE5E418", VA = "0xE5E418")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600133F")]
	[Address(RVA = "0xE5E4A8", Offset = "0xE5E4A8", VA = "0xE5E4A8")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001340")]
	[Address(RVA = "0xE5E528", Offset = "0xE5E528", VA = "0xE5E528")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001341")]
	[Address(RVA = "0xE5E5B8", Offset = "0xE5E5B8", VA = "0xE5E5B8")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001342")]
	[Address(RVA = "0xE5E638", Offset = "0xE5E638", VA = "0xE5E638")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001343")]
	[Address(RVA = "0xE5E6C8", Offset = "0xE5E6C8", VA = "0xE5E6C8")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001344")]
	[Address(RVA = "0xE5E748", Offset = "0xE5E748", VA = "0xE5E748")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001345")]
	[Address(RVA = "0xE5E7D8", Offset = "0xE5E7D8", VA = "0xE5E7D8")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001346")]
	[Address(RVA = "0xE5E858", Offset = "0xE5E858", VA = "0xE5E858")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001347")]
	[Address(RVA = "0xE5E8E8", Offset = "0xE5E8E8", VA = "0xE5E8E8")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001348")]
	[Address(RVA = "0xE5E968", Offset = "0xE5E968", VA = "0xE5E968")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001349")]
	[Address(RVA = "0xE5E9F8", Offset = "0xE5E9F8", VA = "0xE5E9F8")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134A")]
	[Address(RVA = "0xE5EA78", Offset = "0xE5EA78", VA = "0xE5EA78")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600134B")]
	[Address(RVA = "0xE5EB08", Offset = "0xE5EB08", VA = "0xE5EB08")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134C")]
	[Address(RVA = "0xE5EB88", Offset = "0xE5EB88", VA = "0xE5EB88")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600134D")]
	[Address(RVA = "0xE5EC18", Offset = "0xE5EC18", VA = "0xE5EC18")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600134E")]
	[Address(RVA = "0xE5EC98", Offset = "0xE5EC98", VA = "0xE5EC98")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600134F")]
	[Address(RVA = "0xE5ED28", Offset = "0xE5ED28", VA = "0xE5ED28")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001350")]
	[Address(RVA = "0xE5EDA8", Offset = "0xE5EDA8", VA = "0xE5EDA8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6001351")]
	[Address(RVA = "0xE5EE1C", Offset = "0xE5EE1C", VA = "0xE5EE1C")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001352")]
	[Address(RVA = "0xE5EE9C", Offset = "0xE5EE9C", VA = "0xE5EE9C")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001353")]
	[Address(RVA = "0xE5EF2C", Offset = "0xE5EF2C", VA = "0xE5EF2C")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001354")]
	[Address(RVA = "0xE5EFAC", Offset = "0xE5EFAC", VA = "0xE5EFAC")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001355")]
	[Address(RVA = "0xE5F054", Offset = "0xE5F054", VA = "0xE5F054")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001356")]
	[Address(RVA = "0xE5F0E4", Offset = "0xE5F0E4", VA = "0xE5F0E4")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001357")]
	[Address(RVA = "0xE5F158", Offset = "0xE5F158", VA = "0xE5F158")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x6001358")]
	[Address(RVA = "0xE5F1CC", Offset = "0xE5F1CC", VA = "0xE5F1CC")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001359")]
	[Address(RVA = "0xE247A8", Offset = "0xE247A8", VA = "0xE247A8")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x600135A")]
	[Address(RVA = "0xE24890", Offset = "0xE24890", VA = "0xE24890")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600135B")]
	[Address(RVA = "0xE24984", Offset = "0xE24984", VA = "0xE24984")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135C")]
	[Address(RVA = "0xE24A78", Offset = "0xE24A78", VA = "0xE24A78")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600135D")]
	[Address(RVA = "0xE24B6C", Offset = "0xE24B6C", VA = "0xE24B6C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135E")]
	[Address(RVA = "0xE246AC", Offset = "0xE246AC", VA = "0xE246AC")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600135F")]
	[Address(RVA = "0xE261FC", Offset = "0xE261FC", VA = "0xE261FC")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001360")]
	[Address(RVA = "0xE262F0", Offset = "0xE262F0", VA = "0xE262F0")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001361")]
	[Address(RVA = "0xE263EC", Offset = "0xE263EC", VA = "0xE263EC")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6001362")]
	[Address(RVA = "0xE26108", Offset = "0xE26108", VA = "0xE26108")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001363")]
	[Address(RVA = "0xE4E29C", Offset = "0xE4E29C", VA = "0xE4E29C")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001364")]
	[Address(RVA = "0xE4E3CC", Offset = "0xE4E3CC", VA = "0xE4E3CC")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001365")]
	[Address(RVA = "0xE3C7D8", Offset = "0xE3C7D8", VA = "0xE3C7D8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001366")]
	[Address(RVA = "0xE3C918", Offset = "0xE3C918", VA = "0xE3C918")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001367")]
	[Address(RVA = "0xE3C9FC", Offset = "0xE3C9FC", VA = "0xE3C9FC")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001368")]
	[Address(RVA = "0xE3CAE0", Offset = "0xE3CAE0", VA = "0xE3CAE0")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001369")]
	[Address(RVA = "0xE3CBDC", Offset = "0xE3CBDC", VA = "0xE3CBDC")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x600136A")]
	[Address(RVA = "0xE3C6F4", Offset = "0xE3C6F4", VA = "0xE3C6F4")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600136B")]
	[Address(RVA = "0xE5F24C", Offset = "0xE5F24C", VA = "0xE5F24C")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600136C")]
	[Address(RVA = "0xE5F2CC", Offset = "0xE5F2CC", VA = "0xE5F2CC")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600136D")]
	[Address(RVA = "0xE5F34C", Offset = "0xE5F34C", VA = "0xE5F34C")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600136E")]
	[Address(RVA = "0xE5F3C0", Offset = "0xE5F3C0", VA = "0xE5F3C0")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600136F")]
	[Address(RVA = "0xE5F440", Offset = "0xE5F440", VA = "0xE5F440")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001370")]
	[Address(RVA = "0xE5F4C0", Offset = "0xE5F4C0", VA = "0xE5F4C0")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001371")]
	[Address(RVA = "0xE5F540", Offset = "0xE5F540", VA = "0xE5F540")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001372")]
	[Address(RVA = "0xE5F5B4", Offset = "0xE5F5B4", VA = "0xE5F5B4")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001373")]
	[Address(RVA = "0xE5F634", Offset = "0xE5F634", VA = "0xE5F634")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001374")]
	[Address(RVA = "0xE5F6B4", Offset = "0xE5F6B4", VA = "0xE5F6B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001375")]
	[Address(RVA = "0xE5F734", Offset = "0xE5F734", VA = "0xE5F734")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001376")]
	[Address(RVA = "0xE5F7B4", Offset = "0xE5F7B4", VA = "0xE5F7B4")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001377")]
	[Address(RVA = "0xE5F834", Offset = "0xE5F834", VA = "0xE5F834")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001378")]
	[Address(RVA = "0xE5F8B4", Offset = "0xE5F8B4", VA = "0xE5F8B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001379")]
	[Address(RVA = "0xE5F934", Offset = "0xE5F934", VA = "0xE5F934")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137A")]
	[Address(RVA = "0xE5F9B4", Offset = "0xE5F9B4", VA = "0xE5F9B4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137B")]
	[Address(RVA = "0xE5FA34", Offset = "0xE5FA34", VA = "0xE5FA34")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137C")]
	[Address(RVA = "0xE5FAB4", Offset = "0xE5FAB4", VA = "0xE5FAB4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137D")]
	[Address(RVA = "0xE5FB34", Offset = "0xE5FB34", VA = "0xE5FB34")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137E")]
	[Address(RVA = "0xE5FBB4", Offset = "0xE5FBB4", VA = "0xE5FBB4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600137F")]
	[Address(RVA = "0xE5FC34", Offset = "0xE5FC34", VA = "0xE5FC34")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001380")]
	[Address(RVA = "0xE5FCB4", Offset = "0xE5FCB4", VA = "0xE5FCB4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001381")]
	[Address(RVA = "0xE5FD34", Offset = "0xE5FD34", VA = "0xE5FD34")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001382")]
	[Address(RVA = "0xE5FDA8", Offset = "0xE5FDA8", VA = "0xE5FDA8")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001383")]
	[Address(RVA = "0xE23910", Offset = "0xE23910", VA = "0xE23910")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001384")]
	[Address(RVA = "0xE239F4", Offset = "0xE239F4", VA = "0xE239F4")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001385")]
	[Address(RVA = "0xE23B14", Offset = "0xE23B14", VA = "0xE23B14")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001386")]
	[Address(RVA = "0xE23C64", Offset = "0xE23C64", VA = "0xE23C64")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001387")]
	[Address(RVA = "0xE2382C", Offset = "0xE2382C", VA = "0xE2382C")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001388")]
	[Address(RVA = "0xE5FE28", Offset = "0xE5FE28", VA = "0xE5FE28")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001389")]
	[Address(RVA = "0xE5FEA8", Offset = "0xE5FEA8", VA = "0xE5FEA8")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138A")]
	[Address(RVA = "0xE5FF28", Offset = "0xE5FF28", VA = "0xE5FF28")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138B")]
	[Address(RVA = "0xE5FFA8", Offset = "0xE5FFA8", VA = "0xE5FFA8")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138C")]
	[Address(RVA = "0xE60028", Offset = "0xE60028", VA = "0xE60028")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138D")]
	[Address(RVA = "0xE600B0", Offset = "0xE600B0", VA = "0xE600B0")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x600138E")]
	[Address(RVA = "0xE60124", Offset = "0xE60124", VA = "0xE60124")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600138F")]
	[Address(RVA = "0xE601A4", Offset = "0xE601A4", VA = "0xE601A4")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001390")]
	[Address(RVA = "0xE60224", Offset = "0xE60224", VA = "0xE60224")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001391")]
	[Address(RVA = "0xE602A4", Offset = "0xE602A4", VA = "0xE602A4")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001392")]
	[Address(RVA = "0xE60324", Offset = "0xE60324", VA = "0xE60324")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001393")]
	[Address(RVA = "0xE60398", Offset = "0xE60398", VA = "0xE60398")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001394")]
	[Address(RVA = "0xE26914", Offset = "0xE26914", VA = "0xE26914")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001395")]
	[Address(RVA = "0xE269F8", Offset = "0xE269F8", VA = "0xE269F8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001396")]
	[Address(RVA = "0xE26ADC", Offset = "0xE26ADC", VA = "0xE26ADC")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001397")]
	[Address(RVA = "0xE26BC0", Offset = "0xE26BC0", VA = "0xE26BC0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001398")]
	[Address(RVA = "0xE26CA4", Offset = "0xE26CA4", VA = "0xE26CA4")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001399")]
	[Address(RVA = "0xE26D88", Offset = "0xE26D88", VA = "0xE26D88")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139A")]
	[Address(RVA = "0xE26E6C", Offset = "0xE26E6C", VA = "0xE26E6C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139B")]
	[Address(RVA = "0xE26F50", Offset = "0xE26F50", VA = "0xE26F50")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139C")]
	[Address(RVA = "0xE27034", Offset = "0xE27034", VA = "0xE27034")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139D")]
	[Address(RVA = "0xE27118", Offset = "0xE27118", VA = "0xE27118")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139E")]
	[Address(RVA = "0xE271FC", Offset = "0xE271FC", VA = "0xE271FC")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600139F")]
	[Address(RVA = "0xE2731C", Offset = "0xE2731C", VA = "0xE2731C")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xE27408", Offset = "0xE27408", VA = "0xE27408")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xE26830", Offset = "0xE26830", VA = "0xE26830")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xE25A54", Offset = "0xE25A54", VA = "0xE25A54")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xE25B38", Offset = "0xE25B38", VA = "0xE25B38")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xE25C1C", Offset = "0xE25C1C", VA = "0xE25C1C")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xE25D00", Offset = "0xE25D00", VA = "0xE25D00")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xE25DEC", Offset = "0xE25DEC", VA = "0xE25DEC")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xE25970", Offset = "0xE25970", VA = "0xE25970")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xE60418", Offset = "0xE60418", VA = "0xE60418")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xE60498", Offset = "0xE60498", VA = "0xE60498")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xE60518", Offset = "0xE60518", VA = "0xE60518")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xE60598", Offset = "0xE60598", VA = "0xE60598")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xE60618", Offset = "0xE60618", VA = "0xE60618")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xE6068C", Offset = "0xE6068C", VA = "0xE6068C")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xE24F78", Offset = "0xE24F78", VA = "0xE24F78")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xE2505C", Offset = "0xE2505C", VA = "0xE2505C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xE25140", Offset = "0xE25140", VA = "0xE25140")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xE25224", Offset = "0xE25224", VA = "0xE25224")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xE25344", Offset = "0xE25344", VA = "0xE25344")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xE254A0", Offset = "0xE254A0", VA = "0xE254A0")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xE24E94", Offset = "0xE24E94", VA = "0xE24E94")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xE6070C", Offset = "0xE6070C", VA = "0xE6070C")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xE60794", Offset = "0xE60794", VA = "0xE60794")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xE60808", Offset = "0xE60808", VA = "0xE60808")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xE60888", Offset = "0xE60888", VA = "0xE60888")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xE60910", Offset = "0xE60910", VA = "0xE60910")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xE60984", Offset = "0xE60984", VA = "0xE60984")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xE60A04", Offset = "0xE60A04", VA = "0xE60A04")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xE60A94", Offset = "0xE60A94", VA = "0xE60A94")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xE60B04", Offset = "0xE60B04", VA = "0xE60B04")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xE60B78", Offset = "0xE60B78", VA = "0xE60B78")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xE60BF8", Offset = "0xE60BF8", VA = "0xE60BF8")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xE60C68", Offset = "0xE60C68", VA = "0xE60C68")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xE60CF8", Offset = "0xE60CF8", VA = "0xE60CF8")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xE60D6C", Offset = "0xE60D6C", VA = "0xE60D6C")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xE4E540", Offset = "0xE4E540", VA = "0xE4E540")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xE4E6D4", Offset = "0xE4E6D4", VA = "0xE4E6D4")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xE4E850", Offset = "0xE4E850", VA = "0xE4E850")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xE4E970", Offset = "0xE4E970", VA = "0xE4E970")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xE4EA78", Offset = "0xE4EA78", VA = "0xE4EA78")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xE4EBEC", Offset = "0xE4EBEC", VA = "0xE4EBEC")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xE4ED98", Offset = "0xE4ED98", VA = "0xE4ED98")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xE4EF2C", Offset = "0xE4EF2C", VA = "0xE4EF2C")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xE4F064", Offset = "0xE4F064", VA = "0xE4F064")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xE4F184", Offset = "0xE4F184", VA = "0xE4F184")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xE4F284", Offset = "0xE4F284", VA = "0xE4F284")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xE4F358", Offset = "0xE4F358", VA = "0xE4F358")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xE4F460", Offset = "0xE4F460", VA = "0xE4F460")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xE4F568", Offset = "0xE4F568", VA = "0xE4F568")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xE4F690", Offset = "0xE4F690", VA = "0xE4F690")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xE4F7A8", Offset = "0xE4F7A8", VA = "0xE4F7A8")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60013D3")]
	[Address(RVA = "0xE4F8B8", Offset = "0xE4F8B8", VA = "0xE4F8B8")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x60013D4")]
	[Address(RVA = "0xE317A4", Offset = "0xE317A4", VA = "0xE317A4")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xE31898", Offset = "0xE31898", VA = "0xE31898")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xE3198C", Offset = "0xE3198C", VA = "0xE3198C")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xE31A80", Offset = "0xE31A80", VA = "0xE31A80")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xE31B74", Offset = "0xE31B74", VA = "0xE31B74")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xE31C68", Offset = "0xE31C68", VA = "0xE31C68")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xE31D5C", Offset = "0xE31D5C", VA = "0xE31D5C")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xE31E50", Offset = "0xE31E50", VA = "0xE31E50")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xE31F4C", Offset = "0xE31F4C", VA = "0xE31F4C")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xE32040", Offset = "0xE32040", VA = "0xE32040")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xE32134", Offset = "0xE32134", VA = "0xE32134")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xE32228", Offset = "0xE32228", VA = "0xE32228")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xE32324", Offset = "0xE32324", VA = "0xE32324")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xE32418", Offset = "0xE32418", VA = "0xE32418")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xE32514", Offset = "0xE32514", VA = "0xE32514")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xE32608", Offset = "0xE32608", VA = "0xE32608")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xE326FC", Offset = "0xE326FC", VA = "0xE326FC")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xE327F0", Offset = "0xE327F0", VA = "0xE327F0")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xE328E4", Offset = "0xE328E4", VA = "0xE328E4")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xE329D8", Offset = "0xE329D8", VA = "0xE329D8")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xE32ACC", Offset = "0xE32ACC", VA = "0xE32ACC")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xE32BC0", Offset = "0xE32BC0", VA = "0xE32BC0")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xE32CB4", Offset = "0xE32CB4", VA = "0xE32CB4")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xE32DA8", Offset = "0xE32DA8", VA = "0xE32DA8")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xE32E9C", Offset = "0xE32E9C", VA = "0xE32E9C")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xE32F90", Offset = "0xE32F90", VA = "0xE32F90")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xE33084", Offset = "0xE33084", VA = "0xE33084")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xE33178", Offset = "0xE33178", VA = "0xE33178")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xE3326C", Offset = "0xE3326C", VA = "0xE3326C")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xE33360", Offset = "0xE33360", VA = "0xE33360")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xE33454", Offset = "0xE33454", VA = "0xE33454")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xE33548", Offset = "0xE33548", VA = "0xE33548")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xE3363C", Offset = "0xE3363C", VA = "0xE3363C")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xE33730", Offset = "0xE33730", VA = "0xE33730")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xE33824", Offset = "0xE33824", VA = "0xE33824")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xE33918", Offset = "0xE33918", VA = "0xE33918")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xE33A14", Offset = "0xE33A14", VA = "0xE33A14")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xE316B0", Offset = "0xE316B0", VA = "0xE316B0")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xE27818", Offset = "0xE27818", VA = "0xE27818")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xE2790C", Offset = "0xE2790C", VA = "0xE2790C")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xE27A00", Offset = "0xE27A00", VA = "0xE27A00")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xE27AF4", Offset = "0xE27AF4", VA = "0xE27AF4")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xE27BE8", Offset = "0xE27BE8", VA = "0xE27BE8")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xE27CDC", Offset = "0xE27CDC", VA = "0xE27CDC")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001400")]
	[Address(RVA = "0xE27DC0", Offset = "0xE27DC0", VA = "0xE27DC0")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001401")]
	[Address(RVA = "0xE27E98", Offset = "0xE27E98", VA = "0xE27E98")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001402")]
	[Address(RVA = "0xE27FA8", Offset = "0xE27FA8", VA = "0xE27FA8")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001403")]
	[Address(RVA = "0xE280B4", Offset = "0xE280B4", VA = "0xE280B4")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6001404")]
	[Address(RVA = "0xE27724", Offset = "0xE27724", VA = "0xE27724")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001405")]
	[Address(RVA = "0xE4FA6C", Offset = "0xE4FA6C", VA = "0xE4FA6C")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001406")]
	[Address(RVA = "0xE4FBD8", Offset = "0xE4FBD8", VA = "0xE4FBD8")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001407")]
	[Address(RVA = "0xE4FD3C", Offset = "0xE4FD3C", VA = "0xE4FD3C")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001408")]
	[Address(RVA = "0xE4FEC0", Offset = "0xE4FEC0", VA = "0xE4FEC0")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001409")]
	[Address(RVA = "0xE50044", Offset = "0xE50044", VA = "0xE50044")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600140A")]
	[Address(RVA = "0xE50190", Offset = "0xE50190", VA = "0xE50190")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600140B")]
	[Address(RVA = "0xE502AC", Offset = "0xE502AC", VA = "0xE502AC")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600140C")]
	[Address(RVA = "0xE503AC", Offset = "0xE503AC", VA = "0xE503AC")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600140D")]
	[Address(RVA = "0xE5051C", Offset = "0xE5051C", VA = "0xE5051C")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600140E")]
	[Address(RVA = "0xE50688", Offset = "0xE50688", VA = "0xE50688")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600140F")]
	[Address(RVA = "0xE50804", Offset = "0xE50804", VA = "0xE50804")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001410")]
	[Address(RVA = "0xE5093C", Offset = "0xE5093C", VA = "0xE5093C")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001411")]
	[Address(RVA = "0xE50A64", Offset = "0xE50A64", VA = "0xE50A64")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001412")]
	[Address(RVA = "0xE50BAC", Offset = "0xE50BAC", VA = "0xE50BAC")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001413")]
	[Address(RVA = "0xE50CE0", Offset = "0xE50CE0", VA = "0xE50CE0")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001414")]
	[Address(RVA = "0xE50E0C", Offset = "0xE50E0C", VA = "0xE50E0C")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001415")]
	[Address(RVA = "0xE50EEC", Offset = "0xE50EEC", VA = "0xE50EEC")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001416")]
	[Address(RVA = "0xE50FCC", Offset = "0xE50FCC", VA = "0xE50FCC")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001417")]
	[Address(RVA = "0xE51108", Offset = "0xE51108", VA = "0xE51108")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6001418")]
	[Address(RVA = "0xE512A8", Offset = "0xE512A8", VA = "0xE512A8")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001419")]
	[Address(RVA = "0xE513B8", Offset = "0xE513B8", VA = "0xE513B8")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600141A")]
	[Address(RVA = "0xE514B0", Offset = "0xE514B0", VA = "0xE514B0")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600141B")]
	[Address(RVA = "0xE51590", Offset = "0xE51590", VA = "0xE51590")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600141C")]
	[Address(RVA = "0xE51670", Offset = "0xE51670", VA = "0xE51670")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600141D")]
	[Address(RVA = "0xE51750", Offset = "0xE51750", VA = "0xE51750")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600141E")]
	[Address(RVA = "0xE51830", Offset = "0xE51830", VA = "0xE51830")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600141F")]
	[Address(RVA = "0xE51920", Offset = "0xE51920", VA = "0xE51920")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001420")]
	[Address(RVA = "0xE51A10", Offset = "0xE51A10", VA = "0xE51A10")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001421")]
	[Address(RVA = "0xE51AF8", Offset = "0xE51AF8", VA = "0xE51AF8")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001422")]
	[Address(RVA = "0xE51BE0", Offset = "0xE51BE0", VA = "0xE51BE0")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001423")]
	[Address(RVA = "0xE51CC8", Offset = "0xE51CC8", VA = "0xE51CC8")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001424")]
	[Address(RVA = "0xE51DB0", Offset = "0xE51DB0", VA = "0xE51DB0")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001425")]
	[Address(RVA = "0xE51EA8", Offset = "0xE51EA8", VA = "0xE51EA8")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001426")]
	[Address(RVA = "0xE60DEC", Offset = "0xE60DEC", VA = "0xE60DEC")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001427")]
	[Address(RVA = "0xE60E7C", Offset = "0xE60E7C", VA = "0xE60E7C")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001428")]
	[Address(RVA = "0xE60EFC", Offset = "0xE60EFC", VA = "0xE60EFC")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001429")]
	[Address(RVA = "0xE60F8C", Offset = "0xE60F8C", VA = "0xE60F8C")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600142A")]
	[Address(RVA = "0xE6100C", Offset = "0xE6100C", VA = "0xE6100C")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600142B")]
	[Address(RVA = "0xE6109C", Offset = "0xE6109C", VA = "0xE6109C")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600142C")]
	[Address(RVA = "0xE6111C", Offset = "0xE6111C", VA = "0xE6111C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600142D")]
	[Address(RVA = "0xE61190", Offset = "0xE61190", VA = "0xE61190")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600142E")]
	[Address(RVA = "0xE61220", Offset = "0xE61220", VA = "0xE61220")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600142F")]
	[Address(RVA = "0xE612A0", Offset = "0xE612A0", VA = "0xE612A0")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001430")]
	[Address(RVA = "0xE61330", Offset = "0xE61330", VA = "0xE61330")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001431")]
	[Address(RVA = "0xE613C8", Offset = "0xE613C8", VA = "0xE613C8")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001432")]
	[Address(RVA = "0xE61458", Offset = "0xE61458", VA = "0xE61458")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001433")]
	[Address(RVA = "0xE614E8", Offset = "0xE614E8", VA = "0xE614E8")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001434")]
	[Address(RVA = "0xE61570", Offset = "0xE61570", VA = "0xE61570")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001435")]
	[Address(RVA = "0xE615F0", Offset = "0xE615F0", VA = "0xE615F0")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001436")]
	[Address(RVA = "0xE61680", Offset = "0xE61680", VA = "0xE61680")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001437")]
	[Address(RVA = "0xE61700", Offset = "0xE61700", VA = "0xE61700")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001438")]
	[Address(RVA = "0xE61780", Offset = "0xE61780", VA = "0xE61780")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001439")]
	[Address(RVA = "0xE61808", Offset = "0xE61808", VA = "0xE61808")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600143A")]
	[Address(RVA = "0xE61888", Offset = "0xE61888", VA = "0xE61888")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600143B")]
	[Address(RVA = "0xE618FC", Offset = "0xE618FC", VA = "0xE618FC")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600143C")]
	[Address(RVA = "0xE61994", Offset = "0xE61994", VA = "0xE61994")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600143D")]
	[Address(RVA = "0xE61A24", Offset = "0xE61A24", VA = "0xE61A24")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600143E")]
	[Address(RVA = "0xE61AA4", Offset = "0xE61AA4", VA = "0xE61AA4")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600143F")]
	[Address(RVA = "0xE61B34", Offset = "0xE61B34", VA = "0xE61B34")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001440")]
	[Address(RVA = "0xE61BB4", Offset = "0xE61BB4", VA = "0xE61BB4")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001441")]
	[Address(RVA = "0xE61C44", Offset = "0xE61C44", VA = "0xE61C44")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001442")]
	[Address(RVA = "0xE61CC4", Offset = "0xE61CC4", VA = "0xE61CC4")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001443")]
	[Address(RVA = "0xE61D54", Offset = "0xE61D54", VA = "0xE61D54")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001444")]
	[Address(RVA = "0xE61DD4", Offset = "0xE61DD4", VA = "0xE61DD4")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001445")]
	[Address(RVA = "0xE61E64", Offset = "0xE61E64", VA = "0xE61E64")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001446")]
	[Address(RVA = "0xE61EE4", Offset = "0xE61EE4", VA = "0xE61EE4")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001447")]
	[Address(RVA = "0xE61F74", Offset = "0xE61F74", VA = "0xE61F74")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001448")]
	[Address(RVA = "0xE61FF4", Offset = "0xE61FF4", VA = "0xE61FF4")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001449")]
	[Address(RVA = "0xE51F98", Offset = "0xE51F98", VA = "0xE51F98")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x600144A")]
	[Address(RVA = "0xE52060", Offset = "0xE52060", VA = "0xE52060")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x600144B")]
	[Address(RVA = "0xE5212C", Offset = "0xE5212C", VA = "0xE5212C")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x600144C")]
	[Address(RVA = "0xE521F8", Offset = "0xE521F8", VA = "0xE521F8")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x600144D")]
	[Address(RVA = "0xE522C0", Offset = "0xE522C0", VA = "0xE522C0")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x600144E")]
	[Address(RVA = "0xE5238C", Offset = "0xE5238C", VA = "0xE5238C")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x600144F")]
	[Address(RVA = "0xE52458", Offset = "0xE52458", VA = "0xE52458")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6001450")]
	[Address(RVA = "0xE5252C", Offset = "0xE5252C", VA = "0xE5252C")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001451")]
	[Address(RVA = "0xE52604", Offset = "0xE52604", VA = "0xE52604")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6001452")]
	[Address(RVA = "0xE62074", Offset = "0xE62074", VA = "0xE62074")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6001453")]
	[Address(RVA = "0xE620E8", Offset = "0xE620E8", VA = "0xE620E8")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6001454")]
	[Address(RVA = "0xE6215C", Offset = "0xE6215C", VA = "0xE6215C")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001455")]
	[Address(RVA = "0xE621DC", Offset = "0xE621DC", VA = "0xE621DC")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001456")]
	[Address(RVA = "0xE62250", Offset = "0xE62250", VA = "0xE62250")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001457")]
	[Address(RVA = "0xE622E0", Offset = "0xE622E0", VA = "0xE622E0")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001458")]
	[Address(RVA = "0xE62360", Offset = "0xE62360", VA = "0xE62360")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001459")]
	[Address(RVA = "0xE623F0", Offset = "0xE623F0", VA = "0xE623F0")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145A")]
	[Address(RVA = "0xE62470", Offset = "0xE62470", VA = "0xE62470")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600145B")]
	[Address(RVA = "0xE62500", Offset = "0xE62500", VA = "0xE62500")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145C")]
	[Address(RVA = "0xE62580", Offset = "0xE62580", VA = "0xE62580")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600145D")]
	[Address(RVA = "0xE62610", Offset = "0xE62610", VA = "0xE62610")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600145E")]
	[Address(RVA = "0xE62690", Offset = "0xE62690", VA = "0xE62690")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600145F")]
	[Address(RVA = "0xE62720", Offset = "0xE62720", VA = "0xE62720")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001460")]
	[Address(RVA = "0xE627A0", Offset = "0xE627A0", VA = "0xE627A0")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001461")]
	[Address(RVA = "0xE62830", Offset = "0xE62830", VA = "0xE62830")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001462")]
	[Address(RVA = "0xE628B0", Offset = "0xE628B0", VA = "0xE628B0")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001463")]
	[Address(RVA = "0xE62940", Offset = "0xE62940", VA = "0xE62940")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001464")]
	[Address(RVA = "0xE629C0", Offset = "0xE629C0", VA = "0xE629C0")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001465")]
	[Address(RVA = "0xE62A40", Offset = "0xE62A40", VA = "0xE62A40")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001466")]
	[Address(RVA = "0xE62AB4", Offset = "0xE62AB4", VA = "0xE62AB4")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001467")]
	[Address(RVA = "0xE62B4C", Offset = "0xE62B4C", VA = "0xE62B4C")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001468")]
	[Address(RVA = "0xE62BCC", Offset = "0xE62BCC", VA = "0xE62BCC")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001469")]
	[Address(RVA = "0xE62C5C", Offset = "0xE62C5C", VA = "0xE62C5C")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600146A")]
	[Address(RVA = "0xE62D00", Offset = "0xE62D00", VA = "0xE62D00")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600146B")]
	[Address(RVA = "0xE62D90", Offset = "0xE62D90", VA = "0xE62D90")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600146C")]
	[Address(RVA = "0xE62E10", Offset = "0xE62E10", VA = "0xE62E10")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x600146D")]
	[Address(RVA = "0xE62E84", Offset = "0xE62E84", VA = "0xE62E84")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600146E")]
	[Address(RVA = "0xE62F14", Offset = "0xE62F14", VA = "0xE62F14")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600146F")]
	[Address(RVA = "0xE62F94", Offset = "0xE62F94", VA = "0xE62F94")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001470")]
	[Address(RVA = "0xE63024", Offset = "0xE63024", VA = "0xE63024")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001471")]
	[Address(RVA = "0xE630A4", Offset = "0xE630A4", VA = "0xE630A4")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001472")]
	[Address(RVA = "0xE63134", Offset = "0xE63134", VA = "0xE63134")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001473")]
	[Address(RVA = "0xE631B4", Offset = "0xE631B4", VA = "0xE631B4")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001474")]
	[Address(RVA = "0xE63244", Offset = "0xE63244", VA = "0xE63244")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001475")]
	[Address(RVA = "0xE632C4", Offset = "0xE632C4", VA = "0xE632C4")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001476")]
	[Address(RVA = "0xE63354", Offset = "0xE63354", VA = "0xE63354")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001477")]
	[Address(RVA = "0xE633D4", Offset = "0xE633D4", VA = "0xE633D4")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001478")]
	[Address(RVA = "0xE63464", Offset = "0xE63464", VA = "0xE63464")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001479")]
	[Address(RVA = "0xE634E4", Offset = "0xE634E4", VA = "0xE634E4")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600147A")]
	[Address(RVA = "0xE63574", Offset = "0xE63574", VA = "0xE63574")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600147B")]
	[Address(RVA = "0xE635F4", Offset = "0xE635F4", VA = "0xE635F4")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600147C")]
	[Address(RVA = "0xE63684", Offset = "0xE63684", VA = "0xE63684")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600147D")]
	[Address(RVA = "0xE63704", Offset = "0xE63704", VA = "0xE63704")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600147E")]
	[Address(RVA = "0xE63794", Offset = "0xE63794", VA = "0xE63794")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600147F")]
	[Address(RVA = "0xE63814", Offset = "0xE63814", VA = "0xE63814")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001480")]
	[Address(RVA = "0xE638A4", Offset = "0xE638A4", VA = "0xE638A4")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001481")]
	[Address(RVA = "0xE63924", Offset = "0xE63924", VA = "0xE63924")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001482")]
	[Address(RVA = "0xE639A4", Offset = "0xE639A4", VA = "0xE639A4")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001483")]
	[Address(RVA = "0xE63A18", Offset = "0xE63A18", VA = "0xE63A18")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001484")]
	[Address(RVA = "0xE63AB8", Offset = "0xE63AB8", VA = "0xE63AB8")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001485")]
	[Address(RVA = "0xE63B48", Offset = "0xE63B48", VA = "0xE63B48")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001486")]
	[Address(RVA = "0xE63BC8", Offset = "0xE63BC8", VA = "0xE63BC8")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001487")]
	[Address(RVA = "0xE63C58", Offset = "0xE63C58", VA = "0xE63C58")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001488")]
	[Address(RVA = "0xE63CD8", Offset = "0xE63CD8", VA = "0xE63CD8")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001489")]
	[Address(RVA = "0xE63D68", Offset = "0xE63D68", VA = "0xE63D68")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148A")]
	[Address(RVA = "0xE63DE8", Offset = "0xE63DE8", VA = "0xE63DE8")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148B")]
	[Address(RVA = "0xE63E68", Offset = "0xE63E68", VA = "0xE63E68")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600148C")]
	[Address(RVA = "0xE63EDC", Offset = "0xE63EDC", VA = "0xE63EDC")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600148D")]
	[Address(RVA = "0xE63F6C", Offset = "0xE63F6C", VA = "0xE63F6C")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600148E")]
	[Address(RVA = "0xE63FEC", Offset = "0xE63FEC", VA = "0xE63FEC")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600148F")]
	[Address(RVA = "0xE64060", Offset = "0xE64060", VA = "0xE64060")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001490")]
	[Address(RVA = "0xE64108", Offset = "0xE64108", VA = "0xE64108")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001491")]
	[Address(RVA = "0xE64198", Offset = "0xE64198", VA = "0xE64198")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001492")]
	[Address(RVA = "0xE64218", Offset = "0xE64218", VA = "0xE64218")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001493")]
	[Address(RVA = "0xE642A8", Offset = "0xE642A8", VA = "0xE642A8")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001494")]
	[Address(RVA = "0xE64328", Offset = "0xE64328", VA = "0xE64328")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001495")]
	[Address(RVA = "0xE643B8", Offset = "0xE643B8", VA = "0xE643B8")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001496")]
	[Address(RVA = "0xE64438", Offset = "0xE64438", VA = "0xE64438")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001497")]
	[Address(RVA = "0xE644C8", Offset = "0xE644C8", VA = "0xE644C8")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001498")]
	[Address(RVA = "0xE64548", Offset = "0xE64548", VA = "0xE64548")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001499")]
	[Address(RVA = "0xE645C8", Offset = "0xE645C8", VA = "0xE645C8")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600149A")]
	[Address(RVA = "0xE6463C", Offset = "0xE6463C", VA = "0xE6463C")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600149B")]
	[Address(RVA = "0xE646CC", Offset = "0xE646CC", VA = "0xE646CC")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600149C")]
	[Address(RVA = "0xE6474C", Offset = "0xE6474C", VA = "0xE6474C")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x600149D")]
	[Address(RVA = "0xE647C0", Offset = "0xE647C0", VA = "0xE647C0")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600149E")]
	[Address(RVA = "0xE64850", Offset = "0xE64850", VA = "0xE64850")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600149F")]
	[Address(RVA = "0xE648D0", Offset = "0xE648D0", VA = "0xE648D0")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xE64960", Offset = "0xE64960", VA = "0xE64960")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A1")]
	[Address(RVA = "0xE649E0", Offset = "0xE649E0", VA = "0xE649E0")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xE64A84", Offset = "0xE64A84", VA = "0xE64A84")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A3")]
	[Address(RVA = "0xE64B04", Offset = "0xE64B04", VA = "0xE64B04")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A4")]
	[Address(RVA = "0xE64B84", Offset = "0xE64B84", VA = "0xE64B84")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A5")]
	[Address(RVA = "0xE64C04", Offset = "0xE64C04", VA = "0xE64C04")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xE64C78", Offset = "0xE64C78", VA = "0xE64C78")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A7")]
	[Address(RVA = "0xE64D08", Offset = "0xE64D08", VA = "0xE64D08")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014A8")]
	[Address(RVA = "0xE35304", Offset = "0xE35304", VA = "0xE35304")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xE35454", Offset = "0xE35454", VA = "0xE35454")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xE35548", Offset = "0xE35548", VA = "0xE35548")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014AB")]
	[Address(RVA = "0xE3563C", Offset = "0xE3563C", VA = "0xE3563C")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xE35730", Offset = "0xE35730", VA = "0xE35730")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xE35824", Offset = "0xE35824", VA = "0xE35824")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xE35918", Offset = "0xE35918", VA = "0xE35918")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xE35A0C", Offset = "0xE35A0C", VA = "0xE35A0C")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xE35B00", Offset = "0xE35B00", VA = "0xE35B00")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xE35BF4", Offset = "0xE35BF4", VA = "0xE35BF4")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xE35CD4", Offset = "0xE35CD4", VA = "0xE35CD4")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xE35E18", Offset = "0xE35E18", VA = "0xE35E18")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xE35F5C", Offset = "0xE35F5C", VA = "0xE35F5C")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xE36060", Offset = "0xE36060", VA = "0xE36060")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xE3618C", Offset = "0xE3618C", VA = "0xE3618C")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xE36298", Offset = "0xE36298", VA = "0xE36298")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xE351E8", Offset = "0xE351E8", VA = "0xE351E8")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xE64D88", Offset = "0xE64D88", VA = "0xE64D88")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xE64E18", Offset = "0xE64E18", VA = "0xE64E18")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xE64E98", Offset = "0xE64E98", VA = "0xE64E98")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xE64F28", Offset = "0xE64F28", VA = "0xE64F28")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xE64FA8", Offset = "0xE64FA8", VA = "0xE64FA8")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xE65038", Offset = "0xE65038", VA = "0xE65038")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xE650B8", Offset = "0xE650B8", VA = "0xE650B8")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xE65148", Offset = "0xE65148", VA = "0xE65148")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xE651C8", Offset = "0xE651C8", VA = "0xE651C8")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xE65258", Offset = "0xE65258", VA = "0xE65258")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xE652D8", Offset = "0xE652D8", VA = "0xE652D8")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xE6534C", Offset = "0xE6534C", VA = "0xE6534C")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xE653DC", Offset = "0xE653DC", VA = "0xE653DC")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xE6546C", Offset = "0xE6546C", VA = "0xE6546C")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xE654FC", Offset = "0xE654FC", VA = "0xE654FC")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xE6558C", Offset = "0xE6558C", VA = "0xE6558C")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xE6561C", Offset = "0xE6561C", VA = "0xE6561C")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xE65690", Offset = "0xE65690", VA = "0xE65690")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xE37BA0", Offset = "0xE37BA0", VA = "0xE37BA0")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xE37CB0", Offset = "0xE37CB0", VA = "0xE37CB0")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xE37D40", Offset = "0xE37D40", VA = "0xE37D40")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xE37E5C", Offset = "0xE37E5C", VA = "0xE37E5C")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xE37EEC", Offset = "0xE37EEC", VA = "0xE37EEC")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xE37F6C", Offset = "0xE37F6C", VA = "0xE37F6C")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xE38060", Offset = "0xE38060", VA = "0xE38060")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xE380E0", Offset = "0xE380E0", VA = "0xE380E0")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xE381D4", Offset = "0xE381D4", VA = "0xE381D4")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xE38254", Offset = "0xE38254", VA = "0xE38254")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xE38348", Offset = "0xE38348", VA = "0xE38348")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xE383C8", Offset = "0xE383C8", VA = "0xE383C8")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xE384BC", Offset = "0xE384BC", VA = "0xE384BC")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xE3853C", Offset = "0xE3853C", VA = "0xE3853C")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60014D9")]
	[Address(RVA = "0xE38630", Offset = "0xE38630", VA = "0xE38630")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014DA")]
	[Address(RVA = "0xE37B20", Offset = "0xE37B20", VA = "0xE37B20")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014DB")]
	[Address(RVA = "0xE526D0", Offset = "0xE526D0", VA = "0xE526D0")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x60014DC")]
	[Address(RVA = "0xE5280C", Offset = "0xE5280C", VA = "0xE5280C")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014DD")]
	[Address(RVA = "0xE52940", Offset = "0xE52940", VA = "0xE52940")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014DE")]
	[Address(RVA = "0xE52A88", Offset = "0xE52A88", VA = "0xE52A88")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xE52C08", Offset = "0xE52C08", VA = "0xE52C08")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xE52D54", Offset = "0xE52D54", VA = "0xE52D54")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xE52EB8", Offset = "0xE52EB8", VA = "0xE52EB8")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xE52FC0", Offset = "0xE52FC0", VA = "0xE52FC0")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xE530B0", Offset = "0xE530B0", VA = "0xE530B0")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xE5324C", Offset = "0xE5324C", VA = "0xE5324C")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xE532FC", Offset = "0xE532FC", VA = "0xE532FC")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xE533DC", Offset = "0xE533DC", VA = "0xE533DC")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xE53510", Offset = "0xE53510", VA = "0xE53510")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xE5365C", Offset = "0xE5365C", VA = "0xE5365C")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xE536F4", Offset = "0xE536F4", VA = "0xE536F4")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xE537FC", Offset = "0xE537FC", VA = "0xE537FC")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xE2B9EC", Offset = "0xE2B9EC", VA = "0xE2B9EC")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xE2BB3C", Offset = "0xE2BB3C", VA = "0xE2BB3C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xE2BC98", Offset = "0xE2BC98", VA = "0xE2BC98")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xE2BDE8", Offset = "0xE2BDE8", VA = "0xE2BDE8")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xE2BF04", Offset = "0xE2BF04", VA = "0xE2BF04")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xE2C054", Offset = "0xE2C054", VA = "0xE2C054")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xE2C170", Offset = "0xE2C170", VA = "0xE2C170")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xE2C2C0", Offset = "0xE2C2C0", VA = "0xE2C2C0")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xE2C3B4", Offset = "0xE2C3B4", VA = "0xE2C3B4")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xE2C4A8", Offset = "0xE2C4A8", VA = "0xE2C4A8")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xE2C59C", Offset = "0xE2C59C", VA = "0xE2C59C")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xE2C690", Offset = "0xE2C690", VA = "0xE2C690")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xE2C784", Offset = "0xE2C784", VA = "0xE2C784")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xE2C878", Offset = "0xE2C878", VA = "0xE2C878")]
	public static extern int CSharp_AkPlatformInitSettings_eAudioAPI_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xE2C96C", Offset = "0xE2C96C", VA = "0xE2C96C")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xE2CA60", Offset = "0xE2CA60", VA = "0xE2CA60")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xE2CB54", Offset = "0xE2CB54", VA = "0xE2CB54")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xE2CC48", Offset = "0xE2CC48", VA = "0xE2CC48")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xE2CD3C", Offset = "0xE2CD3C", VA = "0xE2CD3C")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xE2CE30", Offset = "0xE2CE30", VA = "0xE2CE30")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xE2CF24", Offset = "0xE2CF24", VA = "0xE2CF24")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001500")]
	[Address(RVA = "0xE2D018", Offset = "0xE2D018", VA = "0xE2D018")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001501")]
	[Address(RVA = "0xE2D11C", Offset = "0xE2D11C", VA = "0xE2D11C")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001502")]
	[Address(RVA = "0xE2B884", Offset = "0xE2B884", VA = "0xE2B884")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001503")]
	[Address(RVA = "0xE53934", Offset = "0xE53934", VA = "0xE53934")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001504")]
	[Address(RVA = "0xE65710", Offset = "0xE65710", VA = "0xE65710")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001505")]
	[Address(RVA = "0xE657A0", Offset = "0xE657A0", VA = "0xE657A0")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001506")]
	[Address(RVA = "0xE65820", Offset = "0xE65820", VA = "0xE65820")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6001507")]
	[Address(RVA = "0xE65894", Offset = "0xE65894", VA = "0xE65894")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001508")]
	[Address(RVA = "0xE65914", Offset = "0xE65914", VA = "0xE65914")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001509")]
	[Address(RVA = "0xE659A4", Offset = "0xE659A4", VA = "0xE659A4")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150A")]
	[Address(RVA = "0xE65A24", Offset = "0xE65A24", VA = "0xE65A24")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600150B")]
	[Address(RVA = "0xE65AB4", Offset = "0xE65AB4", VA = "0xE65AB4")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150C")]
	[Address(RVA = "0xE65B34", Offset = "0xE65B34", VA = "0xE65B34")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600150D")]
	[Address(RVA = "0xE65BC4", Offset = "0xE65BC4", VA = "0xE65BC4")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600150E")]
	[Address(RVA = "0xE65C44", Offset = "0xE65C44", VA = "0xE65C44")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600150F")]
	[Address(RVA = "0xE65CD4", Offset = "0xE65CD4", VA = "0xE65CD4")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001510")]
	[Address(RVA = "0xE65D54", Offset = "0xE65D54", VA = "0xE65D54")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001511")]
	[Address(RVA = "0xE65DE4", Offset = "0xE65DE4", VA = "0xE65DE4")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001512")]
	[Address(RVA = "0xE65E64", Offset = "0xE65E64", VA = "0xE65E64")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001513")]
	[Address(RVA = "0xE65EF4", Offset = "0xE65EF4", VA = "0xE65EF4")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001514")]
	[Address(RVA = "0xE65F74", Offset = "0xE65F74", VA = "0xE65F74")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001515")]
	[Address(RVA = "0xE66004", Offset = "0xE66004", VA = "0xE66004")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001516")]
	[Address(RVA = "0xE66084", Offset = "0xE66084", VA = "0xE66084")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001517")]
	[Address(RVA = "0xE66114", Offset = "0xE66114", VA = "0xE66114")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001518")]
	[Address(RVA = "0xE66194", Offset = "0xE66194", VA = "0xE66194")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001519")]
	[Address(RVA = "0xE66224", Offset = "0xE66224", VA = "0xE66224")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151A")]
	[Address(RVA = "0xE662A4", Offset = "0xE662A4", VA = "0xE662A4")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600151B")]
	[Address(RVA = "0xE66334", Offset = "0xE66334", VA = "0xE66334")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151C")]
	[Address(RVA = "0xE663BC", Offset = "0xE663BC", VA = "0xE663BC")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600151D")]
	[Address(RVA = "0xE6644C", Offset = "0xE6644C", VA = "0xE6644C")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600151E")]
	[Address(RVA = "0xE664CC", Offset = "0xE664CC", VA = "0xE664CC")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x600151F")]
	[Address(RVA = "0xE66540", Offset = "0xE66540", VA = "0xE66540")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001520")]
	[Address(RVA = "0xE665C0", Offset = "0xE665C0", VA = "0xE665C0")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001521")]
	[Address(RVA = "0xE66650", Offset = "0xE66650", VA = "0xE66650")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001522")]
	[Address(RVA = "0xE666D0", Offset = "0xE666D0", VA = "0xE666D0")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001523")]
	[Address(RVA = "0xE66760", Offset = "0xE66760", VA = "0xE66760")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001524")]
	[Address(RVA = "0xE667E0", Offset = "0xE667E0", VA = "0xE667E0")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001525")]
	[Address(RVA = "0xE66870", Offset = "0xE66870", VA = "0xE66870")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001526")]
	[Address(RVA = "0xE668F0", Offset = "0xE668F0", VA = "0xE668F0")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001527")]
	[Address(RVA = "0xE66980", Offset = "0xE66980", VA = "0xE66980")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001528")]
	[Address(RVA = "0xE66A00", Offset = "0xE66A00", VA = "0xE66A00")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x6001529")]
	[Address(RVA = "0xE66A74", Offset = "0xE66A74", VA = "0xE66A74")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600152A")]
	[Address(RVA = "0xE53A24", Offset = "0xE53A24", VA = "0xE53A24")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x600152B")]
	[Address(RVA = "0xE53B00", Offset = "0xE53B00", VA = "0xE53B00")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600152C")]
	[Address(RVA = "0xE53BE0", Offset = "0xE53BE0", VA = "0xE53BE0")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x600152D")]
	[Address(RVA = "0xE2AE88", Offset = "0xE2AE88", VA = "0xE2AE88")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600152E")]
	[Address(RVA = "0xE2AFD8", Offset = "0xE2AFD8", VA = "0xE2AFD8")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600152F")]
	[Address(RVA = "0xE2B134", Offset = "0xE2B134", VA = "0xE2B134")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001530")]
	[Address(RVA = "0xE2B284", Offset = "0xE2B284", VA = "0xE2B284")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001531")]
	[Address(RVA = "0xE2B378", Offset = "0xE2B378", VA = "0xE2B378")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001532")]
	[Address(RVA = "0xE2B46C", Offset = "0xE2B46C", VA = "0xE2B46C")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001533")]
	[Address(RVA = "0xE2B568", Offset = "0xE2B568", VA = "0xE2B568")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6001534")]
	[Address(RVA = "0xE2AD20", Offset = "0xE2AD20", VA = "0xE2AD20")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001535")]
	[Address(RVA = "0xE66AF4", Offset = "0xE66AF4", VA = "0xE66AF4")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x6001536")]
	[Address(RVA = "0xE66B68", Offset = "0xE66B68", VA = "0xE66B68")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001537")]
	[Address(RVA = "0xE66BE8", Offset = "0xE66BE8", VA = "0xE66BE8")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6001538")]
	[Address(RVA = "0xE66C5C", Offset = "0xE66C5C", VA = "0xE66C5C")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001539")]
	[Address(RVA = "0xE66CEC", Offset = "0xE66CEC", VA = "0xE66CEC")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153A")]
	[Address(RVA = "0xE66D6C", Offset = "0xE66D6C", VA = "0xE66D6C")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600153B")]
	[Address(RVA = "0xE66DFC", Offset = "0xE66DFC", VA = "0xE66DFC")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153C")]
	[Address(RVA = "0xE66E7C", Offset = "0xE66E7C", VA = "0xE66E7C")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600153D")]
	[Address(RVA = "0xE66F0C", Offset = "0xE66F0C", VA = "0xE66F0C")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600153E")]
	[Address(RVA = "0xE66F8C", Offset = "0xE66F8C", VA = "0xE66F8C")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600153F")]
	[Address(RVA = "0xE6701C", Offset = "0xE6701C", VA = "0xE6701C")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001540")]
	[Address(RVA = "0xE6709C", Offset = "0xE6709C", VA = "0xE6709C")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001541")]
	[Address(RVA = "0xE6712C", Offset = "0xE6712C", VA = "0xE6712C")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001542")]
	[Address(RVA = "0xE671B4", Offset = "0xE671B4", VA = "0xE671B4")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001543")]
	[Address(RVA = "0xE67258", Offset = "0xE67258", VA = "0xE67258")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001544")]
	[Address(RVA = "0xE672D8", Offset = "0xE672D8", VA = "0xE672D8")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001545")]
	[Address(RVA = "0xE67358", Offset = "0xE67358", VA = "0xE67358")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6001546")]
	[Address(RVA = "0xE673CC", Offset = "0xE673CC", VA = "0xE673CC")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001547")]
	[Address(RVA = "0xE6744C", Offset = "0xE6744C", VA = "0xE6744C")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001548")]
	[Address(RVA = "0xE674DC", Offset = "0xE674DC", VA = "0xE674DC")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001549")]
	[Address(RVA = "0xE6755C", Offset = "0xE6755C", VA = "0xE6755C")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600154A")]
	[Address(RVA = "0xE675EC", Offset = "0xE675EC", VA = "0xE675EC")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154B")]
	[Address(RVA = "0xE6766C", Offset = "0xE6766C", VA = "0xE6766C")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600154C")]
	[Address(RVA = "0xE676FC", Offset = "0xE676FC", VA = "0xE676FC")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154D")]
	[Address(RVA = "0xE6777C", Offset = "0xE6777C", VA = "0xE6777C")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600154E")]
	[Address(RVA = "0xE6780C", Offset = "0xE6780C", VA = "0xE6780C")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600154F")]
	[Address(RVA = "0xE6788C", Offset = "0xE6788C", VA = "0xE6788C")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001550")]
	[Address(RVA = "0xE6791C", Offset = "0xE6791C", VA = "0xE6791C")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001551")]
	[Address(RVA = "0xE6799C", Offset = "0xE6799C", VA = "0xE6799C")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001552")]
	[Address(RVA = "0xE67A2C", Offset = "0xE67A2C", VA = "0xE67A2C")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001553")]
	[Address(RVA = "0xE67AAC", Offset = "0xE67AAC", VA = "0xE67AAC")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001554")]
	[Address(RVA = "0xE67B3C", Offset = "0xE67B3C", VA = "0xE67B3C")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001555")]
	[Address(RVA = "0xE67BBC", Offset = "0xE67BBC", VA = "0xE67BBC")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001556")]
	[Address(RVA = "0xE67C4C", Offset = "0xE67C4C", VA = "0xE67C4C")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001557")]
	[Address(RVA = "0xE67CCC", Offset = "0xE67CCC", VA = "0xE67CCC")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001558")]
	[Address(RVA = "0xE67D5C", Offset = "0xE67D5C", VA = "0xE67D5C")]
	public static extern bool CSharp_AkInitializationSettings_useAsyncOpen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001559")]
	[Address(RVA = "0xE67DE4", Offset = "0xE67DE4", VA = "0xE67DE4")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600155A")]
	[Address(RVA = "0xE67E58", Offset = "0xE67E58", VA = "0xE67E58")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600155B")]
	[Address(RVA = "0xE67ED8", Offset = "0xE67ED8", VA = "0xE67ED8")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600155C")]
	[Address(RVA = "0xE67F80", Offset = "0xE67F80", VA = "0xE67F80")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600155D")]
	[Address(RVA = "0xE68030", Offset = "0xE68030", VA = "0xE68030")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600155E")]
	[Address(RVA = "0xE680C8", Offset = "0xE680C8", VA = "0xE680C8")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600155F")]
	[Address(RVA = "0xE68148", Offset = "0xE68148", VA = "0xE68148")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001560")]
	[Address(RVA = "0xE681D8", Offset = "0xE681D8", VA = "0xE681D8")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001561")]
	[Address(RVA = "0xE6824C", Offset = "0xE6824C", VA = "0xE6824C")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001562")]
	[Address(RVA = "0xE682DC", Offset = "0xE682DC", VA = "0xE682DC")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001563")]
	[Address(RVA = "0xE6835C", Offset = "0xE6835C", VA = "0xE6835C")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001564")]
	[Address(RVA = "0xE683EC", Offset = "0xE683EC", VA = "0xE683EC")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001565")]
	[Address(RVA = "0xE6846C", Offset = "0xE6846C", VA = "0xE6846C")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001566")]
	[Address(RVA = "0xE68510", Offset = "0xE68510", VA = "0xE68510")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001567")]
	[Address(RVA = "0xE68590", Offset = "0xE68590", VA = "0xE68590")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001568")]
	[Address(RVA = "0xE68620", Offset = "0xE68620", VA = "0xE68620")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001569")]
	[Address(RVA = "0xE686A0", Offset = "0xE686A0", VA = "0xE686A0")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600156A")]
	[Address(RVA = "0xE68730", Offset = "0xE68730", VA = "0xE68730")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156B")]
	[Address(RVA = "0xE687B0", Offset = "0xE687B0", VA = "0xE687B0")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600156C")]
	[Address(RVA = "0xE68840", Offset = "0xE68840", VA = "0xE68840")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156D")]
	[Address(RVA = "0xE53CF8", Offset = "0xE53CF8", VA = "0xE53CF8")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156E")]
	[Address(RVA = "0xE53E4C", Offset = "0xE53E4C", VA = "0xE53E4C")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600156F")]
	[Address(RVA = "0xE53F40", Offset = "0xE53F40", VA = "0xE53F40")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001570")]
	[Address(RVA = "0xE54018", Offset = "0xE54018", VA = "0xE54018")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001571")]
	[Address(RVA = "0xE54124", Offset = "0xE54124", VA = "0xE54124")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001572")]
	[Address(RVA = "0xE54240", Offset = "0xE54240", VA = "0xE54240")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001573")]
	[Address(RVA = "0xE5436C", Offset = "0xE5436C", VA = "0xE5436C")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001574")]
	[Address(RVA = "0xE54478", Offset = "0xE54478", VA = "0xE54478")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001575")]
	[Address(RVA = "0xE54570", Offset = "0xE54570", VA = "0xE54570")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001576")]
	[Address(RVA = "0xE54680", Offset = "0xE54680", VA = "0xE54680")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001577")]
	[Address(RVA = "0xE54790", Offset = "0xE54790", VA = "0xE54790")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001578")]
	[Address(RVA = "0xE54888", Offset = "0xE54888", VA = "0xE54888")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001579")]
	[Address(RVA = "0xE54980", Offset = "0xE54980", VA = "0xE54980")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600157A")]
	[Address(RVA = "0xE54A90", Offset = "0xE54A90", VA = "0xE54A90")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600157B")]
	[Address(RVA = "0xE54BE0", Offset = "0xE54BE0", VA = "0xE54BE0")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600157C")]
	[Address(RVA = "0xE54CBC", Offset = "0xE54CBC", VA = "0xE54CBC")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x600157D")]
	[Address(RVA = "0xE54D90", Offset = "0xE54D90", VA = "0xE54D90")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600157E")]
	[Address(RVA = "0xE54E68", Offset = "0xE54E68", VA = "0xE54E68")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x600157F")]
	[Address(RVA = "0xE54FE8", Offset = "0xE54FE8", VA = "0xE54FE8")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001580")]
	[Address(RVA = "0xE55170", Offset = "0xE55170", VA = "0xE55170")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001581")]
	[Address(RVA = "0xE5543C", Offset = "0xE5543C", VA = "0xE5543C")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001582")]
	[Address(RVA = "0xE5554C", Offset = "0xE5554C", VA = "0xE5554C")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001583")]
	[Address(RVA = "0xE55694", Offset = "0xE55694", VA = "0xE55694")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001584")]
	[Address(RVA = "0xE55818", Offset = "0xE55818", VA = "0xE55818")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001585")]
	[Address(RVA = "0xE5590C", Offset = "0xE5590C", VA = "0xE5590C")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001586")]
	[Address(RVA = "0xE55A14", Offset = "0xE55A14", VA = "0xE55A14")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001587")]
	[Address(RVA = "0xE55B08", Offset = "0xE55B08", VA = "0xE55B08")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001588")]
	[Address(RVA = "0xE55C10", Offset = "0xE55C10", VA = "0xE55C10")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001589")]
	[Address(RVA = "0xE55CE8", Offset = "0xE55CE8", VA = "0xE55CE8")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x600158A")]
	[Address(RVA = "0xE55DB4", Offset = "0xE55DB4", VA = "0xE55DB4")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x600158B")]
	[Address(RVA = "0xE55F34", Offset = "0xE55F34", VA = "0xE55F34")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600158C")]
	[Address(RVA = "0xE560E8", Offset = "0xE560E8", VA = "0xE560E8")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600158D")]
	[Address(RVA = "0xE5618C", Offset = "0xE5618C", VA = "0xE5618C")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x600158E")]
	[Address(RVA = "0xE5624C", Offset = "0xE5624C", VA = "0xE5624C")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x600158F")]
	[Address(RVA = "0xE563A4", Offset = "0xE563A4", VA = "0xE563A4")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001590")]
	[Address(RVA = "0xE564C8", Offset = "0xE564C8", VA = "0xE564C8")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001591")]
	[Address(RVA = "0xE56690", Offset = "0xE56690", VA = "0xE56690")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x6001592")]
	[Address(RVA = "0xE2D224", Offset = "0xE2D224", VA = "0xE2D224")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001593")]
	[Address(RVA = "0xE688C0", Offset = "0xE688C0", VA = "0xE688C0")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001594")]
	[Address(RVA = "0xE68940", Offset = "0xE68940", VA = "0xE68940")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001595")]
	[Address(RVA = "0xE689C0", Offset = "0xE689C0", VA = "0xE689C0")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001596")]
	[Address(RVA = "0xE234E8", Offset = "0xE234E8", VA = "0xE234E8")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001597")]
	[Address(RVA = "0xE68A40", Offset = "0xE68A40", VA = "0xE68A40")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001598")]
	[Address(RVA = "0xE68AC0", Offset = "0xE68AC0", VA = "0xE68AC0")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001599")]
	[Address(RVA = "0xE264EC", Offset = "0xE264EC", VA = "0xE264EC")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600159A")]
	[Address(RVA = "0xE2562C", Offset = "0xE2562C", VA = "0xE2562C")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xE68B40", Offset = "0xE68B40", VA = "0xE68B40")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x2000330")]
public class AkSoundEngine
{
	[Token(Token = "0x2000331")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x2000332")]
	private class AutoObject
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xFFAC3C", Offset = "0xFFAC3C", VA = "0xFFAC3C")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xFFAD6C", Offset = "0xFFAD6C", VA = "0xFFAD6C", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40010ED")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40010EE")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40010EF")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40010F0")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40010F1")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40010F2")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40010F3")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40010F4")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40010F5")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40010F6")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40010F7")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40010F8")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40010F9")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40010FA")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40010FB")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40010FC")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40010FD")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40010FE")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40010FF")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x4001100")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x4001101")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x4001102")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x4001103")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x4001104")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x4001105")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x4001106")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x4001107")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x4001108")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x4001109")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x400110A")]
	public const int NULL = 0;

	[Token(Token = "0x400110B")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x400110C")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x400110D")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x400110E")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x400110F")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x4001110")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x4001111")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x4001112")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x4001113")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x4001114")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x4001115")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x4001116")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x4001117")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x4001118")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x4001119")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x400111A")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x400111B")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x400111C")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x400111D")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x400111E")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x400111F")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4001120")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4001121")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4001122")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4001123")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4001124")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4001125")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4001126")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x4001127")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x4001128")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x4001129")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x400112A")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x400112B")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x400112C")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x400112D")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x400112E")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x400112F")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4001130")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4001131")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4001132")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4001133")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4001134")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4001135")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4001136")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x4001137")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x4001138")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x4001139")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x400113A")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x400113B")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x400113C")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x400113D")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x400113E")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x400113F")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4001140")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001141")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001142")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001143")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4001144")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4001145")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4001146")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4001147")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x4001148")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x4001149")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400114A")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x400114B")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x400114C")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x400114D")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x400114E")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x400114F")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4001150")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4001151")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4001152")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4001153")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4001154")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4001155")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4001156")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x4001157")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x4001158")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x4001159")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400115A")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x400115B")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x400115C")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x400115D")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x400115E")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x400115F")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4001160")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4001161")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4001162")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4001163")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4001164")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4001165")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4001166")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x4001167")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x4001168")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x4001169")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400116A")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x400116B")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x400116C")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x400116D")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x400116E")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x400116F")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4001170")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4001171")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4001172")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4001173")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4001174")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4001175")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4001176")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x4001177")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x4001178")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x4001179")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400117A")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x400117B")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x400117C")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x400117D")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x400117E")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x400117F")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4001180")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4001181")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4001182")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4001183")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4001184")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4001185")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4001186")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x4001187")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x4001188")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x4001189")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400118A")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x400118B")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x400118C")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x400118D")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x400118E")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x400118F")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4001190")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4001191")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4001192")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4001193")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4001194")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x4001195")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x4001196")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x4001197")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x4001198")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x4001199")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400119A")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x400119B")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x400119C")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x400119D")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x400119E")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x400119F")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x40011A0")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x40011A1")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x40011A2")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x40011A3")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x40011A4")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x40011A5")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x40011A6")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x40011A7")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x40011A8")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x40011A9")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x40011AA")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x40011AB")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x40011AC")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x40011AD")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x40011AE")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x40011AF")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x40011B0")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x40011B1")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x40011B2")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x40011B3")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x40011B4")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x40011B5")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x40011B6")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x40011B7")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x40011B8")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x40011B9")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x40011BA")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x40011BB")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x40011BC")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x40011BD")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x40011BE")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x40011BF")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x40011C0")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x40011C1")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x40011C2")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x40011C3")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x40011C4")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x40011C5")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x40011C6")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x40011C7")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x40011C8")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40011C9")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40011CA")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40011CB")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40011CC")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40011CD")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40011CE")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40011CF")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40011D0")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40011D1")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40011D2")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40011D3")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40011D4")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40011D5")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40011D6")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40011D7")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40011D8")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40011D9")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40011DA")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40011DB")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40011DC")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40011DD")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40011DE")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40011DF")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40011E0")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40011E1")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40011E2")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40011E3")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40011E4")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40011E5")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40011E6")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40011E7")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40011E8")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40011E9")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40011EA")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40011EB")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40011EC")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40011ED")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40011EE")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40011EF")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40011F0")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40011F1")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40011F2")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40011F3")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40011F4")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40011F5")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40011F6")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40011F7")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40011F8")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40011F9")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40011FA")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40011FB")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40011FC")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40011FD")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40011FE")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40011FF")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x4001200")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x4001201")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x4001202")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x4001203")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x4001204")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x4001205")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x4001206")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x4001207")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x4001208")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x4001209")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x400120A")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x400120B")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x400120C")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x400120D")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x400120E")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x400120F")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x4001210")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x4001211")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x4001212")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x4001213")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x4001214")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x4001215")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x4001216")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x4001217")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x4001218")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x4001219")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x400121A")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x400121B")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x400121C")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x400121D")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x400121E")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x400121F")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4001220")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4001221")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4001222")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4001223")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4001224")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x4001225")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x4001226")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x4001227")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x4001228")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x4001229")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400122A")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x400122B")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x400122C")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x400122D")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x400122E")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x400122F")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4001230")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4001231")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4001232")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x4001233")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4001234")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x4001235")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x4001236")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x4001237")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x4001238")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x4001239")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x400123A")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x400123B")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x400123D")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x400123E")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x400123F")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x4001240")]
	public const string Deprecation_2019_1_8 = "This functionality is deprecated as of Wwise v2019.1.8 and will be removed in a future release.";

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170001FB")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x600159C")]
		[Address(RVA = "0xE3CC64", Offset = "0xE3CC64", VA = "0xE3CC64")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001FC")]
	public static ushort AK_INT
	{
		[Token(Token = "0x600159D")]
		[Address(RVA = "0xE3CD30", Offset = "0xE3CD30", VA = "0xE3CD30")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170001FD")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0xE3CDFC", Offset = "0xE3CDFC", VA = "0xE3CDFC")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x170001FE")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x600159F")]
		[Address(RVA = "0xE3CEC8", Offset = "0xE3CEC8", VA = "0xE3CEC8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170001FF")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xE3CF94", Offset = "0xE3CF94", VA = "0xE3CF94")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000200")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xE3D060", Offset = "0xE3D060", VA = "0xE3D060")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000201")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xE3D12C", Offset = "0xE3D12C", VA = "0xE3D12C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000202")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xE3D1F8", Offset = "0xE3D1F8", VA = "0xE3D1F8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000203")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE4E064", Offset = "0xE4E064", VA = "0xE4E064")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000204")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE4E130", Offset = "0xE4E130", VA = "0xE4E130")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000205")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xE51F40", Offset = "0xE51F40", VA = "0xE51F40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000206")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xE52008", Offset = "0xE52008", VA = "0xE52008")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000207")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xE520D4", Offset = "0xE520D4", VA = "0xE520D4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000208")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xE521A0", Offset = "0xE521A0", VA = "0xE521A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000209")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xE52268", Offset = "0xE52268", VA = "0xE52268")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020A")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xE52334", Offset = "0xE52334", VA = "0xE52334")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020B")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xE52400", Offset = "0xE52400", VA = "0xE52400")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700020C")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xE525AC", Offset = "0xE525AC", VA = "0xE525AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xE524CC", Offset = "0xE524CC", VA = "0xE524CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700020D")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xE56878", Offset = "0xE56878", VA = "0xE56878")]
		set
		{
		}
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xE3D2C4", Offset = "0xE3D2C4", VA = "0xE3D2C4")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xE3D568", Offset = "0xE3D568", VA = "0xE3D568")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xE3D78C", Offset = "0xE3D78C", VA = "0xE3D78C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xE3D8F8", Offset = "0xE3D8F8", VA = "0xE3D8F8")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xE3D9D8", Offset = "0xE3D9D8", VA = "0xE3D9D8")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xE3DAE8", Offset = "0xE3DAE8", VA = "0xE3DAE8")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xE3DBE8", Offset = "0xE3DBE8", VA = "0xE3DBE8")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xE3DCC8", Offset = "0xE3DCC8", VA = "0xE3DCC8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xE3DDD8", Offset = "0xE3DDD8", VA = "0xE3DDD8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xE3DED8", Offset = "0xE3DED8", VA = "0xE3DED8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xE3DFB8", Offset = "0xE3DFB8", VA = "0xE3DFB8")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xE3E0C8", Offset = "0xE3E0C8", VA = "0xE3E0C8")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xE3E1C8", Offset = "0xE3E1C8", VA = "0xE3E1C8")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xE3E2A8", Offset = "0xE3E2A8", VA = "0xE3E2A8")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xE3E3B8", Offset = "0xE3E3B8", VA = "0xE3E3B8")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xE3E4B8", Offset = "0xE3E4B8", VA = "0xE3E4B8")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xE3E598", Offset = "0xE3E598", VA = "0xE3E598")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xE3E678", Offset = "0xE3E678", VA = "0xE3E678")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xE3E788", Offset = "0xE3E788", VA = "0xE3E788")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xE3E8C0", Offset = "0xE3E8C0", VA = "0xE3E8C0")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xE3E9A0", Offset = "0xE3E9A0", VA = "0xE3E9A0")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xE3EA74", Offset = "0xE3EA74", VA = "0xE3EA74")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xE3EB68", Offset = "0xE3EB68", VA = "0xE3EB68")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xE3EC88", Offset = "0xE3EC88", VA = "0xE3EC88")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xE3ED94", Offset = "0xE3ED94", VA = "0xE3ED94")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xE3EE94", Offset = "0xE3EE94", VA = "0xE3EE94")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xE3EF74", Offset = "0xE3EF74", VA = "0xE3EF74")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xE3F074", Offset = "0xE3F074", VA = "0xE3F074")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xE3F154", Offset = "0xE3F154", VA = "0xE3F154")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xE3F28C", Offset = "0xE3F28C", VA = "0xE3F28C")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xE3F3A4", Offset = "0xE3F3A4", VA = "0xE3F3A4")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xE3F4DC", Offset = "0xE3F4DC", VA = "0xE3F4DC")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xE3F604", Offset = "0xE3F604", VA = "0xE3F604")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xE3F6F4", Offset = "0xE3F6F4", VA = "0xE3F6F4")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xE3F7D4", Offset = "0xE3F7D4", VA = "0xE3F7D4")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xE3F8B4", Offset = "0xE3F8B4", VA = "0xE3F8B4")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xE3F980", Offset = "0xE3F980", VA = "0xE3F980")]
	public static AKRESULT RegisterPluginDLL(string in_DllName, string in_DllPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xE3FAB0", Offset = "0xE3FAB0", VA = "0xE3FAB0")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xE3FBA8", Offset = "0xE3FBA8", VA = "0xE3FBA8")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xE3FCA0", Offset = "0xE3FCA0", VA = "0xE3FCA0")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xE3FF3C", Offset = "0xE3FF3C", VA = "0xE3FF3C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xE401B8", Offset = "0xE401B8", VA = "0xE401B8")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xE403EC", Offset = "0xE403EC", VA = "0xE403EC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xE40578", Offset = "0xE40578", VA = "0xE40578")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xE4082C", Offset = "0xE4082C", VA = "0xE4082C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xE40AC0", Offset = "0xE40AC0", VA = "0xE40AC0")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xE40D0C", Offset = "0xE40D0C", VA = "0xE40D0C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xE40EB0", Offset = "0xE40EB0", VA = "0xE40EB0")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xE41054", Offset = "0xE41054", VA = "0xE41054")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xE411D8", Offset = "0xE411D8", VA = "0xE411D8")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xE4134C", Offset = "0xE4134C", VA = "0xE4134C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xE414A0", Offset = "0xE414A0", VA = "0xE414A0")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xE415A0", Offset = "0xE415A0", VA = "0xE415A0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xE4175C", Offset = "0xE4175C", VA = "0xE4175C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xE418F8", Offset = "0xE418F8", VA = "0xE418F8")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xE41A84", Offset = "0xE41A84", VA = "0xE41A84")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xE41BF0", Offset = "0xE41BF0", VA = "0xE41BF0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xE41D08", Offset = "0xE41D08", VA = "0xE41D08")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xE41E88", Offset = "0xE41E88", VA = "0xE41E88")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xE41FCC", Offset = "0xE41FCC", VA = "0xE41FCC")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xE420AC", Offset = "0xE420AC", VA = "0xE420AC")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xE42178", Offset = "0xE42178", VA = "0xE42178")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xE42288", Offset = "0xE42288", VA = "0xE42288")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xE423B0", Offset = "0xE423B0", VA = "0xE423B0")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xE42490", Offset = "0xE42490", VA = "0xE42490")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xE42588", Offset = "0xE42588", VA = "0xE42588")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xE42698", Offset = "0xE42698", VA = "0xE42698")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xE427C0", Offset = "0xE427C0", VA = "0xE427C0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xE42944", Offset = "0xE42944", VA = "0xE42944")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xE42AB8", Offset = "0xE42AB8", VA = "0xE42AB8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xE42C0C", Offset = "0xE42C0C", VA = "0xE42C0C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xE42DA8", Offset = "0xE42DA8", VA = "0xE42DA8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xE42F34", Offset = "0xE42F34", VA = "0xE42F34")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xE430A0", Offset = "0xE430A0", VA = "0xE430A0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xE43234", Offset = "0xE43234", VA = "0xE43234")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xE433A8", Offset = "0xE433A8", VA = "0xE433A8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xE4350C", Offset = "0xE4350C", VA = "0xE4350C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xE436B8", Offset = "0xE436B8", VA = "0xE436B8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xE43844", Offset = "0xE43844", VA = "0xE43844")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xE439C0", Offset = "0xE439C0", VA = "0xE439C0")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xE43A24", Offset = "0xE43A24", VA = "0xE43A24")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xE43B48", Offset = "0xE43B48", VA = "0xE43B48")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xE43BAC", Offset = "0xE43BAC", VA = "0xE43BAC")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xE43CBC", Offset = "0xE43CBC", VA = "0xE43CBC")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xE43DBC", Offset = "0xE43DBC", VA = "0xE43DBC")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0xE43ECC", Offset = "0xE43ECC", VA = "0xE43ECC")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xE43FF0", Offset = "0xE43FF0", VA = "0xE43FF0")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xE440B8", Offset = "0xE440B8", VA = "0xE440B8")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xE441C8", Offset = "0xE441C8", VA = "0xE441C8")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xE442C8", Offset = "0xE442C8", VA = "0xE442C8")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xE443A8", Offset = "0xE443A8", VA = "0xE443A8")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xE444D8", Offset = "0xE444D8", VA = "0xE444D8")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xE445E8", Offset = "0xE445E8", VA = "0xE445E8")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xE446E8", Offset = "0xE446E8", VA = "0xE446E8")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xE447C8", Offset = "0xE447C8", VA = "0xE447C8")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xE448A8", Offset = "0xE448A8", VA = "0xE448A8")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xE4497C", Offset = "0xE4497C", VA = "0xE4497C")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xE44B30", Offset = "0xE44B30", VA = "0xE44B30")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xE44BFC", Offset = "0xE44BFC", VA = "0xE44BFC")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xE44D70", Offset = "0xE44D70", VA = "0xE44D70")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xE44EC4", Offset = "0xE44EC4", VA = "0xE44EC4")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xE45038", Offset = "0xE45038", VA = "0xE45038")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xE4518C", Offset = "0xE4518C", VA = "0xE4518C")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xE452C8", Offset = "0xE452C8", VA = "0xE452C8")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xE45394", Offset = "0xE45394", VA = "0xE45394")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xE45494", Offset = "0xE45494", VA = "0xE45494")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xE455BC", Offset = "0xE455BC", VA = "0xE455BC")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xE456BC", Offset = "0xE456BC", VA = "0xE456BC")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xE457CC", Offset = "0xE457CC", VA = "0xE457CC")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xE458FC", Offset = "0xE458FC", VA = "0xE458FC")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xE45AB8", Offset = "0xE45AB8", VA = "0xE45AB8")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xE45C4C", Offset = "0xE45C4C", VA = "0xE45C4C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xE45DF0", Offset = "0xE45DF0", VA = "0xE45DF0")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xE45FB4", Offset = "0xE45FB4", VA = "0xE45FB4")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xE460DC", Offset = "0xE460DC", VA = "0xE460DC")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xE461F4", Offset = "0xE461F4", VA = "0xE461F4")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xE24328", Offset = "0xE24328", VA = "0xE24328")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xE46394", Offset = "0xE46394", VA = "0xE46394")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xE46540", Offset = "0xE46540", VA = "0xE46540")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xE466D4", Offset = "0xE466D4", VA = "0xE466D4")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xE46738", Offset = "0xE46738", VA = "0xE46738")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xE46864", Offset = "0xE46864", VA = "0xE46864")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xE46980", Offset = "0xE46980", VA = "0xE46980")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xE46A90", Offset = "0xE46A90", VA = "0xE46A90")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xE46B90", Offset = "0xE46B90", VA = "0xE46B90")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xE46D50", Offset = "0xE46D50", VA = "0xE46D50")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xE46F00", Offset = "0xE46F00", VA = "0xE46F00")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xE470A4", Offset = "0xE470A4", VA = "0xE470A4")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xE47238", Offset = "0xE47238", VA = "0xE47238")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xE47304", Offset = "0xE47304", VA = "0xE47304")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xE47670", Offset = "0xE47670", VA = "0xE47670")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xE47788", Offset = "0xE47788", VA = "0xE47788")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xE47B88", Offset = "0xE47B88", VA = "0xE47B88")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0xE47D34", Offset = "0xE47D34", VA = "0xE47D34")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xE47E4C", Offset = "0xE47E4C", VA = "0xE47E4C")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xE47F64", Offset = "0xE47F64", VA = "0xE47F64")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xE48314", Offset = "0xE48314", VA = "0xE48314")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xE4845C", Offset = "0xE4845C", VA = "0xE4845C")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xE488A0", Offset = "0xE488A0", VA = "0xE488A0")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xE48A7C", Offset = "0xE48A7C", VA = "0xE48A7C")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0xE48BD8", Offset = "0xE48BD8", VA = "0xE48BD8")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0xE48D34", Offset = "0xE48D34", VA = "0xE48D34")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0xE48E58", Offset = "0xE48E58", VA = "0xE48E58")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0xE48F7C", Offset = "0xE48F7C", VA = "0xE48F7C")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0xE490A0", Offset = "0xE490A0", VA = "0xE490A0")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0xE49230", Offset = "0xE49230", VA = "0xE49230")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0xE49398", Offset = "0xE49398", VA = "0xE49398")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0xE4953C", Offset = "0xE4953C", VA = "0xE4953C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0xE496D0", Offset = "0xE496D0", VA = "0xE496D0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0xE49844", Offset = "0xE49844", VA = "0xE49844")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xE499A8", Offset = "0xE499A8", VA = "0xE499A8")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xE49AA8", Offset = "0xE49AA8", VA = "0xE49AA8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0xE49C64", Offset = "0xE49C64", VA = "0xE49C64")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xE49E10", Offset = "0xE49E10", VA = "0xE49E10")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xE49F9C", Offset = "0xE49F9C", VA = "0xE49F9C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0xE4A118", Offset = "0xE4A118", VA = "0xE4A118")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0xE4A230", Offset = "0xE4A230", VA = "0xE4A230")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0xE4A390", Offset = "0xE4A390", VA = "0xE4A390")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0xE4A4E0", Offset = "0xE4A4E0", VA = "0xE4A4E0")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xE4A610", Offset = "0xE4A610", VA = "0xE4A610")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xE4A730", Offset = "0xE4A730", VA = "0xE4A730")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0xE4A8A8", Offset = "0xE4A8A8", VA = "0xE4A8A8")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0xE4AA10", Offset = "0xE4AA10", VA = "0xE4AA10")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0xE4AB58", Offset = "0xE4AB58", VA = "0xE4AB58")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0xE4AC90", Offset = "0xE4AC90", VA = "0xE4AC90")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0xE4AE14", Offset = "0xE4AE14", VA = "0xE4AE14")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0xE4AF88", Offset = "0xE4AF88", VA = "0xE4AF88")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0xE4B0DC", Offset = "0xE4B0DC", VA = "0xE4B0DC")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0xE4B220", Offset = "0xE4B220", VA = "0xE4B220")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0xE4B300", Offset = "0xE4B300", VA = "0xE4B300")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0xE4B49C", Offset = "0xE4B49C", VA = "0xE4B49C")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0xE4B628", Offset = "0xE4B628", VA = "0xE4B628")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0xE4B794", Offset = "0xE4B794", VA = "0xE4B794")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0xE4B8F0", Offset = "0xE4B8F0", VA = "0xE4B8F0")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0xE4B9E8", Offset = "0xE4B9E8", VA = "0xE4B9E8")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0xE4BB3C", Offset = "0xE4BB3C", VA = "0xE4BB3C")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0xE4BCBC", Offset = "0xE4BCBC", VA = "0xE4BCBC")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0xE4BE00", Offset = "0xE4BE00", VA = "0xE4BE00")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0xE4BF5C", Offset = "0xE4BF5C", VA = "0xE4BF5C")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0xE4C05C", Offset = "0xE4C05C", VA = "0xE4C05C")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0xE4C18C", Offset = "0xE4C18C", VA = "0xE4C18C")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0xE4C2EC", Offset = "0xE4C2EC", VA = "0xE4C2EC")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0xE4C468", Offset = "0xE4C468", VA = "0xE4C468")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0xE4C578", Offset = "0xE4C578", VA = "0xE4C578")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0xE4C688", Offset = "0xE4C688", VA = "0xE4C688")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0xE4C7B0", Offset = "0xE4C7B0", VA = "0xE4C7B0")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0xE4C8B0", Offset = "0xE4C8B0", VA = "0xE4C8B0")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0xE4C9C8", Offset = "0xE4C9C8", VA = "0xE4C9C8")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0xE4CADC", Offset = "0xE4CADC", VA = "0xE4CADC")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0xE4CC08", Offset = "0xE4CC08", VA = "0xE4CC08")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0xE4CD94", Offset = "0xE4CD94", VA = "0xE4CD94")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0xE4CF38", Offset = "0xE4CF38", VA = "0xE4CF38")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0xE4D030", Offset = "0xE4D030", VA = "0xE4D030")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0xE4D0FC", Offset = "0xE4D0FC", VA = "0xE4D0FC")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xE4D1F4", Offset = "0xE4D1F4", VA = "0xE4D1F4")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xE4D2EC", Offset = "0xE4D2EC", VA = "0xE4D2EC")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xE4D3B8", Offset = "0xE4D3B8", VA = "0xE4D3B8")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xE4D498", Offset = "0xE4D498", VA = "0xE4D498")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xE4D5D0", Offset = "0xE4D5D0", VA = "0xE4D5D0")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xE4D6F8", Offset = "0xE4D6F8", VA = "0xE4D6F8")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xE4D7F8", Offset = "0xE4D7F8", VA = "0xE4D7F8")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0xE4D910", Offset = "0xE4D910", VA = "0xE4D910")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0xE4DA10", Offset = "0xE4DA10", VA = "0xE4DA10")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0xE4DB40", Offset = "0xE4DB40", VA = "0xE4DB40")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xE4DC40", Offset = "0xE4DC40", VA = "0xE4DC40")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xE4DD20", Offset = "0xE4DD20", VA = "0xE4DD20")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0xE4DE00", Offset = "0xE4DE00", VA = "0xE4DE00")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0xE4DECC", Offset = "0xE4DECC", VA = "0xE4DECC")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xE4DF98", Offset = "0xE4DF98", VA = "0xE4DF98")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0xE4E1FC", Offset = "0xE4E1FC", VA = "0xE4E1FC")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0xE4E334", Offset = "0xE4E334", VA = "0xE4E334")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0xE4E45C", Offset = "0xE4E45C", VA = "0xE4E45C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0xE4E600", Offset = "0xE4E600", VA = "0xE4E600")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0xE4E784", Offset = "0xE4E784", VA = "0xE4E784")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xE4E8F8", Offset = "0xE4E8F8", VA = "0xE4E8F8")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xE4EA08", Offset = "0xE4EA08", VA = "0xE4EA08")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0xE4EB08", Offset = "0xE4EB08", VA = "0xE4EB08")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xE4ECC4", Offset = "0xE4ECC4", VA = "0xE4ECC4")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0xE4EE60", Offset = "0xE4EE60", VA = "0xE4EE60")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0xE4EFEC", Offset = "0xE4EFEC", VA = "0xE4EFEC")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0xE4F114", Offset = "0xE4F114", VA = "0xE4F114")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0xE4F22C", Offset = "0xE4F22C", VA = "0xE4F22C")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0xE4F2F8", Offset = "0xE4F2F8", VA = "0xE4F2F8")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xE4F3D8", Offset = "0xE4F3D8", VA = "0xE4F3D8")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0xE4F4E0", Offset = "0xE4F4E0", VA = "0xE4F4E0")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0xE4F618", Offset = "0xE4F618", VA = "0xE4F618")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0xE4F730", Offset = "0xE4F730", VA = "0xE4F730")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0xE4F840", Offset = "0xE4F840", VA = "0xE4F840")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0xE4F950", Offset = "0xE4F950", VA = "0xE4F950")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0xE4FAFC", Offset = "0xE4FAFC", VA = "0xE4FAFC")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0xE4FC68", Offset = "0xE4FC68", VA = "0xE4FC68")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0xE4FDEC", Offset = "0xE4FDEC", VA = "0xE4FDEC")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0xE4FF88", Offset = "0xE4FF88", VA = "0xE4FF88")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0xE500DC", Offset = "0xE500DC", VA = "0xE500DC")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0xE5023C", Offset = "0xE5023C", VA = "0xE5023C")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0xE5033C", Offset = "0xE5033C", VA = "0xE5033C")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0xE50454", Offset = "0xE50454", VA = "0xE50454")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0xE505B4", Offset = "0xE505B4", VA = "0xE505B4")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0xE50720", Offset = "0xE50720", VA = "0xE50720")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0xE508AC", Offset = "0xE508AC", VA = "0xE508AC")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0xE509D4", Offset = "0xE509D4", VA = "0xE509D4")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0xE50B14", Offset = "0xE50B14", VA = "0xE50B14")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0xE50C3C", Offset = "0xE50C3C", VA = "0xE50C3C")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0xE50D68", Offset = "0xE50D68", VA = "0xE50D68")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0xE50E8C", Offset = "0xE50E8C", VA = "0xE50E8C")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0xE50F6C", Offset = "0xE50F6C", VA = "0xE50F6C")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xE5104C", Offset = "0xE5104C", VA = "0xE5104C")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0xE51230", Offset = "0xE51230", VA = "0xE51230")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xE51340", Offset = "0xE51340", VA = "0xE51340")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xE51450", Offset = "0xE51450", VA = "0xE51450")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xE51530", Offset = "0xE51530", VA = "0xE51530")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xE51610", Offset = "0xE51610", VA = "0xE51610")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xE516F0", Offset = "0xE516F0", VA = "0xE516F0")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xE517D0", Offset = "0xE517D0", VA = "0xE517D0")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xE518B0", Offset = "0xE518B0", VA = "0xE518B0")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xE519B0", Offset = "0xE519B0", VA = "0xE519B0")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xE51A98", Offset = "0xE51A98", VA = "0xE51A98")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xE51B80", Offset = "0xE51B80", VA = "0xE51B80")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xE51C68", Offset = "0xE51C68", VA = "0xE51C68")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xE51D50", Offset = "0xE51D50", VA = "0xE51D50")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xE51E30", Offset = "0xE51E30", VA = "0xE51E30")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xE52678", Offset = "0xE52678", VA = "0xE52678")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xE52744", Offset = "0xE52744", VA = "0xE52744")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xE5289C", Offset = "0xE5289C", VA = "0xE5289C")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xE529C0", Offset = "0xE529C0", VA = "0xE529C0")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xE52B20", Offset = "0xE52B20", VA = "0xE52B20")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xE52CB8", Offset = "0xE52CB8", VA = "0xE52CB8")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0xE52DFC", Offset = "0xE52DFC", VA = "0xE52DFC")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0xE52F50", Offset = "0xE52F50", VA = "0xE52F50")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0xE53050", Offset = "0xE53050", VA = "0xE53050")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0xE53130", Offset = "0xE53130", VA = "0xE53130")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0xE3746C", Offset = "0xE3746C", VA = "0xE3746C")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0xE5337C", Offset = "0xE5337C", VA = "0xE5337C")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xE5345C", Offset = "0xE5345C", VA = "0xE5345C")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0xE535A0", Offset = "0xE535A0", VA = "0xE535A0")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xE3AE90", Offset = "0xE3AE90", VA = "0xE3AE90")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xE5378C", Offset = "0xE5378C", VA = "0xE5378C")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0xE5388C", Offset = "0xE5388C", VA = "0xE5388C")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xE539C4", Offset = "0xE539C4", VA = "0xE539C4")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xE53AA8", Offset = "0xE53AA8", VA = "0xE53AA8")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xE53B70", Offset = "0xE53B70", VA = "0xE53B70")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0xE53C84", Offset = "0xE53C84", VA = "0xE53C84")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0xE53D78", Offset = "0xE53D78", VA = "0xE53D78")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0xE53ECC", Offset = "0xE53ECC", VA = "0xE53ECC")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0xE53FC0", Offset = "0xE53FC0", VA = "0xE53FC0")]
	public static void Term()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0xE54088", Offset = "0xE54088", VA = "0xE54088")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0xE541A4", Offset = "0xE541A4", VA = "0xE541A4")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0xE542C0", Offset = "0xE542C0", VA = "0xE542C0")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0xE54418", Offset = "0xE54418", VA = "0xE54418")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0xE54510", Offset = "0xE54510", VA = "0xE54510")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xE54608", Offset = "0xE54608", VA = "0xE54608")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xE54730", Offset = "0xE54730", VA = "0xE54730")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xE54828", Offset = "0xE54828", VA = "0xE54828")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0xE54920", Offset = "0xE54920", VA = "0xE54920")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0xE54A18", Offset = "0xE54A18", VA = "0xE54A18")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0xE54B40", Offset = "0xE54B40", VA = "0xE54B40")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0xE23F30", Offset = "0xE23F30", VA = "0xE23F30")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0xE54D30", Offset = "0xE54D30", VA = "0xE54D30")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0xE54E10", Offset = "0xE54E10", VA = "0xE54E10")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0xE54EDC", Offset = "0xE54EDC", VA = "0xE54EDC")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0xE550D0", Offset = "0xE550D0", VA = "0xE550D0")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0xE55380", Offset = "0xE55380", VA = "0xE55380")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0xE554DC", Offset = "0xE554DC", VA = "0xE554DC")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0xE555E4", Offset = "0xE555E4", VA = "0xE555E4")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0xE55744", Offset = "0xE55744", VA = "0xE55744")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0xE55898", Offset = "0xE55898", VA = "0xE55898")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0xE5598C", Offset = "0xE5598C", VA = "0xE5598C")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0xE55A94", Offset = "0xE55A94", VA = "0xE55A94")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xE55B88", Offset = "0xE55B88", VA = "0xE55B88")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xE55C90", Offset = "0xE55C90", VA = "0xE55C90")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xE55D5C", Offset = "0xE55D5C", VA = "0xE55D5C")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xE55E28", Offset = "0xE55E28", VA = "0xE55E28")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xE55FDC", Offset = "0xE55FDC", VA = "0xE55FDC")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xE38D3C", Offset = "0xE38D3C", VA = "0xE38D3C")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xE36FD0", Offset = "0xE36FD0", VA = "0xE36FD0")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xE56300", Offset = "0xE56300", VA = "0xE56300")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xE56424", Offset = "0xE56424", VA = "0xE56424")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xE56548", Offset = "0xE56548", VA = "0xE56548")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0xE23B94", Offset = "0xE23B94", VA = "0xE23B94")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0xE56784", Offset = "0xE56784", VA = "0xE56784")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0xE253C4", Offset = "0xE253C4", VA = "0xE253C4")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0xE567E8", Offset = "0xE567E8", VA = "0xE567E8")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0xE366FC", Offset = "0xE366FC", VA = "0xE366FC")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0xE5692C", Offset = "0xE5692C", VA = "0xE5692C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0xE56A8C", Offset = "0xE56A8C", VA = "0xE56A8C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0xE56B4C", Offset = "0xE56B4C", VA = "0xE56B4C")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0xE56CAC", Offset = "0xE56CAC", VA = "0xE56CAC")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0xE56E38", Offset = "0xE56E38", VA = "0xE56E38")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0xE56F40", Offset = "0xE56F40", VA = "0xE56F40")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EED08", Offset = "0x8EED08")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0xE570B0", Offset = "0xE570B0", VA = "0xE570B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EED40", Offset = "0x8EED40")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0xE5725C", Offset = "0xE5725C", VA = "0xE5725C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EED78", Offset = "0x8EED78")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0xE573CC", Offset = "0xE573CC", VA = "0xE573CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EEDB0", Offset = "0x8EEDB0")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0xE3D448", Offset = "0xE3D448", VA = "0xE3D448")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0xE57578", Offset = "0xE57578", VA = "0xE57578")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0xE569DC", Offset = "0xE569DC", VA = "0xE569DC")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0xE56BFC", Offset = "0xE56BFC", VA = "0xE56BFC")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0xE576C4", Offset = "0xE576C4", VA = "0xE576C4")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xE57638", Offset = "0xE57638", VA = "0xE57638")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xE577F8", Offset = "0xE577F8", VA = "0xE577F8")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xE5785C", Offset = "0xE5785C", VA = "0xE5785C")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x2000333")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700020E")]
	public int nPriority
	{
		[Token(Token = "0x6001711")]
		[Address(RVA = "0xE6C6C0", Offset = "0xE6C6C0", VA = "0xE6C6C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001710")]
		[Address(RVA = "0xE6C64C", Offset = "0xE6C64C", VA = "0xE6C64C")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public uint uStackSize
	{
		[Token(Token = "0x6001713")]
		[Address(RVA = "0xE6C798", Offset = "0xE6C798", VA = "0xE6C798")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001712")]
		[Address(RVA = "0xE6C724", Offset = "0xE6C724", VA = "0xE6C724")]
		set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6001715")]
		[Address(RVA = "0xE6C870", Offset = "0xE6C870", VA = "0xE6C870")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001714")]
		[Address(RVA = "0xE6C7FC", Offset = "0xE6C7FC", VA = "0xE6C7FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6001717")]
		[Address(RVA = "0xE6C948", Offset = "0xE6C948", VA = "0xE6C948")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001716")]
		[Address(RVA = "0xE6C8D4", Offset = "0xE6C8D4", VA = "0xE6C8D4")]
		set
		{
		}
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0xE2BBBC", Offset = "0xE2BBBC", VA = "0xE2BBBC")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0xE2B9A0", Offset = "0xE2B9A0", VA = "0xE2B9A0")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0xE6C430", Offset = "0xE6C430", VA = "0xE6C430", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0xE6C464", Offset = "0xE6C464", VA = "0xE6C464", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0xE6C4D4", Offset = "0xE6C4D4", VA = "0xE6C4D4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0xE6C9AC", Offset = "0xE6C9AC", VA = "0xE6C9AC")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x2000334")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001719")]
	[Address(RVA = "0xE70438", Offset = "0xE70438", VA = "0xE70438")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0xE70478", Offset = "0xE70478", VA = "0xE70478")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0xE704C4", Offset = "0xE704C4", VA = "0xE704C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0xE704F8", Offset = "0xE704F8", VA = "0xE704F8", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0xE70568", Offset = "0xE70568", VA = "0xE70568", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0xE706E0", Offset = "0xE706E0", VA = "0xE706E0")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x2000335")]
public enum AKRESULT
{
	[Token(Token = "0x4001248")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4001249")]
	AK_Success = 1,
	[Token(Token = "0x400124A")]
	AK_Fail = 2,
	[Token(Token = "0x400124B")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400124C")]
	AK_NotCompatible = 4,
	[Token(Token = "0x400124D")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x400124E")]
	AK_InvalidFile = 7,
	[Token(Token = "0x400124F")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4001250")]
	AK_MaxReached = 9,
	[Token(Token = "0x4001251")]
	AK_InvalidID = 14,
	[Token(Token = "0x4001252")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4001253")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4001254")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4001255")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4001256")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4001257")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4001258")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4001259")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x400125A")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x400125B")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400125C")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x400125D")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x400125E")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x400125F")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4001260")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4001261")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4001262")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4001263")]
	AK_DataReady = 45,
	[Token(Token = "0x4001264")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4001265")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4001266")]
	AK_Cancelled = 53,
	[Token(Token = "0x4001267")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4001268")]
	AK_BankReadError = 56,
	[Token(Token = "0x4001269")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x400126A")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x400126B")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x400126C")]
	AK_FileNotFound = 66,
	[Token(Token = "0x400126D")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x400126E")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x400126F")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4001270")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4001271")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4001272")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4001273")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4001274")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4001275")]
	AK_Busy = 77,
	[Token(Token = "0x4001276")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4001277")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4001278")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4001279")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x400127A")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x400127B")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x400127C")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x400127D")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x400127E")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x400127F")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4001280")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4001281")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4001282")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4001283")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4001284")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4001285")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x4001286")]
	AK_InvalidFloatValue = 94
}
[Token(Token = "0x2000336")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4001288")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4001289")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x400128A")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x2000337")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x400128C")]
	AK_SpatializationMode_None,
	[Token(Token = "0x400128D")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x400128E")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x2000338")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000212")]
	public uint textureID
	{
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x138E09C", Offset = "0x138E09C", VA = "0x138E09C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001725")]
		[Address(RVA = "0x138E024", Offset = "0x138E024", VA = "0x138E024")]
		set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001728")]
		[Address(RVA = "0x138E17C", Offset = "0x138E17C", VA = "0x138E17C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x138E104", Offset = "0x138E104", VA = "0x138E104")]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public string strName
	{
		[Token(Token = "0x600172A")]
		[Address(RVA = "0x138E25C", Offset = "0x138E25C", VA = "0x138E25C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001729")]
		[Address(RVA = "0x138E1E4", Offset = "0x138E1E4", VA = "0x138E1E4")]
		set
		{
		}
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0x138DCF8", Offset = "0x138DCF8", VA = "0x138DCF8")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x138DD38", Offset = "0x138DD38", VA = "0x138DD38")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0x138DD84", Offset = "0x138DD84", VA = "0x138DD84", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0x138DDB8", Offset = "0x138DDB8", VA = "0x138DDB8", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0x138DE28", Offset = "0x138DE28", VA = "0x138DE28", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0x138DFA4", Offset = "0x138DFA4", VA = "0x138DFA4")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0x138E304", Offset = "0x138E304", VA = "0x138E304")]
	public void Clear()
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0x138E36C", Offset = "0x138E36C", VA = "0x138E36C")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x138E3D4", Offset = "0x138E3D4", VA = "0x138E3D4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x138E430", Offset = "0x138E430", VA = "0x138E430")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000339")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4001292")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4001293")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4001294")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4001295")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4001296")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x200033A")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4001298")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4001299")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400129A")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400129B")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x400129C")]
	AkDeviceState_All = 15
}
[Token(Token = "0x200033B")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000215")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1390078", Offset = "0x1390078", VA = "0x1390078")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1390000", Offset = "0x1390000", VA = "0x1390000")]
		set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x13901CC", Offset = "0x13901CC", VA = "0x13901CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001736")]
		[Address(RVA = "0x13900E0", Offset = "0x13900E0", VA = "0x13900E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1390348", Offset = "0x1390348", VA = "0x1390348")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001738")]
		[Address(RVA = "0x13902D0", Offset = "0x13902D0", VA = "0x13902D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public uint uBlockAlign
	{
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1390428", Offset = "0x1390428", VA = "0x1390428")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x13903B0", Offset = "0x13903B0", VA = "0x13903B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public uint uTypeID
	{
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1390508", Offset = "0x1390508", VA = "0x1390508")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1390490", Offset = "0x1390490", VA = "0x1390490")]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public uint uInterleaveID
	{
		[Token(Token = "0x600173F")]
		[Address(RVA = "0x13905E8", Offset = "0x13905E8", VA = "0x13905E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1390570", Offset = "0x1390570", VA = "0x1390570")]
		set
		{
		}
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x138FD54", Offset = "0x138FD54", VA = "0x138FD54")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x138FD94", Offset = "0x138FD94", VA = "0x138FD94")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x138FDE0", Offset = "0x138FDE0", VA = "0x138FDE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x138FE14", Offset = "0x138FE14", VA = "0x138FE14", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x138FE84", Offset = "0x138FE84", VA = "0x138FE84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x1390650", Offset = "0x1390650", VA = "0x1390650")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x13906B8", Offset = "0x13906B8", VA = "0x13906B8")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x1390720", Offset = "0x1390720", VA = "0x1390720")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x1390788", Offset = "0x1390788", VA = "0x1390788")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x13907F0", Offset = "0x13907F0", VA = "0x13907F0")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x1390858", Offset = "0x1390858", VA = "0x1390858")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x1390930", Offset = "0x1390930", VA = "0x1390930")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x1390998", Offset = "0x1390998", VA = "0x1390998")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x200033C")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021B")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x600174D")]
		[Address(RVA = "0x139178C", Offset = "0x139178C", VA = "0x139178C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x13914E0", Offset = "0x13914E0", VA = "0x13914E0")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x1391520", Offset = "0x1391520", VA = "0x1391520")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x139156C", Offset = "0x139156C", VA = "0x139156C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x13915A0", Offset = "0x13915A0", VA = "0x13915A0", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x1391610", Offset = "0x1391610", VA = "0x1391610", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x13917F4", Offset = "0x13917F4", VA = "0x13917F4")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x200033D")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021C")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1392544", Offset = "0x1392544", VA = "0x1392544")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x13924CC", Offset = "0x13924CC", VA = "0x13924CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1392624", Offset = "0x1392624", VA = "0x1392624")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x13925AC", Offset = "0x13925AC", VA = "0x13925AC")]
		set
		{
		}
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x1392220", Offset = "0x1392220", VA = "0x1392220")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x1392260", Offset = "0x1392260", VA = "0x1392260")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x13922AC", Offset = "0x13922AC", VA = "0x13922AC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x13922E0", Offset = "0x13922E0", VA = "0x13922E0", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x1392350", Offset = "0x1392350", VA = "0x1392350", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x139268C", Offset = "0x139268C", VA = "0x139268C")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x200033E")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021E")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x600175E")]
		[Address(RVA = "0x13929B8", Offset = "0x13929B8", VA = "0x13929B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x139270C", Offset = "0x139270C", VA = "0x139270C")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x139274C", Offset = "0x139274C", VA = "0x139274C")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x1392798", Offset = "0x1392798", VA = "0x1392798", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x13927CC", Offset = "0x13927CC", VA = "0x13927CC", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x139283C", Offset = "0x139283C", VA = "0x139283C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x1392A20", Offset = "0x1392A20", VA = "0x1392A20")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x200033F")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700021F")]
	public ulong listenerID
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0x13936FC", Offset = "0x13936FC", VA = "0x13936FC")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1393684", Offset = "0x1393684", VA = "0x1393684")]
		set
		{
		}
	}

	[Token(Token = "0x17000220")]
	public uint auxBusID
	{
		[Token(Token = "0x6001768")]
		[Address(RVA = "0x13937DC", Offset = "0x13937DC", VA = "0x13937DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1393764", Offset = "0x1393764", VA = "0x1393764")]
		set
		{
		}
	}

	[Token(Token = "0x17000221")]
	public float fControlValue
	{
		[Token(Token = "0x600176A")]
		[Address(RVA = "0x13938BC", Offset = "0x13938BC", VA = "0x13938BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1393844", Offset = "0x1393844", VA = "0x1393844")]
		set
		{
		}
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x1392C80", Offset = "0x1392C80", VA = "0x1392C80")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x1393418", Offset = "0x1393418", VA = "0x1393418")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x1393464", Offset = "0x1393464", VA = "0x1393464", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x1393498", Offset = "0x1393498", VA = "0x1393498", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x1393508", Offset = "0x1393508", VA = "0x1393508", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x1393924", Offset = "0x1393924", VA = "0x1393924")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x1393A00", Offset = "0x1393A00", VA = "0x1393A00")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x1393ACC", Offset = "0x1393ACC", VA = "0x1393ACC")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x2000340")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000222")]
	public uint bankID
	{
		[Token(Token = "0x6001773")]
		[Address(RVA = "0x13942E4", Offset = "0x13942E4", VA = "0x13942E4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000223")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6001774")]
		[Address(RVA = "0x139434C", Offset = "0x139434C", VA = "0x139434C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000224")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6001775")]
		[Address(RVA = "0x13943B4", Offset = "0x13943B4", VA = "0x13943B4")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000225")]
	public int memPoolId
	{
		[Token(Token = "0x6001776")]
		[Address(RVA = "0x139441C", Offset = "0x139441C", VA = "0x139441C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x1394038", Offset = "0x1394038", VA = "0x1394038")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x1394078", Offset = "0x1394078", VA = "0x1394078")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x13940C4", Offset = "0x13940C4", VA = "0x13940C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x13940F8", Offset = "0x13940F8", VA = "0x13940F8", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x1394168", Offset = "0x1394168", VA = "0x1394168", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x1394484", Offset = "0x1394484", VA = "0x1394484")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x2000341")]
public enum AkBankContent
{
	[Token(Token = "0x40012AA")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x40012AB")]
	AkBankContent_All
}
[Token(Token = "0x2000342")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x40012AD")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x40012AE")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x40012AF")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000343")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000226")]
	public IntPtr pCookie
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1395AF0", Offset = "0x1395AF0", VA = "0x1395AF0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000227")]
	public ulong gameObjID
	{
		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1395B58", Offset = "0x1395B58", VA = "0x1395B58")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x1395844", Offset = "0x1395844", VA = "0x1395844")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x1395884", Offset = "0x1395884", VA = "0x1395884")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x13958D0", Offset = "0x13958D0", VA = "0x13958D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x1395904", Offset = "0x1395904", VA = "0x1395904", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0x1395974", Offset = "0x1395974", VA = "0x1395974", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x1395BC0", Offset = "0x1395BC0", VA = "0x1395BC0")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x2000344")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x1397EA4", Offset = "0x1397EA4", VA = "0x1397EA4")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x1397EE4", Offset = "0x1397EE4", VA = "0x1397EE4")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x1397F30", Offset = "0x1397F30", VA = "0x1397F30", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x1397F64", Offset = "0x1397F64", VA = "0x1397F64", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x1397FD4", Offset = "0x1397FD4", VA = "0x1397FD4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x13967D8", Offset = "0x13967D8", VA = "0x13967D8")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x139693C", Offset = "0x139693C", VA = "0x139693C")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x1397814", Offset = "0x1397814", VA = "0x1397814")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x1396A1C", Offset = "0x1396A1C", VA = "0x1396A1C")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x1397870", Offset = "0x1397870", VA = "0x1397870")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x1398150", Offset = "0x1398150", VA = "0x1398150")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x13981F0", Offset = "0x13981F0", VA = "0x13981F0")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x2000345")]
public enum AkCallbackType
{
	[Token(Token = "0x40012B5")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x40012B6")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x40012B7")]
	AK_Marker = 4,
	[Token(Token = "0x40012B8")]
	AK_Duration = 8,
	[Token(Token = "0x40012B9")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x40012BA")]
	AK_Starvation = 32,
	[Token(Token = "0x40012BB")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x40012BC")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x40012BD")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x40012BE")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x40012BF")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40012C0")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40012C1")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40012C2")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40012C3")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40012C4")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40012C5")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40012C6")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40012C7")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40012C8")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40012C9")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40012CA")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40012CB")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40012CC")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40012CD")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x2000346")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000228")]
	public uint uNumChannels
	{
		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1398508", Offset = "0x1398508", VA = "0x1398508")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1398490", Offset = "0x1398490", VA = "0x1398490")]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public uint eConfigType
	{
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x13985E8", Offset = "0x13985E8", VA = "0x13985E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1398570", Offset = "0x1398570", VA = "0x1398570")]
		set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001796")]
		[Address(RVA = "0x13986C8", Offset = "0x13986C8", VA = "0x13986C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1398650", Offset = "0x1398650", VA = "0x1398650")]
		set
		{
		}
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x1390290", Offset = "0x1390290", VA = "0x1390290")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x1390180", Offset = "0x1390180", VA = "0x1390180")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x1398270", Offset = "0x1398270", VA = "0x1398270", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x13982A4", Offset = "0x13982A4", VA = "0x13982A4", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x1398314", Offset = "0x1398314", VA = "0x1398314", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x1398730", Offset = "0x1398730", VA = "0x1398730")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x13987B0", Offset = "0x13987B0", VA = "0x13987B0")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x1398848", Offset = "0x1398848", VA = "0x1398848")]
	public void Clear()
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x13988B0", Offset = "0x13988B0", VA = "0x13988B0")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x1398928", Offset = "0x1398928", VA = "0x1398928")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x13989A8", Offset = "0x13989A8", VA = "0x13989A8")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x1398A20", Offset = "0x1398A20", VA = "0x1398A20")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x1398A98", Offset = "0x1398A98", VA = "0x1398A98")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x1398B00", Offset = "0x1398B00", VA = "0x1398B00")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x1398B68", Offset = "0x1398B68", VA = "0x1398B68")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x1398BE0", Offset = "0x1398BE0", VA = "0x1398BE0")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x1398C8C", Offset = "0x1398C8C", VA = "0x1398C8C")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x1398D38", Offset = "0x1398D38", VA = "0x1398D38")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000347")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40012D1")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40012D2")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40012D3")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x2000348")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022B")]
	public AkTransform position
	{
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x13990D8", Offset = "0x13990D8", VA = "0x13990D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x139904C", Offset = "0x139904C", VA = "0x139904C")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public uint uInputChannels
	{
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1399214", Offset = "0x1399214", VA = "0x1399214")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x139919C", Offset = "0x139919C", VA = "0x139919C")]
		set
		{
		}
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x1398DA0", Offset = "0x1398DA0", VA = "0x1398DA0")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x1398DE0", Offset = "0x1398DE0", VA = "0x1398DE0")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x1398E2C", Offset = "0x1398E2C", VA = "0x1398E2C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x1398E60", Offset = "0x1398E60", VA = "0x1398E60", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x1398ED0", Offset = "0x1398ED0", VA = "0x1398ED0", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000349")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40012D7")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40012D8")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x200034A")]
public enum AkConnectionType
{
	[Token(Token = "0x40012DA")]
	ConnectionType_Direct,
	[Token(Token = "0x40012DB")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40012DC")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x200034B")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40012DE")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40012DF")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40012E0")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40012E1")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40012E2")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40012E3")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40012E4")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40012E5")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40012E6")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40012E7")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40012E8")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x200034C")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022D")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x139BEC4", Offset = "0x139BEC4", VA = "0x139BEC4")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x139BE4C", Offset = "0x139BE4C", VA = "0x139BE4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x139BF2C", Offset = "0x139BF2C", VA = "0x139BF2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1399874", Offset = "0x1399874", VA = "0x1399874")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x139C00C", Offset = "0x139C00C", VA = "0x139C00C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x139BF94", Offset = "0x139BF94", VA = "0x139BF94")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public int ePoolAttributes
	{
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x139C0EC", Offset = "0x139C0EC", VA = "0x139C0EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x139C074", Offset = "0x139C074", VA = "0x139C074")]
		set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public uint uGranularity
	{
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x139C1CC", Offset = "0x139C1CC", VA = "0x139C1CC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x139C154", Offset = "0x139C154", VA = "0x139C154")]
		set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x139C2AC", Offset = "0x139C2AC", VA = "0x139C2AC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x139C234", Offset = "0x139C234", VA = "0x139C234")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x139C3A0", Offset = "0x139C3A0", VA = "0x139C3A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x139C314", Offset = "0x139C314", VA = "0x139C314")]
		set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x139C464", Offset = "0x139C464", VA = "0x139C464")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x13998EC", Offset = "0x13998EC", VA = "0x13998EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x139C544", Offset = "0x139C544", VA = "0x139C544")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x139C4CC", Offset = "0x139C4CC", VA = "0x139C4CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x139C5AC", Offset = "0x139C5AC", VA = "0x139C5AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1399964", Offset = "0x1399964", VA = "0x1399964")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x139C614", Offset = "0x139C614", VA = "0x139C614")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x13999DC", Offset = "0x13999DC", VA = "0x13999DC")]
		set
		{
		}
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x139BBA0", Offset = "0x139BBA0", VA = "0x139BBA0")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x139BBE0", Offset = "0x139BBE0", VA = "0x139BBE0")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x139BC2C", Offset = "0x139BC2C", VA = "0x139BC2C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x139BC60", Offset = "0x139BC60", VA = "0x139BC60", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x139BCD0", Offset = "0x139BCD0", VA = "0x139BCD0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0x139C67C", Offset = "0x139C67C", VA = "0x139C67C")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x200034D")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40012EC")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40012ED")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40012EE")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40012EF")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x200034E")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40012F2")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000238")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x139CA34", Offset = "0x139CA34", VA = "0x139CA34")]
		get
		{
			return null;
		}
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x139C9A8", Offset = "0x139C9A8", VA = "0x139C9A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public uint nodeCount
	{
		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x139CB70", Offset = "0x139CB70", VA = "0x139CB70")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x139CAF8", Offset = "0x139CAF8", VA = "0x139CAF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public float diffraction
	{
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x139CC50", Offset = "0x139CC50", VA = "0x139CC50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x139CBD8", Offset = "0x139CBD8", VA = "0x139CBD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public float totLength
	{
		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x139CD30", Offset = "0x139CD30", VA = "0x139CD30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x139CCB8", Offset = "0x139CCB8", VA = "0x139CCB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public float obstructionValue
	{
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x139CE10", Offset = "0x139CE10", VA = "0x139CE10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x139CD98", Offset = "0x139CD98", VA = "0x139CD98")]
		set
		{
		}
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x139C6FC", Offset = "0x139C6FC", VA = "0x139C6FC")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x139C73C", Offset = "0x139C73C", VA = "0x139C73C")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x139C788", Offset = "0x139C788", VA = "0x139C788", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x139C7BC", Offset = "0x139C7BC", VA = "0x139C7BC", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0x139C82C", Offset = "0x139C82C", VA = "0x139C82C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x139CE78", Offset = "0x139CE78", VA = "0x139CE78")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x139CED4", Offset = "0x139CED4", VA = "0x139CED4")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x139CFA8", Offset = "0x139CFA8", VA = "0x139CFA8")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x139D020", Offset = "0x139D020", VA = "0x139D020")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x139D098", Offset = "0x139D098", VA = "0x139D098")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x139D110", Offset = "0x139D110", VA = "0x139D110")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x139D1B0", Offset = "0x139D1B0", VA = "0x139D1B0")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x200034F")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700023D")]
	public float fDuration
	{
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x139D99C", Offset = "0x139D99C", VA = "0x139D99C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023E")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x139DA04", Offset = "0x139DA04", VA = "0x139DA04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023F")]
	public uint audioNodeID
	{
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x139DA6C", Offset = "0x139DA6C", VA = "0x139DA6C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000240")]
	public uint mediaID
	{
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x139DAD4", Offset = "0x139DAD4", VA = "0x139DAD4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000241")]
	public bool bStreaming
	{
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x139DB3C", Offset = "0x139DB3C", VA = "0x139DB3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x1397E18", Offset = "0x1397E18", VA = "0x1397E18")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x139D464", Offset = "0x139D464", VA = "0x139D464")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x139D4B0", Offset = "0x139D4B0", VA = "0x139D4B0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x139D5C4", Offset = "0x139D5C4", VA = "0x139D5C4", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x139D694", Offset = "0x139D694", VA = "0x139D694", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x139DBA4", Offset = "0x139DBA4", VA = "0x139DBA4")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x2000350")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000242")]
	public uint playingID
	{
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x139DEDC", Offset = "0x139DEDC", VA = "0x139DEDC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000243")]
	public uint audioNodeID
	{
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x139DF44", Offset = "0x139DF44", VA = "0x139DF44")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000244")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x139DFAC", Offset = "0x139DFAC", VA = "0x139DFAC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0x1397CF4", Offset = "0x1397CF4", VA = "0x1397CF4")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x139DC14", Offset = "0x139DC14", VA = "0x139DC14")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x139DC60", Offset = "0x139DC60", VA = "0x139DC60", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x139DCF0", Offset = "0x139DCF0", VA = "0x139DCF0", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x139DD58", Offset = "0x139DD58", VA = "0x139DD58", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x139E014", Offset = "0x139E014", VA = "0x139E014")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x2000351")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40012F6")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40012F7")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000352")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000245")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x139E7EC", Offset = "0x139E7EC", VA = "0x139E7EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x139E774", Offset = "0x139E774", VA = "0x139E774")]
		set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x139E8CC", Offset = "0x139E8CC", VA = "0x139E8CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x139E854", Offset = "0x139E854", VA = "0x139E854")]
		set
		{
		}
	}

	[Token(Token = "0x17000247")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x139E9AC", Offset = "0x139E9AC", VA = "0x139E9AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x139E934", Offset = "0x139E934", VA = "0x139E934")]
		set
		{
		}
	}

	[Token(Token = "0x17000248")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6001800")]
		[Address(RVA = "0x139EA8C", Offset = "0x139EA8C", VA = "0x139EA8C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x139EA14", Offset = "0x139EA14", VA = "0x139EA14")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6001802")]
		[Address(RVA = "0x139EB6C", Offset = "0x139EB6C", VA = "0x139EB6C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001801")]
		[Address(RVA = "0x139EAF4", Offset = "0x139EAF4", VA = "0x139EAF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6001804")]
		[Address(RVA = "0x139EC4C", Offset = "0x139EC4C", VA = "0x139EC4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001803")]
		[Address(RVA = "0x139EBD4", Offset = "0x139EBD4", VA = "0x139EBD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x6001806")]
		[Address(RVA = "0x139ED2C", Offset = "0x139ED2C", VA = "0x139ED2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001805")]
		[Address(RVA = "0x139ECB4", Offset = "0x139ECB4", VA = "0x139ECB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700024C")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6001808")]
		[Address(RVA = "0x139EE0C", Offset = "0x139EE0C", VA = "0x139EE0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001807")]
		[Address(RVA = "0x139ED94", Offset = "0x139ED94", VA = "0x139ED94")]
		set
		{
		}
	}

	[Token(Token = "0x1700024D")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x600180A")]
		[Address(RVA = "0x139EEEC", Offset = "0x139EEEC", VA = "0x139EEEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001809")]
		[Address(RVA = "0x139EE74", Offset = "0x139EE74", VA = "0x139EE74")]
		set
		{
		}
	}

	[Token(Token = "0x1700024E")]
	public byte useImageSources
	{
		[Token(Token = "0x600180C")]
		[Address(RVA = "0x139EFCC", Offset = "0x139EFCC", VA = "0x139EFCC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600180B")]
		[Address(RVA = "0x139EF54", Offset = "0x139EF54", VA = "0x139EF54")]
		set
		{
		}
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x139E448", Offset = "0x139E448", VA = "0x139E448")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x139E488", Offset = "0x139E488", VA = "0x139E488")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x139E4D4", Offset = "0x139E4D4", VA = "0x139E4D4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x139E508", Offset = "0x139E508", VA = "0x139E508", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x139E578", Offset = "0x139E578", VA = "0x139E578", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x139E6F4", Offset = "0x139E6F4", VA = "0x139E6F4")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x2000353")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700024F")]
	public uint playingID
	{
		[Token(Token = "0x6001812")]
		[Address(RVA = "0x13912B4", Offset = "0x13912B4", VA = "0x13912B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000250")]
	public uint eventID
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x139FAAC", Offset = "0x139FAAC", VA = "0x139FAAC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x1397C5C", Offset = "0x1397C5C", VA = "0x1397C5C")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x139FA60", Offset = "0x139FA60", VA = "0x139FA60")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x139D534", Offset = "0x139D534", VA = "0x139D534", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x139D62C", Offset = "0x139D62C", VA = "0x139D62C", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x139D818", Offset = "0x139D818", VA = "0x139D818", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x139FB14", Offset = "0x139FB14", VA = "0x139FB14")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000354")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000251")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6001822")]
		[Address(RVA = "0x13A1854", Offset = "0x13A1854", VA = "0x13A1854")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001821")]
		[Address(RVA = "0x13A17DC", Offset = "0x13A17DC", VA = "0x13A17DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000252")]
	public uint idCodec
	{
		[Token(Token = "0x6001824")]
		[Address(RVA = "0x13A1934", Offset = "0x13A1934", VA = "0x13A1934")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001823")]
		[Address(RVA = "0x13A18BC", Offset = "0x13A18BC", VA = "0x13A18BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000253")]
	public string szFile
	{
		[Token(Token = "0x6001826")]
		[Address(RVA = "0x13A1A14", Offset = "0x13A1A14", VA = "0x13A1A14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001825")]
		[Address(RVA = "0x13A199C", Offset = "0x13A199C", VA = "0x13A199C")]
		set
		{
		}
	}

	[Token(Token = "0x17000254")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6001828")]
		[Address(RVA = "0x13A1B34", Offset = "0x13A1B34", VA = "0x13A1B34")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x13A1ABC", Offset = "0x13A1ABC", VA = "0x13A1ABC")]
		set
		{
		}
	}

	[Token(Token = "0x17000255")]
	public uint uiMemorySize
	{
		[Token(Token = "0x600182A")]
		[Address(RVA = "0x13A1C14", Offset = "0x13A1C14", VA = "0x13A1C14")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001829")]
		[Address(RVA = "0x13A1B9C", Offset = "0x13A1B9C", VA = "0x13A1B9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000256")]
	public uint idFile
	{
		[Token(Token = "0x600182C")]
		[Address(RVA = "0x13A1CF4", Offset = "0x13A1CF4", VA = "0x13A1CF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600182B")]
		[Address(RVA = "0x13A1C7C", Offset = "0x13A1C7C", VA = "0x13A1C7C")]
		set
		{
		}
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x13A114C", Offset = "0x13A114C", VA = "0x13A114C")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x13A118C", Offset = "0x13A118C", VA = "0x13A118C")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x13A11D8", Offset = "0x13A11D8", VA = "0x13A11D8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0x13A120C", Offset = "0x13A120C", VA = "0x13A120C", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x13A127C", Offset = "0x13A127C", VA = "0x13A127C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x13A13F8", Offset = "0x13A13F8", VA = "0x13A13F8")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x13A1478", Offset = "0x13A1478", VA = "0x13A1478")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x13A1528", Offset = "0x13A1528", VA = "0x13A1528")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x13A15D0", Offset = "0x13A15D0", VA = "0x13A15D0")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x13A1678", Offset = "0x13A1678", VA = "0x13A1678")]
	public void Clear()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x13A16E0", Offset = "0x13A16E0", VA = "0x13A16E0")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x13A1780", Offset = "0x13A1780", VA = "0x13A1780")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x2000355")]
public enum AkFloorPlane
{
	[Token(Token = "0x40012FE")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40012FF")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x4001300")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x4001301")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000356")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x4001303")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4001304")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x4001305")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x4001306")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x4001307")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x4001308")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x4001309")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x400130A")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x400130B")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x400130C")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x400130D")]
	AkGlobalCallbackLocation_Init = 1024,
	[Token(Token = "0x400130E")]
	AkGlobalCallbackLocation_Suspend = 2048,
	[Token(Token = "0x400130F")]
	AkGlobalCallbackLocation_WakeupFromSuspend = 4096,
	[Token(Token = "0x4001310")]
	AkGlobalCallbackLocation_Num = 13
}
[Token(Token = "0x2000357")]
public enum AkGroupType
{
	[Token(Token = "0x4001312")]
	AkGroupType_Switch,
	[Token(Token = "0x4001313")]
	AkGroupType_State
}
[Token(Token = "0x2000358")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000257")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x13A3EB8", Offset = "0x13A3EB8", VA = "0x13A3EB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x13A3E2C", Offset = "0x13A3E2C", VA = "0x13A3E2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000258")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x13A3FF4", Offset = "0x13A3FF4", VA = "0x13A3FF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001836")]
		[Address(RVA = "0x13A3F7C", Offset = "0x13A3F7C", VA = "0x13A3F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000259")]
	public float fLevel
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x13A40D4", Offset = "0x13A40D4", VA = "0x13A40D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x13A405C", Offset = "0x13A405C", VA = "0x13A405C")]
		set
		{
		}
	}

	[Token(Token = "0x1700025A")]
	public float fDiffraction
	{
		[Token(Token = "0x600183B")]
		[Address(RVA = "0x13A41B4", Offset = "0x13A41B4", VA = "0x13A41B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x13A413C", Offset = "0x13A413C", VA = "0x13A413C")]
		set
		{
		}
	}

	[Token(Token = "0x1700025B")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x600183D")]
		[Address(RVA = "0x13A4294", Offset = "0x13A4294", VA = "0x13A4294")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x13A421C", Offset = "0x13A421C", VA = "0x13A421C")]
		set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x600183F")]
		[Address(RVA = "0x13A4374", Offset = "0x13A4374", VA = "0x13A4374")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x13A42FC", Offset = "0x13A42FC", VA = "0x13A42FC")]
		set
		{
		}
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x13A3A44", Offset = "0x13A3A44", VA = "0x13A3A44")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x13A3A84", Offset = "0x13A3A84", VA = "0x13A3A84")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0x13A3AD0", Offset = "0x13A3AD0", VA = "0x13A3AD0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x13A3B04", Offset = "0x13A3B04", VA = "0x13A3B04", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0x13A3B74", Offset = "0x13A3B74", VA = "0x13A3B74", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0x13A3CF0", Offset = "0x13A3CF0", VA = "0x13A3CF0")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0x13A3D70", Offset = "0x13A3D70", VA = "0x13A3D70")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x2000359")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700025D")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x13A4954", Offset = "0x13A4954", VA = "0x13A4954")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001849")]
		[Address(RVA = "0x13A48B4", Offset = "0x13A48B4", VA = "0x13A48B4")]
		set
		{
		}
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0x13A43DC", Offset = "0x13A43DC", VA = "0x13A43DC")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0x13A441C", Offset = "0x13A441C", VA = "0x13A441C")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x13A4468", Offset = "0x13A4468", VA = "0x13A4468", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x13A449C", Offset = "0x13A449C", VA = "0x13A449C", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0x13A450C", Offset = "0x13A450C", VA = "0x13A450C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x13A4688", Offset = "0x13A4688", VA = "0x13A4688")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x13A4708", Offset = "0x13A4708", VA = "0x13A4708")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x13A47C4", Offset = "0x13A47C4", VA = "0x13A47C4")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x13A483C", Offset = "0x13A483C", VA = "0x13A483C")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x200035A")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700025E")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6001851")]
		[Address(RVA = "0x13A4CC4", Offset = "0x13A4CC4", VA = "0x13A4CC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x139B0F8", Offset = "0x139B0F8", VA = "0x139B0F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x13A4D2C", Offset = "0x13A4D2C", VA = "0x13A4D2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x139B170", Offset = "0x139B170", VA = "0x139B170")]
		set
		{
		}
	}

	[Token(Token = "0x17000260")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6001855")]
		[Address(RVA = "0x13A4D94", Offset = "0x13A4D94", VA = "0x13A4D94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x139B1E8", Offset = "0x139B1E8", VA = "0x139B1E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000261")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6001857")]
		[Address(RVA = "0x13A4DFC", Offset = "0x13A4DFC", VA = "0x13A4DFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x139B260", Offset = "0x139B260", VA = "0x139B260")]
		set
		{
		}
	}

	[Token(Token = "0x17000262")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x6001859")]
		[Address(RVA = "0x13A4E64", Offset = "0x13A4E64", VA = "0x13A4E64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1399AD8", Offset = "0x1399AD8", VA = "0x1399AD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000263")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x600185B")]
		[Address(RVA = "0x13A4ECC", Offset = "0x13A4ECC", VA = "0x13A4ECC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1399B50", Offset = "0x1399B50", VA = "0x1399B50")]
		set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x600185D")]
		[Address(RVA = "0x13A4F34", Offset = "0x13A4F34", VA = "0x13A4F34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1399BC8", Offset = "0x1399BC8", VA = "0x1399BC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000265")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x13A4F9C", Offset = "0x13A4F9C", VA = "0x13A4F9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600185E")]
		[Address(RVA = "0x139B2D8", Offset = "0x139B2D8", VA = "0x139B2D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000266")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6001861")]
		[Address(RVA = "0x13A5004", Offset = "0x13A5004", VA = "0x13A5004")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1399C40", Offset = "0x1399C40", VA = "0x1399C40")]
		set
		{
		}
	}

	[Token(Token = "0x17000267")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6001863")]
		[Address(RVA = "0x13A506C", Offset = "0x13A506C", VA = "0x13A506C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1399CB8", Offset = "0x1399CB8", VA = "0x1399CB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000268")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x139B350", Offset = "0x139B350", VA = "0x139B350")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001864")]
		[Address(RVA = "0x13A50D4", Offset = "0x13A50D4", VA = "0x13A50D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000269")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6001867")]
		[Address(RVA = "0x13A5160", Offset = "0x13A5160", VA = "0x13A5160")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1399D30", Offset = "0x1399D30", VA = "0x1399D30")]
		set
		{
		}
	}

	[Token(Token = "0x1700026A")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x6001869")]
		[Address(RVA = "0x13A5240", Offset = "0x13A5240", VA = "0x13A5240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001868")]
		[Address(RVA = "0x13A51C8", Offset = "0x13A51C8", VA = "0x13A51C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700026B")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x600186B")]
		[Address(RVA = "0x13A5320", Offset = "0x13A5320", VA = "0x13A5320")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600186A")]
		[Address(RVA = "0x13A52A8", Offset = "0x13A52A8", VA = "0x13A52A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x600186D")]
		[Address(RVA = "0x139B48C", Offset = "0x139B48C", VA = "0x139B48C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600186C")]
		[Address(RVA = "0x139B414", Offset = "0x139B414", VA = "0x139B414")]
		set
		{
		}
	}

	[Token(Token = "0x1700026D")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x600186F")]
		[Address(RVA = "0x13A5400", Offset = "0x13A5400", VA = "0x13A5400")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x600186E")]
		[Address(RVA = "0x13A5388", Offset = "0x13A5388", VA = "0x13A5388")]
		set
		{
		}
	}

	[Token(Token = "0x1700026E")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x13A5468", Offset = "0x13A5468", VA = "0x13A5468")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1399E20", Offset = "0x1399E20", VA = "0x1399E20")]
		set
		{
		}
	}

	[Token(Token = "0x1700026F")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x13A54D0", Offset = "0x13A54D0", VA = "0x13A54D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1399DA8", Offset = "0x1399DA8", VA = "0x1399DA8")]
		set
		{
		}
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0x13A4A18", Offset = "0x13A4A18", VA = "0x13A4A18")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x13A4A58", Offset = "0x13A4A58", VA = "0x13A4A58")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0x13A4AA4", Offset = "0x13A4AA4", VA = "0x13A4AA4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0x13A4AD8", Offset = "0x13A4AD8", VA = "0x13A4AD8", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0x13A4B48", Offset = "0x13A4B48", VA = "0x13A4B48", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0x13A5538", Offset = "0x13A5538", VA = "0x13A5538")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x200035B")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000270")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x600187C")]
		[Address(RVA = "0x139A6F4", Offset = "0x139A6F4", VA = "0x139A6F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600187B")]
		[Address(RVA = "0x13A5864", Offset = "0x13A5864", VA = "0x13A5864")]
		set
		{
		}
	}

	[Token(Token = "0x17000271")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x600187E")]
		[Address(RVA = "0x139A8A0", Offset = "0x139A8A0", VA = "0x139A8A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x13A58F0", Offset = "0x13A58F0", VA = "0x13A58F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000272")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6001880")]
		[Address(RVA = "0x139A7DC", Offset = "0x139A7DC", VA = "0x139A7DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600187F")]
		[Address(RVA = "0x13A597C", Offset = "0x13A597C", VA = "0x13A597C")]
		set
		{
		}
	}

	[Token(Token = "0x17000273")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6001882")]
		[Address(RVA = "0x139A988", Offset = "0x139A988", VA = "0x139A988")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001881")]
		[Address(RVA = "0x13A5A1C", Offset = "0x13A5A1C", VA = "0x13A5A1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000274")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6001884")]
		[Address(RVA = "0x139AA4C", Offset = "0x139AA4C", VA = "0x139AA4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001883")]
		[Address(RVA = "0x13A5ABC", Offset = "0x13A5ABC", VA = "0x13A5ABC")]
		set
		{
		}
	}

	[Token(Token = "0x17000275")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6001886")]
		[Address(RVA = "0x139AB10", Offset = "0x139AB10", VA = "0x139AB10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001885")]
		[Address(RVA = "0x13A5B48", Offset = "0x13A5B48", VA = "0x13A5B48")]
		set
		{
		}
	}

	[Token(Token = "0x17000276")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6001888")]
		[Address(RVA = "0x13A5BD4", Offset = "0x13A5BD4", VA = "0x13A5BD4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001887")]
		[Address(RVA = "0x139ACB8", Offset = "0x139ACB8", VA = "0x139ACB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000277")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x600188A")]
		[Address(RVA = "0x139ABF4", Offset = "0x139ABF4", VA = "0x139ABF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001889")]
		[Address(RVA = "0x13A5C3C", Offset = "0x13A5C3C", VA = "0x13A5C3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000278")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x600188C")]
		[Address(RVA = "0x13A5CC8", Offset = "0x13A5CC8", VA = "0x13A5CC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600188B")]
		[Address(RVA = "0x139AD30", Offset = "0x139AD30", VA = "0x139AD30")]
		set
		{
		}
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0x13A55B8", Offset = "0x13A55B8", VA = "0x13A55B8")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001876")]
	[Address(RVA = "0x13A55F8", Offset = "0x13A55F8", VA = "0x13A55F8")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0x13A5644", Offset = "0x13A5644", VA = "0x13A5644", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0x13A5678", Offset = "0x13A5678", VA = "0x13A5678", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0x13A56E8", Offset = "0x13A56E8", VA = "0x13A56E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0x1395580", Offset = "0x1395580", VA = "0x1395580")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x200035C")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000279")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6001893")]
		[Address(RVA = "0x13A66D0", Offset = "0x13A66D0", VA = "0x13A66D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001892")]
		[Address(RVA = "0x13A6644", Offset = "0x13A6644", VA = "0x13A6644")]
		set
		{
		}
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x13A6398", Offset = "0x13A6398", VA = "0x13A6398")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x13A63D8", Offset = "0x13A63D8", VA = "0x13A63D8")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x13A6424", Offset = "0x13A6424", VA = "0x13A6424", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x13A6458", Offset = "0x13A6458", VA = "0x13A6458", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x13A64C8", Offset = "0x13A64C8", VA = "0x13A64C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x13A6794", Offset = "0x13A6794", VA = "0x13A6794")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x13A683C", Offset = "0x13A683C", VA = "0x13A683C")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x13A68E4", Offset = "0x13A68E4", VA = "0x13A68E4")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x13A698C", Offset = "0x13A698C", VA = "0x13A698C")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x13A6A2C", Offset = "0x13A6A2C", VA = "0x13A6A2C")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x13A6ACC", Offset = "0x13A6ACC", VA = "0x13A6ACC")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x200035D")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x400131F")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4001320")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4001321")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4001322")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4001323")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4001324")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4001325")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4001326")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4001327")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4001328")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4001329")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x400132A")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x400132B")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x400132C")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400132D")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400132E")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400132F")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4001330")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4001331")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4001332")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4001333")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4001334")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4001335")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4001336")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4001337")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4001338")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4001339")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x400133A")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x400133B")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x400133C")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x400133D")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x400133E")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x400133F")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4001340")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4001341")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4001342")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4001343")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4001344")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4001345")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4001346")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4001347")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4001348")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4001349")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x400134A")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x400134B")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x400134C")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x400134D")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x400134E")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x400134F")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4001350")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4001351")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4001352")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4001353")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4001354")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4001355")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4001356")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4001357")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4001358")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4001359")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x400135A")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x400135B")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x400135C")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x400135D")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x400135E")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x400135F")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4001360")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4001361")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4001362")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4001363")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4001364")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4001365")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4001366")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4001367")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4001368")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4001369")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x400136A")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x400136B")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x400136C")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x400136D")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x400136E")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x400136F")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4001370")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4001371")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4001372")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4001373")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4001374")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4001375")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4001376")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4001377")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4001378")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4001379")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x400137A")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x400137B")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x400137C")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x400137D")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x400137E")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x400137F")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x200035E")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x200035F")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028D")]
		public byte byParam1
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xFF9068", Offset = "0xFF9068", VA = "0xFF9068")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xFF8FF0", Offset = "0xFF8FF0", VA = "0xFF8FF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public byte byParam2
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xFF9148", Offset = "0xFF9148", VA = "0xFF9148")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xFF90D0", Offset = "0xFF90D0", VA = "0xFF90D0")]
			set
			{
			}
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xFF8D44", Offset = "0xFF8D44", VA = "0xFF8D44")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xFF8D84", Offset = "0xFF8D84", VA = "0xFF8D84")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xFF8DD0", Offset = "0xFF8DD0", VA = "0xFF8DD0", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xFF8E04", Offset = "0xFF8E04", VA = "0xFF8E04", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xFF8E74", Offset = "0xFF8E74", VA = "0xFF8E74", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xFF91B0", Offset = "0xFF91B0", VA = "0xFF91B0")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x2000360")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028F")]
		public byte byNote
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xFF9A40", Offset = "0xFF9A40", VA = "0xFF9A40")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xFF99C8", Offset = "0xFF99C8", VA = "0xFF99C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public byte byVelocity
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xFF9B20", Offset = "0xFF9B20", VA = "0xFF9B20")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xFF9AA8", Offset = "0xFF9AA8", VA = "0xFF9AA8")]
			set
			{
			}
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xFF971C", Offset = "0xFF971C", VA = "0xFF971C")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xFF975C", Offset = "0xFF975C", VA = "0xFF975C")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xFF97A8", Offset = "0xFF97A8", VA = "0xFF97A8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xFF97DC", Offset = "0xFF97DC", VA = "0xFF97DC", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xFF984C", Offset = "0xFF984C", VA = "0xFF984C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xFF9B88", Offset = "0xFF9B88", VA = "0xFF9B88")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x2000361")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000291")]
		public byte byCc
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xFF8770", Offset = "0xFF8770", VA = "0xFF8770")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xFF86F8", Offset = "0xFF86F8", VA = "0xFF86F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public byte byValue
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xFF8850", Offset = "0xFF8850", VA = "0xFF8850")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xFF87D8", Offset = "0xFF87D8", VA = "0xFF87D8")]
			set
			{
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xFF844C", Offset = "0xFF844C", VA = "0xFF844C")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xFF848C", Offset = "0xFF848C", VA = "0xFF848C")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xFF84D8", Offset = "0xFF84D8", VA = "0xFF84D8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xFF850C", Offset = "0xFF850C", VA = "0xFF850C", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xFF857C", Offset = "0xFF857C", VA = "0xFF857C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xFF88B8", Offset = "0xFF88B8", VA = "0xFF88B8")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000362")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000293")]
		public byte byValueLsb
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xFF9F2C", Offset = "0xFF9F2C", VA = "0xFF9F2C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xFF9EB4", Offset = "0xFF9EB4", VA = "0xFF9EB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public byte byValueMsb
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0xFFA00C", Offset = "0xFFA00C", VA = "0xFFA00C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xFF9F94", Offset = "0xFF9F94", VA = "0xFF9F94")]
			set
			{
			}
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xFF9C08", Offset = "0xFF9C08", VA = "0xFF9C08")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xFF9C48", Offset = "0xFF9C48", VA = "0xFF9C48")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xFF9C94", Offset = "0xFF9C94", VA = "0xFF9C94", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xFF9CC8", Offset = "0xFF9CC8", VA = "0xFF9CC8", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xFF9D38", Offset = "0xFF9D38", VA = "0xFF9D38", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xFFA074", Offset = "0xFFA074", VA = "0xFFA074")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000363")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000295")]
		public byte byNote
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xFF9554", Offset = "0xFF9554", VA = "0xFF9554")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xFF94DC", Offset = "0xFF94DC", VA = "0xFF94DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public byte byValue
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xFF9634", Offset = "0xFF9634", VA = "0xFF9634")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xFF95BC", Offset = "0xFF95BC", VA = "0xFF95BC")]
			set
			{
			}
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xFF9230", Offset = "0xFF9230", VA = "0xFF9230")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xFF9270", Offset = "0xFF9270", VA = "0xFF9270")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xFF92BC", Offset = "0xFF92BC", VA = "0xFF92BC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xFF92F0", Offset = "0xFF92F0", VA = "0xFF92F0", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xFF9360", Offset = "0xFF9360", VA = "0xFF9360", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xFF969C", Offset = "0xFF969C", VA = "0xFF969C")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000364")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000297")]
		public byte byValue
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xFF8C5C", Offset = "0xFF8C5C", VA = "0xFF8C5C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xFF8BE4", Offset = "0xFF8BE4", VA = "0xFF8BE4")]
			set
			{
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xFF8938", Offset = "0xFF8938", VA = "0xFF8938")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xFF8978", Offset = "0xFF8978", VA = "0xFF8978")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xFF89C4", Offset = "0xFF89C4", VA = "0xFF89C4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xFF89F8", Offset = "0xFF89F8", VA = "0xFF89F8", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xFF8A68", Offset = "0xFF8A68", VA = "0xFF8A68", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xFF8CC4", Offset = "0xFF8CC4", VA = "0xFF8CC4")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000365")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000298")]
		public byte byProgramNum
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xFFA418", Offset = "0xFFA418", VA = "0xFFA418")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xFFA3A0", Offset = "0xFFA3A0", VA = "0xFFA3A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xFFA0F4", Offset = "0xFFA0F4", VA = "0xFFA0F4")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xFFA134", Offset = "0xFFA134", VA = "0xFFA134")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xFFA180", Offset = "0xFFA180", VA = "0xFFA180", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xFFA1B4", Offset = "0xFFA1B4", VA = "0xFFA1B4", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xFFA224", Offset = "0xFFA224", VA = "0xFFA224", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xFFA480", Offset = "0xFFA480", VA = "0xFFA480")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700027A")]
	public byte byChan
	{
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x13A73DC", Offset = "0x13A73DC", VA = "0x13A73DC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600189F")]
		[Address(RVA = "0x13A7364", Offset = "0x13A7364", VA = "0x13A7364")]
		set
		{
		}
	}

	[Token(Token = "0x1700027B")]
	public tGen Gen
	{
		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x13A74D0", Offset = "0x13A74D0", VA = "0x13A74D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x13A7444", Offset = "0x13A7444", VA = "0x13A7444")]
		set
		{
		}
	}

	[Token(Token = "0x1700027C")]
	public tCc Cc
	{
		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x13A7620", Offset = "0x13A7620", VA = "0x13A7620")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x13A7594", Offset = "0x13A7594", VA = "0x13A7594")]
		set
		{
		}
	}

	[Token(Token = "0x1700027D")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x13A7770", Offset = "0x13A7770", VA = "0x13A7770")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x13A76E4", Offset = "0x13A76E4", VA = "0x13A76E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700027E")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x13A78C0", Offset = "0x13A78C0", VA = "0x13A78C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x13A7834", Offset = "0x13A7834", VA = "0x13A7834")]
		set
		{
		}
	}

	[Token(Token = "0x1700027F")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x13A7A10", Offset = "0x13A7A10", VA = "0x13A7A10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x13A7984", Offset = "0x13A7984", VA = "0x13A7984")]
		set
		{
		}
	}

	[Token(Token = "0x17000280")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x13A7B60", Offset = "0x13A7B60", VA = "0x13A7B60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x13A7AD4", Offset = "0x13A7AD4", VA = "0x13A7AD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000281")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x13A7CB0", Offset = "0x13A7CB0", VA = "0x13A7CB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x13A7C24", Offset = "0x13A7C24", VA = "0x13A7C24")]
		set
		{
		}
	}

	[Token(Token = "0x17000282")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x13A7DEC", Offset = "0x13A7DEC", VA = "0x13A7DEC")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x13A7D74", Offset = "0x13A7D74", VA = "0x13A7D74")]
		set
		{
		}
	}

	[Token(Token = "0x17000283")]
	public byte byOnOffNote
	{
		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x13A7ECC", Offset = "0x13A7ECC", VA = "0x13A7ECC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x13A7E54", Offset = "0x13A7E54", VA = "0x13A7E54")]
		set
		{
		}
	}

	[Token(Token = "0x17000284")]
	public byte byVelocity
	{
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x13A7FAC", Offset = "0x13A7FAC", VA = "0x13A7FAC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x13A7F34", Offset = "0x13A7F34", VA = "0x13A7F34")]
		set
		{
		}
	}

	[Token(Token = "0x17000285")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x13A808C", Offset = "0x13A808C", VA = "0x13A808C")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x13A8014", Offset = "0x13A8014", VA = "0x13A8014")]
		set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public byte byCcValue
	{
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x13A816C", Offset = "0x13A816C", VA = "0x13A816C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x13A80F4", Offset = "0x13A80F4", VA = "0x13A80F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000287")]
	public byte byValueLsb
	{
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x13A824C", Offset = "0x13A824C", VA = "0x13A824C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x13A81D4", Offset = "0x13A81D4", VA = "0x13A81D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000288")]
	public byte byValueMsb
	{
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x13A832C", Offset = "0x13A832C", VA = "0x13A832C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x13A82B4", Offset = "0x13A82B4", VA = "0x13A82B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000289")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x13A840C", Offset = "0x13A840C", VA = "0x13A840C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x13A8394", Offset = "0x13A8394", VA = "0x13A8394")]
		set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x13A84EC", Offset = "0x13A84EC", VA = "0x13A84EC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x13A8474", Offset = "0x13A8474", VA = "0x13A8474")]
		set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x13A85CC", Offset = "0x13A85CC", VA = "0x13A85CC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x13A8554", Offset = "0x13A8554", VA = "0x13A8554")]
		set
		{
		}
	}

	[Token(Token = "0x1700028C")]
	public byte byProgramNum
	{
		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x13A86AC", Offset = "0x13A86AC", VA = "0x13A86AC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x13A8634", Offset = "0x13A8634", VA = "0x13A8634")]
		set
		{
		}
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x13A70B8", Offset = "0x13A70B8", VA = "0x13A70B8")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x13A70F8", Offset = "0x13A70F8", VA = "0x13A70F8")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x13A7144", Offset = "0x13A7144", VA = "0x13A7144", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x13A7178", Offset = "0x13A7178", VA = "0x13A7178", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x13A71E8", Offset = "0x13A71E8", VA = "0x13A71E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x13A8714", Offset = "0x13A8714", VA = "0x13A8714")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x2000366")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000299")]
	public byte byChan
	{
		[Token(Token = "0x600190D")]
		[Address(RVA = "0x13A8A50", Offset = "0x13A8A50", VA = "0x13A8A50")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029A")]
	public byte byParam1
	{
		[Token(Token = "0x600190E")]
		[Address(RVA = "0x13A8AB8", Offset = "0x13A8AB8", VA = "0x13A8AB8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029B")]
	public byte byParam2
	{
		[Token(Token = "0x600190F")]
		[Address(RVA = "0x13A8B20", Offset = "0x13A8B20", VA = "0x13A8B20")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029C")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001910")]
		[Address(RVA = "0x13A8B88", Offset = "0x13A8B88", VA = "0x13A8B88")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x1700029D")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001911")]
		[Address(RVA = "0x13A8BF0", Offset = "0x13A8BF0", VA = "0x13A8BF0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029E")]
	public byte byVelocity
	{
		[Token(Token = "0x6001912")]
		[Address(RVA = "0x13A8C58", Offset = "0x13A8C58", VA = "0x13A8C58")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700029F")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001913")]
		[Address(RVA = "0x13A8CC0", Offset = "0x13A8CC0", VA = "0x13A8CC0")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170002A0")]
	public byte byCcValue
	{
		[Token(Token = "0x6001914")]
		[Address(RVA = "0x13A8D28", Offset = "0x13A8D28", VA = "0x13A8D28")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A1")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001915")]
		[Address(RVA = "0x13A8D90", Offset = "0x13A8D90", VA = "0x13A8D90")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A2")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001916")]
		[Address(RVA = "0x13A8DF8", Offset = "0x13A8DF8", VA = "0x13A8DF8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A3")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001917")]
		[Address(RVA = "0x13A8E60", Offset = "0x13A8E60", VA = "0x13A8E60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A4")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001918")]
		[Address(RVA = "0x13A8EC8", Offset = "0x13A8EC8", VA = "0x13A8EC8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A5")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001919")]
		[Address(RVA = "0x13A8F30", Offset = "0x13A8F30", VA = "0x13A8F30")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A6")]
	public byte byProgramNum
	{
		[Token(Token = "0x600191A")]
		[Address(RVA = "0x13A8F98", Offset = "0x13A8F98", VA = "0x13A8F98")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0x1397D8C", Offset = "0x1397D8C", VA = "0x1397D8C")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0x13A8794", Offset = "0x13A8794", VA = "0x13A8794")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0x13A87E0", Offset = "0x13A87E0", VA = "0x13A87E0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0x13A8864", Offset = "0x13A8864", VA = "0x13A8864", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x13A88CC", Offset = "0x13A88CC", VA = "0x13A88CC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0x13A9000", Offset = "0x13A9000", VA = "0x13A9000")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000367")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4001392")]
	NOTE_OFF = 128,
	[Token(Token = "0x4001393")]
	NOTE_ON = 144,
	[Token(Token = "0x4001394")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4001395")]
	CONTROLLER = 176,
	[Token(Token = "0x4001396")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4001397")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x4001398")]
	PITCH_BEND = 224,
	[Token(Token = "0x4001399")]
	SYSEX = 240,
	[Token(Token = "0x400139A")]
	ESCAPE = 247,
	[Token(Token = "0x400139B")]
	META = 255
}
[Token(Token = "0x2000368")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002A7")]
	public uint uOffset
	{
		[Token(Token = "0x6001922")]
		[Address(RVA = "0x13A9448", Offset = "0x13A9448", VA = "0x13A9448")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001921")]
		[Address(RVA = "0x13A93D0", Offset = "0x13A93D0", VA = "0x13A93D0")]
		set
		{
		}
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0x13A9070", Offset = "0x13A9070", VA = "0x13A9070")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0x13A9108", Offset = "0x13A9108", VA = "0x13A9108")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0x13A9154", Offset = "0x13A9154", VA = "0x13A9154", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0x13A91E4", Offset = "0x13A91E4", VA = "0x13A91E4", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x13A924C", Offset = "0x13A924C", VA = "0x13A924C", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0x13A94B0", Offset = "0x13A94B0", VA = "0x13A94B0")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0x13A958C", Offset = "0x13A958C", VA = "0x13A958C")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0x13A962C", Offset = "0x13A962C", VA = "0x13A962C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0x13A9688", Offset = "0x13A9688", VA = "0x13A9688")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x2000369")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002A8")]
	public uint uIdentifier
	{
		[Token(Token = "0x600192C")]
		[Address(RVA = "0xE238AC", Offset = "0xE238AC", VA = "0xE238AC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002A9")]
	public uint uPosition
	{
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xE23990", Offset = "0xE23990", VA = "0xE23990")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002AA")]
	public string strLabel
	{
		[Token(Token = "0x600192E")]
		[Address(RVA = "0xE23A74", Offset = "0xE23A74", VA = "0xE23A74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0xE2345C", Offset = "0xE2345C", VA = "0xE2345C")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0xE23568", Offset = "0xE23568", VA = "0xE23568")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0xE235B4", Offset = "0xE235B4", VA = "0xE235B4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0xE23638", Offset = "0xE23638", VA = "0xE23638", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0xE236A8", Offset = "0xE236A8", VA = "0xE236A8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xE23BF8", Offset = "0xE23BF8", VA = "0xE23BF8")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x200036A")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AB")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6001937")]
		[Address(RVA = "0xE24920", Offset = "0xE24920", VA = "0xE24920")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001936")]
		[Address(RVA = "0xE2481C", Offset = "0xE2481C", VA = "0xE2481C")]
		set
		{
		}
	}

	[Token(Token = "0x170002AC")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6001939")]
		[Address(RVA = "0xE24B08", Offset = "0xE24B08", VA = "0xE24B08")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001938")]
		[Address(RVA = "0xE24A04", Offset = "0xE24A04", VA = "0xE24A04")]
		set
		{
		}
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xE24404", Offset = "0xE24404", VA = "0xE24404")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xE24444", Offset = "0xE24444", VA = "0xE24444")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xE24490", Offset = "0xE24490", VA = "0xE24490", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xE244C4", Offset = "0xE244C4", VA = "0xE244C4", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xE24534", Offset = "0xE24534", VA = "0xE24534", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xE2472C", Offset = "0xE2472C", VA = "0xE2472C")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x200036B")]
public enum AkMeteringFlags
{
	[Token(Token = "0x40013A1")]
	AK_NoMetering = 0,
	[Token(Token = "0x40013A2")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x40013A3")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x40013A4")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x40013A5")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x40013A6")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x200036C")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x40013A8")]
	ErrorCode_NoError,
	[Token(Token = "0x40013A9")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x40013AA")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x40013AB")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x40013AC")]
	ErrorCode_IODevice,
	[Token(Token = "0x40013AD")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x40013AE")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x40013AF")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x40013B0")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x40013B1")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x40013B2")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x40013B3")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x40013B4")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x40013B5")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x40013B6")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x40013B7")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x40013B8")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x40013B9")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x40013BA")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x40013BB")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x40013BC")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x40013BD")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x40013BE")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x40013BF")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x40013C0")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x40013C1")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x40013C2")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x40013C3")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x40013C4")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x40013C5")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x40013C6")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x40013C7")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x40013C8")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x40013C9")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x40013CA")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x40013CB")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x40013CC")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x40013CD")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x40013CE")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x40013CF")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x40013D0")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40013D1")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40013D2")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40013D3")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40013D4")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40013D5")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40013D6")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40013D7")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40013D8")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40013D9")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40013DA")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40013DB")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40013DC")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40013DD")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40013DE")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40013DF")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40013E0")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40013E1")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40013E2")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40013E3")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40013E4")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40013E5")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40013E6")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40013E7")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40013E8")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40013E9")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40013EA")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40013EB")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40013EC")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40013ED")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40013EE")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40013EF")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40013F0")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40013F1")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40013F2")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40013F3")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40013F4")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40013F5")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40013F6")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40013F7")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40013F8")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40013F9")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40013FA")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40013FB")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40013FC")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40013FD")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40013FE")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40013FF")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x4001400")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x4001401")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x4001402")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x4001403")]
	ErrorCode_AudioDeviceOverproduction,
	[Token(Token = "0x4001404")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x4001405")]
	Num_ErrorCodes
}
[Token(Token = "0x200036D")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4001407")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4001408")]
	ErrorLevel_Error,
	[Token(Token = "0x4001409")]
	ErrorLevel_All
}
[Token(Token = "0x200036E")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002AD")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xE24F14", Offset = "0xE24F14", VA = "0xE24F14")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170002AE")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6001940")]
		[Address(RVA = "0xE24FF8", Offset = "0xE24FF8", VA = "0xE24FF8")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170002AF")]
	public uint playingID
	{
		[Token(Token = "0x6001941")]
		[Address(RVA = "0xE250DC", Offset = "0xE250DC", VA = "0xE250DC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B0")]
	public ulong gameObjID
	{
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xE251C0", Offset = "0xE251C0", VA = "0xE251C0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170002B1")]
	public string message
	{
		[Token(Token = "0x6001943")]
		[Address(RVA = "0xE252A4", Offset = "0xE252A4", VA = "0xE252A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0xE24BEC", Offset = "0xE24BEC", VA = "0xE24BEC")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600193B")]
	[Address(RVA = "0xE24C2C", Offset = "0xE24C2C", VA = "0xE24C2C")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0xE24C78", Offset = "0xE24C78", VA = "0xE24C78", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0xE24CAC", Offset = "0xE24CAC", VA = "0xE24CAC", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0xE24D1C", Offset = "0xE24D1C", VA = "0xE24D1C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001944")]
	[Address(RVA = "0xE25424", Offset = "0xE25424", VA = "0xE25424")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x200036F")]
public enum AkMultiPositionType
{
	[Token(Token = "0x400140D")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x400140E")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x400140F")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000370")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002B2")]
	public uint playlistID
	{
		[Token(Token = "0x600194A")]
		[Address(RVA = "0xE259F0", Offset = "0xE259F0", VA = "0xE259F0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B3")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x600194B")]
		[Address(RVA = "0xE25AD4", Offset = "0xE25AD4", VA = "0xE25AD4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B4")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x600194C")]
		[Address(RVA = "0xE25BB8", Offset = "0xE25BB8", VA = "0xE25BB8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B5")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x600194D")]
		[Address(RVA = "0xE25C9C", Offset = "0xE25C9C", VA = "0xE25C9C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0xE255A0", Offset = "0xE255A0", VA = "0xE255A0")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0xE256AC", Offset = "0xE256AC", VA = "0xE256AC")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0xE256F8", Offset = "0xE256F8", VA = "0xE256F8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0xE2577C", Offset = "0xE2577C", VA = "0xE2577C", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0xE257EC", Offset = "0xE257EC", VA = "0xE257EC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0xE25D80", Offset = "0xE25D80", VA = "0xE25D80")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x2000371")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B6")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6001955")]
		[Address(RVA = "0xE2628C", Offset = "0xE2628C", VA = "0xE2628C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xE26188", Offset = "0xE26188", VA = "0xE26188")]
		set
		{
		}
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xE25E60", Offset = "0xE25E60", VA = "0xE25E60")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0xE25EA0", Offset = "0xE25EA0", VA = "0xE25EA0")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0xE25EEC", Offset = "0xE25EEC", VA = "0xE25EEC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0xE25F20", Offset = "0xE25F20", VA = "0xE25F20", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0xE25F90", Offset = "0xE25F90", VA = "0xE25F90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0xE26370", Offset = "0xE26370", VA = "0xE26370")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x2000372")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002B7")]
	public uint playingID
	{
		[Token(Token = "0x600195C")]
		[Address(RVA = "0xE268B0", Offset = "0xE268B0", VA = "0xE268B0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B8")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x600195D")]
		[Address(RVA = "0xE26994", Offset = "0xE26994", VA = "0xE26994")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002B9")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x600195E")]
		[Address(RVA = "0xE26A78", Offset = "0xE26A78", VA = "0xE26A78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BA")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xE26B5C", Offset = "0xE26B5C", VA = "0xE26B5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BB")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6001960")]
		[Address(RVA = "0xE26C40", Offset = "0xE26C40", VA = "0xE26C40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BC")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6001961")]
		[Address(RVA = "0xE26D24", Offset = "0xE26D24", VA = "0xE26D24")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002BD")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6001962")]
		[Address(RVA = "0xE26E08", Offset = "0xE26E08", VA = "0xE26E08")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002BE")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6001963")]
		[Address(RVA = "0xE26EEC", Offset = "0xE26EEC", VA = "0xE26EEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002BF")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6001964")]
		[Address(RVA = "0xE26FD0", Offset = "0xE26FD0", VA = "0xE26FD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C0")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x6001965")]
		[Address(RVA = "0xE270B4", Offset = "0xE270B4", VA = "0xE270B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C1")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xE27198", Offset = "0xE27198", VA = "0xE27198")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x170002C2")]
	public string userCueName
	{
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xE2727C", Offset = "0xE2727C", VA = "0xE2727C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0xE26460", Offset = "0xE26460", VA = "0xE26460")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0xE2656C", Offset = "0xE2656C", VA = "0xE2656C")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0xE265B8", Offset = "0xE265B8", VA = "0xE265B8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xE2663C", Offset = "0xE2663C", VA = "0xE2663C", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0xE266AC", Offset = "0xE266AC", VA = "0xE266AC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0xE2739C", Offset = "0xE2739C", VA = "0xE2739C")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x2000373")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C3")]
	public uint objID
	{
		[Token(Token = "0x600196F")]
		[Address(RVA = "0xE278A8", Offset = "0xE278A8", VA = "0xE278A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xE277A4", Offset = "0xE277A4", VA = "0xE277A4")]
		set
		{
		}
	}

	[Token(Token = "0x170002C4")]
	public uint parentID
	{
		[Token(Token = "0x6001971")]
		[Address(RVA = "0xE27A90", Offset = "0xE27A90", VA = "0xE27A90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001970")]
		[Address(RVA = "0xE2798C", Offset = "0xE2798C", VA = "0xE2798C")]
		set
		{
		}
	}

	[Token(Token = "0x170002C5")]
	public int iDepth
	{
		[Token(Token = "0x6001973")]
		[Address(RVA = "0xE27C78", Offset = "0xE27C78", VA = "0xE27C78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001972")]
		[Address(RVA = "0xE27B74", Offset = "0xE27B74", VA = "0xE27B74")]
		set
		{
		}
	}

	[Token(Token = "0x6001969")]
	[Address(RVA = "0xE2747C", Offset = "0xE2747C", VA = "0xE2747C")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xE274BC", Offset = "0xE274BC", VA = "0xE274BC")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xE27508", Offset = "0xE27508", VA = "0xE27508", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xE2753C", Offset = "0xE2753C", VA = "0xE2753C", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xE275AC", Offset = "0xE275AC", VA = "0xE275AC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xE27D5C", Offset = "0xE27D5C", VA = "0xE27D5C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xE27E40", Offset = "0xE27E40", VA = "0xE27E40")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xE27F0C", Offset = "0xE27F0C", VA = "0xE27F0C")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xE28038", Offset = "0xE28038", VA = "0xE28038")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x2000374")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C6")]
	public float occlusion
	{
		[Token(Token = "0x600197E")]
		[Address(RVA = "0xE29060", Offset = "0xE29060", VA = "0xE29060")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600197D")]
		[Address(RVA = "0xE28F5C", Offset = "0xE28F5C", VA = "0xE28F5C")]
		set
		{
		}
	}

	[Token(Token = "0x170002C7")]
	public float obstruction
	{
		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE29248", Offset = "0xE29248", VA = "0xE29248")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600197F")]
		[Address(RVA = "0xE29144", Offset = "0xE29144", VA = "0xE29144")]
		set
		{
		}
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0xE28C34", Offset = "0xE28C34", VA = "0xE28C34")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0xE28C74", Offset = "0xE28C74", VA = "0xE28C74")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0xE28CC0", Offset = "0xE28CC0", VA = "0xE28CC0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xE28CF4", Offset = "0xE28CF4", VA = "0xE28CF4", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xE28D64", Offset = "0xE28D64", VA = "0xE28D64", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0xE2932C", Offset = "0xE2932C", VA = "0xE2932C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0xE29410", Offset = "0xE29410", VA = "0xE29410")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0xE294DC", Offset = "0xE294DC", VA = "0xE294DC")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0xE29608", Offset = "0xE29608", VA = "0xE29608")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x2000375")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002C8")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6001990")]
		[Address(RVA = "0xE2A36C", Offset = "0xE2A36C", VA = "0xE2A36C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600198F")]
		[Address(RVA = "0xE2A268", Offset = "0xE2A268", VA = "0xE2A268")]
		set
		{
		}
	}

	[Token(Token = "0x170002C9")]
	public uint idDevice
	{
		[Token(Token = "0x6001992")]
		[Address(RVA = "0xE2A554", Offset = "0xE2A554", VA = "0xE2A554")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001991")]
		[Address(RVA = "0xE2A450", Offset = "0xE2A450", VA = "0xE2A450")]
		set
		{
		}
	}

	[Token(Token = "0x170002CA")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6001994")]
		[Address(RVA = "0xE2A73C", Offset = "0xE2A73C", VA = "0xE2A73C")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xE2A638", Offset = "0xE2A638", VA = "0xE2A638")]
		set
		{
		}
	}

	[Token(Token = "0x170002CB")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001996")]
		[Address(RVA = "0xE2A938", Offset = "0xE2A938", VA = "0xE2A938")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001995")]
		[Address(RVA = "0xE2A820", Offset = "0xE2A820", VA = "0xE2A820")]
		set
		{
		}
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xE29908", Offset = "0xE29908", VA = "0xE29908")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0xE29948", Offset = "0xE29948", VA = "0xE29948")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0xE29994", Offset = "0xE29994", VA = "0xE29994", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0xE299C8", Offset = "0xE299C8", VA = "0xE299C8", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0xE29A38", Offset = "0xE29A38", VA = "0xE29A38", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0xE29C30", Offset = "0xE29C30", VA = "0xE29C30")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0xE29D20", Offset = "0xE29D20", VA = "0xE29D20")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0xE29EA0", Offset = "0xE29EA0", VA = "0xE29EA0")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0xE2A008", Offset = "0xE2A008", VA = "0xE2A008")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0xE2A144", Offset = "0xE2A144", VA = "0xE2A144")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x2000376")]
public enum AkPanningRule
{
	[Token(Token = "0x400141B")]
	AkPanningRule_Speakers,
	[Token(Token = "0x400141C")]
	AkPanningRule_Headphones
}
[Token(Token = "0x2000377")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CC")]
	public AkVector listenerPos
	{
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xE2AF18", Offset = "0xE2AF18", VA = "0xE2AF18")]
		get
		{
			return null;
		}
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xE2ADA0", Offset = "0xE2ADA0", VA = "0xE2ADA0")]
		set
		{
		}
	}

	[Token(Token = "0x170002CD")]
	public AkVector emitterPos
	{
		[Token(Token = "0x600199F")]
		[Address(RVA = "0xE2B1C4", Offset = "0xE2B1C4", VA = "0xE2B1C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600199E")]
		[Address(RVA = "0xE2B098", Offset = "0xE2B098", VA = "0xE2B098")]
		set
		{
		}
	}

	[Token(Token = "0x170002CE")]
	public uint numValidPaths
	{
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xE2B408", Offset = "0xE2B408", VA = "0xE2B408")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xE2B304", Offset = "0xE2B304", VA = "0xE2B304")]
		set
		{
		}
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xE2AA78", Offset = "0xE2AA78", VA = "0xE2AA78")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xE2AAB8", Offset = "0xE2AAB8", VA = "0xE2AAB8")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xE2AB04", Offset = "0xE2AB04", VA = "0xE2AB04", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0xE2AB38", Offset = "0xE2AB38", VA = "0xE2AB38", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0xE2ABA8", Offset = "0xE2ABA8", VA = "0xE2ABA8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0xE2B4EC", Offset = "0xE2B4EC", VA = "0xE2B4EC")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x2000378")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0xE2D190", Offset = "0xE2D190", VA = "0xE2D190")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0xE2D2E4", Offset = "0xE2D2E4", VA = "0xE2D2E4")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0xE2D330", Offset = "0xE2D330", VA = "0xE2D330", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0xE2D3F0", Offset = "0xE2D3F0", VA = "0xE2D3F0", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0xE2D4C8", Offset = "0xE2D4C8", VA = "0xE2D4C8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0xE2D840", Offset = "0xE2D840", VA = "0xE2D840")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0xE2D9BC", Offset = "0xE2D9BC", VA = "0xE2D9BC")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0xE2DB00", Offset = "0xE2DB00", VA = "0xE2DB00")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0xE2DC34", Offset = "0xE2DC34", VA = "0xE2DC34")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0xE2DD48", Offset = "0xE2DD48", VA = "0xE2DD48")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0xE2DE4C", Offset = "0xE2DE4C", VA = "0xE2DE4C")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x2000379")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0xE2D2A4", Offset = "0xE2D2A4", VA = "0xE2D2A4")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0xE2DF2C", Offset = "0xE2DF2C", VA = "0xE2DF2C")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0xE2D3BC", Offset = "0xE2D3BC", VA = "0xE2D3BC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xE2D458", Offset = "0xE2D458", VA = "0xE2D458", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xE2D6C8", Offset = "0xE2D6C8", VA = "0xE2D6C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0xE2DFF8", Offset = "0xE2DFF8", VA = "0xE2DFF8")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0xE2E0E8", Offset = "0xE2E0E8", VA = "0xE2E0E8")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0xE2E20C", Offset = "0xE2E20C", VA = "0xE2E20C")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0xE2E330", Offset = "0xE2E330", VA = "0xE2E330")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xE2E4E8", Offset = "0xE2E4E8", VA = "0xE2E4E8")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xE2E640", Offset = "0xE2E640", VA = "0xE2E640")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xE2E744", Offset = "0xE2E744", VA = "0xE2E744")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xE2E89C", Offset = "0xE2E89C", VA = "0xE2E89C")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xE2E9A0", Offset = "0xE2E9A0", VA = "0xE2E9A0")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xE2EA84", Offset = "0xE2EA84", VA = "0xE2EA84")]
	public void Term()
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xE2EB68", Offset = "0xE2EB68", VA = "0xE2EB68")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xE2EC4C", Offset = "0xE2EC4C", VA = "0xE2EC4C")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xE2EDCC", Offset = "0xE2EDCC", VA = "0xE2EDCC")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0xE2EEB8", Offset = "0xE2EEB8", VA = "0xE2EEB8")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0xE2F040", Offset = "0xE2F040", VA = "0xE2F040")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0xE2F180", Offset = "0xE2F180", VA = "0xE2F180")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xE2F308", Offset = "0xE2F308", VA = "0xE2F308")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0xE2F42C", Offset = "0xE2F42C", VA = "0xE2F42C")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0xE2F510", Offset = "0xE2F510", VA = "0xE2F510")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0xE2F63C", Offset = "0xE2F63C", VA = "0xE2F63C")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0xE2F768", Offset = "0xE2F768", VA = "0xE2F768")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0xE2F84C", Offset = "0xE2F84C", VA = "0xE2F84C")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0xE2F990", Offset = "0xE2F990", VA = "0xE2F990")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0xE2FAF0", Offset = "0xE2FAF0", VA = "0xE2FAF0")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0xE2FBFC", Offset = "0xE2FBFC", VA = "0xE2FBFC")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xE2FCE8", Offset = "0xE2FCE8", VA = "0xE2FCE8")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xE2FDF4", Offset = "0xE2FDF4", VA = "0xE2FDF4")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0xE2FF20", Offset = "0xE2FF20", VA = "0xE2FF20")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200037A")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CF")]
	public uint audioNodeID
	{
		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xE309DC", Offset = "0xE309DC", VA = "0xE309DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xE308D8", Offset = "0xE308D8", VA = "0xE308D8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D0")]
	public int msDelay
	{
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xE30BC4", Offset = "0xE30BC4", VA = "0xE30BC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xE30AC0", Offset = "0xE30AC0", VA = "0xE30AC0")]
		set
		{
		}
	}

	[Token(Token = "0x170002D1")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xE30DAC", Offset = "0xE30DAC", VA = "0xE30DAC")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xE30CA8", Offset = "0xE30CA8", VA = "0xE30CA8")]
		set
		{
		}
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0xE2ED8C", Offset = "0xE2ED8C", VA = "0xE2ED8C")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xE2E40C", Offset = "0xE2E40C", VA = "0xE2E40C")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xE3004C", Offset = "0xE3004C", VA = "0xE3004C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xE30080", Offset = "0xE30080", VA = "0xE30080", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xE300F0", Offset = "0xE300F0", VA = "0xE300F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xE302E8", Offset = "0xE302E8", VA = "0xE302E8")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xE303D8", Offset = "0xE303D8", VA = "0xE303D8")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xE3050C", Offset = "0xE3050C", VA = "0xE3050C")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0xE30678", Offset = "0xE30678", VA = "0xE30678")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0xE307AC", Offset = "0xE307AC", VA = "0xE307AC")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200037B")]
public enum AkPluginType
{
	[Token(Token = "0x4001425")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4001426")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4001427")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4001428")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4001429")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x400142A")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x400142B")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x400142C")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x200037C")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D2")]
	public float fCenterPct
	{
		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xE31834", Offset = "0xE31834", VA = "0xE31834")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xE31730", Offset = "0xE31730", VA = "0xE31730")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xE31A1C", Offset = "0xE31A1C", VA = "0xE31A1C")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xE31918", Offset = "0xE31918", VA = "0xE31918")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xE31C04", Offset = "0xE31C04", VA = "0xE31C04")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xE31B00", Offset = "0xE31B00", VA = "0xE31B00")]
		set
		{
		}
	}

	[Token(Token = "0x170002D5")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xE31DEC", Offset = "0xE31DEC", VA = "0xE31DEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xE31CE8", Offset = "0xE31CE8", VA = "0xE31CE8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xE31FDC", Offset = "0xE31FDC", VA = "0xE31FDC")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xE31ED8", Offset = "0xE31ED8", VA = "0xE31ED8")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xE321C4", Offset = "0xE321C4", VA = "0xE321C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xE320C0", Offset = "0xE320C0", VA = "0xE320C0")]
		set
		{
		}
	}

	[Token(Token = "0x170002D8")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xE323B4", Offset = "0xE323B4", VA = "0xE323B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xE322B0", Offset = "0xE322B0", VA = "0xE322B0")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public float fInnerAngle
	{
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xE325A4", Offset = "0xE325A4", VA = "0xE325A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xE324A0", Offset = "0xE324A0", VA = "0xE324A0")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public float fOuterAngle
	{
		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xE3278C", Offset = "0xE3278C", VA = "0xE3278C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xE32688", Offset = "0xE32688", VA = "0xE32688")]
		set
		{
		}
	}

	[Token(Token = "0x170002DB")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xE32974", Offset = "0xE32974", VA = "0xE32974")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xE32870", Offset = "0xE32870", VA = "0xE32870")]
		set
		{
		}
	}

	[Token(Token = "0x170002DC")]
	public float LPFCone
	{
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xE32B5C", Offset = "0xE32B5C", VA = "0xE32B5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xE32A58", Offset = "0xE32A58", VA = "0xE32A58")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public float HPFCone
	{
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xE32D44", Offset = "0xE32D44", VA = "0xE32D44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xE32C40", Offset = "0xE32C40", VA = "0xE32C40")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public float fMaxDistance
	{
		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xE32F2C", Offset = "0xE32F2C", VA = "0xE32F2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xE32E28", Offset = "0xE32E28", VA = "0xE32E28")]
		set
		{
		}
	}

	[Token(Token = "0x170002DF")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xE33114", Offset = "0xE33114", VA = "0xE33114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xE33010", Offset = "0xE33010", VA = "0xE33010")]
		set
		{
		}
	}

	[Token(Token = "0x170002E0")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xE332FC", Offset = "0xE332FC", VA = "0xE332FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xE331F8", Offset = "0xE331F8", VA = "0xE331F8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E1")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xE334E4", Offset = "0xE334E4", VA = "0xE334E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xE333E0", Offset = "0xE333E0", VA = "0xE333E0")]
		set
		{
		}
	}

	[Token(Token = "0x170002E2")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xE336CC", Offset = "0xE336CC", VA = "0xE336CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xE335C8", Offset = "0xE335C8", VA = "0xE335C8")]
		set
		{
		}
	}

	[Token(Token = "0x170002E3")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xE338B4", Offset = "0xE338B4", VA = "0xE338B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xE337B0", Offset = "0xE337B0", VA = "0xE337B0")]
		set
		{
		}
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0xE31408", Offset = "0xE31408", VA = "0xE31408")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0xE31448", Offset = "0xE31448", VA = "0xE31448")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0xE31494", Offset = "0xE31494", VA = "0xE31494", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0xE314C8", Offset = "0xE314C8", VA = "0xE314C8", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0xE31538", Offset = "0xE31538", VA = "0xE31538", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0xE33998", Offset = "0xE33998", VA = "0xE33998")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x200037D")]
public enum AkPreparationType
{
	[Token(Token = "0x4001430")]
	Preparation_Load,
	[Token(Token = "0x4001431")]
	Preparation_Unload,
	[Token(Token = "0x4001432")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200037E")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4001434")]
	RTPCValue_Default,
	[Token(Token = "0x4001435")]
	RTPCValue_Global,
	[Token(Token = "0x4001436")]
	RTPCValue_GameObject,
	[Token(Token = "0x4001437")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4001438")]
	RTPCValue_Unavailable
}
[Token(Token = "0x200037F")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E4")]
	public float fPrev
	{
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xE34C74", Offset = "0xE34C74", VA = "0xE34C74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xE34B70", Offset = "0xE34B70", VA = "0xE34B70")]
		set
		{
		}
	}

	[Token(Token = "0x170002E5")]
	public float fNext
	{
		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xE34E5C", Offset = "0xE34E5C", VA = "0xE34E5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xE34D58", Offset = "0xE34D58", VA = "0xE34D58")]
		set
		{
		}
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xE34634", Offset = "0xE34634", VA = "0xE34634")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xE34674", Offset = "0xE34674", VA = "0xE34674")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xE346C0", Offset = "0xE346C0", VA = "0xE346C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xE346F4", Offset = "0xE346F4", VA = "0xE346F4", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xE34764", Offset = "0xE34764", VA = "0xE34764", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0xE3495C", Offset = "0xE3495C", VA = "0xE3495C")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0xE34A4C", Offset = "0xE34A4C", VA = "0xE34A4C")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000380")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002E6")]
	public AkVector imageSource
	{
		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xE35394", Offset = "0xE35394", VA = "0xE35394")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xE35268", Offset = "0xE35268", VA = "0xE35268")]
		set
		{
		}
	}

	[Token(Token = "0x170002E7")]
	public uint numPathPoints
	{
		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xE355D8", Offset = "0xE355D8", VA = "0xE355D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xE354D4", Offset = "0xE354D4", VA = "0xE354D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E8")]
	public uint numReflections
	{
		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xE357C0", Offset = "0xE357C0", VA = "0xE357C0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xE356BC", Offset = "0xE356BC", VA = "0xE356BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002E9")]
	public float level
	{
		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE359A8", Offset = "0xE359A8", VA = "0xE359A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xE358A4", Offset = "0xE358A4", VA = "0xE358A4")]
		set
		{
		}
	}

	[Token(Token = "0x170002EA")]
	public bool isOccluded
	{
		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xE35B90", Offset = "0xE35B90", VA = "0xE35B90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE35A8C", Offset = "0xE35A8C", VA = "0xE35A8C")]
		set
		{
		}
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0xE34F40", Offset = "0xE34F40", VA = "0xE34F40")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0xE34F80", Offset = "0xE34F80", VA = "0xE34F80")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0xE34FCC", Offset = "0xE34FCC", VA = "0xE34FCC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0xE35000", Offset = "0xE35000", VA = "0xE35000", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0xE35070", Offset = "0xE35070", VA = "0xE35070", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xE35C7C", Offset = "0xE35C7C", VA = "0xE35C7C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xE35D48", Offset = "0xE35D48", VA = "0xE35D48")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0xE35EA8", Offset = "0xE35EA8", VA = "0xE35EA8")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0xE35FEC", Offset = "0xE35FEC", VA = "0xE35FEC")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0xE360F0", Offset = "0xE360F0", VA = "0xE360F0")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0xE3621C", Offset = "0xE3621C", VA = "0xE3621C")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000381")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002EB")]
	public AkVector Up
	{
		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xE36AB0", Offset = "0xE36AB0", VA = "0xE36AB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xE37C14", Offset = "0xE37C14", VA = "0xE37C14")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public AkVector Front
	{
		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xE36CCC", Offset = "0xE36CCC", VA = "0xE36CCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xE37DC0", Offset = "0xE37DC0", VA = "0xE37DC0")]
		set
		{
		}
	}

	[Token(Token = "0x170002ED")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xE37FFC", Offset = "0xE37FFC", VA = "0xE37FFC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xE36D8C", Offset = "0xE36D8C", VA = "0xE36D8C")]
		set
		{
		}
	}

	[Token(Token = "0x170002EE")]
	public float ReverbLevel
	{
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xE38170", Offset = "0xE38170", VA = "0xE38170")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xE36E00", Offset = "0xE36E00", VA = "0xE36E00")]
		set
		{
		}
	}

	[Token(Token = "0x170002EF")]
	public float WallOcclusion
	{
		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xE382E4", Offset = "0xE382E4", VA = "0xE382E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xE36E74", Offset = "0xE36E74", VA = "0xE36E74")]
		set
		{
		}
	}

	[Token(Token = "0x170002F0")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xE38458", Offset = "0xE38458", VA = "0xE38458")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xE36EE8", Offset = "0xE36EE8", VA = "0xE36EE8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F1")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xE385CC", Offset = "0xE385CC", VA = "0xE385CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xE36F5C", Offset = "0xE36F5C", VA = "0xE36F5C")]
		set
		{
		}
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0xE37878", Offset = "0xE37878", VA = "0xE37878")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0xE378B8", Offset = "0xE378B8", VA = "0xE378B8")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0xE37904", Offset = "0xE37904", VA = "0xE37904", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0xE37938", Offset = "0xE37938", VA = "0xE37938", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0xE379A8", Offset = "0xE379A8", VA = "0xE379A8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xE36A34", Offset = "0xE36A34", VA = "0xE36A34")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000382")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002F2")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xE3B338", Offset = "0xE3B338", VA = "0xE3B338")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xE3B234", Offset = "0xE3B234", VA = "0xE3B234")]
		set
		{
		}
	}

	[Token(Token = "0x170002F3")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xE3B520", Offset = "0xE3B520", VA = "0xE3B520")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xE3B41C", Offset = "0xE3B41C", VA = "0xE3B41C")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public int iActiveDuration
	{
		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xE3B708", Offset = "0xE3B708", VA = "0xE3B708")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xE3B604", Offset = "0xE3B604", VA = "0xE3B604")]
		set
		{
		}
	}

	[Token(Token = "0x170002F5")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xE3B8F0", Offset = "0xE3B8F0", VA = "0xE3B8F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xE3B7EC", Offset = "0xE3B7EC", VA = "0xE3B7EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002F6")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xE3BAD8", Offset = "0xE3BAD8", VA = "0xE3BAD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xE3B9D4", Offset = "0xE3B9D4", VA = "0xE3B9D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F7")]
	public float fBeatDuration
	{
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xE3BCC0", Offset = "0xE3BCC0", VA = "0xE3BCC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xE3BBBC", Offset = "0xE3BBBC", VA = "0xE3BBBC")]
		set
		{
		}
	}

	[Token(Token = "0x170002F8")]
	public float fBarDuration
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xE3BEA8", Offset = "0xE3BEA8", VA = "0xE3BEA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xE3BDA4", Offset = "0xE3BDA4", VA = "0xE3BDA4")]
		set
		{
		}
	}

	[Token(Token = "0x170002F9")]
	public float fGridDuration
	{
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xE3C090", Offset = "0xE3C090", VA = "0xE3C090")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xE3BF8C", Offset = "0xE3BF8C", VA = "0xE3BF8C")]
		set
		{
		}
	}

	[Token(Token = "0x170002FA")]
	public float fGridOffset
	{
		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xE3C278", Offset = "0xE3C278", VA = "0xE3C278")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xE3C174", Offset = "0xE3C174", VA = "0xE3C174")]
		set
		{
		}
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0xE3AF0C", Offset = "0xE3AF0C", VA = "0xE3AF0C")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0xE3AF4C", Offset = "0xE3AF4C", VA = "0xE3AF4C")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0xE3AF98", Offset = "0xE3AF98", VA = "0xE3AF98", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0xE3AFCC", Offset = "0xE3AFCC", VA = "0xE3AFCC", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0xE3B03C", Offset = "0xE3B03C", VA = "0xE3B03C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xE3C35C", Offset = "0xE3C35C", VA = "0xE3C35C")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000383")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002FB")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xE3C774", Offset = "0xE3C774", VA = "0xE3C774")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002FC")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xE3C858", Offset = "0xE3C858", VA = "0xE3C858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FD")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xE3C998", Offset = "0xE3C998", VA = "0xE3C998")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0xE3C44C", Offset = "0xE3C44C", VA = "0xE3C44C")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0xE3C48C", Offset = "0xE3C48C", VA = "0xE3C48C")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0xE3C4D8", Offset = "0xE3C4D8", VA = "0xE3C4D8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0xE3C50C", Offset = "0xE3C50C", VA = "0xE3C50C", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0xE3C57C", Offset = "0xE3C57C", VA = "0xE3C57C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0xE3CA7C", Offset = "0xE3CA7C", VA = "0xE3CA7C")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0xE3CB60", Offset = "0xE3CB60", VA = "0xE3CB60")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x2000384")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4001444")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4001445")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4001446")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000385")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002FE")]
	public uint sourceID
	{
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xE68E64", Offset = "0xE68E64", VA = "0xE68E64")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xE68DF0", Offset = "0xE68DF0", VA = "0xE68DF0")]
		set
		{
		}
	}

	[Token(Token = "0x170002FF")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xE68F3C", Offset = "0xE68F3C", VA = "0xE68F3C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xE68EC8", Offset = "0xE68EC8", VA = "0xE68EC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000300")]
	public uint uMediaSize
	{
		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE69014", Offset = "0xE69014", VA = "0xE69014")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xE68FA0", Offset = "0xE68FA0", VA = "0xE68FA0")]
		set
		{
		}
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0xE68B48", Offset = "0xE68B48", VA = "0xE68B48")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0xE68B88", Offset = "0xE68B88", VA = "0xE68B88")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0xE68BD4", Offset = "0xE68BD4", VA = "0xE68BD4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A62")]
	[Address(RVA = "0xE68C08", Offset = "0xE68C08", VA = "0xE68C08", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6001A63")]
	[Address(RVA = "0xE68C78", Offset = "0xE68C78", VA = "0xE68C78", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0xE69078", Offset = "0xE69078", VA = "0xE69078")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0xE690DC", Offset = "0xE690DC", VA = "0xE690DC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0xE69134", Offset = "0xE69134", VA = "0xE69134")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xE691D0", Offset = "0xE691D0", VA = "0xE691D0")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x2000386")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000301")]
	public int uPoolID
	{
		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xE69CD8", Offset = "0xE69CD8", VA = "0xE69CD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xE69C64", Offset = "0xE69C64", VA = "0xE69C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000302")]
	public uint uPoolSize
	{
		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xE69DB0", Offset = "0xE69DB0", VA = "0xE69DB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xE69D3C", Offset = "0xE69D3C", VA = "0xE69D3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000303")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xE69E88", Offset = "0xE69E88", VA = "0xE69E88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xE69E14", Offset = "0xE69E14", VA = "0xE69E14")]
		set
		{
		}
	}

	[Token(Token = "0x17000304")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xE69F60", Offset = "0xE69F60", VA = "0xE69F60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xE69EEC", Offset = "0xE69EEC", VA = "0xE69EEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000305")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xE6A038", Offset = "0xE6A038", VA = "0xE6A038")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xE69FC4", Offset = "0xE69FC4", VA = "0xE69FC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000306")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xE6A110", Offset = "0xE6A110", VA = "0xE6A110")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xE6A09C", Offset = "0xE6A09C", VA = "0xE6A09C")]
		set
		{
		}
	}

	[Token(Token = "0x17000307")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xE6A1E8", Offset = "0xE6A1E8", VA = "0xE6A1E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xE6A174", Offset = "0xE6A174", VA = "0xE6A174")]
		set
		{
		}
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xE6998C", Offset = "0xE6998C", VA = "0xE6998C")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xE53E00", Offset = "0xE53E00", VA = "0xE53E00")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0xE699CC", Offset = "0xE699CC", VA = "0xE699CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xE69A00", Offset = "0xE69A00", VA = "0xE69A00", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0xE69A70", Offset = "0xE69A70", VA = "0xE69A70", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0xE69BE8", Offset = "0xE69BE8", VA = "0xE69BE8")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x2000387")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x400144C")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x400144D")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x2000388")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000308")]
	public uint uMemorySize
	{
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xE6A980", Offset = "0xE6A980", VA = "0xE6A980")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xE6A90C", Offset = "0xE6A90C", VA = "0xE6A90C")]
		set
		{
		}
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xE6A6B0", Offset = "0xE6A6B0", VA = "0xE6A6B0")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xE557CC", Offset = "0xE557CC", VA = "0xE557CC")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0xE6A6F0", Offset = "0xE6A6F0", VA = "0xE6A6F0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0xE6A724", Offset = "0xE6A724", VA = "0xE6A724", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6001A86")]
	[Address(RVA = "0xE6A794", Offset = "0xE6A794", VA = "0xE6A794", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0xE6A9E4", Offset = "0xE6A9E4", VA = "0xE6A9E4")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x2000389")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000309")]
	public uint uIdxThread
	{
		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xE6C348", Offset = "0xE6C348", VA = "0xE6C348")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xE6C2D4", Offset = "0xE6C2D4", VA = "0xE6C2D4")]
		set
		{
		}
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0xE6C02C", Offset = "0xE6C02C", VA = "0xE6C02C")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0xE6C06C", Offset = "0xE6C06C", VA = "0xE6C06C")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0xE6C0B8", Offset = "0xE6C0B8", VA = "0xE6C0B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0xE6C0EC", Offset = "0xE6C0EC", VA = "0xE6C0EC", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xE6C15C", Offset = "0xE6C15C", VA = "0xE6C15C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0xE6C3AC", Offset = "0xE6C3AC", VA = "0xE6C3AC")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x200038A")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0xE6E9FC", Offset = "0xE6E9FC", VA = "0xE6E9FC")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xE4FA20", Offset = "0xE4FA20", VA = "0xE4FA20")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xE6EA3C", Offset = "0xE6EA3C", VA = "0xE6EA3C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0xE6EA70", Offset = "0xE6EA70", VA = "0xE6EA70", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0xE6EAE0", Offset = "0xE6EAE0", VA = "0xE6EAE0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0xE6EC58", Offset = "0xE6EC58", VA = "0xE6EC58")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0xE6ECFC", Offset = "0xE6ECFC", VA = "0xE6ECFC")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0xE6EDA0", Offset = "0xE6EDA0", VA = "0xE6EDA0")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0xE6EE44", Offset = "0xE6EE44", VA = "0xE6EE44")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0xE39304", Offset = "0xE39304", VA = "0xE39304")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0xE6EF08", Offset = "0xE6EF08", VA = "0xE6EF08")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0xE6EFA4", Offset = "0xE6EFA4", VA = "0xE6EFA4")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0xE6F030", Offset = "0xE6F030", VA = "0xE6F030")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0xE6F0DC", Offset = "0xE6F0DC", VA = "0xE6F0DC")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0xE39288", Offset = "0xE39288", VA = "0xE39288")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x200038B")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030A")]
	public ushort point0
	{
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xE6F558", Offset = "0xE6F558", VA = "0xE6F558")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xE6B91C", Offset = "0xE6B91C", VA = "0xE6B91C")]
		set
		{
		}
	}

	[Token(Token = "0x1700030B")]
	public ushort point1
	{
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xE6F5BC", Offset = "0xE6F5BC", VA = "0xE6F5BC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xE6B990", Offset = "0xE6B990", VA = "0xE6B990")]
		set
		{
		}
	}

	[Token(Token = "0x1700030C")]
	public ushort point2
	{
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xE6F620", Offset = "0xE6F620", VA = "0xE6F620")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xE6BA04", Offset = "0xE6BA04", VA = "0xE6BA04")]
		set
		{
		}
	}

	[Token(Token = "0x1700030D")]
	public ushort surface
	{
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xE6F684", Offset = "0xE6F684", VA = "0xE6F684")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xE6BA78", Offset = "0xE6BA78", VA = "0xE6BA78")]
		set
		{
		}
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0xE6F188", Offset = "0xE6F188", VA = "0xE6F188")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0xE6F1C8", Offset = "0xE6F1C8", VA = "0xE6F1C8")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0xE6F214", Offset = "0xE6F214", VA = "0xE6F214", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0xE6F248", Offset = "0xE6F248", VA = "0xE6F248", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0xE6F2B8", Offset = "0xE6F2B8", VA = "0xE6F2B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0xE6F430", Offset = "0xE6F430", VA = "0xE6F430")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0xE6F4AC", Offset = "0xE6F4AC", VA = "0xE6F4AC")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0xE6F6E8", Offset = "0xE6F6E8", VA = "0xE6F6E8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0xE6F74C", Offset = "0xE6F74C", VA = "0xE6F74C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0xE6F7A4", Offset = "0xE6F7A4", VA = "0xE6F7A4")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200038C")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030E")]
	public float X
	{
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xE709E4", Offset = "0xE709E4", VA = "0xE709E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xE36B70", Offset = "0xE36B70", VA = "0xE36B70")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public float Y
	{
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xE70A48", Offset = "0xE70A48", VA = "0xE70A48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xE36BE4", Offset = "0xE36BE4", VA = "0xE36BE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000310")]
	public float Z
	{
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xE70AAC", Offset = "0xE70AAC", VA = "0xE70AAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xE36C58", Offset = "0xE36C58", VA = "0xE36C58")]
		set
		{
		}
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0xE2B058", Offset = "0xE2B058", VA = "0xE2B058")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0xE2AE3C", Offset = "0xE2AE3C", VA = "0xE2AE3C")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0xE70764", Offset = "0xE70764", VA = "0xE70764", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0xE70798", Offset = "0xE70798", VA = "0xE70798", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0xE70808", Offset = "0xE70808", VA = "0xE70808", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0xE70980", Offset = "0xE70980", VA = "0xE70980")]
	public void Zero()
	{
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0xE39428", Offset = "0xE39428", VA = "0xE39428")]
	public AkVector()
	{
	}
}
[Token(Token = "0x200038D")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000311")]
	public float X
	{
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xE70ED8", Offset = "0xE70ED8", VA = "0xE70ED8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xE6B764", Offset = "0xE6B764", VA = "0xE6B764")]
		set
		{
		}
	}

	[Token(Token = "0x17000312")]
	public float Y
	{
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xE70F3C", Offset = "0xE70F3C", VA = "0xE70F3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xE6B7D8", Offset = "0xE6B7D8", VA = "0xE6B7D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000313")]
	public float Z
	{
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xE70FA0", Offset = "0xE70FA0", VA = "0xE70FA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xE6B84C", Offset = "0xE6B84C", VA = "0xE6B84C")]
		set
		{
		}
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0xE70B10", Offset = "0xE70B10", VA = "0xE70B10")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0xE70B50", Offset = "0xE70B50", VA = "0xE70B50")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0xE70B9C", Offset = "0xE70B9C", VA = "0xE70B9C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0xE70BD0", Offset = "0xE70BD0", VA = "0xE70BD0", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0xE70C40", Offset = "0xE70C40", VA = "0xE70C40", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0xE70DB8", Offset = "0xE70DB8", VA = "0xE70DB8")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0xE70E34", Offset = "0xE70E34", VA = "0xE70E34")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0xE71004", Offset = "0xE71004", VA = "0xE71004")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0xE71068", Offset = "0xE71068", VA = "0xE71068")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0xE710C0", Offset = "0xE710C0", VA = "0xE710C0")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x200038E")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0xFF0290", Offset = "0xFF0290", VA = "0xFF0290")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0xFF02D0", Offset = "0xFF02D0", VA = "0xFF02D0")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0xFF031C", Offset = "0xFF031C", VA = "0xFF031C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0xFF0350", Offset = "0xFF0350", VA = "0xFF0350", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0xFF03C0", Offset = "0xFF03C0", VA = "0xFF03C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0xFF053C", Offset = "0xFF053C", VA = "0xFF053C")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0xFF0598", Offset = "0xFF0598", VA = "0xFF0598")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x200038F")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0xFF0618", Offset = "0xFF0618", VA = "0xFF0618")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xFF0658", Offset = "0xFF0658", VA = "0xFF0658")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0xFF06A4", Offset = "0xFF06A4", VA = "0xFF06A4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0xFF06D8", Offset = "0xFF06D8", VA = "0xFF06D8", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0xFF0748", Offset = "0xFF0748", VA = "0xFF0748", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0xFF08C4", Offset = "0xFF08C4", VA = "0xFF08C4")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0xFF0920", Offset = "0xFF0920", VA = "0xFF0920")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000390")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0xFF09A0", Offset = "0xFF09A0", VA = "0xFF09A0")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0xFF09E0", Offset = "0xFF09E0", VA = "0xFF09E0")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0xFF0A2C", Offset = "0xFF0A2C", VA = "0xFF0A2C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0xFF0A60", Offset = "0xFF0A60", VA = "0xFF0A60", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0xFF0AD0", Offset = "0xFF0AD0", VA = "0xFF0AD0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0xFF0C4C", Offset = "0xFF0C4C", VA = "0xFF0C4C")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0xFF0CA8", Offset = "0xFF0CA8", VA = "0xFF0CA8")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000391")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000392")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000393")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001466")]
			None = 0,
			[Token(Token = "0x4001467")]
			AAudio = 1,
			[Token(Token = "0x4001468")]
			OpenSL_ES = 2,
			[Token(Token = "0x4001469")]
			Default = -1
		}

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF650", Offset = "0x8DF650")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8DF650", Offset = "0x8DF650")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF6D4", Offset = "0x8DF6D4")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xFF4BE8", Offset = "0xFF4BE8", VA = "0xFF4BE8", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xFF4C2C", Offset = "0xFF4C2C", VA = "0xFF4C2C")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x138F9F4", Offset = "0x138F9F4", VA = "0x138F9F4")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x138FD3C", Offset = "0x138FD3C", VA = "0x138FD3C", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x138FD44", Offset = "0x138FD44", VA = "0x138FD44", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x138FD4C", Offset = "0x138FD4C", VA = "0x138FD4C", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000394")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000395")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D63AC", Offset = "0x8D63AC")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000397")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D63C0", Offset = "0x8D63C0")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x1390C5C", Offset = "0x1390C5C", VA = "0x1390C5C")]
	public static uint PostAudioInputEvent(AK.Wwise.Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x1390F38", Offset = "0x1390F38", VA = "0x1390F38")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x1391054", Offset = "0x1391054", VA = "0x1391054")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x1390A18", Offset = "0x1390A18", VA = "0x1390A18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EEDE8", Offset = "0x8EEDE8")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x1390B2C", Offset = "0x1390B2C", VA = "0x1390B2C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EEE48", Offset = "0x8EEE48")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x1390D54", Offset = "0x1390D54", VA = "0x1390D54")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x1390E30", Offset = "0x1390E30", VA = "0x1390E30")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x1391170", Offset = "0x1391170", VA = "0x1391170")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000399")]
public static class AkBankManager
{
	[Token(Token = "0x200039A")]
	private class BankHandle
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF70C", Offset = "0x8DF70C")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000314")]
		public int RefCount
		{
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xFF6660", Offset = "0xFF6660", VA = "0xFF6660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEA8", Offset = "0x8EEEA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xFF6668", Offset = "0xFF6668", VA = "0xFF6668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEB8", Offset = "0x8EEEB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xFF5E5C", Offset = "0xFF5E5C", VA = "0xFF5E5C")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xFF6670", Offset = "0xFF6670", VA = "0xFF6670", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xFF66E4", Offset = "0xFF66E4", VA = "0xFF66E4")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xFF6804", Offset = "0xFF6804", VA = "0xFF6804", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xFF67F4", Offset = "0xFF67F4", VA = "0xFF67F4")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xFF6884", Offset = "0xFF6884", VA = "0xFF6884")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xFF6044", Offset = "0xFF6044", VA = "0xFF6044")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200039B")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xFF5E0C", Offset = "0xFF5E0C", VA = "0xFF5E0C")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xFF5E90", Offset = "0xFF5E90", VA = "0xFF5E90")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xFF6578", Offset = "0xFF6578", VA = "0xFF6578", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200039C")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xFF692C", Offset = "0xFF692C", VA = "0xFF692C")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xFF6C2C", Offset = "0xFF6C2C", VA = "0xFF6C2C", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xFF6DCC", Offset = "0xFF6DCC", VA = "0xFF6DCC", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x1394504", Offset = "0x1394504", VA = "0x1394504")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x1394648", Offset = "0x1394648", VA = "0x1394648")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x13946F8", Offset = "0x13946F8", VA = "0x13946F8")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x1394878", Offset = "0x1394878", VA = "0x1394878")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x13948FC", Offset = "0x13948FC", VA = "0x13948FC")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x1394AF0", Offset = "0x1394AF0", VA = "0x1394AF0")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x1394CA8", Offset = "0x1394CA8", VA = "0x1394CA8")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200039D")]
public class AkBasePathGetter
{
	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool LogWarnings;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string DefaultBasePath;

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x1394F1C", Offset = "0x1394F1C", VA = "0x1394F1C")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x1394F94", Offset = "0x1394F94", VA = "0x1394F94")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x1395058", Offset = "0x1395058", VA = "0x1395058")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x13951F8", Offset = "0x13951F8", VA = "0x13951F8")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x139513C", Offset = "0x139513C", VA = "0x139513C")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x1395348", Offset = "0x1395348", VA = "0x1395348")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x139545C", Offset = "0x139545C", VA = "0x139545C")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x200039E")]
public static class AkCallbackManager
{
	[Token(Token = "0x200039F")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x20003A0")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x20003A1")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x20003A2")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xFF77D8", Offset = "0xFF77D8", VA = "0xFF77D8")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xFF7928", Offset = "0xFF7928", VA = "0xFF7928")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20003A3")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xFF7288", Offset = "0xFF7288", VA = "0xFF7288")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x20003A4")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x20003A5")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xFF7178", Offset = "0xFF7178", VA = "0xFF7178")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	public class InitializationSettings
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xFF7930", Offset = "0xFF7930", VA = "0xFF7930")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF71C", Offset = "0x8DF71C")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000315")]
	public static bool IsLoggingEnabled
	{
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1395C40", Offset = "0x1395C40", VA = "0x1395C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEEC8", Offset = "0x8EEEC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1395CA4", Offset = "0x1395CA4", VA = "0x1395CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEED8", Offset = "0x8EEED8")]
		set
		{
		}
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x1395D10", Offset = "0x1395D10", VA = "0x1395D10")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x1395FE4", Offset = "0x1395FE4", VA = "0x1395FE4")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x13962DC", Offset = "0x13962DC", VA = "0x13962DC")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x13965D4", Offset = "0x13965D4", VA = "0x13965D4")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0x1396698", Offset = "0x1396698", VA = "0x1396698")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x139684C", Offset = "0x139684C", VA = "0x139684C")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x1396998", Offset = "0x1396998", VA = "0x1396998")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x1396A80", Offset = "0x1396A80", VA = "0x1396A80")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x1396B48", Offset = "0x1396B48", VA = "0x1396B48")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x20003A7")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000316")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x139552C", Offset = "0x139552C", VA = "0x139552C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000317")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1395600", Offset = "0x1395600", VA = "0x1395600", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000318")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1395658", Offset = "0x1395658", VA = "0x1395658", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000319")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x13956B0", Offset = "0x13956B0", VA = "0x13956B0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031A")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x13956F4", Offset = "0x13956F4", VA = "0x13956F4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031B")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x13956FC", Offset = "0x13956FC", VA = "0x13956FC", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031C")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1395760", Offset = "0x1395760", VA = "0x1395760", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031D")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1395834", Offset = "0x1395834", VA = "0x1395834", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0x139583C", Offset = "0x139583C", VA = "0x139583C")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A8")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x20003A9")]
	public enum PanningRule
	{
		[Token(Token = "0x400149E")]
		Speakers,
		[Token(Token = "0x400149F")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x20003AA")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x20003AB")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x40014A4")]
			Anonymous,
			[Token(Token = "0x40014A5")]
			Standard,
			[Token(Token = "0x40014A6")]
			Ambisonic
		}

		[Token(Token = "0x20003AC")]
		public enum ChannelMask
		{
			[Token(Token = "0x40014A8")]
			NONE = 0,
			[Token(Token = "0x40014A9")]
			FRONT_LEFT = 1,
			[Token(Token = "0x40014AA")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x40014AB")]
			FRONT_CENTER = 4,
			[Token(Token = "0x40014AC")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x40014AD")]
			BACK_LEFT = 16,
			[Token(Token = "0x40014AE")]
			BACK_RIGHT = 32,
			[Token(Token = "0x40014AF")]
			BACK_CENTER = 256,
			[Token(Token = "0x40014B0")]
			SIDE_LEFT = 512,
			[Token(Token = "0x40014B1")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x40014B2")]
			TOP = 2048,
			[Token(Token = "0x40014B3")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x40014B4")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x40014B5")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x40014B6")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x40014B7")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x40014B8")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x40014B9")]
			SETUP_MONO = 4,
			[Token(Token = "0x40014BA")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x40014BB")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x40014BC")]
			SETUP_STEREO = 3,
			[Token(Token = "0x40014BD")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x40014BE")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x40014BF")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x40014C0")]
			SETUP_4 = 1539,
			[Token(Token = "0x40014C1")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x40014C2")]
			SETUP_5 = 1543,
			[Token(Token = "0x40014C3")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x40014C4")]
			SETUP_6 = 1587,
			[Token(Token = "0x40014C5")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x40014C6")]
			SETUP_7 = 1591,
			[Token(Token = "0x40014C7")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x40014C8")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x40014C9")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x40014CA")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x40014CB")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x40014CC")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x40014CD")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x40014CE")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x40014CF")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x40014D0")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x40014D1")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x40014D2")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x40014D3")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x40014D4")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x40014D5")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x40014D6")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x40014D7")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x40014D8")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x40014D9")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x40014DA")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x40014DB")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x40014DC")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x40014DD")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x40014DE")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x40014DF")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x40014E0")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x40014E1")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x40014E2")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x40014E3")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF80C", Offset = "0x8DF80C")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF844", Offset = "0x8DF844")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8DF844", Offset = "0x8DF844")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF8C8", Offset = "0x8DF8C8")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xFF7E1C", Offset = "0xFF7E1C", VA = "0xFF7E1C")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xFF7E9C", Offset = "0xFF7E9C", VA = "0xFF7E9C")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF72C", Offset = "0x8DF72C")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF764", Offset = "0x8DF764")]
	public uint m_DeviceID;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF79C", Offset = "0x8DF79C")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF7D4", Offset = "0x8DF7D4")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x139A45C", Offset = "0x139A45C", VA = "0x139A45C")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x138FCA0", Offset = "0x138FCA0", VA = "0x138FCA0")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x20003AD")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6001B52")]
	[Address(RVA = "0xE3CC50", Offset = "0xE3CC50", VA = "0xE3CC50", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xE3CC54", Offset = "0xE3CC54", VA = "0xE3CC54")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20003AE")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x20003B0")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x40014FC")]
			UseBuiltInParam = 1,
			[Token(Token = "0x40014FD")]
			UseObstruction = 2,
			[Token(Token = "0x40014FE")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFD7C", Offset = "0x8DFD7C")]
		public uint m_PoolSize;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFDB4", Offset = "0x8DFDB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DFDB4", Offset = "0x8DFDB4")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFE08", Offset = "0x8DFE08")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8DFE08", Offset = "0x8DFE08")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFE8C", Offset = "0x8DFE8C")]
		public float m_MovementThreshold;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xFF7EA4", Offset = "0xFF7EA4", VA = "0xFF7EA4")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF900", Offset = "0x8DF900")]
	public string m_BasePath;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF938", Offset = "0x8DF938")]
	public string m_StartupLanguage;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF970", Offset = "0x8DF970")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF9A8", Offset = "0x8DF9A8")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DF9E0", Offset = "0x8DF9E0")]
	public bool m_EngineLogging;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFA18", Offset = "0x8DFA18")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFA50", Offset = "0x8DFA50")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFA88", Offset = "0x8DFA88")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFAC0", Offset = "0x8DFAC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DFAC0", Offset = "0x8DFAC0")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFB14", Offset = "0x8DFB14")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFB4C", Offset = "0x8DFB4C")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFB84", Offset = "0x8DFB84")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFBBC", Offset = "0x8DFBBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DFBBC", Offset = "0x8DFBBC")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFC10", Offset = "0x8DFC10")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFC48", Offset = "0x8DFC48")]
	public uint m_SampleRate;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFC80", Offset = "0x8DFC80")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DFCB8", Offset = "0x8DFCB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFCB8", Offset = "0x8DFCB8")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFD0C", Offset = "0x8DFD0C")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFD44", Offset = "0x8DFD44")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x139A7B8", Offset = "0x139A7B8", VA = "0x139A7B8")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x139AFB4", Offset = "0x139AFB4", VA = "0x139AFB4")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x139AFBC", Offset = "0x139AFBC", VA = "0x139AFBC", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x139ABD4", Offset = "0x139ABD4", VA = "0x139ABD4")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x139A964", Offset = "0x139A964", VA = "0x139A964")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x139B534", Offset = "0x139B534", VA = "0x139B534", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0x139B538", Offset = "0x139B538", VA = "0x139B538", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x139B59C", Offset = "0x139B59C", VA = "0x139B59C", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x139B620", Offset = "0x139B620", VA = "0x139B620", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x139B624", Offset = "0x139B624", VA = "0x139B624", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x138FB70", Offset = "0x138FB70", VA = "0x138FB70")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003B1")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x20003B2")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E020C", Offset = "0x8E020C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E020C", Offset = "0x8E020C")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0260", Offset = "0x8E0260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0260", Offset = "0x8E0260")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xFF7E08", Offset = "0xFF7E08", VA = "0xFF7E08")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFEC4", Offset = "0x8DFEC4")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFEFC", Offset = "0x8DFEFC")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFF34", Offset = "0x8DFF34")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFF6C", Offset = "0x8DFF6C")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFFA4", Offset = "0x8DFFA4")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DFFDC", Offset = "0x8DFFDC")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0014", Offset = "0x8E0014")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E004C", Offset = "0x8E004C")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0084", Offset = "0x8E0084")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E00BC", Offset = "0x8E00BC")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E00F4", Offset = "0x8E00F4")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E012C", Offset = "0x8E012C")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0164", Offset = "0x8E0164")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E019C", Offset = "0x8E019C")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E01D4", Offset = "0x8E01D4")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x1399820", Offset = "0x1399820", VA = "0x1399820", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x1399A54", Offset = "0x1399A54", VA = "0x1399A54", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x1399E98", Offset = "0x1399E98", VA = "0x1399E98", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x1399E9C", Offset = "0x1399E9C", VA = "0x1399E9C", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x1399EF0", Offset = "0x1399EF0", VA = "0x1399EF0", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x1399EF4", Offset = "0x1399EF4", VA = "0x1399EF4", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x1399FFC", Offset = "0x1399FFC", VA = "0x1399FFC")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003B3")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E02BC", Offset = "0x8E02BC")]
	public uint m_PoolSize;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E02F4", Offset = "0x8E02F4")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E032C", Offset = "0x8E032C")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0364", Offset = "0x8E0364")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E039C", Offset = "0x8E039C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E03D4", Offset = "0x8E03D4")]
	public string m_NetworkName;

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x139A02C", Offset = "0x139A02C", VA = "0x139A02C", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x139A388", Offset = "0x139A388", VA = "0x139A388")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x20003B4")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x1700031E")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x139A548", Offset = "0x139A548", VA = "0x139A548", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031F")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x139ADA8", Offset = "0x139ADA8", VA = "0x139ADA8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000320")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x139AE20", Offset = "0x139AE20", VA = "0x139AE20", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000321")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x139AEB0", Offset = "0x139AEB0", VA = "0x139AEB0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000322")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x139AED8", Offset = "0x139AED8", VA = "0x139AED8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000323")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x139AF04", Offset = "0x139AF04", VA = "0x139AF04", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000324")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x139AF2C", Offset = "0x139AF2C", VA = "0x139AF2C", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000325")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x139AF58", Offset = "0x139AF58", VA = "0x139AF58", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B6B")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6001B6C")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6001B6D")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x139AFAC", Offset = "0x139AFAC", VA = "0x139AFAC")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x20003B5")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D63D4", Offset = "0x8D63D4")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type Type;

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x139F034", Offset = "0x139F034", VA = "0x139F034")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x20003B6")]
public class AkLogger
{
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D640C", Offset = "0x8D640C")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x17000326")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x13A6D18", Offset = "0x13A6D18", VA = "0x13A6D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x13A6BDC", Offset = "0x13A6BDC", VA = "0x13A6BDC")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x13A6D7C", Offset = "0x13A6D7C", VA = "0x13A6D7C", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x13A6EA4", Offset = "0x13A6EA4", VA = "0x13A6EA4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0x13A6B4C", Offset = "0x13A6B4C", VA = "0x13A6B4C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EEEE8", Offset = "0x8EEEE8")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x13A6EA8", Offset = "0x13A6EA8", VA = "0x13A6EA8")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x13A6F38", Offset = "0x13A6F38", VA = "0x13A6F38")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x13A6FC8", Offset = "0x13A6FC8", VA = "0x13A6FC8")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x20003B8")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0xE3964C", Offset = "0xE3964C", VA = "0xE3964C")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0xE3A390", Offset = "0xE3A390", VA = "0xE3A390")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0xE38734", Offset = "0xE38734", VA = "0xE38734")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0xE37070", Offset = "0xE37070", VA = "0xE37070")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0xE3A9E0", Offset = "0xE3A9E0", VA = "0xE3A9E0")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x20003B9")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0xE3CC5C", Offset = "0xE3CC5C", VA = "0xE3CC5C")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x20003BA")]
public class AkUtilities
{
	[Token(Token = "0x20003BB")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x400151D")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x400151E")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000327")]
		public static byte HashSize
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xFFBBC0", Offset = "0xFFBBC0", VA = "0xFFBBC0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xFFBB3C", Offset = "0xFFBB3C", VA = "0xFFBB3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xFFBB34", Offset = "0xFFBB34", VA = "0xFFBB34")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xFFBC24", Offset = "0xFFBC24", VA = "0xFFBC24")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xFFBD60", Offset = "0xFFBD60", VA = "0xFFBD60")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0xE7075C", Offset = "0xE7075C", VA = "0xE7075C")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x20003BC")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x20003BD")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x1700032C")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xFFC3D0", Offset = "0xFFC3D0", VA = "0xFFC3D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xFFC46C", Offset = "0xFFC46C", VA = "0xFFC46C")]
			set
			{
			}
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xFFBE90", Offset = "0xFFBE90", VA = "0xFFBE90")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xFFBF24", Offset = "0xFFBF24", VA = "0xFFBF24")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xFFBDA0", Offset = "0xFFBDA0", VA = "0xFFBDA0")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xFFBF88", Offset = "0xFFBF88", VA = "0xFFBF88")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xFFC04C", Offset = "0xFFC04C", VA = "0xFFC04C")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xFFC36C", Offset = "0xFFC36C", VA = "0xFFC36C")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003BE")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xFFBD84", Offset = "0xFFBD84", VA = "0xFFBD84", Slot = "12")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xFFBD8C", Offset = "0xFFBD8C", VA = "0xFFBD8C", Slot = "13")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xFFBD94", Offset = "0xFFBD94", VA = "0xFFBD94", Slot = "14")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xFFBD9C", Offset = "0xFFBD9C", VA = "0xFFBD9C")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000328")]
	public bool IsValid
	{
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x1491E64", Offset = "0x1491E64", VA = "0x1491E64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000329")]
	public int Count
	{
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1491ED0", Offset = "0x1491ED0", VA = "0x1491ED0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700032A")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1491F34", Offset = "0x1491F34", VA = "0x1491F34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032B")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1492290", Offset = "0x1492290", VA = "0x1492290")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x1491F1C", Offset = "0x1491F1C", VA = "0x1491F1C", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x1491F24", Offset = "0x1491F24", VA = "0x1491F24", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x1491F2C", Offset = "0x1491F2C", VA = "0x1491F2C", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x149209C", Offset = "0x149209C", VA = "0x149209C")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0x14923D0", Offset = "0x14923D0", VA = "0x14923D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x1492564", Offset = "0x1492564", VA = "0x1492564")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x1492C84", Offset = "0x1492C84", VA = "0x1492C84")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x1492DAC", Offset = "0x1492DAC", VA = "0x1492DAC")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x1492F80", Offset = "0x1492F80", VA = "0x1492F80")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x1493134", Offset = "0x1493134", VA = "0x1493134")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x20003BF")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x1700032D")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x138E52C", Offset = "0x138E52C", VA = "0x138E52C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x138E4D0", Offset = "0x138E4D0", VA = "0x138E4D0")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x138E588", Offset = "0x138E588", VA = "0x138E588", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x138E5EC", Offset = "0x138E5EC", VA = "0x138E5EC", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x138E650", Offset = "0x138E650", VA = "0x138E650", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20003C0")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D6420", Offset = "0x8D6420")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4001530")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x1700032E")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x1392B58", Offset = "0x1392B58", VA = "0x1392B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032F")]
	public bool isFull
	{
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1392CC0", Offset = "0x1392CC0", VA = "0x1392CC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x1392AA0", Offset = "0x1392AA0", VA = "0x1392AA0")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x1392D24", Offset = "0x1392D24", VA = "0x1392D24", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x1392DB8", Offset = "0x1392DB8", VA = "0x1392DB8", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x1392E20", Offset = "0x1392E20", VA = "0x1392E20")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x1392E28", Offset = "0x1392E28", VA = "0x1392E28")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x1392F48", Offset = "0x1392F48", VA = "0x1392F48")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x1393024", Offset = "0x1393024", VA = "0x1393024")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x1393178", Offset = "0x1393178", VA = "0x1393178")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x1393278", Offset = "0x1393278", VA = "0x1393278")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x1393338", Offset = "0x1393338", VA = "0x1393338")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x1393408", Offset = "0x1393408", VA = "0x1393408")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x1393410", Offset = "0x1393410", VA = "0x1393410")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0x1392C44", Offset = "0x1392C44", VA = "0x1392C44")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C1")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D6458", Offset = "0x8D6458")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E050C", Offset = "0x8E050C")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000330")]
	public int Capacity
	{
		[Token(Token = "0x6001BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF48", Offset = "0x8EEF48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001BC5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF58", Offset = "0x8EEF58")]
		private set
		{
		}
	}

	[Token(Token = "0x17000331")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6001BC7")]
		get;
	}

	[Token(Token = "0x17000332")]
	public T Item
	{
		[Token(Token = "0x6001BCC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001BCD")]
		set
		{
		}
	}

	[Token(Token = "0x6001BC1")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001BC2")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BC3")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6001BC6")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BC8")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BC9")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BCA")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001BCB")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6001BCE")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BCF")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C2")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E051C", Offset = "0x8E051C")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000333")]
	public uint Count
	{
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1399308", Offset = "0x1399308", VA = "0x1399308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF68", Offset = "0x8EEF68")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1399310", Offset = "0x1399310", VA = "0x1399310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF78", Offset = "0x8EEF78")]
		private set
		{
		}
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x139927C", Offset = "0x139927C", VA = "0x139927C")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x1399318", Offset = "0x1399318", VA = "0x1399318", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x13993AC", Offset = "0x13993AC", VA = "0x13993AC", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x1399414", Offset = "0x1399414", VA = "0x1399414")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x1399424", Offset = "0x1399424", VA = "0x1399424")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x20003C3")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x17000334")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x139D28C", Offset = "0x139D28C", VA = "0x139D28C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x139D230", Offset = "0x139D230", VA = "0x139D230")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x139D2E8", Offset = "0x139D2E8", VA = "0x139D2E8", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0x139D34C", Offset = "0x139D34C", VA = "0x139D34C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x20003C4")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x17000335")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x13A1DB8", Offset = "0x13A1DB8", VA = "0x13A1DB8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0x13A1D5C", Offset = "0x13A1D5C", VA = "0x13A1D5C")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BDD")]
	[Address(RVA = "0x13A1E14", Offset = "0x13A1E14", VA = "0x13A1E14", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x13A1E78", Offset = "0x13A1E78", VA = "0x13A1E78", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0x13A1EE0", Offset = "0x13A1EE0", VA = "0x13A1EE0", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0x13A1F44", Offset = "0x13A1F44", VA = "0x13A1F44", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x20003C5")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D6490", Offset = "0x8D6490")]
public class AkMIDIPostArray
{
	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000336")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x13A97CC", Offset = "0x13A97CC", VA = "0x13A97CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x13A98F0", Offset = "0x13A98F0", VA = "0x13A98F0")]
		set
		{
		}
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x13A96F8", Offset = "0x13A96F8", VA = "0x13A96F8")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x13A9A08", Offset = "0x13A9A08", VA = "0x13A9A08", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x13A9ACC", Offset = "0x13A9ACC", VA = "0x13A9ACC")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x13A9BA0", Offset = "0x13A9BA0", VA = "0x13A9BA0")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x13A9CD0", Offset = "0x13A9CD0", VA = "0x13A9CD0")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x13A9CD8", Offset = "0x13A9CD8", VA = "0x13A9CD8")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x13A98B4", Offset = "0x13A98B4", VA = "0x13A98B4")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003C6")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x17000337")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xE28184", Offset = "0xE28184", VA = "0xE28184", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0xE28128", Offset = "0xE28128", VA = "0xE28128")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0xE281DC", Offset = "0xE281DC", VA = "0xE281DC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0xE2823C", Offset = "0xE2823C", VA = "0xE2823C", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0xE282A0", Offset = "0xE282A0", VA = "0xE282A0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x20003C7")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x17000338")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xE29754", Offset = "0xE29754", VA = "0xE29754", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0xE296F8", Offset = "0xE296F8", VA = "0xE296F8")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0xE297AC", Offset = "0xE297AC", VA = "0xE297AC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0xE2980C", Offset = "0xE2980C", VA = "0xE2980C", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0xE29870", Offset = "0xE29870", VA = "0xE29870", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x20003C8")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E052C", Offset = "0x8E052C")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000339")]
	public uint Count
	{
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xE30F1C", Offset = "0xE30F1C", VA = "0xE30F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF88", Offset = "0x8EEF88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xE30F24", Offset = "0xE30F24", VA = "0xE30F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEF98", Offset = "0x8EEF98")]
		private set
		{
		}
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0xE30E90", Offset = "0xE30E90", VA = "0xE30E90")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0xE30F2C", Offset = "0xE30F2C", VA = "0xE30F2C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001BF8")]
	[Address(RVA = "0xE30FC0", Offset = "0xE30FC0", VA = "0xE30FC0", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0xE31028", Offset = "0xE31028", VA = "0xE31028")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0xE31038", Offset = "0xE31038", VA = "0xE31038")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x20003C9")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x1700033A")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xE36368", Offset = "0xE36368", VA = "0xE36368", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0xE3630C", Offset = "0xE3630C", VA = "0xE3630C")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0xE363C0", Offset = "0xE363C0", VA = "0xE363C0", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0xE36424", Offset = "0xE36424", VA = "0xE36424", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x20003CA")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x1700033B")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xE692A8", Offset = "0xE692A8", VA = "0xE692A8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0xE6924C", Offset = "0xE6924C", VA = "0xE6924C")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0xE69300", Offset = "0xE69300", VA = "0xE69300", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0xE69360", Offset = "0xE69360", VA = "0xE69360", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0xE693C4", Offset = "0xE693C4", VA = "0xE693C4", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x20003CB")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x1700033C")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xE6F840", Offset = "0xE6F840", VA = "0xE6F840", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0xE6B8C0", Offset = "0xE6B8C0", VA = "0xE6B8C0")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0xE6F898", Offset = "0xE6F898", VA = "0xE6F898", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0xE6F8F8", Offset = "0xE6F8F8", VA = "0xE6F8F8", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0xE6F95C", Offset = "0xE6F95C", VA = "0xE6F95C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x20003CC")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x1700033D")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1491C98", Offset = "0x1491C98", VA = "0x1491C98", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x1491C3C", Offset = "0x1491C3C", VA = "0x1491C3C")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x1491CF4", Offset = "0x1491CF4", VA = "0x1491CF4", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x1491D58", Offset = "0x1491D58", VA = "0x1491D58", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x1491DBC", Offset = "0x1491DBC", VA = "0x1491DBC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x20003CD")]
public class AkTimelineEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20003CE")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4001559")]
		None = 0,
		[Token(Token = "0x400155A")]
		Playback = 1,
		[Token(Token = "0x400155B")]
		Retrigger = 2,
		[Token(Token = "0x400155C")]
		DelayedStop = 4,
		[Token(Token = "0x400155D")]
		Seek = 8,
		[Token(Token = "0x400155E")]
		FadeIn = 0x10,
		[Token(Token = "0x400155F")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4001547")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4001549")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x4001557")]
	private const float alph = 0.05f;

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0xE6CCC8", Offset = "0xE6CCC8", VA = "0xE6CCC8")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0xE6CD90", Offset = "0xE6CD90", VA = "0xE6CD90")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0xE6CDB4", Offset = "0xE6CDB4", VA = "0xE6CDB4", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0xE6D188", Offset = "0xE6D188", VA = "0xE6D188", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0xE6D358", Offset = "0xE6D358", VA = "0xE6D358", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0xE6D470", Offset = "0xE6D470", VA = "0xE6D470", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0xE6CEF0", Offset = "0xE6CEF0", VA = "0xE6CEF0")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0xE6D04C", Offset = "0xE6D04C", VA = "0xE6D04C")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0xE6D0E8", Offset = "0xE6D0E8", VA = "0xE6D0E8")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0xE6D7F8", Offset = "0xE6D7F8", VA = "0xE6D7F8")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0xE6D908", Offset = "0xE6D908", VA = "0xE6D908")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0xE6D438", Offset = "0xE6D438", VA = "0xE6D438")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0xE6D9E8", Offset = "0xE6D9E8", VA = "0xE6D9E8")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0xE6D660", Offset = "0xE6D660", VA = "0xE6D660")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0xE6D760", Offset = "0xE6D760", VA = "0xE6D760")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0xE6D274", Offset = "0xE6D274", VA = "0xE6D274")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0xE6D690", Offset = "0xE6D690", VA = "0xE6D690")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001C1F")]
	[Address(RVA = "0xE6DAA0", Offset = "0xE6DAA0", VA = "0xE6DAA0")]
	public AkTimelineEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20003CF")]
public class AkTimelineEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eventDurationMax;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineClip owningClip;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x1700033E")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xE6CA28", Offset = "0xE6CA28", VA = "0xE6CA28", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0xE6CA30", Offset = "0xE6CA30", VA = "0xE6CA30", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0xE6CC44", Offset = "0xE6CC44", VA = "0xE6CC44")]
	public AkTimelineEventPlayable()
	{
	}
}
[Token(Token = "0x20003D0")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8D64D8", Offset = "0x8D64D8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8D64D8", Offset = "0x8D64D8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8D64D8", Offset = "0x8D64D8")]
public class AkTimelineEventTrack : TrackAsset
{
	[Token(Token = "0x6001C23")]
	[Address(RVA = "0xE6DAB4", Offset = "0xE6DAB4", VA = "0xE6DAB4", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0xE6DECC", Offset = "0xE6DECC", VA = "0xE6DECC")]
	public AkTimelineEventTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D1")]
public class AkTimelineRtpcPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float value;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E058C", Offset = "0x8E058C")]
	private RTPC <RTPC>k__BackingField;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E059C", Offset = "0x8E059C")]
	private bool <setGlobally>k__BackingField;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E05AC", Offset = "0x8E05AC")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x1700033F")]
	public RTPC RTPC
	{
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xE6E130", Offset = "0xE6E130", VA = "0xE6E130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFB8", Offset = "0x8EEFB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xE6E128", Offset = "0xE6E128", VA = "0xE6E128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFA8", Offset = "0x8EEFA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000340")]
	public bool setGlobally
	{
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xE6E144", Offset = "0xE6E144", VA = "0xE6E144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFD8", Offset = "0x8EEFD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xE6E138", Offset = "0xE6E138", VA = "0xE6E138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFC8", Offset = "0x8EEFC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000341")]
	public GameObject gameObject
	{
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xE6E154", Offset = "0xE6E154", VA = "0xE6E154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFF8", Offset = "0x8EEFF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xE6E14C", Offset = "0xE6E14C", VA = "0xE6E14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EEFE8", Offset = "0x8EEFE8")]
		set
		{
		}
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0xE6E15C", Offset = "0xE6E15C", VA = "0xE6E15C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData frameData, object playerData)
	{
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0xE6E120", Offset = "0xE6E120", VA = "0xE6E120")]
	public AkTimelineRtpcPlayableBehaviour()
	{
	}
}
[Token(Token = "0x20003D2")]
public class AkTimelineRtpcPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC RTPC;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setGlobally;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkTimelineRtpcPlayableBehaviour template;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E05BC", Offset = "0x8E05BC")]
	private TimelineClip <owningClip>k__BackingField;

	[Token(Token = "0x17000342")]
	public TimelineClip owningClip
	{
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xE6DF34", Offset = "0xE6DF34", VA = "0xE6DF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF008", Offset = "0x8EF008")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xE6DF3C", Offset = "0xE6DF3C", VA = "0xE6DF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF018", Offset = "0x8EF018")]
		set
		{
		}
	}

	[Token(Token = "0x17000343")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xE6DF44", Offset = "0xE6DF44", VA = "0xE6DF44", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0xE6DF30", Offset = "0xE6DF30", VA = "0xE6DF30")]
	public void SetupClipDisplay()
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0xE6DF4C", Offset = "0xE6DF4C", VA = "0xE6DF4C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject gameObject)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0xE6E078", Offset = "0xE6E078", VA = "0xE6E078")]
	public AkTimelineRtpcPlayable()
	{
	}
}
[Token(Token = "0x20003D3")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8D6594", Offset = "0x8D6594")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8D6594", Offset = "0x8D6594")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8D6594", Offset = "0x8D6594")]
public class AkTimelineRtpcTrack : TrackAsset
{
	[Token(Token = "0x6001C33")]
	[Address(RVA = "0xE6E2C8", Offset = "0xE6E2C8", VA = "0xE6E2C8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject gameObject, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0xE6E690", Offset = "0xE6E690", VA = "0xE6E690")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001C35")]
	[Address(RVA = "0xE6E998", Offset = "0xE6E998", VA = "0xE6E998")]
	public AkTimelineRtpcTrack()
	{
	}
}
[Token(Token = "0x20003D4")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000344")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x14014A0", Offset = "0x14014A0", VA = "0x14014A0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x1401504", Offset = "0x1401504", VA = "0x1401504")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x20003D5")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000345")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x14018BC", Offset = "0x14018BC", VA = "0x14018BC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x1401920", Offset = "0x1401920", VA = "0x1401920")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x20003D6")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000346")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1401974", Offset = "0x1401974", VA = "0x1401974", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x14019D8", Offset = "0x14019D8", VA = "0x14019D8")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x20003D7")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000347")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1401A2C", Offset = "0x1401A2C", VA = "0x1401A2C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x1401A90", Offset = "0x1401A90", VA = "0x1401A90")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x20003D8")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AkShowOnly]
	private string objectName;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AkShowOnly]
	private string guid;

	[Token(Token = "0x17000348")]
	public Guid Guid
	{
		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x1401DB0", Offset = "0x1401DB0", VA = "0x1401DB0")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000349")]
	public string ObjectName
	{
		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1401E50", Offset = "0x1401E50", VA = "0x1401E50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034A")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1401E58", Offset = "0x1401E58", VA = "0x1401E58", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034B")]
	public uint Id
	{
		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1401E60", Offset = "0x1401E60", VA = "0x1401E60")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700034C")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C46")]
		get;
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x1401508", Offset = "0x1401508", VA = "0x1401508")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x20003D9")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x1700034D")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C48")]
		get;
		[Token(Token = "0x6001C49")]
		set;
	}

	[Token(Token = "0x1700034E")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C4A")]
		get;
	}

	[Token(Token = "0x1700034F")]
	public override string DisplayName
	{
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1401AE4", Offset = "0x1401AE4", VA = "0x1401AE4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x1401BA4", Offset = "0x1401BA4", VA = "0x1401BA4")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x20003DA")]
public enum WwiseObjectType
{
	[Token(Token = "0x4001579")]
	None,
	[Token(Token = "0x400157A")]
	AuxBus,
	[Token(Token = "0x400157B")]
	Bus,
	[Token(Token = "0x400157C")]
	Event,
	[Token(Token = "0x400157D")]
	Folder,
	[Token(Token = "0x400157E")]
	PhysicalFolder,
	[Token(Token = "0x400157F")]
	Project,
	[Token(Token = "0x4001580")]
	Soundbank,
	[Token(Token = "0x4001581")]
	State,
	[Token(Token = "0x4001582")]
	StateGroup,
	[Token(Token = "0x4001583")]
	Switch,
	[Token(Token = "0x4001584")]
	SwitchGroup,
	[Token(Token = "0x4001585")]
	WorkUnit,
	[Token(Token = "0x4001586")]
	GameParameter,
	[Token(Token = "0x4001587")]
	Trigger,
	[Token(Token = "0x4001588")]
	AcousticTexture
}
[Token(Token = "0x20003DB")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000350")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1401FA0", Offset = "0x1401FA0", VA = "0x1401FA0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0x1402004", Offset = "0x1402004", VA = "0x1402004")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x20003DC")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000351")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1402128", Offset = "0x1402128", VA = "0x1402128", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0x140218C", Offset = "0x140218C", VA = "0x140218C")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x20003DD")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AkShowOnly]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000352")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x14021E0", Offset = "0x14021E0", VA = "0x14021E0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000353")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1402244", Offset = "0x1402244", VA = "0x1402244", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x140224C", Offset = "0x140224C", VA = "0x140224C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000354")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x14022DC", Offset = "0x14022DC", VA = "0x14022DC", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0x1402340", Offset = "0x1402340", VA = "0x1402340")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x20003DE")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000355")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1402634", Offset = "0x1402634", VA = "0x1402634", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0x1402698", Offset = "0x1402698", VA = "0x1402698")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x20003DF")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x17000356")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x14026EC", Offset = "0x14026EC", VA = "0x14026EC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000357")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1402750", Offset = "0x1402750", VA = "0x1402750", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1402758", Offset = "0x1402758", VA = "0x1402758", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000358")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x14027E8", Offset = "0x14027E8", VA = "0x14027E8", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x140284C", Offset = "0x140284C", VA = "0x140284C")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x20003E0")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000359")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x14028B0", Offset = "0x14028B0", VA = "0x14028B0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x1402914", Offset = "0x1402914", VA = "0x1402914")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x20003E1")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6001C65")]
	[Address(RVA = "0xE23454", Offset = "0xE23454", VA = "0xE23454")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x20003E2")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20003E3")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20003E4")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001599")]
			None = 0,
			[Token(Token = "0x400159A")]
			Wasapi = 1,
			[Token(Token = "0x400159B")]
			XAudio2 = 2,
			[Token(Token = "0x400159C")]
			DirectSound = 4,
			[Token(Token = "0x400159D")]
			Default = -1
		}

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0714", Offset = "0x8E0714")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x8E0714", Offset = "0x8E0714")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0798", Offset = "0x8E0798")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xFFBD68", Offset = "0xFFBD68", VA = "0xFFBD68", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xFFBD6C", Offset = "0xFFBD6C", VA = "0xFFBD6C")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x1491E44", Offset = "0x1491E44", VA = "0x1491E44", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x1491E4C", Offset = "0x1491E4C", VA = "0x1491E4C", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x1491E54", Offset = "0x1491E54", VA = "0x1491E54", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x1491E5C", Offset = "0x1491E5C", VA = "0x1491E5C")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x20003E5")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x400159F")]
	Simple_Mode,
	[Token(Token = "0x40015A0")]
	Large_Mode,
	[Token(Token = "0x40015A1")]
	MultiPosition_Mode
}
[Token(Token = "0x20003E6")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0xE25514", Offset = "0xE25514", VA = "0xE25514")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0xE2551C", Offset = "0xE2551C", VA = "0xE2551C")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x20003E7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D664C", Offset = "0x8D664C")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x138E6EC", Offset = "0x138E6EC", VA = "0x138E6EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x138EBC8", Offset = "0x138EBC8", VA = "0x138EBC8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0x138F0E4", Offset = "0x138F0E4", VA = "0x138F0E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x138F2F8", Offset = "0x138F2F8", VA = "0x138F2F8", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x138F7BC", Offset = "0x138F7BC", VA = "0x138F7BC")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x138E9F4", Offset = "0x138E9F4", VA = "0x138E9F4")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x138EE18", Offset = "0x138EE18", VA = "0x138EE18")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x138F894", Offset = "0x138F894", VA = "0x138F894")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x20003E8")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x1700035A")]
	public Vector3 Position
	{
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x138F828", Offset = "0x138F828", VA = "0x138F828")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700035B")]
	public Vector3 Forward
	{
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x138F84C", Offset = "0x138F84C", VA = "0x138F84C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700035C")]
	public Vector3 Up
	{
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x138F870", Offset = "0x138F870", VA = "0x138F870")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x138F9EC", Offset = "0x138F9EC", VA = "0x138F9EC")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x20003E9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6684", Offset = "0x8D6684")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6684", Offset = "0x8D6684")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6684", Offset = "0x8D6684")]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	public class BaseListenerList
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x1700035E")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xFF591C", Offset = "0xFF591C", VA = "0xFF591C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xFF5924", Offset = "0xFF5924", VA = "0xFF5924", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xFF5A34", Offset = "0xFF5A34", VA = "0xFF5A34", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xFF5B44", Offset = "0xFF5B44", VA = "0xFF5B44")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xFF5B98", Offset = "0xFF5B98", VA = "0xFF5B98")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x20003EB")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xFF5C68", Offset = "0xFF5C68", VA = "0xFF5C68", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xFF5D38", Offset = "0xFF5D38", VA = "0xFF5D38", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xFF5E08", Offset = "0xFF5E08", VA = "0xFF5E08")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700035D")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x1391874", Offset = "0x1391874", VA = "0x1391874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x13918D8", Offset = "0x13918D8", VA = "0x13918D8")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x1391964", Offset = "0x1391964", VA = "0x1391964")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x13919F0", Offset = "0x13919F0", VA = "0x13919F0")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x1391B44", Offset = "0x1391B44", VA = "0x1391B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x1391CF4", Offset = "0x1391CF4", VA = "0x1391CF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x1391DC8", Offset = "0x1391DC8", VA = "0x1391DC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x1391E9C", Offset = "0x1391E9C", VA = "0x1391E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x1392014", Offset = "0x1392014", VA = "0x1392014")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x139201C", Offset = "0x139201C", VA = "0x139201C")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x13920E8", Offset = "0x13920E8", VA = "0x13920E8")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x20003EC")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D672C", Offset = "0x8D672C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D672C", Offset = "0x8D672C")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Bank data;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E0818", Offset = "0x8E0818")]
	private string bankNameInternal;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E0874", Offset = "0x8E0874")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x1700035F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6B2C", Offset = "0x8F6B2C")]
	public string bankName
	{
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1393DF4", Offset = "0x1393DF4", VA = "0x1393DF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000360")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6B64", Offset = "0x8F6B64")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1393E60", Offset = "0x1393E60", VA = "0x1393E60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x1393B28", Offset = "0x1393B28", VA = "0x1393B28", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x1393C34", Offset = "0x1393C34", VA = "0x1393C34", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x1393CBC", Offset = "0x1393CBC", VA = "0x1393CBC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x1393C18", Offset = "0x1393C18", VA = "0x1393C18")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x1393D04", Offset = "0x1393D04", VA = "0x1393D04", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0x1393F20", Offset = "0x1393F20", VA = "0x1393F20")]
	public AkBank()
	{
	}
}
[Token(Token = "0x20003ED")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D678C", Offset = "0x8D678C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D678C", Offset = "0x8D678C")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x139E084", Offset = "0x139E084", VA = "0x139E084")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x139E0EC", Offset = "0x139E0EC", VA = "0x139E0EC", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x139E2E8", Offset = "0x139E2E8", VA = "0x139E2E8", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0x139E440", Offset = "0x139E440", VA = "0x139E440")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x20003EE")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6810", Offset = "0x8D6810")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6810", Offset = "0x8D6810")]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x20003EF")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xFF7EC4", Offset = "0xFF7EC4", VA = "0xFF7EC4", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xFF7F60", Offset = "0xFF7F60", VA = "0xFF7F60")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x20003F0")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xFF7F68", Offset = "0xFF7F68", VA = "0xFF7F68", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xFF7FC4", Offset = "0xFF7FC4", VA = "0xFF7FC4")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40015B9")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08D0", Offset = "0x8E08D0")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E08E0", Offset = "0x8E08E0")]
	private int auxBusIdInternal;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E093C", Offset = "0x8E093C")]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x17000361")]
	public Collider Collider
	{
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x139F068", Offset = "0x139F068", VA = "0x139F068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF028", Offset = "0x8EF028")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x139F070", Offset = "0x139F070", VA = "0x139F070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF038", Offset = "0x8EF038")]
		private set
		{
		}
	}

	[Token(Token = "0x17000362")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6B9C", Offset = "0x8F6B9C")]
	public int m_auxBusID
	{
		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x139F0D4", Offset = "0x139F0D4", VA = "0x139F0D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000363")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6BD4", Offset = "0x8F6BD4")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x139F0E8", Offset = "0x139F0E8", VA = "0x139F0E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0x139F078", Offset = "0x139F078", VA = "0x139F078")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0x139F1A8", Offset = "0x139F1A8", VA = "0x139F1A8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EF048", Offset = "0x8EF048")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0x139F1C4", Offset = "0x139F1C4", VA = "0x139F1C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EF080", Offset = "0x8EF080")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0x139F1CC", Offset = "0x139F1CC", VA = "0x139F1CC")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x20003F1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D68A4", Offset = "0x8D68A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D68A4", Offset = "0x8D68A4")]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40015C3")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x17000364")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x139F2F0", Offset = "0x139F2F0", VA = "0x139F2F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000365")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x139F3A0", Offset = "0x139F3A0", VA = "0x139F3A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0x139F540", Offset = "0x139F540", VA = "0x139F540")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x139F6E0", Offset = "0x139F6E0", VA = "0x139F6E0")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x20003F2")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x139F760", Offset = "0x139F760", VA = "0x139F760")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20003F3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6938", Offset = "0x8D6938")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6938", Offset = "0x8D6938")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x20003F4")]
	public class CallbackData
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xFF7FCC", Offset = "0xFF7FCC", VA = "0xFF7FCC")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xFF808C", Offset = "0xFF808C", VA = "0xFF808C")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AK.Wwise.Event data;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E0998", Offset = "0x8E0998")]
	[HideInInspector]
	private int eventIdInternal;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E09F4", Offset = "0x8E09F4")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E0A50", Offset = "0x8E0A50")]
	[SerializeField]
	[HideInInspector]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x17000366")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x139F758", Offset = "0x139F758", VA = "0x139F758", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000367")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6C0C", Offset = "0x8F6C0C")]
	public int eventID
	{
		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x139F868", Offset = "0x139F868", VA = "0x139F868")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000368")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6C44", Offset = "0x8F6C44")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x139F87C", Offset = "0x139F87C", VA = "0x139F87C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000369")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6C7C", Offset = "0x8F6C7C")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x139F93C", Offset = "0x139F93C", VA = "0x139F93C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x138ED7C", Offset = "0x138ED7C", VA = "0x138ED7C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x139F768", Offset = "0x139F768", VA = "0x139F768")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0x138F50C", Offset = "0x138F50C", VA = "0x138F50C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0x139F834", Offset = "0x139F834", VA = "0x139F834")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x139F83C", Offset = "0x139F83C", VA = "0x139F83C")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x138F8A0", Offset = "0x138F8A0", VA = "0x138F8A0")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x20003F5")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0x139F944", Offset = "0x139F944", VA = "0x139F944")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20003F6")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D69BC", Offset = "0x8D69BC")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x1700036A")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x139FB84", Offset = "0x139FB84", VA = "0x139FB84", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0x139FB8C", Offset = "0x139FB8C", VA = "0x139FB8C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0x139FE50", Offset = "0x139FE50", VA = "0x139FE50")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x20003F7")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20003F8")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4001601")]
		None = 0,
		[Token(Token = "0x4001602")]
		Playback = 1,
		[Token(Token = "0x4001603")]
		Retrigger = 2,
		[Token(Token = "0x4001604")]
		DelayedStop = 4,
		[Token(Token = "0x4001605")]
		Seek = 8,
		[Token(Token = "0x4001606")]
		FadeIn = 0x10,
		[Token(Token = "0x4001607")]
		FadeOut = 0x20
	}

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x40015EE")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x40015F0")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x40015FF")]
	private const float alph = 0.05f;

	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0x139FED8", Offset = "0x139FED8", VA = "0x139FED8")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0x139FF9C", Offset = "0x139FF9C", VA = "0x139FF9C")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x139FFC0", Offset = "0x139FFC0", VA = "0x139FFC0", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x13A0394", Offset = "0x13A0394", VA = "0x13A0394", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x13A0564", Offset = "0x13A0564", VA = "0x13A0564", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x13A067C", Offset = "0x13A067C", VA = "0x13A067C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x13A00FC", Offset = "0x13A00FC", VA = "0x13A00FC")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x13A0258", Offset = "0x13A0258", VA = "0x13A0258")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x13A02F4", Offset = "0x13A02F4", VA = "0x13A02F4")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x13A0A14", Offset = "0x13A0A14", VA = "0x13A0A14")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x13A0B24", Offset = "0x13A0B24", VA = "0x13A0B24")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x13A0644", Offset = "0x13A0644", VA = "0x13A0644")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x13A0C04", Offset = "0x13A0C04", VA = "0x13A0C04")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x13A0878", Offset = "0x13A0878", VA = "0x13A0878")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x13A097C", Offset = "0x13A097C", VA = "0x13A097C")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0x13A0480", Offset = "0x13A0480", VA = "0x13A0480")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x13A08A8", Offset = "0x13A08A8", VA = "0x13A08A8")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x13A0CBC", Offset = "0x13A0CBC", VA = "0x13A0CBC")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20003F9")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8D6A04", Offset = "0x8D6A04")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8D6A04", Offset = "0x8D6A04")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D6A04", Offset = "0x8D6A04")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8D6A04", Offset = "0x8D6A04")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x13A0CD0", Offset = "0x13A0CD0", VA = "0x13A0CD0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x13A10E8", Offset = "0x13A10E8", VA = "0x13A10E8")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x20003FA")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6AE4", Offset = "0x8D6AE4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6AE4", Offset = "0x8D6AE4")]
[DisallowMultipleComponent]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4001611")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private int listenerMask;

	[Token(Token = "0x1700036B")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x139E2B0", Offset = "0x139E2B0", VA = "0x139E2B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036C")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x139E2CC", Offset = "0x139E2CC", VA = "0x139E2CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x1391FD4", Offset = "0x1391FD4", VA = "0x1391FD4")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0x1391FF4", Offset = "0x1391FF4", VA = "0x1391FF4")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x1391C38", Offset = "0x1391C38", VA = "0x1391C38")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x13A1FE0", Offset = "0x13A1FE0", VA = "0x13A1FE0")]
	internal void SetPosition(bool force = false)
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0x13A21B8", Offset = "0x13A21B8", VA = "0x13A21B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x13A2850", Offset = "0x13A2850", VA = "0x13A2850")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x13A2854", Offset = "0x13A2854", VA = "0x13A2854")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x13A2868", Offset = "0x13A2868", VA = "0x13A2868")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x13A29DC", Offset = "0x13A29DC", VA = "0x13A29DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x13A2A60", Offset = "0x13A2A60", VA = "0x13A2A60", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x13A2AFC", Offset = "0x13A2AFC", VA = "0x13A2AFC", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x13A2B20", Offset = "0x13A2B20", VA = "0x13A2B20", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x13A2B44", Offset = "0x13A2B44", VA = "0x13A2B44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x13A2B5C", Offset = "0x13A2B5C", VA = "0x13A2B5C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x13A2DBC", Offset = "0x13A2DBC", VA = "0x13A2DBC")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x20003FB")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x13A2EC0", Offset = "0x13A2EC0", VA = "0x13A2EC0")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x13A31C8", Offset = "0x13A31C8", VA = "0x13A31C8")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x13A2614", Offset = "0x13A2614", VA = "0x13A2614")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x13A32FC", Offset = "0x13A32FC", VA = "0x13A32FC")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x13A3480", Offset = "0x13A3480", VA = "0x13A3480")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x13A24BC", Offset = "0x13A24BC", VA = "0x13A24BC")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x13A3504", Offset = "0x13A3504", VA = "0x13A3504")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x13A2B7C", Offset = "0x13A2B7C", VA = "0x13A2B7C")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x13A2374", Offset = "0x13A2374", VA = "0x13A2374")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20003FC")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x13A3648", Offset = "0x13A3648", VA = "0x13A3648")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x13A2738", Offset = "0x13A2738", VA = "0x13A2738")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x13A3834", Offset = "0x13A3834", VA = "0x13A3834", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x13A3920", Offset = "0x13A3920", VA = "0x13A3920", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x13A2E34", Offset = "0x13A2E34", VA = "0x13A2E34")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x20003FD")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x13A3A0C", Offset = "0x13A3A0C", VA = "0x13A3A0C")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x20003FE")]
public class AkGameObjPositionData
{
	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x13A236C", Offset = "0x13A236C", VA = "0x13A236C")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20003FF")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x13A3A14", Offset = "0x13A3A14", VA = "0x13A3A14")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x2000400")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6B54", Offset = "0x8D6B54")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6B54", Offset = "0x8D6B54")]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0x13A5D30", Offset = "0x13A5D30", VA = "0x13A5D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x13A5E48", Offset = "0x13A5E48", VA = "0x13A5E48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0x13A5F40", Offset = "0x13A5F40", VA = "0x13A5F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x13A5FF0", Offset = "0x13A5FF0", VA = "0x13A5FF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x13A60A8", Offset = "0x13A60A8", VA = "0x13A60A8")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x13A616C", Offset = "0x13A616C", VA = "0x13A616C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x13A6230", Offset = "0x13A6230", VA = "0x13A6230")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x13A62E0", Offset = "0x13A62E0", VA = "0x13A62E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x13A6390", Offset = "0x13A6390", VA = "0x13A6390")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x2000401")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BC4", Offset = "0x8D6BC4")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x1700036D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xFFA71C", Offset = "0xFFA71C", VA = "0xFFA71C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xFFA764", Offset = "0xFFA764", VA = "0xFFA764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xFFA500", Offset = "0xFFA500", VA = "0xFFA500")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xFFA52C", Offset = "0xFFA52C", VA = "0xFFA52C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xFFA530", Offset = "0xFFA530", VA = "0xFFA530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xFFA724", Offset = "0xFFA724", VA = "0xFFA724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001626")]
	private const int WaitMs = 50;

	[Token(Token = "0x4001627")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4001628")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0xE23CD8", Offset = "0xE23CD8", VA = "0xE23CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0xE23E14", Offset = "0xE23E14", VA = "0xE23E14")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0xE23CEC", Offset = "0xE23CEC", VA = "0xE23CEC")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0xE23FC4", Offset = "0xE23FC4", VA = "0xE23FC4")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0xE241F8", Offset = "0xE241F8", VA = "0xE241F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF0B8", Offset = "0x8EF0B8")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0xE23EF8", Offset = "0xE23EF8", VA = "0xE23EF8")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0xE24270", Offset = "0xE24270", VA = "0xE24270")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0xE24398", Offset = "0xE24398", VA = "0xE24398")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x2000403")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000404")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xFFA76C", Offset = "0xFFA76C", VA = "0xFFA76C")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xFFA7FC", Offset = "0xFFA7FC", VA = "0xFFA7FC")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0BBC", Offset = "0x8E0BBC")]
	public float fadeTime;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0BF4", Offset = "0x8E0BF4")]
	public LayerMask LayerMask;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0C2C", Offset = "0x8E0C2C")]
	public float maxDistance;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0C64", Offset = "0x8E0C64")]
	public float refreshInterval;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0xE28338", Offset = "0xE28338", VA = "0xE28338")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001D0B")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0xE28378", Offset = "0xE28378", VA = "0xE28378")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0xE28694", Offset = "0xE28694", VA = "0xE28694")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6001D0E")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0xE28970", Offset = "0xE28970", VA = "0xE28970")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0xE28B14", Offset = "0xE28B14", VA = "0xE28B14")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x2000405")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D6BD4", Offset = "0x8D6BD4")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C9C", Offset = "0x8E0C9C")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CAC", Offset = "0x8E0CAC")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x1700036F")]
	public RTPC Parameter
	{
		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xE33A88", Offset = "0xE33A88", VA = "0xE33A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF168", Offset = "0x8EF168")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xE33A90", Offset = "0xE33A90", VA = "0xE33A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF178", Offset = "0x8EF178")]
		set
		{
		}
	}

	[Token(Token = "0x17000370")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xE33A98", Offset = "0xE33A98", VA = "0xE33A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF188", Offset = "0x8EF188")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xE33AA0", Offset = "0xE33AA0", VA = "0xE33AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF198", Offset = "0x8EF198")]
		set
		{
		}
	}

	[Token(Token = "0x17000371")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xE33AA8", Offset = "0xE33AA8", VA = "0xE33AA8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0xE33AB0", Offset = "0xE33AB0", VA = "0xE33AB0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0xE33C4C", Offset = "0xE33C4C", VA = "0xE33C4C")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000406")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D6C0C", Offset = "0x8D6C0C")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CCC", Offset = "0x8E0CCC")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CDC", Offset = "0x8E0CDC")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CEC", Offset = "0x8E0CEC")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CFC", Offset = "0x8E0CFC")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x17000372")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xE33CD0", Offset = "0xE33CD0", VA = "0xE33CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1B8", Offset = "0x8EF1B8")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xE33CC4", Offset = "0xE33CC4", VA = "0xE33CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1A8", Offset = "0x8EF1A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000373")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xE33CE4", Offset = "0xE33CE4", VA = "0xE33CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1D8", Offset = "0x8EF1D8")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xE33CD8", Offset = "0xE33CD8", VA = "0xE33CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1C8", Offset = "0x8EF1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000374")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xE33CF4", Offset = "0xE33CF4", VA = "0xE33CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1F8", Offset = "0x8EF1F8")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xE33CEC", Offset = "0xE33CEC", VA = "0xE33CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF1E8", Offset = "0x8EF1E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000375")]
	public RTPC parameter
	{
		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xE33D04", Offset = "0xE33D04", VA = "0xE33D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF218", Offset = "0x8EF218")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xE33CFC", Offset = "0xE33CFC", VA = "0xE33CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EF208", Offset = "0x8EF208")]
		set
		{
		}
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0xE33D0C", Offset = "0xE33D0C", VA = "0xE33D0C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001D23")]
	[Address(RVA = "0xE33CBC", Offset = "0xE33CBC", VA = "0xE33CBC")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000407")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D6C44", Offset = "0x8D6C44")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8D6C44", Offset = "0x8D6C44")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8D6C44", Offset = "0x8D6C44")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8D6C44", Offset = "0x8D6C44")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6001D24")]
	[Address(RVA = "0xE33E94", Offset = "0xE33E94", VA = "0xE33E94", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001D25")]
	[Address(RVA = "0xE33F64", Offset = "0xE33F64", VA = "0xE33F64")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6001D26")]
	[Address(RVA = "0xE342B0", Offset = "0xE342B0", VA = "0xE342B0")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001D27")]
	[Address(RVA = "0xE345D0", Offset = "0xE345D0", VA = "0xE345D0")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x2000408")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6D20", Offset = "0x8D6D20")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6D20", Offset = "0x8D6D20")]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x2000409")]
	public class PriorityList
	{
		[Token(Token = "0x200040A")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xEBC96C", Offset = "0xEBC96C", VA = "0xEBC96C", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xEBCA18", Offset = "0xEBCA18", VA = "0xEBCA18")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xFFA804", Offset = "0xFFA804", VA = "0xFFA804")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xFFA8D8", Offset = "0xFFA8D8", VA = "0xFFA8D8")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xFFA944", Offset = "0xFFA944", VA = "0xFFA944")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xFFAAC0", Offset = "0xFFAAC0", VA = "0xFFAAC0")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xFFAB24", Offset = "0xFFAB24", VA = "0xFFAB24")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xFFA9D0", Offset = "0xFFA9D0", VA = "0xFFA9D0")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xFFAB40", Offset = "0xFFAB40", VA = "0xFFAB40")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0D0C", Offset = "0x8E0D0C")]
	public int priority;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0D44", Offset = "0x8E0D44")]
	public float reverbLevel;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0D5C", Offset = "0x8E0D5C")]
	public float wallOcclusion;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AK.Wwise.Event roomToneEvent;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0D74", Offset = "0x8E0D74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0D74", Offset = "0x8E0D74")]
	public float roomToneAuxSend;

	[Token(Token = "0x17000376")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xE364BC", Offset = "0xE364BC", VA = "0xE364BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001D29")]
	[Address(RVA = "0xE36688", Offset = "0xE36688", VA = "0xE36688")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0xE36774", Offset = "0xE36774", VA = "0xE36774")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0xE37350", Offset = "0xE37350", VA = "0xE37350", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0xE37388", Offset = "0xE37388", VA = "0xE37388")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0xE374CC", Offset = "0xE374CC", VA = "0xE374CC")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0xE375D4", Offset = "0xE375D4", VA = "0xE375D4")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0xE376DC", Offset = "0xE376DC", VA = "0xE376DC")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x200040B")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6DB4", Offset = "0x8D6DB4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6DB4", Offset = "0x8D6DB4")]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x200040C")]
	public enum State
	{
		[Token(Token = "0x400165C")]
		Closed,
		[Token(Token = "0x400165D")]
		Open
	}

	[Token(Token = "0x4001654")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x17000377")]
	public bool portalActive
	{
		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xE386B8", Offset = "0xE386B8", VA = "0xE386B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xE386C0", Offset = "0xE386C0", VA = "0xE386C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000378")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xE38818", Offset = "0xE38818", VA = "0xE38818")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000379")]
	private ulong backRoomID
	{
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xE38978", Offset = "0xE38978", VA = "0xE38978")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700037A")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xE388B0", Offset = "0xE388B0", VA = "0xE388B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037B")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xE38A10", Offset = "0xE38A10", VA = "0xE38A10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037C")]
	public bool IsValid
	{
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xE38E2C", Offset = "0xE38E2C", VA = "0xE38E2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0xE38A44", Offset = "0xE38A44", VA = "0xE38A44")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0xE38B54", Offset = "0xE38B54", VA = "0xE38B54")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0xE38B60", Offset = "0xE38B60", VA = "0xE38B60")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0xE38B6C", Offset = "0xE38B6C", VA = "0xE38B6C")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6001D45")]
	[Address(RVA = "0xE38BA8", Offset = "0xE38BA8", VA = "0xE38BA8")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6001D47")]
	[Address(RVA = "0xE38D20", Offset = "0xE38D20", VA = "0xE38D20")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D48")]
	[Address(RVA = "0xE38E60", Offset = "0xE38E60", VA = "0xE38E60", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D49")]
	[Address(RVA = "0xE39CF4", Offset = "0xE39CF4", VA = "0xE39CF4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001D4A")]
	[Address(RVA = "0xE39DF4", Offset = "0xE39DF4", VA = "0xE39DF4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D4B")]
	[Address(RVA = "0xE39CEC", Offset = "0xE39CEC", VA = "0xE39CEC")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0xE39E0C", Offset = "0xE39E0C", VA = "0xE39E0C", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0xE388E8", Offset = "0xE388E8", VA = "0xE388E8")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0xE39DFC", Offset = "0xE39DFC", VA = "0xE39DFC")]
	public void Open()
	{
	}

	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0xE39E04", Offset = "0xE39E04", VA = "0xE39E04")]
	public void Close()
	{
	}

	[Token(Token = "0x6001D50")]
	[Address(RVA = "0xE3A4F4", Offset = "0xE3A4F4", VA = "0xE3A4F4")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6001D51")]
	[Address(RVA = "0xE3A700", Offset = "0xE3A700", VA = "0xE3A700")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6001D52")]
	[Address(RVA = "0xE394A4", Offset = "0xE394A4", VA = "0xE394A4")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6001D53")]
	[Address(RVA = "0xE3A8FC", Offset = "0xE3A8FC", VA = "0xE3A8FC")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x200040D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6E48", Offset = "0x8D6E48")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6E48", Offset = "0x8D6E48")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6001D54")]
	[Address(RVA = "0xE3ACA0", Offset = "0xE3ACA0", VA = "0xE3ACA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D55")]
	[Address(RVA = "0xE3AD20", Offset = "0xE3AD20", VA = "0xE3AD20", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6001D56")]
	[Address(RVA = "0xE3ADAC", Offset = "0xE3ADAC", VA = "0xE3ADAC", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001D57")]
	[Address(RVA = "0xE3AF08", Offset = "0xE3AF08", VA = "0xE3AF08")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x200040E")]
public class AkSoundEngineController
{
	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x1700037D")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xE57948", Offset = "0xE57948", VA = "0xE57948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D59")]
	[Address(RVA = "0xE579CC", Offset = "0xE579CC", VA = "0xE579CC")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0xE579D4", Offset = "0xE579D4", VA = "0xE579D4", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0xE57A80", Offset = "0xE57A80", VA = "0xE57A80")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0xE57AC4", Offset = "0xE57AC4", VA = "0xE57AC4")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0xE57B60", Offset = "0xE57B60", VA = "0xE57B60")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0xE57C50", Offset = "0xE57C50", VA = "0xE57C50")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0xE57E44", Offset = "0xE57E44", VA = "0xE57E44")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0xE57E48", Offset = "0xE57E48", VA = "0xE57E48")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6001D61")]
	[Address(RVA = "0xE57EA4", Offset = "0xE57EA4", VA = "0xE57EA4")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001D62")]
	[Address(RVA = "0xE57F88", Offset = "0xE57F88", VA = "0xE57F88")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001D63")]
	[Address(RVA = "0xE57EB4", Offset = "0xE57EB4", VA = "0xE57EB4")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x200040F")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6001D64")]
	[Address(RVA = "0xE6945C", Offset = "0xE6945C", VA = "0xE6945C")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6001D65")]
	[Address(RVA = "0xE375A0", Offset = "0xE375A0", VA = "0xE375A0")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D66")]
	[Address(RVA = "0xE376A8", Offset = "0xE376A8", VA = "0xE376A8")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001D67")]
	[Address(RVA = "0xE694EC", Offset = "0xE694EC", VA = "0xE694EC")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0xE69624", Offset = "0xE69624", VA = "0xE69624")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000410")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6ECC", Offset = "0x8D6ECC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6ECC", Offset = "0x8D6ECC")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E0DD8", Offset = "0x8E0DD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0DD8", Offset = "0x8E0DD8")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0E38", Offset = "0x8E0E38")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0E70", Offset = "0x8E0E70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0E70", Offset = "0x8E0E70")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0EC4", Offset = "0x8E0EC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0EC4", Offset = "0x8E0EC4")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E0F18", Offset = "0x8E0F18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E0F18", Offset = "0x8E0F18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0F18", Offset = "0x8E0F18")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E0F90", Offset = "0x8E0F90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0F90", Offset = "0x8E0F90")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E0FF0", Offset = "0x8E0FF0")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1028", Offset = "0x8E1028")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6001D69")]
	[Address(RVA = "0xE69694", Offset = "0xE69694", VA = "0xE69694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0xE69894", Offset = "0xE69894", VA = "0xE69894")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0xE69908", Offset = "0xE69908", VA = "0xE69908")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000411")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D6F50", Offset = "0x8D6F50")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6F50", Offset = "0x8D6F50")]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000412")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000380")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xFFB204", Offset = "0xFFB204", VA = "0xFFB204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xFFB20C", Offset = "0xFFB20C", VA = "0xFFB20C")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xFFB610", Offset = "0xFFB610", VA = "0xFFB610")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xFFB2F4", Offset = "0xFFB2F4", VA = "0xFFB2F4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xFFB6F8", Offset = "0xFFB6F8", VA = "0xFFB6F8")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x1700037E")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xE365A8", Offset = "0xE365A8", VA = "0xE365A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037F")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xE6A24C", Offset = "0xE6A24C", VA = "0xE6A24C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0xE6A2B0", Offset = "0xE6A2B0", VA = "0xE6A2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0xE6A30C", Offset = "0xE6A30C", VA = "0xE6A30C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0xE6A384", Offset = "0xE6A384", VA = "0xE6A384")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D71")]
	[Address(RVA = "0xE6A3FC", Offset = "0xE6A3FC", VA = "0xE6A3FC")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000413")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D6FE4", Offset = "0x8D6FE4")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D6FE4", Offset = "0x8D6FE4")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E1060", Offset = "0x8E1060")]
	private int valueIdInternal;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E10BC", Offset = "0x8E10BC")]
	private int groupIdInternal;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E1118", Offset = "0x8E1118")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E1174", Offset = "0x8E1174")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000381")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xE6A478", Offset = "0xE6A478", VA = "0xE6A478", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000382")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6CB4", Offset = "0x8F6CB4")]
	public int valueID
	{
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE6A49C", Offset = "0xE6A49C", VA = "0xE6A49C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000383")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6CEC", Offset = "0x8F6CEC")]
	public int groupID
	{
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE6A4B0", Offset = "0xE6A4B0", VA = "0xE6A4B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000384")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6D24", Offset = "0x8F6D24")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xE6A4C4", Offset = "0xE6A4C4", VA = "0xE6A4C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000385")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6D5C", Offset = "0x8F6D5C")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE6A584", Offset = "0xE6A584", VA = "0xE6A584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0xE6A480", Offset = "0xE6A480", VA = "0xE6A480", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0xE6A640", Offset = "0xE6A640", VA = "0xE6A640")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000414")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7034", Offset = "0x8D7034")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7034", Offset = "0x8D7034")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E11D0", Offset = "0x8E11D0")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1208", Offset = "0x8E1208")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1240", Offset = "0x8E1240")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E1278", Offset = "0x8E1278")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0xE6AA60", Offset = "0xE6AA60", VA = "0xE6AA60")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001D80")]
	[Address(RVA = "0xE6AA84", Offset = "0xE6AA84", VA = "0xE6AA84")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6001D81")]
	[Address(RVA = "0xE6BAEC", Offset = "0xE6BAEC", VA = "0xE6BAEC")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6001D82")]
	[Address(RVA = "0xE6BBB4", Offset = "0xE6BBB4", VA = "0xE6BBB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D83")]
	[Address(RVA = "0xE6BC10", Offset = "0xE6BC10", VA = "0xE6BC10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D84")]
	[Address(RVA = "0xE6BCEC", Offset = "0xE6BCEC", VA = "0xE6BCEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D85")]
	[Address(RVA = "0xE6BCF4", Offset = "0xE6BCF4", VA = "0xE6BCF4")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x2000415")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D70D8", Offset = "0x8D70D8")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D70D8", Offset = "0x8D70D8")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E12B0", Offset = "0x8E12B0")]
	private int valueIdInternal;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E130C", Offset = "0x8E130C")]
	[HideInInspector]
	[SerializeField]
	private int groupIdInternal;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E1368", Offset = "0x8E1368")]
	[SerializeField]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E13C4", Offset = "0x8E13C4")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000386")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xE6BD64", Offset = "0xE6BD64", VA = "0xE6BD64", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000387")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6D94", Offset = "0x8F6D94")]
	public int valueID
	{
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xE6BE18", Offset = "0xE6BE18", VA = "0xE6BE18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000388")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6DCC", Offset = "0x8F6DCC")]
	public int groupID
	{
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xE6BE2C", Offset = "0xE6BE2C", VA = "0xE6BE2C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000389")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6E04", Offset = "0x8F6E04")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xE6BE40", Offset = "0xE6BE40", VA = "0xE6BE40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700038A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6E3C", Offset = "0x8F6E3C")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xE6BF00", Offset = "0xE6BF00", VA = "0xE6BF00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001D87")]
	[Address(RVA = "0xE6BD6C", Offset = "0xE6BD6C", VA = "0xE6BD6C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0xE6BFBC", Offset = "0xE6BFBC", VA = "0xE6BFBC")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x2000416")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0xE6C428", Offset = "0xE6C428", VA = "0xE6C428")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x2000417")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x2000418")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0xE6F9F4", Offset = "0xE6F9F4", VA = "0xE6F9F4")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0xE6FD3C", Offset = "0xE6FD3C", VA = "0xE6FD3C")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x2000419")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0xE6FD44", Offset = "0xE6FD44", VA = "0xE6FD44")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0xE6FE50", Offset = "0xE6FE50", VA = "0xE6FE50")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0xE6FF5C", Offset = "0xE6FF5C", VA = "0xE6FF5C")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200041A")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0xE6FF64", Offset = "0xE6FF64", VA = "0xE6FF64")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6001D98")]
	[Address(RVA = "0xE70070", Offset = "0xE70070", VA = "0xE70070")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200041B")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6001D99")]
	[Address(RVA = "0xE70078", Offset = "0xE70078", VA = "0xE70078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D9A")]
	[Address(RVA = "0xE70090", Offset = "0xE70090", VA = "0xE70090")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x200041C")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6001D9B")]
	[Address(RVA = "0xE70098", Offset = "0xE70098", VA = "0xE70098")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D9C")]
	[Address(RVA = "0xE700B0", Offset = "0xE700B0", VA = "0xE700B0")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x200041D")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001D9D")]
	[Address(RVA = "0xE700B8", Offset = "0xE700B8", VA = "0xE700B8")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001D9E")]
	[Address(RVA = "0xE701C4", Offset = "0xE701C4", VA = "0xE701C4")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x200041E")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001D9F")]
	[Address(RVA = "0xE701CC", Offset = "0xE701CC", VA = "0xE701CC")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0xE702D8", Offset = "0xE702D8", VA = "0xE702D8")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x200041F")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x4001681")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4001682")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4001683")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001684")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6001DA1")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0xE39C14", Offset = "0xE39C14", VA = "0xE39C14", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0xE39D74", Offset = "0xE39D74", VA = "0xE39D74", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0xE39F1C", Offset = "0xE39F1C", VA = "0xE39F1C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0xE702E0", Offset = "0xE702E0", VA = "0xE702E0")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001DA6")]
	[Address(RVA = "0xE39730", Offset = "0xE39730", VA = "0xE39730")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0xE39F2C", Offset = "0xE39F2C", VA = "0xE39F2C")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0xE377C0", Offset = "0xE377C0", VA = "0xE377C0")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000420")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700038B")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6001DAA")]
		get;
	}

	[Token(Token = "0x6001DAB")]
	[Address(RVA = "0x139D3E8", Offset = "0x139D3E8", VA = "0x139D3E8", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001DAC")]
	[Address(RVA = "0x139D3F0", Offset = "0x139D3F0", VA = "0x139D3F0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001DAD")]
	[Address(RVA = "0x139D3F8", Offset = "0x139D3F8", VA = "0x139D3F8", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001DAE")]
	[Address(RVA = "0x139D400", Offset = "0x139D400", VA = "0x139D400")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000421")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0xE70418", Offset = "0xE70418", VA = "0xE70418")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000422")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0xE70420", Offset = "0xE70420", VA = "0xE70420")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000423")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0xE70428", Offset = "0xE70428", VA = "0xE70428")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000424")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0xE70430", Offset = "0xE70430", VA = "0xE70430")]
	public AkTriggerMouseUp()
	{
	}
}
[Token(Token = "0x2000425")]
public class AOTStubRequiredAttribute : Attribute
{
	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0x138BAB4", Offset = "0x138BAB4", VA = "0x138BAB4")]
	public AOTStubRequiredAttribute()
	{
	}
}
[Token(Token = "0x2000426")]
public class AnimEventSpawnVFX : MonoBehaviour
{
	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_spawnAt;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_localOffset;

	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0x149A934", Offset = "0x149A934", VA = "0x149A934")]
	public void SpawnVFX(object obj)
	{
	}

	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0x149AA18", Offset = "0x149AA18", VA = "0x149AA18")]
	public void SpawnVFXAsChild(object obj)
	{
	}

	[Token(Token = "0x6001DB6")]
	[Address(RVA = "0x149AAFC", Offset = "0x149AAFC", VA = "0x149AAFC")]
	public AnimEventSpawnVFX()
	{
	}
}
[Token(Token = "0x2000427")]
[ExecuteAlways]
public class AxisGizmo : ImmediateModeShapeDrawer
{
	[Token(Token = "0x2000428")]
	public enum Plane
	{
		[Token(Token = "0x4001693")]
		No,
		[Token(Token = "0x4001694")]
		XZ,
		[Token(Token = "0x4001695")]
		XY,
		[Token(Token = "0x4001696")]
		ZY
	}

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_scale;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_customColour;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E1420", Offset = "0x8E1420")]
	public Color m_colour;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Plane m_plane;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 m_planeOffset;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_useShapes;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_showInBuild;

	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0x14A76E8", Offset = "0x14A76E8", VA = "0x14A76E8", Slot = "4")]
	public override void DrawShapes(Camera cam)
	{
	}

	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0x14A8558", Offset = "0x14A8558", VA = "0x14A8558")]
	public AxisGizmo()
	{
	}
}
[Token(Token = "0x2000429")]
public class BugReporter : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7158", Offset = "0x8D7158")]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BugReporter <>4__this;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x10013F4", Offset = "0x10013F4", VA = "0x10013F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x100143C", Offset = "0x100143C", VA = "0x100143C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x10011F8", Offset = "0x10011F8", VA = "0x10011F8")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1001224", Offset = "0x1001224", VA = "0x1001224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1001228", Offset = "0x1001228", VA = "0x1001228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x10013FC", Offset = "0x10013FC", VA = "0x10013FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7168", Offset = "0x8D7168")]
	private sealed class <RefreshPhotoCR>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fn;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BugReporter <>4__this;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x10011A8", Offset = "0x10011A8", VA = "0x10011A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x10011F0", Offset = "0x10011F0", VA = "0x10011F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1000E54", Offset = "0x1000E54", VA = "0x1000E54")]
		[DebuggerHidden]
		public <RefreshPhotoCR>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1000E80", Offset = "0x1000E80", VA = "0x1000E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1000F58", Offset = "0x1000F58", VA = "0x1000F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1000E9C", Offset = "0x1000E9C", VA = "0x1000E9C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x10011B0", Offset = "0x10011B0", VA = "0x10011B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7178", Offset = "0x8D7178")]
	private sealed class <>c
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__43_0;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<char, char> <>9__47_0;

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x1000DFC", Offset = "0x1000DFC", VA = "0x1000DFC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1000E04", Offset = "0x1000E04", VA = "0x1000E04")]
		internal bool <SendBugAsEmail>b__43_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1000E0C", Offset = "0x1000E0C", VA = "0x1000E0C")]
		internal char <Rot13>b__47_0(char s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_titleSource;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_bodySource;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BugReporter ms_instance;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_attachSaveFile;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_attachSaveIndicator;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_attachBugReportBundle;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_attachBugReportBundleButton;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_attachBugReportBundleIndicator;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_attachLog;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_attachLogButton;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_attachLogIndicator;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_attachPhoto;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_attachPhotoButton;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_attachPhotoIndicator;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_newPhotoButton;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D m_latestPhoto;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string m_latestPhotoPath;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material m_photoMat;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer m_photoRenderer;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_defaultBodyText;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_lastBodyText;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_tempLogFilePath;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text m_submitButtonText;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string PlayerName;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_testEmail;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_testPassword;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string to;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string m_senderEmail;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string m_senderPass13;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string subject;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8E1458", Offset = "0x8E1458")]
	public string body;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_sending;

	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0x104D854", Offset = "0x104D854", VA = "0x104D854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF228", Offset = "0x8EF228")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001DBA")]
	[Address(RVA = "0x104D8CC", Offset = "0x104D8CC", VA = "0x104D8CC")]
	public void ToggleAttachSave()
	{
	}

	[Token(Token = "0x6001DBB")]
	[Address(RVA = "0x104D900", Offset = "0x104D900", VA = "0x104D900")]
	public void ToggleAttachBugReport()
	{
	}

	[Token(Token = "0x6001DBC")]
	[Address(RVA = "0x104D934", Offset = "0x104D934", VA = "0x104D934")]
	public void ToggleAttachLog()
	{
	}

	[Token(Token = "0x6001DBD")]
	[Address(RVA = "0x104D968", Offset = "0x104D968", VA = "0x104D968")]
	public void ToggleAttachPhoto()
	{
	}

	[Token(Token = "0x6001DBE")]
	[Address(RVA = "0x104D99C", Offset = "0x104D99C", VA = "0x104D99C")]
	public void PressNewPhoto()
	{
	}

	[Token(Token = "0x6001DBF")]
	[Address(RVA = "0x104DAE4", Offset = "0x104DAE4", VA = "0x104DAE4")]
	private void RefreshPhoto(string fn)
	{
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0x104DB44", Offset = "0x104DB44", VA = "0x104DB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF288", Offset = "0x8EF288")]
	private IEnumerator RefreshPhotoCR(string fn)
	{
		return null;
	}

	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0x104DBD8", Offset = "0x104DBD8", VA = "0x104DBD8")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF2E8", Offset = "0x8EF2E8")]
	public static void ToggleBugReporter()
	{
	}

	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0x104E080", Offset = "0x104E080", VA = "0x104E080")]
	public void Send()
	{
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0x104EB30", Offset = "0x104EB30", VA = "0x104EB30")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EF330", Offset = "0x8EF330")]
	public void TestSending()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x104E18C", Offset = "0x104E18C", VA = "0x104E18C")]
	private void SendBugAsEmail(bool test = false)
	{
	}

	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0x104ED64", Offset = "0x104ED64", VA = "0x104ED64")]
	private void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0x104EE88", Offset = "0x104EE88", VA = "0x104EE88")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0x104EFDC", Offset = "0x104EFDC", VA = "0x104EFDC")]
	private void Revert()
	{
	}

	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0x104EBD4", Offset = "0x104EBD4", VA = "0x104EBD4")]
	private static string Rot13(string input)
	{
		return null;
	}

	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0x104F058", Offset = "0x104F058", VA = "0x104F058")]
	public BugReporter()
	{
	}
}
[Token(Token = "0x200042D")]
public static class ColorExtensions
{
	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x13D3DFC", Offset = "0x13D3DFC", VA = "0x13D3DFC")]
	public static Color SetR(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x13D3E30", Offset = "0x13D3E30", VA = "0x13D3E30")]
	public static Color SetG(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x13D3E64", Offset = "0x13D3E64", VA = "0x13D3E64")]
	public static Color SetB(this Color c, float v = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0x13D3E98", Offset = "0x13D3E98", VA = "0x13D3E98")]
	public static Color SetA(this Color c, float v = 0f)
	{
		return default(Color);
	}
}
[Token(Token = "0x200042E")]
[ExecuteInEditMode]
public class CompanionScenes : MonoBehaviour
{
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D71A8", Offset = "0x8D71A8")]
	private sealed class <LoadAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> scenesToLoad;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompanionScenes <>4__this;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Scene <s>5__3;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x1006F64", Offset = "0x1006F64", VA = "0x1006F64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x1006FAC", Offset = "0x1006FAC", VA = "0x1006FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1006D9C", Offset = "0x1006D9C", VA = "0x1006D9C")]
		[DebuggerHidden]
		public <LoadAsync>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1006DC8", Offset = "0x1006DC8", VA = "0x1006DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1006DCC", Offset = "0x1006DCC", VA = "0x1006DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1006F6C", Offset = "0x1006F6C", VA = "0x1006F6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E1468", Offset = "0x8E1468")]
	public bool m_autoLoadInEditor;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E14B8", Offset = "0x8E14B8")]
	public int m_setActiveScene;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SceneField> m_requiredScenes;

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0x13D69DC", Offset = "0x13D69DC", VA = "0x13D69DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0x13D6A28", Offset = "0x13D6A28", VA = "0x13D6A28")]
	private void LoadNow()
	{
	}

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0x13D6C70", Offset = "0x13D6C70", VA = "0x13D6C70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF428", Offset = "0x8EF428")]
	private IEnumerator LoadAsync(List<string> scenesToLoad)
	{
		return null;
	}

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0x13D6D04", Offset = "0x13D6D04", VA = "0x13D6D04")]
	public CompanionScenes()
	{
	}
}
[Token(Token = "0x2000430")]
public static class ComponentExtensions
{
	[Token(Token = "0x6001DE9")]
	public static T CloneValues<T>(this UnityEngine.Component comp, T source) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6001DEA")]
	[Address(RVA = "0x13D7524", Offset = "0x13D7524", VA = "0x13D7524")]
	public static UnityEngine.Component CloneValues(this UnityEngine.Component comp, UnityEngine.Component source)
	{
		return null;
	}

	[Token(Token = "0x6001DEB")]
	public static T GetComponentInParents<T>(this UnityEngine.Component target) where T : UnityEngine.Component
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000431")]
public class SceneField : ISerializationCallbackReceiver
{
	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	[SerializeField]
	private string sceneName;

	[Token(Token = "0x6001DEC")]
	[Address(RVA = "0xEDCA2C", Offset = "0xEDCA2C", VA = "0xEDCA2C")]
	public static implicit operator string(SceneField sceneField)
	{
		return null;
	}

	[Token(Token = "0x6001DED")]
	[Address(RVA = "0xEDCA44", Offset = "0xEDCA44", VA = "0xEDCA44", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0xEDCA48", Offset = "0xEDCA48", VA = "0xEDCA48", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0xEDCA4C", Offset = "0xEDCA4C", VA = "0xEDCA4C")]
	public SceneField()
	{
	}
}
[Serializable]
[Token(Token = "0x2000432")]
public class UDateTime : ISerializationCallbackReceiver
{
	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public DateTime dateTime;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private string _dateTime;

	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0xE8CA4C", Offset = "0xE8CA4C", VA = "0xE8CA4C")]
	public static implicit operator DateTime(UDateTime udt)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0xE8CA64", Offset = "0xE8CA64", VA = "0xE8CA64")]
	public static implicit operator UDateTime(DateTime dt)
	{
		return null;
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0xE8CAD4", Offset = "0xE8CAD4", VA = "0xE8CAD4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0xE8CB44", Offset = "0xE8CB44", VA = "0xE8CB44", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0xE8CACC", Offset = "0xE8CACC", VA = "0xE8CACC")]
	public UDateTime()
	{
	}
}
[Token(Token = "0x2000433")]
public class LangDemo : MonoBehaviour
{
	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 scrollView;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUISkin mySkin;

	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0x115F584", Offset = "0x115F584", VA = "0x115F584")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001DF6")]
	[Address(RVA = "0x1160228", Offset = "0x1160228", VA = "0x1160228")]
	private void ChangedLanguage(LanguageCode code)
	{
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0x1160568", Offset = "0x1160568", VA = "0x1160568")]
	public LangDemo()
	{
	}
}
[Token(Token = "0x2000434")]
internal enum IsolatedArabicLetters
{
	[Token(Token = "0x40016D1")]
	Hamza = 65152,
	[Token(Token = "0x40016D2")]
	Alef = 65165,
	[Token(Token = "0x40016D3")]
	AlefHamza = 65155,
	[Token(Token = "0x40016D4")]
	WawHamza = 65157,
	[Token(Token = "0x40016D5")]
	AlefMaksoor = 65159,
	[Token(Token = "0x40016D6")]
	AlefMaksora = 65263,
	[Token(Token = "0x40016D7")]
	HamzaNabera = 65161,
	[Token(Token = "0x40016D8")]
	Ba = 65167,
	[Token(Token = "0x40016D9")]
	Ta = 65173,
	[Token(Token = "0x40016DA")]
	Tha2 = 65177,
	[Token(Token = "0x40016DB")]
	Jeem = 65181,
	[Token(Token = "0x40016DC")]
	H7aa = 65185,
	[Token(Token = "0x40016DD")]
	Khaa2 = 65189,
	[Token(Token = "0x40016DE")]
	Dal = 65193,
	[Token(Token = "0x40016DF")]
	Thal = 65195,
	[Token(Token = "0x40016E0")]
	Ra2 = 65197,
	[Token(Token = "0x40016E1")]
	Zeen = 65199,
	[Token(Token = "0x40016E2")]
	Seen = 65201,
	[Token(Token = "0x40016E3")]
	Sheen = 65205,
	[Token(Token = "0x40016E4")]
	S9a = 65209,
	[Token(Token = "0x40016E5")]
	Dha = 65213,
	[Token(Token = "0x40016E6")]
	T6a = 65217,
	[Token(Token = "0x40016E7")]
	T6ha = 65221,
	[Token(Token = "0x40016E8")]
	Ain = 65225,
	[Token(Token = "0x40016E9")]
	Gain = 65229,
	[Token(Token = "0x40016EA")]
	Fa = 65233,
	[Token(Token = "0x40016EB")]
	Gaf = 65237,
	[Token(Token = "0x40016EC")]
	Kaf = 65241,
	[Token(Token = "0x40016ED")]
	Lam = 65245,
	[Token(Token = "0x40016EE")]
	Meem = 65249,
	[Token(Token = "0x40016EF")]
	Noon = 65253,
	[Token(Token = "0x40016F0")]
	Ha = 65257,
	[Token(Token = "0x40016F1")]
	Waw = 65261,
	[Token(Token = "0x40016F2")]
	Ya = 65265,
	[Token(Token = "0x40016F3")]
	AlefMad = 65153,
	[Token(Token = "0x40016F4")]
	TaMarboota = 65171,
	[Token(Token = "0x40016F5")]
	PersianPe = 64342,
	[Token(Token = "0x40016F6")]
	PersianChe = 64378,
	[Token(Token = "0x40016F7")]
	PersianZe = 64394,
	[Token(Token = "0x40016F8")]
	PersianGaf = 64402,
	[Token(Token = "0x40016F9")]
	PersianGaf2 = 64398
}
[Token(Token = "0x2000435")]
internal enum GeneralArabicLetters
{
	[Token(Token = "0x40016FB")]
	Hamza = 1569,
	[Token(Token = "0x40016FC")]
	Alef = 1575,
	[Token(Token = "0x40016FD")]
	AlefHamza = 1571,
	[Token(Token = "0x40016FE")]
	WawHamza = 1572,
	[Token(Token = "0x40016FF")]
	AlefMaksoor = 1573,
	[Token(Token = "0x4001700")]
	AlefMagsora = 1609,
	[Token(Token = "0x4001701")]
	HamzaNabera = 1574,
	[Token(Token = "0x4001702")]
	Ba = 1576,
	[Token(Token = "0x4001703")]
	Ta = 1578,
	[Token(Token = "0x4001704")]
	Tha2 = 1579,
	[Token(Token = "0x4001705")]
	Jeem = 1580,
	[Token(Token = "0x4001706")]
	H7aa = 1581,
	[Token(Token = "0x4001707")]
	Khaa2 = 1582,
	[Token(Token = "0x4001708")]
	Dal = 1583,
	[Token(Token = "0x4001709")]
	Thal = 1584,
	[Token(Token = "0x400170A")]
	Ra2 = 1585,
	[Token(Token = "0x400170B")]
	Zeen = 1586,
	[Token(Token = "0x400170C")]
	Seen = 1587,
	[Token(Token = "0x400170D")]
	Sheen = 1588,
	[Token(Token = "0x400170E")]
	S9a = 1589,
	[Token(Token = "0x400170F")]
	Dha = 1590,
	[Token(Token = "0x4001710")]
	T6a = 1591,
	[Token(Token = "0x4001711")]
	T6ha = 1592,
	[Token(Token = "0x4001712")]
	Ain = 1593,
	[Token(Token = "0x4001713")]
	Gain = 1594,
	[Token(Token = "0x4001714")]
	Fa = 1601,
	[Token(Token = "0x4001715")]
	Gaf = 1602,
	[Token(Token = "0x4001716")]
	Kaf = 1603,
	[Token(Token = "0x4001717")]
	Lam = 1604,
	[Token(Token = "0x4001718")]
	Meem = 1605,
	[Token(Token = "0x4001719")]
	Noon = 1606,
	[Token(Token = "0x400171A")]
	Ha = 1607,
	[Token(Token = "0x400171B")]
	Waw = 1608,
	[Token(Token = "0x400171C")]
	Ya = 1610,
	[Token(Token = "0x400171D")]
	AlefMad = 1570,
	[Token(Token = "0x400171E")]
	TaMarboota = 1577,
	[Token(Token = "0x400171F")]
	PersianPe = 1662,
	[Token(Token = "0x4001720")]
	PersianChe = 1670,
	[Token(Token = "0x4001721")]
	PersianZe = 1688,
	[Token(Token = "0x4001722")]
	PersianGaf = 1711,
	[Token(Token = "0x4001723")]
	PersianGaf2 = 1705
}
[Token(Token = "0x2000436")]
internal class ArabicMapping
{
	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int from;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int to;

	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0x14A24A4", Offset = "0x14A24A4", VA = "0x14A24A4")]
	public ArabicMapping(int from, int to)
	{
	}
}
[Token(Token = "0x2000437")]
internal class ArabicTable
{
	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ArabicMapping> mapList;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ArabicTable arabicMapper;

	[Token(Token = "0x17000392")]
	internal static ArabicTable ArabicMapper
	{
		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x14A18B4", Offset = "0x14A18B4", VA = "0x14A18B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0x14A24DC", Offset = "0x14A24DC", VA = "0x14A24DC")]
	private ArabicTable()
	{
	}

	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0x14A1934", Offset = "0x14A1934", VA = "0x14A1934")]
	internal int Convert(int toBeConverted)
	{
		return default(int);
	}
}
[Token(Token = "0x2000438")]
internal class TashkeelLocation
{
	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char tashkeel;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int position;

	[Token(Token = "0x6001DFC")]
	[Address(RVA = "0x11FAC24", Offset = "0x11FAC24", VA = "0x11FAC24")]
	public TashkeelLocation(char tashkeel, int position)
	{
	}
}
[Token(Token = "0x2000439")]
internal class ArabicFixerTool
{
	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static bool showTashkeel;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	internal static bool useHinduNumbers;

	[Token(Token = "0x6001DFD")]
	[Address(RVA = "0x14A1378", Offset = "0x14A1378", VA = "0x14A1378")]
	internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x6001DFE")]
	[Address(RVA = "0x14A1660", Offset = "0x14A1660", VA = "0x14A1660")]
	internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x6001DFF")]
	[Address(RVA = "0x14A05EC", Offset = "0x14A05EC", VA = "0x14A05EC")]
	internal static string FixLine(string str)
	{
		return null;
	}

	[Token(Token = "0x6001E00")]
	[Address(RVA = "0x14A1A90", Offset = "0x14A1A90", VA = "0x14A1A90")]
	internal static bool IsIgnoredCharacter(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x14A20FC", Offset = "0x14A20FC", VA = "0x14A20FC")]
	internal static bool IsLeadingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x14A1F90", Offset = "0x14A1F90", VA = "0x14A1F90")]
	internal static bool IsFinishingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x14A1BEC", Offset = "0x14A1BEC", VA = "0x14A1BEC")]
	internal static bool IsMiddleLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x14A2440", Offset = "0x14A2440", VA = "0x14A2440")]
	public ArabicFixerTool()
	{
	}
}
[Token(Token = "0x200043A")]
public interface ILocalizable
{
	[Token(Token = "0x6001E06")]
	void Localize();
}
[Token(Token = "0x200043B")]
public static class Language
{
	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ReadingSpeedMinDisplayTime;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float ReadingSpeedSecondsPerWord;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float ReadingSpeedSecondsPerSJKChar;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool TestMode;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string settingsAssetPath;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LocalizationSettings _settings;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<string> availableLanguages;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static LanguageCode currentLanguage;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static CultureInfo currentCultureInfo;

	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<string, Dictionary<string, string>> currentEntrySheets;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<string, int> m_variations;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly string[] NativeLanguageNames;

	[Token(Token = "0x17000393")]
	public static LocalizationSettings settings
	{
		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x11608D4", Offset = "0x11608D4", VA = "0x11608D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x11606F0", Offset = "0x11606F0", VA = "0x11606F0")]
	public static float TimeToRead(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x1160B00", Offset = "0x1160B00", VA = "0x1160B00")]
	static Language()
	{
	}

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x1164D44", Offset = "0x1164D44", VA = "0x1164D44")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x1165368", Offset = "0x1165368", VA = "0x1165368")]
	private static void LoadAvailableLanguages()
	{
	}

	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x116607C", Offset = "0x116607C", VA = "0x116607C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF508", Offset = "0x8EF508")]
	public static void ToggleTestMode()
	{
	}

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x1160130", Offset = "0x1160130", VA = "0x1160130")]
	public static string[] GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x11601B4", Offset = "0x11601B4", VA = "0x11601B4")]
	public static bool SwitchLanguage(string langCode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x1165934", Offset = "0x1165934", VA = "0x1165934")]
	public static bool SwitchLanguage(LanguageCode code)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E10")]
	[Address(RVA = "0x1166910", Offset = "0x1166910", VA = "0x1166910")]
	public static void AppendDataFromCSV(string csvData, string appendToSheet, char separator)
	{
	}

	[Token(Token = "0x6001E11")]
	[Address(RVA = "0x11660F0", Offset = "0x11660F0", VA = "0x11660F0")]
	private static void DoSwitch(LanguageCode newLang)
	{
	}

	[Token(Token = "0x6001E12")]
	[Address(RVA = "0x1167168", Offset = "0x1167168", VA = "0x1167168")]
	public static void RefreshAllLocalizables()
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x11675EC", Offset = "0x11675EC", VA = "0x11675EC")]
	public static LanguageCode CycleLanguages()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x1160424", Offset = "0x1160424", VA = "0x1160424")]
	public static UnityEngine.Object GetAsset(string name)
	{
		return null;
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x1165F04", Offset = "0x1165F04", VA = "0x1165F04")]
	private static bool HasLanguageFile(string lang, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x1166CAC", Offset = "0x1166CAC", VA = "0x1166CAC")]
	private static string GetLanguageFileContents(string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x1167804", Offset = "0x1167804", VA = "0x1167804")]
	public static LanguageCode CurrentLanguage()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x1167868", Offset = "0x1167868", VA = "0x1167868")]
	public static CultureInfo CurrentCultureInfo()
	{
		return null;
	}

	[Token(Token = "0x6001E19")]
	[Address(RVA = "0x11678CC", Offset = "0x11678CC", VA = "0x11678CC")]
	private static string Testify(string s)
	{
		return null;
	}

	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0x1167B24", Offset = "0x1167B24", VA = "0x1167B24")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x6001E1B")]
	[Address(RVA = "0x1167F28", Offset = "0x1167F28", VA = "0x1167F28")]
	public static bool TryGet(string key, out string result)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E1C")]
	[Address(RVA = "0x1167C3C", Offset = "0x1167C3C", VA = "0x1167C3C")]
	public static bool TryGet(string key, string sheetTitle, out string result)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0x115FE5C", Offset = "0x115FE5C", VA = "0x115FE5C")]
	public static string Get(string key, string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x6001E1E")]
	[Address(RVA = "0x1168054", Offset = "0x1168054", VA = "0x1168054")]
	public static string GetVariation(string keyStem)
	{
		return null;
	}

	[Token(Token = "0x6001E1F")]
	[Address(RVA = "0x1168258", Offset = "0x1168258", VA = "0x1168258")]
	private static int CountVariations(string keyStem)
	{
		return default(int);
	}

	[Token(Token = "0x6001E20")]
	[Address(RVA = "0x116833C", Offset = "0x116833C", VA = "0x116833C")]
	public static bool Has(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E21")]
	[Address(RVA = "0x1168428", Offset = "0x1168428", VA = "0x1168428")]
	public static bool Has(string key, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E22")]
	[Address(RVA = "0x1166ED8", Offset = "0x1166ED8", VA = "0x1166ED8")]
	private static void SendMonoMessage(string methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6001E23")]
	[Address(RVA = "0x1165914", Offset = "0x1165914", VA = "0x1165914")]
	public static LanguageCode LanguageNameToCode(SystemLanguage name)
	{
		return default(LanguageCode);
	}
}
[Token(Token = "0x200043C")]
public enum LanguageCode
{
	[Token(Token = "0x4001739")]
	N,
	[Token(Token = "0x400173A")]
	AA,
	[Token(Token = "0x400173B")]
	AB,
	[Token(Token = "0x400173C")]
	AF,
	[Token(Token = "0x400173D")]
	AM,
	[Token(Token = "0x400173E")]
	AR,
	[Token(Token = "0x400173F")]
	AR_SA,
	[Token(Token = "0x4001740")]
	AR_EG,
	[Token(Token = "0x4001741")]
	AR_DZ,
	[Token(Token = "0x4001742")]
	AR_YE,
	[Token(Token = "0x4001743")]
	AR_JO,
	[Token(Token = "0x4001744")]
	AR_KW,
	[Token(Token = "0x4001745")]
	AR_BH,
	[Token(Token = "0x4001746")]
	AR_IQ,
	[Token(Token = "0x4001747")]
	AR_MA,
	[Token(Token = "0x4001748")]
	AR_LY,
	[Token(Token = "0x4001749")]
	AR_OM,
	[Token(Token = "0x400174A")]
	AR_SY,
	[Token(Token = "0x400174B")]
	AR_LB,
	[Token(Token = "0x400174C")]
	AR_AE,
	[Token(Token = "0x400174D")]
	AR_QA,
	[Token(Token = "0x400174E")]
	AS,
	[Token(Token = "0x400174F")]
	AY,
	[Token(Token = "0x4001750")]
	AZ,
	[Token(Token = "0x4001751")]
	BA,
	[Token(Token = "0x4001752")]
	BE,
	[Token(Token = "0x4001753")]
	BG,
	[Token(Token = "0x4001754")]
	BH,
	[Token(Token = "0x4001755")]
	BI,
	[Token(Token = "0x4001756")]
	BN,
	[Token(Token = "0x4001757")]
	BO,
	[Token(Token = "0x4001758")]
	BR,
	[Token(Token = "0x4001759")]
	CA,
	[Token(Token = "0x400175A")]
	CO,
	[Token(Token = "0x400175B")]
	CS,
	[Token(Token = "0x400175C")]
	CY,
	[Token(Token = "0x400175D")]
	DA,
	[Token(Token = "0x400175E")]
	DE,
	[Token(Token = "0x400175F")]
	DE_AT,
	[Token(Token = "0x4001760")]
	DE_LI,
	[Token(Token = "0x4001761")]
	DE_CH,
	[Token(Token = "0x4001762")]
	DE_LU,
	[Token(Token = "0x4001763")]
	DZ,
	[Token(Token = "0x4001764")]
	EL,
	[Token(Token = "0x4001765")]
	EN,
	[Token(Token = "0x4001766")]
	EN_US,
	[Token(Token = "0x4001767")]
	EN_AU,
	[Token(Token = "0x4001768")]
	EN_NZ,
	[Token(Token = "0x4001769")]
	EN_ZA,
	[Token(Token = "0x400176A")]
	EN_CB,
	[Token(Token = "0x400176B")]
	EN_TT,
	[Token(Token = "0x400176C")]
	EN_GB,
	[Token(Token = "0x400176D")]
	EN_CA,
	[Token(Token = "0x400176E")]
	EN_IE,
	[Token(Token = "0x400176F")]
	EN_JM,
	[Token(Token = "0x4001770")]
	EN_BZ,
	[Token(Token = "0x4001771")]
	EN_SC,
	[Token(Token = "0x4001772")]
	EO,
	[Token(Token = "0x4001773")]
	ES,
	[Token(Token = "0x4001774")]
	ES_LATAM,
	[Token(Token = "0x4001775")]
	ES_MX,
	[Token(Token = "0x4001776")]
	ES_CR,
	[Token(Token = "0x4001777")]
	ES_DO,
	[Token(Token = "0x4001778")]
	ES_CO,
	[Token(Token = "0x4001779")]
	ES_AR,
	[Token(Token = "0x400177A")]
	ES_CL,
	[Token(Token = "0x400177B")]
	ES_PY,
	[Token(Token = "0x400177C")]
	ES_SV,
	[Token(Token = "0x400177D")]
	ES_NI,
	[Token(Token = "0x400177E")]
	ES_GT,
	[Token(Token = "0x400177F")]
	ES_PA,
	[Token(Token = "0x4001780")]
	ES_VE,
	[Token(Token = "0x4001781")]
	ES_PE,
	[Token(Token = "0x4001782")]
	ES_EC,
	[Token(Token = "0x4001783")]
	ES_UY,
	[Token(Token = "0x4001784")]
	ES_BO,
	[Token(Token = "0x4001785")]
	ES_HN,
	[Token(Token = "0x4001786")]
	ES_PR,
	[Token(Token = "0x4001787")]
	ET,
	[Token(Token = "0x4001788")]
	EU,
	[Token(Token = "0x4001789")]
	FA,
	[Token(Token = "0x400178A")]
	FI,
	[Token(Token = "0x400178B")]
	FJ,
	[Token(Token = "0x400178C")]
	FO,
	[Token(Token = "0x400178D")]
	FR,
	[Token(Token = "0x400178E")]
	FR_BE,
	[Token(Token = "0x400178F")]
	FR_CH,
	[Token(Token = "0x4001790")]
	FR_CA,
	[Token(Token = "0x4001791")]
	FR_LU,
	[Token(Token = "0x4001792")]
	FY,
	[Token(Token = "0x4001793")]
	GA,
	[Token(Token = "0x4001794")]
	GD,
	[Token(Token = "0x4001795")]
	GL,
	[Token(Token = "0x4001796")]
	GN,
	[Token(Token = "0x4001797")]
	GU,
	[Token(Token = "0x4001798")]
	HA,
	[Token(Token = "0x4001799")]
	HI,
	[Token(Token = "0x400179A")]
	HE,
	[Token(Token = "0x400179B")]
	HR,
	[Token(Token = "0x400179C")]
	HU,
	[Token(Token = "0x400179D")]
	HY,
	[Token(Token = "0x400179E")]
	IA,
	[Token(Token = "0x400179F")]
	ID,
	[Token(Token = "0x40017A0")]
	IE,
	[Token(Token = "0x40017A1")]
	IK,
	[Token(Token = "0x40017A2")]
	IN,
	[Token(Token = "0x40017A3")]
	IS,
	[Token(Token = "0x40017A4")]
	IT,
	[Token(Token = "0x40017A5")]
	IT_CH,
	[Token(Token = "0x40017A6")]
	IU,
	[Token(Token = "0x40017A7")]
	IW,
	[Token(Token = "0x40017A8")]
	JA,
	[Token(Token = "0x40017A9")]
	JI,
	[Token(Token = "0x40017AA")]
	JW,
	[Token(Token = "0x40017AB")]
	KA,
	[Token(Token = "0x40017AC")]
	KK,
	[Token(Token = "0x40017AD")]
	KL,
	[Token(Token = "0x40017AE")]
	KM,
	[Token(Token = "0x40017AF")]
	KN,
	[Token(Token = "0x40017B0")]
	KO,
	[Token(Token = "0x40017B1")]
	KS,
	[Token(Token = "0x40017B2")]
	KU,
	[Token(Token = "0x40017B3")]
	KY,
	[Token(Token = "0x40017B4")]
	LA,
	[Token(Token = "0x40017B5")]
	LN,
	[Token(Token = "0x40017B6")]
	LO,
	[Token(Token = "0x40017B7")]
	LT,
	[Token(Token = "0x40017B8")]
	LV,
	[Token(Token = "0x40017B9")]
	MG,
	[Token(Token = "0x40017BA")]
	MI,
	[Token(Token = "0x40017BB")]
	MK,
	[Token(Token = "0x40017BC")]
	ML,
	[Token(Token = "0x40017BD")]
	MN,
	[Token(Token = "0x40017BE")]
	MO,
	[Token(Token = "0x40017BF")]
	MR,
	[Token(Token = "0x40017C0")]
	MS,
	[Token(Token = "0x40017C1")]
	MT,
	[Token(Token = "0x40017C2")]
	MY,
	[Token(Token = "0x40017C3")]
	NA,
	[Token(Token = "0x40017C4")]
	NE,
	[Token(Token = "0x40017C5")]
	NL,
	[Token(Token = "0x40017C6")]
	NL_BE,
	[Token(Token = "0x40017C7")]
	NO,
	[Token(Token = "0x40017C8")]
	OC,
	[Token(Token = "0x40017C9")]
	OM,
	[Token(Token = "0x40017CA")]
	OR,
	[Token(Token = "0x40017CB")]
	PA,
	[Token(Token = "0x40017CC")]
	PL,
	[Token(Token = "0x40017CD")]
	PS,
	[Token(Token = "0x40017CE")]
	PT,
	[Token(Token = "0x40017CF")]
	PT_BR,
	[Token(Token = "0x40017D0")]
	QU,
	[Token(Token = "0x40017D1")]
	RM,
	[Token(Token = "0x40017D2")]
	RN,
	[Token(Token = "0x40017D3")]
	RO,
	[Token(Token = "0x40017D4")]
	RO_MO,
	[Token(Token = "0x40017D5")]
	RU,
	[Token(Token = "0x40017D6")]
	RU_MO,
	[Token(Token = "0x40017D7")]
	RW,
	[Token(Token = "0x40017D8")]
	SA,
	[Token(Token = "0x40017D9")]
	SD,
	[Token(Token = "0x40017DA")]
	SG,
	[Token(Token = "0x40017DB")]
	SH,
	[Token(Token = "0x40017DC")]
	SI,
	[Token(Token = "0x40017DD")]
	SK,
	[Token(Token = "0x40017DE")]
	SL,
	[Token(Token = "0x40017DF")]
	SM,
	[Token(Token = "0x40017E0")]
	SN,
	[Token(Token = "0x40017E1")]
	SO,
	[Token(Token = "0x40017E2")]
	SQ,
	[Token(Token = "0x40017E3")]
	SR,
	[Token(Token = "0x40017E4")]
	SS,
	[Token(Token = "0x40017E5")]
	ST,
	[Token(Token = "0x40017E6")]
	SU,
	[Token(Token = "0x40017E7")]
	SV,
	[Token(Token = "0x40017E8")]
	SV_FI,
	[Token(Token = "0x40017E9")]
	SW,
	[Token(Token = "0x40017EA")]
	TA,
	[Token(Token = "0x40017EB")]
	TE,
	[Token(Token = "0x40017EC")]
	TG,
	[Token(Token = "0x40017ED")]
	TH,
	[Token(Token = "0x40017EE")]
	TI,
	[Token(Token = "0x40017EF")]
	TK,
	[Token(Token = "0x40017F0")]
	TL,
	[Token(Token = "0x40017F1")]
	TN,
	[Token(Token = "0x40017F2")]
	TO,
	[Token(Token = "0x40017F3")]
	TR,
	[Token(Token = "0x40017F4")]
	TS,
	[Token(Token = "0x40017F5")]
	TT,
	[Token(Token = "0x40017F6")]
	TW,
	[Token(Token = "0x40017F7")]
	UG,
	[Token(Token = "0x40017F8")]
	UK,
	[Token(Token = "0x40017F9")]
	UR,
	[Token(Token = "0x40017FA")]
	UZ,
	[Token(Token = "0x40017FB")]
	VI,
	[Token(Token = "0x40017FC")]
	VO,
	[Token(Token = "0x40017FD")]
	WO,
	[Token(Token = "0x40017FE")]
	XH,
	[Token(Token = "0x40017FF")]
	YI,
	[Token(Token = "0x4001800")]
	YO,
	[Token(Token = "0x4001801")]
	ZA,
	[Token(Token = "0x4001802")]
	ZH,
	[Token(Token = "0x4001803")]
	ZH_TW,
	[Token(Token = "0x4001804")]
	ZH_HK,
	[Token(Token = "0x4001805")]
	ZH_CN,
	[Token(Token = "0x4001806")]
	ZH_SG,
	[Token(Token = "0x4001807")]
	ZU
}
[Token(Token = "0x200043D")]
public static class LangStringExtensions
{
	[Token(Token = "0x6001E24")]
	[Address(RVA = "0x1160570", Offset = "0x1160570", VA = "0x1160570")]
	public static string UnescapeXML(this string s)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200043E")]
public class LocalizationSettings : ScriptableObject
{
	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] sheetTitles;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSystemLanguagePerDefault;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string defaultLangCode;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool testMode;

	[Token(Token = "0x6001E25")]
	[Address(RVA = "0x1776ADC", Offset = "0x1776ADC", VA = "0x1776ADC")]
	public static LanguageCode GetLanguageEnum(string langCode)
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6001E26")]
	[Address(RVA = "0x1776F38", Offset = "0x1776F38", VA = "0x1776F38")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x200043F")]
public class LocalizedAsset : MonoBehaviour
{
	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object localizeTarget;

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x1776F9C", Offset = "0x1776F9C", VA = "0x1776F9C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x17774BC", Offset = "0x17774BC", VA = "0x17774BC")]
	public void LocalizeAsset()
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x1776FA4", Offset = "0x1776FA4", VA = "0x1776FA4")]
	public static void LocalizeAsset(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x17774C4", Offset = "0x17774C4", VA = "0x17774C4")]
	public LocalizedAsset()
	{
	}
}
[Token(Token = "0x2000440")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D71D8", Offset = "0x8D71D8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D71D8", Offset = "0x8D71D8")]
public class UGUILocalizeM2H : MonoBehaviour
{
	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string sheet;

	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0xE8CB78", Offset = "0xE8CB78", VA = "0xE8CB78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0xE8CD64", Offset = "0xE8CD64", VA = "0xE8CD64")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E2D")]
	[Address(RVA = "0xE8CD68", Offset = "0xE8CD68", VA = "0xE8CD68")]
	public void ChangedLanguage(LanguageCode code)
	{
	}

	[Token(Token = "0x6001E2E")]
	[Address(RVA = "0xE8CB7C", Offset = "0xE8CB7C", VA = "0xE8CB7C")]
	public void Localize()
	{
	}

	[Token(Token = "0x6001E2F")]
	[Address(RVA = "0xE8CD6C", Offset = "0xE8CD6C", VA = "0xE8CD6C")]
	public UGUILocalizeM2H()
	{
	}
}
[Token(Token = "0x2000441")]
public abstract class HashFunction
{
	[Token(Token = "0x6001E30")]
	public abstract uint GetHash(params int[] data);

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0x12ACD44", Offset = "0x12ACD44", VA = "0x12ACD44")]
	public System.Random MakeGenerator(int data)
	{
		return null;
	}

	[Token(Token = "0x6001E32")]
	[Address(RVA = "0x12ACDCC", Offset = "0x12ACDCC", VA = "0x12ACDCC", Slot = "5")]
	public virtual uint GetHash(int data)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0x12ACE58", Offset = "0x12ACE58", VA = "0x12ACE58", Slot = "6")]
	public virtual uint GetHash(int x, int y)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0x12ACEF4", Offset = "0x12ACEF4", VA = "0x12ACEF4", Slot = "7")]
	public virtual uint GetHash(int x, int y, int z)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0x12ACFA8", Offset = "0x12ACFA8", VA = "0x12ACFA8")]
	public float Value(params int[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0x12ACFD8", Offset = "0x12ACFD8", VA = "0x12ACFD8")]
	public float Value(int data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E37")]
	[Address(RVA = "0x12AD008", Offset = "0x12AD008", VA = "0x12AD008")]
	public float Value(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6001E38")]
	[Address(RVA = "0x12AD038", Offset = "0x12AD038", VA = "0x12AD038")]
	public float Value(int x, int y, int z)
	{
		return default(float);
	}

	[Token(Token = "0x6001E39")]
	[Address(RVA = "0x12AD068", Offset = "0x12AD068", VA = "0x12AD068")]
	public int Range(int min, int max, params int[] data)
	{
		return default(int);
	}

	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0x12AD0B0", Offset = "0x12AD0B0", VA = "0x12AD0B0")]
	public int Range(int min, int max, int data)
	{
		return default(int);
	}

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x12AD0F8", Offset = "0x12AD0F8", VA = "0x12AD0F8")]
	public int Range(int min, int max, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x12AD148", Offset = "0x12AD148", VA = "0x12AD148")]
	public int Range(int min, int max, int x, int y, int z)
	{
		return default(int);
	}

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x12AD19C", Offset = "0x12AD19C", VA = "0x12AD19C")]
	public float Range(float min, float max, params int[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E3E")]
	[Address(RVA = "0x12AD1E8", Offset = "0x12AD1E8", VA = "0x12AD1E8")]
	public float Range(float min, float max, int data)
	{
		return default(float);
	}

	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x12AD234", Offset = "0x12AD234", VA = "0x12AD234")]
	public float Range(float min, float max, int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x12AD280", Offset = "0x12AD280", VA = "0x12AD280")]
	public float Range(float min, float max, int x, int y, int z)
	{
		return default(float);
	}

	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x12AD2CC", Offset = "0x12AD2CC", VA = "0x12AD2CC")]
	protected HashFunction()
	{
	}
}
[Token(Token = "0x2000442")]
public class XXHash : HashFunction
{
	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint seed;

	[Token(Token = "0x4001810")]
	private const uint PRIME32_1 = 2654435761u;

	[Token(Token = "0x4001811")]
	private const uint PRIME32_2 = 2246822519u;

	[Token(Token = "0x4001812")]
	private const uint PRIME32_3 = 3266489917u;

	[Token(Token = "0x4001813")]
	private const uint PRIME32_4 = 668265263u;

	[Token(Token = "0x4001814")]
	private const uint PRIME32_5 = 374761393u;

	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x1402968", Offset = "0x1402968", VA = "0x1402968")]
	public XXHash(int seed)
	{
	}

	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x1402994", Offset = "0x1402994", VA = "0x1402994")]
	public uint GetHash(byte[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x1402C38", Offset = "0x1402C38", VA = "0x1402C38")]
	public uint GetHash(params uint[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x1402E18", Offset = "0x1402E18", VA = "0x1402E18", Slot = "4")]
	public override uint GetHash(params int[] buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E46")]
	[Address(RVA = "0x1402FD8", Offset = "0x1402FD8", VA = "0x1402FD8", Slot = "5")]
	public override uint GetHash(int buf)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E47")]
	[Address(RVA = "0x1402B94", Offset = "0x1402B94", VA = "0x1402B94")]
	private static uint CalcSubHash(uint value, byte[] buf, int index)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E48")]
	[Address(RVA = "0x1402DF8", Offset = "0x1402DF8", VA = "0x1402DF8")]
	private static uint CalcSubHash(uint value, uint read_value)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E49")]
	[Address(RVA = "0x1402C2C", Offset = "0x1402C2C", VA = "0x1402C2C")]
	private static uint RotateLeft(uint value, int count)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000443")]
public class DebugTools : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D725C", Offset = "0x8D725C")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugTools <>4__this;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xE759C0", Offset = "0xE759C0", VA = "0xE759C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xE75A08", Offset = "0xE75A08", VA = "0xE75A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xE75748", Offset = "0xE75748", VA = "0xE75748")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xE75774", Offset = "0xE75774", VA = "0xE75774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xE75778", Offset = "0xE75778", VA = "0xE75778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xE759C8", Offset = "0xE759C8", VA = "0xE759C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugTools Instance;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_ignoreOculusDashEvents;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E1570", Offset = "0x8E1570")]
	public bool m_pressXAToPauseEditor;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E15B8", Offset = "0x8E15B8")]
	public bool m_wwiseEngineLogging;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E1600", Offset = "0x8E1600")]
	public int m_msaa;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_lh;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRHand m_rh;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons m_resetViewButtonLeft;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public NVRButtons m_resetViewButtonRight;

	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0xF27418", Offset = "0xF27418", VA = "0xF27418")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EF560", Offset = "0x8EF560")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0xF27468", Offset = "0xF27468", VA = "0xF27468")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0xF27568", Offset = "0xF27568", VA = "0xF27568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0xF276B8", Offset = "0xF276B8", VA = "0xF276B8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0xF27764", Offset = "0xF27764", VA = "0xF27764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF574", Offset = "0x8EF574")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0xF277DC", Offset = "0xF277DC", VA = "0xF277DC")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF5D4", Offset = "0x8EF5D4")]
	public void TestLocalisation()
	{
	}

	[Token(Token = "0x6001E50")]
	[Address(RVA = "0xF278B4", Offset = "0xF278B4", VA = "0xF278B4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF61C", Offset = "0x8EF61C")]
	public void TriggerAutosave()
	{
	}

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0xF27960", Offset = "0xF27960", VA = "0xF27960")]
	public DebugTools()
	{
	}
}
[Token(Token = "0x2000445")]
public class EventPlayUnityAudioSource : Triggerable
{
	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource m_source;

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x1013B7C", Offset = "0x1013B7C", VA = "0x1013B7C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x1013B98", Offset = "0x1013B98", VA = "0x1013B98")]
	public EventPlayUnityAudioSource()
	{
	}
}
[Token(Token = "0x2000446")]
public class AntiHeadPos : MonoBehaviour
{
	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x149AF50", Offset = "0x149AF50", VA = "0x149AF50")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x149B004", Offset = "0x149B004", VA = "0x149B004")]
	public AntiHeadPos()
	{
	}
}
[Token(Token = "0x2000447")]
public class FlatlandHand : MonoBehaviour
{
	[Token(Token = "0x2000448")]
	private enum Controller
	{
		[Token(Token = "0x4001837")]
		None,
		[Token(Token = "0x4001838")]
		Mouse,
		[Token(Token = "0x4001839")]
		Keyboard
	}

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentTouchCount;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 delta;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_reachMin;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_reachMax;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NVRVirtualHand m_hand;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_reach;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_reachSpeed;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_handPosLerpRate;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_handRotLerpRate;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_handTargetPos;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion m_handTargetRot;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1640", Offset = "0x8E1640")]
	public KeyCode m_triggerKey;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode m_rotateKey;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Controller m_lastControl;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool m_useCursorPos;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_rayDist;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask m_layerMaskTriggers;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_yOffset;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_lastDist;

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x11B3740", Offset = "0x11B3740", VA = "0x11B3740")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x11B3858", Offset = "0x11B3858", VA = "0x11B3858")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x11B3F2C", Offset = "0x11B3F2C", VA = "0x11B3F2C")]
	public FlatlandHand()
	{
	}
}
[Token(Token = "0x2000449")]
public class FlatlandPlayer : MonoBehaviour
{
	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FlatlandPlayer Instance;

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x11B3F54", Offset = "0x11B3F54", VA = "0x11B3F54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x11B3FA8", Offset = "0x11B3FA8", VA = "0x11B3FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x11B3FAC", Offset = "0x11B3FAC", VA = "0x11B3FAC")]
	public FlatlandPlayer()
	{
	}
}
[Token(Token = "0x200044A")]
public class GyroControlCamera : MonoBehaviour
{
	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _lastCompassUpdateTime;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion _correction;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _targetCorrection;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _compassOrientation;

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x12A17E8", Offset = "0x12A17E8", VA = "0x12A17E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x12A1828", Offset = "0x12A1828", VA = "0x12A1828")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x12A1C60", Offset = "0x12A1C60", VA = "0x12A1C60")]
	public GyroControlCamera()
	{
	}
}
[Token(Token = "0x200044B")]
public class KeyboardMover : MonoBehaviour
{
	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_shiftMultiplier;

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x115E664", Offset = "0x115E664", VA = "0x115E664")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x115E8DC", Offset = "0x115E8DC", VA = "0x115E8DC")]
	public KeyboardMover()
	{
	}
}
[Token(Token = "0x200044C")]
public class MouseLookCamera : MonoBehaviour
{
	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 m_sensitivity;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_minX;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_maxX;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_minY;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_maxY;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 m_stickExtents;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatRange m_zoomSensitivityRange;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatRange m_fovRange;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float zoom;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_lbState;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_rbState;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 m_eulerRot;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion m_initialRot;

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x1614F38", Offset = "0x1614F38", VA = "0x1614F38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x1614F74", Offset = "0x1614F74", VA = "0x1614F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x16151A0", Offset = "0x16151A0", VA = "0x16151A0")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0x16151E4", Offset = "0x16151E4", VA = "0x16151E4")]
	public MouseLookCamera()
	{
	}
}
[Token(Token = "0x200044D")]
public class MouseMoveCamera : MonoBehaviour
{
	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_lbState;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_rbState;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_mbState;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool m_latState;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_inOutState;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_moveSpeed;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_startPos;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_lastMousePos;

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0x1615300", Offset = "0x1615300", VA = "0x1615300")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0x1615304", Offset = "0x1615304", VA = "0x1615304")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0x1615528", Offset = "0x1615528", VA = "0x1615528")]
	public MouseMoveCamera()
	{
	}
}
[Token(Token = "0x200044E")]
public class SFCFlatlandPlayer : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D726C", Offset = "0x8D726C")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SFCFlatlandPlayer <>4__this;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x1069480", Offset = "0x1069480", VA = "0x1069480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x10694C8", Offset = "0x10694C8", VA = "0x10694C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1069234", Offset = "0x1069234", VA = "0x1069234")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1069260", Offset = "0x1069260", VA = "0x1069260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1069264", Offset = "0x1069264", VA = "0x1069264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1069488", Offset = "0x1069488", VA = "0x1069488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_lhLocator;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_leftHand;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_shop;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_bin;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToggleWheelMenuOpener m_shopToggle;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode m_lefthandY;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode m_lefthandX;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KeyCode m_righthandB;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public KeyCode m_righthandA;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode m_stickLeft;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode m_stickRight;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ToggleWheel m_toggleWheel;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] m_menuNav;

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0x11A8FC0", Offset = "0x11A8FC0", VA = "0x11A8FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF6B4", Offset = "0x8EF6B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x11A9038", Offset = "0x11A9038", VA = "0x11A9038")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x11A90CC", Offset = "0x11A90CC", VA = "0x11A90CC")]
	public void ShopToggleUp()
	{
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x11A91C4", Offset = "0x11A91C4", VA = "0x11A91C4")]
	public void ShopToggleDown()
	{
	}

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0x11A92BC", Offset = "0x11A92BC", VA = "0x11A92BC")]
	public void ShopToggleLeft()
	{
	}

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0x11A92D0", Offset = "0x11A92D0", VA = "0x11A92D0")]
	public void ShopToggleRight()
	{
	}

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0x11A92E4", Offset = "0x11A92E4", VA = "0x11A92E4")]
	public SFCFlatlandPlayer()
	{
	}
}
[Token(Token = "0x2000450")]
public class VrOrFlatlandEnabler : MonoBehaviour
{
	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1678", Offset = "0x8E1678")]
	public GameObject[] VR;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] VRPrefabs;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E16B0", Offset = "0x8E16B0")]
	public GameObject[] Flatland;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] FlatlandPrefabs;

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x13FF374", Offset = "0x13FF374", VA = "0x13FF374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x13FF468", Offset = "0x13FF468", VA = "0x13FF468")]
	public VrOrFlatlandEnabler()
	{
	}
}
[Token(Token = "0x2000451")]
public class GroundSticker : MonoBehaviour
{
	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_layerMask;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_rayLength;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_rayStartOffset;

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x12A15B4", Offset = "0x12A15B4", VA = "0x12A15B4")]
	public void SnapToGround()
	{
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x12A17A8", Offset = "0x12A17A8", VA = "0x12A17A8")]
	public GroundSticker()
	{
	}
}
[Token(Token = "0x2000452")]
public class InstaCam : MonoBehaviour
{
	[Token(Token = "0x2000453")]
	public class StringEvent : UnityEvent<string>
	{
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xE86384", Offset = "0xE86384", VA = "0xE86384")]
		public StringEvent()
		{
		}
	}

	[Token(Token = "0x2000454")]
	private enum Zoom
	{
		[Token(Token = "0x40018C3")]
		Idle,
		[Token(Token = "0x40018C4")]
		In,
		[Token(Token = "0x40018C5")]
		Out
	}

	[Token(Token = "0x2000455")]
	private enum State
	{
		[Token(Token = "0x40018C7")]
		Idle,
		[Token(Token = "0x40018C8")]
		Recording,
		[Token(Token = "0x40018C9")]
		Saving,
		[Token(Token = "0x40018CA")]
		Saved
	}

	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D727C", Offset = "0x8D727C")]
	private sealed class <Start>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstaCam <>4__this;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xE86334", Offset = "0xE86334", VA = "0xE86334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xE8637C", Offset = "0xE8637C", VA = "0xE8637C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xE85F94", Offset = "0xE85F94", VA = "0xE85F94")]
		[DebuggerHidden]
		public <Start>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xE85FC0", Offset = "0xE85FC0", VA = "0xE85FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xE85FC4", Offset = "0xE85FC4", VA = "0xE85FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xE8633C", Offset = "0xE8633C", VA = "0xE8633C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D728C", Offset = "0x8D728C")]
	private sealed class <PrintAnimCR>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstaCam <>4__this;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xE85F44", Offset = "0xE85F44", VA = "0xE85F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xE85F8C", Offset = "0xE85F8C", VA = "0xE85F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xE85DB4", Offset = "0xE85DB4", VA = "0xE85DB4")]
		[DebuggerHidden]
		public <PrintAnimCR>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xE85DE0", Offset = "0xE85DE0", VA = "0xE85DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xE85DE4", Offset = "0xE85DE4", VA = "0xE85DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xE85F4C", Offset = "0xE85F4C", VA = "0xE85F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InstaCam Instance;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons m_takeShotBtn;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public NVRButtons m_pauseTimeBtn;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_holdTakeShotForGif;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_recordGifAfter;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_camera;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraToTexture m_camToTex;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2Int[] m_resolutions;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NVRInteractableItem m_interactable;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand m_hand;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material m_previewMaterial;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture m_fullScreenRenderTex;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_fullScreenOutputter;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E16E8", Offset = "0x8E16E8")]
	public bool m_showOnFlatScreen;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E1730", Offset = "0x8E1730")]
	public bool m_alwaysUpdatePreview;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro m_infoLabel;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1778", Offset = "0x8E1778")]
	public bool m_dimPreviewWhenNotHeld;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MPB_Texture m_previewMPB;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color m_dimmedColour;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animation m_interactionAnim;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationClip m_animClipOnBeginInteraction;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationClip m_animClipOnEndInteraction;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem m_vfxOnFlip;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform[] m_flipForRightHand;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E17B0", Offset = "0x8E17B0")]
	public TextMeshPro m_shutterLabel;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshPro m_aspectLabel;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E17E8", Offset = "0x8E17E8")]
	public FloatRange m_zoomRange;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_zoomSpeed;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve m_zoomCurve;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int m_zoomSteps;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] m_zoomIndicators;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform m_lens;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform m_lensMinLoc;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform m_lensMaxLoc;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1820", Offset = "0x8E1820")]
	public Transform m_myCamLocator;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_placableCameraPrefab;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TransformMatcher m_camTransfomMatcher;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E1858", Offset = "0x8E1858")]
	public float m_positionLerp;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E1898", Offset = "0x8E1898")]
	public float m_rotationLerp;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E18D8", Offset = "0x8E18D8")]
	public bool m_snapBetweenCameras;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1920", Offset = "0x8E1920")]
	public LayerMask m_defaultLayerMask;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LayerMask m_gameUILayerMask;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public LayerMask m_allUILayerMask;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public StringEvent OnPhotoTaken;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public string m_latestPhotoPath;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int m_currentRes;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool m_wasAttached;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float m_btnDownAt;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1968", Offset = "0x8E1968")]
	public string m_sfxTakePhoto;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject m_sfxTakePhotoGO;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string m_sfxZoomIn1Shot;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string m_sfxZoomOut1Shot;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string m_sfxZoomInStart;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string m_sfxZoomInStop;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string m_sfxZoomOutStart;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public string m_sfxZoomOutStop;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject m_sfxZoomGO;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string m_sfxFlipModel;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E19A0", Offset = "0x8E19A0")]
	public string m_strKeyNotHeld;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string m_strKeyTakePhotoTip;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string m_strKeyZoomTipPrefix;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string m_strKeyPauseTimeTip;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string m_strKeyTimeIsPaused;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string m_strKeySaving;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public string m_strKeySaved;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int m_tipId;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Zoom m_zoomState;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E19D8", Offset = "0x8E19D8")]
	public Animation m_anim;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AnimationClip m_printAnimClip;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform m_photoRoot;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject m_photoPrefab;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public int m_maxPhotos;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private CircularPrefabPool m_photos;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<Texture2D> m_photoTextures;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Coroutine m_playingAnimCR;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string m_infoMessage;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float m_infoMessageTempExpires;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1A10", Offset = "0x8E1A10")]
	public int m_gifWidth;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int m_gifHeight;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public int m_gifFps;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E1A48", Offset = "0x8E1A48")]
	public int m_gifQuality;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public int m_gifMaxLen;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Recorder m_gifRecorder;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private State m_gifState;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float m_gifProgress;

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0xFC952C", Offset = "0xFC952C", VA = "0xFC952C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EF764", Offset = "0x8EF764")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0xFC957C", Offset = "0xFC957C", VA = "0xFC957C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0xFC967C", Offset = "0xFC967C", VA = "0xFC967C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0xFC9984", Offset = "0xFC9984", VA = "0xFC9984")]
	public static void InstantiateMe()
	{
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0xFC9B8C", Offset = "0xFC9B8C", VA = "0xFC9B8C")]
	public static void PutInPlayersView()
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0xFC9D6C", Offset = "0xFC9D6C", VA = "0xFC9D6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF778", Offset = "0x8EF778")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0xFC9DE4", Offset = "0xFC9DE4", VA = "0xFC9DE4")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0xFCA308", Offset = "0xFCA308", VA = "0xFCA308")]
	private void OnEndInteraction()
	{
	}

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0xFC9F08", Offset = "0xFC9F08", VA = "0xFC9F08")]
	private void SetupForHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0xFCA710", Offset = "0xFCA710", VA = "0xFCA710")]
	public static string GetTimestampedFilename()
	{
		return null;
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0xFCA7CC", Offset = "0xFCA7CC", VA = "0xFCA7CC")]
	public static string GetFileFolder()
	{
		return null;
	}

	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0xFCA83C", Offset = "0xFCA83C", VA = "0xFCA83C")]
	public static string GetFilePathNoExtension()
	{
		return null;
	}

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0xFCA898", Offset = "0xFCA898", VA = "0xFCA898")]
	private void SetLabel()
	{
	}

	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0xFCA89C", Offset = "0xFCA89C", VA = "0xFCA89C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EF7D8", Offset = "0x8EF7D8")]
	public void TakeShotNow()
	{
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0xFCA8A4", Offset = "0xFCA8A4", VA = "0xFCA8A4")]
	public void TakeShotNow(string filenameSuffix)
	{
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0xFCAD28", Offset = "0xFCAD28", VA = "0xFCAD28")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EF7F0", Offset = "0x8EF7F0")]
	public void NextResolution()
	{
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0xFCAD88", Offset = "0xFCAD88", VA = "0xFCAD88")]
	private void SetResolution(int idx)
	{
	}

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0xFCAE4C", Offset = "0xFCAE4C", VA = "0xFCAE4C")]
	public void SetZoom(float amt)
	{
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0xFCB10C", Offset = "0xFCB10C", VA = "0xFCB10C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EF808", Offset = "0x8EF808")]
	public void ZoomIn()
	{
	}

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0xFCB1C4", Offset = "0xFCB1C4", VA = "0xFCB1C4")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EF820", Offset = "0x8EF820")]
	public void ZoomOut()
	{
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0xFCB27C", Offset = "0xFCB27C", VA = "0xFCB27C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0xFCB9EC", Offset = "0xFCB9EC", VA = "0xFCB9EC")]
	private void PauseTime()
	{
	}

	[Token(Token = "0x6001E95")]
	[Address(RVA = "0xFCA518", Offset = "0xFCA518", VA = "0xFCA518")]
	private void ResumeTime()
	{
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0xFCBD90", Offset = "0xFCBD90", VA = "0xFCBD90")]
	private void SetCameraLoc(Transform t)
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0xFCBF68", Offset = "0xFCBF68", VA = "0xFCBF68")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF838", Offset = "0x8EF838")]
	public void AddCameraLocation()
	{
	}

	[Token(Token = "0x6001E98")]
	[Address(RVA = "0xFCC118", Offset = "0xFCC118", VA = "0xFCC118")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF880", Offset = "0x8EF880")]
	public void NextCameraLocation()
	{
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0xFCC308", Offset = "0xFCC308", VA = "0xFCC308")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF8C8", Offset = "0x8EF8C8")]
	public void SetLayerMaskHideUI()
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0xFCC344", Offset = "0xFCC344", VA = "0xFCC344")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF910", Offset = "0x8EF910")]
	public void SetLayerMaskShowGameUI()
	{
	}

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0xFCC380", Offset = "0xFCC380", VA = "0xFCC380")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EF958", Offset = "0x8EF958")]
	public void SetLayerMaskShowAllUI()
	{
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0xFCC3BC", Offset = "0xFCC3BC", VA = "0xFCC3BC")]
	private void SetupPrinting()
	{
	}

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0xFCAA30", Offset = "0xFCAA30", VA = "0xFCAA30")]
	private void PrintPhoto(Texture2D tex, CameraToTexture.SaveLocation saveLoc)
	{
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0xFCC47C", Offset = "0xFCC47C", VA = "0xFCC47C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EF9A0", Offset = "0x8EF9A0")]
	private IEnumerator PrintAnimCR()
	{
		return null;
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0xFCC4F4", Offset = "0xFCC4F4", VA = "0xFCC4F4")]
	private void DetachCurrentPhoto()
	{
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0xFCA640", Offset = "0xFCA640", VA = "0xFCA640")]
	private void SetInfo(string txt)
	{
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0xFCA560", Offset = "0xFCA560", VA = "0xFCA560")]
	private void SetTempInfo(string txt, float duration)
	{
	}

	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0xFCBAA8", Offset = "0xFCBAA8", VA = "0xFCBAA8")]
	private void UpdateInfoScreen()
	{
	}

	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0xFCA10C", Offset = "0xFCA10C", VA = "0xFCA10C")]
	private void SetInfoScreenTip()
	{
	}

	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0xFCBB4C", Offset = "0xFCBB4C", VA = "0xFCBB4C")]
	public void StartRecordingGif()
	{
	}

	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0xFCBD18", Offset = "0xFCBD18", VA = "0xFCBD18")]
	public void StopRecordingGif()
	{
	}

	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0xFCC5EC", Offset = "0xFCC5EC", VA = "0xFCC5EC")]
	private void OnGifSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0xFCC600", Offset = "0xFCC600", VA = "0xFCC600")]
	private void OnGifSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0xFCC60C", Offset = "0xFCC60C", VA = "0xFCC60C")]
	public InstaCam()
	{
	}
}
[Token(Token = "0x2000458")]
public class PlaceableCamera : StaticMapped<PlaceableCamera>
{
	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_label;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_fov;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NVRInteractableItem m_interactable;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InstaCam m_instaCam;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_autoSetName;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_wasAttachedLastFrame;

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x125CA58", Offset = "0x125CA58", VA = "0x125CA58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x125CBB8", Offset = "0x125CBB8", VA = "0x125CBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0x125CD74", Offset = "0x125CD74", VA = "0x125CD74")]
	public void Save()
	{
	}

	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0x125CF10", Offset = "0x125CF10", VA = "0x125CF10")]
	public void Load()
	{
	}

	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0x125D0FC", Offset = "0x125D0FC", VA = "0x125D0FC")]
	public PlaceableCamera()
	{
	}
}
[Token(Token = "0x2000459")]
public class PrintedPhoto : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D729C", Offset = "0x8D729C")]
	private sealed class <LifetimeCR>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrintedPhoto <>4__this;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x10668E8", Offset = "0x10668E8", VA = "0x10668E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x1066930", Offset = "0x1066930", VA = "0x1066930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1066538", Offset = "0x1066538", VA = "0x1066538")]
		[DebuggerHidden]
		public <LifetimeCR>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1066564", Offset = "0x1066564", VA = "0x1066564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x1066568", Offset = "0x1066568", VA = "0x1066568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x10668F0", Offset = "0x10668F0", VA = "0x10668F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_bg;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_photoImage;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MPB_Texture m_photoMPB;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_label;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_border;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_chin;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_aspect;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_popForce;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 m_twistForce;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody m_rb;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NVRInteractableItem m_nvrii;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem m_disappearFx;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_sfxDisappear;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_lifetime;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Collider m_collider;

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0x128DF80", Offset = "0x128DF80", VA = "0x128DF80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0x128E170", Offset = "0x128E170", VA = "0x128E170")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0x128DF84", Offset = "0x128DF84", VA = "0x128DF84")]
	private void Resize()
	{
	}

	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0x128E1CC", Offset = "0x128E1CC", VA = "0x128E1CC")]
	public void AttachTo(Transform newParent)
	{
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x128E2CC", Offset = "0x128E2CC", VA = "0x128E2CC")]
	public void Detach()
	{
	}

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x128E448", Offset = "0x128E448", VA = "0x128E448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFAA0", Offset = "0x8EFAA0")]
	private IEnumerator LifetimeCR()
	{
		return null;
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x128E4C0", Offset = "0x128E4C0", VA = "0x128E4C0")]
	public void SetTexture(Texture2D tex)
	{
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x128E54C", Offset = "0x128E54C", VA = "0x128E54C")]
	public PrintedPhoto()
	{
	}
}
[Token(Token = "0x200045B")]
public class TriggerOnNVRControllerButton : Vitei.Trigger
{
	[Serializable]
	[Token(Token = "0x200045C")]
	public class Pair
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VROpenXrRuntime openXRRuntime;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Util.VRControllerType controller;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disable;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons button;

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xEB3B54", Offset = "0xEB3B54", VA = "0xEB3B54")]
		public Pair()
		{
		}
	}

	[Token(Token = "0x200045D")]
	public enum Handedness
	{
		[Token(Token = "0x40018F6")]
		Right,
		[Token(Token = "0x40018F7")]
		Left
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72AC", Offset = "0x8D72AC")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VRControllerType ctrlType;

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xEB3AC4", Offset = "0xEB3AC4", VA = "0xEB3AC4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xEB3ACC", Offset = "0xEB3ACC", VA = "0xEB3ACC")]
		internal bool <TrySetup>b__1(Pair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72BC", Offset = "0x8D72BC")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Util.VROpenXrRuntime openXRRuntime;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xEB3B04", Offset = "0xEB3B04", VA = "0xEB3B04")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xEB3B0C", Offset = "0xEB3B0C", VA = "0xEB3B0C")]
		internal bool <TrySetup>b__0(Pair x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRHand m_hand;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons m_triggerButton;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_disableForOpenXR;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Pair> m_openXrOverrides;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Handedness m_handIfUndefined;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool m_canTriggerWhenHandAttached;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool m_canTrigger;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool m_isSetup;

	[Token(Token = "0x6001EC9")]
	[Address(RVA = "0x10BF228", Offset = "0x10BF228", VA = "0x10BF228")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ECA")]
	[Address(RVA = "0x10BF388", Offset = "0x10BF388", VA = "0x10BF388")]
	private void TrySetup()
	{
	}

	[Token(Token = "0x6001ECB")]
	[Address(RVA = "0x10BFAAC", Offset = "0x10BFAAC", VA = "0x10BFAAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001ECC")]
	[Address(RVA = "0x10BFBE4", Offset = "0x10BFBE4", VA = "0x10BFBE4")]
	public TriggerOnNVRControllerButton()
	{
	}
}
[Token(Token = "0x2000460")]
public class LinearMovement : MonoBehaviour
{
	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_duration;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_velocity;

	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0x1775D68", Offset = "0x1775D68", VA = "0x1775D68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0x1775DBC", Offset = "0x1775DBC", VA = "0x1775DBC")]
	public LinearMovement()
	{
	}
}
[Token(Token = "0x2000461")]
public class LocalizedTextMesh : MonoBehaviour
{
	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyValue;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_cachedDefaultWrapping;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_defaultWrapping;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool m_wordWrapCJK;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool localizeFontOnly;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_overrideFontAndStyle;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1A64", Offset = "0x8E1A64")]
	public TMP_FontAsset m_englishFont;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[@EnumFlags]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1A9C", Offset = "0x8E1A9C")]
	public FontStyles m_englishStyle;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1AE8", Offset = "0x8E1AE8")]
	public TMP_FontAsset m_chineseSimplifiedFont;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[@EnumFlags]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1B20", Offset = "0x8E1B20")]
	public FontStyles m_chineseSimplifiedFontStyle;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1B6C", Offset = "0x8E1B6C")]
	public TMP_FontAsset m_chineseTraditionalFont;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1BA4", Offset = "0x8E1BA4")]
	[@EnumFlags]
	public FontStyles m_chineseTraditionalFontStyle;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1BF0", Offset = "0x8E1BF0")]
	public TMP_FontAsset m_japaneseFont;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1C28", Offset = "0x8E1C28")]
	[@EnumFlags]
	public FontStyles m_japaneseStyle;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1C74", Offset = "0x8E1C74")]
	public TMP_FontAsset m_koreanFont;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1CAC", Offset = "0x8E1CAC")]
	[@EnumFlags]
	public FontStyles m_koreanStyle;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1CF8", Offset = "0x8E1CF8")]
	public TMP_FontAsset m_russianFont;

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0x177766C", Offset = "0x177766C", VA = "0x177766C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0x1777C14", Offset = "0x1777C14", VA = "0x1777C14")]
	public void Start()
	{
	}

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0x1777670", Offset = "0x1777670", VA = "0x1777670")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EFB50", Offset = "0x8EFB50")]
	public void Localize()
	{
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0x1777C18", Offset = "0x1777C18", VA = "0x1777C18")]
	public LocalizedTextMesh()
	{
	}
}
[Token(Token = "0x2000462")]
public class NVRStickEventTrigger : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	private enum SuperBool
	{
		[Token(Token = "0x400191C")]
		Undefined = -1,
		[Token(Token = "0x400191D")]
		False,
		[Token(Token = "0x400191E")]
		True
	}

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chirality m_chirality;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8E1D30", Offset = "0x8E1D30")]
	private NVRHand m_hand;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_canTriggerWhilstInteracting;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_triggerAt;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_requireClickOnVive;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E1D90", Offset = "0x8E1D90")]
	public float m_triggerAtOnViveClick;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SuperBool m_requireClick;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_stickLabel;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUp;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnRight;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDown;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnLeft;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_axisWas;

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0x132D2E8", Offset = "0x132D2E8", VA = "0x132D2E8")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x132D420", Offset = "0x132D420", VA = "0x132D420")]
	public NVRHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x132D428", Offset = "0x132D428", VA = "0x132D428")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x132D58C", Offset = "0x132D58C", VA = "0x132D58C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x132D880", Offset = "0x132D880", VA = "0x132D880")]
	public NVRStickEventTrigger()
	{
	}
}
[Token(Token = "0x2000464")]
public class ObjectSensorVisualise : MonoBehaviour
{
	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnyObjectSensor sensor;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color on;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color off;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MPB_Colour mpb;

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0xEC208C", Offset = "0xEC208C", VA = "0xEC208C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0xEC2144", Offset = "0xEC2144", VA = "0xEC2144")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0xEC21C0", Offset = "0xEC21C0", VA = "0xEC21C0")]
	public ObjectSensorVisualise()
	{
	}
}
[Token(Token = "0x2000465")]
public class PlatformSpecificEnable : MonoBehaviour
{
	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_objects;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EnumFlagsAttribute]
	public RuntimePlatform m_enableFor;

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x125D5D0", Offset = "0x125D5D0", VA = "0x125D5D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x125D60C", Offset = "0x125D60C", VA = "0x125D60C")]
	public PlatformSpecificEnable()
	{
	}
}
[Token(Token = "0x2000466")]
public class PlayerMover : MonoBehaviour
{
	[Token(Token = "0x2000467")]
	public enum InputMethod
	{
		[Token(Token = "0x4001962")]
		GripButton,
		[Token(Token = "0x4001963")]
		GripForce,
		[Token(Token = "0x4001964")]
		Touchpad
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72CC", Offset = "0x8D72CC")]
	private sealed class <Setup>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Util.VRControllerType <controllerType>5__2;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x1064278", Offset = "0x1064278", VA = "0x1064278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x10642C0", Offset = "0x10642C0", VA = "0x10642C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1063CC0", Offset = "0x1063CC0", VA = "0x1063CC0")]
		[DebuggerHidden]
		public <Setup>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1063CEC", Offset = "0x1063CEC", VA = "0x1063CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1063CF0", Offset = "0x1063CF0", VA = "0x1063CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1064280", Offset = "0x1064280", VA = "0x1064280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72DC", Offset = "0x8D72DC")]
	private sealed class <Spin>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover <>4__this;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dur;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ang;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x106458C", Offset = "0x106458C", VA = "0x106458C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x10645D4", Offset = "0x10645D4", VA = "0x10645D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x10642C8", Offset = "0x10642C8", VA = "0x10642C8")]
		[DebuggerHidden]
		public <Spin>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x10642F4", Offset = "0x10642F4", VA = "0x10642F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x10642F8", Offset = "0x10642F8", VA = "0x10642F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1064594", Offset = "0x1064594", VA = "0x1064594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand m_lh;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRHand m_rh;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NVRPlayer m_player;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_lhStartPos;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_rhStartPos;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_lhStartPosLS;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_rhStartPosLS;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_refStartRoot;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_refStartPlayer;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform m_refEndRoot;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform m_refEndPlayer;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_move;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool m_rotate;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool m_scale;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public InputMethod m_inputMethod;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_gripForceTriggerPoint;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_pulseMag;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ushort m_pulseLen;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool m_canReset;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public NVRButtons m_resetViewButtonLeft;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NVRButtons m_resetViewButtonRight;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_maxRadiusFromOrigin;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1DD8", Offset = "0x8E1DD8")]
	public bool m_dimSkyboxOnMove;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock m_mpbSkybox;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MeshRenderer m_skyboxRenderer;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_skyboxBrightProp;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock m_mpbStars;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MeshRenderer m_starsRenderer;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color m_starsColour;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_skyboxMinBright;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_skyboxMaxBright;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_skyboxBrightness;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float m_skyboxFadeOutRate;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_skyboxFadeInRate;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_skyboxLinearMin;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_skyboxRotMin;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool m_initialised;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 m_posLastFrame;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion m_rotLastFrame;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float m_l_gripAxisLastFrame;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool m_l_gripHeldThisFrame;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool m_l_gripHeldLastFrame;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float m_r_gripAxisLastFrame;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_r_gripHeldThisFrame;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool m_r_gripHeldLastFrame;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool Grip_L_JustDown;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	private bool Grip_L_JustUp;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool Grip_L_Held;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	private bool Grip_R_JustDown;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
	private bool Grip_R_JustUp;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
	private bool Grip_R_Held;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1E10", Offset = "0x8E1E10")]
	public bool m_canSpin;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1E48", Offset = "0x8E1E48")]
	public Transform m_spinAround;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1E80", Offset = "0x8E1E80")]
	public float m_spinAngle;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1EB8", Offset = "0x8E1EB8")]
	public float m_spinDuration;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float triggerAt;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector2 m_lhAxisWas;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector2 m_rhAxisWas;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform m_spinRoot;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool m_isSpinning;

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x1269FD0", Offset = "0x1269FD0", VA = "0x1269FD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x126A008", Offset = "0x126A008", VA = "0x126A008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFB68", Offset = "0x8EFB68")]
	private IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0x126A080", Offset = "0x126A080", VA = "0x126A080")]
	private void RecordStartVars()
	{
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0x126A394", Offset = "0x126A394", VA = "0x126A394")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0x126B3C0", Offset = "0x126B3C0", VA = "0x126B3C0")]
	private void UpdateSpin()
	{
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0x126B5F4", Offset = "0x126B5F4", VA = "0x126B5F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFBC8", Offset = "0x8EFBC8")]
	private IEnumerator Spin(float ang, float dur)
	{
		return null;
	}

	[Token(Token = "0x6001EE8")]
	[Address(RVA = "0x126B680", Offset = "0x126B680", VA = "0x126B680")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001EE9")]
	[Address(RVA = "0x126B6BC", Offset = "0x126B6BC", VA = "0x126B6BC")]
	public PlayerMover()
	{
	}
}
[Token(Token = "0x200046A")]
public class RayastLine : MonoBehaviour
{
	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shapes.Line m_line;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_rayLength;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_rayStartOffset;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 m_rayDirWorld;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_hideIfNoHit;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_hitObject;

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x1297D88", Offset = "0x1297D88", VA = "0x1297D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x1298034", Offset = "0x1298034", VA = "0x1298034")]
	public RayastLine()
	{
	}
}
[Token(Token = "0x200046B")]
public class SFX : MonoBehaviour
{
	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject ms_stretchSound;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject ms_stretchSoundReservationHolder;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CircularPrefabPool ms_pool;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool ms_initialised;

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x11A9304", Offset = "0x11A9304", VA = "0x11A9304")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8EFCC8", Offset = "0x8EFCC8")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0x11A937C", Offset = "0x11A937C", VA = "0x11A937C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0x11A94A8", Offset = "0x11A94A8", VA = "0x11A94A8")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x119DB58", Offset = "0x119DB58", VA = "0x119DB58")]
	public static GameObject GetTempGameObject(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x11A9678", Offset = "0x11A9678", VA = "0x11A9678")]
	public static GameObject ReserveStretchSoundObject(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0x11A96EC", Offset = "0x11A96EC", VA = "0x11A96EC")]
	public static GameObject GetStretchSoundObject(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0x11A9818", Offset = "0x11A9818", VA = "0x11A9818")]
	public SFX()
	{
	}
}
[Token(Token = "0x200046C")]
public class SetStartView : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D72EC", Offset = "0x8D72EC")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetStartView <>4__this;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xEADE3C", Offset = "0xEADE3C", VA = "0xEADE3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xEADE84", Offset = "0xEADE84", VA = "0xEADE84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xEADC68", Offset = "0xEADC68", VA = "0xEADC68")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xEADC94", Offset = "0xEADC94", VA = "0xEADC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xEADC98", Offset = "0xEADC98", VA = "0xEADC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xEADE44", Offset = "0xEADE44", VA = "0xEADE44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001F00")]
	[Address(RVA = "0xEDED08", Offset = "0xEDED08", VA = "0xEDED08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFCDC", Offset = "0x8EFCDC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0xEDED80", Offset = "0xEDED80", VA = "0xEDED80")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8EFD3C", Offset = "0x8EFD3C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EFD3C", Offset = "0x8EFD3C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0xEDEFA8", Offset = "0xEDEFA8", VA = "0xEDEFA8")]
	public SetStartView()
	{
	}
}
[Token(Token = "0x200046E")]
[ExecuteInEditMode]
public class ShaderControllerSphereSetter : MonoBehaviour
{
	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_leftHand;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_rightHand;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_radius;

	[Token(Token = "0x6001F09")]
	[Address(RVA = "0xEDEFB0", Offset = "0xEDEFB0", VA = "0xEDEFB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F0A")]
	[Address(RVA = "0xEDF07C", Offset = "0xEDF07C", VA = "0xEDF07C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0xEDF0E0", Offset = "0xEDF0E0", VA = "0xEDF0E0")]
	public ShaderControllerSphereSetter()
	{
	}
}
[Token(Token = "0x200046F")]
public class SinMover : MonoBehaviour
{
	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_amplitude;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_frequency;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_offset;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_startPos;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 offset;

	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0xEE3D3C", Offset = "0xEE3D3C", VA = "0xEE3D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F0D")]
	[Address(RVA = "0xEE3D78", Offset = "0xEE3D78", VA = "0xEE3D78")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0xEE3E3C", Offset = "0xEE3E3C", VA = "0xEE3E3C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0xEE4034", Offset = "0xEE4034", VA = "0xEE4034")]
	public SinMover()
	{
	}
}
[Token(Token = "0x2000470")]
public class Snappable : MonoBehaviour
{
	[Token(Token = "0x2000471")]
	public enum SnapOutcome
	{
		[Token(Token = "0x40019A2")]
		Nothing,
		[Token(Token = "0x40019A3")]
		ReturnToPrevious,
		[Token(Token = "0x40019A4")]
		SnapToLocation
	}

	[Token(Token = "0x2000472")]
	public interface IDelegate
	{
		[Token(Token = "0x6001F19")]
		SnapOutcome SnappableWantsToPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation);

		[Token(Token = "0x6001F1A")]
		SnapOutcome SnappableWillPlaceAtLocation(Snappable snappable, Vector3 position, Quaternion rotation);

		[Token(Token = "0x6001F1B")]
		void SnappableShowingPreview(Snappable snappable);

		[Token(Token = "0x6001F1C")]
		void SnappableInteractionDidBegin(Snappable snappable);

		[Token(Token = "0x6001F1D")]
		void SnappableInteractionDidEnd(Snappable snappable);
	}

	[Token(Token = "0x2000473")]
	public delegate void OnPickupDelegate();

	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D730C", Offset = "0x8D730C")]
	private sealed class <Settle>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Snappable <>4__this;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <shouldSnap>5__2;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <shouldReset>5__3;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Matrix4x4 <previewMatrix>5__4;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float <flashT>5__5;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 <dropPos>5__6;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion <dropRot>5__7;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 <targetPos>5__8;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion <targetRot>5__9;

		[Token(Token = "0x170003A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xEAEB94", Offset = "0xEAEB94", VA = "0xEAEB94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xEAEBDC", Offset = "0xEAEBDC", VA = "0xEAEBDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xEAE184", Offset = "0xEAE184", VA = "0xEAE184")]
		[DebuggerHidden]
		public <Settle>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xEAE1B0", Offset = "0xEAE1B0", VA = "0xEAE1B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xEAE1B4", Offset = "0xEAE1B4", VA = "0xEAE1B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xEAEB9C", Offset = "0xEAEB9C", VA = "0xEAEB9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1EF0", Offset = "0x8E1EF0")]
	public bool m_snapPosition;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1F28", Offset = "0x8E1F28")]
	public Vector3 m_grid;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1F60", Offset = "0x8E1F60")]
	public Vector3 m_offset;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E1F98", Offset = "0x8E1F98")]
	public bool m_snapRotation;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E1FD0", Offset = "0x8E1FD0")]
	public Vector3 m_rotGrid;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E2008", Offset = "0x8E2008")]
	public Vector3 m_rotOffset;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Bounds m_snapVolume;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_timeToSettle;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool m_settling;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Mesh m_previewMesh;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NVRInteractableItem m_nvri;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnPickupDelegate OnWasPickedUp;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnSettled;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool m_autoGenFullModel;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string m_snapSFX;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string m_snapBlockedSFX;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string m_settledSFX;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string m_settledBlockedSFX;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IDelegate m_delegate;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_errorFlashDur;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_errorFlashFreq;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_currentlyPlacing;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_snappedPosition;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion m_snappedRotation;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SnapOutcome m_snapOutcome;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 m_startPos;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion m_startRot;

	[Token(Token = "0x170003A4")]
	public bool IsSnapped
	{
		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xEE7DB4", Offset = "0xEE7DB4", VA = "0xEE7DB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<bool> OnWillSettle
	{
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xEE7C74", Offset = "0xEE7C74", VA = "0xEE7C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EFDF0", Offset = "0x8EFDF0")]
		add
		{
		}
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xEE7D14", Offset = "0xEE7D14", VA = "0xEE7D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EFE00", Offset = "0x8EFE00")]
		remove
		{
		}
	}

	[Token(Token = "0x6001F13")]
	[Address(RVA = "0xEE7DC4", Offset = "0xEE7DC4", VA = "0xEE7DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F14")]
	[Address(RVA = "0xEE8278", Offset = "0xEE8278", VA = "0xEE8278")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001F15")]
	[Address(RVA = "0xEE86B0", Offset = "0xEE86B0", VA = "0xEE86B0")]
	private void GetSnapped(out Vector3 positionOut, out Quaternion rotationOut)
	{
	}

	[Token(Token = "0x6001F16")]
	[Address(RVA = "0xEE8010", Offset = "0xEE8010", VA = "0xEE8010")]
	private void OnBeginInteraction()
	{
	}

	[Token(Token = "0x6001F17")]
	[Address(RVA = "0xEE8B64", Offset = "0xEE8B64", VA = "0xEE8B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFE10", Offset = "0x8EFE10")]
	private IEnumerator Settle()
	{
		return null;
	}

	[Token(Token = "0x6001F18")]
	[Address(RVA = "0xEE8CF0", Offset = "0xEE8CF0", VA = "0xEE8CF0")]
	public Snappable()
	{
	}
}
[Token(Token = "0x2000475")]
public class TMPFontFallbackChanger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000476")]
	public class FontSetting
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageCode m_langCode;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset m_font;

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xEB0CF8", Offset = "0xEB0CF8", VA = "0xEB0CF8")]
		public FontSetting()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000477")]
	public class FontData
	{
		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset m_font;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<FontSetting> m_fallbacks;

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xEB0AA8", Offset = "0xEB0AA8", VA = "0xEB0AA8")]
		public TMP_FontAsset GetFallbackFor(LanguageCode newLang)
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xEB0B90", Offset = "0xEB0B90", VA = "0xEB0B90")]
		public void ApplyFor(LanguageCode newLang)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xEB0CF0", Offset = "0xEB0CF0", VA = "0xEB0CF0")]
		public FontData()
		{
		}
	}

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FontData[] m_fontData;

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0x11F94A0", Offset = "0x11F94A0", VA = "0x11F94A0")]
	public TMP_FontAsset GetFallbackFontFor(TMP_FontAsset source, LanguageCode langCode)
	{
		return null;
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x11F95BC", Offset = "0x11F95BC", VA = "0x11F95BC")]
	private void LoadedNewLanguage(LanguageCode newLang)
	{
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x11F9638", Offset = "0x11F9638", VA = "0x11F9638")]
	public TMPFontFallbackChanger()
	{
	}
}
[Token(Token = "0x2000478")]
public class TMP_AutosizeMultiple : MonoBehaviour
{
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D731C", Offset = "0x8D731C")]
	private sealed class <ApplyCR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_AutosizeMultiple <>4__this;

		[Token(Token = "0x170003A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xEB0DA0", Offset = "0xEB0DA0", VA = "0xEB0DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xEB0DE8", Offset = "0xEB0DE8", VA = "0xEB0DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xEB0D00", Offset = "0xEB0D00", VA = "0xEB0D00")]
		[DebuggerHidden]
		public <ApplyCR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xEB0D2C", Offset = "0xEB0D2C", VA = "0xEB0D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xEB0D30", Offset = "0xEB0D30", VA = "0xEB0D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xEB0DA8", Offset = "0xEB0DA8", VA = "0xEB0DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] m_texts;

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x11F9640", Offset = "0x11F9640", VA = "0x11F9640")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EFEC0", Offset = "0x8EFEC0")]
	private void Apply()
	{
	}

	[Token(Token = "0x6001F30")]
	[Address(RVA = "0x11F97A4", Offset = "0x11F97A4", VA = "0x11F97A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EFED8", Offset = "0x8EFED8")]
	private IEnumerator ApplyCR()
	{
		return null;
	}

	[Token(Token = "0x6001F31")]
	[Address(RVA = "0x11F981C", Offset = "0x11F981C", VA = "0x11F981C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F32")]
	[Address(RVA = "0x11F9848", Offset = "0x11F9848", VA = "0x11F9848")]
	private void ChangedLanguage()
	{
	}

	[Token(Token = "0x6001F33")]
	[Address(RVA = "0x11F984C", Offset = "0x11F984C", VA = "0x11F984C")]
	public TMP_AutosizeMultiple()
	{
	}
}
[Token(Token = "0x200047A")]
[SelectionBase]
[ExecuteInEditMode]
public class IssueSignpost : MonoBehaviour
{
	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ms_thetaScale;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool ms_showInPlayMode;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public string issueId;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public string issueType;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public string status;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string title;

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Multiline]
	public string description;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string user;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI m_text_header;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshProUGUI m_text_body;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image m_image;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string oldTitle;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string oldDescription;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 oldPosition;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[ReadOnly]
	[HideInInspector]
	public string issueTypeId;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	[HideInInspector]
	public string issueTypeAvatar;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static Dictionary<string, Dictionary<string, string>> ms_availableTransitions;

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0xFD0FB8", Offset = "0xFD0FB8", VA = "0xFD0FB8")]
	public static void SetScaleConstantSmall()
	{
	}

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0xFD1020", Offset = "0xFD1020", VA = "0xFD1020")]
	public static void SetScaleConstantLarge()
	{
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0xFD108C", Offset = "0xFD108C", VA = "0xFD108C")]
	public static void SetScaleRealSmall()
	{
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0xFD10F4", Offset = "0xFD10F4", VA = "0xFD10F4")]
	public static void SetScaleRealLarge()
	{
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0xFD115C", Offset = "0xFD115C", VA = "0xFD115C")]
	public static void SetAllVisibility(bool b)
	{
	}

	[Token(Token = "0x6001F3F")]
	[Address(RVA = "0xFD125C", Offset = "0xFD125C", VA = "0xFD125C")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6001F40")]
	[Address(RVA = "0xFD1260", Offset = "0xFD1260", VA = "0xFD1260")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001F41")]
	[Address(RVA = "0xFD12CC", Offset = "0xFD12CC", VA = "0xFD12CC")]
	public bool IsDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F42")]
	[Address(RVA = "0xFD1348", Offset = "0xFD1348", VA = "0xFD1348")]
	public void MakeClean()
	{
	}

	[Token(Token = "0x6001F43")]
	[Address(RVA = "0xFD13A8", Offset = "0xFD13A8", VA = "0xFD13A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F44")]
	[Address(RVA = "0xFD144C", Offset = "0xFD144C", VA = "0xFD144C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F45")]
	[Address(RVA = "0xFD12C8", Offset = "0xFD12C8", VA = "0xFD12C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8EFF88", Offset = "0x8EFF88")]
	public void HideChildren()
	{
	}

	[Token(Token = "0x6001F46")]
	[Address(RVA = "0xFD1450", Offset = "0xFD1450", VA = "0xFD1450")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8EFFC0", Offset = "0x8EFFC0")]
	public void ShowChildren()
	{
	}

	[Token(Token = "0x6001F47")]
	[Address(RVA = "0xFD1454", Offset = "0xFD1454", VA = "0xFD1454")]
	public IssueSignpost()
	{
	}
}
[Token(Token = "0x200047B")]
public class TextFittingSprite : MonoBehaviour
{
	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_sprite;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_text;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_scaleVal;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_padding;

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x12002C0", Offset = "0x12002C0", VA = "0x12002C0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8EFFF8", Offset = "0x8EFFF8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x1200318", Offset = "0x1200318", VA = "0x1200318")]
	public TextFittingSprite()
	{
	}
}
[Token(Token = "0x200047C")]
public class Texticle : MonoBehaviour
{
	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7364", Offset = "0x8D7364")]
	private sealed class <FitAfter1Frame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texticle <>4__this;

		[Token(Token = "0x170003A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xEB1C54", Offset = "0xEB1C54", VA = "0xEB1C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xEB1C9C", Offset = "0xEB1C9C", VA = "0xEB1C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xEB1BAC", Offset = "0xEB1BAC", VA = "0xEB1BAC")]
		[DebuggerHidden]
		public <FitAfter1Frame>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xEB1BD8", Offset = "0xEB1BD8", VA = "0xEB1BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xEB1BDC", Offset = "0xEB1BDC", VA = "0xEB1BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xEB1C5C", Offset = "0xEB1C5C", VA = "0xEB1C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7374", Offset = "0x8D7374")]
	private sealed class <FaceCamera>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texticle <>4__this;

		[Token(Token = "0x170003AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xEB1B5C", Offset = "0xEB1B5C", VA = "0xEB1B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xEB1BA4", Offset = "0xEB1BA4", VA = "0xEB1BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xEB19EC", Offset = "0xEB19EC", VA = "0xEB19EC")]
		[DebuggerHidden]
		public <FaceCamera>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xEB1A18", Offset = "0xEB1A18", VA = "0xEB1A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xEB1A1C", Offset = "0xEB1A1C", VA = "0xEB1A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xEB1B64", Offset = "0xEB1B64", VA = "0xEB1B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_label;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip m_shortAnim;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip m_longAnim;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip m_staticAnim;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextFittingSprite m_textFitter;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform m_faceCamera;

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x10B131C", Offset = "0x10B131C", VA = "0x10B131C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x10B13B0", Offset = "0x10B13B0", VA = "0x10B13B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F0010", Offset = "0x8F0010")]
	private IEnumerator FitAfter1Frame()
	{
		return null;
	}

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x10B1428", Offset = "0x10B1428", VA = "0x10B1428")]
	public void Go()
	{
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x10B147C", Offset = "0x10B147C", VA = "0x10B147C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F0070", Offset = "0x8F0070")]
	private IEnumerator FaceCamera()
	{
		return null;
	}

	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x10B14F4", Offset = "0x10B14F4", VA = "0x10B14F4")]
	public Texticle()
	{
	}
}
[Token(Token = "0x200047F")]
public class Texticles : MonoBehaviour
{
	[Token(Token = "0x2000480")]
	public enum Style
	{
		[Token(Token = "0x40019DF")]
		Standard,
		[Token(Token = "0x40019E0")]
		SpeechBubble,
		[Token(Token = "0x40019E1")]
		ThoughtBubble
	}

	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7384", Offset = "0x8D7384")]
	private sealed class <LinearMove>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform texticle;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 from;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 to;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool is2D;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__2;

		[Token(Token = "0x170003AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xEB1EA0", Offset = "0xEB1EA0", VA = "0xEB1EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xEB1EE8", Offset = "0xEB1EE8", VA = "0xEB1EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xEB1CA4", Offset = "0xEB1CA4", VA = "0xEB1CA4")]
		[DebuggerHidden]
		public <LinearMove>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xEB1CD0", Offset = "0xEB1CD0", VA = "0xEB1CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xEB1CD4", Offset = "0xEB1CD4", VA = "0xEB1CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xEB1EA8", Offset = "0xEB1EA8", VA = "0xEB1EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texticles Instance;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabStandard;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_prefabSpeechBubble;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_prefabThoughtBubble;

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x10B14FC", Offset = "0x10B14FC", VA = "0x10B14FC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F0170", Offset = "0x8F0170")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x10B154C", Offset = "0x10B154C", VA = "0x10B154C")]
	public static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x10B164C", Offset = "0x10B164C", VA = "0x10B164C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x10B16A0", Offset = "0x10B16A0", VA = "0x10B16A0")]
	public static void Do(Vector3 pos, string text)
	{
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x10B171C", Offset = "0x10B171C", VA = "0x10B171C")]
	public static Texticle Do(Vector3 pos, string text, Color col, Style style = Style.Standard, float scale = 1f, bool doLongAnim = false)
	{
		return null;
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x10B1B14", Offset = "0x10B1B14", VA = "0x10B1B14")]
	public static Texticle Do(Vector3 posFrom, Vector3 posTo, int value, Color col, Style style = Style.Standard, float scale = 1f, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x10B1C18", Offset = "0x10B1C18", VA = "0x10B1C18")]
	public static Texticle Do(Vector3 posFrom, Vector3 posTo, string text, Color col, Style style = Style.Standard, float scale = 1f, [Optional] Transform parent, bool is2D = false)
	{
		return null;
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x10B20AC", Offset = "0x10B20AC", VA = "0x10B20AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F0184", Offset = "0x8F0184")]
	private IEnumerator LinearMove(Transform texticle, Vector3 from, Vector3 to, float duration, bool is2D = false)
	{
		return null;
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x10B2184", Offset = "0x10B2184", VA = "0x10B2184")]
	public Texticles()
	{
	}
}
[Token(Token = "0x2000482")]
public class TriggerOnMouseDown : Vitei.Trigger
{
	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x10BF220", Offset = "0x10BF220", VA = "0x10BF220")]
	public TriggerOnMouseDown()
	{
	}
}
[Token(Token = "0x2000483")]
public class TriggerOnNVRStick : Vitei.Trigger
{
	[Token(Token = "0x2000484")]
	public enum Dir
	{
		[Token(Token = "0x40019F0")]
		Up,
		[Token(Token = "0x40019F1")]
		Down,
		[Token(Token = "0x40019F2")]
		Left,
		[Token(Token = "0x40019F3")]
		Right
	}

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Chirality m_hand;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "ConditionalShowEnumAttribute", RVA = "0x8E2130", Offset = "0x8E2130")]
	private NVRHand m_nvrHand;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dir m_direction;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_triggerAt;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 m_axisWas;

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x10BFBF4", Offset = "0x10BFBF4", VA = "0x10BFBF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x10BFCD4", Offset = "0x10BFCD4", VA = "0x10BFCD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x10BFE9C", Offset = "0x10BFE9C", VA = "0x10BFE9C")]
	public void SetHand(NVRHand hand)
	{
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x10BFEF4", Offset = "0x10BFEF4", VA = "0x10BFEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0x10C0070", Offset = "0x10C0070", VA = "0x10C0070")]
	public TriggerOnNVRStick()
	{
	}
}
[Token(Token = "0x2000485")]
public class UserBugReporter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7394", Offset = "0x8D7394")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__13_0;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<char, char> <>9__17_0;

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xEB95F8", Offset = "0xEB95F8", VA = "0xEB95F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xEB9600", Offset = "0xEB9600", VA = "0xEB9600")]
		internal bool <SendBugAsEmail>b__13_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xEB9608", Offset = "0xEB9608", VA = "0xEB9608")]
		internal char <Rot13>b__17_0(char s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_defaultButtonText;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button m_submitButton;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_submitButtonText;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_outputText;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_tempLogFilePath;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_bugId;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_toEmail;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string m_senderEmail;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_senderPass;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string subject;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8E2190", Offset = "0x8E2190")]
	public string body;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_sending;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string PlayerName;

	[Token(Token = "0x6001F71")]
	[Address(RVA = "0xEA0F04", Offset = "0xEA0F04", VA = "0xEA0F04")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x8F0234", Offset = "0x8F0234")]
	public void SendBugAsEmail()
	{
	}

	[Token(Token = "0x6001F72")]
	[Address(RVA = "0xEA1DC4", Offset = "0xEA1DC4", VA = "0xEA1DC4")]
	private void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x6001F73")]
	[Address(RVA = "0xEA1F68", Offset = "0xEA1F68", VA = "0xEA1F68")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001F74")]
	[Address(RVA = "0xEA1F94", Offset = "0xEA1F94", VA = "0xEA1F94")]
	private void Revert()
	{
	}

	[Token(Token = "0x6001F75")]
	[Address(RVA = "0xEA1C34", Offset = "0xEA1C34", VA = "0xEA1C34")]
	private static string Rot13(string input)
	{
		return null;
	}

	[Token(Token = "0x6001F76")]
	[Address(RVA = "0xEA2010", Offset = "0xEA2010", VA = "0xEA2010")]
	public UserBugReporter()
	{
	}
}
[Token(Token = "0x2000487")]
public class VFX : MonoBehaviour
{
	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0x13F1664", Offset = "0x13F1664", VA = "0x13F1664")]
	public static GameObject Spawn(GameObject prefab, Transform t, bool parentToTransform = false)
	{
		return null;
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x13F1778", Offset = "0x13F1778", VA = "0x13F1778")]
	public static GameObject Spawn(GameObject prefab, Transform t, Vector3 localOffset, bool parentToTransform = false)
	{
		return null;
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x13F1990", Offset = "0x13F1990", VA = "0x13F1990")]
	public static GameObject Spawn(GameObject prefab, Vector3 p)
	{
		return null;
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x13F1A80", Offset = "0x13F1A80", VA = "0x13F1A80")]
	public static GameObject Spawn(GameObject prefab, Vector3 pos, Vector3 fwd)
	{
		return null;
	}

	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x13F1B8C", Offset = "0x13F1B8C", VA = "0x13F1B8C")]
	public VFX()
	{
	}
}
[Token(Token = "0x2000488")]
public class VersionNumberNamed : MonoBehaviour
{
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D73A4", Offset = "0x8D73A4")]
	private sealed class <UpdateTimeCR>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VersionNumberNamed <>4__this;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitForOneSecond>5__2;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xEBB060", Offset = "0xEBB060", VA = "0xEBB060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xEBB0A8", Offset = "0xEBB0A8", VA = "0xEBB0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xEBACC8", Offset = "0xEBACC8", VA = "0xEBACC8")]
		[DebuggerHidden]
		public <UpdateTimeCR>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xEBACF4", Offset = "0xEBACF4", VA = "0xEBACF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xEBACF8", Offset = "0xEBACF8", VA = "0xEBACF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xEBB068", Offset = "0xEBB068", VA = "0xEBB068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E21A0", Offset = "0x8E21A0")]
	public int id;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string versionString;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DateTime buildDate;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text tmpro;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] BuildNames;

	[Token(Token = "0x170003AF")]
	public string BuildDate
	{
		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x13F5F14", Offset = "0x13F5F14", VA = "0x13F5F14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x13F6008", Offset = "0x13F6008", VA = "0x13F6008")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F82")]
	[Address(RVA = "0x13F681C", Offset = "0x13F681C", VA = "0x13F681C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F024C", Offset = "0x8F024C")]
	private IEnumerator UpdateTimeCR()
	{
		return null;
	}

	[Token(Token = "0x6001F83")]
	[Address(RVA = "0x13F6894", Offset = "0x13F6894", VA = "0x13F6894")]
	public VersionNumberNamed()
	{
	}
}
[Token(Token = "0x200048A")]
public class VisibilityList : MonoBehaviour
{
	[Token(Token = "0x200048B")]
	public enum Mode
	{
		[Token(Token = "0x4001A18")]
		ObjectActivated,
		[Token(Token = "0x4001A19")]
		RendererEnabled
	}

	[Serializable]
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D73B4", Offset = "0x8D73B4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, Renderer> <>9__13_0;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, Renderer> <>9__13_1;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<GameObject, Renderer> <>9__14_0;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<GameObject, Renderer> <>9__14_1;

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xEBB114", Offset = "0xEBB114", VA = "0xEBB114")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xEBB11C", Offset = "0xEBB11C", VA = "0xEBB11C")]
		internal Renderer <Enter>b__13_0(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xEBB170", Offset = "0xEBB170", VA = "0xEBB170")]
		internal Renderer <Enter>b__13_1(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xEBB1C4", Offset = "0xEBB1C4", VA = "0xEBB1C4")]
		internal Renderer <Exit>b__14_0(GameObject x)
		{
			return null;
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xEBB218", Offset = "0xEBB218", VA = "0xEBB218")]
		internal Renderer <Exit>b__14_1(GameObject x)
		{
			return null;
		}
	}

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_triggerAtStart;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_triggerWithPhysicsEnterExit;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Mode m_mode;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_objectsToHide;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_objectsToShow;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_changeFarPlane;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_origFarPlane;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E21F0", Offset = "0x8E21F0")]
	public float newFarPlane;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_skybox;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material m_originalSkybox;

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x13FB1F8", Offset = "0x13FB1F8", VA = "0x13FB1F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x13FB398", Offset = "0x13FB398", VA = "0x13FB398")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x13FB3A8", Offset = "0x13FB3A8", VA = "0x13FB3A8")]
	public void Enter()
	{
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x13FBCA4", Offset = "0x13FBCA4", VA = "0x13FBCA4")]
	public void Exit()
	{
	}

	[Token(Token = "0x6001F8F")]
	[Address(RVA = "0x13FC414", Offset = "0x13FC414", VA = "0x13FC414")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001F90")]
	[Address(RVA = "0x13FC4A8", Offset = "0x13FC4A8", VA = "0x13FC4A8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001F91")]
	[Address(RVA = "0x13FC53C", Offset = "0x13FC53C", VA = "0x13FC53C")]
	public VisibilityList()
	{
	}
}
[Token(Token = "0x200048D")]
public class WwiseSetup : MonoBehaviour
{
	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wwisePrefab;

	[Token(Token = "0x6001F98")]
	[Address(RVA = "0x1402058", Offset = "0x1402058", VA = "0x1402058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F99")]
	[Address(RVA = "0x1402120", Offset = "0x1402120", VA = "0x1402120")]
	public WwiseSetup()
	{
	}
}
[Token(Token = "0x200048E")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D73C4", Offset = "0x8D73C4")]
public class DebugMenuItem : Attribute
{
	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string subMenu;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minValue;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxValue;

	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0xF25530", Offset = "0xF25530", VA = "0xF25530")]
	public DebugMenuItem(string addToSubMenu = "", float min = -100f, float max = 100f)
	{
	}
}
[Token(Token = "0x200048F")]
public class NVR_UI_Canvas : MonoBehaviour
{
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D73D8", Offset = "0x8D73D8")]
	private sealed class <FindPlayer>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVR_UI_Canvas <>4__this;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRCanvasInput <nci>5__2;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x105BB64", Offset = "0x105BB64", VA = "0x105BB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x105BBAC", Offset = "0x105BBAC", VA = "0x105BBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x105B87C", Offset = "0x105B87C", VA = "0x105B87C")]
		[DebuggerHidden]
		public <FindPlayer>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x105B8A8", Offset = "0x105B8A8", VA = "0x105B8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x105B8AC", Offset = "0x105B8AC", VA = "0x105B8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x105BB6C", Offset = "0x105BB6C", VA = "0x105BB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001F9B")]
	[Address(RVA = "0x1333CA0", Offset = "0x1333CA0", VA = "0x1333CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F9C")]
	[Address(RVA = "0x1333CCC", Offset = "0x1333CCC", VA = "0x1333CCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F02FC", Offset = "0x8F02FC")]
	private IEnumerator FindPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0x1333D44", Offset = "0x1333D44", VA = "0x1333D44")]
	public NVR_UI_Canvas()
	{
	}
}
[Token(Token = "0x2000491")]
public class ActiveInactiveDebugger : MonoBehaviour
{
	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_debugActivate;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_debugDectivate;

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x138BB64", Offset = "0x138BB64", VA = "0x138BB64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x138BC10", Offset = "0x138BC10", VA = "0x138BC10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x138BCBC", Offset = "0x138BCBC", VA = "0x138BCBC")]
	public ActiveInactiveDebugger()
	{
	}
}
[Token(Token = "0x2000492")]
public static class CollectionExtensions
{
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D73F8", Offset = "0x8D73F8")]
	private sealed class <GetWrappingEnumerator>d__15<T> : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<T> list;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<T> <enumerator>5__2;

		[Token(Token = "0x170003B4")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001FD4")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD1")]
		[DebuggerHidden]
		public <GetWrappingEnumerator>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD2")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD3")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD5")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7408", Offset = "0x8D7408")]
	private sealed class <Select>d__17<T, U> : IEnumerator<U>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private U <>2__current;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<T, U> selector;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<T> enumerator;

		[Token(Token = "0x170003B6")]
		private U System.Collections.Generic.IEnumerator<U>.Current
		{
			[Token(Token = "0x6001FDA")]
			[DebuggerHidden]
			get
			{
				return (U)null;
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FDC")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD7")]
		[DebuggerHidden]
		public <Select>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD8")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD9")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDB")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7418", Offset = "0x8D7418")]
	private sealed class <>c__DisplayClass38_0<T> where T : UnityEngine.Object
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x6001FDD")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001FDE")]
		internal bool <FindByNames>b__0(T s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FA7")]
	public static int FirstIndexOf<T>(this T[] array, T item)
	{
		return default(int);
	}

	[Token(Token = "0x6001FA8")]
	public static T Last<T>(this T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FA9")]
	public static T GetSafe<T>(this T[] array, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FAA")]
	public static void Swap<T>(this T[] array, int a, int b)
	{
	}

	[Token(Token = "0x6001FAB")]
	public static T Random<T>(this IEnumerable<T> collection, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FAC")]
	public static T Random<T>(this T[] array, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FAD")]
	public static int RandomIndex<T>(this T[] array, [Optional] System.Random rand)
	{
		return default(int);
	}

	[Token(Token = "0x6001FAE")]
	public static int RandomIndex<T>(this List<T> list, [Optional] System.Random rand)
	{
		return default(int);
	}

	[Token(Token = "0x6001FAF")]
	public static T Random<T>(this List<T> list, [Optional] System.Random rand)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB0")]
	public static int WrapIndex<T>(this T[] array, int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6001FB1")]
	public static int WrapIndex<T>(this List<T> list, int idx)
	{
		return default(int);
	}

	[Token(Token = "0x6001FB2")]
	public static T Next<T>(this T[] arr, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB3")]
	public static T Prev<T>(this T[] arr, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB4")]
	public static T Next<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB5")]
	public static T Prev<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F049C", Offset = "0x8F049C")]
	public static IEnumerator<T> GetWrappingEnumerator<T>(this IEnumerable<T> list)
	{
		return null;
	}

	[Token(Token = "0x6001FB7")]
	public static T GetNext<T>(this IEnumerator<T> enumerator)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F051C", Offset = "0x8F051C")]
	public static IEnumerator<U> Select<T, U>(this IEnumerator<T> enumerator, Func<T, U> selector)
	{
		return null;
	}

	[Token(Token = "0x6001FB9")]
	public static void Swap<T>(this List<T> list, int a, int b)
	{
	}

	[Token(Token = "0x6001FBA")]
	public static void AddOrSet<T, TS>(this Dictionary<T, TS> dict, T key, TS value)
	{
	}

	[Token(Token = "0x6001FBB")]
	public static bool AddIfUnique<T>(this List<T> list, T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FBC")]
	public static bool AddUniques<T>(this List<T> list, T[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FBD")]
	public static bool AddUniques<T>(this List<T> list, List<T> items)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FBE")]
	public static int Find<T>(this T[] array, T val)
	{
		return default(int);
	}

	[Token(Token = "0x6001FBF")]
	public static bool Contains<T>(this T[] array, T val)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC0")]
	public static bool ContainsAny<T>(this T[] array, T[] lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC1")]
	public static bool ContainsAny<T>(this T[] array, List<T> lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC2")]
	public static bool ContainsAny<T>(this List<T> list, T[] lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC3")]
	public static bool ContainsAny<T>(this List<T> list, List<T> lookFor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FC4")]
	public static T Last<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FC5")]
	public static int GetNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FC6")]
	public static int GetNotNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FC7")]
	public static int CountNotNull<T>(this T[] array)
	{
		return default(int);
	}

	[Token(Token = "0x6001FC8")]
	public static void AddUniqueGameObjects<T>(this List<GameObject> list, List<T> newItems) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FC9")]
	public static void AddUniqueGameObjects<T>(this List<GameObject> list, T[] newItems) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FCA")]
	public static T GetSafe<T>(this List<T> list, int idx)
	{
		return (T)null;
	}

	[Token(Token = "0x6001FCB")]
	public static void Shuffle<T>(this List<T> list, [Optional] System.Random rand)
	{
	}

	[Token(Token = "0x6001FCC")]
	public static void RemoveNulls<T>(this List<T> list) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FCD")]
	public static T FindByNames<T>(this IEnumerable<T> list, params string[] names) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6001FCE")]
	public static T Smallest<T, V>(this Dictionary<int, T> list, Func<T, V> valueGetter, out V smallestVal) where V : IComparable
	{
		return (T)null;
	}

	[Token(Token = "0x6001FCF")]
	public static T Smallest<T, V>(this List<T> list, Func<T, V> valueGetter, out V smallestVal) where V : IComparable
	{
		return (T)null;
	}

	[Token(Token = "0x6001FD0")]
	public static void ForEach<T>(this List<T> list, Func<T, T> action)
	{
	}
}
[Token(Token = "0x2000496")]
public static class ColliderExtensions
{
	[Token(Token = "0x6001FDF")]
	public static T GetComponentInMeOrAttachedRigidBody<T>(this Collider col) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001FE0")]
	[Address(RVA = "0x13D38FC", Offset = "0x13D38FC", VA = "0x13D38FC")]
	public static UnityEngine.Component GetComponentInMeOrAttachedRigidBody(this Collider col, Type t)
	{
		return null;
	}

	[Token(Token = "0x6001FE1")]
	[Address(RVA = "0x13D3A00", Offset = "0x13D3A00", VA = "0x13D3A00")]
	public static UnityEngine.Component GetComponentInMeOrAttachedRigidBody(this Collider col, string s)
	{
		return null;
	}

	[Token(Token = "0x6001FE2")]
	[Address(RVA = "0x13D3B04", Offset = "0x13D3B04", VA = "0x13D3B04")]
	public static void SetAllEnabled(this List<Collider> list, bool isEnabled)
	{
	}

	[Token(Token = "0x6001FE3")]
	[Address(RVA = "0x13D3C18", Offset = "0x13D3C18", VA = "0x13D3C18")]
	public static void SetAllEnabled(this Collider[] list, bool isEnabled)
	{
	}
}
[Token(Token = "0x2000497")]
public static class MMGameObjectExtensions
{
	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0x16049C4", Offset = "0x16049C4", VA = "0x16049C4")]
	public static GameObject Clone(this GameObject go, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001FE5")]
	public static T GetOrAddComponent<T>(this GameObject go) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6001FE6")]
	[Address(RVA = "0x1604A80", Offset = "0x1604A80", VA = "0x1604A80")]
	public static UnityEngine.Component GetOrAddComponent(this GameObject go, Type t)
	{
		return null;
	}

	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0x1604B3C", Offset = "0x1604B3C", VA = "0x1604B3C")]
	public static bool IsChildOf(this GameObject go, Type componentType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FE8")]
	public static T GetComponentInParents<T>(this GameObject target) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6001FE9")]
	public static List<T> GetComponentsInChildrenEvenIfInactive<T>(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6001FEA")]
	[Address(RVA = "0x1604B70", Offset = "0x1604B70", VA = "0x1604B70")]
	public static void SetLayerRecursive(this GameObject target, int layer)
	{
	}

	[Token(Token = "0x6001FEB")]
	[Address(RVA = "0x1604C34", Offset = "0x1604C34", VA = "0x1604C34")]
	public static Vector3 GetCenter(this GameObject me)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001FEC")]
	[Address(RVA = "0x1604D50", Offset = "0x1604D50", VA = "0x1604D50")]
	public static void SetAllActive(this GameObject[] array, bool active)
	{
	}

	[Token(Token = "0x6001FED")]
	[Address(RVA = "0x1604E40", Offset = "0x1604E40", VA = "0x1604E40")]
	public static void SetAllActive(this List<GameObject> list, bool active)
	{
	}

	[Token(Token = "0x6001FEE")]
	[Address(RVA = "0x1604F54", Offset = "0x1604F54", VA = "0x1604F54")]
	public static void SetAllActive(this UnityEngine.Component[] array, bool active)
	{
	}

	[Token(Token = "0x6001FEF")]
	[Address(RVA = "0x1605050", Offset = "0x1605050", VA = "0x1605050")]
	public static void SetAllMaterialsColour(this GameObject me, Color col)
	{
	}

	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0x16051A0", Offset = "0x16051A0", VA = "0x16051A0")]
	public static void SetAllMaterials(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0x160520C", Offset = "0x160520C", VA = "0x160520C")]
	public static void SetAllSharedMaterials(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x6001FF2")]
	[Address(RVA = "0x1605278", Offset = "0x1605278", VA = "0x1605278")]
	public static void AddSharedMaterialToEnd(this GameObject me, Material newMat)
	{
	}

	[Token(Token = "0x6001FF3")]
	[Address(RVA = "0x16052E4", Offset = "0x16052E4", VA = "0x16052E4")]
	public static void RemoveSharedMaterialFromEnd(this GameObject me, Material mat)
	{
	}

	[Token(Token = "0x6001FF4")]
	[Address(RVA = "0x1605350", Offset = "0x1605350", VA = "0x1605350")]
	public static void SetTagRecursive(this GameObject go, string tag)
	{
	}

	[Token(Token = "0x6001FF5")]
	[Address(RVA = "0x1605380", Offset = "0x1605380", VA = "0x1605380")]
	public static void SetTagRecursive(this Transform tr, string tag)
	{
	}

	[Token(Token = "0x6001FF6")]
	[Address(RVA = "0x1605410", Offset = "0x1605410", VA = "0x1605410")]
	public static Bounds GetBounds(this GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6001FF7")]
	[Address(RVA = "0x1605524", Offset = "0x1605524", VA = "0x1605524")]
	public static void PlayAllChildParticleSystems(this GameObject go)
	{
	}

	[Token(Token = "0x6001FF8")]
	[Address(RVA = "0x16055CC", Offset = "0x16055CC", VA = "0x16055CC")]
	public static void StopAllChildParticleSystems(this GameObject go)
	{
	}
}
[Token(Token = "0x2000498")]
public static class MonoBehaviorExtensions
{
	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<UnityEngine.Component> Components;

	[Token(Token = "0x6001FF9")]
	[Address(RVA = "0x1614BA4", Offset = "0x1614BA4", VA = "0x1614BA4")]
	public static void SetAllEnabled(this MonoBehaviour[] array, bool isEnabled)
	{
	}

	[Token(Token = "0x6001FFA")]
	[Address(RVA = "0x1614C94", Offset = "0x1614C94", VA = "0x1614C94")]
	public static void SetAllEnabled(this List<MonoBehaviour> list, bool isEnabled)
	{
	}

	[Token(Token = "0x6001FFB")]
	[Address(RVA = "0x1614DA8", Offset = "0x1614DA8", VA = "0x1614DA8")]
	public static void SetAllGameObjectsActive(this UnityEngine.Component[] array, bool isActive)
	{
	}

	[Token(Token = "0x6001FFC")]
	public static void SetAllGameObjectsActive<T>(this List<T> list, bool isActive) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FFD")]
	public static void SetAllGameObjectsActive<T>(this Dictionary<int, T> list, bool isActive) where T : UnityEngine.Component
	{
	}

	[Token(Token = "0x6001FFE")]
	public static int CountActiveInHierarchy<T>(this List<T> list, bool isActive) where T : UnityEngine.Component
	{
		return default(int);
	}

	[Token(Token = "0x6001FFF")]
	public static bool Fetch<T>(this MonoBehaviour me, out T obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002000")]
	public static bool FetchInChildren<T>(this MonoBehaviour me, out T obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6002001")]
	public static bool FetchFromParents<T>(this MonoBehaviour me, out T obj) where T : UnityEngine.Component
	{
		return default(bool);
	}
}
[Token(Token = "0x2000499")]
public static class ParticleSystemExtensions
{
	[Token(Token = "0x6002003")]
	[Address(RVA = "0xECA870", Offset = "0xECA870", VA = "0xECA870")]
	public static void PlayAll(this ParticleSystem[] array)
	{
	}

	[Token(Token = "0x6002004")]
	[Address(RVA = "0xECA954", Offset = "0xECA954", VA = "0xECA954")]
	public static void StopAll(this ParticleSystem[] array)
	{
	}

	[Token(Token = "0x6002005")]
	[Address(RVA = "0xECAA38", Offset = "0xECAA38", VA = "0xECAA38")]
	public static void PlayAll(this List<ParticleSystem> list)
	{
	}

	[Token(Token = "0x6002006")]
	[Address(RVA = "0xECAB40", Offset = "0xECAB40", VA = "0xECAB40")]
	public static void StopAll(this List<ParticleSystem> list)
	{
	}
}
[Token(Token = "0x200049A")]
public static class RectExtensions
{
	[Token(Token = "0x6002007")]
	[Address(RVA = "0x119B1E8", Offset = "0x119B1E8", VA = "0x119B1E8")]
	public static Rect MoveLeftEdge(this Rect r, float amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0x119B254", Offset = "0x119B254", VA = "0x119B254")]
	public static Rect Expand(this Rect r, float amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0x119B300", Offset = "0x119B300", VA = "0x119B300")]
	public static Rect Expand(this Rect r, Vector2 amt)
	{
		return default(Rect);
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0x119B3BC", Offset = "0x119B3BC", VA = "0x119B3BC")]
	public static bool ContainsCompletely(this Rect r, Rect other)
	{
		return default(bool);
	}
}
[Token(Token = "0x200049B")]
public static class RendererExtensions
{
	[Token(Token = "0x600200B")]
	[Address(RVA = "0x119E2EC", Offset = "0x119E2EC", VA = "0x119E2EC")]
	public static void SetAllMaterialsColour(this Renderer[] rs, Color col)
	{
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0x119E400", Offset = "0x119E400", VA = "0x119E400")]
	public static void SetAllMaterials(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x600200D")]
	[Address(RVA = "0x119E660", Offset = "0x119E660", VA = "0x119E660")]
	public static void SetAllSharedMaterials(this Renderer[] rs, Material newMat, int materialIdx)
	{
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0x119E83C", Offset = "0x119E83C", VA = "0x119E83C")]
	public static void SetAllSharedMaterials(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0x119E9C0", Offset = "0x119E9C0", VA = "0x119E9C0")]
	public static void AddSharedMaterialToEnd(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0x119ECC0", Offset = "0x119ECC0", VA = "0x119ECC0")]
	public static void RemoveSharedMaterialFromEnd(this Renderer[] rs, Material newMat)
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0x119EF34", Offset = "0x119EF34", VA = "0x119EF34")]
	public static void SetAllMaterialsColour(this List<Renderer> rs, Color col)
	{
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0x119F084", Offset = "0x119F084", VA = "0x119F084")]
	public static void SetAllSharedMaterials(this List<Renderer> rs, Material newMat)
	{
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0x119F248", Offset = "0x119F248", VA = "0x119F248")]
	public static void SetAllMaterials(this List<Renderer> rs, Material newMat)
	{
	}
}
[Token(Token = "0x200049C")]
public static class MMSpriteExtensions
{
	[Token(Token = "0x6002014")]
	[Address(RVA = "0x1605674", Offset = "0x1605674", VA = "0x1605674")]
	public static float MaxDimension(this Sprite s)
	{
		return default(float);
	}
}
[Token(Token = "0x200049D")]
public static class StringExtensions
{
	[Token(Token = "0x6002015")]
	[Address(RVA = "0x11F74E0", Offset = "0x11F74E0", VA = "0x11F74E0")]
	public static int Count(this string str, char c)
	{
		return default(int);
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0x11F7550", Offset = "0x11F7550", VA = "0x11F7550")]
	public static bool AnyContains(this string[] array, string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0x11F75DC", Offset = "0x11F75DC", VA = "0x11F75DC")]
	public static bool AnyContains(this List<string> list, string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0x11F7694", Offset = "0x11F7694", VA = "0x11F7694")]
	public static bool ContainsAny(this string str, string[] array, bool ignoreCase = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0x11F773C", Offset = "0x11F773C", VA = "0x11F773C")]
	public static bool ContainsAny(this string str, List<string> list, bool ignoreCase = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600201A")]
	[Address(RVA = "0x11F7808", Offset = "0x11F7808", VA = "0x11F7808")]
	public static bool ContainsAll(this string str, string[] array, bool ignoreCase = false)
	{
		return default(bool);
	}
}
[Token(Token = "0x200049E")]
public static class TransformExtensions
{
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D74B8", Offset = "0x8D74B8")]
	private sealed class <IterateHierarchyInclusive>d__18 : IEnumerable<Transform>, IEnumerable, IEnumerator<Transform>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform <>2__current;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform <>3__target;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator<Transform> <>7__wrap1;

		[Token(Token = "0x170003B8")]
		private Transform System.Collections.Generic.IEnumerator<UnityEngine.Transform>.Current
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xEB39C0", Offset = "0xEB39C0", VA = "0xEB39C0", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xEB3A08", Offset = "0xEB3A08", VA = "0xEB3A08", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xEB35E0", Offset = "0xEB35E0", VA = "0xEB35E0")]
		[DebuggerHidden]
		public <IterateHierarchyInclusive>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xEB3618", Offset = "0xEB3618", VA = "0xEB3618", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xEB36F0", Offset = "0xEB36F0", VA = "0xEB36F0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xEB3634", Offset = "0xEB3634", VA = "0xEB3634")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xEB39C8", Offset = "0xEB39C8", VA = "0xEB39C8", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xEB3A10", Offset = "0xEB3A10", VA = "0xEB3A10", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xEB3AC0", Offset = "0xEB3AC0", VA = "0xEB3AC0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20004A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D74C8", Offset = "0x8D74C8")]
	private sealed class <IterateHierarchy>d__19 : IEnumerable<Transform>, IEnumerable, IEnumerator<Transform>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform <>2__current;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform <>3__target;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator <>7__wrap1;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <t>5__3;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator<Transform> <>7__wrap3;

		[Token(Token = "0x170003BA")]
		private Transform System.Collections.Generic.IEnumerator<UnityEngine.Transform>.Current
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xEB34DC", Offset = "0xEB34DC", VA = "0xEB34DC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xEB3524", Offset = "0xEB3524", VA = "0xEB3524", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xEB2E1C", Offset = "0xEB2E1C", VA = "0xEB2E1C")]
		[DebuggerHidden]
		public <IterateHierarchy>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xEB2E54", Offset = "0xEB2E54", VA = "0xEB2E54", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xEB3060", Offset = "0xEB3060", VA = "0xEB3060", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xEB2F98", Offset = "0xEB2F98", VA = "0xEB2F98")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xEB2EDC", Offset = "0xEB2EDC", VA = "0xEB2EDC")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xEB34E4", Offset = "0xEB34E4", VA = "0xEB34E4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xEB352C", Offset = "0xEB352C", VA = "0xEB352C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Transform> System.Collections.Generic.IEnumerable<UnityEngine.Transform>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xEB35DC", Offset = "0xEB35DC", VA = "0xEB35DC", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0x10BCD30", Offset = "0x10BCD30", VA = "0x10BCD30")]
	public static void SetToIdentityLocal(this Transform target)
	{
	}

	[Token(Token = "0x600201C")]
	[Address(RVA = "0x10B42E0", Offset = "0x10B42E0", VA = "0x10B42E0")]
	public static void SetToIdentity(this Transform target)
	{
	}

	[Token(Token = "0x600201D")]
	[Address(RVA = "0x10BCD8C", Offset = "0x10BCD8C", VA = "0x10BCD8C")]
	public static void SetPosRot(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x600201E")]
	[Address(RVA = "0x10BCDE4", Offset = "0x10BCDE4", VA = "0x10BCDE4")]
	public static void MatchProperties(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x600201F")]
	[Address(RVA = "0x10BCE54", Offset = "0x10BCE54", VA = "0x10BCE54")]
	public static void MatchParentAndProperties(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002020")]
	[Address(RVA = "0x10B5338", Offset = "0x10B5338", VA = "0x10B5338")]
	public static void ReparentAndIdentity(this Transform target, Transform source)
	{
	}

	[Token(Token = "0x6002021")]
	[Address(RVA = "0x10BCEA4", Offset = "0x10BCEA4", VA = "0x10BCEA4")]
	public static void LerpPosRot(this Transform target, Transform source, float lerpRate)
	{
	}

	[Token(Token = "0x6002022")]
	[Address(RVA = "0x10BCFE4", Offset = "0x10BCFE4", VA = "0x10BCFE4")]
	public static Bounds TransformBounds(this Transform target, Bounds bounds)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6002023")]
	[Address(RVA = "0x10BD08C", Offset = "0x10BD08C", VA = "0x10BD08C")]
	public static Bounds InverseTransformBounds(this Transform target, Bounds bounds)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6002024")]
	[Address(RVA = "0x10BD134", Offset = "0x10BD134", VA = "0x10BD134")]
	public static void MoveTowards(this Transform t, Vector3 target, float dist)
	{
	}

	[Token(Token = "0x6002025")]
	[Address(RVA = "0x10BD21C", Offset = "0x10BD21C", VA = "0x10BD21C")]
	public static void ScaleAround(this Transform target, Vector3 localScale, Vector3 localPivot)
	{
	}

	[Token(Token = "0x6002026")]
	[Address(RVA = "0x10BD2F8", Offset = "0x10BD2F8", VA = "0x10BD2F8")]
	public static float DistanceTo(this Transform target, Transform dest)
	{
		return default(float);
	}

	[Token(Token = "0x6002027")]
	[Address(RVA = "0x10BD380", Offset = "0x10BD380", VA = "0x10BD380")]
	public static float DistanceSqTo(this Transform target, Transform dest)
	{
		return default(float);
	}

	[Token(Token = "0x6002028")]
	[Address(RVA = "0x10B8224", Offset = "0x10B8224", VA = "0x10B8224")]
	public static Transform FindChildRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002029")]
	[Address(RVA = "0x10BD408", Offset = "0x10BD408", VA = "0x10BD408")]
	public static Transform FindChildContainingRecursive(this Transform target, string contains)
	{
		return null;
	}

	[Token(Token = "0x600202A")]
	[Address(RVA = "0x10BD514", Offset = "0x10BD514", VA = "0x10BD514")]
	public static Transform FindActiveChildRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x600202B")]
	[Address(RVA = "0x10BD638", Offset = "0x10BD638", VA = "0x10BD638")]
	public static Transform FindActiveChildContainingRecursive(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x600202C")]
	[Address(RVA = "0x10BD760", Offset = "0x10BD760", VA = "0x10BD760")]
	public static List<Transform> FindChildrenContainingRecursive(this Transform target, string partOfName, [Optional] List<Transform> found)
	{
		return null;
	}

	[Token(Token = "0x600202D")]
	[Address(RVA = "0x10BD88C", Offset = "0x10BD88C", VA = "0x10BD88C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F0C7C", Offset = "0x8F0C7C")]
	public static IEnumerable<Transform> IterateHierarchyInclusive(this Transform target)
	{
		return null;
	}

	[Token(Token = "0x600202E")]
	[Address(RVA = "0x10BD904", Offset = "0x10BD904", VA = "0x10BD904")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F0CEC", Offset = "0x8F0CEC")]
	public static IEnumerable<Transform> IterateHierarchy(this Transform target)
	{
		return null;
	}

	[Token(Token = "0x600202F")]
	[Address(RVA = "0x10BD97C", Offset = "0x10BD97C", VA = "0x10BD97C")]
	public static void SetHideFlagsRecursively(this Transform t, HideFlags flags)
	{
	}

	[Token(Token = "0x6002030")]
	[Address(RVA = "0x10BDA00", Offset = "0x10BDA00", VA = "0x10BDA00")]
	public static bool IsChildOf(this Transform target, Type componentType)
	{
		return default(bool);
	}

	[Token(Token = "0x6002031")]
	public static T GetComponentInThisOrParents<T>(this Transform target)
	{
		return (T)null;
	}

	[Token(Token = "0x6002032")]
	public static T GetComponentInParents<T>(this Transform target) where T : UnityEngine.Component
	{
		return null;
	}

	[Token(Token = "0x6002033")]
	[Address(RVA = "0x10BDB08", Offset = "0x10BDB08", VA = "0x10BDB08")]
	public static string TreeAsString(this Transform transf)
	{
		return null;
	}

	[Token(Token = "0x6002034")]
	[Address(RVA = "0x10BDBEC", Offset = "0x10BDBEC", VA = "0x10BDBEC")]
	public static bool IsChildOf(this Transform thisTrans, Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0x10BDCF8", Offset = "0x10BDCF8", VA = "0x10BDCF8")]
	public static Transform AddChild(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002036")]
	[Address(RVA = "0x10BDDB4", Offset = "0x10BDDB4", VA = "0x10BDDB4")]
	public static Transform ReplaceChildWithNew(this Transform target, string name)
	{
		return null;
	}

	[Token(Token = "0x6002037")]
	public static void EnsureOnlyXChildrenOfType<T>(this Transform transf, int count, GameObject prefab)
	{
	}
}
[Token(Token = "0x20004A1")]
public static class VectorExtensions
{
	[Token(Token = "0x600204B")]
	[Address(RVA = "0x13F4D8C", Offset = "0x13F4D8C", VA = "0x13F4D8C")]
	public static Vector3 Randomized(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0x13F4DF8", Offset = "0x13F4DF8", VA = "0x13F4DF8")]
	public static Vector3 ClampMagnitude(this Vector3 v, float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600204D")]
	[Address(RVA = "0x13F4E84", Offset = "0x13F4E84", VA = "0x13F4E84")]
	public static Vector3 MoveTowards(this Vector3 v, Vector3 target, float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600204E")]
	[Address(RVA = "0x13F4EF4", Offset = "0x13F4EF4", VA = "0x13F4EF4")]
	public static Vector3 Div(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600204F")]
	[Address(RVA = "0x13F4F04", Offset = "0x13F4F04", VA = "0x13F4F04")]
	public static Vector3 Mul(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002050")]
	[Address(RVA = "0x13F4F14", Offset = "0x13F4F14", VA = "0x13F4F14")]
	public static Vector3 Abs(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002051")]
	[Address(RVA = "0x13F4F24", Offset = "0x13F4F24", VA = "0x13F4F24")]
	public static Vector3 Safe(this Vector3 v, Vector3 fallback, out bool fix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0x13F4FB8", Offset = "0x13F4FB8", VA = "0x13F4FB8")]
	public static Vector3 Quantize(this Vector3 v, float q)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20004A2")]
public static class InternetVectorExtensions
{
	[Token(Token = "0x6002053")]
	[Address(RVA = "0xFD0EA4", Offset = "0xFD0EA4", VA = "0xFD0EA4")]
	public static Vector2 xy(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0xFD0EA8", Offset = "0xFD0EA8", VA = "0xFD0EA8")]
	public static Vector2 xz(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002055")]
	[Address(RVA = "0xFD0EB0", Offset = "0xFD0EB0", VA = "0xFD0EB0")]
	public static Vector2 yx(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002056")]
	[Address(RVA = "0xFD0EC0", Offset = "0xFD0EC0", VA = "0xFD0EC0")]
	public static Vector2 yz(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002057")]
	[Address(RVA = "0xFD0ECC", Offset = "0xFD0ECC", VA = "0xFD0ECC")]
	public static Vector2 zx(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002058")]
	[Address(RVA = "0xFD0ED8", Offset = "0xFD0ED8", VA = "0xFD0ED8")]
	public static Vector2 zy(this Vector3 v3)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002059")]
	[Address(RVA = "0xFD0EE0", Offset = "0xFD0EE0", VA = "0xFD0EE0")]
	public static Vector3 xxx(this Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205A")]
	[Address(RVA = "0xFC41C4", Offset = "0xFC41C4", VA = "0xFC41C4")]
	public static Vector3 SetX(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205B")]
	[Address(RVA = "0xFD0EEC", Offset = "0xFD0EEC", VA = "0xFD0EEC")]
	public static Vector3 SetY(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205C")]
	[Address(RVA = "0xFD0EF4", Offset = "0xFD0EF4", VA = "0xFD0EF4")]
	public static Vector3 SetZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205D")]
	[Address(RVA = "0xFD0EFC", Offset = "0xFD0EFC", VA = "0xFD0EFC")]
	public static Vector3 SetXY(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205E")]
	[Address(RVA = "0xFD0F08", Offset = "0xFD0F08", VA = "0xFD0F08")]
	public static Vector3 SetYZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600205F")]
	[Address(RVA = "0xFD0F14", Offset = "0xFD0F14", VA = "0xFD0F14")]
	public static Vector3 SetXZ(this Vector3 v, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002060")]
	[Address(RVA = "0xFD0F20", Offset = "0xFD0F20", VA = "0xFD0F20")]
	public static Vector3 xy_(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0xFD0F24", Offset = "0xFD0F24", VA = "0xFD0F24")]
	public static Vector3 x_y(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002062")]
	[Address(RVA = "0xFD0F34", Offset = "0xFD0F34", VA = "0xFD0F34")]
	public static Vector3 _xy(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002063")]
	[Address(RVA = "0xFD0F48", Offset = "0xFD0F48", VA = "0xFD0F48")]
	public static Vector3 yx_(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0xFD0F58", Offset = "0xFD0F58", VA = "0xFD0F58")]
	public static Vector3 y_x(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002065")]
	[Address(RVA = "0xFD0F6C", Offset = "0xFD0F6C", VA = "0xFD0F6C")]
	public static Vector3 _yx(this Vector2 v2, float a = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0xFD0F7C", Offset = "0xFD0F7C", VA = "0xFD0F7C")]
	public static Vector2 xy(this Vector4 v2)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0xFD0F80", Offset = "0xFD0F80", VA = "0xFD0F80")]
	public static Vector3 xyz(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002068")]
	[Address(RVA = "0xFD0F84", Offset = "0xFD0F84", VA = "0xFD0F84")]
	public static Vector3 xxx(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002069")]
	[Address(RVA = "0xFD0F90", Offset = "0xFD0F90", VA = "0xFD0F90")]
	public static Vector3 yyy(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600206A")]
	[Address(RVA = "0xFD0F9C", Offset = "0xFD0F9C", VA = "0xFD0F9C")]
	public static Vector3 zzz(this Vector4 v2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600206B")]
	[Address(RVA = "0xFD0FA8", Offset = "0xFD0FA8", VA = "0xFD0FA8")]
	public static Vector3 www(this Vector4 v2)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20004A3")]
public class Colours
{
	[Token(Token = "0x170003BC")]
	public static Color AliceBlue
	{
		[Token(Token = "0x600206C")]
		[Address(RVA = "0x13D44B4", Offset = "0x13D44B4", VA = "0x13D44B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003BD")]
	public static Color LightSalmon
	{
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x13D44F8", Offset = "0x13D44F8", VA = "0x13D44F8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003BE")]
	public static Color AntiqueWhite
	{
		[Token(Token = "0x600206E")]
		[Address(RVA = "0x13D453C", Offset = "0x13D453C", VA = "0x13D453C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003BF")]
	public static Color LightSeaGreen
	{
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x13D4584", Offset = "0x13D4584", VA = "0x13D4584")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C0")]
	public static Color Aqua
	{
		[Token(Token = "0x6002070")]
		[Address(RVA = "0x13D45CC", Offset = "0x13D45CC", VA = "0x13D45CC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C1")]
	public static Color LightSkyBlue
	{
		[Token(Token = "0x6002071")]
		[Address(RVA = "0x13D4608", Offset = "0x13D4608", VA = "0x13D4608")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C2")]
	public static Color Aquamarine
	{
		[Token(Token = "0x6002072")]
		[Address(RVA = "0x13D4650", Offset = "0x13D4650", VA = "0x13D4650")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C3")]
	public static Color LightSlateGray
	{
		[Token(Token = "0x6002073")]
		[Address(RVA = "0x13D4694", Offset = "0x13D4694", VA = "0x13D4694")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C4")]
	public static Color Azure
	{
		[Token(Token = "0x6002074")]
		[Address(RVA = "0x13D46DC", Offset = "0x13D46DC", VA = "0x13D46DC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C5")]
	public static Color LightSteelBlue
	{
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x13D471C", Offset = "0x13D471C", VA = "0x13D471C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C6")]
	public static Color Beige
	{
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x13D4764", Offset = "0x13D4764", VA = "0x13D4764")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C7")]
	public static Color LightYellow
	{
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x13D47A8", Offset = "0x13D47A8", VA = "0x13D47A8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C8")]
	public static Color Bisque
	{
		[Token(Token = "0x6002078")]
		[Address(RVA = "0x13D47E8", Offset = "0x13D47E8", VA = "0x13D47E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003C9")]
	public static Color Lime
	{
		[Token(Token = "0x6002079")]
		[Address(RVA = "0x13D482C", Offset = "0x13D482C", VA = "0x13D482C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CA")]
	public static Color Black
	{
		[Token(Token = "0x600207A")]
		[Address(RVA = "0x13D4868", Offset = "0x13D4868", VA = "0x13D4868")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CB")]
	public static Color LimeGreen
	{
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x13D48A4", Offset = "0x13D48A4", VA = "0x13D48A4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CC")]
	public static Color BlanchedAlmond
	{
		[Token(Token = "0x600207C")]
		[Address(RVA = "0x13D48E8", Offset = "0x13D48E8", VA = "0x13D48E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CD")]
	public static Color Linen
	{
		[Token(Token = "0x600207D")]
		[Address(RVA = "0x13D4928", Offset = "0x13D4928", VA = "0x13D4928")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CE")]
	public static Color Blue
	{
		[Token(Token = "0x600207E")]
		[Address(RVA = "0x13D4970", Offset = "0x13D4970", VA = "0x13D4970")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003CF")]
	public static Color Magenta
	{
		[Token(Token = "0x600207F")]
		[Address(RVA = "0x13D49AC", Offset = "0x13D49AC", VA = "0x13D49AC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D0")]
	public static Color BlueViolet
	{
		[Token(Token = "0x6002080")]
		[Address(RVA = "0x13D49E8", Offset = "0x13D49E8", VA = "0x13D49E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D1")]
	public static Color Maroon
	{
		[Token(Token = "0x6002081")]
		[Address(RVA = "0x13D4A30", Offset = "0x13D4A30", VA = "0x13D4A30")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D2")]
	public static Color Brown
	{
		[Token(Token = "0x6002082")]
		[Address(RVA = "0x13D4A70", Offset = "0x13D4A70", VA = "0x13D4A70")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D3")]
	public static Color MediumAquamarine
	{
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x13D4AB4", Offset = "0x13D4AB4", VA = "0x13D4AB4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D4")]
	public static Color BurlyWood
	{
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x13D4AFC", Offset = "0x13D4AFC", VA = "0x13D4AFC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D5")]
	public static Color MediumBlue
	{
		[Token(Token = "0x6002085")]
		[Address(RVA = "0x13D4B44", Offset = "0x13D4B44", VA = "0x13D4B44")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D6")]
	public static Color CadetBlue
	{
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x13D4B84", Offset = "0x13D4B84", VA = "0x13D4B84")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D7")]
	public static Color MediumOrchid
	{
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x13D4BCC", Offset = "0x13D4BCC", VA = "0x13D4BCC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D8")]
	public static Color Chartreuse
	{
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x13D4C14", Offset = "0x13D4C14", VA = "0x13D4C14")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003D9")]
	public static Color MediumPurple
	{
		[Token(Token = "0x6002089")]
		[Address(RVA = "0x13D4C54", Offset = "0x13D4C54", VA = "0x13D4C54")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DA")]
	public static Color Chocolate
	{
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x13D4C9C", Offset = "0x13D4C9C", VA = "0x13D4C9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DB")]
	public static Color MediumSeaGreen
	{
		[Token(Token = "0x600208B")]
		[Address(RVA = "0x13D4CE4", Offset = "0x13D4CE4", VA = "0x13D4CE4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DC")]
	public static Color Coral
	{
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x13D4D2C", Offset = "0x13D4D2C", VA = "0x13D4D2C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DD")]
	public static Color MediumSlateBlue
	{
		[Token(Token = "0x600208D")]
		[Address(RVA = "0x13D4D70", Offset = "0x13D4D70", VA = "0x13D4D70")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DE")]
	public static Color CornflowerBlue
	{
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x13D4DB8", Offset = "0x13D4DB8", VA = "0x13D4DB8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003DF")]
	public static Color MediumSpringGreen
	{
		[Token(Token = "0x600208F")]
		[Address(RVA = "0x13D4E00", Offset = "0x13D4E00", VA = "0x13D4E00")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E0")]
	public static Color Cornsilk
	{
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x13D4E44", Offset = "0x13D4E44", VA = "0x13D4E44")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E1")]
	public static Color MediumTurquoise
	{
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x13D4E88", Offset = "0x13D4E88", VA = "0x13D4E88")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E2")]
	public static Color Crimson
	{
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x13D4ED0", Offset = "0x13D4ED0", VA = "0x13D4ED0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E3")]
	public static Color MediumVioletRed
	{
		[Token(Token = "0x6002093")]
		[Address(RVA = "0x13D4F18", Offset = "0x13D4F18", VA = "0x13D4F18")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E4")]
	public static Color Cyan
	{
		[Token(Token = "0x6002094")]
		[Address(RVA = "0x13D4F60", Offset = "0x13D4F60", VA = "0x13D4F60")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E5")]
	public static Color MidnightBlue
	{
		[Token(Token = "0x6002095")]
		[Address(RVA = "0x13D4F9C", Offset = "0x13D4F9C", VA = "0x13D4F9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E6")]
	public static Color DarkBlue
	{
		[Token(Token = "0x6002096")]
		[Address(RVA = "0x13D4FE0", Offset = "0x13D4FE0", VA = "0x13D4FE0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E7")]
	public static Color MintCream
	{
		[Token(Token = "0x6002097")]
		[Address(RVA = "0x13D5020", Offset = "0x13D5020", VA = "0x13D5020")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E8")]
	public static Color DarkCyan
	{
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x13D5064", Offset = "0x13D5064", VA = "0x13D5064")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003E9")]
	public static Color MistyRose
	{
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x13D50A4", Offset = "0x13D50A4", VA = "0x13D50A4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EA")]
	public static Color DarkGoldenrod
	{
		[Token(Token = "0x600209A")]
		[Address(RVA = "0x13D50E8", Offset = "0x13D50E8", VA = "0x13D50E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EB")]
	public static Color Moccasin
	{
		[Token(Token = "0x600209B")]
		[Address(RVA = "0x13D5130", Offset = "0x13D5130", VA = "0x13D5130")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EC")]
	public static Color DarkGray
	{
		[Token(Token = "0x600209C")]
		[Address(RVA = "0x13D5174", Offset = "0x13D5174", VA = "0x13D5174")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003ED")]
	public static Color NavajoWhite
	{
		[Token(Token = "0x600209D")]
		[Address(RVA = "0x13D51B4", Offset = "0x13D51B4", VA = "0x13D51B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EE")]
	public static Color DarkGreen
	{
		[Token(Token = "0x600209E")]
		[Address(RVA = "0x13D51F8", Offset = "0x13D51F8", VA = "0x13D51F8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003EF")]
	public static Color Navy
	{
		[Token(Token = "0x600209F")]
		[Address(RVA = "0x13D5238", Offset = "0x13D5238", VA = "0x13D5238")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F0")]
	public static Color DarkKhaki
	{
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x13D5278", Offset = "0x13D5278", VA = "0x13D5278")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F1")]
	public static Color OldLace
	{
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x13D52C0", Offset = "0x13D52C0", VA = "0x13D52C0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F2")]
	public static Color DarkMagena
	{
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x13D5308", Offset = "0x13D5308", VA = "0x13D5308")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F3")]
	public static Color Olive
	{
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x13D5348", Offset = "0x13D5348", VA = "0x13D5348")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F4")]
	public static Color DarkOliveGreen
	{
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x13D5388", Offset = "0x13D5388", VA = "0x13D5388")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F5")]
	public static Color OliveDrab
	{
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x13D53D0", Offset = "0x13D53D0", VA = "0x13D53D0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F6")]
	public static Color DarkOrange
	{
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x13D5418", Offset = "0x13D5418", VA = "0x13D5418")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F7")]
	public static Color Orange
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x13D5458", Offset = "0x13D5458", VA = "0x13D5458")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F8")]
	public static Color DarkOrchid
	{
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x13D5498", Offset = "0x13D5498", VA = "0x13D5498")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003F9")]
	public static Color OrangeRed
	{
		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x13D54E0", Offset = "0x13D54E0", VA = "0x13D54E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FA")]
	public static Color DarkRed
	{
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x13D5520", Offset = "0x13D5520", VA = "0x13D5520")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FB")]
	public static Color Orchid
	{
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x13D5560", Offset = "0x13D5560", VA = "0x13D5560")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FC")]
	public static Color DarkSalmon
	{
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x13D55A8", Offset = "0x13D55A8", VA = "0x13D55A8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FD")]
	public static Color PaleGoldenrod
	{
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x13D55F0", Offset = "0x13D55F0", VA = "0x13D55F0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FE")]
	public static Color DarkSeaGreen
	{
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x13D5638", Offset = "0x13D5638", VA = "0x13D5638")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170003FF")]
	public static Color PaleGreen
	{
		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x13D567C", Offset = "0x13D567C", VA = "0x13D567C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000400")]
	public static Color DarkSlateBlue
	{
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x13D56C0", Offset = "0x13D56C0", VA = "0x13D56C0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000401")]
	public static Color PaleTurquoise
	{
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x13D5708", Offset = "0x13D5708", VA = "0x13D5708")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000402")]
	public static Color DarkSlateGray
	{
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x13D574C", Offset = "0x13D574C", VA = "0x13D574C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000403")]
	public static Color PaleVioletRed
	{
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x13D5790", Offset = "0x13D5790", VA = "0x13D5790")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000404")]
	public static Color DarkTurquoise
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x13D57D8", Offset = "0x13D57D8", VA = "0x13D57D8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000405")]
	public static Color PapayaWhip
	{
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x13D581C", Offset = "0x13D581C", VA = "0x13D581C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000406")]
	public static Color DarkViolet
	{
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x13D5860", Offset = "0x13D5860", VA = "0x13D5860")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000407")]
	public static Color PeachPuff
	{
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x13D58A4", Offset = "0x13D58A4", VA = "0x13D58A4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000408")]
	public static Color DeepPink
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x13D58E8", Offset = "0x13D58E8", VA = "0x13D58E8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000409")]
	public static Color Peru
	{
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x13D592C", Offset = "0x13D592C", VA = "0x13D592C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040A")]
	public static Color DeepSkyBlue
	{
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x13D5974", Offset = "0x13D5974", VA = "0x13D5974")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040B")]
	public static Color Pink
	{
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x13D59B4", Offset = "0x13D59B4", VA = "0x13D59B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040C")]
	public static Color DimGray
	{
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x13D59F8", Offset = "0x13D59F8", VA = "0x13D59F8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040D")]
	public static Color Plum
	{
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x13D5A38", Offset = "0x13D5A38", VA = "0x13D5A38")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040E")]
	public static Color DodgerBlue
	{
		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x13D5A7C", Offset = "0x13D5A7C", VA = "0x13D5A7C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700040F")]
	public static Color PowderBlue
	{
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x13D5AC0", Offset = "0x13D5AC0", VA = "0x13D5AC0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000410")]
	public static Color Firebrick
	{
		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x13D5B08", Offset = "0x13D5B08", VA = "0x13D5B08")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000411")]
	public static Color Purple
	{
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x13D5B4C", Offset = "0x13D5B4C", VA = "0x13D5B4C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000412")]
	public static Color FloralWhite
	{
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x13D5B8C", Offset = "0x13D5B8C", VA = "0x13D5B8C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000413")]
	public static Color Red
	{
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x13D5BD0", Offset = "0x13D5BD0", VA = "0x13D5BD0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000414")]
	public static Color ForestGreen
	{
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x13D5C0C", Offset = "0x13D5C0C", VA = "0x13D5C0C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000415")]
	public static Color RosyBrown
	{
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x13D5C50", Offset = "0x13D5C50", VA = "0x13D5C50")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000416")]
	public static Color Fuschia
	{
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x13D5C94", Offset = "0x13D5C94", VA = "0x13D5C94")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000417")]
	public static Color RoyalBlue
	{
		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x13D5CD0", Offset = "0x13D5CD0", VA = "0x13D5CD0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000418")]
	public static Color Gainsboro
	{
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x13D5D18", Offset = "0x13D5D18", VA = "0x13D5D18")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000419")]
	public static Color SaddleBrown
	{
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x13D5D58", Offset = "0x13D5D58", VA = "0x13D5D58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041A")]
	public static Color GhostWhite
	{
		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x13D5DA0", Offset = "0x13D5DA0", VA = "0x13D5DA0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041B")]
	public static Color Salmon
	{
		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x13D5DE0", Offset = "0x13D5DE0", VA = "0x13D5DE0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041C")]
	public static Color Gold
	{
		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x13D5E28", Offset = "0x13D5E28", VA = "0x13D5E28")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041D")]
	public static Color SandyBrown
	{
		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x13D5E68", Offset = "0x13D5E68", VA = "0x13D5E68")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041E")]
	public static Color Goldenrod
	{
		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x13D5EB0", Offset = "0x13D5EB0", VA = "0x13D5EB0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700041F")]
	public static Color SeaGreen
	{
		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x13D5EF8", Offset = "0x13D5EF8", VA = "0x13D5EF8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000420")]
	public static Color Gray
	{
		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x13D5F40", Offset = "0x13D5F40", VA = "0x13D5F40")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000421")]
	public static Color Seashell
	{
		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x13D5F80", Offset = "0x13D5F80", VA = "0x13D5F80")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000422")]
	public static Color Green
	{
		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x13D5FC4", Offset = "0x13D5FC4", VA = "0x13D5FC4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000423")]
	public static Color Sienna
	{
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x13D6004", Offset = "0x13D6004", VA = "0x13D6004")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000424")]
	public static Color GreenYellow
	{
		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x13D604C", Offset = "0x13D604C", VA = "0x13D604C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000425")]
	public static Color Silver
	{
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x13D6090", Offset = "0x13D6090", VA = "0x13D6090")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000426")]
	public static Color Honeydew
	{
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x13D60D0", Offset = "0x13D60D0", VA = "0x13D60D0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000427")]
	public static Color SkyBlue
	{
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x13D6110", Offset = "0x13D6110", VA = "0x13D6110")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000428")]
	public static Color HotPink
	{
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x13D6158", Offset = "0x13D6158", VA = "0x13D6158")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000429")]
	public static Color SlateBlue
	{
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x13D619C", Offset = "0x13D619C", VA = "0x13D619C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042A")]
	public static Color IndianRed
	{
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x13D61E4", Offset = "0x13D61E4", VA = "0x13D61E4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042B")]
	public static Color SlateGray
	{
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x13D6228", Offset = "0x13D6228", VA = "0x13D6228")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042C")]
	public static Color Indigo
	{
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x13D6270", Offset = "0x13D6270", VA = "0x13D6270")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042D")]
	public static Color Snow
	{
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x13D62B4", Offset = "0x13D62B4", VA = "0x13D62B4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042E")]
	public static Color Ivory
	{
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x13D62F4", Offset = "0x13D62F4", VA = "0x13D62F4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700042F")]
	public static Color SpringGreen
	{
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x13D6334", Offset = "0x13D6334", VA = "0x13D6334")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000430")]
	public static Color Khaki
	{
		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x13D6374", Offset = "0x13D6374", VA = "0x13D6374")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000431")]
	public static Color SteelBlue
	{
		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x13D63BC", Offset = "0x13D63BC", VA = "0x13D63BC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000432")]
	public static Color Lavender
	{
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x13D6404", Offset = "0x13D6404", VA = "0x13D6404")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000433")]
	public static Color Tan
	{
		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x13D6448", Offset = "0x13D6448", VA = "0x13D6448")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000434")]
	public static Color LavenderBlush
	{
		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x13D6490", Offset = "0x13D6490", VA = "0x13D6490")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000435")]
	public static Color Teal
	{
		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x13D64D4", Offset = "0x13D64D4", VA = "0x13D64D4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000436")]
	public static Color LawnGreen
	{
		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x13D6514", Offset = "0x13D6514", VA = "0x13D6514")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000437")]
	public static Color Thistle
	{
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x13D6558", Offset = "0x13D6558", VA = "0x13D6558")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000438")]
	public static Color LemonChiffon
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x13D659C", Offset = "0x13D659C", VA = "0x13D659C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000439")]
	public static Color Tomato
	{
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x13D65E0", Offset = "0x13D65E0", VA = "0x13D65E0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043A")]
	public static Color LightBlue
	{
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x13D6628", Offset = "0x13D6628", VA = "0x13D6628")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043B")]
	public static Color Turquoise
	{
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x13D6670", Offset = "0x13D6670", VA = "0x13D6670")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043C")]
	public static Color LightCoral
	{
		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x13D66B8", Offset = "0x13D66B8", VA = "0x13D66B8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043D")]
	public static Color Violet
	{
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x13D66FC", Offset = "0x13D66FC", VA = "0x13D66FC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043E")]
	public static Color LightCyan
	{
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x13D6740", Offset = "0x13D6740", VA = "0x13D6740")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700043F")]
	public static Color Wheat
	{
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x13D6780", Offset = "0x13D6780", VA = "0x13D6780")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000440")]
	public static Color LightGoldenrodYellow
	{
		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x13D67C8", Offset = "0x13D67C8", VA = "0x13D67C8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000441")]
	public static Color White
	{
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x13D680C", Offset = "0x13D680C", VA = "0x13D680C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000442")]
	public static Color LightGreen
	{
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x13D6848", Offset = "0x13D6848", VA = "0x13D6848")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000443")]
	public static Color WhiteSmoke
	{
		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x13D688C", Offset = "0x13D688C", VA = "0x13D688C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000444")]
	public static Color LightGray
	{
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x13D68CC", Offset = "0x13D68CC", VA = "0x13D68CC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000445")]
	public static Color Yellow
	{
		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x13D690C", Offset = "0x13D690C", VA = "0x13D690C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000446")]
	public static Color LightPink
	{
		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x13D6948", Offset = "0x13D6948", VA = "0x13D6948")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000447")]
	public static Color YellowGreen
	{
		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x13D698C", Offset = "0x13D698C", VA = "0x13D698C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0x13D69D4", Offset = "0x13D69D4", VA = "0x13D69D4")]
	public Colours()
	{
	}
}
[Token(Token = "0x20004A4")]
[ExecuteInEditMode]
public class MPB_Colour : MonoBehaviour
{
	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_materialIndex;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_field;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_colour;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0x16056FC", Offset = "0x16056FC", VA = "0x16056FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020FA")]
	[Address(RVA = "0x1605790", Offset = "0x1605790", VA = "0x1605790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60020FB")]
	[Address(RVA = "0x1605830", Offset = "0x1605830", VA = "0x1605830")]
	private void Update()
	{
	}

	[Token(Token = "0x60020FC")]
	[Address(RVA = "0x1605794", Offset = "0x1605794", VA = "0x1605794")]
	public void Apply()
	{
	}

	[Token(Token = "0x60020FD")]
	[Address(RVA = "0x1605898", Offset = "0x1605898", VA = "0x1605898")]
	public MPB_Colour()
	{
	}
}
[Token(Token = "0x20004A5")]
public class MPB_Texture : MonoBehaviour
{
	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_materialIndex;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E2228", Offset = "0x8E2228")]
	public string m_texField;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture m_texture;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture m_textureWas;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_setColour;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E2280", Offset = "0x8E2280")]
	public string m_colField;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E22B8", Offset = "0x8E22B8")]
	public Color m_colour;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color m_colourWas;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer _renderer;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x60020FE")]
	[Address(RVA = "0x1605904", Offset = "0x1605904", VA = "0x1605904")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60020FF")]
	[Address(RVA = "0x1605A00", Offset = "0x1605A00", VA = "0x1605A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002100")]
	[Address(RVA = "0x1605908", Offset = "0x1605908", VA = "0x1605908")]
	public void Apply()
	{
	}

	[Token(Token = "0x6002101")]
	[Address(RVA = "0x1605A9C", Offset = "0x1605A9C", VA = "0x1605A9C")]
	public MPB_Texture()
	{
	}
}
[Token(Token = "0x20004A6")]
public class InspectorButtonsTest : MonoBehaviour
{
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7508", Offset = "0x8D7508")]
	private sealed class <DoProcGen>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InspectorButtonsTest <>4__this;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0xE85D64", Offset = "0xE85D64", VA = "0xE85D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xE85DAC", Offset = "0xE85DAC", VA = "0xE85DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xE859C8", Offset = "0xE859C8", VA = "0xE859C8")]
		[DebuggerHidden]
		public <DoProcGen>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xE859F4", Offset = "0xE859F4", VA = "0xE859F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xE859F8", Offset = "0xE859F8", VA = "0xE859F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xE85D6C", Offset = "0xE85D6C", VA = "0xE85D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E22F0", Offset = "0x8E22F0")]
	[ProgressBar]
	[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E22F0", Offset = "0x8E22F0")]
	public float procgenProgress;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string procGenFeedback;

	[Token(Token = "0x6002102")]
	[Address(RVA = "0xFC9494", Offset = "0xFC9494", VA = "0xFC9494")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F10DC", Offset = "0x8F10DC")]
	private IEnumerator DoProcGen()
	{
		return null;
	}

	[Token(Token = "0x6002103")]
	[Address(RVA = "0xFC950C", Offset = "0xFC950C", VA = "0xFC950C")]
	private void ClearWorld()
	{
	}

	[Token(Token = "0x6002104")]
	[Address(RVA = "0xFC9514", Offset = "0xFC9514", VA = "0xFC9514")]
	public InspectorButtonsTest()
	{
	}
}
[Token(Token = "0x20004A8")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MinLimit;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxLimit;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowEditRange;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ShowDebugValues;

	[Token(Token = "0x600210B")]
	[Address(RVA = "0x1610894", Offset = "0x1610894", VA = "0x1610894")]
	public MinMaxAttribute(int min, int max)
	{
	}
}
[Token(Token = "0x20004A9")]
public class ProgressBarAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hideWhenZero;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x600210C")]
	[Address(RVA = "0x128EDB4", Offset = "0x128EDB4", VA = "0x128EDB4")]
	public ProgressBarAttribute()
	{
	}
}
[Token(Token = "0x20004AA")]
public class StatsBarAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueMax;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StatsBarColor color;

	[Token(Token = "0x600210D")]
	[Address(RVA = "0x11F13E8", Offset = "0x11F13E8", VA = "0x11F13E8")]
	public StatsBarAttribute([Optional] string valueMax, StatsBarColor color = StatsBarColor.Red)
	{
	}
}
[Token(Token = "0x20004AB")]
public enum StatsBarColor
{
	[Token(Token = "0x4001A5E")]
	Red,
	[Token(Token = "0x4001A5F")]
	Pink,
	[Token(Token = "0x4001A60")]
	Orange,
	[Token(Token = "0x4001A61")]
	Yellow,
	[Token(Token = "0x4001A62")]
	Green,
	[Token(Token = "0x4001A63")]
	Blue,
	[Token(Token = "0x4001A64")]
	Indigo,
	[Token(Token = "0x4001A65")]
	Violet,
	[Token(Token = "0x4001A66")]
	White
}
[Token(Token = "0x20004AC")]
public class StatsComponent : MonoBehaviour
{
	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8E23DC", Offset = "0x8E23DC")]
	public float health;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8E2418", Offset = "0x8E2418")]
	public float mana;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StatsBarAttribute", RVA = "0x8E2454", Offset = "0x8E2454")]
	public float strength;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float statMax;

	[Token(Token = "0x600210E")]
	[Address(RVA = "0x11F1430", Offset = "0x11F1430", VA = "0x11F1430")]
	private void Start()
	{
	}

	[Token(Token = "0x600210F")]
	[Address(RVA = "0x11F1444", Offset = "0x11F1444", VA = "0x11F1444")]
	private void Update()
	{
	}

	[Token(Token = "0x6002110")]
	[Address(RVA = "0x11F14F0", Offset = "0x11F14F0", VA = "0x11F14F0")]
	public StatsComponent()
	{
	}
}
[Token(Token = "0x20004AD")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7518", Offset = "0x8D7518")]
public class TestButtonAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buttonLabel;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string methodName;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isActiveAtRuntime;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isActiveInEditor;

	[Token(Token = "0x6002111")]
	[Address(RVA = "0x11FE010", Offset = "0x11FE010", VA = "0x11FE010")]
	public TestButtonAttribute(string buttonLabel, string methodName, int order = 1)
	{
	}
}
[Token(Token = "0x20004AE")]
public class VMath
{
	[Token(Token = "0x20004AF")]
	public struct Circle
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 c;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float r;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xEBA164", Offset = "0xEBA164", VA = "0xEBA164")]
		public Circle(Vector2 center, float radius)
		{
		}
	}

	[Token(Token = "0x4001A6F")]
	public const float MS_2_MPH = 2.2369356f;

	[Token(Token = "0x4001A70")]
	public const float MS_2_KPH = 3.6f;

	[Token(Token = "0x4001A71")]
	public const float KPH_2_MPH = 0.621371f;

	[Token(Token = "0x6002112")]
	[Address(RVA = "0x13F1B94", Offset = "0x13F1B94", VA = "0x13F1B94")]
	public static Vector3 Bezier(Vector3 ptA, Vector3 ptB, Vector3 ptC, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002113")]
	[Address(RVA = "0x13F1C80", Offset = "0x13F1C80", VA = "0x13F1C80")]
	private Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6002114")]
	[Address(RVA = "0x13F1DAC", Offset = "0x13F1DAC", VA = "0x13F1DAC")]
	public static float SignedAngleXZ(Transform from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x6002115")]
	[Address(RVA = "0x13F1E58", Offset = "0x13F1E58", VA = "0x13F1E58")]
	public static bool CircleCircleIntersection(Circle A, Circle B, out Vector2 p1, out Vector2 p2)
	{
		return default(bool);
	}

	[Token(Token = "0x6002116")]
	[Address(RVA = "0x13F1F94", Offset = "0x13F1F94", VA = "0x13F1F94")]
	public static Vector2 LineRectIntersect(Vector2 lineStart, Vector2 lineEnd, Vector2 ra, Vector2 rb, Vector2 rc, Vector2 rd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6002117")]
	[Address(RVA = "0x13F208C", Offset = "0x13F208C", VA = "0x13F208C")]
	private static bool LineLineIntersect(Vector2 l1a, Vector2 l1b, Vector2 l2a, Vector2 l2b, ref Vector2 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6002118")]
	[Address(RVA = "0x13F2118", Offset = "0x13F2118", VA = "0x13F2118")]
	public static float Smoothstep(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6002119")]
	[Address(RVA = "0x13F2150", Offset = "0x13F2150", VA = "0x13F2150")]
	public static float LerpSin(float from, float to, float fraction)
	{
		return default(float);
	}

	[Token(Token = "0x600211A")]
	[Address(RVA = "0x13F21A8", Offset = "0x13F21A8", VA = "0x13F21A8")]
	public static float LerpSinBounce(float from, float to, float fraction)
	{
		return default(float);
	}

	[Token(Token = "0x600211B")]
	[Address(RVA = "0x13F220C", Offset = "0x13F220C", VA = "0x13F220C")]
	public static Vector3 LerpSinBounce(Vector3 from, Vector3 to, float fraction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600211C")]
	[Address(RVA = "0x13F22A8", Offset = "0x13F22A8", VA = "0x13F22A8")]
	public static float Eerp(float from, float to, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600211D")]
	[Address(RVA = "0x13F22F0", Offset = "0x13F22F0", VA = "0x13F22F0")]
	public static float Round(float value, int decimalPlaces)
	{
		return default(float);
	}

	[Token(Token = "0x600211E")]
	[Address(RVA = "0x13F23A0", Offset = "0x13F23A0", VA = "0x13F23A0")]
	public static float Sin01(float angRad)
	{
		return default(float);
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0x13F23C0", Offset = "0x13F23C0", VA = "0x13F23C0")]
	public static float Cos01(float angRad)
	{
		return default(float);
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0x13F23E0", Offset = "0x13F23E0", VA = "0x13F23E0")]
	public static int Wrap(int v, int minInclusive, int maxExclusive)
	{
		return default(int);
	}

	[Token(Token = "0x6002121")]
	[Address(RVA = "0x13F2400", Offset = "0x13F2400", VA = "0x13F2400")]
	public static float Wrap(float v, float minInclusive, float maxExclusive)
	{
		return default(float);
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0x13F242C", Offset = "0x13F242C", VA = "0x13F242C")]
	public static float WrapDegrees(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0x13F2470", Offset = "0x13F2470", VA = "0x13F2470")]
	public static float WrapDegrees180(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0x13F24BC", Offset = "0x13F24BC", VA = "0x13F24BC")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002125")]
	[Address(RVA = "0x13F253C", Offset = "0x13F253C", VA = "0x13F253C")]
	public bool WithinRadius(Vector3 A, Vector3 B, float r)
	{
		return default(bool);
	}

	[Token(Token = "0x6002126")]
	[Address(RVA = "0x13F258C", Offset = "0x13F258C", VA = "0x13F258C")]
	public static float Normalise(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002127")]
	[Address(RVA = "0x13F25A0", Offset = "0x13F25A0", VA = "0x13F25A0")]
	public static float NormaliseUnclamped(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002128")]
	[Address(RVA = "0x13F25B0", Offset = "0x13F25B0", VA = "0x13F25B0")]
	public static float UnNormalise(float normlisedValue, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0x13F25E4", Offset = "0x13F25E4", VA = "0x13F25E4")]
	public float Propagate(float w, float p, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600212A")]
	[Address(RVA = "0x13F2600", Offset = "0x13F2600", VA = "0x13F2600")]
	public static Vector2 Abs(Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600212B")]
	[Address(RVA = "0x13F261C", Offset = "0x13F261C", VA = "0x13F261C")]
	public static Vector3 Abs(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600212C")]
	[Address(RVA = "0x13F2644", Offset = "0x13F2644", VA = "0x13F2644")]
	public static Vector3 Mul(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600212D")]
	[Address(RVA = "0x13F2654", Offset = "0x13F2654", VA = "0x13F2654")]
	public static Vector3 Div(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600212E")]
	[Address(RVA = "0x13F2664", Offset = "0x13F2664", VA = "0x13F2664")]
	public VMath()
	{
	}
}
[Serializable]
[Token(Token = "0x20004B0")]
public class Vector3Range
{
	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Min;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Max;

	[Token(Token = "0x1700044A")]
	public Vector3 Range
	{
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x13F3C24", Offset = "0x13F3C24", VA = "0x13F3C24")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700044B")]
	public Vector3 RandomValue
	{
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x13F3C44", Offset = "0x13F3C44", VA = "0x13F3C44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6002132")]
	[Address(RVA = "0x13F3CB0", Offset = "0x13F3CB0", VA = "0x13F3CB0")]
	public Vector3Range(Vector3 min, Vector3 max)
	{
	}
}
[Token(Token = "0x20004B1")]
public class CenterOfMassSetter : MonoBehaviour
{
	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_centerOfMass;

	[Token(Token = "0x6002133")]
	[Address(RVA = "0x13CCCF8", Offset = "0x13CCCF8", VA = "0x13CCCF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002134")]
	[Address(RVA = "0x13CCDF8", Offset = "0x13CCDF8", VA = "0x13CCDF8")]
	public CenterOfMassSetter()
	{
	}
}
[Token(Token = "0x20004B2")]
public class BitMaskAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type propType;

	[Token(Token = "0x6002135")]
	[Address(RVA = "0x104AD58", Offset = "0x104AD58", VA = "0x104AD58")]
	public BitMaskAttribute(Type aType)
	{
	}
}
[Token(Token = "0x20004B3")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7550", Offset = "0x8D7550")]
public class ConditionalHideAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ConditionalSourceField;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HideInInspector;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool HideIfTrue;

	[Token(Token = "0x6002136")]
	[Address(RVA = "0x13D7888", Offset = "0x13D7888", VA = "0x13D7888")]
	public ConditionalHideAttribute(string conditionalSourceField)
	{
	}

	[Token(Token = "0x6002137")]
	[Address(RVA = "0x13D7910", Offset = "0x13D7910", VA = "0x13D7910")]
	public ConditionalHideAttribute(string conditionalSourceField, bool showInInspector)
	{
	}

	[Token(Token = "0x6002138")]
	[Address(RVA = "0x13D79A0", Offset = "0x13D79A0", VA = "0x13D79A0")]
	public ConditionalHideAttribute(string conditionalSourceField, bool showInInspector, bool hideIfTrue)
	{
	}
}
[Token(Token = "0x20004B4")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7588", Offset = "0x8D7588")]
public class ConditionalShowEnumAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ConditionalSourceField;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ConditionalSourceValue;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HideInInspector;

	[Token(Token = "0x6002139")]
	[Address(RVA = "0x13D7A44", Offset = "0x13D7A44", VA = "0x13D7A44")]
	public ConditionalShowEnumAttribute(string conditionalSourceField, string conditionalSourceValue)
	{
	}

	[Token(Token = "0x600213A")]
	[Address(RVA = "0x13D7AF8", Offset = "0x13D7AF8", VA = "0x13D7AF8")]
	public ConditionalShowEnumAttribute(string conditionalSourceField, string conditionalSourceValue, bool hideInInspector)
	{
	}
}
[Token(Token = "0x20004B5")]
public class DropdownAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ListSourceField;

	[Token(Token = "0x600213B")]
	[Address(RVA = "0x100D7D0", Offset = "0x100D7D0", VA = "0x100D7D0")]
	public DropdownAttribute(string listSourceField)
	{
	}
}
[Token(Token = "0x20004B6")]
public class EnumFlags : PropertyAttribute
{
	[Token(Token = "0x600213C")]
	[Address(RVA = "0x100E658", Offset = "0x100E658", VA = "0x100E658")]
	public EnumFlags()
	{
	}
}
[Token(Token = "0x20004B7")]
public class HighlightAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color col;

	[Token(Token = "0x600213D")]
	[Address(RVA = "0x12AF154", Offset = "0x12AF154", VA = "0x12AF154")]
	public HighlightAttribute(float r = 1f, float g = 0f, float b = 0f)
	{
	}
}
[Token(Token = "0x20004B8")]
public class HighlightDemo : MonoBehaviour
{
	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8E2490", Offset = "0x8E2490")]
	public int Int;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8E24AC", Offset = "0x8E24AC")]
	public float Float;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HighlightAttribute", RVA = "0x8E24CC", Offset = "0x8E24CC")]
	public float[] Array;

	[Token(Token = "0x600213E")]
	[Address(RVA = "0x12AF1C4", Offset = "0x12AF1C4", VA = "0x12AF1C4")]
	public HighlightDemo()
	{
	}
}
[Token(Token = "0x20004B9")]
public class HighlightIfNullAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color col;

	[Token(Token = "0x600213F")]
	[Address(RVA = "0x12AF510", Offset = "0x12AF510", VA = "0x12AF510")]
	public HighlightIfNullAttribute(float r = 1f, float g = 0f, float b = 0f)
	{
	}
}
[Token(Token = "0x20004BA")]
public class ReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6002140")]
	[Address(RVA = "0x129808C", Offset = "0x129808C", VA = "0x129808C")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x20004BB")]
public class EventTriggerUIButton : Triggerable
{
	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button m_button;

	[Token(Token = "0x6002141")]
	[Address(RVA = "0x1015E2C", Offset = "0x1015E2C", VA = "0x1015E2C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0x1015E54", Offset = "0x1015E54", VA = "0x1015E54")]
	public EventTriggerUIButton()
	{
	}
}
[Serializable]
[Token(Token = "0x20004BC")]
public class Spring
{
	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Vector3 m_anchor;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Vector3 m_endPoint;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_springK;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_springDamp;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_maxLength;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxTimeStep;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_vel;

	[Token(Token = "0x6002143")]
	[Address(RVA = "0x11F0908", Offset = "0x11F0908", VA = "0x11F0908")]
	public void Update()
	{
	}

	[Token(Token = "0x6002144")]
	[Address(RVA = "0x11F0A3C", Offset = "0x11F0A3C", VA = "0x11F0A3C")]
	public Spring()
	{
	}
}
[Token(Token = "0x20004BD")]
public class DisableAfter : MonoBehaviour
{
	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75C0", Offset = "0x8D75C0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableAfter <>4__this;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0xE771E4", Offset = "0xE771E4", VA = "0xE771E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0xE7722C", Offset = "0xE7722C", VA = "0xE7722C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xE77128", Offset = "0xE77128", VA = "0xE77128")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xE77154", Offset = "0xE77154", VA = "0xE77154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xE77158", Offset = "0xE77158", VA = "0xE77158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xE771EC", Offset = "0xE771EC", VA = "0xE771EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_disableAfterNFrames;

	[Token(Token = "0x6002145")]
	[Address(RVA = "0x10081E8", Offset = "0x10081E8", VA = "0x10081E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F118C", Offset = "0x8F118C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6002146")]
	[Address(RVA = "0x1008260", Offset = "0x1008260", VA = "0x1008260")]
	public DisableAfter()
	{
	}
}
[Token(Token = "0x20004BF")]
public class Names
{
	[Token(Token = "0x20004C0")]
	public enum Gender
	{
		[Token(Token = "0x4001A93")]
		Female,
		[Token(Token = "0x4001A94")]
		Male,
		[Token(Token = "0x4001A95")]
		Any
	}

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] m_boysNames;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] m_girlsNames;

	[Token(Token = "0x600214D")]
	[Address(RVA = "0x1335AF8", Offset = "0x1335AF8", VA = "0x1335AF8")]
	public static void LoadNames()
	{
	}

	[Token(Token = "0x600214E")]
	[Address(RVA = "0x1335D64", Offset = "0x1335D64", VA = "0x1335D64")]
	public static string GetRandom(Gender gender = Gender.Any, int fromTopN = -1, [Optional] System.Random rand)
	{
		return null;
	}

	[Token(Token = "0x600214F")]
	[Address(RVA = "0x1335EC4", Offset = "0x1335EC4", VA = "0x1335EC4")]
	public Names()
	{
	}
}
[Token(Token = "0x20004C1")]
public class WwiseAnimEvent : MonoBehaviour
{
	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_wwiseObj;

	[Token(Token = "0x6002151")]
	[Address(RVA = "0x14015D4", Offset = "0x14015D4", VA = "0x14015D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6002152")]
	[Address(RVA = "0x140167C", Offset = "0x140167C", VA = "0x140167C")]
	public void PostWwiseEvent(string eventName)
	{
	}

	[Token(Token = "0x6002153")]
	[Address(RVA = "0x14016F4", Offset = "0x14016F4", VA = "0x14016F4")]
	public WwiseAnimEvent()
	{
	}
}
[Token(Token = "0x20004C2")]
public class WwiseAnimEventMultipleSources : MonoBehaviour
{
	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_audioSourceWwiseObjs;

	[Token(Token = "0x6002154")]
	[Address(RVA = "0x14016FC", Offset = "0x14016FC", VA = "0x14016FC")]
	public void PostWwiseEventToSpecificSource(AnimationEvent e)
	{
	}

	[Token(Token = "0x6002155")]
	[Address(RVA = "0x14018B4", Offset = "0x14018B4", VA = "0x14018B4")]
	public WwiseAnimEventMultipleSources()
	{
	}
}
[Token(Token = "0x20004C3")]
public class WwiseImpact : MonoBehaviour
{
	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_rtpc;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_playSoundEvent;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange m_impulseRange;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_minTimeBetweenTriggers;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_lastTimeTriggered;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_debug;

	[Token(Token = "0x6002156")]
	[Address(RVA = "0x1401BA8", Offset = "0x1401BA8", VA = "0x1401BA8")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6002157")]
	[Address(RVA = "0x1401D38", Offset = "0x1401D38", VA = "0x1401D38")]
	public WwiseImpact()
	{
	}
}
[Serializable]
[Token(Token = "0x20004C4")]
public class WWiseRTPC
{
	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameObj;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRange Range;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Value;

	[Token(Token = "0x6002158")]
	[Address(RVA = "0x13FF470", Offset = "0x13FF470", VA = "0x13FF470")]
	public void SetGameObjectIfNull(GameObject ngo)
	{
	}

	[Token(Token = "0x6002159")]
	[Address(RVA = "0x13FF50C", Offset = "0x13FF50C", VA = "0x13FF50C")]
	public void Set(float newValue)
	{
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x13FF58C", Offset = "0x13FF58C", VA = "0x13FF58C")]
	public void SetFromNormalised(float newValue)
	{
	}

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x13FF648", Offset = "0x13FF648", VA = "0x13FF648")]
	public WWiseRTPC()
	{
	}
}
[Token(Token = "0x20004C5")]
public class WwiseRTPCSetter : MonoBehaviour
{
	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_rtpcName;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_audioObj;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatRange Range;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2508", Offset = "0x8E2508")]
	public float m_valueNormalised;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_valueNormalisedLastFrame;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_valueExact;

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x1401E68", Offset = "0x1401E68", VA = "0x1401E68")]
	private void Update()
	{
	}

	[Token(Token = "0x600215D")]
	[Address(RVA = "0x1401F1C", Offset = "0x1401F1C", VA = "0x1401F1C")]
	public WwiseRTPCSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20004C6")]
public class WwiseSwitch
{
	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string SwitchName;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ValueNames;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Value;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GameObj;

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x14023A4", Offset = "0x14023A4", VA = "0x14023A4")]
	public WwiseSwitch(string name, string[] values)
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0x14023F4", Offset = "0x14023F4", VA = "0x14023F4")]
	public void SetGameObjectIfNull(GameObject ngo)
	{
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0x1402490", Offset = "0x1402490", VA = "0x1402490")]
	public void Set(int id)
	{
	}

	[Token(Token = "0x6002161")]
	[Address(RVA = "0x1402548", Offset = "0x1402548", VA = "0x1402548")]
	public void Set(string newValue)
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x14025D8", Offset = "0x14025D8", VA = "0x14025D8")]
	public void Randomise()
	{
	}
}
[Token(Token = "0x20004C7")]
public class printf : MonoBehaviour
{
	[Token(Token = "0x20004C8")]
	private class PersistentMessage
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3? pos;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string str;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timer;

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xEBC95C", Offset = "0xEBC95C", VA = "0xEBC95C")]
		public PersistentMessage()
		{
		}
	}

	[Token(Token = "0x20004C9")]
	private class PositionalMessage
	{
		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string str;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 pos;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color col;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xEBC964", Offset = "0xEBC964", VA = "0xEBC964")]
		public PositionalMessage()
		{
		}
	}

	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75D0", Offset = "0x8D75D0")]
	private sealed class <ClearAtEndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0xEBC218", Offset = "0xEBC218", VA = "0xEBC218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002186")]
			[Address(RVA = "0xEBC260", Offset = "0xEBC260", VA = "0xEBC260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xEBC0D0", Offset = "0xEBC0D0", VA = "0xEBC0D0")]
		[DebuggerHidden]
		public <ClearAtEndOfFrame>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xEBC0FC", Offset = "0xEBC0FC", VA = "0xEBC0FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xEBC100", Offset = "0xEBC100", VA = "0xEBC100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xEBC220", Offset = "0xEBC220", VA = "0xEBC220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75E0", Offset = "0x8D75E0")]
	private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public printf <>4__this;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <cam>5__2;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xEBC90C", Offset = "0xEBC90C", VA = "0xEBC90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600218C")]
			[Address(RVA = "0xEBC954", Offset = "0xEBC954", VA = "0xEBC954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xEBC268", Offset = "0xEBC268", VA = "0xEBC268")]
		[DebuggerHidden]
		public <Start>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xEBC294", Offset = "0xEBC294", VA = "0xEBC294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xEBC298", Offset = "0xEBC298", VA = "0xEBC298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xEBC914", Offset = "0xEBC914", VA = "0xEBC914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static printf Instance;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject ms_instanceObject;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool ms_showInScene;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<PositionalMessage> m_positionalMessages;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<PersistentMessage> ms_logs;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int ms_logCount;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int ms_maxLogs;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ArrayList m_lines;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_allLines;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_allLogs;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_doOnGui;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D m_whiteTex;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GUIStyle m_guiStyle;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Font m_monoFont;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro m_linesLabel;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro m_logsLabel;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material m_AlwaysOnTopMaterial;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material m_DepthTestMaterial;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool messagesAtTop;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E2520", Offset = "0x8E2520")]
	public bool m_showSystemLogs;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E2568", Offset = "0x8E2568")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E2568", Offset = "0x8E2568")]
	public bool m_showLogs;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E25D8", Offset = "0x8E25D8")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E25D8", Offset = "0x8E25D8")]
	public bool m_showWarnings;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8E2648", Offset = "0x8E2648")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E2648", Offset = "0x8E2648")]
	public bool m_showErrors;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Dictionary<LogType, string> LogFormat;

	[Token(Token = "0x6002163")]
	[Address(RVA = "0xFF0D28", Offset = "0xFF0D28", VA = "0xFF0D28")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F123C", Offset = "0x8F123C")]
	private static void TogglePrintf()
	{
	}

	[Token(Token = "0x6002164")]
	[Address(RVA = "0xFF0E2C", Offset = "0xFF0E2C", VA = "0xFF0E2C")]
	private static void Instantiate()
	{
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0xFF1104", Offset = "0xFF1104", VA = "0xFF1104")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0xFF11F4", Offset = "0xFF11F4", VA = "0xFF11F4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1284", Offset = "0x8F1284")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1284", Offset = "0x8F1284")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1284", Offset = "0x8F1284")]
	public static void Print(string s)
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0xFF1338", Offset = "0xFF1338", VA = "0xFF1338")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1308", Offset = "0x8F1308")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1308", Offset = "0x8F1308")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1308", Offset = "0x8F1308")]
	public static void Print(float f)
	{
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0xFF133C", Offset = "0xFF133C", VA = "0xFF133C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F138C", Offset = "0x8F138C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F138C", Offset = "0x8F138C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F138C", Offset = "0x8F138C")]
	public static void Print(Vector3 vector, string title = "")
	{
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0xFF1508", Offset = "0xFF1508", VA = "0xFF1508")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1410", Offset = "0x8F1410")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1410", Offset = "0x8F1410")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1410", Offset = "0x8F1410")]
	public static void Print(string s, Vector3 p)
	{
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0xFF150C", Offset = "0xFF150C", VA = "0xFF150C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1494", Offset = "0x8F1494")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1494", Offset = "0x8F1494")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1494", Offset = "0x8F1494")]
	public static void Print(string s, Vector3 p, Vector2 offsetScreenSpace)
	{
	}

	[Token(Token = "0x600216B")]
	[Address(RVA = "0xFF1510", Offset = "0xFF1510", VA = "0xFF1510")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1518", Offset = "0x8F1518")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1518", Offset = "0x8F1518")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1518", Offset = "0x8F1518")]
	public static void Print(string s, Vector3 p, Color c, Vector2 offsetScreenSpace)
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0xFF155C", Offset = "0xFF155C", VA = "0xFF155C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F159C", Offset = "0x8F159C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F159C", Offset = "0x8F159C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F159C", Offset = "0x8F159C")]
	private static void Print(string s, Vector2 p, Color c)
	{
	}

	[Token(Token = "0x600216D")]
	[Address(RVA = "0xFF1788", Offset = "0xFF1788", VA = "0xFF1788")]
	public static void PrintCallstack()
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0xFF1848", Offset = "0xFF1848", VA = "0xFF1848")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1620", Offset = "0x8F1620")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1620", Offset = "0x8F1620")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1620", Offset = "0x8F1620")]
	public static void Log(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0xFF1ADC", Offset = "0xFF1ADC", VA = "0xFF1ADC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F16A4", Offset = "0x8F16A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F16A4", Offset = "0x8F16A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F16A4", Offset = "0x8F16A4")]
	public static void SystemLog(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002170")]
	[Address(RVA = "0xFF1BA4", Offset = "0xFF1BA4", VA = "0xFF1BA4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1728", Offset = "0x8F1728")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1728", Offset = "0x8F1728")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F1728", Offset = "0x8F1728")]
	public static void SystemLogError(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002171")]
	[Address(RVA = "0xFF1C6C", Offset = "0xFF1C6C", VA = "0xFF1C6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F17AC", Offset = "0x8F17AC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F17AC", Offset = "0x8F17AC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F17AC", Offset = "0x8F17AC")]
	public static void LogNoTimeStamp(string s, float time = 8f, [Optional] Vector3? position)
	{
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0xFF1E2C", Offset = "0xFF1E2C", VA = "0xFF1E2C")]
	public static void ClearLogs()
	{
	}

	[Token(Token = "0x6002173")]
	[Address(RVA = "0xFF1EB0", Offset = "0xFF1EB0", VA = "0xFF1EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1830", Offset = "0x8F1830")]
	private IEnumerator ClearAtEndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6002174")]
	[Address(RVA = "0xFF1F0C", Offset = "0xFF1F0C", VA = "0xFF1F0C")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F1890", Offset = "0x8F1890")]
	public void ClearLog()
	{
	}

	[Token(Token = "0x6002175")]
	[Address(RVA = "0xFF1F90", Offset = "0xFF1F90", VA = "0xFF1F90")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F18D8", Offset = "0x8F18D8")]
	public void RenderOnTop()
	{
	}

	[Token(Token = "0x6002176")]
	[Address(RVA = "0xFF1FF4", Offset = "0xFF1FF4", VA = "0xFF1FF4")]
	[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F1920", Offset = "0x8F1920")]
	public void RenderWithDepthTest()
	{
	}

	[Token(Token = "0x6002177")]
	[Address(RVA = "0xFF2058", Offset = "0xFF2058", VA = "0xFF2058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002178")]
	[Address(RVA = "0xFF21AC", Offset = "0xFF21AC", VA = "0xFF21AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1968", Offset = "0x8F1968")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6002179")]
	[Address(RVA = "0xFF2224", Offset = "0xFF2224", VA = "0xFF2224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600217A")]
	[Address(RVA = "0xFF2258", Offset = "0xFF2258", VA = "0xFF2258")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0xFF22C0", Offset = "0xFF22C0", VA = "0xFF22C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600217C")]
	[Address(RVA = "0xFF2500", Offset = "0xFF2500", VA = "0xFF2500")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F19C8", Offset = "0x8F19C8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F19C8", Offset = "0x8F19C8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F19C8", Offset = "0x8F19C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0xFF3370", Offset = "0xFF3370", VA = "0xFF3370")]
	public printf()
	{
	}
}
namespace Vitei
{
	[Token(Token = "0x20004CC")]
	public class AnimEventBroadcastMessage : MonoBehaviour
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_targetObject;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTargetObject;

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1499AC0", Offset = "0x1499AC0", VA = "0x1499AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1499B78", Offset = "0x1499B78", VA = "0x1499B78")]
		private void BroadcastAMessage(string message)
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1499CA0", Offset = "0x1499CA0", VA = "0x1499CA0")]
		public AnimEventBroadcastMessage()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class AnimEventFireTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_rootObject;

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1499CA8", Offset = "0x1499CA8", VA = "0x1499CA8")]
		private void FireTrigger(string objName)
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1499E18", Offset = "0x1499E18", VA = "0x1499E18")]
		public AnimEventFireTrigger()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class AnimEventGameObjectGroups : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CF")]
		public class GameObjState
		{
			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_gameObj;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_setActive;

			[Token(Token = "0x6002194")]
			[Address(RVA = "0xFFC8E8", Offset = "0xFFC8E8", VA = "0xFFC8E8")]
			public GameObjState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D0")]
		public class GameObjStateGroup
		{
			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_name;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObjState[] m_items;

			[Token(Token = "0x6002195")]
			[Address(RVA = "0xFFC8F0", Offset = "0xFFC8F0", VA = "0xFFC8F0")]
			public GameObjStateGroup()
			{
			}
		}

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjStateGroup[] m_groups;

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x1499E20", Offset = "0x1499E20", VA = "0x1499E20")]
		public void AnimEventGameObjectGroup(string name)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1499EF8", Offset = "0x1499EF8", VA = "0x1499EF8")]
		public AnimEventGameObjectGroups()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class AnimEventGameObjectSetActive : MonoBehaviour
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_gameObjects;

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x1499F00", Offset = "0x1499F00", VA = "0x1499F00")]
		public void GameObjectSetActive(int id)
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x1499F48", Offset = "0x1499F48", VA = "0x1499F48")]
		public void GameObjectSetInactive(int id)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x1499F90", Offset = "0x1499F90", VA = "0x1499F90")]
		public AnimEventGameObjectSetActive()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class AnimEventPlayParticles : MonoBehaviour
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_rootObject;

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1499F98", Offset = "0x1499F98", VA = "0x1499F98")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x149A040", Offset = "0x149A040", VA = "0x149A040")]
		public void PlayParticles(string gameObjName)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x149A378", Offset = "0x149A378", VA = "0x149A378")]
		public void StopParticles(string gameObjName)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x149A550", Offset = "0x149A550", VA = "0x149A550")]
		public AnimEventPlayParticles()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class AnimEventSendMessage : MonoBehaviour
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_targetObject;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTargetObject;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_findObjectOnExectute;

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x149A558", Offset = "0x149A558", VA = "0x149A558")]
		private void Awake()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x149A668", Offset = "0x149A668", VA = "0x149A668")]
		private void SendAMessage(string message)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x149A874", Offset = "0x149A874", VA = "0x149A874")]
		public AnimEventSendMessage()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class AnimEventSetMaterials : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public class GameObjMats
		{
			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] m_objRoots;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material m_material;

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xFFC8F8", Offset = "0xFFC8F8", VA = "0xFFC8F8")]
			public GameObjMats()
			{
			}
		}

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjMats[] m_groups;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x149A87C", Offset = "0x149A87C", VA = "0x149A87C")]
		private void AnimEventSetMaterial(int groupIndex)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x149A92C", Offset = "0x149A92C", VA = "0x149A92C")]
		public AnimEventSetMaterials()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class DebugDraw
	{
		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xF210D4", Offset = "0xF210D4", VA = "0xF210D4")]
		public static void Line(float x1, float y1, float x2, float y2)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xF2112C", Offset = "0xF2112C", VA = "0xF2112C")]
		public static void Line(float x1, float y1, float x2, float y2, Color col)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xF21258", Offset = "0xF21258", VA = "0xF21258")]
		public static void Crosshair(float x1, float y1, float scale, Color col)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xF212E4", Offset = "0xF212E4", VA = "0xF212E4")]
		public static void Circle(Vector3 p, float r, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xF21444", Offset = "0xF21444", VA = "0xF21444")]
		public static void Circle(Vector3 p, float r, Vector3 normal, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xF216B0", Offset = "0xF216B0", VA = "0xF216B0")]
		public static void DrawAxisGizmo(Vector3 pos, float scale = 1f)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xF21818", Offset = "0xF21818", VA = "0xF21818")]
		public static void CircleWithGizmos(Vector3 p, float r, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xF218B0", Offset = "0xF218B0", VA = "0xF218B0")]
		public static void CircleWithGizmos(Vector3 p, float r, Vector3 normal, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xF21AD8", Offset = "0xF21AD8", VA = "0xF21AD8")]
		public static void EllipseGizmo(Vector3 p, float rx, float ry, int res = 16, float totalAngle = 360f, float startAngle = 0f)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xF21BF8", Offset = "0xF21BF8", VA = "0xF21BF8")]
		public static void Ellipse(Vector3 p, float rx, float ry, Color col, int res = 16)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xF21D64", Offset = "0xF21D64", VA = "0xF21D64")]
		public static void Ellipse(Transform t, float rx, float rz, Color col, int res = 16, [Optional] Vector3 offset)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xF21FBC", Offset = "0xF21FBC", VA = "0xF21FBC")]
		public static void DrawHandlesArcConnecting(Vector3 ptA, Vector3 ptB)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xF21FC0", Offset = "0xF21FC0", VA = "0xF21FC0")]
		public static void DrawAxis(Vector3 pos, float scale = 1f, float duration = 0f)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xF221E0", Offset = "0xF221E0", VA = "0xF221E0")]
		public static void Bounds(Bounds b, Color col, float time = 0f)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xF22554", Offset = "0xF22554", VA = "0xF22554")]
		public DebugDraw()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class DebugDrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_colourStart;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_colourEnd;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_depthSteps;

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xF2255C", Offset = "0xF2255C", VA = "0xF2255C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xF225A0", Offset = "0xF225A0", VA = "0xF225A0")]
		private void DrawTree(Transform t, int depth)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xF226DC", Offset = "0xF226DC", VA = "0xF226DC")]
		public DebugDrawSkeleton()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class Label3D : MonoBehaviour
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Transform, Label3D> ms_labels;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_label;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_baseScale;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro m_text;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer m_renderer;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_attachedTo;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lifetime;

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x115EA28", Offset = "0x115EA28", VA = "0x115EA28")]
		public static Label3D AddLabel(Transform trans, string txt, float lifetime = -1f)
		{
			return null;
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x115ED80", Offset = "0x115ED80", VA = "0x115ED80")]
		public static Label3D Label(Transform trans, string txt)
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x115F028", Offset = "0x115F028", VA = "0x115F028")]
		public static void HideLabel(Transform trans)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x115F128", Offset = "0x115F128", VA = "0x115F128")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x115EB30", Offset = "0x115EB30", VA = "0x115EB30")]
		private void Init()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x115F1A8", Offset = "0x115F1A8", VA = "0x115F1A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x115F488", Offset = "0x115F488", VA = "0x115F488")]
		public Label3D()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class HSVColour
	{
		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x12A4E30", Offset = "0x12A4E30", VA = "0x12A4E30")]
		public static Color Rand()
		{
			return default(Color);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x12A4E60", Offset = "0x12A4E60", VA = "0x12A4E60")]
		public static Color HSV(float h, float s, float v, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x12A4FBC", Offset = "0x12A4FBC", VA = "0x12A4FBC")]
		public static void ColorToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x12A50EC", Offset = "0x12A50EC", VA = "0x12A50EC")]
		public HSVColour()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class RandomColour : MonoBehaviour
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_totallyRandom;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color m_from;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color m_to;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x12951B4", Offset = "0x12951B4", VA = "0x12951B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x12952B8", Offset = "0x12952B8", VA = "0x12952B8")]
		public static Color GetRandom()
		{
			return default(Color);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1295344", Offset = "0x1295344", VA = "0x1295344")]
		public static Color GetRandomBetween(Color c1, Color c2)
		{
			return default(Color);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1295414", Offset = "0x1295414", VA = "0x1295414")]
		public RandomColour()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class RandomColourMPB : MonoBehaviour
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_totallyRandom;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E26B8", Offset = "0x8E26B8")]
		public Gradient m_col;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color m_actualColor;

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1295460", Offset = "0x1295460", VA = "0x1295460")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1295650", Offset = "0x1295650", VA = "0x1295650")]
		public static Color GetRandom()
		{
			return default(Color);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x12956DC", Offset = "0x12956DC", VA = "0x12956DC")]
		public RandomColourMPB()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class Blink : MonoBehaviour
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer[] m_renderers;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_blinkRate;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_onOffRatio;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x104AD8C", Offset = "0x104AD8C", VA = "0x104AD8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x104ADE8", Offset = "0x104ADE8", VA = "0x104ADE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x104AE9C", Offset = "0x104AE9C", VA = "0x104AE9C")]
		public Blink()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class MaterialSwapper : MonoBehaviour
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_materialtoSwap;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] m_altMaterials;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_sometimesDontSwap;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Material[]> m_originalMaterials;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool originalSwapComplete;

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1607D28", Offset = "0x1607D28", VA = "0x1607D28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1608080", Offset = "0x1608080", VA = "0x1608080")]
		public void SwapBack()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1607DA0", Offset = "0x1607DA0", VA = "0x1607DA0")]
		public void DoSwap()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x1608218", Offset = "0x1608218", VA = "0x1608218")]
		public MaterialSwapper()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class TextureSwapper : MonoBehaviour
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_material;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture[] m_textures;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_sometimesDontSwap;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture m_originalTexture;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x10B218C", Offset = "0x10B218C", VA = "0x10B218C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x10B23B0", Offset = "0x10B23B0", VA = "0x10B23B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x10B2480", Offset = "0x10B2480", VA = "0x10B2480")]
		public TextureSwapper()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class Maths
	{
		[Token(Token = "0x20004E0")]
		public struct Circle
		{
			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 c;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float r;

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x1058650", Offset = "0x1058650", VA = "0x1058650")]
			public Circle(Vector2 center, float radius)
			{
			}
		}

		[Token(Token = "0x4001AFC")]
		public const float MS_2_MPH = 2.2369356f;

		[Token(Token = "0x4001AFD")]
		public const float MS_2_KPH = 3.6f;

		[Token(Token = "0x4001AFE")]
		public const float KPH_2_MPH = 0.621371f;

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x1608228", Offset = "0x1608228", VA = "0x1608228")]
		public static Vector3 Bezier(Vector3 ptA, Vector3 ptB, Vector3 ptC, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x1608314", Offset = "0x1608314", VA = "0x1608314")]
		public static Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1608440", Offset = "0x1608440", VA = "0x1608440")]
		public static Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point, out float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x160857C", Offset = "0x160857C", VA = "0x160857C")]
		public static float SignedAngleXZ(Transform from, Vector3 to)
		{
			return default(float);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1608628", Offset = "0x1608628", VA = "0x1608628")]
		public static bool CircleCircleIntersection(Circle A, Circle B, out Vector2 p1, out Vector2 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1608764", Offset = "0x1608764", VA = "0x1608764")]
		public static float Smoothstep(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x160879C", Offset = "0x160879C", VA = "0x160879C")]
		public static float LerpSin(float from, float to, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x16087F4", Offset = "0x16087F4", VA = "0x16087F4")]
		public static float LerpSinBounce(float from, float to, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1608858", Offset = "0x1608858", VA = "0x1608858")]
		public static Vector3 LerpSinBounce(Vector3 from, Vector3 to, float fraction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x16088F4", Offset = "0x16088F4", VA = "0x16088F4")]
		public static float Round(float value, int decimalPlaces)
		{
			return default(float);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x16089A4", Offset = "0x16089A4", VA = "0x16089A4")]
		public static float Sin01(float angRad)
		{
			return default(float);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x16089C4", Offset = "0x16089C4", VA = "0x16089C4")]
		public static float Cos01(float angRad)
		{
			return default(float);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x16089E4", Offset = "0x16089E4", VA = "0x16089E4")]
		public static int Wrap(int v, int minInclusive, int maxExclusive)
		{
			return default(int);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1608A04", Offset = "0x1608A04", VA = "0x1608A04")]
		public static float Wrap(float v, float minInclusive, float maxExclusive)
		{
			return default(float);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1608A30", Offset = "0x1608A30", VA = "0x1608A30")]
		public static float WrapDegrees(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1608A74", Offset = "0x1608A74", VA = "0x1608A74")]
		public static float WrapDegrees180(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1608AC0", Offset = "0x1608AC0", VA = "0x1608AC0")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1608B40", Offset = "0x1608B40", VA = "0x1608B40")]
		public bool WithinRadius(Vector3 A, Vector3 B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1608B90", Offset = "0x1608B90", VA = "0x1608B90")]
		public static float Normalise(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1608BA4", Offset = "0x1608BA4", VA = "0x1608BA4")]
		public static float NormaliseUnclamped(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1608BB4", Offset = "0x1608BB4", VA = "0x1608BB4")]
		public static float UnNormalise(float normlisedValue, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1608BE8", Offset = "0x1608BE8", VA = "0x1608BE8")]
		public static Vector2 Abs(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1608C04", Offset = "0x1608C04", VA = "0x1608C04")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1608C2C", Offset = "0x1608C2C", VA = "0x1608C2C")]
		public static Vector3 Mul(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1608C3C", Offset = "0x1608C3C", VA = "0x1608C3C")]
		public static Vector3 Div(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1608C4C", Offset = "0x1608C4C", VA = "0x1608C4C")]
		public Maths()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E1")]
	public class FloatRange
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Min;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Max;

		[Token(Token = "0x17000452")]
		public float Range
		{
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x11B4310", Offset = "0x11B4310", VA = "0x11B4310")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000453")]
		public float RandomValue
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x11B431C", Offset = "0x11B431C", VA = "0x11B431C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x11B4328", Offset = "0x11B4328", VA = "0x11B4328")]
		public void Rearrange()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x11B433C", Offset = "0x11B433C", VA = "0x11B433C")]
		public float NormalizeUnclamped(float input)
		{
			return default(float);
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x11B4350", Offset = "0x11B4350", VA = "0x11B4350")]
		public float NormalizeClamp(float input)
		{
			return default(float);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x11B4368", Offset = "0x11B4368", VA = "0x11B4368")]
		public float Clamp(float input)
		{
			return default(float);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x11B4374", Offset = "0x11B4374", VA = "0x11B4374")]
		public float GetFromNormalized(float input0to1)
		{
			return default(float);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x11B438C", Offset = "0x11B438C", VA = "0x11B438C")]
		public float GetFromNormalizedUnclamped(float input0to1)
		{
			return default(float);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x11B43A4", Offset = "0x11B43A4", VA = "0x11B43A4")]
		public FloatRange(float min, float max)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x11B43E4", Offset = "0x11B43E4", VA = "0x11B43E4")]
		public bool Contains(float v)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x11B4408", Offset = "0x11B4408", VA = "0x11B4408")]
		public float Sample(float x)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E2")]
	public class IntRange
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Min;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Max;

		[Token(Token = "0x17000454")]
		public int Range
		{
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xFCCD1C", Offset = "0xFCCD1C", VA = "0xFCCD1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000455")]
		public int RandomValue
		{
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0xFCCD28", Offset = "0xFCCD28", VA = "0xFCCD28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xFCCD3C", Offset = "0xFCCD3C", VA = "0xFCCD3C")]
		public void Rearrange()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xFCCD50", Offset = "0xFCCD50", VA = "0xFCCD50")]
		public int Clamp(int input)
		{
			return default(int);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xFCCD64", Offset = "0xFCCD64", VA = "0xFCCD64")]
		public IntRange(int min, int max)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xFCCDA4", Offset = "0xFCCDA4", VA = "0xFCCDA4")]
		public bool Contains(int v)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E3")]
	public class Vector3Range
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Min;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Max;

		[Token(Token = "0x17000456")]
		public Vector3 Range
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x13F3D34", Offset = "0x13F3D34", VA = "0x13F3D34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000457")]
		public Vector3 RandomValue
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x13F3D54", Offset = "0x13F3D54", VA = "0x13F3D54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x13F3DC0", Offset = "0x13F3DC0", VA = "0x13F3DC0")]
		public Vector3Range(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class AnyObjectSensor : MonoBehaviour
	{
		[Token(Token = "0x20004E5")]
		public delegate void TriggerDelegate(GameObject go);

		[Serializable]
		[Token(Token = "0x20004E6")]
		public class ObjectDelegateSet
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_object;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type m_type;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerDelegate m_onEnterDelegate;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriggerDelegate m_onExitDelegate;

			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> m_items;

			[Token(Token = "0x600221A")]
			[Address(RVA = "0xFFC900", Offset = "0xFFC900", VA = "0xFFC900")]
			public ObjectDelegateSet(GameObject go, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
			{
			}

			[Token(Token = "0x600221B")]
			[Address(RVA = "0xFFC9E0", Offset = "0xFFC9E0", VA = "0xFFC9E0")]
			public ObjectDelegateSet(Type type, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
			{
			}
		}

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ObjectDelegateSet> m_watchList;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2708", Offset = "0x8E2708")]
		private List<GameObject> <m_triggerObjs>k__BackingField;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2718", Offset = "0x8E2718")]
		private List<GameObject> <m_collisionObjs>k__BackingField;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Collider> m_ignoreList;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2728", Offset = "0x8E2728")]
		public LayerMask m_layerMask;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnTriggeredOn;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnTriggeredOff;

		[Token(Token = "0x17000458")]
		public List<GameObject> m_triggerObjs
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x149B00C", Offset = "0x149B00C", VA = "0x149B00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1AEC", Offset = "0x8F1AEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x149B014", Offset = "0x149B014", VA = "0x149B014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1AFC", Offset = "0x8F1AFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public List<GameObject> m_collisionObjs
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0x149B01C", Offset = "0x149B01C", VA = "0x149B01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1B0C", Offset = "0x8F1B0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0x149B024", Offset = "0x149B024", VA = "0x149B024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1B1C", Offset = "0x8F1B1C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public bool OnForAnyObject
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0x149B02C", Offset = "0x149B02C", VA = "0x149B02C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045B")]
		public bool OnForWatched
		{
			[Token(Token = "0x6002206")]
			[Address(RVA = "0x149B080", Offset = "0x149B080", VA = "0x149B080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045C")]
		public bool OnForWatchedObjects
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0x149B33C", Offset = "0x149B33C", VA = "0x149B33C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045D")]
		public bool OnForWatchedTypes
		{
			[Token(Token = "0x6002208")]
			[Address(RVA = "0x149B4F4", Offset = "0x149B4F4", VA = "0x149B4F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x149B6D4", Offset = "0x149B6D4", VA = "0x149B6D4")]
		public AnyObjectSensor()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x149B888", Offset = "0x149B888", VA = "0x149B888")]
		private void Update()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x149BBAC", Offset = "0x149BBAC", VA = "0x149BBAC")]
		private void ObjectRemoved(GameObject go)
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x149BD40", Offset = "0x149BD40", VA = "0x149BD40")]
		public void WatchFor(GameObject go, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x149BDEC", Offset = "0x149BDEC", VA = "0x149BDEC")]
		public void WatchFor(Type type, TriggerDelegate onEnterDelegate, TriggerDelegate onExitDelegate)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x149BE98", Offset = "0x149BE98", VA = "0x149BE98")]
		public void StopWatchingFor(GameObject go)
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x149BFBC", Offset = "0x149BFBC", VA = "0x149BFBC")]
		public void StopWatchingFor(Type type)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x149C0E0", Offset = "0x149C0E0", VA = "0x149C0E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x149C134", Offset = "0x149C134", VA = "0x149C134")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x149C560", Offset = "0x149C560", VA = "0x149C560")]
		public void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x149C668", Offset = "0x149C668", VA = "0x149C668")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x149CA70", Offset = "0x149CA70", VA = "0x149CA70")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x149CBC0", Offset = "0x149CBC0", VA = "0x149CBC0")]
		public void ForceRemoveObject(GameObject go)
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class Detatchable : MonoBehaviour
	{
		[Token(Token = "0x600221C")]
		[Address(RVA = "0x1007D5C", Offset = "0x1007D5C", VA = "0x1007D5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1007E00", Offset = "0x1007E00", VA = "0x1007E00")]
		public Detatchable()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class ObjectSensor : MonoBehaviour
	{
		[Token(Token = "0x20004E9")]
		public delegate void TriggerDelegate(Collider col);

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_target;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2760", Offset = "0x8E2760")]
		private bool <On>k__BackingField;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color m_onColour;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color m_offColour;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer m_visualiser;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public TriggerDelegate m_onAnyTriggerEnter;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TriggerDelegate m_onAnyTriggerExit;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TriggerDelegate m_onTargetTriggerEnter;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggerDelegate m_onTargetTriggerExit;

		[Token(Token = "0x1700045E")]
		public bool On
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xEC1CC4", Offset = "0xEC1CC4", VA = "0xEC1CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1B2C", Offset = "0x8F1B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xEC1CCC", Offset = "0xEC1CCC", VA = "0xEC1CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F1B3C", Offset = "0x8F1B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xEC1C2C", Offset = "0xEC1C2C", VA = "0xEC1C2C")]
		public void SetTarget(GameObject value)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xEC1CD8", Offset = "0xEC1CD8", VA = "0xEC1CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xEC1D94", Offset = "0xEC1D94", VA = "0xEC1D94")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xEC1EC8", Offset = "0xEC1EC8", VA = "0xEC1EC8")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xEC1FF8", Offset = "0xEC1FF8", VA = "0xEC1FF8")]
		public ObjectSensor()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6002229")]
		[Address(RVA = "0xEE4130", Offset = "0xEE4130", VA = "0xEE4130")]
		private void Start()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xEE41A8", Offset = "0xEE41A8", VA = "0xEE41A8")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public enum SetColour
	{
		[Token(Token = "0x4001B1D")]
		Default,
		[Token(Token = "0x4001B1E")]
		Random,
		[Token(Token = "0x4001B1F")]
		Specify
	}
	[Token(Token = "0x20004EC")]
	public class CameraToTexture : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		public enum SaveLocation
		{
			[Token(Token = "0x4001B29")]
			Path,
			[Token(Token = "0x4001B2A")]
			DeviceGallery
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75F0", Offset = "0x8D75F0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] bytes;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraToTexture <>4__this;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string title;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string desc;

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x10033CC", Offset = "0x10033CC", VA = "0x10033CC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600223A")]
			[Address(RVA = "0x10033D4", Offset = "0x10033D4", VA = "0x10033D4")]
			internal void <TakeScreenShot>b__0()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7600", Offset = "0x8D7600")]
		private sealed class <>c__DisplayClass14_1
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass14_0 CS$<>8__locals1;

			[Token(Token = "0x600223B")]
			[Address(RVA = "0x1003414", Offset = "0x1003414", VA = "0x1003414")]
			public <>c__DisplayClass14_1()
			{
			}

			[Token(Token = "0x600223C")]
			[Address(RVA = "0x100341C", Offset = "0x100341C", VA = "0x100341C")]
			internal void <TakeScreenShot>b__1()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7610", Offset = "0x8D7610")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] bytes;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verbose;

			[Token(Token = "0x600223D")]
			[Address(RVA = "0x100352C", Offset = "0x100352C", VA = "0x100352C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600223E")]
			[Address(RVA = "0x1003534", Offset = "0x1003534", VA = "0x1003534")]
			internal void <SaveTexture2DToDisc>b__0()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7620", Offset = "0x8D7620")]
		private sealed class <SaveTexture2DToDisc>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verbose;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int w;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int h;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Texture2D screenShot;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string name;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002242")]
				[Address(RVA = "0x1003924", Offset = "0x1003924", VA = "0x1003924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002244")]
				[Address(RVA = "0x100396C", Offset = "0x100396C", VA = "0x100396C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600223F")]
			[Address(RVA = "0x1003624", Offset = "0x1003624", VA = "0x1003624")]
			[DebuggerHidden]
			public <SaveTexture2DToDisc>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002240")]
			[Address(RVA = "0x1003650", Offset = "0x1003650", VA = "0x1003650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0x1003654", Offset = "0x1003654", VA = "0x1003654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x100392C", Offset = "0x100392C", VA = "0x100392C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ms_defaultWidth;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ms_defaultHeight;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_verbose;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_previewRootTrans;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MPB_Texture m_previewMPBTex;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTexture currentTex;

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x13CB174", Offset = "0x13CB174", VA = "0x13CB174")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x13CB35C", Offset = "0x13CB35C", VA = "0x13CB35C")]
		public void SetResolution(int w, int h)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x13CB278", Offset = "0x13CB278", VA = "0x13CB278")]
		private void SetupPreview(RenderTexture renderTex)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x13CB520", Offset = "0x13CB520", VA = "0x13CB520")]
		public static string ScreenShotPathAndName(int w, int h)
		{
			return null;
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x13CB744", Offset = "0x13CB744", VA = "0x13CB744")]
		private static string GetFilename(string imageName, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x13CB748", Offset = "0x13CB748", VA = "0x13CB748")]
		private void TakeShotWithDefaults()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x13CB7CC", Offset = "0x13CB7CC", VA = "0x13CB7CC")]
		public Texture2D TakeScreenShot([Optional] string name, SaveLocation saveLocation = SaveLocation.Path, bool refreshAssetsWhendone = true, SetColour setBgCol = SetColour.Default, bool alphaBg = false, [Optional] Color bgCol, [Optional] Shader shader, string title = "", string desc = "")
		{
			return null;
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x13CBD4C", Offset = "0x13CBD4C", VA = "0x13CBD4C")]
		public void TakeAsyncScreenShotToTextureAndSave([Optional] string pathAndfilename)
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x13CBE30", Offset = "0x13CBE30", VA = "0x13CBE30")]
		public static Texture2D TakeScreenShotToTexture(Camera camera, int w = -1, int h = -1, [Optional] string name, SetColour setBgCol = SetColour.Default, [Optional] Color bgCol, bool alphaBg = false, [Optional] Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x13CC180", Offset = "0x13CC180", VA = "0x13CC180")]
		public static void TakeScreenShotToTexture(Camera camera, ref Texture2D screenShot, ref RenderTexture rt, int w = -1, int h = -1, [Optional] Shader shader)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x13CC0CC", Offset = "0x13CC0CC", VA = "0x13CC0CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1B4C", Offset = "0x8F1B4C")]
		public static IEnumerator SaveTexture2DToDisc(Texture2D screenShot, int w = -1, int h = -1, [Optional] string name, bool verbose = true)
		{
			return null;
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x13CC3DC", Offset = "0x13CC3DC", VA = "0x13CC3DC")]
		[AttributeAttribute(Name = "DebugMenuItem", RVA = "0x8F1BAC", Offset = "0x8F1BAC")]
		private void SavePNGToDeviceGallery(byte[] pngBytes, string imageName, string imageDesc)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x13CCC84", Offset = "0x13CCC84", VA = "0x13CCC84")]
		public CameraToTexture()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class CollisionObjectHider : MonoBehaviour
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer[] m_collisionRenderers;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_hideAllOnStartup;

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x13D3D08", Offset = "0x13D3D08", VA = "0x13D3D08")]
		private void Start()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x13D3DEC", Offset = "0x13D3DEC", VA = "0x13D3DEC")]
		public CollisionObjectHider()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class MeshBaker
	{
		[Token(Token = "0x6002247")]
		[Address(RVA = "0x160F8D4", Offset = "0x160F8D4", VA = "0x160F8D4")]
		public static GameObject Combine(GameObject rootObj, bool save)
		{
			return null;
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x160FDFC", Offset = "0x160FDFC", VA = "0x160FDFC")]
		public MeshBaker()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class MeshGroupManager : MonoBehaviour
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_meshGroupParent;

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x161007C", Offset = "0x161007C", VA = "0x161007C")]
		public MeshGroupManager()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class EventAddForce : Triggerable
	{
		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3Range m_forceRange;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody m_target;

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x10104D4", Offset = "0x10104D4", VA = "0x10104D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1010590", Offset = "0x1010590", VA = "0x1010590", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x10105D4", Offset = "0x10105D4", VA = "0x10105D4")]
		public EventAddForce()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class EventAddForceAtPoint : Triggerable
	{
		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody m_target;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_forcePoint;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_forceAlongZ;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_disconnectFromParent;

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x1010660", Offset = "0x1010660", VA = "0x1010660", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1010780", Offset = "0x1010780", VA = "0x1010780")]
		public EventAddForceAtPoint()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class EventAddTorque : Triggerable
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3Range m_forceRange;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ForceMode m_forcemode;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody m_target;

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x1010788", Offset = "0x1010788", VA = "0x1010788")]
		private void Start()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1010844", Offset = "0x1010844", VA = "0x1010844", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1010888", Offset = "0x1010888", VA = "0x1010888")]
		public EventAddTorque()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class EventApplyConstantForceForNSeconds : Triggerable
	{
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7630", Offset = "0x8D7630")]
		private sealed class <ApplyForceCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventApplyConstantForceForNSeconds <>4__this;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000461")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002258")]
				[Address(RVA = "0xE78414", Offset = "0xE78414", VA = "0xE78414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600225A")]
				[Address(RVA = "0xE7845C", Offset = "0xE7845C", VA = "0xE7845C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xE7829C", Offset = "0xE7829C", VA = "0xE7829C")]
			[DebuggerHidden]
			public <ApplyForceCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0xE782C8", Offset = "0xE782C8", VA = "0xE782C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xE782CC", Offset = "0xE782CC", VA = "0xE782CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0xE7841C", Offset = "0xE7841C", VA = "0xE7841C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_duration;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody m_rb;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_forcePoint;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_forceAlongZ;

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x1010914", Offset = "0x1010914", VA = "0x1010914", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x101095C", Offset = "0x101095C", VA = "0x101095C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1C44", Offset = "0x8F1C44")]
		private IEnumerator ApplyForceCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x10109D4", Offset = "0x10109D4", VA = "0x10109D4")]
		public EventApplyConstantForceForNSeconds()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class EventCallFunction : Triggerable
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E2780", Offset = "0x8E2780")]
		public UnityEvent m_events;

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x10109EC", Offset = "0x10109EC", VA = "0x10109EC", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x1010A08", Offset = "0x1010A08", VA = "0x1010A08")]
		public EventCallFunction()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class EventCallFunctionOnUntrigger : Triggerable
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent m_events;

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x1010A10", Offset = "0x1010A10", VA = "0x1010A10", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x1010A14", Offset = "0x1010A14", VA = "0x1010A14", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x1010A30", Offset = "0x1010A30", VA = "0x1010A30")]
		public EventCallFunctionOnUntrigger()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class EventChangeParent : Triggerable
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_child;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_newParent;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useTempItemsParent;

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x1010A38", Offset = "0x1010A38", VA = "0x1010A38", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1010ACC", Offset = "0x1010ACC", VA = "0x1010ACC")]
		public EventChangeParent()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class EventChangeUnityFogColour : Triggerable
	{
		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7640", Offset = "0x8D7640")]
		private sealed class <LerpFog>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventChangeUnityFogColour <>4__this;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <fromColour>5__2;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <fromDensity>5__3;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <t>5__4;

			[Token(Token = "0x17000463")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002268")]
				[Address(RVA = "0xE785A8", Offset = "0xE785A8", VA = "0xE785A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000464")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226A")]
				[Address(RVA = "0xE785F0", Offset = "0xE785F0", VA = "0xE785F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0xE78464", Offset = "0xE78464", VA = "0xE78464")]
			[DebuggerHidden]
			public <LerpFog>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0xE78490", Offset = "0xE78490", VA = "0xE78490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0xE78494", Offset = "0xE78494", VA = "0xE78494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0xE785B0", Offset = "0xE785B0", VA = "0xE785B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_colour;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_changeDensity;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E27B8", Offset = "0x8E27B8")]
		public float m_density;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_duration;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x1010AD4", Offset = "0x1010AD4", VA = "0x1010AD4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x1010B48", Offset = "0x1010B48", VA = "0x1010B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1CF4", Offset = "0x8F1CF4")]
		private IEnumerator LerpFog()
		{
			return null;
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x1010BC0", Offset = "0x1010BC0", VA = "0x1010BC0")]
		public EventChangeUnityFogColour()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class EventCycleActive : Triggerable
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currentActive;

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x1010C00", Offset = "0x1010C00", VA = "0x1010C00")]
		private void Start()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x1010E18", Offset = "0x1010E18", VA = "0x1010E18", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x1010EE0", Offset = "0x1010EE0", VA = "0x1010EE0")]
		public EventCycleActive()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class EventCycleAnimation : Triggerable
	{
		[Serializable]
		[Token(Token = "0x2000501")]
		public class AnimAndClip
		{
			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animation m_animation;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationClip m_clip;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationClip[] m_followUpQueue;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_speed;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float m_blendLength;

			[Token(Token = "0x6002270")]
			[Address(RVA = "0xE785F8", Offset = "0xE785F8", VA = "0xE785F8")]
			public AnimAndClip()
			{
			}
		}

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimAndClip[] m_animations;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextAnim;

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1010EF0", Offset = "0x1010EF0", VA = "0x1010EF0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1011090", Offset = "0x1011090", VA = "0x1011090")]
		public EventCycleAnimation()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class EventDeleteObject : Triggerable
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_destroySelf;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x10110A4", Offset = "0x10110A4", VA = "0x10110A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x10111D8", Offset = "0x10111D8", VA = "0x10111D8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x1011300", Offset = "0x1011300", VA = "0x1011300")]
		public EventDeleteObject()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class EventEnableComponent : Triggerable
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] m_components;

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1011640", Offset = "0x1011640", VA = "0x1011640", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x10116B0", Offset = "0x10116B0", VA = "0x10116B0")]
		public EventEnableComponent()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class EventDropItems : Triggerable
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemDropper m_itemDropper;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_numToDrop;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x1011568", Offset = "0x1011568", VA = "0x1011568", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x10115B8", Offset = "0x10115B8", VA = "0x10115B8")]
		public EventDropItems()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class EventDisableComponent : Triggerable
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] m_components;

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x1011308", Offset = "0x1011308", VA = "0x1011308", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x1011378", Offset = "0x1011378", VA = "0x1011378")]
		public EventDisableComponent()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class EventFadeCurtain : Triggerable
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fadeLength;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x10116B8", Offset = "0x10116B8", VA = "0x10116B8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x1011980", Offset = "0x1011980", VA = "0x1011980")]
		public EventFadeCurtain()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class EventFadeMaterial : Triggerable
	{
		[Serializable]
		[Token(Token = "0x2000508")]
		public class MaterialColourPairs
		{
			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material m_material;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Material m_workingMaterial;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_useCurrentcolourAsStart;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Color m_from;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Color m_to;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool m_initialiseColoursOnAwake;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[HideInInspector]
			public Color m_defaultcolour;

			[Token(Token = "0x6002282")]
			[Address(RVA = "0xE78874", Offset = "0xE78874", VA = "0xE78874")]
			public MaterialColourPairs()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7650", Offset = "0x8D7650")]
		private sealed class <Fade>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventFadeMaterial <>4__this;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000465")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0xE78824", Offset = "0xE78824", VA = "0xE78824", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002288")]
				[Address(RVA = "0xE7886C", Offset = "0xE7886C", VA = "0xE7886C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xE78608", Offset = "0xE78608", VA = "0xE78608")]
			[DebuggerHidden]
			public <Fade>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0xE78634", Offset = "0xE78634", VA = "0xE78634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0xE78638", Offset = "0xE78638", VA = "0xE78638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0xE7882C", Offset = "0xE7882C", VA = "0xE7882C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialColourPairs[] m_materials;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color[] m_defaultcolour;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x1011990", Offset = "0x1011990", VA = "0x1011990")]
		private void Awake()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x1011A8C", Offset = "0x1011A8C", VA = "0x1011A8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x1011B10", Offset = "0x1011B10", VA = "0x1011B10", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x1011BB4", Offset = "0x1011BB4", VA = "0x1011BB4", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x1011B3C", Offset = "0x1011B3C", VA = "0x1011B3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1DA4", Offset = "0x8F1DA4")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x1011BB8", Offset = "0x1011BB8", VA = "0x1011BB8")]
		public EventFadeMaterial()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class EventFadeObjectMaterials : Triggerable
	{
		[Serializable]
		[Token(Token = "0x200050B")]
		public class FadingMaterial
		{
			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material m_sourceMaterial;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material m_modifiedMaterial;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_defaultColour;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_from;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color m_to;

			[Token(Token = "0x600228F")]
			[Address(RVA = "0xE78E34", Offset = "0xE78E34", VA = "0xE78E34")]
			public FadingMaterial()
			{
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7660", Offset = "0x8D7660")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Renderer> allRenderers;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<FadingMaterial> <>9__0;

			[Token(Token = "0x6002290")]
			[Address(RVA = "0xE788C0", Offset = "0xE788C0", VA = "0xE788C0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0xE788C8", Offset = "0xE788C8", VA = "0xE788C8")]
			internal bool <Start>b__0(FadingMaterial a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7670", Offset = "0x8D7670")]
		private sealed class <Fade>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventFadeObjectMaterials <>4__this;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002295")]
				[Address(RVA = "0xE78DE4", Offset = "0xE78DE4", VA = "0xE78DE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002297")]
				[Address(RVA = "0xE78E2C", Offset = "0xE78E2C", VA = "0xE78E2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0xE78A24", Offset = "0xE78A24", VA = "0xE78A24")]
			[DebuggerHidden]
			public <Fade>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0xE78A50", Offset = "0xE78A50", VA = "0xE78A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0xE78A54", Offset = "0xE78A54", VA = "0xE78A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0xE78DEC", Offset = "0xE78DEC", VA = "0xE78DEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<FadingMaterial> ms_allFadingMaterials;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_duration;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve m_fadeCurve;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FadingMaterial> m_materialsToFade;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> m_objectsToFade;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> m_namedObjectsToFade;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_fromLightness;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_toLightness;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_initColoursToFromValue;

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x1011BC8", Offset = "0x1011BC8", VA = "0x1011BC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x1011C18", Offset = "0x1011C18", VA = "0x1011C18")]
		private void Start()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x101235C", Offset = "0x101235C", VA = "0x101235C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x1012400", Offset = "0x1012400", VA = "0x1012400", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x1012388", Offset = "0x1012388", VA = "0x1012388")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1E54", Offset = "0x8F1E54")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x1012404", Offset = "0x1012404", VA = "0x1012404")]
		public EventFadeObjectMaterials()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class EventJointBreak : Triggerable
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int breakAfterNTriggers;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Joint m_breakable;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_dragOnBreak;

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x101245C", Offset = "0x101245C", VA = "0x101245C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x1012558", Offset = "0x1012558", VA = "0x1012558")]
		public EventJointBreak()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class EventLerpTransform : Triggerable
	{
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7680", Offset = "0x8D7680")]
		private sealed class <Lerp>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLerpTransform <>4__this;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <sp>5__2;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <sr>5__3;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <ss>5__4;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__5;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A0")]
				[Address(RVA = "0xE790E0", Offset = "0xE790E0", VA = "0xE790E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A2")]
				[Address(RVA = "0xE79128", Offset = "0xE79128", VA = "0xE79128", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0xE78E3C", Offset = "0xE78E3C", VA = "0xE78E3C")]
			[DebuggerHidden]
			public <Lerp>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0xE78E68", Offset = "0xE78E68", VA = "0xE78E68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0xE78E6C", Offset = "0xE78E6C", VA = "0xE78E6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xE790E8", Offset = "0xE790E8", VA = "0xE790E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_moveThis;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_toThis;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_lerpPos;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_lerpRot;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_lerpScale;

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x1012568", Offset = "0x1012568", VA = "0x1012568", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x1012594", Offset = "0x1012594", VA = "0x1012594")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1F04", Offset = "0x8F1F04")]
		private IEnumerator Lerp()
		{
			return null;
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x101260C", Offset = "0x101260C", VA = "0x101260C")]
		public EventLerpTransform()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class EventLoadLevel : Triggerable
	{
		[Token(Token = "0x2000512")]
		public delegate void OnLevelUnloadDelegate();

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7690", Offset = "0x8D7690")]
		private sealed class <FadeAndLoad>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLoadLevel <>4__this;

			[Token(Token = "0x1700046B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AD")]
				[Address(RVA = "0xE79A28", Offset = "0xE79A28", VA = "0xE79A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AF")]
				[Address(RVA = "0xE79A70", Offset = "0xE79A70", VA = "0xE79A70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xE79130", Offset = "0xE79130", VA = "0xE79130")]
			[DebuggerHidden]
			public <FadeAndLoad>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xE7915C", Offset = "0xE7915C", VA = "0xE7915C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xE79160", Offset = "0xE79160", VA = "0xE79160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xE79A30", Offset = "0xE79A30", VA = "0xE79A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E281C", Offset = "0x8E281C")]
		public string m_levelToLoad;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_autoAppendSubScenes;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> m_levelsToLoadAdditively;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> m_subScenesToLoad;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fadeLength;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_fadeColour;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool m_triggered;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnLevelUnloadDelegate OnLevelUnload;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_loadingCoroutine;

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1012A50", Offset = "0x1012A50", VA = "0x1012A50", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1012A90", Offset = "0x1012A90", VA = "0x1012A90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F1FB4", Offset = "0x8F1FB4")]
		protected IEnumerator FadeAndLoad()
		{
			return null;
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1012B08", Offset = "0x1012B08", VA = "0x1012B08")]
		public EventLoadLevel()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class EventLoadLevelAsync : Triggerable
	{
		[Token(Token = "0x2000515")]
		public delegate void OnLevelUnloadDelegate();

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76A0", Offset = "0x8D76A0")]
		private sealed class <DoLoad>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventLoadLevelAsync <>4__this;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <amtPerLevel>5__2;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <chunks>5__3;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.AsyncOperation <ll>5__4;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <p>5__5;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityEngine.AsyncOperation[] <sublevelAsync>5__6;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__7;

			[Token(Token = "0x1700046D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BA")]
				[Address(RVA = "0xE7A350", Offset = "0xE7A350", VA = "0xE7A350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BC")]
				[Address(RVA = "0xE7A398", Offset = "0xE7A398", VA = "0xE7A398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xE79AC4", Offset = "0xE79AC4", VA = "0xE79AC4")]
			[DebuggerHidden]
			public <DoLoad>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xE79AF0", Offset = "0xE79AF0", VA = "0xE79AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xE79AF4", Offset = "0xE79AF4", VA = "0xE79AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xE7A358", Offset = "0xE7A358", VA = "0xE7A358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2854", Offset = "0x8E2854")]
		public string m_levelToLoad;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_autoAppendSubScenes;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> m_levelsToLoadAdditively;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> m_subScenesToLoad;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fadeLength;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_fadeColour;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool m_triggered;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer m_radialRenderer;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_loadMat;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_lerpRate;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnLevelUnloadDelegate OnLevelUnload;

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1012C34", Offset = "0x1012C34", VA = "0x1012C34", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1012C74", Offset = "0x1012C74", VA = "0x1012C74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2064", Offset = "0x8F2064")]
		protected IEnumerator DoLoad()
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1012CEC", Offset = "0x1012CEC", VA = "0x1012CEC")]
		public EventLoadLevelAsync()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class EventParticlesPlay : Triggerable
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] m_particles;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_spawnParticles;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] m_spawnParticlesTransform;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_makeSpawnedFxChildren;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_scaleToMatchMe;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] m_spawnedObjects;

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x1013168", Offset = "0x1013168", VA = "0x1013168", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x10134B4", Offset = "0x10134B4", VA = "0x10134B4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1013618", Offset = "0x1013618", VA = "0x1013618")]
		public EventParticlesPlay()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class EventParticlesStop : Triggerable
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ParticleSystem> m_particles;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedParticles;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_spawnedParticlesParent;

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x1013620", Offset = "0x1013620", VA = "0x1013620")]
		private void Start()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1013624", Offset = "0x1013624", VA = "0x1013624")]
		private void FindNamedParticles()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x10137F4", Offset = "0x10137F4", VA = "0x10137F4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1013968", Offset = "0x1013968", VA = "0x1013968")]
		public EventParticlesStop()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class EventPlayAnimation : Triggerable
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation m_animation;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedObjectWithAnimation;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationClip m_animClip;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip[] m_animClipQueue;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_speed;

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1013970", Offset = "0x1013970", VA = "0x1013970")]
		private void Start()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x1013A80", Offset = "0x1013A80", VA = "0x1013A80", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x1013B6C", Offset = "0x1013B6C", VA = "0x1013B6C")]
		public EventPlayAnimation()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class EventPrintf : Triggerable
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_optionalMessage;

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x1013FE8", Offset = "0x1013FE8", VA = "0x1013FE8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1014094", Offset = "0x1014094", VA = "0x1014094")]
		public EventPrintf()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class EventSendMessage : Triggerable
	{
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_messageToSend;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_includeReferenceToThis;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_paramString;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> m_objectsToSendTo;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] m_namedObjectsToSendTo;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_taggedObjectsToSendTo;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_targetsAreSetup;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool m_onlySendToActiveObjects;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool m_sendToObjectThatCausedTriggerToFire;

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x101409C", Offset = "0x101409C", VA = "0x101409C")]
		private void FindTargetObjects()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x10141C0", Offset = "0x10141C0", VA = "0x10141C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x10141D0", Offset = "0x10141D0", VA = "0x10141D0", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1014568", Offset = "0x1014568", VA = "0x1014568", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x10141D8", Offset = "0x10141D8", VA = "0x10141D8")]
		private void TriggerImpl(bool untrigger)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x1014570", Offset = "0x1014570", VA = "0x1014570")]
		public EventSendMessage()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class EventSetActive : Triggerable
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_isProgressive;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_doActivate;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_progressiveIndex;

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x1014578", Offset = "0x1014578", VA = "0x1014578")]
		private void Start()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x1014680", Offset = "0x1014680", VA = "0x1014680", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x10147AC", Offset = "0x10147AC", VA = "0x10147AC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1014860", Offset = "0x1014860", VA = "0x1014860")]
		public EventSetActive()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class EventSetColour : Triggerable
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_setTriggerer;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color m_colour;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> m_objectsToSet;

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x1014868", Offset = "0x1014868", VA = "0x1014868", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1014AA4", Offset = "0x1014AA4", VA = "0x1014AA4")]
		public EventSetColour()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class EventSetInactive : Triggerable
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1014B40", Offset = "0x1014B40", VA = "0x1014B40")]
		private void Start()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x1014C38", Offset = "0x1014C38", VA = "0x1014C38", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x1014D4C", Offset = "0x1014D4C", VA = "0x1014D4C")]
		public EventSetInactive()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class EventSetInactiveWithParticles : Triggerable
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_particlePrefab;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> m_particles;

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1014D54", Offset = "0x1014D54", VA = "0x1014D54")]
		private void Start()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1014F6C", Offset = "0x1014F6C", VA = "0x1014F6C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x1015134", Offset = "0x1015134", VA = "0x1015134")]
		public EventSetInactiveWithParticles()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class EventSetLayer : Triggerable
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_newLayer;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_layerMask;

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x101513C", Offset = "0x101513C", VA = "0x101513C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1015168", Offset = "0x1015168", VA = "0x1015168", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1015194", Offset = "0x1015194", VA = "0x1015194")]
		public EventSetLayer()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class EventSetMaterials : Triggerable
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Renderer> m_renderers;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedRenderers;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_material;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_unTriggerMaterial;

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x10151F0", Offset = "0x10151F0", VA = "0x10151F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x10151F4", Offset = "0x10151F4", VA = "0x10151F4")]
		private void FindNamed()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x10153C4", Offset = "0x10153C4", VA = "0x10153C4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x10153D8", Offset = "0x10153D8", VA = "0x10153D8", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x10153EC", Offset = "0x10153EC", VA = "0x10153EC")]
		public EventSetMaterials()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class EventSetMecanimBool : Triggerable
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_variableName;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_value;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_DoUntrigger;

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x10153F4", Offset = "0x10153F4", VA = "0x10153F4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x101541C", Offset = "0x101541C", VA = "0x101541C", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1015458", Offset = "0x1015458", VA = "0x1015458")]
		public EventSetMecanimBool()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class EventSetMecanimTrigger : Triggerable
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_trigger;

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1015460", Offset = "0x1015460", VA = "0x1015460", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1015484", Offset = "0x1015484", VA = "0x1015484")]
		public EventSetMecanimTrigger()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class EventSetMecanimTriggerOnMany : Triggerable
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator[] m_animator;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_trigger;

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x101548C", Offset = "0x101548C", VA = "0x101548C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x10154FC", Offset = "0x10154FC", VA = "0x10154FC")]
		public EventSetMecanimTriggerOnMany()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class EventSetNearPlane : Triggerable
	{
		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera m_camera;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_nearPlane;

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1015504", Offset = "0x1015504", VA = "0x1015504", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1015528", Offset = "0x1015528", VA = "0x1015528")]
		public EventSetNearPlane()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class EventSetRigidbodyProperties : Triggerable
	{
		[Token(Token = "0x2000527")]
		public enum NewBool
		{
			[Token(Token = "0x4001C00")]
			DontChange,
			[Token(Token = "0x4001C01")]
			True,
			[Token(Token = "0x4001C02")]
			False
		}

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_rootObjects;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Rigidbody> m_allRigidBodies;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewBool m_isKinematic;

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x1015530", Offset = "0x1015530", VA = "0x1015530")]
		private void Start()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1015650", Offset = "0x1015650", VA = "0x1015650", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1015700", Offset = "0x1015700", VA = "0x1015700")]
		public EventSetRigidbodyProperties()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class EventSetTransform : Triggerable
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_setThis;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_toThis;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x1015708", Offset = "0x1015708", VA = "0x1015708", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x101576C", Offset = "0x101576C", VA = "0x101576C")]
		public EventSetTransform()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class EventSpawnPrefab : Triggerable
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_prefab;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_location;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_makeChildOfLocation;

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x1015774", Offset = "0x1015774", VA = "0x1015774", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x10158B4", Offset = "0x10158B4", VA = "0x10158B4")]
		public EventSpawnPrefab()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class EventTagAs : Triggerable
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tag;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_recursive;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x10158BC", Offset = "0x10158BC", VA = "0x10158BC", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1015930", Offset = "0x1015930", VA = "0x1015930")]
		public EventTagAs()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class EventToggleActive : Triggerable
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_gameObjects;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] m_namedGameObjects;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_revertOnExit;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] m_defaultActive;

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x1015994", Offset = "0x1015994", VA = "0x1015994")]
		private void Start()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1015C40", Offset = "0x1015C40", VA = "0x1015C40", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x1015D4C", Offset = "0x1015D4C", VA = "0x1015D4C", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1015E1C", Offset = "0x1015E1C", VA = "0x1015E1C")]
		public EventToggleActive()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class TriggerParticlesStopStartOnPlayerTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] m_particles;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_particlesParent;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x10C0F4C", Offset = "0x10C0F4C", VA = "0x10C0F4C")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x10C1058", Offset = "0x10C1058", VA = "0x10C1058")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x10C111C", Offset = "0x10C111C", VA = "0x10C111C")]
		public TriggerParticlesStopStartOnPlayerTrigger()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public abstract class Triggerable : MonoBehaviour
	{
		[Token(Token = "0x60022FC")]
		public abstract void Trigger();

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x10C112C", Offset = "0x10C112C", VA = "0x10C112C", Slot = "5")]
		public virtual void Untrigger()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x10B7584", Offset = "0x10B7584", VA = "0x10B7584")]
		protected Triggerable()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class KeyboardTrigger : Trigger
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode m_triggerKey;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_untriggerOnRelease;

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x115E8F0", Offset = "0x115E8F0", VA = "0x115E8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x115E954", Offset = "0x115E954", VA = "0x115E954")]
		public KeyboardTrigger()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public abstract class Trigger : MonoBehaviour
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triggerable[] m_triggerables;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E288C", Offset = "0x8E288C")]
		public bool m_on;

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x10BE894", Offset = "0x10BE894", VA = "0x10BE894")]
		public void ResetTriggerablesList()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x10BE8A0", Offset = "0x10BE8A0", VA = "0x10BE8A0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x10BE904", Offset = "0x10BE904", VA = "0x10BE904")]
		public void FireTrigger()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x10BE9D4", Offset = "0x10BE9D4", VA = "0x10BE9D4")]
		public void UnfireTrigger()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x10BEA98", Offset = "0x10BEA98", VA = "0x10BEA98")]
		protected Trigger()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class TriggerAfterDelay : Trigger
	{
		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_triggerAfter;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_originalTime;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_loop;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_repeatOnEnable;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool m_waitForLevelLoadToFinish;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		private bool hasFired;

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x10BEAA0", Offset = "0x10BEAA0", VA = "0x10BEAA0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x10BEACC", Offset = "0x10BEACC", VA = "0x10BEACC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x10BEAE4", Offset = "0x10BEAE4", VA = "0x10BEAE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x10BEB54", Offset = "0x10BEB54", VA = "0x10BEB54")]
		public TriggerAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class TriggerOnCollision : TriggerWithObject
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_minSpeed;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_triggerableByComponent;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Type> m_triggerableByTypes;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool m_repeatable;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_debug;

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x10BEB64", Offset = "0x10BEB64", VA = "0x10BEB64", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x10BEE08", Offset = "0x10BEE08", VA = "0x10BEE08")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x10BF11C", Offset = "0x10BF11C", VA = "0x10BF11C")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x10BF12C", Offset = "0x10BF12C", VA = "0x10BF12C")]
		public TriggerOnCollision()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class TriggerOnEnable : Trigger
	{
		[Token(Token = "0x600230E")]
		[Address(RVA = "0x10BF144", Offset = "0x10BF144", VA = "0x10BF144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x10BF148", Offset = "0x10BF148", VA = "0x10BF148")]
		public TriggerOnEnable()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class TriggerOnGameObjectsDisabled : Trigger
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> m_gameObjectsToWatch;

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x10BF150", Offset = "0x10BF150", VA = "0x10BF150")]
		private void Update()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x10BF210", Offset = "0x10BF210", VA = "0x10BF210")]
		public TriggerOnGameObjectsDisabled()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class TriggerOnMouse : Trigger
	{
		[Token(Token = "0x6002312")]
		[Address(RVA = "0x10BF218", Offset = "0x10BF218", VA = "0x10BF218")]
		public TriggerOnMouse()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class TriggerOnOtherGameObjectEnabled : Trigger
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_gameObjectToWatch;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_enabledLastFrame;

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x10C0084", Offset = "0x10C0084", VA = "0x10C0084")]
		private void Update()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x10C012C", Offset = "0x10C012C", VA = "0x10C012C")]
		public TriggerOnOtherGameObjectEnabled()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class TriggerOnStart : MonoBehaviour
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_repeatOnEveryStart;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_hasExecuted;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_waitForLevelLoadToFinish;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Triggerable[] m_triggerables;

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x10C0134", Offset = "0x10C0134", VA = "0x10C0134")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x10C0190", Offset = "0x10C0190", VA = "0x10C0190")]
		private void Start()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x10C0224", Offset = "0x10C0224", VA = "0x10C0224")]
		public TriggerOnStart()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class TriggerOnTrigger : TriggerWithObject
	{
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] m_triggerableByNamed;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] m_triggerableByComponent;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Type> m_triggerableByTypes;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> m_allTriggerableBy;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x8E28F8", Offset = "0x8E28F8")]
		public bool m_evenWhenInteractingWithSomethingElse;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_repeatable;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_canTriggerOnEnable;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Collider> m_ignoreColliders;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_enabledAt;

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x10C022C", Offset = "0x10C022C", VA = "0x10C022C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x10C0254", Offset = "0x10C0254", VA = "0x10C0254")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x10C0260", Offset = "0x10C0260", VA = "0x10C0260", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x10C0558", Offset = "0x10C0558", VA = "0x10C0558")]
		private void Start()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x10C0650", Offset = "0x10C0650", VA = "0x10C0650")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x10C0A4C", Offset = "0x10C0A4C", VA = "0x10C0A4C")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x10C0AE8", Offset = "0x10C0AE8", VA = "0x10C0AE8")]
		public TriggerOnTrigger()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class TriggerOnTriggerExit : Trigger
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] m_triggerableBy;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] m_triggerableByNamed;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> m_allTriggerableBy;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_triggerableByAnything;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_triggerableByPlayer;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool m_doUntrigger;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool m_repeatable;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_canRepeatAfter;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastTriggeredAt;

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x10C0B88", Offset = "0x10C0B88", VA = "0x10C0B88", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x10C0C18", Offset = "0x10C0C18", VA = "0x10C0C18")]
		private void Start()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x10C0D10", Offset = "0x10C0D10", VA = "0x10C0D10")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x10C0F3C", Offset = "0x10C0F3C", VA = "0x10C0F3C")]
		public TriggerOnTriggerExit()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class TriggerWithObject : Trigger
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Collider m_lastTriggeredBy;

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x10BF13C", Offset = "0x10BF13C", VA = "0x10BF13C")]
		public TriggerWithObject()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class TriggerWithScript : Trigger
	{
		[Token(Token = "0x6002324")]
		[Address(RVA = "0x10C1124", Offset = "0x10C1124", VA = "0x10C1124")]
		public TriggerWithScript()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class CircularPrefabPool
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_capacity;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject[] m_objects;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextObject;

		[Token(Token = "0x1700046F")]
		public int NumActive
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x13D04EC", Offset = "0x13D04EC", VA = "0x13D04EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x13D0570", Offset = "0x13D0570", VA = "0x13D0570")]
		public CircularPrefabPool(int capacity, GameObject prefab)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x13D0720", Offset = "0x13D0720", VA = "0x13D0720")]
		public CircularPrefabPool(int capacity, GameObject[] prefabs)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x13D094C", Offset = "0x13D094C", VA = "0x13D094C")]
		public GameObject GetNext()
		{
			return null;
		}
	}
	[Token(Token = "0x200053C")]
	public class ObjectPools : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053D")]
		public class PreAllocatedCircularPool
		{
			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_prefab;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_count;

			[Token(Token = "0x6002330")]
			[Address(RVA = "0x105DF70", Offset = "0x105DF70", VA = "0x105DF70")]
			public PreAllocatedCircularPool()
			{
			}
		}

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<GameObject, TrackedPool<GameObject>> ms_pools;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<GameObject, CircularPrefabPool> ms_circularPools;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PreAllocatedCircularPool> m_preAllocCircularPools;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xEC0DE8", Offset = "0xEC0DE8", VA = "0xEC0DE8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F2114", Offset = "0x8F2114")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xEC0E4C", Offset = "0xEC0E4C", VA = "0xEC0E4C")]
		public static void ClearStatics(Scene arg0)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xEC0F4C", Offset = "0xEC0F4C", VA = "0xEC0F4C")]
		public static void CreateStatics()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xEC10B8", Offset = "0xEC10B8", VA = "0xEC10B8")]
		public static TrackedPool<GameObject> GetOrCreatePool(GameObject prefab, int poolSize = 16, [Optional] string defaultParentName)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xEC15B4", Offset = "0xEC15B4", VA = "0xEC15B4")]
		public static CircularPrefabPool GetOrCreateCircularPool(GameObject prefab, int poolSize = 16, [Optional] string defaultParentName)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xEC1AA4", Offset = "0xEC1AA4", VA = "0xEC1AA4")]
		public void Start()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xEC1C24", Offset = "0xEC1C24", VA = "0xEC1C24")]
		public ObjectPools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class TrackedPool<T>
	{
		[Token(Token = "0x200053F")]
		public delegate T CreateObject();

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> m_available;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> m_inUse;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private System.Random m_random;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject m_prefab;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<GameObject> m_prefabList;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreateObject m_objectCreator;

		[Token(Token = "0x17000470")]
		public int AvailableCount
		{
			[Token(Token = "0x6002331")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000471")]
		public int InUseCount
		{
			[Token(Token = "0x6002332")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000472")]
		public int TotalCount
		{
			[Token(Token = "0x6002333")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002334")]
		public TrackedPool(int startingCapacity = 0)
		{
		}

		[Token(Token = "0x6002335")]
		public TrackedPool(T[] startingArray)
		{
		}

		[Token(Token = "0x6002336")]
		public TrackedPool(List<T> startingList)
		{
		}

		[Token(Token = "0x6002337")]
		public TrackedPool(List<GameObject> prefabList, int startingCapacity)
		{
		}

		[Token(Token = "0x6002338")]
		public TrackedPool(GameObject prefab, int startingCapacity)
		{
		}

		[Token(Token = "0x6002339")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600233A")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600233B")]
		public bool AddIfUnique(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600233C")]
		public void Add(List<T> items)
		{
		}

		[Token(Token = "0x600233D")]
		public void Add(GameObject prefab, int count)
		{
		}

		[Token(Token = "0x600233E")]
		public void Remove(T item)
		{
		}

		[Token(Token = "0x600233F")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002340")]
		public T GetNextAvailable()
		{
			return (T)null;
		}

		[Token(Token = "0x6002341")]
		public T GetRandomAvailable()
		{
			return (T)null;
		}

		[Token(Token = "0x6002342")]
		public T Get(T request)
		{
			return (T)null;
		}

		[Token(Token = "0x6002343")]
		public void SetInUse(T item)
		{
		}

		[Token(Token = "0x6002344")]
		public void Return(T u)
		{
		}

		[Token(Token = "0x6002345")]
		public void SetAllAvailable()
		{
		}
	}
	[Token(Token = "0x2000540")]
	[ExecuteInEditMode]
	public class BezierLine : Line
	{
		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76C0", Offset = "0x8D76C0")]
		private sealed class <GeneratePoints>d__6 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BezierLine <>4__this;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000473")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x6002350")]
				[Address(RVA = "0xFFF208", Offset = "0xFFF208", VA = "0xFFF208", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002352")]
				[Address(RVA = "0xFFF254", Offset = "0xFFF254", VA = "0xFFF254", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0xFFF080", Offset = "0xFFF080", VA = "0xFFF080")]
			[DebuggerHidden]
			public <GeneratePoints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0xFFF0B8", Offset = "0xFFF0B8", VA = "0xFFF0B8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0xFFF0BC", Offset = "0xFFF0BC", VA = "0xFFF0BC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0xFFF214", Offset = "0xFFF214", VA = "0xFFF214", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0xFFF2B4", Offset = "0xFFF2B4", VA = "0xFFF2B4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0xFFF364", Offset = "0xFFF364", VA = "0xFFF364", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_ptA;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_ptB;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_ptC;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_ptACache;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_ptBCache;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_ptCCache;

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1043FE4", Offset = "0x1043FE4", VA = "0x1043FE4", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2128", Offset = "0x8F2128")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x104405C", Offset = "0x104405C", VA = "0x104405C", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x1044150", Offset = "0x1044150", VA = "0x1044150")]
		public BezierLine()
		{
		}
	}
	[Token(Token = "0x2000542")]
	[ExecuteInEditMode]
	public class ElasticLine : Line
	{
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76E0", Offset = "0x8D76E0")]
		private sealed class <GeneratePoints>d__8 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ElasticLine <>4__this;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lineN>5__2;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <midPt>5__3;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <tScale>5__4;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <i>5__5;

			[Token(Token = "0x17000475")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x600235C")]
				[Address(RVA = "0xE7813C", Offset = "0xE7813C", VA = "0xE7813C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235E")]
				[Address(RVA = "0xE78188", Offset = "0xE78188", VA = "0xE78188", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0xE77D9C", Offset = "0xE77D9C", VA = "0xE77D9C")]
			[DebuggerHidden]
			public <GeneratePoints>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0xE77DD4", Offset = "0xE77DD4", VA = "0xE77DD4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0xE77DD8", Offset = "0xE77DD8", VA = "0xE77DD8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0xE78148", Offset = "0xE78148", VA = "0xE78148", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0xE781E8", Offset = "0xE781E8", VA = "0xE781E8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0xE78298", Offset = "0xE78298", VA = "0xE78298", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_minWidth;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_maxLength;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Spring m_spring;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_simulateInLocalSpace;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_endCache;

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x100DC08", Offset = "0x100DC08", VA = "0x100DC08", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F21F8", Offset = "0x8F21F8")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x100DC80", Offset = "0x100DC80", VA = "0x100DC80")]
		private void Start()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x100DD74", Offset = "0x100DD74", VA = "0x100DD74", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x100DE28", Offset = "0x100DE28", VA = "0x100DE28")]
		public ElasticLine()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class ItemDropper : MonoBehaviour
	{
		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_prefabs;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_maxInWorld;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_autoDrop;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_spacing;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timer;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CircularPrefabPool m_prefabPool;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_randomStartRotation;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E2950", Offset = "0x8E2950")]
		public Vector3Range m_rotationRange;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_randomStartVel;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_useMyRotationForVel;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 m_directionalVelMin;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 m_directionalVelRnd;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_onlyDropIfInActiveAvailable;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_waitingToDropSpecial;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_waitingToDropStandard;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2988", Offset = "0x8E2988")]
		public GameObject m_wwiseGameObject;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_standardDropSound;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_specialDropSound;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string m_audioToPlay;

		[Token(Token = "0x17000477")]
		public int NumActive
		{
			[Token(Token = "0x6002361")]
			[Address(RVA = "0xFD160C", Offset = "0xFD160C", VA = "0xFD160C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000478")]
		public bool CanDrop
		{
			[Token(Token = "0x6002362")]
			[Address(RVA = "0xFD1628", Offset = "0xFD1628", VA = "0xFD1628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xFD1664", Offset = "0xFD1664", VA = "0xFD1664")]
		private void Start()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xFD16F0", Offset = "0xFD16F0", VA = "0xFD16F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xFD16F4", Offset = "0xFD16F4", VA = "0xFD16F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xFD194C", Offset = "0xFD194C", VA = "0xFD194C")]
		public void SpecialDrop()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xFD17D8", Offset = "0xFD17D8", VA = "0xFD17D8")]
		public void Drop()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xFD195C", Offset = "0xFD195C", VA = "0xFD195C")]
		public void Dump()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xFD1998", Offset = "0xFD1998", VA = "0xFD1998")]
		public void KillAllItems()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xFD1A10", Offset = "0xFD1A10", VA = "0xFD1A10")]
		public void ClearDropLists()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xFD17E8", Offset = "0xFD17E8", VA = "0xFD17E8")]
		private void DropItem()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xFD1A18", Offset = "0xFD1A18", VA = "0xFD1A18")]
		private void SpawnNew(GameObject o)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xFD1DF0", Offset = "0xFD1DF0", VA = "0xFD1DF0")]
		public ItemDropper()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask m_layerMask;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float theta;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_maxDist;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_sourceTransform;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_drawLaserLineRenderer;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] m_linePts;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E29C0", Offset = "0x8E29C0")]
		private Collider <m_currentCollider>k__BackingField;

		[Token(Token = "0x17000479")]
		public Collider m_currentCollider
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x1771E10", Offset = "0x1771E10", VA = "0x1771E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F22C8", Offset = "0x8F22C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x1771E18", Offset = "0x1771E18", VA = "0x1771E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F22D8", Offset = "0x8F22D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1771E20", Offset = "0x1771E20", VA = "0x1771E20")]
		private void Start()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1771EF0", Offset = "0x1771EF0", VA = "0x1771EF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1772304", Offset = "0x1772304", VA = "0x1772304")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public abstract class Line : MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		public struct Point
		{
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_position;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float m_width;

			[Token(Token = "0x600237A")]
			[Address(RVA = "0x1056354", Offset = "0x1056354", VA = "0x1056354")]
			public Point(Vector3 position)
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x1056368", Offset = "0x1056368", VA = "0x1056368")]
			public Point(Vector3 position, float width)
			{
			}
		}

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Polyline m_polyLine;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer m_line;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_numPoints;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_displayLengthThreshold;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_sleepDistanceThreshold;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_sleeping;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Point[] m_points;

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x17752F8", Offset = "0x17752F8", VA = "0x17752F8")]
		protected void WakeUp()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1775300", Offset = "0x1775300", VA = "0x1775300")]
		protected bool ThresholdCheck(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1775354", Offset = "0x1775354", VA = "0x1775354", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1775B6C", Offset = "0x1775B6C", VA = "0x1775B6C")]
		public Vector3 GetPointWorld(int idx)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x1775B08", Offset = "0x1775B08", VA = "0x1775B08")]
		public Vector3 GetPointLocal(int idx)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002378")]
		protected abstract IEnumerable<Point> GeneratePoints();

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1775BAC", Offset = "0x1775BAC", VA = "0x1775BAC")]
		protected Line()
		{
		}
	}
	[Token(Token = "0x2000548")]
	[ExecuteInEditMode]
	public class ManhattanLine : Line
	{
		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7700", Offset = "0x8D7700")]
		private sealed class <GeneratePoints>d__4 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ManhattanLine <>4__this;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <midPt>5__2;

			[Token(Token = "0x1700047A")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x6002383")]
				[Address(RVA = "0x10584F0", Offset = "0x10584F0", VA = "0x10584F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x1700047B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002385")]
				[Address(RVA = "0x105853C", Offset = "0x105853C", VA = "0x105853C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x1058348", Offset = "0x1058348", VA = "0x1058348")]
			[DebuggerHidden]
			public <GeneratePoints>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0x1058380", Offset = "0x1058380", VA = "0x1058380", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0x1058384", Offset = "0x1058384", VA = "0x1058384", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0x10584FC", Offset = "0x10584FC", VA = "0x10584FC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x105859C", Offset = "0x105859C", VA = "0x105859C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x105864C", Offset = "0x105864C", VA = "0x105864C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_endCache;

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x1607388", Offset = "0x1607388", VA = "0x1607388", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F22E8", Offset = "0x8F22E8")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1607400", Offset = "0x1607400", VA = "0x1607400")]
		private void Start()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x160740C", Offset = "0x160740C", VA = "0x160740C", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x16074C0", Offset = "0x16074C0", VA = "0x16074C0")]
		public ManhattanLine()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class Placeholder : MonoBehaviour
	{
		[Token(Token = "0x200054B")]
		public enum Fn
		{
			[Token(Token = "0x4001CA4")]
			OnEnable,
			[Token(Token = "0x4001CA5")]
			Awake,
			[Token(Token = "0x4001CA6")]
			Start,
			[Token(Token = "0x4001CA7")]
			Manual
		}

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_prefab;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_material;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useScale;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_takeName;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_destroyMe;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool m_makeMyChild;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool done;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Fn m_instantiateTime;

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x125D184", Offset = "0x125D184", VA = "0x125D184")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x125D414", Offset = "0x125D414", VA = "0x125D414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x125D424", Offset = "0x125D424", VA = "0x125D424")]
		private void Start()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x125D198", Offset = "0x125D198", VA = "0x125D198")]
		public void DoInstantiate()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x125D438", Offset = "0x125D438", VA = "0x125D438")]
		public Placeholder()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class Resettable : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public delegate void ResettableDelegate();

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ResettableDelegate OnResetToStart;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ResettableDelegate OnResetToCheckpoint;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ResettableDelegate OnSaveCheckpoint;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isHardReset;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_startPosition;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion m_startRotation;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_checkpointPosition;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_checkpointRotation;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_checkpointVelocity;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_checkpointAngularVelocity;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x119F64C", Offset = "0x119F64C", VA = "0x119F64C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F23B8", Offset = "0x8F23B8")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x119F6F0", Offset = "0x119F6F0", VA = "0x119F6F0")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x119F81C", Offset = "0x119F81C", VA = "0x119F81C")]
		public static void ResetToStart()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x119F8E0", Offset = "0x119F8E0", VA = "0x119F8E0")]
		public static void ResetToCheckpoint()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x119F984", Offset = "0x119F984", VA = "0x119F984")]
		public static void SaveCheckpoint()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x119FA28", Offset = "0x119FA28", VA = "0x119FA28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x119FD64", Offset = "0x119FD64", VA = "0x119FD64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x119FF5C", Offset = "0x119FF5C", VA = "0x119FF5C")]
		public void DoResetToStart()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x11A0054", Offset = "0x11A0054", VA = "0x11A0054")]
		public void DoResetToCheckpoint()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x11A0144", Offset = "0x11A0144", VA = "0x11A0144")]
		private void DoSaveCheckpoint()
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x11A022C", Offset = "0x11A022C", VA = "0x11A022C")]
		public Resettable()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[ExecuteInEditMode]
	public class SaggyLine : Line
	{
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7720", Offset = "0x8D7720")]
		private sealed class <GeneratePoints>d__8 : IEnumerable<Point>, IEnumerable, IEnumerator<Point>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Point <>2__current;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SaggyLine <>4__this;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700047C")]
			private Point System.Collections.Generic.IEnumerator<Vitei.Line.Point>.Current
			{
				[Token(Token = "0x60023A4")]
				[Address(RVA = "0xEA9814", Offset = "0xEA9814", VA = "0xEA9814", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Point);
				}
			}

			[Token(Token = "0x1700047D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0xEA9860", Offset = "0xEA9860", VA = "0xEA9860", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xEA951C", Offset = "0xEA951C", VA = "0xEA951C")]
			[DebuggerHidden]
			public <GeneratePoints>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xEA9554", Offset = "0xEA9554", VA = "0xEA9554", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xEA9558", Offset = "0xEA9558", VA = "0xEA9558", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xEA9820", Offset = "0xEA9820", VA = "0xEA9820", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xEA98C0", Offset = "0xEA98C0", VA = "0xEA98C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Point> System.Collections.Generic.IEnumerable<Vitei.Line.Point>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xEA9970", Offset = "0xEA9970", VA = "0xEA9970", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_start;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_end;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_maxSag;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Spring m_spring;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_simulateInLocalSpace;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startCache;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_endCache;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_firstRun;

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x11A9B14", Offset = "0x11A9B14", VA = "0x11A9B14", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F23CC", Offset = "0x8F23CC")]
		protected override IEnumerable<Point> GeneratePoints()
		{
			return null;
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x11A9B8C", Offset = "0x11A9B8C", VA = "0x11A9B8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x11A9C88", Offset = "0x11A9C88", VA = "0x11A9C88", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x11A9D3C", Offset = "0x11A9D3C", VA = "0x11A9D3C")]
		public SaggyLine()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class Appearer : MonoBehaviour
	{
		[Token(Token = "0x2000551")]
		public enum Tween
		{
			[Token(Token = "0x4001CD2")]
			Linear,
			[Token(Token = "0x4001CD3")]
			Sin,
			[Token(Token = "0x4001CD4")]
			Bounce,
			[Token(Token = "0x4001CD5")]
			Curve
		}

		[Token(Token = "0x2000552")]
		public enum State
		{
			[Token(Token = "0x4001CD7")]
			Appear,
			[Token(Token = "0x4001CD8")]
			Visible,
			[Token(Token = "0x4001CD9")]
			Disappear,
			[Token(Token = "0x4001CDA")]
			Hidden
		}

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Tween m_tween;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve m_curve;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_duration;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StateMachine<State> m_sm;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public State m_transition;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private State m_initialTransition;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_timer;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FloatRange m_timerStartRandom;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_initialTimer;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_progress;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_targetScale;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_shouldOverrideTargetScale;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 m_overrideTargetScale;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E29D0", Offset = "0x8E29D0")]
		public GameObject m_wwiseObject;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_wwiseEventStart;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string m_wwiseEventEnd;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_timerWas;

		[Token(Token = "0x1700047E")]
		public bool Visible
		{
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x149EDB4", Offset = "0x149EDB4", VA = "0x149EDB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x149EC44", Offset = "0x149EC44", VA = "0x149EC44")]
		public void Appear(float delay = 0f)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x149ECB0", Offset = "0x149ECB0", VA = "0x149ECB0")]
		public void Disappear(float delay = 0f)
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x149ED24", Offset = "0x149ED24", VA = "0x149ED24")]
		public void Hide()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x149EE08", Offset = "0x149EE08", VA = "0x149EE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x149F088", Offset = "0x149F088", VA = "0x149F088")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x149F158", Offset = "0x149F158", VA = "0x149F158")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x149F24C", Offset = "0x149F24C", VA = "0x149F24C")]
		private void UpdateAppear()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x149F42C", Offset = "0x149F42C", VA = "0x149F42C")]
		private void UpdateVisible()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x149F430", Offset = "0x149F430", VA = "0x149F430")]
		private void UpdateDisappear()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x149F4DC", Offset = "0x149F4DC", VA = "0x149F4DC")]
		private void UpdateHidden()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x149F4E0", Offset = "0x149F4E0", VA = "0x149F4E0")]
		public Appearer()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class ChildMaker : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		public enum BuildType
		{
			[Token(Token = "0x4001CE2")]
			All_Builds,
			[Token(Token = "0x4001CE3")]
			PC_Only,
			[Token(Token = "0x4001CE4")]
			PS4_Only
		}

		[Token(Token = "0x2000555")]
		public enum ActionTime
		{
			[Token(Token = "0x4001CE6")]
			Awake,
			[Token(Token = "0x4001CE7")]
			Start
		}

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_newParent;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_localPosToZero;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_localRotRotToZero;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_localScaleToOne;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BuildType m_reparentFor;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActionTime m_reparentAt;

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x13D01A8", Offset = "0x13D01A8", VA = "0x13D01A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x13D028C", Offset = "0x13D028C", VA = "0x13D028C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x13D01B8", Offset = "0x13D01B8", VA = "0x13D01B8")]
		private void DoReparent()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x13D02A0", Offset = "0x13D02A0", VA = "0x13D02A0")]
		public ChildMaker()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class ChildSnatcher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000557")]
		public class OtherChildPair
		{
			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string childName;

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x1003DCC", Offset = "0x1003DCC", VA = "0x1003DCC")]
			public OtherChildPair()
			{
			}
		}

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_makeMyChildren;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OtherChildPair[] m_named;

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x13D02A8", Offset = "0x13D02A8", VA = "0x13D02A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x13D04E4", Offset = "0x13D04E4", VA = "0x13D04E4")]
		public ChildSnatcher()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class LookAt : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		public enum TargetCamera
		{
			[Token(Token = "0x4001CF7")]
			None,
			[Token(Token = "0x4001CF8")]
			Main
		}

		[Token(Token = "0x200055A")]
		public enum Axis
		{
			[Token(Token = "0x4001CFA")]
			X,
			[Token(Token = "0x4001CFB")]
			Y,
			[Token(Token = "0x4001CFC")]
			Z,
			[Token(Token = "0x4001CFD")]
			Free
		}

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_zeroRotationIfNoTarget;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Axis localAxis;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TargetCamera m_lookAtCameraIfNoTargetSet;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_applyRotationOffset;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x8E2A08", Offset = "0x8E2A08")]
		public Vector3 m_rotOffset;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_lerpToTarget;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_lerpRate;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_faceAway;

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1603BD0", Offset = "0x1603BD0", VA = "0x1603BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x1603BD4", Offset = "0x1603BD4", VA = "0x1603BD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1604014", Offset = "0x1604014", VA = "0x1604014")]
		public LookAt()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class PerfectLocalTransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTarget;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xECE870", Offset = "0xECE870", VA = "0xECE870")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xECE96C", Offset = "0xECE96C", VA = "0xECE96C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xECEA50", Offset = "0xECEA50", VA = "0xECEA50")]
		public PerfectLocalTransformMatcher()
		{
		}
	}
	[Token(Token = "0x200055C")]
	[ExecuteInEditMode]
	public class PerfectTransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_target;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_namedTarget;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_executeInEditor;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_matchScale;

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xECEA58", Offset = "0xECEA58", VA = "0xECEA58")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xECEB54", Offset = "0xECEB54", VA = "0xECEB54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xECEC94", Offset = "0xECEC94", VA = "0xECEC94")]
		public PerfectTransformMatcher()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class SimpleMovement : MonoBehaviour
	{
		[Token(Token = "0x200055E")]
		public enum Scope
		{
			[Token(Token = "0x4001D0D")]
			Global,
			[Token(Token = "0x4001D0E")]
			Local
		}

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_randomiseVelocity;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Scope m_velocityScope;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_velocity;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatRange m_velocityMagnitdeRange;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_randomiseAngularVel;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Scope m_rotationalScope;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_angularVel;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatRange m_AngularVelMagnitudeRange;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xEE30D4", Offset = "0xEE30D4", VA = "0xEE30D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xEE3184", Offset = "0xEE3184", VA = "0xEE3184")]
		private void Update()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xEE3434", Offset = "0xEE3434", VA = "0xEE3434")]
		public SimpleMovement()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class TransformMatcher : MonoBehaviour
	{
		[Token(Token = "0x2000560")]
		public enum TargetRef
		{
			[Token(Token = "0x4001D30")]
			reference,
			[Token(Token = "0x4001D31")]
			name
		}

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetRef m_targetRef;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_target;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_namedTarget;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_prefectMatch;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_prefectMatchPosOnEnable;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_prefectMatchRotYOnEnable;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_xPosMatchRate;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_yPosMatchRate;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_zPosMatchRate;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_xRotMatchRate;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_yRotMatchRate;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_zRotMatchRate;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_xPosMatch;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool m_yPosMatch;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool m_zPosMatch;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool m_xRotMatch;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_yRotMatch;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_zRotMatch;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_doWorldSpaceOffset;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_offsetWorldSpace;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_doLocalSpaceOffset;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 m_offsetLocalSpace;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_doLocalRotationOffset;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 m_offsetLocalRotation;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_updateInEditor;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_xPosVel;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_yPosVel;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_zPosVel;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_xRotVel;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_yRotVel;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_zRotVel;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool m_useScaledTime;

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x10BDE94", Offset = "0x10BDE94", VA = "0x10BDE94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x10BE044", Offset = "0x10BE044", VA = "0x10BE044")]
		private void SetupTarget()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x10BE550", Offset = "0x10BE550", VA = "0x10BE550")]
		private void Start()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x10BE13C", Offset = "0x10BE13C", VA = "0x10BE13C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x10B6EC4", Offset = "0x10B6EC4", VA = "0x10B6EC4")]
		public void MatchNow()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x10BE554", Offset = "0x10BE554", VA = "0x10BE554")]
		public TransformMatcher()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class BuildInfoLabel : MonoBehaviour
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_text;

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x104F1D4", Offset = "0x104F1D4", VA = "0x104F1D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x104F2E8", Offset = "0x104F2E8", VA = "0x104F2E8")]
		public BuildInfoLabel()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class DisableOnAwake : MonoBehaviour
	{
		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x1008270", Offset = "0x1008270", VA = "0x1008270")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1008274", Offset = "0x1008274", VA = "0x1008274")]
		public void DoHide()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x100829C", Offset = "0x100829C", VA = "0x100829C")]
		public DisableOnAwake()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class DisableOnSceneLoad : MonoBehaviour
	{
		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x10082A4", Offset = "0x10082A4", VA = "0x10082A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x10082E8", Offset = "0x10082E8", VA = "0x10082E8")]
		public void DoHide()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1008310", Offset = "0x1008310", VA = "0x1008310")]
		public DisableOnSceneLoad()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class FadeCurtain : MonoBehaviour
	{
		[Token(Token = "0x2000565")]
		public enum FadeDir
		{
			[Token(Token = "0x4001D44")]
			ToOpaque,
			[Token(Token = "0x4001D45")]
			ToTransparent,
			[Token(Token = "0x4001D46")]
			Hold
		}

		[Token(Token = "0x2000566")]
		public enum FadeType
		{
			[Token(Token = "0x4001D48")]
			Standard,
			[Token(Token = "0x4001D49")]
			CustomCurve
		}

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7740", Offset = "0x8D7740")]
		private sealed class <WarmUp>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeCurtain <>4__this;

			[Token(Token = "0x17000483")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023EB")]
				[Address(RVA = "0xE7B4D0", Offset = "0xE7B4D0", VA = "0xE7B4D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000484")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023ED")]
				[Address(RVA = "0xE7B518", Offset = "0xE7B518", VA = "0xE7B518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xE7B17C", Offset = "0xE7B17C", VA = "0xE7B17C")]
			[DebuggerHidden]
			public <WarmUp>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0xE7B1A8", Offset = "0xE7B1A8", VA = "0xE7B1A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xE7B1AC", Offset = "0xE7B1AC", VA = "0xE7B1AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xE7B4D8", Offset = "0xE7B4D8", VA = "0xE7B4D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useSeparateCamera;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FadeCurtain _master;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E2A4C", Offset = "0x8E2A4C")]
		[AttributeAttribute(Name = "TestButtonAttribute", RVA = "0x8E2A4C", Offset = "0x8E2A4C")]
		public bool m_isMaster;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_curtain;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera[] m_camera;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color m_opaque;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color m_transparent;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_fadeTimer;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_fadeTimerLastFrame;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_fadeDuration;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private FadeDir m_fadeDir;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FadeType m_fadeType;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve m_customCurve;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OVRPassthroughLayer m_passthroughLayer;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_passthroughWasEnabled;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_initialised;

		[Token(Token = "0x1700047F")]
		public bool IsOpaque
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x101BD48", Offset = "0x101BD48", VA = "0x101BD48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000480")]
		public bool IsTransparent
		{
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x101BD5C", Offset = "0x101BD5C", VA = "0x101BD5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public bool IsFading
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x101BD6C", Offset = "0x101BD6C", VA = "0x101BD6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000482")]
		public static FadeCurtain Master
		{
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x10116E8", Offset = "0x10116E8", VA = "0x10116E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x101BD8C", Offset = "0x101BD8C", VA = "0x101BD8C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F249C", Offset = "0x8F249C")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x101BDDC", Offset = "0x101BDDC", VA = "0x101BDDC")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x101BEDC", Offset = "0x101BEDC", VA = "0x101BEDC")]
		private void GoOpaque()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x101BFA0", Offset = "0x101BFA0", VA = "0x101BFA0")]
		private void GoTransparent()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x101BFAC", Offset = "0x101BFAC", VA = "0x101BFAC")]
		public void SetColour(Color c)
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x101BFC4", Offset = "0x101BFC4", VA = "0x101BFC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x101C364", Offset = "0x101C364", VA = "0x101C364")]
		private void EnableCurtain()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x101C2EC", Offset = "0x101C2EC", VA = "0x101C2EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F24B0", Offset = "0x8F24B0")]
		private IEnumerator WarmUp()
		{
			return null;
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x101C3F0", Offset = "0x101C3F0", VA = "0x101C3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x101BEE8", Offset = "0x101BEE8", VA = "0x101BEE8")]
		public void FadeToOpaque(float duration, FadeType fadeType = FadeType.Standard)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x10118AC", Offset = "0x10118AC", VA = "0x10118AC")]
		public void FadeToTransparent(float duration, FadeType fadeType = FadeType.Standard)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x101C7B0", Offset = "0x101C7B0", VA = "0x101C7B0")]
		public void SetOpaqueInstantaneous()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x101C1E4", Offset = "0x101C1E4", VA = "0x101C1E4")]
		public void SetTransparentInstantaneous()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x101C8B4", Offset = "0x101C8B4", VA = "0x101C8B4")]
		public FadeCurtain()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class HideOnAwake : MonoBehaviour
	{
		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_hideChildren;

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x12AF060", Offset = "0x12AF060", VA = "0x12AF060")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x12AF064", Offset = "0x12AF064", VA = "0x12AF064")]
		public void DoHide()
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x12AF14C", Offset = "0x12AF14C", VA = "0x12AF14C")]
		public HideOnAwake()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class StateMachine<T> where T : Enum
	{
		[Token(Token = "0x200056A")]
		public delegate void StateDelegate();

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_enterFns;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_updateFns;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_lateupdateFns;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StateDelegate[] m_exitFns;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_currentState;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_nextState;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool nextStateEqualsCurrentState;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2AF0", Offset = "0x8E2AF0")]
		private int <NumStates>k__BackingField;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B00", Offset = "0x8E2B00")]
		private float <StateTimer>k__BackingField;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B10", Offset = "0x8E2B10")]
		private float <StateTimerUnscaled>k__BackingField;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_currentStateAsInt;

		[Token(Token = "0x17000485")]
		public T State
		{
			[Token(Token = "0x60023F1")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60023F2")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public int NumStates
		{
			[Token(Token = "0x60023F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2560", Offset = "0x8F2560")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2570", Offset = "0x8F2570")]
			private set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public float StateTimer
		{
			[Token(Token = "0x60023F5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2580", Offset = "0x8F2580")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023F6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F2590", Offset = "0x8F2590")]
			private set
			{
			}
		}

		[Token(Token = "0x17000488")]
		public float StateTimerUnscaled
		{
			[Token(Token = "0x60023F7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F25A0", Offset = "0x8F25A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F25B0", Offset = "0x8F25B0")]
			private set
			{
			}
		}

		[Token(Token = "0x60023F9")]
		public StateMachine(T startState)
		{
		}

		[Token(Token = "0x60023FA")]
		public void AddState(T state, StateDelegate updateDelegate)
		{
		}

		[Token(Token = "0x60023FB")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate enterDelegate)
		{
		}

		[Token(Token = "0x60023FC")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate enterDelegate, StateDelegate exitDelegate)
		{
		}

		[Token(Token = "0x60023FD")]
		public void AddState(T state, StateDelegate updateDelegate, StateDelegate lateUpdateDelegate, StateDelegate enterDelegate, StateDelegate exitDelegate)
		{
		}

		[Token(Token = "0x60023FE")]
		public void Update()
		{
		}

		[Token(Token = "0x60023FF")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002400")]
		public void PrintfDebugInfo()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class Util
	{
		[Token(Token = "0x200056C")]
		public delegate bool ComponentDelegate<T>(T cmp);

		[Token(Token = "0x200056D")]
		public enum VRSDK
		{
			[Token(Token = "0x4001D61")]
			Uninitialised = -1,
			[Token(Token = "0x4001D62")]
			Unknown,
			[Token(Token = "0x4001D63")]
			OpenVR,
			[Token(Token = "0x4001D64")]
			Oculus
		}

		[Token(Token = "0x200056E")]
		public enum VROpenXrRuntime
		{
			[Token(Token = "0x4001D66")]
			Any = -2,
			[Token(Token = "0x4001D67")]
			Uninitialised,
			[Token(Token = "0x4001D68")]
			Unknown,
			[Token(Token = "0x4001D69")]
			SteamVR,
			[Token(Token = "0x4001D6A")]
			Oculus,
			[Token(Token = "0x4001D6B")]
			WindowsMR,
			[Token(Token = "0x4001D6C")]
			Other
		}

		[Token(Token = "0x200056F")]
		public enum VRDevice
		{
			[Token(Token = "0x4001D6E")]
			Uninitialised = -1,
			[Token(Token = "0x4001D6F")]
			Unknown,
			[Token(Token = "0x4001D70")]
			OpenVR_Any,
			[Token(Token = "0x4001D71")]
			OculusRift,
			[Token(Token = "0x4001D72")]
			OculusGo
		}

		[Token(Token = "0x2000570")]
		public enum VRControllerType
		{
			[Token(Token = "0x4001D74")]
			Uninitialised = -2,
			[Token(Token = "0x4001D75")]
			Unknown,
			[Token(Token = "0x4001D76")]
			Default,
			[Token(Token = "0x4001D77")]
			Oculus,
			[Token(Token = "0x4001D78")]
			Vive,
			[Token(Token = "0x4001D79")]
			Index
		}

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform ms_tempObjects;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Transform> ms_tempObjectCategories;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VRSDK ms_currentVrSDK;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static VROpenXrRuntime ms_currentOpenXrRuntime;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static VRDevice ms_currentVrDevice;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static VRControllerType[] ms_currentVrControllerType;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string[] formatTags;

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xEA48F8", Offset = "0xEA48F8", VA = "0xEA48F8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F25C0", Offset = "0x8F25C0")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xEA49B0", Offset = "0xEA49B0", VA = "0xEA49B0")]
		public static void SetupTempItemsParent()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xEA4B48", Offset = "0xEA4B48", VA = "0xEA4B48")]
		public static Transform GetTempItemsParent([Optional] string type)
		{
			return null;
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xEA4D34", Offset = "0xEA4D34", VA = "0xEA4D34")]
		public static GameObject MakePrimitive(PrimitiveType pt)
		{
			return null;
		}

		[Token(Token = "0x6002409")]
		public static T NewGameObjectWithComponent<T>(string name) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600240A")]
		public static T NewGameObjectWithComponent<T>(string name, Transform t) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xEA4E34", Offset = "0xEA4E34", VA = "0xEA4E34")]
		public static GameObject NewGameObject(string name, Transform t)
		{
			return null;
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xEA4F14", Offset = "0xEA4F14", VA = "0xEA4F14")]
		public static GameObject InstantiatePrefab(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xEA5044", Offset = "0xEA5044", VA = "0xEA5044")]
		public static GameObject InstantiatePrefab(GameObject prefab, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xEA51D4", Offset = "0xEA51D4", VA = "0xEA51D4")]
		public static GameObject InstantiatePrefab(GameObject prefab, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xE94F88", Offset = "0xE94F88", VA = "0xE94F88")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xEA54E4", Offset = "0xEA54E4", VA = "0xEA54E4")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent, Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xEA53AC", Offset = "0xEA53AC", VA = "0xEA53AC")]
		public static GameObject InstantiatePrefab(GameObject prefab, Transform parent, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xEA55C8", Offset = "0xEA55C8", VA = "0xEA55C8")]
		public static bool ShouldIgnore(GameObject go, ICollection<GameObject> ignoreList)
		{
			return default(bool);
		}

		[Token(Token = "0x6002413")]
		public static bool ShouldIgnore<T>(T go, ICollection<T> ignoreList)
		{
			return default(bool);
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xEA58E8", Offset = "0xEA58E8", VA = "0xEA58E8")]
		public static Vector3 AveragePosition(UnityEngine.Component[] comps)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002415")]
		public static Vector3 AveragePosition<T>(List<T> comps) where T : UnityEngine.Component
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xEA59A0", Offset = "0xEA59A0", VA = "0xEA59A0")]
		public static GameObject GetClosest(Vector3 pos, ICollection<GameObject> objectList, [Optional] ICollection<GameObject> ignoreList)
		{
			return null;
		}

		[Token(Token = "0x6002417")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, [Optional] ICollection<T> ignoreList) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002418")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float closestDistSq, T ignore) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002419")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float distSq, [Optional] ICollection<T> ignoreList) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600241A")]
		public static T GetClosest<T>(Vector3 pos, ICollection<T> objectList, out float distSq, ComponentDelegate<T> condition) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xEA5D88", Offset = "0xEA5D88", VA = "0xEA5D88")]
		public static Transform GetClosest(Vector3 pos, ICollection<Transform> objectList)
		{
			return null;
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xEA6104", Offset = "0xEA6104", VA = "0xEA6104")]
		public static Transform GetClosest(Vector3 pos, IEnumerable<UnityEngine.Component> objectList)
		{
			return null;
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xEA650C", Offset = "0xEA650C", VA = "0xEA650C")]
		public static Transform GetWithSmallestAngle(Vector3 pos, Vector3 fwd, ICollection<UnityEngine.Component> objectList)
		{
			return null;
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xEA655C", Offset = "0xEA655C", VA = "0xEA655C")]
		public static Transform GetWithSmallestAngle(Vector3 pos, Vector3 fwd, ICollection<UnityEngine.Component> objectList, out float angleOut)
		{
			return null;
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xEA69AC", Offset = "0xEA69AC", VA = "0xEA69AC")]
		public static bool WithinRadius(Vector3 A, Vector3 B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xEA69FC", Offset = "0xEA69FC", VA = "0xEA69FC")]
		public static bool WithinRadius(UnityEngine.Component A, UnityEngine.Component B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xEA6AAC", Offset = "0xEA6AAC", VA = "0xEA6AAC")]
		public static bool WithinRadius(GameObject A, GameObject B, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xEA6B5C", Offset = "0xEA6B5C", VA = "0xEA6B5C")]
		public static Vector3 ClosestishPointOnEllipse(Vector3 p, Transform t, float rx, float rz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xEA6C7C", Offset = "0xEA6C7C", VA = "0xEA6C7C")]
		public static Vector3 PointOnEllipse(float angRad, Transform t, float rx, float rz)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xEA6D48", Offset = "0xEA6D48", VA = "0xEA6D48")]
		public static void Shuffle(ref int[] array)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xEA6E10", Offset = "0xEA6E10", VA = "0xEA6E10")]
		public static int[] RandomSequenceOfInts(int minInclusive, int maxExclusive)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xE91A9C", Offset = "0xE91A9C", VA = "0xE91A9C")]
		public static string FormatTime_HoursMinsSecs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xEA6EF4", Offset = "0xEA6EF4", VA = "0xEA6EF4")]
		public static string FormatTime_MinsSecs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xEA6FD4", Offset = "0xEA6FD4", VA = "0xEA6FD4")]
		public static string FormatTime_MinsSecsNoLeadingZero(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xEA70B4", Offset = "0xEA70B4", VA = "0xEA70B4")]
		public static string FormatTime_MinsSecsMs(float timeInsecs)
		{
			return null;
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xEA71B4", Offset = "0xEA71B4", VA = "0xEA71B4")]
		public static string FormatTime_FriendlyTimeAgo(DateTime d)
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xEA75C8", Offset = "0xEA75C8", VA = "0xEA75C8")]
		public static string FormatTime_SemiFriendly(DateTime d, CultureInfo ci)
		{
			return null;
		}

		[Token(Token = "0x600242C")]
		public static void GetComponentsInChildrenEvenIfInactive<T>(Transform t, ref List<T> list) where T : MonoBehaviour
		{
		}

		[Token(Token = "0x600242D")]
		public static List<T> FindObjectsOfTypeIncludingDisabled<T>()
		{
			return null;
		}

		[Token(Token = "0x600242E")]
		public static T FindObjectOfTypeIncludingDisabled<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xEA76E0", Offset = "0xEA76E0", VA = "0xEA76E0")]
		public static void LoadSceneAdditive(string path)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xEA7774", Offset = "0xEA7774", VA = "0xEA7774")]
		public static string GetCallStack()
		{
			return null;
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xEA7A28", Offset = "0xEA7A28", VA = "0xEA7A28")]
		public static VRSDK GetVrSDK()
		{
			return default(VRSDK);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xE8BB28", Offset = "0xE8BB28", VA = "0xE8BB28")]
		public static VROpenXrRuntime GetOpenXrRuntime()
		{
			return default(VROpenXrRuntime);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xEA7B9C", Offset = "0xEA7B9C", VA = "0xEA7B9C")]
		public static VRDevice GetVrDevice()
		{
			return default(VRDevice);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xE8B624", Offset = "0xE8B624", VA = "0xE8B624")]
		public static VRControllerType GetVrControllerTypeString(Chirality chirality, bool useDefaultOnError)
		{
			return default(VRControllerType);
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xEA7D2C", Offset = "0xEA7D2C", VA = "0xEA7D2C")]
		public static Vector3 ParseVector3(string s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xEA7EC4", Offset = "0xEA7EC4", VA = "0xEA7EC4")]
		public static Quaternion ParseQuaternion(string s)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xE8B368", Offset = "0xE8B368", VA = "0xE8B368")]
		public static string SafeFormat(string format, object arg0)
		{
			return null;
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xE8F4E8", Offset = "0xE8F4E8", VA = "0xE8F4E8")]
		public static string SafeFormat(string format, object arg0, object arg1)
		{
			return null;
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xEA81E4", Offset = "0xEA81E4", VA = "0xEA81E4")]
		public static string SafeFormat(string format, object arg0, object arg1, object arg2)
		{
			return null;
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xEA8088", Offset = "0xEA8088", VA = "0xEA8088")]
		public static string SafeFormatForArgCount(string format, int argCount)
		{
			return null;
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xEA8278", Offset = "0xEA8278", VA = "0xEA8278")]
		public Util()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class VersionNumber : MonoBehaviour
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowVersionInformation;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ShowVersionDuringTheFirst20Seconds;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string version;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect position;

		[Token(Token = "0x17000489")]
		public string Version
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x13F5B08", Offset = "0x13F5B08", VA = "0x13F5B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		public string Date
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x13F5BA0", Offset = "0x13F5BA0", VA = "0x13F5BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x13F5C7C", Offset = "0x13F5C7C", VA = "0x13F5C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x13F5DAC", Offset = "0x13F5DAC", VA = "0x13F5DAC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x13F5EB0", Offset = "0x13F5EB0", VA = "0x13F5EB0")]
		public VersionNumber()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class EventCycleWwiseEvent : Triggerable
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] m_events;

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1011098", Offset = "0x1011098", VA = "0x1011098", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x101109C", Offset = "0x101109C", VA = "0x101109C")]
		public EventCycleWwiseEvent()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class EventPostWwiseEvent : Triggerable
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useTempGameObject;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wwiseGameObject;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_namedWwiseGameObject;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_onTriggerEvent;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_onUntriggerEvent;

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1013BA0", Offset = "0x1013BA0", VA = "0x1013BA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1013D38", Offset = "0x1013D38", VA = "0x1013D38", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1013E78", Offset = "0x1013E78", VA = "0x1013E78", Slot = "5")]
		public override void Untrigger()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1013FE0", Offset = "0x1013FE0", VA = "0x1013FE0")]
		public EventPostWwiseEvent()
		{
		}
	}
}
namespace Vitei.Vitei
{
	[Token(Token = "0x2000574")]
	public class AndTrigger : Trigger
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Trigger> m_inputs;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_fired;

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x14978F0", Offset = "0x14978F0", VA = "0x14978F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x14979C8", Offset = "0x14979C8", VA = "0x14979C8")]
		public AndTrigger()
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x2000575")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001D87")]
		Array = 1,
		[Token(Token = "0x4001D88")]
		Object,
		[Token(Token = "0x4001D89")]
		String,
		[Token(Token = "0x4001D8A")]
		Number,
		[Token(Token = "0x4001D8B")]
		NullValue,
		[Token(Token = "0x4001D8C")]
		Boolean,
		[Token(Token = "0x4001D8D")]
		None
	}
	[Token(Token = "0x2000576")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4001D8F")]
		Compact,
		[Token(Token = "0x4001D90")]
		Indent
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7750", Offset = "0x8D7750")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7788", Offset = "0x8D7788")]
		private sealed class <get_Children>d__29 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700049E")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002494")]
				[Address(RVA = "0xE870C4", Offset = "0xE870C4", VA = "0xE870C4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002496")]
				[Address(RVA = "0xE8710C", Offset = "0xE8710C", VA = "0xE8710C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0xE87070", Offset = "0xE87070", VA = "0xE87070")]
			[DebuggerHidden]
			public <get_Children>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002492")]
			[Address(RVA = "0xE870A8", Offset = "0xE870A8", VA = "0xE870A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002493")]
			[Address(RVA = "0xE870AC", Offset = "0xE870AC", VA = "0xE870AC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002495")]
			[Address(RVA = "0xE870CC", Offset = "0xE870CC", VA = "0xE870CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002497")]
			[Address(RVA = "0xE87114", Offset = "0xE87114", VA = "0xE87114", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0xE871A8", Offset = "0xE871A8", VA = "0xE871A8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7798", Offset = "0x8D7798")]
		private sealed class <get_DeepChildren>d__31 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170004A0")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600249E")]
				[Address(RVA = "0xE87858", Offset = "0xE87858", VA = "0xE87858", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024A0")]
				[Address(RVA = "0xE878A0", Offset = "0xE878A0", VA = "0xE878A0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002499")]
			[Address(RVA = "0xE871AC", Offset = "0xE871AC", VA = "0xE871AC")]
			[DebuggerHidden]
			public <get_DeepChildren>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600249A")]
			[Address(RVA = "0xE871E4", Offset = "0xE871E4", VA = "0xE871E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600249B")]
			[Address(RVA = "0xE873EC", Offset = "0xE873EC", VA = "0xE873EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600249C")]
			[Address(RVA = "0xE87330", Offset = "0xE87330", VA = "0xE87330")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600249D")]
			[Address(RVA = "0xE87274", Offset = "0xE87274", VA = "0xE87274")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600249F")]
			[Address(RVA = "0xE87860", Offset = "0xE87860", VA = "0xE87860", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xE878A8", Offset = "0xE878A8", VA = "0xE878A8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0xE87958", Offset = "0xE87958", VA = "0xE87958", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x1700048B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x114894C", Offset = "0x114894C", VA = "0x114894C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x1148954", Offset = "0x1148954", VA = "0x1148954", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700048C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x1148958", Offset = "0x1148958", VA = "0x1148958", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x1148960", Offset = "0x1148960", VA = "0x1148960", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700048D")]
		public virtual string Value
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x1148964", Offset = "0x1148964", VA = "0x1148964", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x11489A8", Offset = "0x11489A8", VA = "0x11489A8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public virtual int Count
		{
			[Token(Token = "0x6002454")]
			[Address(RVA = "0x11489AC", Offset = "0x11489AC", VA = "0x11489AC", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048F")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x11489B4", Offset = "0x11489B4", VA = "0x11489B4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000490")]
		public virtual bool IsString
		{
			[Token(Token = "0x6002456")]
			[Address(RVA = "0x11489BC", Offset = "0x11489BC", VA = "0x11489BC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000491")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0x11489C4", Offset = "0x11489C4", VA = "0x11489C4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000492")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6002458")]
			[Address(RVA = "0x11489CC", Offset = "0x11489CC", VA = "0x11489CC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000493")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x11489D4", Offset = "0x11489D4", VA = "0x11489D4", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000494")]
		public virtual bool IsObject
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x11489DC", Offset = "0x11489DC", VA = "0x11489DC", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000495")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0x1148A68", Offset = "0x1148A68", VA = "0x1148A68", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F25D4", Offset = "0x8F25D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6002461")]
			[Address(RVA = "0x1148AC4", Offset = "0x1148AC4", VA = "0x1148AC4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2634", Offset = "0x8F2634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6002465")]
			get;
		}

		[Token(Token = "0x17000498")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0x1148C68", Offset = "0x1148C68", VA = "0x1148C68", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002467")]
			[Address(RVA = "0x1148D08", Offset = "0x1148D08", VA = "0x1148D08", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000499")]
		public virtual int AsInt
		{
			[Token(Token = "0x6002468")]
			[Address(RVA = "0x1148D48", Offset = "0x1148D48", VA = "0x1148D48", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002469")]
			[Address(RVA = "0x1148D80", Offset = "0x1148D80", VA = "0x1148D80", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700049A")]
		public virtual float AsFloat
		{
			[Token(Token = "0x600246A")]
			[Address(RVA = "0x1148D98", Offset = "0x1148D98", VA = "0x1148D98", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600246B")]
			[Address(RVA = "0x1148DBC", Offset = "0x1148DBC", VA = "0x1148DBC", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public virtual bool AsBool
		{
			[Token(Token = "0x600246C")]
			[Address(RVA = "0x1148DD0", Offset = "0x1148DD0", VA = "0x1148DD0", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600246D")]
			[Address(RVA = "0x1148E94", Offset = "0x1148E94", VA = "0x1148E94", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0x1148F18", Offset = "0x1148F18", VA = "0x1148F18", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049D")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x600246F")]
			[Address(RVA = "0x1148F94", Offset = "0x1148F94", VA = "0x1148F94", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x11489E4", Offset = "0x11489E4", VA = "0x11489E4", Slot = "17")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x11489E8", Offset = "0x11489E8", VA = "0x11489E8", Slot = "18")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1148A50", Offset = "0x1148A50", VA = "0x1148A50", Slot = "19")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1148A58", Offset = "0x1148A58", VA = "0x1148A58", Slot = "20")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1148A60", Offset = "0x1148A60", VA = "0x1148A60", Slot = "21")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x1148B3C", Offset = "0x1148B3C", VA = "0x1148B3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1148BCC", Offset = "0x1148BCC", VA = "0x1148BCC", Slot = "23")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6002464")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1149010", Offset = "0x1149010", VA = "0x1149010")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x11490EC", Offset = "0x11490EC", VA = "0x11490EC")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x114917C", Offset = "0x114917C", VA = "0x114917C")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x11491E0", Offset = "0x11491E0", VA = "0x11491E0")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1149274", Offset = "0x1149274", VA = "0x1149274")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x11492D8", Offset = "0x11492D8", VA = "0x11492D8")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x114936C", Offset = "0x114936C", VA = "0x114936C")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x11493C8", Offset = "0x11493C8", VA = "0x11493C8")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x114945C", Offset = "0x114945C", VA = "0x114945C")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x11494B8", Offset = "0x11494B8", VA = "0x11494B8")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x11472E8", Offset = "0x11472E8", VA = "0x11472E8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x114954C", Offset = "0x114954C", VA = "0x114954C")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x11495C8", Offset = "0x11495C8", VA = "0x11495C8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x11495D4", Offset = "0x11495D4", VA = "0x11495D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x11495DC", Offset = "0x11495DC", VA = "0x11495DC")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x11499E4", Offset = "0x11499E4", VA = "0x11499E4")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1146A2C", Offset = "0x1146A2C", VA = "0x1146A2C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1149C00", Offset = "0x1149C00", VA = "0x1149C00", Slot = "36")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1149C04", Offset = "0x1149C04", VA = "0x1149C04")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1149C80", Offset = "0x1149C80", VA = "0x1149C80")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1149CD4", Offset = "0x1149CD4", VA = "0x1149CD4")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1149D28", Offset = "0x1149D28", VA = "0x1149D28")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1149D7C", Offset = "0x1149D7C", VA = "0x1149D7C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1149F0C", Offset = "0x1149F0C", VA = "0x1149F0C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x114A0E0", Offset = "0x114A0E0", VA = "0x114A0E0")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x114A464", Offset = "0x114A464", VA = "0x114A464")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x114A4B8", Offset = "0x114A4B8", VA = "0x114A4B8")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x114A50C", Offset = "0x114A50C", VA = "0x114A50C")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x114A560", Offset = "0x114A560", VA = "0x114A560")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x114A6F0", Offset = "0x114A6F0", VA = "0x114A6F0")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x114A868", Offset = "0x114A868", VA = "0x114A868")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x1147C3C", Offset = "0x1147C3C", VA = "0x1147C3C")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D77A8", Offset = "0x8D77A8")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D77E0", Offset = "0x8D77E0")]
		private sealed class <get_Children>d__18 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004A8")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60024B6")]
				[Address(RVA = "0xE86F6C", Offset = "0xE86F6C", VA = "0xE86F6C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024B8")]
				[Address(RVA = "0xE86FB4", Offset = "0xE86FB4", VA = "0xE86FB4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0xE86D38", Offset = "0xE86D38", VA = "0xE86D38")]
			[DebuggerHidden]
			public <get_Children>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0xE86D70", Offset = "0xE86D70", VA = "0xE86D70", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xE86DE0", Offset = "0xE86DE0", VA = "0xE86DE0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xE86D8C", Offset = "0xE86D8C", VA = "0xE86D8C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xE86F74", Offset = "0xE86F74", VA = "0xE86F74", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xE86FBC", Offset = "0xE86FBC", VA = "0xE86FBC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xE8706C", Offset = "0xE8706C", VA = "0xE8706C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D77F0", Offset = "0x8D77F0")]
		private sealed class <GetEnumerator>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BF")]
				[Address(RVA = "0xE86CE8", Offset = "0xE86CE8", VA = "0xE86CE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C1")]
				[Address(RVA = "0xE86D30", Offset = "0xE86D30", VA = "0xE86D30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xE86AC0", Offset = "0xE86AC0", VA = "0xE86AC0")]
			[DebuggerHidden]
			public <GetEnumerator>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xE86AEC", Offset = "0xE86AEC", VA = "0xE86AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0xE86B5C", Offset = "0xE86B5C", VA = "0xE86B5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xE86B08", Offset = "0xE86B08", VA = "0xE86B08")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xE86CF0", Offset = "0xE86CF0", VA = "0xE86CF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170004A2")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x1147078", Offset = "0x1147078", VA = "0x1147078", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004A3")]
		public override bool IsArray
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1147080", Offset = "0x1147080", VA = "0x1147080", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A4")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1147088", Offset = "0x1147088", VA = "0x1147088", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x11471D0", Offset = "0x11471D0", VA = "0x11471D0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x11474D8", Offset = "0x11474D8", VA = "0x11474D8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x1147534", Offset = "0x1147534", VA = "0x1147534", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004A6")]
		public override int Count
		{
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x11475F8", Offset = "0x11475F8", VA = "0x11475F8", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A7")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x1147834", Offset = "0x1147834", VA = "0x1147834", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2774", Offset = "0x8F2774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1147644", Offset = "0x1147644", VA = "0x1147644", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1147708", Offset = "0x1147708", VA = "0x1147708", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x11477C8", Offset = "0x11477C8", VA = "0x11477C8", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x11478AC", Offset = "0x11478AC", VA = "0x11478AC", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F27D4", Offset = "0x8F27D4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1147924", Offset = "0x1147924", VA = "0x1147924", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1147A0C", Offset = "0x1147A0C", VA = "0x1147A0C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1147B8C", Offset = "0x1147B8C", VA = "0x1147B8C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7800", Offset = "0x8D7800")]
	public class JSONObject : JSONNode, IEnumerable
	{
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7838", Offset = "0x8D7838")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xE8795C", Offset = "0xE8795C", VA = "0xE8795C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xE87964", Offset = "0xE87964", VA = "0xE87964")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7848", Offset = "0x8D7848")]
		private sealed class <get_Children>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B2")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60024D8")]
				[Address(RVA = "0xE87EDC", Offset = "0xE87EDC", VA = "0xE87EDC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DA")]
				[Address(RVA = "0xE87F24", Offset = "0xE87F24", VA = "0xE87F24", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xE87C94", Offset = "0xE87C94", VA = "0xE87C94")]
			[DebuggerHidden]
			public <get_Children>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xE87CCC", Offset = "0xE87CCC", VA = "0xE87CCC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xE87D3C", Offset = "0xE87D3C", VA = "0xE87D3C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xE87CE8", Offset = "0xE87CE8", VA = "0xE87CE8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xE87EE4", Offset = "0xE87EE4", VA = "0xE87EE4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xE87F2C", Offset = "0xE87F2C", VA = "0xE87F2C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xE87FDC", Offset = "0xE87FDC", VA = "0xE87FDC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7858", Offset = "0x8D7858")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E1")]
				[Address(RVA = "0xE87C44", Offset = "0xE87C44", VA = "0xE87C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E3")]
				[Address(RVA = "0xE87C8C", Offset = "0xE87C8C", VA = "0xE87C8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xE879E8", Offset = "0xE879E8", VA = "0xE879E8")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xE87A14", Offset = "0xE87A14", VA = "0xE87A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xE87A84", Offset = "0xE87A84", VA = "0xE87A84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xE87A30", Offset = "0xE87A30", VA = "0xE87A30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xE87C4C", Offset = "0xE87C4C", VA = "0xE87C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170004AC")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x114B048", Offset = "0x114B048", VA = "0x114B048", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004AD")]
		public override bool IsObject
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x114B050", Offset = "0x114B050", VA = "0x114B050", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AE")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x114B058", Offset = "0x114B058", VA = "0x114B058", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x114B128", Offset = "0x114B128", VA = "0x114B128", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public override JSONNode Item
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x114B258", Offset = "0x114B258", VA = "0x114B258", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x114B304", Offset = "0x114B304", VA = "0x114B304", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public override int Count
		{
			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x114B444", Offset = "0x114B444", VA = "0x114B444", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B1")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x114B9E0", Offset = "0x114B9E0", VA = "0x114B9E0", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F28F4", Offset = "0x8F28F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x114B498", Offset = "0x114B498", VA = "0x114B498", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x114B644", Offset = "0x114B644", VA = "0x114B644", Slot = "19")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x114B714", Offset = "0x114B714", VA = "0x114B714", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x114B7FC", Offset = "0x114B7FC", VA = "0x114B7FC", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x114BA58", Offset = "0x114BA58", VA = "0x114BA58", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2954", Offset = "0x8F2954")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x114BAD0", Offset = "0x114BAD0", VA = "0x114BAD0", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x114BCCC", Offset = "0x114BCCC", VA = "0x114BCCC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x114824C", Offset = "0x114824C", VA = "0x114824C")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170004B6")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x114BFEC", Offset = "0x114BFEC", VA = "0x114BFEC", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004B7")]
		public override bool IsString
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x114BFF4", Offset = "0x114BFF4", VA = "0x114BFF4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public override string Value
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x114BFFC", Offset = "0x114BFFC", VA = "0x114BFFC", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x114C004", Offset = "0x114C004", VA = "0x114C004", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x114906C", Offset = "0x114906C", VA = "0x114906C")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x114C00C", Offset = "0x114C00C", VA = "0x114C00C", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x114C05C", Offset = "0x114C05C", VA = "0x114C05C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x114C110", Offset = "0x114C110", VA = "0x114C110", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x114C238", Offset = "0x114C238", VA = "0x114C238", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000582")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170004B9")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x114AB48", Offset = "0x114AB48", VA = "0x114AB48", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004BA")]
		public override bool IsNumber
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x114AB50", Offset = "0x114AB50", VA = "0x114AB50", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BB")]
		public override string Value
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x114AB58", Offset = "0x114AB58", VA = "0x114AB58", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x114ABCC", Offset = "0x114ABCC", VA = "0x114ABCC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public override double AsDouble
		{
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x114AC54", Offset = "0x114AC54", VA = "0x114AC54", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x114AC5C", Offset = "0x114AC5C", VA = "0x114AC5C", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x11484CC", Offset = "0x11484CC", VA = "0x11484CC")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x114AC64", Offset = "0x114AC64", VA = "0x114AC64")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x114ACE8", Offset = "0x114ACE8", VA = "0x114ACE8", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x114AD38", Offset = "0x114AD38", VA = "0x114AD38", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x114AD58", Offset = "0x114AD58", VA = "0x114AD58")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x114AEFC", Offset = "0x114AEFC", VA = "0x114AEFC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x114B03C", Offset = "0x114B03C", VA = "0x114B03C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000583")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170004BD")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x1147C44", Offset = "0x1147C44", VA = "0x1147C44", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004BE")]
		public override bool IsBoolean
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x1147C4C", Offset = "0x1147C4C", VA = "0x1147C4C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BF")]
		public override string Value
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x1147C54", Offset = "0x1147C54", VA = "0x1147C54", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x1147C60", Offset = "0x1147C60", VA = "0x1147C60", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public override bool AsBool
		{
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x1147CE8", Offset = "0x1147CE8", VA = "0x1147CE8", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x1147CF0", Offset = "0x1147CF0", VA = "0x1147CF0", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x1147CFC", Offset = "0x1147CFC", VA = "0x1147CFC")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1147D78", Offset = "0x1147D78", VA = "0x1147D78")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1147DFC", Offset = "0x1147DFC", VA = "0x1147DFC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x1147E48", Offset = "0x1147E48", VA = "0x1147E48", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1147ECC", Offset = "0x1147ECC", VA = "0x1147ECC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x1147F50", Offset = "0x1147F50", VA = "0x1147F50", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000584")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x170004C1")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002506")]
			[Address(RVA = "0x114A9C8", Offset = "0x114A9C8", VA = "0x114A9C8", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004C2")]
		public override bool IsNull
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0x114A9D0", Offset = "0x114A9D0", VA = "0x114A9D0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C3")]
		public override string Value
		{
			[Token(Token = "0x6002508")]
			[Address(RVA = "0x114A9D8", Offset = "0x114A9D8", VA = "0x114A9D8", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002509")]
			[Address(RVA = "0x114AA1C", Offset = "0x114AA1C", VA = "0x114AA1C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public override bool AsBool
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0x114AA20", Offset = "0x114AA20", VA = "0x114AA20", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600250B")]
			[Address(RVA = "0x114AA28", Offset = "0x114AA28", VA = "0x114AA28", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x114AA2C", Offset = "0x114AA2C", VA = "0x114AA2C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x114AAC4", Offset = "0x114AAC4", VA = "0x114AAC4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x114AACC", Offset = "0x114AACC", VA = "0x114AACC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x114AAF0", Offset = "0x114AAF0", VA = "0x114AAF0", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1147474", Offset = "0x1147474", VA = "0x1147474")]
		public JSONNull()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7868", Offset = "0x8D7868")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170004C5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0x1147F5C", Offset = "0x1147F5C", VA = "0x1147F5C", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170004C6")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002515")]
			[Address(RVA = "0x114806C", Offset = "0x114806C", VA = "0x114806C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002516")]
			[Address(RVA = "0x11480C8", Offset = "0x11480C8", VA = "0x11480C8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0x1148150", Offset = "0x1148150", VA = "0x1148150", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002518")]
			[Address(RVA = "0x11481BC", Offset = "0x11481BC", VA = "0x11481BC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public override int AsInt
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0x1148464", Offset = "0x1148464", VA = "0x1148464", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002520")]
			[Address(RVA = "0x1148544", Offset = "0x1148544", VA = "0x1148544", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public override float AsFloat
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0x11485B0", Offset = "0x11485B0", VA = "0x11485B0", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x1148618", Offset = "0x1148618", VA = "0x1148618", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public override double AsDouble
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x1148684", Offset = "0x1148684", VA = "0x1148684", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x11486EC", Offset = "0x11486EC", VA = "0x11486EC", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public override bool AsBool
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x1148758", Offset = "0x1148758", VA = "0x1148758", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x11487C0", Offset = "0x11487C0", VA = "0x11487C0", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x114882C", Offset = "0x114882C", VA = "0x114882C", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CD")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0x1148890", Offset = "0x1148890", VA = "0x1148890", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1147140", Offset = "0x1147140", VA = "0x1147140")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1147F64", Offset = "0x1147F64", VA = "0x1147F64")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1147FF8", Offset = "0x1147FF8", VA = "0x1147FF8")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x11482FC", Offset = "0x11482FC", VA = "0x11482FC", Slot = "18")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1148384", Offset = "0x1148384", VA = "0x1148384", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1148414", Offset = "0x1148414", VA = "0x1148414")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x114842C", Offset = "0x114842C", VA = "0x114842C")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1148444", Offset = "0x1148444", VA = "0x1148444", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x114845C", Offset = "0x114845C", VA = "0x114845C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x11488F4", Offset = "0x11488F4", VA = "0x11488F4", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000586")]
	public static class JSON
	{
		[Token(Token = "0x600252A")]
		[Address(RVA = "0x11469CC", Offset = "0x11469CC", VA = "0x11469CC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace MoonMode
{
	[Token(Token = "0x2000587")]
	public class DebugMenu : MonoBehaviour
	{
		[Token(Token = "0x2000588")]
		public class SubMenu
		{
			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_name;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<DebugMenuEntry> m_entries;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SubMenu> m_children;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SubMenu m_parent;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool m_expanded;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static string[] ms_labelStyles;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static GUIContent ms_foldoutExpanded;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static GUIContent ms_foldoutCollapsed;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static GUIContent ms_winMax;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private static GUIContent ms_winMin;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private static GUIContent ms_winClose;

			[Token(Token = "0x6002543")]
			[Address(RVA = "0xE74A8C", Offset = "0xE74A8C", VA = "0xE74A8C")]
			public SubMenu(string menuName)
			{
			}

			[Token(Token = "0x6002544")]
			[Address(RVA = "0xE74B80", Offset = "0xE74B80", VA = "0xE74B80")]
			public SubMenu GetSubMenu(string name)
			{
				return null;
			}

			[Token(Token = "0x6002545")]
			[Address(RVA = "0xE74C68", Offset = "0xE74C68", VA = "0xE74C68")]
			public void OnGUI(float lw, float vw, int depth)
			{
			}
		}

		[Token(Token = "0x2000589")]
		public class DebugMenuEntry
		{
			[Token(Token = "0x200058A")]
			private delegate T getvalue<T>(T oldVal);

			[Token(Token = "0x200058B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78A0", Offset = "0x8D78A0")]
			private sealed class <>c__DisplayClass12_0
			{
				[Token(Token = "0x4001DD1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float lw;

				[Token(Token = "0x4001DD2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public DebugMenuEntry <>4__this;

				[Token(Token = "0x6002551")]
				[Address(RVA = "0xEBCC54", Offset = "0xEBCC54", VA = "0xEBCC54")]
				public <>c__DisplayClass12_0()
				{
				}

				[Token(Token = "0x6002552")]
				[Address(RVA = "0xEBCC5C", Offset = "0xEBCC5C", VA = "0xEBCC5C")]
				internal int <OnGUI>b__1(int x)
				{
					return default(int);
				}

				[Token(Token = "0x6002553")]
				[Address(RVA = "0xEBCE3C", Offset = "0xEBCE3C", VA = "0xEBCE3C")]
				internal float <OnGUI>b__2(float x)
				{
					return default(float);
				}
			}

			[Serializable]
			[Token(Token = "0x200058C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78B0", Offset = "0x8D78B0")]
			private sealed class <>c
			{
				[Token(Token = "0x4001DD3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001DD4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static getvalue<bool> <>9__12_0;

				[Token(Token = "0x4001DD5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static getvalue<string> <>9__12_3;

				[Token(Token = "0x6002555")]
				[Address(RVA = "0xEBCA84", Offset = "0xEBCA84", VA = "0xEBCA84")]
				public <>c()
				{
				}

				[Token(Token = "0x6002556")]
				[Address(RVA = "0xEBCA8C", Offset = "0xEBCA8C", VA = "0xEBCA8C")]
				internal bool <OnGUI>b__12_0(bool x)
				{
					return default(bool);
				}

				[Token(Token = "0x6002557")]
				[Address(RVA = "0xEBCB7C", Offset = "0xEBCB7C", VA = "0xEBCB7C")]
				internal string <OnGUI>b__12_3(string x)
				{
					return null;
				}
			}

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string label;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugMenuItem fieldAttr;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MethodInfo methodInfo;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MonoBehaviour monoBehaviour;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MethodInfo onValidateMethod;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public voidDelegate voidDel;

			[Token(Token = "0x170004CE")]
			public string fullPathUGUILabel
			{
				[Token(Token = "0x600254A")]
				[Address(RVA = "0xE73B80", Offset = "0xE73B80", VA = "0xE73B80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002547")]
			[Address(RVA = "0xE738CC", Offset = "0xE738CC", VA = "0xE738CC")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, MonoBehaviour mb, FieldInfo fi)
			{
			}

			[Token(Token = "0x6002548")]
			[Address(RVA = "0xE73A88", Offset = "0xE73A88", VA = "0xE73A88")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, MonoBehaviour mb, MethodInfo mi)
			{
			}

			[Token(Token = "0x6002549")]
			[Address(RVA = "0xE73B1C", Offset = "0xE73B1C", VA = "0xE73B1C")]
			public DebugMenuEntry(DebugMenuItem fieldAttribute, voidDelegate voidD, string labelText)
			{
			}

			[Token(Token = "0x600254B")]
			[Address(RVA = "0xE73FB4", Offset = "0xE73FB4", VA = "0xE73FB4")]
			public void OnGUI(float lw, float vw)
			{
			}

			[Token(Token = "0x600254C")]
			private void DoField<T>(getvalue<T> gvf, float lw)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058D")]
		public class ViewSettings
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DrawLocation m_location;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_selectedMenu;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_collapsed;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Rect m_windowRect;

			[Token(Token = "0x6002558")]
			[Address(RVA = "0xE75624", Offset = "0xE75624", VA = "0xE75624")]
			public ViewSettings()
			{
			}
		}

		[Token(Token = "0x200058E")]
		public enum DrawLocation
		{
			[Token(Token = "0x4001DDB")]
			None = 0,
			[Token(Token = "0x4001DDC")]
			GameView = 1,
			[Token(Token = "0x4001DDD")]
			Inspector = 2,
			[Token(Token = "0x4001DDE")]
			SceneView = 4
		}

		[Token(Token = "0x200058F")]
		public delegate void voidDelegate();

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78C0", Offset = "0x8D78C0")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo[] staticFields;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int k;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<DebugMenuEntry> <>9__1;

			[Token(Token = "0x600255D")]
			[Address(RVA = "0xE73878", Offset = "0xE73878", VA = "0xE73878")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0xE73880", Offset = "0xE73880", VA = "0xE73880")]
			internal bool <GetAllDebugValues>b__1(DebugMenuEntry x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78D0", Offset = "0x8D78D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<SubMenu> <>9__28_0;

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xE73844", Offset = "0xE73844", VA = "0xE73844")]
			public <>c()
			{
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0xE7384C", Offset = "0xE7384C", VA = "0xE7384C")]
			internal int <GetAllDebugValues>b__28_0(SubMenu a, SubMenu b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugMenu Instance;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_initialised;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public SubMenu m_root;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DrawLocation m_location;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public ViewSettings[] m_viewSettings;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ViewSettings m_currentViewSettings;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_displayWidth;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode m_toggleGameView;

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xF22728", Offset = "0xF22728", VA = "0xF22728")]
		private void Reset()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xF22734", Offset = "0xF22734", VA = "0xF22734")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F2A74", Offset = "0x8F2A74")]
		private static void ResetStatics()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xF22784", Offset = "0xF22784", VA = "0xF22784")]
		public static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xF22884", Offset = "0xF22884", VA = "0xF22884")]
		public static void RefreshValues()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xF22A58", Offset = "0xF22A58", VA = "0xF22A58")]
		public static string MakeNiceLabel(string s)
		{
			return null;
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xF22B6C", Offset = "0xF22B6C", VA = "0xF22B6C")]
		public static string AddSpacesToCamelCase(string s)
		{
			return null;
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xF22C0C", Offset = "0xF22C0C", VA = "0xF22C0C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xF22C10", Offset = "0xF22C10", VA = "0xF22C10")]
		public void ToggleVisibility(DrawLocation loc = DrawLocation.GameView)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xF22C54", Offset = "0xF22C54", VA = "0xF22C54")]
		public void SetCurrentDrawLoc(DrawLocation loc)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xF22EA4", Offset = "0xF22EA4", VA = "0xF22EA4")]
		public int WrapMenuId(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xF22F18", Offset = "0xF22F18", VA = "0xF22F18", Slot = "5")]
		public virtual void NextMenu()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xF22F4C", Offset = "0xF22F4C", VA = "0xF22F4C", Slot = "6")]
		public virtual void PrevMenu()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xF22F80", Offset = "0xF22F80", VA = "0xF22F80", Slot = "7")]
		public virtual void SetMenu(int idx)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xF22FAC", Offset = "0xF22FAC", VA = "0xF22FAC")]
		private static DebugMenuItem GetDebugMenuItemAttribute(MemberInfo memberInfo, Dictionary<MemberInfo, DebugMenuItem> dict)
		{
			return null;
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xF230FC", Offset = "0xF230FC", VA = "0xF230FC")]
		private static FieldInfo[] GetFieldInfosForType(Type type, Dictionary<Type, FieldInfo[]> dict, bool _static)
		{
			return null;
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xF231D4", Offset = "0xF231D4", VA = "0xF231D4")]
		private static MethodInfo[] GetMethodInfosForType(Type type, Dictionary<Type, MethodInfo[]> dict, bool _static)
		{
			return null;
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xF232AC", Offset = "0xF232AC", VA = "0xF232AC", Slot = "8")]
		public virtual void GetAllDebugValues()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xF24058", Offset = "0xF24058", VA = "0xF24058")]
		private SubMenu GetMenuAtPath(string subMenuPath)
		{
			return null;
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xF2427C", Offset = "0xF2427C", VA = "0xF2427C")]
		public void AddButton(string subMenuName, string buttonText, MonoBehaviour mb, voidDelegate fn)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xF24334", Offset = "0xF24334", VA = "0xF24334")]
		public void DrawGUI(float width)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xF22D0C", Offset = "0xF22D0C", VA = "0xF22D0C")]
		private void ValidateViewSettings()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xF24DBC", Offset = "0xF24DBC", VA = "0xF24DBC", Slot = "9")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xF24F48", Offset = "0xF24F48", VA = "0xF24F48")]
		private void WindowedGUI(int windowID)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xF2539C", Offset = "0xF2539C", VA = "0xF2539C")]
		public DebugMenu()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class DebugMenuUGUI : DebugMenu
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78E0", Offset = "0x8D78E0")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button tab;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugMenuUGUI <>4__this;

			[Token(Token = "0x600256D")]
			[Address(RVA = "0xE756CC", Offset = "0xE756CC", VA = "0xE756CC")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0xE756D4", Offset = "0xE756D4", VA = "0xE756D4")]
			internal void <GetAllDebugValues>b__0()
			{
			}
		}

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2B40", Offset = "0x8E2B40")]
		public Transform m_uguiroot;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text m_prevMenuLabel;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text m_nextMenuLabel;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform m_tabGroup;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_tabPrefab;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2B78", Offset = "0x8E2B78")]
		public GameObject m_submenuPrefab;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject m_sliderPrefab;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject m_togglePrefab;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject m_buttonPrefab;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_stringPrefab;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject m_readOnlyPrefab;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2BB0", Offset = "0x8E2BB0")]
		public float m_bgHue;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_bgSat;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2BE8", Offset = "0x8E2BE8")]
		public NVRHand m_toggleVRHand;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NVRButtons m_toggleVRViewNVR;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject m_toggleRoot;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_visibleAtStart;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool m_onlyToggleOff;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public NVRCanvasInput m_canvasInput;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<GameObject> m_subMenuObjs;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Button> m_tabs;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public ViewSettings m_ugui_viewSettings;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool m_debugMenuAvailable;

		[Token(Token = "0x170004CF")]
		public bool Shown
		{
			[Token(Token = "0x6002562")]
			[Address(RVA = "0xF2557C", Offset = "0xF2557C", VA = "0xF2557C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xF25598", Offset = "0xF25598", VA = "0xF25598", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xF2577C", Offset = "0xF2577C", VA = "0xF2577C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xF255A0", Offset = "0xF255A0", VA = "0xF255A0")]
		public void Toggle(bool on)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xF257B8", Offset = "0xF257B8", VA = "0xF257B8", Slot = "8")]
		public override void GetAllDebugValues()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xF25E68", Offset = "0xF25E68", VA = "0xF25E68")]
		private GameObject AddUGUIForSubMenu(SubMenu sm, Transform parent, float depth)
		{
			return null;
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xF2625C", Offset = "0xF2625C", VA = "0xF2625C")]
		private void AddUGUIForDebugMenuEntry(DebugMenuEntry dme, Transform parent)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xF26D44", Offset = "0xF26D44", VA = "0xF26D44", Slot = "5")]
		public override void NextMenu()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xF26D6C", Offset = "0xF26D6C", VA = "0xF26D6C", Slot = "6")]
		public override void PrevMenu()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xF26D94", Offset = "0xF26D94", VA = "0xF26D94", Slot = "7")]
		public override void SetMenu(int idx)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xF2705C", Offset = "0xF2705C", VA = "0xF2705C")]
		public DebugMenuUGUI()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class DebugMenuUGUI_Button : MonoBehaviour
	{
		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xF26C54", Offset = "0xF26C54", VA = "0xF26C54")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xF270D0", Offset = "0xF270D0", VA = "0xF270D0")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xF2714C", Offset = "0xF2714C", VA = "0xF2714C")]
		public DebugMenuUGUI_Button()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class DebugMenuUGUI_Slider : MonoBehaviour
	{
		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_headerLabel;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_valueLabel;

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xF26964", Offset = "0xF26964", VA = "0xF26964")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xF27154", Offset = "0xF27154", VA = "0xF27154")]
		private void OnValueChanged(float v)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xF27340", Offset = "0xF27340", VA = "0xF27340")]
		public DebugMenuUGUI_Slider()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class DebugMenuUGUI_String : MonoBehaviour
	{
		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_value;

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xF27348", Offset = "0xF27348", VA = "0xF27348")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xF27350", Offset = "0xF27350", VA = "0xF27350")]
		public DebugMenuUGUI_String()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class DebugMenuUGUI_Toggle : MonoBehaviour
	{
		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public DebugMenu.DebugMenuEntry m_debugMenuEntry;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_label;

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xF267D0", Offset = "0xF267D0", VA = "0xF267D0")]
		public void SetDebugMenuEntry(DebugMenu.DebugMenuEntry dme)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xF27358", Offset = "0xF27358", VA = "0xF27358")]
		private void OnToggle(bool b)
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xF27410", Offset = "0xF27410", VA = "0xF27410")]
		public DebugMenuUGUI_Toggle()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class HSVColour
	{
		[Token(Token = "0x600257A")]
		[Address(RVA = "0x12A4B6C", Offset = "0x12A4B6C", VA = "0x12A4B6C")]
		public static Color Rand()
		{
			return default(Color);
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x12A4B9C", Offset = "0x12A4B9C", VA = "0x12A4B9C")]
		public static Color HSV(float h, float s, float v, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x12A4CF8", Offset = "0x12A4CF8", VA = "0x12A4CF8")]
		public static void ColorToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x12A4E28", Offset = "0x12A4E28", VA = "0x12A4E28")]
		public HSVColour()
		{
		}
	}
}
namespace MoonMode.SaveGame
{
	[Token(Token = "0x2000599")]
	public interface ISaveGameReferableObject
	{
		[Token(Token = "0x170004D0")]
		string SaveGameReferenceGUID
		{
			[Token(Token = "0x600257E")]
			get;
			[Token(Token = "0x600257F")]
			set;
		}
	}
	[Token(Token = "0x200059A")]
	public interface ISaveableComponent
	{
		[Token(Token = "0x6002580")]
		void OnWillSaveToSaveGame();

		[Token(Token = "0x6002581")]
		void OnDidSaveToSaveGame();

		[Token(Token = "0x6002582")]
		void OnLoadedFromSaveGame();
	}
	[Token(Token = "0x200059B")]
	public class SaveGameObject : MonoBehaviour, ISaveGameReferableObject
	{
		[Token(Token = "0x200059C")]
		public enum InstantiateMethod
		{
			[Token(Token = "0x4001E13")]
			PreExisting,
			[Token(Token = "0x4001E14")]
			AssetDatabase,
			[Token(Token = "0x4001E15")]
			PrefabMember,
			[Token(Token = "0x4001E16")]
			Delegate
		}

		[Token(Token = "0x200059D")]
		public delegate GameObject InstantiationDelegate(string saveGameObjectGUID);

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78F0", Offset = "0x8D78F0")]
		private sealed class <All>d__9 : IEnumerable<SaveGameObject>, IEnumerable, IEnumerator<SaveGameObject>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private SaveGameObject <>2__current;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, SaveGameObject>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170004D2")]
			private SaveGameObject System.Collections.Generic.IEnumerator<MoonMode.SaveGame.SaveGameObject>.Current
			{
				[Token(Token = "0x600259B")]
				[Address(RVA = "0xEAB2EC", Offset = "0xEAB2EC", VA = "0xEAB2EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259D")]
				[Address(RVA = "0xEAB334", Offset = "0xEAB334", VA = "0xEAB334", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0xEAB06C", Offset = "0xEAB06C", VA = "0xEAB06C")]
			[DebuggerHidden]
			public <All>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0xEAB0A4", Offset = "0xEAB0A4", VA = "0xEAB0A4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0xEAB114", Offset = "0xEAB114", VA = "0xEAB114", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xEAB0C0", Offset = "0xEAB0C0", VA = "0xEAB0C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600259C")]
			[Address(RVA = "0xEAB2F4", Offset = "0xEAB2F4", VA = "0xEAB2F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600259E")]
			[Address(RVA = "0xEAB33C", Offset = "0xEAB33C", VA = "0xEAB33C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<SaveGameObject> System.Collections.Generic.IEnumerable<MoonMode.SaveGame.SaveGameObject>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600259F")]
			[Address(RVA = "0xEAB3D0", Offset = "0xEAB3D0", VA = "0xEAB3D0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E07")]
		private const uint saveVersionNumber = 1u;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, SaveGameObject> ms_saveGameObjectsByGUID;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, InstantiationDelegate> ms_instantiationDelegateByGUID;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2C70", Offset = "0x8E2C70")]
		public string[] m_tags;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2CA8", Offset = "0x8E2CA8")]
		public bool m_suppressSave;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2CE0", Offset = "0x8E2CE0")]
		public bool m_suppressSaveScale;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E2D18", Offset = "0x8E2D18")]
		public string m_objectGUID;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InstantiateMethod m_instantiationMethod;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_instantiationReferenceGUID;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SaveGameObject m_hostPrefabSaveGameObject;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_registeredObjectGUID;

		[Token(Token = "0x170004D1")]
		private string MoonMode.SaveGame.ISaveGameReferableObject.SaveGameReferenceGUID
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x11B21D4", Offset = "0x11B21D4", VA = "0x11B21D4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600258C")]
			[Address(RVA = "0x11B21DC", Offset = "0x11B21DC", VA = "0x11B21DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x11AB00C", Offset = "0x11AB00C", VA = "0x11AB00C")]
		public static void ClearStatics()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x11B1D44", Offset = "0x11B1D44", VA = "0x11B1D44")]
		public static void LoadAllFromPath(string savefilePath)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x11B1F10", Offset = "0x11B1F10", VA = "0x11B1F10")]
		public static void LoadAllFromResourcePath(string resourcePath)
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x11AC31C", Offset = "0x11AC31C", VA = "0x11AC31C")]
		public static void SaveAllToPath(string savefilePath, [Optional] string[] saveTags, [Optional] string[] ignoreTags)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x11B20DC", Offset = "0x11B20DC", VA = "0x11B20DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2A88", Offset = "0x8F2A88")]
		public static IEnumerable<SaveGameObject> All()
		{
			return null;
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x11AF564", Offset = "0x11AF564", VA = "0x11AF564")]
		public static SaveGameObject Find(string objectGUID)
		{
			return null;
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x11B2138", Offset = "0x11B2138", VA = "0x11B2138")]
		public static void RegisterInstantiationDelegate(string GUID, InstantiationDelegate instantiationDelegate)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x11AFC84", Offset = "0x11AFC84", VA = "0x11AFC84")]
		public static InstantiationDelegate FindInstantiationDelegate(string GUID)
		{
			return null;
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x11B21E4", Offset = "0x11B21E4", VA = "0x11B21E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x11B21E8", Offset = "0x11B21E8", VA = "0x11B21E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x11AFD68", Offset = "0x11AFD68", VA = "0x11AFD68")]
		public void Register()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x11B21EC", Offset = "0x11B21EC", VA = "0x11B21EC")]
		public void Unregister()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x11B2278", Offset = "0x11B2278", VA = "0x11B2278")]
		public SaveGameObject()
		{
		}
	}
	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7900", Offset = "0x8D7900")]
	public class SaveableAttribute : Attribute
	{
		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xED99A8", Offset = "0xED99A8", VA = "0xED99A8")]
		public SaveableAttribute()
		{
		}
	}
}
namespace MoonMode.SaveGame.Internal
{
	[Serializable]
	[Token(Token = "0x20005A0")]
	public struct GameData
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_gameDataGUID;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_saveVersion;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_gameDataVersion;
	}
	[Token(Token = "0x20005A1")]
	public struct GameDataObjectState
	{
		[Token(Token = "0x20005A2")]
		public struct ChildObject
		{
			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_childReferenceGUID;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_childObjectGUID;
		}

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_objectGUID;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_objectName;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_depth;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_prefabGUID;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_delegateGUID;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_objectParentGUID;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ChildObject[] m_childObjects;

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x11C4240", Offset = "0x11C4240", VA = "0x11C4240")]
		public static GameDataObjectState FromJSON(JSONNode node)
		{
			return default(GameDataObjectState);
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x11C4778", Offset = "0x11C4778", VA = "0x11C4778")]
		public JSONNode ToJSON()
		{
			return null;
		}
	}
	[Token(Token = "0x20005A3")]
	public class GenericComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x20005A4")]
		private struct MemberCaptureDetails
		{
			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_identifier;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public FieldInfo m_fieldInfo;
		}

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7914", Offset = "0x8D7914")]
		private sealed class <GenerateMemberCaptureDetails>d__2 : IEnumerable<MemberCaptureDetails>, IEnumerable, IEnumerator<MemberCaptureDetails>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MemberCaptureDetails <>2__current;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Type componentType;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Type <>3__componentType;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FieldInfo[] <>7__wrap1;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap2;

			[Token(Token = "0x170004D4")]
			private MemberCaptureDetails System.Collections.Generic.IEnumerator<MoonMode.SaveGame.Internal.GenericComponentStateCaptor.MemberCaptureDetails>.Current
			{
				[Token(Token = "0x60025AD")]
				[Address(RVA = "0xE7DB6C", Offset = "0xE7DB6C", VA = "0xE7DB6C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(MemberCaptureDetails);
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AF")]
				[Address(RVA = "0xE7DBB8", Offset = "0xE7DBB8", VA = "0xE7DBB8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xE7D980", Offset = "0xE7D980", VA = "0xE7D980")]
			[DebuggerHidden]
			public <GenerateMemberCaptureDetails>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xE7D9B8", Offset = "0xE7D9B8", VA = "0xE7D9B8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xE7D9BC", Offset = "0xE7D9BC", VA = "0xE7D9BC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xE7DB78", Offset = "0xE7DB78", VA = "0xE7DB78", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xE7DC18", Offset = "0xE7DC18", VA = "0xE7DC18", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MemberCaptureDetails> System.Collections.Generic.IEnumerable<MoonMode.SaveGame.Internal.GenericComponentStateCaptor.MemberCaptureDetails>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xE7DCC8", Offset = "0xE7DCC8", VA = "0xE7DCC8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MemberCaptureDetails[] m_memberCaptureDetails;

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x129A684", Offset = "0x129A684", VA = "0x129A684")]
		public static GenericComponentStateCaptor CaptorForType(Type componentType)
		{
			return null;
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x129AA34", Offset = "0x129AA34", VA = "0x129AA34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F2B58", Offset = "0x8F2B58")]
		private static IEnumerable<MemberCaptureDetails> GenerateMemberCaptureDetails(Type componentType)
		{
			return null;
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x129AAAC", Offset = "0x129AAAC", VA = "0x129AAAC")]
		private GenericComponentStateCaptor(MemberCaptureDetails[] memberCaptureDetails)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x129AAE0", Offset = "0x129AAE0", VA = "0x129AAE0", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component original, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x129B778", Offset = "0x129B778", VA = "0x129B778", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x129AEB8", Offset = "0x129AEB8", VA = "0x129AEB8")]
		private JSONNode ChangeValueAsJSON(object currentValue)
		{
			return null;
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x129BA14", Offset = "0x129BA14", VA = "0x129BA14")]
		private bool ApplyChangeFromJSON(ref object target, JSONNode jsonNode, Type targetType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005A6")]
	public interface IComponentStateCaptor
	{
		[Token(Token = "0x60025B2")]
		void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component original, UnityEngine.Component current);

		[Token(Token = "0x60025B3")]
		void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject);
	}
	[Token(Token = "0x20005A7")]
	public class RigidbodyComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x11A02C0", Offset = "0x11A02C0", VA = "0x11A02C0", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component _, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x11A0450", Offset = "0x11A0450", VA = "0x11A0450", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x11A07DC", Offset = "0x11A07DC", VA = "0x11A07DC")]
		public RigidbodyComponentStateCaptor()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class SaveGameContext : IDisposable
	{
		[Token(Token = "0x4001E31")]
		private const uint SaveVersion = 2u;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_saveGUID;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_resourcePath;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_filePath;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DateTime m_saveTime;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint m_saveVersion;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint m_gameDataVersion;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StateCaptorProvider m_stateCaptorProvider;

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x11AD1C4", Offset = "0x11AD1C4", VA = "0x11AD1C4")]
		public static SaveGameContext LoadGameFromFile(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x11AD3BC", Offset = "0x11AD3BC", VA = "0x11AD3BC")]
		public static SaveGameContext LoadGameFromResource(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x11AD4A8", Offset = "0x11AD4A8", VA = "0x11AD4A8")]
		public static SaveGameContext SaveGame(string path, uint gameDataVersion)
		{
			return null;
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x11AD2B0", Offset = "0x11AD2B0", VA = "0x11AD2B0")]
		private SaveGameContext(string saveGUID, string resourcePath, string filePath, uint saveVersion, uint gameDataVersion)
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x11AD594", Offset = "0x11AD594", VA = "0x11AD594")]
		public void LoadObjects()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x11AFAE0", Offset = "0x11AFAE0", VA = "0x11AFAE0")]
		private static bool InstantiateGameObjectFromPrefab(GameObject prefab, ref GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x11AF648", Offset = "0x11AF648", VA = "0x11AF648")]
		private static bool GetPrefabForGameObjectState(GameDataObjectState gameObjectStateCapture, out GameObject prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x11AFF54", Offset = "0x11AFF54", VA = "0x11AFF54")]
		public void SaveObjects(IEnumerable<SaveGameObject> saveableObjects, string[] saveTags, string[] ignoreTags)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x11B1AC4", Offset = "0x11B1AC4", VA = "0x11B1AC4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	internal static class SaveGameObjectExt
	{
		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x11B1980", Offset = "0x11B1980", VA = "0x11B1980")]
		public static bool ShouldSaveForTags(this SaveGameObject saveGameObject, string[] saveTags, string[] ignoreTags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005AA")]
	public class SaveableObjectDatabase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005AB")]
		public struct SaveableObjectItem
		{
			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_guid;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Object m_object;
		}

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string databaseResourceName;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SaveableObjectDatabase ms_defaultDatabase;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveableObjectItem[] m_items;

		[NonSerialized]
		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, UnityEngine.Object> m_fastLookup;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, string> m_remaps;

		[Token(Token = "0x170004D6")]
		public static SaveableObjectDatabase Default
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xED9504", Offset = "0xED9504", VA = "0xED9504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xED9BAC", Offset = "0xED9BAC", VA = "0xED9BAC")]
		public static void ResetDefault()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xED99B0", Offset = "0xED99B0", VA = "0xED99B0")]
		public void AddRemaps()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xED9640", Offset = "0xED9640", VA = "0xED9640")]
		public UnityEngine.Object FindObjectForGUID(string GUID)
		{
			return null;
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xED9C14", Offset = "0xED9C14", VA = "0xED9C14")]
		public UnityEngine.Object FindObjectForObjectName(string objectName, out string guid)
		{
			return null;
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xED9D50", Offset = "0xED9D50", VA = "0xED9D50")]
		public SaveableObjectDatabase()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7934", Offset = "0x8D7934")]
	public class SaveableObjectDatabaseRemapping : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005AD")]
		public struct SaveableObjectItemRemap
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_oldGuid;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_newGuid;
		}

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string databaseRemapResourceName;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SaveableObjectItemRemap> m_remaps;

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0xED9DBC", Offset = "0xED9DBC", VA = "0xED9DBC")]
		public SaveableObjectDatabaseRemapping()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class StateCaptorProvider
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<Type> m_ignoredTypes;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, IComponentStateCaptor> m_stateCaptorByType;

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x11F1004", Offset = "0x11F1004", VA = "0x11F1004")]
		public StateCaptorProvider()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x11F10DC", Offset = "0x11F10DC", VA = "0x11F10DC")]
		private void CreateUnityInternalCaptors()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x11F1238", Offset = "0x11F1238", VA = "0x11F1238")]
		public IComponentStateCaptor GetComponentStateCaptor(Type componentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AF")]
	public class TransformComponentStateCaptor : IComponentStateCaptor
	{
		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x10BC704", Offset = "0x10BC704", VA = "0x10BC704", Slot = "4")]
		public void FindAndPopulateDataChangeJSON(SaveGameObject saveGameObject, ref JSONObject jsonObject, UnityEngine.Component _, UnityEngine.Component current)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x10BC914", Offset = "0x10BC914", VA = "0x10BC914", Slot = "5")]
		public void ApplyChangesFromJSON(SaveGameObject saveGameObject, UnityEngine.Component component, JSONObject jsonObject)
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x10BCD28", Offset = "0x10BCD28", VA = "0x10BCD28")]
		public TransformComponentStateCaptor()
		{
		}
	}
}
namespace ArabicSupport
{
	[Token(Token = "0x20005B0")]
	public class ArabicFixer
	{
		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x14A00FC", Offset = "0x14A00FC", VA = "0x14A00FC")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x14A0398", Offset = "0x14A0398", VA = "0x14A0398")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x14A0108", Offset = "0x14A0108", VA = "0x14A0108")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x14A1370", Offset = "0x14A1370", VA = "0x14A1370")]
		public ArabicFixer()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20005B1")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7954", Offset = "0x8D7954")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x1007924", Offset = "0x1007924", VA = "0x1007924")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x100792C", Offset = "0x100792C", VA = "0x100792C")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x1007948", Offset = "0x1007948", VA = "0x1007948")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7964", Offset = "0x8D7964")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x1007964", Offset = "0x1007964", VA = "0x1007964")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x100796C", Offset = "0x100796C", VA = "0x100796C")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60025E8")]
			[Address(RVA = "0x1007988", Offset = "0x1007988", VA = "0x1007988")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7974", Offset = "0x8D7974")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x10079A4", Offset = "0x10079A4", VA = "0x10079A4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0x10079AC", Offset = "0x10079AC", VA = "0x10079AC")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x10079EC", Offset = "0x10079EC", VA = "0x10079EC")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xF1901C", Offset = "0xF1901C", VA = "0xF1901C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xF191EC", Offset = "0xF191EC", VA = "0xF191EC")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xF19394", Offset = "0xF19394", VA = "0xF19394")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xF19550", Offset = "0xF19550", VA = "0xF19550")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xF195C4", Offset = "0xF195C4", VA = "0xF195C4")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xF19638", Offset = "0xF19638", VA = "0xF19638")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xF1969C", Offset = "0xF1969C", VA = "0xF1969C")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xF19720", Offset = "0xF19720", VA = "0xF19720")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xF19784", Offset = "0xF19784", VA = "0xF19784")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xF197E8", Offset = "0xF197E8", VA = "0xF197E8")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xF1984C", Offset = "0xF1984C", VA = "0xF1984C")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xF198B0", Offset = "0xF198B0", VA = "0xF198B0")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xF1991C", Offset = "0xF1991C", VA = "0xF1991C")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xF19984", Offset = "0xF19984", VA = "0xF19984")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xF199E8", Offset = "0xF199E8", VA = "0xF199E8")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005B5")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7994", Offset = "0x8D7994")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60025F7")]
			[Address(RVA = "0x1007A10", Offset = "0x1007A10", VA = "0x1007A10")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60025F8")]
			[Address(RVA = "0x1007A18", Offset = "0x1007A18", VA = "0x1007A18")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79A4", Offset = "0x8D79A4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0x1007B58", Offset = "0x1007B58", VA = "0x1007B58")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025FA")]
			[Address(RVA = "0x1007B60", Offset = "0x1007B60", VA = "0x1007B60")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79B4", Offset = "0x8D79B4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60025FB")]
			[Address(RVA = "0x1007B7C", Offset = "0x1007B7C", VA = "0x1007B7C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60025FC")]
			[Address(RVA = "0x1007B84", Offset = "0x1007B84", VA = "0x1007B84")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79C4", Offset = "0x8D79C4")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60025FD")]
			[Address(RVA = "0x1007BA0", Offset = "0x1007BA0", VA = "0x1007BA0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x1007BA8", Offset = "0x1007BA8", VA = "0x1007BA8")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79D4", Offset = "0x8D79D4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60025FF")]
			[Address(RVA = "0x1007BC4", Offset = "0x1007BC4", VA = "0x1007BC4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002600")]
			[Address(RVA = "0x1007BCC", Offset = "0x1007BCC", VA = "0x1007BCC")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79E4", Offset = "0x8D79E4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002601")]
			[Address(RVA = "0x1007BE8", Offset = "0x1007BE8", VA = "0x1007BE8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002602")]
			[Address(RVA = "0x1007BF0", Offset = "0x1007BF0", VA = "0x1007BF0")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D79F4", Offset = "0x8D79F4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x6002603")]
			[Address(RVA = "0x1007C0C", Offset = "0x1007C0C", VA = "0x1007C0C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0x1007C14", Offset = "0x1007C14", VA = "0x1007C14")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0x1007C30", Offset = "0x1007C30", VA = "0x1007C30")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x1007C64", Offset = "0x1007C64", VA = "0x1007C64")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0x1007C80", Offset = "0x1007C80", VA = "0x1007C80")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0x1007C9C", Offset = "0x1007C9C", VA = "0x1007C9C")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A04", Offset = "0x8D7A04")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002609")]
			[Address(RVA = "0xE7215C", Offset = "0xE7215C", VA = "0xE7215C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600260A")]
			[Address(RVA = "0xE72164", Offset = "0xE72164", VA = "0xE72164")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A14", Offset = "0x8D7A14")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x600260B")]
			[Address(RVA = "0xE72180", Offset = "0xE72180", VA = "0xE72180")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0xE72188", Offset = "0xE72188", VA = "0xE72188")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0xE721A4", Offset = "0xE721A4", VA = "0xE721A4")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A24", Offset = "0x8D7A24")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600260E")]
			[Address(RVA = "0xE722A4", Offset = "0xE722A4", VA = "0xE722A4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0xE722AC", Offset = "0xE722AC", VA = "0xE722AC")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A34", Offset = "0x8D7A34")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002610")]
			[Address(RVA = "0x1007A34", Offset = "0x1007A34", VA = "0x1007A34")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002611")]
			[Address(RVA = "0x1007A3C", Offset = "0x1007A3C", VA = "0x1007A3C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0x1007A58", Offset = "0x1007A58", VA = "0x1007A58")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xF19A4C", Offset = "0xF19A4C", VA = "0xF19A4C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xF19C28", Offset = "0xF19C28", VA = "0xF19C28")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xF19DF8", Offset = "0xF19DF8", VA = "0xF19DF8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xF19FC8", Offset = "0xF19FC8", VA = "0xF19FC8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xF1A198", Offset = "0xF1A198", VA = "0xF1A198")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xF1A370", Offset = "0xF1A370", VA = "0xF1A370")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xF1A5C4", Offset = "0xF1A5C4", VA = "0xF1A5C4")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xF1AAF8", Offset = "0xF1AAF8", VA = "0xF1AAF8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xF1AD74", Offset = "0xF1AD74", VA = "0xF1AD74")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xF1B010", Offset = "0xF1B010", VA = "0xF1B010")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xF1B200", Offset = "0xF1B200", VA = "0xF1B200")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20005C1")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20005C2")]
		public static class Utils
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xE73204", Offset = "0xE73204", VA = "0xE73204")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A54", Offset = "0x8D7A54")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.CanvasGroup target;

			[Token(Token = "0x600263C")]
			[Address(RVA = "0xE722C8", Offset = "0xE722C8", VA = "0xE722C8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0xE722D0", Offset = "0xE722D0", VA = "0xE722D0")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0xE722EC", Offset = "0xE722EC", VA = "0xE722EC")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A64", Offset = "0x8D7A64")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600263F")]
			[Address(RVA = "0xE72590", Offset = "0xE72590", VA = "0xE72590")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xE72598", Offset = "0xE72598", VA = "0xE72598")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xE725BC", Offset = "0xE725BC", VA = "0xE725BC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A74", Offset = "0x8D7A74")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xE729A4", Offset = "0xE729A4", VA = "0xE729A4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0xE729AC", Offset = "0xE729AC", VA = "0xE729AC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xE729D0", Offset = "0xE729D0", VA = "0xE729D0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A84", Offset = "0x8D7A84")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002645")]
			[Address(RVA = "0xE72ECC", Offset = "0xE72ECC", VA = "0xE72ECC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002646")]
			[Address(RVA = "0xE72ED4", Offset = "0xE72ED4", VA = "0xE72ED4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002647")]
			[Address(RVA = "0xE72EF8", Offset = "0xE72EF8", VA = "0xE72EF8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A94", Offset = "0x8D7A94")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002648")]
			[Address(RVA = "0xE72F1C", Offset = "0xE72F1C", VA = "0xE72F1C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002649")]
			[Address(RVA = "0xE72F24", Offset = "0xE72F24", VA = "0xE72F24")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0xE72F48", Offset = "0xE72F48", VA = "0xE72F48")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AA4", Offset = "0x8D7AA4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x600264B")]
			[Address(RVA = "0xE72F6C", Offset = "0xE72F6C", VA = "0xE72F6C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0xE72F74", Offset = "0xE72F74", VA = "0xE72F74")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0xE72F90", Offset = "0xE72F90", VA = "0xE72F90")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AB4", Offset = "0x8D7AB4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600264E")]
			[Address(RVA = "0xE72FAC", Offset = "0xE72FAC", VA = "0xE72FAC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600264F")]
			[Address(RVA = "0xE72FB4", Offset = "0xE72FB4", VA = "0xE72FB4")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002650")]
			[Address(RVA = "0xE73018", Offset = "0xE73018", VA = "0xE73018")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AC4", Offset = "0x8D7AC4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002651")]
			[Address(RVA = "0xE73074", Offset = "0xE73074", VA = "0xE73074")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xE7307C", Offset = "0xE7307C", VA = "0xE7307C")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002653")]
			[Address(RVA = "0xE730E0", Offset = "0xE730E0", VA = "0xE730E0")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AD4", Offset = "0x8D7AD4")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xE7313C", Offset = "0xE7313C", VA = "0xE7313C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0xE73144", Offset = "0xE73144", VA = "0xE73144")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xE731A8", Offset = "0xE731A8", VA = "0xE731A8")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AE4", Offset = "0x8D7AE4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xE72308", Offset = "0xE72308", VA = "0xE72308")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xE72310", Offset = "0xE72310", VA = "0xE72310")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002659")]
			[Address(RVA = "0xE72330", Offset = "0xE72330", VA = "0xE72330")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AF4", Offset = "0x8D7AF4")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xE7234C", Offset = "0xE7234C", VA = "0xE7234C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0xE72354", Offset = "0xE72354", VA = "0xE72354")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600265C")]
			[Address(RVA = "0xE72374", Offset = "0xE72374", VA = "0xE72374")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B04", Offset = "0x8D7B04")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600265D")]
			[Address(RVA = "0xE72390", Offset = "0xE72390", VA = "0xE72390")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0xE72398", Offset = "0xE72398", VA = "0xE72398")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0xE723B4", Offset = "0xE723B4", VA = "0xE723B4")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B14", Offset = "0x8D7B14")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002660")]
			[Address(RVA = "0xE723D0", Offset = "0xE723D0", VA = "0xE723D0")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0xE723D8", Offset = "0xE723D8", VA = "0xE723D8")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0xE723F4", Offset = "0xE723F4", VA = "0xE723F4")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B24", Offset = "0x8D7B24")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002663")]
			[Address(RVA = "0xE72410", Offset = "0xE72410", VA = "0xE72410")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0xE72418", Offset = "0xE72418", VA = "0xE72418")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0xE72434", Offset = "0xE72434", VA = "0xE72434")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B34", Offset = "0x8D7B34")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002666")]
			[Address(RVA = "0xE72450", Offset = "0xE72450", VA = "0xE72450")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0xE72458", Offset = "0xE72458", VA = "0xE72458")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xE72474", Offset = "0xE72474", VA = "0xE72474")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B44", Offset = "0x8D7B44")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xE72490", Offset = "0xE72490", VA = "0xE72490")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0xE72498", Offset = "0xE72498", VA = "0xE72498")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0xE724B4", Offset = "0xE724B4", VA = "0xE724B4")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B54", Offset = "0x8D7B54")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600266C")]
			[Address(RVA = "0xE724D0", Offset = "0xE724D0", VA = "0xE724D0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0xE724D8", Offset = "0xE724D8", VA = "0xE724D8")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xE724F4", Offset = "0xE724F4", VA = "0xE724F4")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B64", Offset = "0x8D7B64")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600266F")]
			[Address(RVA = "0xE72510", Offset = "0xE72510", VA = "0xE72510")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xE72518", Offset = "0xE72518", VA = "0xE72518")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0xE72534", Offset = "0xE72534", VA = "0xE72534")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B74", Offset = "0x8D7B74")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xE72550", Offset = "0xE72550", VA = "0xE72550")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0xE72558", Offset = "0xE72558", VA = "0xE72558")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xE72574", Offset = "0xE72574", VA = "0xE72574")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B84", Offset = "0x8D7B84")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002675")]
			[Address(RVA = "0xE725E0", Offset = "0xE725E0", VA = "0xE725E0")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0xE725E8", Offset = "0xE725E8", VA = "0xE725E8")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xE72604", Offset = "0xE72604", VA = "0xE72604")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B94", Offset = "0x8D7B94")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002678")]
			[Address(RVA = "0xE72620", Offset = "0xE72620", VA = "0xE72620")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xE72628", Offset = "0xE72628", VA = "0xE72628")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xE72644", Offset = "0xE72644", VA = "0xE72644")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BA4", Offset = "0x8D7BA4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600267B")]
			[Address(RVA = "0xE72660", Offset = "0xE72660", VA = "0xE72660")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xE72668", Offset = "0xE72668", VA = "0xE72668")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xE72684", Offset = "0xE72684", VA = "0xE72684")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BB4", Offset = "0x8D7BB4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600267E")]
			[Address(RVA = "0xE726A0", Offset = "0xE726A0", VA = "0xE726A0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0xE726A8", Offset = "0xE726A8", VA = "0xE726A8")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xE726C4", Offset = "0xE726C4", VA = "0xE726C4")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BC4", Offset = "0x8D7BC4")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002681")]
			[Address(RVA = "0xE726E0", Offset = "0xE726E0", VA = "0xE726E0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002682")]
			[Address(RVA = "0xE726E8", Offset = "0xE726E8", VA = "0xE726E8")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0xE72704", Offset = "0xE72704", VA = "0xE72704")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BD4", Offset = "0x8D7BD4")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002684")]
			[Address(RVA = "0xE72720", Offset = "0xE72720", VA = "0xE72720")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xE72728", Offset = "0xE72728", VA = "0xE72728")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xE72744", Offset = "0xE72744", VA = "0xE72744")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BE4", Offset = "0x8D7BE4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002687")]
			[Address(RVA = "0xE72760", Offset = "0xE72760", VA = "0xE72760")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0xE72768", Offset = "0xE72768", VA = "0xE72768")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002689")]
			[Address(RVA = "0xE72790", Offset = "0xE72790", VA = "0xE72790")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7BF4", Offset = "0x8D7BF4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600268A")]
			[Address(RVA = "0xE727AC", Offset = "0xE727AC", VA = "0xE727AC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600268B")]
			[Address(RVA = "0xE727B4", Offset = "0xE727B4", VA = "0xE727B4")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0xE727DC", Offset = "0xE727DC", VA = "0xE727DC")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C04", Offset = "0x8D7C04")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600268D")]
			[Address(RVA = "0xE727F8", Offset = "0xE727F8", VA = "0xE727F8")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600268E")]
			[Address(RVA = "0xE72800", Offset = "0xE72800", VA = "0xE72800")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0xE72828", Offset = "0xE72828", VA = "0xE72828")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C14", Offset = "0x8D7C14")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xE72844", Offset = "0xE72844", VA = "0xE72844")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002691")]
			[Address(RVA = "0xE7284C", Offset = "0xE7284C", VA = "0xE7284C")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002692")]
			[Address(RVA = "0xE72868", Offset = "0xE72868", VA = "0xE72868")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0xE72884", Offset = "0xE72884", VA = "0xE72884")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6002694")]
			[Address(RVA = "0xE728B8", Offset = "0xE728B8", VA = "0xE728B8")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xE728D4", Offset = "0xE728D4", VA = "0xE728D4")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xE728F0", Offset = "0xE728F0", VA = "0xE728F0")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C24", Offset = "0x8D7C24")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002697")]
			[Address(RVA = "0xE729F4", Offset = "0xE729F4", VA = "0xE729F4")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002698")]
			[Address(RVA = "0xE729FC", Offset = "0xE729FC", VA = "0xE729FC")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xE72A50", Offset = "0xE72A50", VA = "0xE72A50")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C34", Offset = "0x8D7C34")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600269A")]
			[Address(RVA = "0xE72A9C", Offset = "0xE72A9C", VA = "0xE72A9C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0xE72AA4", Offset = "0xE72AA4", VA = "0xE72AA4")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600269C")]
			[Address(RVA = "0xE72AC0", Offset = "0xE72AC0", VA = "0xE72AC0")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C44", Offset = "0x8D7C44")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xE72ADC", Offset = "0xE72ADC", VA = "0xE72ADC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0xE72AE4", Offset = "0xE72AE4", VA = "0xE72AE4")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0xE72B00", Offset = "0xE72B00", VA = "0xE72B00")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C54", Offset = "0x8D7C54")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xE72B1C", Offset = "0xE72B1C", VA = "0xE72B1C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xE72B24", Offset = "0xE72B24", VA = "0xE72B24")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xE72B48", Offset = "0xE72B48", VA = "0xE72B48")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C64", Offset = "0x8D7C64")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026A3")]
			[Address(RVA = "0xE72B6C", Offset = "0xE72B6C", VA = "0xE72B6C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xE72B74", Offset = "0xE72B74", VA = "0xE72B74")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xE72B98", Offset = "0xE72B98", VA = "0xE72B98")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C74", Offset = "0x8D7C74")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xE72BBC", Offset = "0xE72BBC", VA = "0xE72BBC")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xE72BC4", Offset = "0xE72BC4", VA = "0xE72BC4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xE72BE8", Offset = "0xE72BE8", VA = "0xE72BE8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C84", Offset = "0x8D7C84")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xE72C0C", Offset = "0xE72C0C", VA = "0xE72C0C")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xE72C14", Offset = "0xE72C14", VA = "0xE72C14")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xE72C38", Offset = "0xE72C38", VA = "0xE72C38")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7C94", Offset = "0x8D7C94")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xE72C5C", Offset = "0xE72C5C", VA = "0xE72C5C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xE72C64", Offset = "0xE72C64", VA = "0xE72C64")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xE72C70", Offset = "0xE72C70", VA = "0xE72C70")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CA4", Offset = "0x8D7CA4")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xE72D2C", Offset = "0xE72D2C", VA = "0xE72D2C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xE72D34", Offset = "0xE72D34", VA = "0xE72D34")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xE72D40", Offset = "0xE72D40", VA = "0xE72D40")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CB4", Offset = "0x8D7CB4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xE72DFC", Offset = "0xE72DFC", VA = "0xE72DFC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xE72E04", Offset = "0xE72E04", VA = "0xE72E04")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xE72E10", Offset = "0xE72E10", VA = "0xE72E10")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xF1B410", Offset = "0xF1B410", VA = "0xF1B410")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this UnityEngine.CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xF1B5B8", Offset = "0xF1B5B8", VA = "0xF1B5B8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xF1B788", Offset = "0xF1B788", VA = "0xF1B788")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xF1B930", Offset = "0xF1B930", VA = "0xF1B930")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xF1BB00", Offset = "0xF1BB00", VA = "0xF1BB00")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xF1BCA8", Offset = "0xF1BCA8", VA = "0xF1BCA8")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xF1BE74", Offset = "0xF1BE74", VA = "0xF1BE74")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xF1C068", Offset = "0xF1C068", VA = "0xF1C068")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xF1C238", Offset = "0xF1C238", VA = "0xF1C238")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xF1C408", Offset = "0xF1C408", VA = "0xF1C408")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xF1C5D8", Offset = "0xF1C5D8", VA = "0xF1C5D8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xF1C7A8", Offset = "0xF1C7A8", VA = "0xF1C7A8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xF1C950", Offset = "0xF1C950", VA = "0xF1C950")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xF1CB08", Offset = "0xF1CB08", VA = "0xF1CB08")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xF1CCD8", Offset = "0xF1CCD8", VA = "0xF1CCD8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xF1CEA0", Offset = "0xF1CEA0", VA = "0xF1CEA0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xF1D068", Offset = "0xF1D068", VA = "0xF1D068")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xF1D240", Offset = "0xF1D240", VA = "0xF1D240")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xF1D40C", Offset = "0xF1D40C", VA = "0xF1D40C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xF1D5D8", Offset = "0xF1D5D8", VA = "0xF1D5D8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xF1D7A4", Offset = "0xF1D7A4", VA = "0xF1D7A4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xF1D974", Offset = "0xF1D974", VA = "0xF1D974")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xF1DB44", Offset = "0xF1DB44", VA = "0xF1DB44")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xF1DCFC", Offset = "0xF1DCFC", VA = "0xF1DCFC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xF1DEB8", Offset = "0xF1DEB8", VA = "0xF1DEB8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xF1E074", Offset = "0xF1E074", VA = "0xF1E074")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xF1E244", Offset = "0xF1E244", VA = "0xF1E244")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xF1E41C", Offset = "0xF1E41C", VA = "0xF1E41C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xF1E61C", Offset = "0xF1E61C", VA = "0xF1E61C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xF1E824", Offset = "0xF1E824", VA = "0xF1E824")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xF1EC78", Offset = "0xF1EC78", VA = "0xF1EC78")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xF1EE3C", Offset = "0xF1EE3C", VA = "0xF1EE3C")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xF1EFF0", Offset = "0xF1EFF0", VA = "0xF1EFF0")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xF1F1A4", Offset = "0xF1F1A4", VA = "0xF1F1A4")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xF1F364", Offset = "0xF1F364", VA = "0xF1F364")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xF1F534", Offset = "0xF1F534", VA = "0xF1F534")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xF1F6DC", Offset = "0xF1F6DC", VA = "0xF1F6DC")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xF1F930", Offset = "0xF1F930", VA = "0xF1F930")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xF1FB94", Offset = "0xF1FB94", VA = "0xF1FB94")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xF1FDF8", Offset = "0xF1FDF8", VA = "0xF1FDF8")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005EA")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CD4", Offset = "0x8D7CD4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xE73448", Offset = "0xE73448", VA = "0xE73448")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xE73450", Offset = "0xE73450", VA = "0xE73450")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xE73474", Offset = "0xE73474", VA = "0xE73474")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7CE4", Offset = "0x8D7CE4")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xE73498", Offset = "0xE73498", VA = "0xE73498")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xE734A0", Offset = "0xE734A0", VA = "0xE734A0")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xE734C4", Offset = "0xE734C4", VA = "0xE734C4")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xF2005C", Offset = "0xF2005C", VA = "0xF2005C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xF2024C", Offset = "0xF2024C", VA = "0xF2024C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xF20450", Offset = "0xF20450", VA = "0xF20450")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xF20510", Offset = "0xF20510", VA = "0xF20510")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xF205D0", Offset = "0xF205D0", VA = "0xF205D0")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xF20690", Offset = "0xF20690", VA = "0xF20690")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xF20760", Offset = "0xF20760", VA = "0xF20760")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xF20830", Offset = "0xF20830", VA = "0xF20830")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xF208F0", Offset = "0xF208F0", VA = "0xF208F0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xF20B18", Offset = "0xF20B18", VA = "0xF20B18")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20005ED")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20005EE")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004D7")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026C5")]
				[Address(RVA = "0x100762C", Offset = "0x100762C", VA = "0x100762C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x1007660", Offset = "0x1007660", VA = "0x1007660")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005EF")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004D8")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026C7")]
				[Address(RVA = "0x1007824", Offset = "0x1007824", VA = "0x1007824", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x1007888", Offset = "0x1007888", VA = "0x1007888")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005F0")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004D9")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026C9")]
				[Address(RVA = "0x1007728", Offset = "0x1007728", VA = "0x1007728", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x1007744", Offset = "0x1007744", VA = "0x1007744")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005F1")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170004DA")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026CB")]
				[Address(RVA = "0x1007694", Offset = "0x1007694", VA = "0x1007694", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x10076E0", Offset = "0x10076E0", VA = "0x10076E0")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20005F2")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170004DB")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026CD")]
				[Address(RVA = "0x1007778", Offset = "0x1007778", VA = "0x1007778", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x10077DC", Offset = "0x10077DC", VA = "0x10077DC")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20005F3")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170004DC")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0x10078BC", Offset = "0x10078BC", VA = "0x10078BC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x10078F0", Offset = "0x10078F0", VA = "0x10078F0")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20005F4")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20005F5")]
		public static class Physics
		{
			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xE734E8", Offset = "0xE734E8", VA = "0xE734E8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xE735EC", Offset = "0xE735EC", VA = "0xE735EC")]
			public static bool HasRigidbody2D(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xE735F4", Offset = "0xE735F4", VA = "0xE735F4")]
			[Preserve]
			public static bool HasRigidbody(UnityEngine.Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xE7368C", Offset = "0xE7368C", VA = "0xE7368C")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xF20D40", Offset = "0xF20D40", VA = "0xF20D40")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xF20E04", Offset = "0xF20E04", VA = "0xF20E04")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Normal.UI
{
	[Token(Token = "0x20005F6")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x20005F7")]
		public delegate void KeyPressedDelegate(Keyboard keyboard, string keyPress);

		[Token(Token = "0x20005F8")]
		public enum Layout
		{
			[Token(Token = "0x4001EA2")]
			Letters,
			[Token(Token = "0x4001EA3")]
			Numbers
		}

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _letters;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _numbers;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private KeyboardKey _layoutSwapKey;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private KeyboardMallet[] _mallets;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeyboardKey[] _keys;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _shift;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Layout _layout;

		[Token(Token = "0x170004DD")]
		public bool shift
		{
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x115C308", Offset = "0x115C308", VA = "0x115C308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x115C310", Offset = "0x115C310", VA = "0x115C310")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public Layout layout
		{
			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x115C3CC", Offset = "0x115C3CC", VA = "0x115C3CC")]
			get
			{
				return default(Layout);
			}
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x115C3D4", Offset = "0x115C3D4", VA = "0x115C3D4")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event KeyPressedDelegate keyPressed
		{
			[Token(Token = "0x60026D7")]
			[Address(RVA = "0x115C1C8", Offset = "0x115C1C8", VA = "0x115C1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3138", Offset = "0x8F3138")]
			add
			{
			}
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x115C268", Offset = "0x115C268", VA = "0x115C268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3148", Offset = "0x8F3148")]
			remove
			{
			}
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x115C4F8", Offset = "0x115C4F8", VA = "0x115C4F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x115C63C", Offset = "0x115C63C", VA = "0x115C63C")]
		public void _MalletStruckKeyboardKey(KeyboardMallet mallet, KeyboardKey key)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x115C318", Offset = "0x115C318", VA = "0x115C318")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x115C3D8", Offset = "0x115C3D8", VA = "0x115C3D8")]
		private void SetLayout(Layout layout)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x115CAC8", Offset = "0x115CAC8", VA = "0x115CAC8")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class KeyboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text _text;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Keyboard _keyboard;

		[Token(Token = "0x170004DF")]
		public Keyboard keyboard
		{
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x115D5B8", Offset = "0x115D5B8", VA = "0x115D5B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x115D5C0", Offset = "0x115D5C0", VA = "0x115D5C0")]
			set
			{
			}
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x115D5B0", Offset = "0x115D5B0", VA = "0x115D5B0")]
		public void SetText(TMP_Text t)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x115D67C", Offset = "0x115D67C", VA = "0x115D67C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x115D764", Offset = "0x115D764", VA = "0x115D764")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x115D5C4", Offset = "0x115D5C4", VA = "0x115D5C4")]
		private void SetKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x115D684", Offset = "0x115D684", VA = "0x115D684")]
		private void StartObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x115D76C", Offset = "0x115D76C", VA = "0x115D76C")]
		private void StopObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x115D84C", Offset = "0x115D84C", VA = "0x115D84C")]
		private void KeyPressed(Keyboard keyboard, string keyPress)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x115D91C", Offset = "0x115D91C", VA = "0x115D91C")]
		public KeyboardDisplay()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	[ExecuteInEditMode]
	public class KeyboardKey : MonoBehaviour
	{
		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string character;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayCharacter;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shiftCharacter;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shiftDisplayCharacter;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _shift;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _geometry;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _position;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _targetPosition;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent _events;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x170004E0")]
		public bool shift
		{
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x115D924", Offset = "0x115D924", VA = "0x115D924")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x115C9FC", Offset = "0x115C9FC", VA = "0x115C9FC")]
			set
			{
			}
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x115D950", Offset = "0x115D950", VA = "0x115D950")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x115DA04", Offset = "0x115DA04", VA = "0x115DA04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x115DA90", Offset = "0x115DA90", VA = "0x115DA90")]
		public bool IsMalletHeadInFrontOfKey(KeyboardMallet mallet)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x115C844", Offset = "0x115C844", VA = "0x115C844")]
		public void KeyPressed()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x115D92C", Offset = "0x115D92C", VA = "0x115D92C")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x115DAD8", Offset = "0x115DAD8", VA = "0x115DAD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x115CA20", Offset = "0x115CA20", VA = "0x115CA20")]
		public void RefreshDisplayCharacter()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x115DB48", Offset = "0x115DB48", VA = "0x115DB48")]
		private string GetDisplayCharacter()
		{
			return null;
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x115C970", Offset = "0x115C970", VA = "0x115C970")]
		public string GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x115DC20", Offset = "0x115DC20", VA = "0x115DC20")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	[ExecuteInEditMode]
	public class KeyboardKeyMesh : MonoBehaviour
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _sharedMesh;

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x115DC7C", Offset = "0x115DC7C", VA = "0x115DC7C")]
		private static Mesh CreateMesh()
		{
			return null;
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x115E150", Offset = "0x115E150", VA = "0x115E150")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x115E248", Offset = "0x115E248", VA = "0x115E248")]
		public KeyboardKeyMesh()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D7D14", Offset = "0x8D7D14")]
	public class KeyboardMallet : MonoBehaviour
	{
		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MoveAndScale _moveAndScale;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _head;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 malletHeadPosition;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _newMalletHeadPosition;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x115E250", Offset = "0x115E250", VA = "0x115E250")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x115E328", Offset = "0x115E328", VA = "0x115E328")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x115E510", Offset = "0x115E510", VA = "0x115E510")]
		private void Update()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x115E50C", Offset = "0x115E50C", VA = "0x115E50C")]
		private void TriggerHapticPulse()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x115E564", Offset = "0x115E564", VA = "0x115E564")]
		public KeyboardMallet()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class KeyboardMalletHandle : MonoBehaviour
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float worldZScale;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x115E56C", Offset = "0x115E56C", VA = "0x115E56C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x115E650", Offset = "0x115E650", VA = "0x115E650")]
		public KeyboardMalletHandle()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class MoveAndScale : MonoBehaviour
	{
		[Token(Token = "0x20005FF")]
		public enum State
		{
			[Token(Token = "0x4001EC7")]
			Idle,
			[Token(Token = "0x4001EC8")]
			Move,
			[Token(Token = "0x4001EC9")]
			Scale
		}

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRHand leftController;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRHand rightController;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private State _state;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRHand _moveController;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand _idleController;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _positionOffsetFromController;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _rotationOffsetFromController;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _positionOffset;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _rotationOffset;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _scaleOffset;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion _targetRotation;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _targetScale;

		[Token(Token = "0x170004E1")]
		public State CurrentState
		{
			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1840A78", Offset = "0x1840A78", VA = "0x1840A78")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1840A80", Offset = "0x1840A80", VA = "0x1840A80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1840AFC", Offset = "0x1840AFC", VA = "0x1840AFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1840B90", Offset = "0x1840B90", VA = "0x1840B90")]
		private void Update()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x1840D74", Offset = "0x1840D74", VA = "0x1840D74")]
		private void HandleGripState()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x1840E38", Offset = "0x1840E38", VA = "0x1840E38")]
		private void BeginMoveOrScaleIfNeeded()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x18411F0", Offset = "0x18411F0", VA = "0x18411F0")]
		private void BeginMove(NVRHand moveController, NVRHand idleController)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x1840F14", Offset = "0x1840F14", VA = "0x1840F14")]
		private void Move()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1840FA0", Offset = "0x1840FA0", VA = "0x1840FA0")]
		private void EndMove()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x18410A0", Offset = "0x18410A0", VA = "0x18410A0")]
		private void BeginScale()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x1840FFC", Offset = "0x1840FFC", VA = "0x1840FFC")]
		private void Scale()
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x184109C", Offset = "0x184109C", VA = "0x184109C")]
		private void EndScale()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1841578", Offset = "0x1841578", VA = "0x1841578")]
		private Vector3 GetControllerCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x18413D0", Offset = "0x18413D0", VA = "0x18413D0")]
		private Quaternion GetControllerOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x18414E8", Offset = "0x18414E8", VA = "0x18414E8")]
		private float GetControllerDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1841318", Offset = "0x1841318", VA = "0x1841318")]
		private Matrix4x4 GetControllerCentroidTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1841608", Offset = "0x1841608", VA = "0x1841608")]
		public MoveAndScale()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x2000600")]
	public class BezierPoint : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000601")]
		public struct ExtraData
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float c1;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float c2;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float c3;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float c4;

			[Token(Token = "0x6002735")]
			[Address(RVA = "0xFFF368", Offset = "0xFFF368", VA = "0xFFF368")]
			public ExtraData(float c1 = 0f, float c2 = 0f, float c3 = 0f, float c4 = 0f)
			{
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0xFFF374", Offset = "0xFFF374", VA = "0xFFF374")]
			public static ExtraData Lerp(ExtraData a, ExtraData b, float t)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0xFFF404", Offset = "0xFFF404", VA = "0xFFF404")]
			public static ExtraData LerpUnclamped(ExtraData a, ExtraData b, float t)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0xFFF43C", Offset = "0xFFF43C", VA = "0xFFF43C")]
			public static implicit operator ExtraData(Vector2 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0xFFF448", Offset = "0xFFF448", VA = "0xFFF448")]
			public static implicit operator ExtraData(Vector3 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0xFFF450", Offset = "0xFFF450", VA = "0xFFF450")]
			public static implicit operator ExtraData(Vector4 v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0xFFF454", Offset = "0xFFF454", VA = "0xFFF454")]
			public static implicit operator ExtraData(Quaternion q)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0xFFF458", Offset = "0xFFF458", VA = "0xFFF458")]
			public static implicit operator ExtraData(Rect r)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0xFFF4D4", Offset = "0xFFF4D4", VA = "0xFFF4D4")]
			public static implicit operator ExtraData(Vector2Int v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0xFFF4EC", Offset = "0xFFF4EC", VA = "0xFFF4EC")]
			public static implicit operator ExtraData(Vector3Int v)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x600273F")]
			[Address(RVA = "0xFFF550", Offset = "0xFFF550", VA = "0xFFF550")]
			public static implicit operator ExtraData(RectInt r)
			{
				return default(ExtraData);
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0xFFF5C8", Offset = "0xFFF5C8", VA = "0xFFF5C8")]
			public static implicit operator Vector2(ExtraData v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002741")]
			[Address(RVA = "0xFFF5CC", Offset = "0xFFF5CC", VA = "0xFFF5CC")]
			public static implicit operator Vector3(ExtraData v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002742")]
			[Address(RVA = "0xFFF5D0", Offset = "0xFFF5D0", VA = "0xFFF5D0")]
			public static implicit operator Vector4(ExtraData v)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002743")]
			[Address(RVA = "0xFFF600", Offset = "0xFFF600", VA = "0xFFF600")]
			public static implicit operator Quaternion(ExtraData v)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002744")]
			[Address(RVA = "0xFFF630", Offset = "0xFFF630", VA = "0xFFF630")]
			public static implicit operator Rect(ExtraData v)
			{
				return default(Rect);
			}

			[Token(Token = "0x6002745")]
			[Address(RVA = "0xFFF660", Offset = "0xFFF660", VA = "0xFFF660")]
			public static implicit operator Vector2Int(ExtraData v)
			{
				return default(Vector2Int);
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0xFFF6A8", Offset = "0xFFF6A8", VA = "0xFFF6A8")]
			public static implicit operator Vector3Int(ExtraData v)
			{
				return default(Vector3Int);
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0xFFF708", Offset = "0xFFF708", VA = "0xFFF708")]
			public static implicit operator RectInt(ExtraData v)
			{
				return default(RectInt);
			}

			[Token(Token = "0x6002748")]
			[Address(RVA = "0xFFF7A8", Offset = "0xFFF7A8", VA = "0xFFF7A8")]
			public static bool operator ==(ExtraData d1, ExtraData d2)
			{
				return default(bool);
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0xFFF7D8", Offset = "0xFFF7D8", VA = "0xFFF7D8")]
			public static bool operator !=(ExtraData d1, ExtraData d2)
			{
				return default(bool);
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0xFFF808", Offset = "0xFFF808", VA = "0xFFF808", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xFFF8CC", Offset = "0xFFF8CC", VA = "0xFFF8CC", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xFFF91C", Offset = "0xFFF91C", VA = "0xFFF91C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000602")]
		public enum HandleMode
		{
			[Token(Token = "0x4001ED6")]
			Free,
			[Token(Token = "0x4001ED7")]
			Aligned,
			[Token(Token = "0x4001ED8")]
			Mirrored
		}

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_position;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ExtraData extraData;

		[Token(Token = "0x170004E2")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6002717")]
			[Address(RVA = "0x1044158", Offset = "0x1044158", VA = "0x1044158")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002718")]
			[Address(RVA = "0x104417C", Offset = "0x104417C", VA = "0x104417C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public Vector3 position
		{
			[Token(Token = "0x6002719")]
			[Address(RVA = "0x10441C8", Offset = "0x10441C8", VA = "0x10441C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600271A")]
			[Address(RVA = "0x10442B4", Offset = "0x10442B4", VA = "0x10442B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public Quaternion localRotation
		{
			[Token(Token = "0x600271B")]
			[Address(RVA = "0x1044300", Offset = "0x1044300", VA = "0x1044300")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600271C")]
			[Address(RVA = "0x1044324", Offset = "0x1044324", VA = "0x1044324")]
			set
			{
			}
		}

		[Token(Token = "0x170004E5")]
		public Quaternion rotation
		{
			[Token(Token = "0x600271D")]
			[Address(RVA = "0x1044378", Offset = "0x1044378", VA = "0x1044378")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600271E")]
			[Address(RVA = "0x104439C", Offset = "0x104439C", VA = "0x104439C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x600271F")]
			[Address(RVA = "0x10443F0", Offset = "0x10443F0", VA = "0x10443F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002720")]
			[Address(RVA = "0x1044414", Offset = "0x1044414", VA = "0x1044414")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6002721")]
			[Address(RVA = "0x1044460", Offset = "0x1044460", VA = "0x1044460")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1044484", Offset = "0x1044484", VA = "0x1044484")]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public Vector3 localScale
		{
			[Token(Token = "0x6002723")]
			[Address(RVA = "0x10444D0", Offset = "0x10444D0", VA = "0x10444D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x10444F4", Offset = "0x10444F4", VA = "0x10444F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1044540", Offset = "0x1044540", VA = "0x1044540")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002726")]
			[Address(RVA = "0x104454C", Offset = "0x104454C", VA = "0x104454C")]
			set
			{
			}
		}

		[Token(Token = "0x170004EA")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1044650", Offset = "0x1044650", VA = "0x1044650")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002728")]
			[Address(RVA = "0x1044698", Offset = "0x1044698", VA = "0x1044698")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6002729")]
			[Address(RVA = "0x1044850", Offset = "0x1044850", VA = "0x1044850")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600272A")]
			[Address(RVA = "0x104485C", Offset = "0x104485C", VA = "0x104485C")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1044960", Offset = "0x1044960", VA = "0x1044960")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600272C")]
			[Address(RVA = "0x10449A8", Offset = "0x10449A8", VA = "0x10449A8")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public HandleMode handleMode
		{
			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1044B60", Offset = "0x1044B60", VA = "0x1044B60")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1044B68", Offset = "0x1044B68", VA = "0x1044B68")]
			set
			{
			}
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1044B88", Offset = "0x1044B88", VA = "0x1044B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1044BB0", Offset = "0x1044BB0", VA = "0x1044BB0")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1044210", Offset = "0x1044210", VA = "0x1044210")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1044CB0", Offset = "0x1044CB0", VA = "0x1044CB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8F3158", Offset = "0x8F3158")]
		private void SetSplineDirty()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1044CB4", Offset = "0x1044CB4", VA = "0x1044CB4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1044D3C", Offset = "0x1044D3C", VA = "0x1044D3C")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x2000603")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7D74", Offset = "0x8D7D74")]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x2000604")]
		public struct PointIndexTuple
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int index1;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly int index2;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float t;

			[Token(Token = "0x600276D")]
			[Address(RVA = "0xFFFDD0", Offset = "0xFFFDD0", VA = "0xFFFDD0")]
			public PointIndexTuple(int index1, int index2, float t)
			{
			}
		}

		[Token(Token = "0x2000605")]
		public delegate BezierPoint.ExtraData ExtraDataLerpFunction(BezierPoint.ExtraData data1, BezierPoint.ExtraData data2, float normalizedT);

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ExtraDataLerpFunction defaultExtraDataLerpFunction;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<BezierPoint> endPoints;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool loop;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawGizmos;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color gizmoColor;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float gizmoStep;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_gizmoSmoothness;

		[Token(Token = "0x170004EE")]
		public int gizmoSmoothness
		{
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1044D88", Offset = "0x1044D88", VA = "0x1044D88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600274E")]
			[Address(RVA = "0x1044D90", Offset = "0x1044D90", VA = "0x1044D90")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public int Count
		{
			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1044E14", Offset = "0x1044E14", VA = "0x1044E14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004F0")]
		public float Length
		{
			[Token(Token = "0x6002750")]
			[Address(RVA = "0x1044E60", Offset = "0x1044E60", VA = "0x1044E60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004F1")]
		public BezierPoint Item
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x1044FC4", Offset = "0x1044FC4", VA = "0x1044FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1045104", Offset = "0x1045104", VA = "0x1045104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x104518C", Offset = "0x104518C", VA = "0x104518C")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x1045108", Offset = "0x1045108", VA = "0x1045108")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x1045374", Offset = "0x1045374", VA = "0x1045374")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x10457D8", Offset = "0x10457D8", VA = "0x10457D8")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1045AB4", Offset = "0x1045AB4", VA = "0x1045AB4")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x1045E2C", Offset = "0x1045E2C", VA = "0x1045E2C")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x1046144", Offset = "0x1046144", VA = "0x1046144")]
		public void MovePoint(int previousIndex, int newIndex)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x1046148", Offset = "0x1046148", VA = "0x1046148")]
		public void Internal_MovePoint(int previousIndex, int newIndex, string undo)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x1046520", Offset = "0x1046520", VA = "0x1046520")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1046584", Offset = "0x1046584", VA = "0x1046584")]
		public Vector3 GetPosAt(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x10467E8", Offset = "0x10467E8", VA = "0x10467E8")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x1046B20", Offset = "0x1046B20", VA = "0x1046B20")]
		public BezierPoint.ExtraData GetExtraData(float normalizedT)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1046B9C", Offset = "0x1046B9C", VA = "0x1046B9C")]
		public BezierPoint.ExtraData GetExtraData(float normalizedT, ExtraDataLerpFunction lerpFunction)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x1044E74", Offset = "0x1044E74", VA = "0x1044E74")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x1046DB4", Offset = "0x1046DB4", VA = "0x1046DB4")]
		public PointIndexTuple GetNearestPointIndicesTo(float normalizedT)
		{
			return default(PointIndexTuple);
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x1046EF0", Offset = "0x1046EF0", VA = "0x1046EF0")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x1046F14", Offset = "0x1046F14", VA = "0x1046F14")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x1047038", Offset = "0x1047038", VA = "0x1047038")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x1047114", Offset = "0x1047114", VA = "0x1047114")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x10473B8", Offset = "0x10473B8", VA = "0x10473B8")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1047DF8", Offset = "0x1047DF8", VA = "0x1047DF8")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1048014", Offset = "0x1048014", VA = "0x1048014")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1046D80", Offset = "0x1046D80", VA = "0x1046D80")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x10484F0", Offset = "0x10484F0", VA = "0x10484F0")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1048858", Offset = "0x1048858", VA = "0x1048858")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public enum TravelMode
	{
		[Token(Token = "0x4001EE5")]
		Once,
		[Token(Token = "0x4001EE6")]
		Loop,
		[Token(Token = "0x4001EE7")]
		PingPong
	}
	[Token(Token = "0x2000607")]
	public enum LookAtMode
	{
		[Token(Token = "0x4001EE9")]
		None,
		[Token(Token = "0x4001EEA")]
		Forward,
		[Token(Token = "0x4001EEB")]
		SplineExtraData
	}
	[Token(Token = "0x2000608")]
	public abstract class BezierWalker : MonoBehaviour
	{
		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly BezierSpline.ExtraDataLerpFunction extraDataLerpAsQuaternionFunction;

		[Token(Token = "0x170004F2")]
		public abstract BezierSpline Spline
		{
			[Token(Token = "0x6002772")]
			get;
		}

		[Token(Token = "0x170004F3")]
		public abstract bool MovingForward
		{
			[Token(Token = "0x6002773")]
			get;
		}

		[Token(Token = "0x170004F4")]
		public abstract float NormalizedT
		{
			[Token(Token = "0x6002774")]
			get;
			[Token(Token = "0x6002775")]
			set;
		}

		[Token(Token = "0x6002776")]
		public abstract void Execute(float deltaTime);

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1048990", Offset = "0x1048990", VA = "0x1048990")]
		private static BezierPoint.ExtraData InterpolateExtraDataAsQuaternion(BezierPoint.ExtraData data1, BezierPoint.ExtraData data2, float normalizedT)
		{
			return default(BezierPoint.ExtraData);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x1048A44", Offset = "0x1048A44", VA = "0x1048A44")]
		protected BezierWalker()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class BezierWalkerLocomotion : BezierWalker
	{
		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierWalker walker;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> tailObjects;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<float> tailObjectDistances;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float movementLerpModifier;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E2FB0", Offset = "0x8E2FB0")]
		public bool lookForward;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LookAtMode lookAt;

		[Token(Token = "0x170004F5")]
		public List<Transform> Tail
		{
			[Token(Token = "0x600277A")]
			[Address(RVA = "0x1048AE0", Offset = "0x1048AE0", VA = "0x1048AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		public List<float> TailDistances
		{
			[Token(Token = "0x600277B")]
			[Address(RVA = "0x1048AE8", Offset = "0x1048AE8", VA = "0x1048AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F7")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x600277C")]
			[Address(RVA = "0x1048AF0", Offset = "0x1048AF0", VA = "0x1048AF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		public override bool MovingForward
		{
			[Token(Token = "0x600277D")]
			[Address(RVA = "0x1048B10", Offset = "0x1048B10", VA = "0x1048B10", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F9")]
		public override float NormalizedT
		{
			[Token(Token = "0x600277E")]
			[Address(RVA = "0x1048B30", Offset = "0x1048B30", VA = "0x1048B30", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x1048B50", Offset = "0x1048B50", VA = "0x1048B50", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1048B70", Offset = "0x1048B70", VA = "0x1048B70")]
		private void Start()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1048D04", Offset = "0x1048D04", VA = "0x1048D04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1048D34", Offset = "0x1048D34", VA = "0x1048D34", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1049094", Offset = "0x1049094", VA = "0x1049094")]
		public void AddToTail(Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x10491C8", Offset = "0x10491C8", VA = "0x10491C8")]
		public void InsertIntoTail(int index, Transform transform, float distanceToPreviousObject)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x1049308", Offset = "0x1049308", VA = "0x1049308")]
		public void RemoveFromTail(Transform transform)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x10494D4", Offset = "0x10494D4", VA = "0x10494D4")]
		public BezierWalkerLocomotion()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class BezierWalkerWithSpeed : BezierWalker
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelMode travelMode;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2FEC", Offset = "0x8E2FEC")]
		private float m_normalizedT;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E302C", Offset = "0x8E302C")]
		public bool lookForward;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LookAtMode lookAt;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isGoingForward;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x170004FA")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x104954C", Offset = "0x104954C", VA = "0x104954C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FB")]
		public override float NormalizedT
		{
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x1049554", Offset = "0x1049554", VA = "0x1049554", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x104955C", Offset = "0x104955C", VA = "0x104955C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004FC")]
		public override bool MovingForward
		{
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1049564", Offset = "0x1049564", VA = "0x1049564", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1049584", Offset = "0x1049584", VA = "0x1049584")]
		private void Update()
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x10495B4", Offset = "0x10495B4", VA = "0x10495B4", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1049940", Offset = "0x1049940", VA = "0x1049940")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class BezierWalkerWithTime : BezierWalker
	{
		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TravelMode travelMode;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float travelTime;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3068", Offset = "0x8E3068")]
		private float m_normalizedT;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float movementLerpModifier;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationLerpModifier;

		[NonSerialized]
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E30A8", Offset = "0x8E30A8")]
		public bool lookForward;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LookAtMode lookAt;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isGoingForward;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x170004FD")]
		public override BezierSpline Spline
		{
			[Token(Token = "0x600278E")]
			[Address(RVA = "0x10499FC", Offset = "0x10499FC", VA = "0x10499FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		public override float NormalizedT
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0x1049A04", Offset = "0x1049A04", VA = "0x1049A04", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x1049A0C", Offset = "0x1049A0C", VA = "0x1049A0C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170004FF")]
		public override bool MovingForward
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0x1049A14", Offset = "0x1049A14", VA = "0x1049A14", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x1049A1C", Offset = "0x1049A1C", VA = "0x1049A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x1049A4C", Offset = "0x1049A4C", VA = "0x1049A4C", Slot = "8")]
		public override void Execute(float deltaTime)
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1049DC4", Offset = "0x1049DC4", VA = "0x1049DC4")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x200060C")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		public enum FollowMode
		{
			[Token(Token = "0x4001F14")]
			Relaxed,
			[Token(Token = "0x4001F15")]
			Strict
		}

		[Token(Token = "0x4001F0B")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowMode followMode;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cachedTransform;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector4> particleData;

		[Token(Token = "0x6002795")]
		[Address(RVA = "0xECAC48", Offset = "0xECAC48", VA = "0xECAC48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xECADA4", Offset = "0xECADA4", VA = "0xECADA4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0xECB300", Offset = "0xECB300", VA = "0xECB300")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x200060E")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x17000500")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x138BABC", Offset = "0x138BABC", VA = "0x138BABC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x138BAC4", Offset = "0x138BAC4", VA = "0x138BAC4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000501")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600279A")]
			[Address(RVA = "0x138BB54", Offset = "0x138BB54", VA = "0x138BB54", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x138BB5C", Offset = "0x138BB5C", VA = "0x138BB5C")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060F")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x17000502")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600279C")]
			[Address(RVA = "0x14A7640", Offset = "0x14A7640", VA = "0x14A7640", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600279D")]
			[Address(RVA = "0x14A7648", Offset = "0x14A7648", VA = "0x14A7648", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600279E")]
			[Address(RVA = "0x14A76D8", Offset = "0x14A76D8", VA = "0x14A76D8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x14A76E0", Offset = "0x14A76E0", VA = "0x14A76E0")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000610")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x17000504")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x104208C", Offset = "0x104208C", VA = "0x104208C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x1042094", Offset = "0x1042094", VA = "0x1042094", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x1042124", Offset = "0x1042124", VA = "0x1042124", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x104212C", Offset = "0x104212C", VA = "0x104212C")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x10421E4", Offset = "0x10421E4", VA = "0x10421E4")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1042294", Offset = "0x1042294", VA = "0x1042294")]
		public void Unload()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1042330", Offset = "0x1042330", VA = "0x1042330")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E30E4", Offset = "0x8E30E4")]
		[SerializeField]
		[HideInInspector]
		private int groupIdInternal;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E3140", Offset = "0x8E3140")]
		[SerializeField]
		[HideInInspector]
		private byte[] groupGuidInternal;

		[Token(Token = "0x17000506")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x1042704", Offset = "0x1042704", VA = "0x1042704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000507")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60027A8")]
			get;
		}

		[Token(Token = "0x17000508")]
		public uint GroupId
		{
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x10427F0", Offset = "0x10427F0", VA = "0x10427F0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000509")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6E74", Offset = "0x8F6E74")]
		public int groupID
		{
			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x104299C", Offset = "0x104299C", VA = "0x104299C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700050A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6EAC", Offset = "0x8F6EAC")]
		public byte[] groupGuid
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x10429A0", Offset = "0x10429A0", VA = "0x10429A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1042888", Offset = "0x1042888", VA = "0x1042888", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1042A5C", Offset = "0x1042A5C", VA = "0x1042A5C")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000612")]
	public abstract class BaseType
	{
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E319C", Offset = "0x8E319C")]
		[SerializeField]
		[HideInInspector]
		private int idInternal;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8E31F8", Offset = "0x8E31F8")]
		[HideInInspector]
		[SerializeField]
		private byte[] valueGuidInternal;

		[Token(Token = "0x1700050B")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027AE")]
			get;
			[Token(Token = "0x60027AF")]
			set;
		}

		[Token(Token = "0x1700050C")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027B0")]
			get;
		}

		[Token(Token = "0x1700050D")]
		public virtual string Name
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x1042A64", Offset = "0x1042A64", VA = "0x1042A64", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		public uint Id
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x1042AF4", Offset = "0x1042AF4", VA = "0x1042AF4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700050F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6EE4", Offset = "0x8F6EE4")]
		public int ID
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x1042CE4", Offset = "0x1042CE4", VA = "0x1042CE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000510")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F6F1C", Offset = "0x8F6F1C")]
		public byte[] valueGuid
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x1042CE8", Offset = "0x1042CE8", VA = "0x1042CE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x104291C", Offset = "0x104291C", VA = "0x104291C", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1042B44", Offset = "0x1042B44", VA = "0x1042B44")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1042C34", Offset = "0x1042C34", VA = "0x1042C34")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1042C38", Offset = "0x1042C38", VA = "0x1042C38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1042338", Offset = "0x1042338", VA = "0x1042338")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x13CAEC0", Offset = "0x13CAEC0", VA = "0x13CAEC0")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000614")]
	public class Event : BaseType
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000511")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x100FE1C", Offset = "0x100FE1C", VA = "0x100FE1C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x100FE24", Offset = "0x100FE24", VA = "0x100FE24", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000512")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x100FEB4", Offset = "0x100FEB4", VA = "0x100FEB4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x100FEBC", Offset = "0x100FEBC", VA = "0x100FEBC")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x100FEC0", Offset = "0x100FEC0", VA = "0x100FEC0")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x100FFF8", Offset = "0x100FFF8", VA = "0x100FFF8")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x10100D4", Offset = "0x10100D4", VA = "0x10100D4")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x10101A8", Offset = "0x10101A8", VA = "0x10101A8")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x10101B8", Offset = "0x10101B8", VA = "0x10101B8")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1010298", Offset = "0x1010298", VA = "0x1010298")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x101030C", Offset = "0x101030C", VA = "0x101030C")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1010388", Offset = "0x1010388", VA = "0x1010388")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1010434", Offset = "0x1010434", VA = "0x1010434")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x10104CC", Offset = "0x10104CC", VA = "0x10104CC")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000615")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000513")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1293AE0", Offset = "0x1293AE0", VA = "0x1293AE0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x1293AE8", Offset = "0x1293AE8", VA = "0x1293AE8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000514")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0x1293B78", Offset = "0x1293B78", VA = "0x1293B78", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1293B80", Offset = "0x1293B80", VA = "0x1293B80")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1293C50", Offset = "0x1293C50", VA = "0x1293C50")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1293D60", Offset = "0x1293D60", VA = "0x1293D60")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x1293E1C", Offset = "0x1293E1C", VA = "0x1293E1C")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x1293E24", Offset = "0x1293E24", VA = "0x1293E24")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000616")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x17000515")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x11F0E8C", Offset = "0x11F0E8C", VA = "0x11F0E8C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x11F0E94", Offset = "0x11F0E94", VA = "0x11F0E94", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x11F0F24", Offset = "0x11F0F24", VA = "0x11F0F24", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000517")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x11F0F2C", Offset = "0x11F0F2C", VA = "0x11F0F2C", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x11F0F34", Offset = "0x11F0F34", VA = "0x11F0F34")]
		public void SetValue()
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x11F0FFC", Offset = "0x11F0FFC", VA = "0x11F0FFC")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000617")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000518")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x11F9320", Offset = "0x11F9320", VA = "0x11F9320", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x11F9328", Offset = "0x11F9328", VA = "0x11F9328", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000519")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x11F93B8", Offset = "0x11F93B8", VA = "0x11F93B8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x1700051A")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x11F93C0", Offset = "0x11F93C0", VA = "0x11F93C0", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x11F93C8", Offset = "0x11F93C8", VA = "0x11F93C8")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x11F9498", Offset = "0x11F9498", VA = "0x11F9498")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000618")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x1700051B")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x10BE730", Offset = "0x10BE730", VA = "0x10BE730", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x10BE738", Offset = "0x10BE738", VA = "0x10BE738", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x10BE7C8", Offset = "0x10BE7C8", VA = "0x10BE7C8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x10BE7D0", Offset = "0x10BE7D0", VA = "0x10BE7D0")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x10BE88C", Offset = "0x10BE88C", VA = "0x10BE88C")]
		public Trigger()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000619")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xEC7950", Offset = "0xEC7950", VA = "0xEC7950")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xEC79CC", Offset = "0xEC79CC", VA = "0xEC79CC")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xEC7F64", Offset = "0xEC7F64", VA = "0xEC7F64")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xEC8080", Offset = "0xEC8080", VA = "0xEC8080")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200061A")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DD0", Offset = "0x8D7DD0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x105822C", Offset = "0x105822C", VA = "0x105822C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x1058234", Offset = "0x1058234", VA = "0x1058234")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DE0", Offset = "0x8D7DE0")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FD")]
				[Address(RVA = "0x10582F8", Offset = "0x10582F8", VA = "0x10582F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FF")]
				[Address(RVA = "0x1058340", Offset = "0x1058340", VA = "0x1058340", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x1058258", Offset = "0x1058258", VA = "0x1058258")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x1058284", Offset = "0x1058284", VA = "0x1058284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x1058288", Offset = "0x1058288", VA = "0x1058288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0x1058300", Offset = "0x1058300", VA = "0x1058300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7DF0", Offset = "0x8D7DF0")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002803")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002805")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002800")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002801")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002802")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002804")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E00", Offset = "0x8D7E00")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002809")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002806")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002807")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002808")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E10", Offset = "0x8D7E10")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002811")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600280C")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600280D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600280E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002810")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7E20", Offset = "0x8D7E20")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002815")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002817")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002812")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002813")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002814")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002816")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x1606BEC", Offset = "0x1606BEC", VA = "0x1606BEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1606D10", Offset = "0x1606D10", VA = "0x1606D10")]
		public void Update()
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1606ED0", Offset = "0x1606ED0", VA = "0x1606ED0")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1606FE4", Offset = "0x1606FE4", VA = "0x1606FE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x160704C", Offset = "0x160704C", VA = "0x160704C")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1607240", Offset = "0x1607240", VA = "0x1607240")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60027ED")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60027EE")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60027EF")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60027F0")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x1607268", Offset = "0x1607268", VA = "0x1607268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F3190", Offset = "0x8F3190")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60027F2")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F31F0", Offset = "0x8F31F0")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60027F3")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F3250", Offset = "0x8F3250")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60027F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F32B0", Offset = "0x8F32B0")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60027F5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F3310", Offset = "0x8F3310")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x16072E0", Offset = "0x16072E0", VA = "0x16072E0")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public enum Locale
	{
		[Token(Token = "0x4001F42")]
		US,
		[Token(Token = "0x4001F43")]
		DE,
		[Token(Token = "0x4001F44")]
		JP,
		[Token(Token = "0x4001F45")]
		KR,
		[Token(Token = "0x4001F46")]
		RU,
		[Token(Token = "0x4001F47")]
		CN,
		[Token(Token = "0x4001F48")]
		TW,
		[Token(Token = "0x4001F49")]
		FR
	}
	[Token(Token = "0x2000622")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000623")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000624")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000625")]
	public class Leaderboard
	{
		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3254", Offset = "0x8E3254")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3264", Offset = "0x8E3264")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3274", Offset = "0x8E3274")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000527")]
		public int Rank
		{
			[Token(Token = "0x6002824")]
			[Address(RVA = "0x1772344", Offset = "0x1772344", VA = "0x1772344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3500", Offset = "0x8F3500")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002825")]
			[Address(RVA = "0x177234C", Offset = "0x177234C", VA = "0x177234C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3510", Offset = "0x8F3510")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public int Score
		{
			[Token(Token = "0x6002826")]
			[Address(RVA = "0x1772354", Offset = "0x1772354", VA = "0x1772354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3520", Offset = "0x8F3520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002827")]
			[Address(RVA = "0x177235C", Offset = "0x177235C", VA = "0x177235C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3530", Offset = "0x8F3530")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public string UserName
		{
			[Token(Token = "0x6002828")]
			[Address(RVA = "0x1772364", Offset = "0x1772364", VA = "0x1772364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3540", Offset = "0x8F3540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002829")]
			[Address(RVA = "0x177236C", Offset = "0x177236C", VA = "0x177236C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3550", Offset = "0x8F3550")]
			set
			{
			}
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x1772374", Offset = "0x1772374", VA = "0x1772374")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000627")]
		public enum Platform
		{
			[Token(Token = "0x4001F50")]
			Windows,
			[Token(Token = "0x4001F51")]
			Android
		}

		[Token(Token = "0x2000628")]
		public enum TransactionType
		{
			[Token(Token = "0x4001F53")]
			Unknown,
			[Token(Token = "0x4001F54")]
			Paid,
			[Token(Token = "0x4001F55")]
			Redeem,
			[Token(Token = "0x4001F56")]
			FreeTrial
		}

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3284", Offset = "0x8E3284")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3294", Offset = "0x8E3294")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x1700052A")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x600282B")]
			[Address(RVA = "0x11F9300", Offset = "0x11F9300", VA = "0x11F9300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3560", Offset = "0x8F3560")]
			get
			{
				return null;
			}
			[Token(Token = "0x600282C")]
			[Address(RVA = "0x11F9308", Offset = "0x11F9308", VA = "0x11F9308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3570", Offset = "0x8F3570")]
			set
			{
			}
		}

		[Token(Token = "0x1700052B")]
		public TransactionType Type
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0x11F9310", Offset = "0x11F9310", VA = "0x11F9310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3580", Offset = "0x8F3580")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x600282E")]
			[Address(RVA = "0x11F9318", Offset = "0x11F9318", VA = "0x11F9318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3590", Offset = "0x8F3590")]
			set
			{
			}
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x11F8E54", Offset = "0x11F8E54", VA = "0x11F8E54")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public class Api
	{
		[Token(Token = "0x200062A")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6002838")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6002839")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600283A")]
			[Address(RVA = "0xFFCE78", Offset = "0xFFCE78", VA = "0xFFCE78")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x149D464", Offset = "0x149D464", VA = "0x149D464")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x149D374", Offset = "0x149D374", VA = "0x149D374")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F35A0", Offset = "0x8F35A0")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x149D734", Offset = "0x149D734", VA = "0x149D734")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x149D3EC", Offset = "0x149D3EC", VA = "0x149D3EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3600", Offset = "0x8F3600")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x149DA7C", Offset = "0x149DA7C", VA = "0x149DA7C")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x149DD2C", Offset = "0x149DD2C", VA = "0x149DD2C")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x149DEF0", Offset = "0x149DEF0", VA = "0x149DEF0")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class User
	{
		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xEA0820", Offset = "0xEA0820", VA = "0xEA0820")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3660", Offset = "0x8F3660")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xEA0880", Offset = "0xEA0880", VA = "0xEA0880")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xEA0B88", Offset = "0xEA0B88", VA = "0xEA0B88")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xEA0CAC", Offset = "0xEA0CAC", VA = "0xEA0CAC")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0xEA0DD0", Offset = "0xEA0DD0", VA = "0xEA0DD0")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0xEA0EF4", Offset = "0xEA0EF4", VA = "0xEA0EF4")]
		public User()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public class UserStats
	{
		[Token(Token = "0x200062D")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001F69")]
			GlobalData,
			[Token(Token = "0x4001F6A")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001F6B")]
			LocalData,
			[Token(Token = "0x4001F6C")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200062E")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001F6E")]
			AllTime,
			[Token(Token = "0x4001F6F")]
			Daily,
			[Token(Token = "0x4001F70")]
			Weekly,
			[Token(Token = "0x4001F71")]
			Monthly
		}

		[Token(Token = "0x200062F")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001F73")]
			None,
			[Token(Token = "0x4001F74")]
			Ascending,
			[Token(Token = "0x4001F75")]
			Descending
		}

		[Token(Token = "0x2000630")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001F77")]
			None,
			[Token(Token = "0x4001F78")]
			Numeric,
			[Token(Token = "0x4001F79")]
			TimeSeconds,
			[Token(Token = "0x4001F7A")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000631")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001F7C")]
			None,
			[Token(Token = "0x4001F7D")]
			KeepBest,
			[Token(Token = "0x4001F7E")]
			ForceUpdate
		}

		[Token(Token = "0x2000632")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001F80")]
			Name,
			[Token(Token = "0x4001F81")]
			Desc,
			[Token(Token = "0x4001F82")]
			Hidden
		}

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xEA2178", Offset = "0xEA2178", VA = "0xEA2178")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F36C0", Offset = "0x8F36C0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0xEA2358", Offset = "0xEA2358", VA = "0xEA2358")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xEA21D8", Offset = "0xEA21D8", VA = "0xEA21D8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3720", Offset = "0x8F3720")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xEA2660", Offset = "0xEA2660", VA = "0xEA2660")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xEA2968", Offset = "0xEA2968", VA = "0xEA2968")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xEA2AD0", Offset = "0xEA2AD0", VA = "0xEA2AD0")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xEA2C40", Offset = "0xEA2C40", VA = "0xEA2C40")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xEA2DA8", Offset = "0xEA2DA8", VA = "0xEA2DA8")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xEA2238", Offset = "0xEA2238", VA = "0xEA2238")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3780", Offset = "0x8F3780")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xEA2F18", Offset = "0xEA2F18", VA = "0xEA2F18")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xEA3220", Offset = "0xEA3220", VA = "0xEA3220")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xEA331C", Offset = "0xEA331C", VA = "0xEA331C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xEA3418", Offset = "0xEA3418", VA = "0xEA3418")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xEA3514", Offset = "0xEA3514", VA = "0xEA3514")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xEA367C", Offset = "0xEA367C", VA = "0xEA367C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xEA3830", Offset = "0xEA3830", VA = "0xEA3830")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xEA392C", Offset = "0xEA392C", VA = "0xEA392C")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xEA2298", Offset = "0xEA2298", VA = "0xEA2298")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F37E0", Offset = "0x8F37E0")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xEA3A28", Offset = "0xEA3A28", VA = "0xEA3A28")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xEA22F8", Offset = "0xEA22F8", VA = "0xEA22F8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3840", Offset = "0x8F3840")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xEA3F10", Offset = "0xEA3F10", VA = "0xEA3F10")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xEA42DC", Offset = "0xEA42DC", VA = "0xEA42DC")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xEA45A0", Offset = "0xEA45A0", VA = "0xEA45A0")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xEA46B8", Offset = "0xEA46B8", VA = "0xEA46B8")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xEA47D0", Offset = "0xEA47D0", VA = "0xEA47D0")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xEA48E8", Offset = "0xEA48E8", VA = "0xEA48E8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600285B")]
		[Address(RVA = "0x14A2FF4", Offset = "0x14A2FF4", VA = "0x14A2FF4")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class IAPurchase
	{
		[Token(Token = "0x2000635")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6002877")]
			[Address(RVA = "0xE7F718", Offset = "0xE7F718", VA = "0xE7F718")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6002878")]
			[Address(RVA = "0xE7F784", Offset = "0xE7F784", VA = "0xE7F784")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6002879")]
			[Address(RVA = "0xE7F7F4", Offset = "0xE7F7F4", VA = "0xE7F7F4", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287A")]
			[Address(RVA = "0xE7FD10", Offset = "0xE7FD10", VA = "0xE7FD10")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x600287B")]
			[Address(RVA = "0xE7FD80", Offset = "0xE7FD80", VA = "0xE7FD80", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287C")]
			[Address(RVA = "0xE8029C", Offset = "0xE8029C", VA = "0xE8029C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0xE8030C", Offset = "0xE8030C", VA = "0xE8030C", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287E")]
			[Address(RVA = "0xE808B8", Offset = "0xE808B8", VA = "0xE808B8")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0xE80928", Offset = "0xE80928", VA = "0xE80928", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002880")]
			[Address(RVA = "0xE81408", Offset = "0xE81408", VA = "0xE81408")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002881")]
			[Address(RVA = "0xE81478", Offset = "0xE81478", VA = "0xE81478", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002882")]
			[Address(RVA = "0xE82488", Offset = "0xE82488", VA = "0xE82488")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6002883")]
			[Address(RVA = "0xE824F8", Offset = "0xE824F8", VA = "0xE824F8", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002884")]
			[Address(RVA = "0xE82AB0", Offset = "0xE82AB0", VA = "0xE82AB0")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0xE82B20", Offset = "0xE82B20", VA = "0xE82B20", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0xE83030", Offset = "0xE83030", VA = "0xE83030")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0xE830A0", Offset = "0xE830A0", VA = "0xE830A0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0xE835B0", Offset = "0xE835B0", VA = "0xE835B0")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0xE83620", Offset = "0xE83620", VA = "0xE83620", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0xE83DA8", Offset = "0xE83DA8", VA = "0xE83DA8")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0xE83E18", Offset = "0xE83E18", VA = "0xE83E18", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0xE84348", Offset = "0xE84348", VA = "0xE84348")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0xE843B8", Offset = "0xE843B8", VA = "0xE843B8", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600288E")]
			[Address(RVA = "0xE848E8", Offset = "0xE848E8", VA = "0xE848E8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600288F")]
			[Address(RVA = "0xE84958", Offset = "0xE84958", VA = "0xE84958", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000636")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6002890")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6002891")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6002892")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6002893")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6002894")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6002895")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6002896")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002897")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6002898")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6002899")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x600289A")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x600289B")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x600289C")]
			[Address(RVA = "0xE7F710", Offset = "0xE7F710", VA = "0xE7F710")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000637")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xE84D48", Offset = "0xE84D48", VA = "0xE84D48", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xE84D4C", Offset = "0xE84D4C", VA = "0xE84D4C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0xE84D50", Offset = "0xE84D50", VA = "0xE84D50", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xE84D54", Offset = "0xE84D54", VA = "0xE84D54", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xE84D58", Offset = "0xE84D58", VA = "0xE84D58", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xE84D5C", Offset = "0xE84D5C", VA = "0xE84D5C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xE84D60", Offset = "0xE84D60", VA = "0xE84D60", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xE84D64", Offset = "0xE84D64", VA = "0xE84D64", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0xE84D68", Offset = "0xE84D68", VA = "0xE84D68", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xE84D6C", Offset = "0xE84D6C", VA = "0xE84D6C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xE84D70", Offset = "0xE84D70", VA = "0xE84D70", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0xE84D74", Offset = "0xE84D74", VA = "0xE84D74", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xE84D78", Offset = "0xE84D78", VA = "0xE84D78", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xE84D7C", Offset = "0xE84D7C", VA = "0xE84D7C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000638")]
		public class QueryResponse
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32A4", Offset = "0x8E32A4")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32B4", Offset = "0x8E32B4")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32C4", Offset = "0x8E32C4")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32D4", Offset = "0x8E32D4")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32E4", Offset = "0x8E32E4")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E32F4", Offset = "0x8E32F4")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700052C")]
			public string order_id
			{
				[Token(Token = "0x60028AB")]
				[Address(RVA = "0xE84DB4", Offset = "0xE84DB4", VA = "0xE84DB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3D80", Offset = "0x8F3D80")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028AC")]
				[Address(RVA = "0xE84DBC", Offset = "0xE84DBC", VA = "0xE84DBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3D90", Offset = "0x8F3D90")]
				set
				{
				}
			}

			[Token(Token = "0x1700052D")]
			public string purchase_id
			{
				[Token(Token = "0x60028AD")]
				[Address(RVA = "0xE84DC4", Offset = "0xE84DC4", VA = "0xE84DC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DA0", Offset = "0x8F3DA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028AE")]
				[Address(RVA = "0xE84DCC", Offset = "0xE84DCC", VA = "0xE84DCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DB0", Offset = "0x8F3DB0")]
				set
				{
				}
			}

			[Token(Token = "0x1700052E")]
			public string status
			{
				[Token(Token = "0x60028AF")]
				[Address(RVA = "0xE84DD4", Offset = "0xE84DD4", VA = "0xE84DD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DC0", Offset = "0x8F3DC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B0")]
				[Address(RVA = "0xE84DDC", Offset = "0xE84DDC", VA = "0xE84DDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DD0", Offset = "0x8F3DD0")]
				set
				{
				}
			}

			[Token(Token = "0x1700052F")]
			public string price
			{
				[Token(Token = "0x60028B1")]
				[Address(RVA = "0xE84DE4", Offset = "0xE84DE4", VA = "0xE84DE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DE0", Offset = "0x8F3DE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B2")]
				[Address(RVA = "0xE84DEC", Offset = "0xE84DEC", VA = "0xE84DEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3DF0", Offset = "0x8F3DF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000530")]
			public string currency
			{
				[Token(Token = "0x60028B3")]
				[Address(RVA = "0xE84DF4", Offset = "0xE84DF4", VA = "0xE84DF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E00", Offset = "0x8F3E00")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B4")]
				[Address(RVA = "0xE84DFC", Offset = "0xE84DFC", VA = "0xE84DFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E10", Offset = "0x8F3E10")]
				set
				{
				}
			}

			[Token(Token = "0x17000531")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028B5")]
				[Address(RVA = "0xE84E04", Offset = "0xE84E04", VA = "0xE84E04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E20", Offset = "0x8F3E20")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028B6")]
				[Address(RVA = "0xE84E0C", Offset = "0xE84E0C", VA = "0xE84E0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E30", Offset = "0x8F3E30")]
				set
				{
				}
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xE81400", Offset = "0xE81400", VA = "0xE81400")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000639")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3304", Offset = "0x8E3304")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3314", Offset = "0x8E3314")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3324", Offset = "0x8E3324")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3334", Offset = "0x8E3334")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3344", Offset = "0x8E3344")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3354", Offset = "0x8E3354")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3364", Offset = "0x8E3364")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000532")]
			public string order_id
			{
				[Token(Token = "0x60028B8")]
				[Address(RVA = "0xE84E14", Offset = "0xE84E14", VA = "0xE84E14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E40", Offset = "0x8F3E40")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B9")]
				[Address(RVA = "0xE84E1C", Offset = "0xE84E1C", VA = "0xE84E1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E50", Offset = "0x8F3E50")]
				set
				{
				}
			}

			[Token(Token = "0x17000533")]
			public string app_id
			{
				[Token(Token = "0x60028BA")]
				[Address(RVA = "0xE84E24", Offset = "0xE84E24", VA = "0xE84E24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E60", Offset = "0x8F3E60")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BB")]
				[Address(RVA = "0xE84E2C", Offset = "0xE84E2C", VA = "0xE84E2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E70", Offset = "0x8F3E70")]
				set
				{
				}
			}

			[Token(Token = "0x17000534")]
			public string purchase_id
			{
				[Token(Token = "0x60028BC")]
				[Address(RVA = "0xE84E34", Offset = "0xE84E34", VA = "0xE84E34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E80", Offset = "0x8F3E80")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BD")]
				[Address(RVA = "0xE84E3C", Offset = "0xE84E3C", VA = "0xE84E3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3E90", Offset = "0x8F3E90")]
				set
				{
				}
			}

			[Token(Token = "0x17000535")]
			public string user_data
			{
				[Token(Token = "0x60028BE")]
				[Address(RVA = "0xE84E44", Offset = "0xE84E44", VA = "0xE84E44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3EA0", Offset = "0x8F3EA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BF")]
				[Address(RVA = "0xE84E4C", Offset = "0xE84E4C", VA = "0xE84E4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3EB0", Offset = "0x8F3EB0")]
				set
				{
				}
			}

			[Token(Token = "0x17000536")]
			public string price
			{
				[Token(Token = "0x60028C0")]
				[Address(RVA = "0xE84E54", Offset = "0xE84E54", VA = "0xE84E54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3EC0", Offset = "0x8F3EC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028C1")]
				[Address(RVA = "0xE84E5C", Offset = "0xE84E5C", VA = "0xE84E5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3ED0", Offset = "0x8F3ED0")]
				set
				{
				}
			}

			[Token(Token = "0x17000537")]
			public string currency
			{
				[Token(Token = "0x60028C2")]
				[Address(RVA = "0xE84E64", Offset = "0xE84E64", VA = "0xE84E64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3EE0", Offset = "0x8F3EE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028C3")]
				[Address(RVA = "0xE84E6C", Offset = "0xE84E6C", VA = "0xE84E6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3EF0", Offset = "0x8F3EF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000538")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028C4")]
				[Address(RVA = "0xE84E74", Offset = "0xE84E74", VA = "0xE84E74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F00", Offset = "0x8F3F00")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028C5")]
				[Address(RVA = "0xE84E7C", Offset = "0xE84E7C", VA = "0xE84E7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F10", Offset = "0x8F3F10")]
				set
				{
				}
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xE82478", Offset = "0xE82478", VA = "0xE82478")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x200063A")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3374", Offset = "0x8E3374")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3384", Offset = "0x8E3384")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3394", Offset = "0x8E3394")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000539")]
			public int total
			{
				[Token(Token = "0x60028C7")]
				[Address(RVA = "0xE84D84", Offset = "0xE84D84", VA = "0xE84D84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F20", Offset = "0x8F3F20")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028C8")]
				[Address(RVA = "0xE84D8C", Offset = "0xE84D8C", VA = "0xE84D8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F30", Offset = "0x8F3F30")]
				set
				{
				}
			}

			[Token(Token = "0x1700053A")]
			public int from
			{
				[Token(Token = "0x60028C9")]
				[Address(RVA = "0xE84D94", Offset = "0xE84D94", VA = "0xE84D94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F40", Offset = "0x8F3F40")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028CA")]
				[Address(RVA = "0xE84D9C", Offset = "0xE84D9C", VA = "0xE84D9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F50", Offset = "0x8F3F50")]
				set
				{
				}
			}

			[Token(Token = "0x1700053B")]
			public int to
			{
				[Token(Token = "0x60028CB")]
				[Address(RVA = "0xE84DA4", Offset = "0xE84DA4", VA = "0xE84DA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F60", Offset = "0x8F3F60")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028CC")]
				[Address(RVA = "0xE84DAC", Offset = "0xE84DAC", VA = "0xE84DAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F70", Offset = "0x8F3F70")]
				set
				{
				}
			}

			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xE82480", Offset = "0xE82480", VA = "0xE82480")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x200063B")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33A4", Offset = "0x8E33A4")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33B4", Offset = "0x8E33B4")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33C4", Offset = "0x8E33C4")]
			private string <status>k__BackingField;

			[Token(Token = "0x1700053C")]
			public long create_time
			{
				[Token(Token = "0x60028CE")]
				[Address(RVA = "0xE84EF4", Offset = "0xE84EF4", VA = "0xE84EF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F80", Offset = "0x8F3F80")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028CF")]
				[Address(RVA = "0xE84EFC", Offset = "0xE84EFC", VA = "0xE84EFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3F90", Offset = "0x8F3F90")]
				set
				{
				}
			}

			[Token(Token = "0x1700053D")]
			public string payment_method
			{
				[Token(Token = "0x60028D0")]
				[Address(RVA = "0xE84F04", Offset = "0xE84F04", VA = "0xE84F04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FA0", Offset = "0x8F3FA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D1")]
				[Address(RVA = "0xE84F0C", Offset = "0xE84F0C", VA = "0xE84F0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FB0", Offset = "0x8F3FB0")]
				set
				{
				}
			}

			[Token(Token = "0x1700053E")]
			public string status
			{
				[Token(Token = "0x60028D2")]
				[Address(RVA = "0xE84F14", Offset = "0xE84F14", VA = "0xE84F14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FC0", Offset = "0x8F3FC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0xE84F1C", Offset = "0xE84F1C", VA = "0xE84F1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FD0", Offset = "0x8F3FD0")]
				set
				{
				}
			}

			[Token(Token = "0x60028D4")]
			[Address(RVA = "0xE84F24", Offset = "0xE84F24", VA = "0xE84F24")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x200063C")]
		public class StatusDetail
		{
			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33D4", Offset = "0x8E33D4")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33E4", Offset = "0x8E33E4")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E33F4", Offset = "0x8E33F4")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x1700053F")]
			public long date_next_charge
			{
				[Token(Token = "0x60028D5")]
				[Address(RVA = "0xE84EBC", Offset = "0xE84EBC", VA = "0xE84EBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FE0", Offset = "0x8F3FE0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028D6")]
				[Address(RVA = "0xE84EC4", Offset = "0xE84EC4", VA = "0xE84EC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F3FF0", Offset = "0x8F3FF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000540")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60028D7")]
				[Address(RVA = "0xE84ECC", Offset = "0xE84ECC", VA = "0xE84ECC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4000", Offset = "0x8F4000")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D8")]
				[Address(RVA = "0xE84ED4", Offset = "0xE84ED4", VA = "0xE84ED4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4010", Offset = "0x8F4010")]
				set
				{
				}
			}

			[Token(Token = "0x17000541")]
			public string cancel_reason
			{
				[Token(Token = "0x60028D9")]
				[Address(RVA = "0xE84EDC", Offset = "0xE84EDC", VA = "0xE84EDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4020", Offset = "0x8F4020")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0xE84EE4", Offset = "0xE84EE4", VA = "0xE84EE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4030", Offset = "0x8F4030")]
				set
				{
				}
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0xE84EEC", Offset = "0xE84EEC", VA = "0xE84EEC")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x200063D")]
		public class TimePeriod
		{
			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3404", Offset = "0x8E3404")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3414", Offset = "0x8E3414")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000542")]
			public string time_type
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0xE85004", Offset = "0xE85004", VA = "0xE85004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4040", Offset = "0x8F4040")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DD")]
				[Address(RVA = "0xE8500C", Offset = "0xE8500C", VA = "0xE8500C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4050", Offset = "0x8F4050")]
				set
				{
				}
			}

			[Token(Token = "0x17000543")]
			public int value
			{
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0xE85014", Offset = "0xE85014", VA = "0xE85014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4060", Offset = "0x8F4060")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028DF")]
				[Address(RVA = "0xE8501C", Offset = "0xE8501C", VA = "0xE8501C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4070", Offset = "0x8F4070")]
				set
				{
				}
			}

			[Token(Token = "0x60028E0")]
			[Address(RVA = "0xE85024", Offset = "0xE85024", VA = "0xE85024")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x200063E")]
		public class Subscription
		{
			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3424", Offset = "0x8E3424")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3434", Offset = "0x8E3434")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3444", Offset = "0x8E3444")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3454", Offset = "0x8E3454")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3464", Offset = "0x8E3464")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3474", Offset = "0x8E3474")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3484", Offset = "0x8E3484")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3494", Offset = "0x8E3494")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34A4", Offset = "0x8E34A4")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34B4", Offset = "0x8E34B4")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34C4", Offset = "0x8E34C4")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34D4", Offset = "0x8E34D4")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34E4", Offset = "0x8E34E4")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000544")]
			public string app_id
			{
				[Token(Token = "0x60028E1")]
				[Address(RVA = "0xE84F2C", Offset = "0xE84F2C", VA = "0xE84F2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4080", Offset = "0x8F4080")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0xE84F34", Offset = "0xE84F34", VA = "0xE84F34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4090", Offset = "0x8F4090")]
				set
				{
				}
			}

			[Token(Token = "0x17000545")]
			public string order_id
			{
				[Token(Token = "0x60028E3")]
				[Address(RVA = "0xE84F3C", Offset = "0xE84F3C", VA = "0xE84F3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40A0", Offset = "0x8F40A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0xE84F44", Offset = "0xE84F44", VA = "0xE84F44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40B0", Offset = "0x8F40B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000546")]
			public string subscription_id
			{
				[Token(Token = "0x60028E5")]
				[Address(RVA = "0xE84F4C", Offset = "0xE84F4C", VA = "0xE84F4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40C0", Offset = "0x8F40C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0xE84F54", Offset = "0xE84F54", VA = "0xE84F54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40D0", Offset = "0x8F40D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000547")]
			public string price
			{
				[Token(Token = "0x60028E7")]
				[Address(RVA = "0xE84F5C", Offset = "0xE84F5C", VA = "0xE84F5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40E0", Offset = "0x8F40E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E8")]
				[Address(RVA = "0xE84F64", Offset = "0xE84F64", VA = "0xE84F64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F40F0", Offset = "0x8F40F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000548")]
			public string currency
			{
				[Token(Token = "0x60028E9")]
				[Address(RVA = "0xE84F6C", Offset = "0xE84F6C", VA = "0xE84F6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4100", Offset = "0x8F4100")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0xE84F74", Offset = "0xE84F74", VA = "0xE84F74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4110", Offset = "0x8F4110")]
				set
				{
				}
			}

			[Token(Token = "0x17000549")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x60028EB")]
				[Address(RVA = "0xE84F7C", Offset = "0xE84F7C", VA = "0xE84F7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4120", Offset = "0x8F4120")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0xE84F84", Offset = "0xE84F84", VA = "0xE84F84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4130", Offset = "0x8F4130")]
				set
				{
				}
			}

			[Token(Token = "0x1700054A")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x60028ED")]
				[Address(RVA = "0xE84F8C", Offset = "0xE84F8C", VA = "0xE84F8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4140", Offset = "0x8F4140")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028EE")]
				[Address(RVA = "0xE84F94", Offset = "0xE84F94", VA = "0xE84F94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4150", Offset = "0x8F4150")]
				set
				{
				}
			}

			[Token(Token = "0x1700054B")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x60028EF")]
				[Address(RVA = "0xE84F9C", Offset = "0xE84F9C", VA = "0xE84F9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4160", Offset = "0x8F4160")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F0")]
				[Address(RVA = "0xE84FA4", Offset = "0xE84FA4", VA = "0xE84FA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4170", Offset = "0x8F4170")]
				set
				{
				}
			}

			[Token(Token = "0x1700054C")]
			public int number_of_charge_period
			{
				[Token(Token = "0x60028F1")]
				[Address(RVA = "0xE84FAC", Offset = "0xE84FAC", VA = "0xE84FAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4180", Offset = "0x8F4180")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0xE84FB4", Offset = "0xE84FB4", VA = "0xE84FB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4190", Offset = "0x8F4190")]
				set
				{
				}
			}

			[Token(Token = "0x1700054D")]
			public string plan_id
			{
				[Token(Token = "0x60028F3")]
				[Address(RVA = "0xE84FBC", Offset = "0xE84FBC", VA = "0xE84FBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41A0", Offset = "0x8F41A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0xE84FC4", Offset = "0xE84FC4", VA = "0xE84FC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41B0", Offset = "0x8F41B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700054E")]
			public string plan_name
			{
				[Token(Token = "0x60028F5")]
				[Address(RVA = "0xE84FCC", Offset = "0xE84FCC", VA = "0xE84FCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41C0", Offset = "0x8F41C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F6")]
				[Address(RVA = "0xE84FD4", Offset = "0xE84FD4", VA = "0xE84FD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41D0", Offset = "0x8F41D0")]
				set
				{
				}
			}

			[Token(Token = "0x1700054F")]
			public string status
			{
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0xE84FDC", Offset = "0xE84FDC", VA = "0xE84FDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41E0", Offset = "0x8F41E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0xE84FE4", Offset = "0xE84FE4", VA = "0xE84FE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F41F0", Offset = "0x8F41F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000550")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x60028F9")]
				[Address(RVA = "0xE84FEC", Offset = "0xE84FEC", VA = "0xE84FEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4200", Offset = "0x8F4200")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0xE84FF4", Offset = "0xE84FF4", VA = "0xE84FF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4210", Offset = "0x8F4210")]
				set
				{
				}
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xE84FFC", Offset = "0xE84FFC", VA = "0xE84FFC")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x200063F")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E34F4", Offset = "0x8E34F4")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3504", Offset = "0x8E3504")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3514", Offset = "0x8E3514")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000551")]
			public int statusCode
			{
				[Token(Token = "0x60028FC")]
				[Address(RVA = "0xE84E84", Offset = "0xE84E84", VA = "0xE84E84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4220", Offset = "0x8F4220")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028FD")]
				[Address(RVA = "0xE84E8C", Offset = "0xE84E8C", VA = "0xE84E8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4230", Offset = "0x8F4230")]
				set
				{
				}
			}

			[Token(Token = "0x17000552")]
			public string message
			{
				[Token(Token = "0x60028FE")]
				[Address(RVA = "0xE84E94", Offset = "0xE84E94", VA = "0xE84E94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4240", Offset = "0x8F4240")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028FF")]
				[Address(RVA = "0xE84E9C", Offset = "0xE84E9C", VA = "0xE84E9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4250", Offset = "0x8F4250")]
				set
				{
				}
			}

			[Token(Token = "0x17000553")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0xE84EA4", Offset = "0xE84EA4", VA = "0xE84EA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4260", Offset = "0x8F4260")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002901")]
				[Address(RVA = "0xE84EAC", Offset = "0xE84EAC", VA = "0xE84EAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4270", Offset = "0x8F4270")]
				set
				{
				}
			}

			[Token(Token = "0x6002902")]
			[Address(RVA = "0xE84EB4", Offset = "0xE84EB4", VA = "0xE84EB4")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xFBE43C", Offset = "0xFBE43C", VA = "0xFBE43C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F38A0", Offset = "0x8F38A0")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xFBEBF8", Offset = "0xFBEBF8", VA = "0xFBEBF8")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xFBE4A8", Offset = "0xFBE4A8", VA = "0xFBE4A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3900", Offset = "0x8F3900")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xFBEE9C", Offset = "0xFBEE9C", VA = "0xFBEE9C")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xFBE514", Offset = "0xFBE514", VA = "0xFBE514")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3960", Offset = "0x8F3960")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xFBF12C", Offset = "0xFBF12C", VA = "0xFBF12C")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0xFBE580", Offset = "0xFBE580", VA = "0xFBE580")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F39C0", Offset = "0x8F39C0")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xFBF3FC", Offset = "0xFBF3FC", VA = "0xFBF3FC")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xFBE5EC", Offset = "0xFBE5EC", VA = "0xFBE5EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3A20", Offset = "0x8F3A20")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xFBF68C", Offset = "0xFBF68C", VA = "0xFBF68C")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xFBE658", Offset = "0xFBE658", VA = "0xFBE658")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3A80", Offset = "0x8F3A80")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xFBF91C", Offset = "0xFBF91C", VA = "0xFBF91C")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xFBE6C4", Offset = "0xFBE6C4", VA = "0xFBE6C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3AE0", Offset = "0x8F3AE0")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xFBFB5C", Offset = "0xFBFB5C", VA = "0xFBFB5C")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0xFBE730", Offset = "0xFBE730", VA = "0xFBE730")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3B40", Offset = "0x8F3B40")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xFBFD9C", Offset = "0xFBFD9C", VA = "0xFBFD9C")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xFBE79C", Offset = "0xFBE79C", VA = "0xFBE79C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3BA0", Offset = "0x8F3BA0")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0xFC0234", Offset = "0xFC0234", VA = "0xFC0234")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0xFBE808", Offset = "0xFBE808", VA = "0xFBE808")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3C00", Offset = "0x8F3C00")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0xFC04C4", Offset = "0xFC04C4", VA = "0xFC04C4")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0xFBE874", Offset = "0xFBE874", VA = "0xFBE874")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3C60", Offset = "0x8F3C60")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xFC0754", Offset = "0xFC0754", VA = "0xFC0754")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0xFBE8E0", Offset = "0xFBE8E0", VA = "0xFBE8E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3CC0", Offset = "0x8F3CC0")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xFC09E4", Offset = "0xFC09E4", VA = "0xFC09E4")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xFBE94C", Offset = "0xFBE94C", VA = "0xFBE94C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F3D20", Offset = "0x8F3D20")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xFC0C24", Offset = "0xFC0C24", VA = "0xFC0C24")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0xFC0EB4", Offset = "0xFC0EB4", VA = "0xFC0EB4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public class DLC
	{
		[Token(Token = "0x6002903")]
		[Address(RVA = "0xF19014", Offset = "0xF19014", VA = "0xF19014")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public class Subscription
	{
		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x11F89C0", Offset = "0x11F89C0", VA = "0x11F89C0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F4280", Offset = "0x8F4280")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x11F8A2C", Offset = "0x11F8A2C", VA = "0x11F8A2C")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x11F8D4C", Offset = "0x11F8D4C", VA = "0x11F8D4C")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x11F92F0", Offset = "0x11F92F0", VA = "0x11F92F0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000642")]
	public class Deeplink
	{
		[Token(Token = "0x2000643")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6002910")]
			public abstract void OnSuccess();

			[Token(Token = "0x6002911")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002912")]
			[Address(RVA = "0xE76A68", Offset = "0xE76A68", VA = "0xE76A68")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001FBB")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x6002908")]
		[Address(RVA = "0xF2D8DC", Offset = "0xF2D8DC", VA = "0xF2D8DC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F42E0", Offset = "0x8F42E0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0xF2D93C", Offset = "0xF2D93C", VA = "0xF2D93C")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xF2DBF4", Offset = "0xF2DBF4", VA = "0xF2DBF4")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0xF2DE50", Offset = "0xF2DE50", VA = "0xF2DE50")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xF2DEE4", Offset = "0xF2DEE4", VA = "0xF2DEE4")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0xF2E0D0", Offset = "0xF2E0D0", VA = "0xF2E0D0")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xF2E32C", Offset = "0xF2E32C", VA = "0xF2E32C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xF2E430", Offset = "0xF2E430", VA = "0xF2E430")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000644")]
	internal class Token
	{
		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x10B7A88", Offset = "0x10B7A88", VA = "0x10B7A88")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F4340", Offset = "0x8F4340")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x10B7B58", Offset = "0x10B7B58", VA = "0x10B7B58")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0x10B7AE8", Offset = "0x10B7AE8", VA = "0x10B7AE8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8F43A0", Offset = "0x8F43A0")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x10B7E54", Offset = "0x10B7E54", VA = "0x10B7E54")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x10B8150", Offset = "0x10B8150", VA = "0x10B8150")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000645")]
	internal class Ads
	{
		[Token(Token = "0x6002918")]
		[Address(RVA = "0x138C358", Offset = "0x138C358", VA = "0x138C358")]
		public Ads()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D7E30", Offset = "0x8D7E30")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D7E44", Offset = "0x8D7E44")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D7E58", Offset = "0x8D7E58")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D7E6C", Offset = "0x8D7E6C")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200064A")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001FC4")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001FC5")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001FC6")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001FC7")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200064B")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001FC9")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001FCA")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001FCB")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001FCC")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x200064C")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001FCE")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001FCF")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001FD0")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x200064D")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001FD2")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001FD3")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001FD4")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001FD5")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200064E")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001FD7")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001FD8")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001FD9")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200064F")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4001FDB")]
		UNKNOWN,
		[Token(Token = "0x4001FDC")]
		PAID,
		[Token(Token = "0x4001FDD")]
		REDEEM,
		[Token(Token = "0x4001FDE")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000650")]
	internal enum ELocale
	{
		[Token(Token = "0x4001FE0")]
		k_ELocaleUS,
		[Token(Token = "0x4001FE1")]
		k_ELocaleDE,
		[Token(Token = "0x4001FE2")]
		k_ELocaleJP,
		[Token(Token = "0x4001FE3")]
		k_ELocaleKR,
		[Token(Token = "0x4001FE4")]
		k_ELocaleRU,
		[Token(Token = "0x4001FE5")]
		k_ELocaleCN,
		[Token(Token = "0x4001FE6")]
		k_ELocaleTW,
		[Token(Token = "0x4001FE7")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000651")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001FE9")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001FEA")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001FEB")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000652")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8D7E80", Offset = "0x8D7E80")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000654")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000655")]
	internal class Api
	{
		[Token(Token = "0x2000656")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002932")]
			[Address(RVA = "0xFFCE80", Offset = "0xFFCE80", VA = "0xFFCE80")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002933")]
			[Address(RVA = "0xFFCF18", Offset = "0xFFCF18", VA = "0xFFCF18")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0xFFD030", Offset = "0xFFD030", VA = "0xFFD030")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x149D8E4", Offset = "0x149D8E4", VA = "0x149D8E4")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x149DC0C", Offset = "0x149DC0C", VA = "0x149DC0C")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x149DDE0", Offset = "0x149DDE0", VA = "0x149DDE0")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x149D574", Offset = "0x149D574", VA = "0x149D574")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x149E128", Offset = "0x149E128", VA = "0x149E128")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000657")]
	internal class User
	{
		[Token(Token = "0x6002935")]
		[Address(RVA = "0xEA0A24", Offset = "0xEA0A24", VA = "0xEA0A24")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xEA0BAC", Offset = "0xEA0BAC", VA = "0xEA0BAC")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xEA0CD0", Offset = "0xEA0CD0", VA = "0xEA0CD0")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0xEA0DF4", Offset = "0xEA0DF4", VA = "0xEA0DF4")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xEA0EFC", Offset = "0xEA0EFC", VA = "0xEA0EFC")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000658")]
	internal class UserStats
	{
		[Token(Token = "0x600293A")]
		[Address(RVA = "0xEA24FC", Offset = "0xEA24FC", VA = "0xEA24FC")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xEA2804", Offset = "0xEA2804", VA = "0xEA2804")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xEA30BC", Offset = "0xEA30BC", VA = "0xEA30BC")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xEA2C44", Offset = "0xEA2C44", VA = "0xEA2C44")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xEA2DAC", Offset = "0xEA2DAC", VA = "0xEA2DAC")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xEA296C", Offset = "0xEA296C", VA = "0xEA296C")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xEA2AD4", Offset = "0xEA2AD4", VA = "0xEA2AD4")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xEA3224", Offset = "0xEA3224", VA = "0xEA3224")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xEA3320", Offset = "0xEA3320", VA = "0xEA3320")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xEA3834", Offset = "0xEA3834", VA = "0xEA3834")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xEA3930", Offset = "0xEA3930", VA = "0xEA3930")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xEA3518", Offset = "0xEA3518", VA = "0xEA3518")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xEA3680", Offset = "0xEA3680", VA = "0xEA3680")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xEA341C", Offset = "0xEA341C", VA = "0xEA341C")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xEA3C0C", Offset = "0xEA3C0C", VA = "0xEA3C0C")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xEA40CC", Offset = "0xEA40CC", VA = "0xEA40CC")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xEA42E0", Offset = "0xEA42E0", VA = "0xEA42E0")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xEA45A4", Offset = "0xEA45A4", VA = "0xEA45A4")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xEA46BC", Offset = "0xEA46BC", VA = "0xEA46BC")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0xEA47D4", Offset = "0xEA47D4", VA = "0xEA47D4")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xEA48F0", Offset = "0xEA48F0", VA = "0xEA48F0")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000659")]
	internal class Deeplink
	{
		[Token(Token = "0x200065A")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002955")]
			[Address(RVA = "0xE76A70", Offset = "0xE76A70", VA = "0xE76A70")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002956")]
			[Address(RVA = "0xE76B08", Offset = "0xE76B08", VA = "0xE76B08")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002957")]
			[Address(RVA = "0xE76BA0", Offset = "0xE76BA0", VA = "0xE76BA0")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xF2DAE0", Offset = "0xF2DAE0", VA = "0xF2DAE0")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xF2DC88", Offset = "0xF2DC88", VA = "0xF2DC88")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xF2DF40", Offset = "0xF2DF40", VA = "0xF2DF40")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xF2E164", Offset = "0xF2E164", VA = "0xF2E164")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xF2E330", Offset = "0xF2E330", VA = "0xF2E330")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xF2E438", Offset = "0xF2E438", VA = "0xF2E438")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x200065B")]
	internal class IAPurchase
	{
		[Token(Token = "0x6002958")]
		[Address(RVA = "0xFBED0C", Offset = "0xFBED0C", VA = "0xFBED0C")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xFBEF9C", Offset = "0xFBEF9C", VA = "0xFBEF9C")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xFBF234", Offset = "0xFBF234", VA = "0xFBF234")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xFBF4FC", Offset = "0xFBF4FC", VA = "0xFBF4FC")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xFBF78C", Offset = "0xFBF78C", VA = "0xFBF78C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xFBFA0C", Offset = "0xFBFA0C", VA = "0xFBFA0C")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xFBFC4C", Offset = "0xFBFC4C", VA = "0xFBFC4C")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xFBFEE4", Offset = "0xFBFEE4", VA = "0xFBFEE4")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xFC0334", Offset = "0xFC0334", VA = "0xFC0334")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xFC05C4", Offset = "0xFC05C4", VA = "0xFC05C4")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xFC0854", Offset = "0xFC0854", VA = "0xFC0854")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0xFC0AD4", Offset = "0xFC0AD4", VA = "0xFC0AD4")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xFC0D24", Offset = "0xFC0D24", VA = "0xFC0D24")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xFC0EBC", Offset = "0xFC0EBC", VA = "0xFC0EBC")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200065C")]
	internal class Subscription
	{
		[Token(Token = "0x6002966")]
		[Address(RVA = "0x11F8BF4", Offset = "0x11F8BF4", VA = "0x11F8BF4")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x11F8EE0", Offset = "0x11F8EE0", VA = "0x11F8EE0")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x11F8FF4", Offset = "0x11F8FF4", VA = "0x11F8FF4")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x11F9108", Offset = "0x11F9108", VA = "0x11F9108")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x11F92F8", Offset = "0x11F92F8", VA = "0x11F92F8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200065D")]
	internal class Token
	{
		[Token(Token = "0x600296B")]
		[Address(RVA = "0x10B7CFC", Offset = "0x10B7CFC", VA = "0x10B7CFC")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x10B7FF8", Offset = "0x10B7FF8", VA = "0x10B7FF8")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x10B8158", Offset = "0x10B8158", VA = "0x10B8158")]
		public Token()
		{
		}
	}
	[Token(Token = "0x200065E")]
	internal class Android
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000554")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0x149831C", Offset = "0x149831C", VA = "0x149831C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000555")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6002976")]
			[Address(RVA = "0x14983CC", Offset = "0x14983CC", VA = "0x14983CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0x1498434", Offset = "0x1498434", VA = "0x1498434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x14979D0", Offset = "0x14979D0", VA = "0x14979D0")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x1497B24", Offset = "0x1497B24", VA = "0x1497B24")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x1497C78", Offset = "0x1497C78", VA = "0x1497C78")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x1497DCC", Offset = "0x1497DCC", VA = "0x1497DCC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x1497F20", Offset = "0x1497F20", VA = "0x1497F20")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x1498074", Offset = "0x1498074", VA = "0x1498074")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x14981C8", Offset = "0x14981C8", VA = "0x14981C8")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x1498438", Offset = "0x1498438", VA = "0x1498438")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200065F")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1498440", Offset = "0x1498440", VA = "0x1498440")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x14984D8", Offset = "0x14984D8", VA = "0x14984D8")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1498570", Offset = "0x1498570", VA = "0x1498570")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1498608", Offset = "0x1498608", VA = "0x1498608")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000660")]
	internal class Session
	{
		[Token(Token = "0x600297D")]
		[Address(RVA = "0xEDEB3C", Offset = "0xEDEB3C", VA = "0xEDEB3C")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000661")]
	public class Logger
	{
		[Token(Token = "0x4001FFE")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x177A6CC", Offset = "0x177A6CC", VA = "0x177A6CC")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x177AB60", Offset = "0x177AB60", VA = "0x177AB60")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x177A798", Offset = "0x177A798", VA = "0x177A798")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x177AC04", Offset = "0x177AC04", VA = "0x177AC04")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x177AD6C", Offset = "0x177AD6C", VA = "0x177AD6C")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000662")]
	public enum JsonType
	{
		[Token(Token = "0x4002003")]
		None,
		[Token(Token = "0x4002004")]
		Object,
		[Token(Token = "0x4002005")]
		Array,
		[Token(Token = "0x4002006")]
		String,
		[Token(Token = "0x4002007")]
		Int,
		[Token(Token = "0x4002008")]
		Long,
		[Token(Token = "0x4002009")]
		Double,
		[Token(Token = "0x400200A")]
		Boolean
	}
	[Token(Token = "0x2000663")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000557")]
		bool IsArray
		{
			[Token(Token = "0x6002984")]
			get;
		}

		[Token(Token = "0x17000558")]
		bool IsBoolean
		{
			[Token(Token = "0x6002985")]
			get;
		}

		[Token(Token = "0x17000559")]
		bool IsDouble
		{
			[Token(Token = "0x6002986")]
			get;
		}

		[Token(Token = "0x1700055A")]
		bool IsInt
		{
			[Token(Token = "0x6002987")]
			get;
		}

		[Token(Token = "0x1700055B")]
		bool IsLong
		{
			[Token(Token = "0x6002988")]
			get;
		}

		[Token(Token = "0x1700055C")]
		bool IsObject
		{
			[Token(Token = "0x6002989")]
			get;
		}

		[Token(Token = "0x1700055D")]
		bool IsString
		{
			[Token(Token = "0x600298A")]
			get;
		}

		[Token(Token = "0x600298B")]
		bool GetBoolean();

		[Token(Token = "0x600298C")]
		double GetDouble();

		[Token(Token = "0x600298D")]
		int GetInt();

		[Token(Token = "0x600298E")]
		JsonType GetJsonType();

		[Token(Token = "0x600298F")]
		long GetLong();

		[Token(Token = "0x6002990")]
		string GetString();

		[Token(Token = "0x6002991")]
		void SetBoolean(bool val);

		[Token(Token = "0x6002992")]
		void SetDouble(double val);

		[Token(Token = "0x6002993")]
		void SetInt(int val);

		[Token(Token = "0x6002994")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6002995")]
		void SetLong(long val);

		[Token(Token = "0x6002996")]
		void SetString(string val);

		[Token(Token = "0x6002997")]
		string ToJson();

		[Token(Token = "0x6002998")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000664")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D7E94", Offset = "0x8D7E94")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x1700055E")]
		public int Count
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x114CEE0", Offset = "0x114CEE0", VA = "0x114CEE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700055F")]
		public bool IsArray
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x114D06C", Offset = "0x114D06C", VA = "0x114D06C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000560")]
		public bool IsBoolean
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x114D07C", Offset = "0x114D07C", VA = "0x114D07C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000561")]
		public bool IsDouble
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0x114D08C", Offset = "0x114D08C", VA = "0x114D08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000562")]
		public bool IsInt
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x114D09C", Offset = "0x114D09C", VA = "0x114D09C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000563")]
		public bool IsLong
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x114D0AC", Offset = "0x114D0AC", VA = "0x114D0AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000564")]
		public bool IsObject
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x114D0BC", Offset = "0x114D0BC", VA = "0x114D0BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000565")]
		public bool IsString
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x114D0CC", Offset = "0x114D0CC", VA = "0x114D0CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000566")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x114D0DC", Offset = "0x114D0DC", VA = "0x114D0DC", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000567")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x114D0E0", Offset = "0x114D0E0", VA = "0x114D0E0", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000568")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x114D198", Offset = "0x114D198", VA = "0x114D198", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000569")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x114D250", Offset = "0x114D250", VA = "0x114D250", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056A")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x114D470", Offset = "0x114D470", VA = "0x114D470", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056B")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x114D528", Offset = "0x114D528", VA = "0x114D528", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x114D8F0", Offset = "0x114D8F0", VA = "0x114D8F0", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056D")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x114DCB8", Offset = "0x114DCB8", VA = "0x114DCB8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056E")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x114DCC8", Offset = "0x114DCC8", VA = "0x114DCC8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056F")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x114DCD8", Offset = "0x114DCD8", VA = "0x114DCD8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000570")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x114DCE8", Offset = "0x114DCE8", VA = "0x114DCE8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000571")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x114DCF8", Offset = "0x114DCF8", VA = "0x114DCF8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000572")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x114DD08", Offset = "0x114DD08", VA = "0x114DD08", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000573")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x114DD18", Offset = "0x114DD18", VA = "0x114DD18", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000574")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x114DD28", Offset = "0x114DD28", VA = "0x114DD28", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000575")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x114DEFC", Offset = "0x114DEFC", VA = "0x114DEFC", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000576")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x114DFB4", Offset = "0x114DFB4", VA = "0x114DFB4", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x114E078", Offset = "0x114E078", VA = "0x114E078", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000577")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x114E5C0", Offset = "0x114E5C0", VA = "0x114E5C0", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x114E698", Offset = "0x114E698", VA = "0x114E698", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000578")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x114E8C0", Offset = "0x114E8C0", VA = "0x114E8C0", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x114E984", Offset = "0x114E984", VA = "0x114E984", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000579")]
		public JsonData Item
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x114EC94", Offset = "0x114EC94", VA = "0x114EC94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x114E1EC", Offset = "0x114E1EC", VA = "0x114E1EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700057A")]
		public JsonData Item
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x114ED58", Offset = "0x114ED58", VA = "0x114ED58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x114E9C8", Offset = "0x114E9C8", VA = "0x114E9C8")]
			set
			{
			}
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x114EEC8", Offset = "0x114EEC8", VA = "0x114EEC8")]
		public JsonData()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x114EED0", Offset = "0x114EED0", VA = "0x114EED0")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x114EF08", Offset = "0x114EF08", VA = "0x114EF08")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x114EF44", Offset = "0x114EF44", VA = "0x114EF44")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x114EF78", Offset = "0x114EF78", VA = "0x114EF78")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x114EFAC", Offset = "0x114EFAC", VA = "0x114EFAC")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x114F1E0", Offset = "0x114F1E0", VA = "0x114F1E0")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x114F21C", Offset = "0x114F21C", VA = "0x114F21C")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x114F288", Offset = "0x114F288", VA = "0x114F288")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x114F2F8", Offset = "0x114F2F8", VA = "0x114F2F8")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x114F360", Offset = "0x114F360", VA = "0x114F360")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x114F3C8", Offset = "0x114F3C8", VA = "0x114F3C8")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x114F43C", Offset = "0x114F43C", VA = "0x114F43C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x114F4B4", Offset = "0x114F4B4", VA = "0x114F4B4")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x114F52C", Offset = "0x114F52C", VA = "0x114F52C")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x114F5A4", Offset = "0x114F5A4", VA = "0x114F5A4")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x114F61C", Offset = "0x114F61C", VA = "0x114F61C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x114F694", Offset = "0x114F694", VA = "0x114F694", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x114F760", Offset = "0x114F760", VA = "0x114F760", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x114F940", Offset = "0x114F940", VA = "0x114F940", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x114FA88", Offset = "0x114FA88", VA = "0x114FA88", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x114FB50", Offset = "0x114FB50", VA = "0x114FB50", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x114FBF4", Offset = "0x114FBF4", VA = "0x114FBF4", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x114FEAC", Offset = "0x114FEAC", VA = "0x114FEAC", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x114FF60", Offset = "0x114FF60", VA = "0x114FF60", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x114FFC8", Offset = "0x114FFC8", VA = "0x114FFC8", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x1150030", Offset = "0x1150030", VA = "0x1150030", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x1150098", Offset = "0x1150098", VA = "0x1150098", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x1150100", Offset = "0x1150100", VA = "0x1150100", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x1150168", Offset = "0x1150168", VA = "0x1150168", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x1150184", Offset = "0x1150184", VA = "0x1150184", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x115019C", Offset = "0x115019C", VA = "0x115019C", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x11501B4", Offset = "0x11501B4", VA = "0x11501B4", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x11501CC", Offset = "0x11501CC", VA = "0x11501CC", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x1150204", Offset = "0x1150204", VA = "0x1150204", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x11502DC", Offset = "0x11502DC", VA = "0x11502DC", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x1150314", Offset = "0x1150314", VA = "0x1150314", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x11503FC", Offset = "0x11503FC", VA = "0x11503FC", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x11504C4", Offset = "0x11504C4", VA = "0x11504C4", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x115058C", Offset = "0x115058C", VA = "0x115058C", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x1150654", Offset = "0x1150654", VA = "0x1150654", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1150734", Offset = "0x1150734", VA = "0x1150734", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x115080C", Offset = "0x115080C", VA = "0x115080C", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x11508E4", Offset = "0x11508E4", VA = "0x11508E4", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x11509D4", Offset = "0x11509D4", VA = "0x11509D4", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x1150B34", Offset = "0x1150B34", VA = "0x1150B34", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x114CF98", Offset = "0x114CF98", VA = "0x114CF98")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x114D308", Offset = "0x114D308", VA = "0x114D308")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x114DDE0", Offset = "0x114DDE0", VA = "0x114DDE0")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x114E154", Offset = "0x114E154", VA = "0x114E154")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x1150D04", Offset = "0x1150D04", VA = "0x1150D04")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x1150318", Offset = "0x1150318", VA = "0x1150318")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x11521BC", Offset = "0x11521BC", VA = "0x11521BC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x11522E0", Offset = "0x11522E0", VA = "0x11522E0", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x11523CC", Offset = "0x11523CC", VA = "0x11523CC", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x11523D4", Offset = "0x11523D4", VA = "0x11523D4", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x1150208", Offset = "0x1150208", VA = "0x1150208")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x11502E0", Offset = "0x11502E0", VA = "0x11502E0")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x11525DC", Offset = "0x11525DC", VA = "0x11525DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000665")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x1700057B")]
		public object Current
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xEC5354", Offset = "0xEC5354", VA = "0xEC5354", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0xEC53BC", Offset = "0xEC53BC", VA = "0xEC53BC", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700057D")]
		public object Key
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xEC54B0", Offset = "0xEC54B0", VA = "0xEC54B0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		public object Value
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0xEC5568", Offset = "0xEC5568", VA = "0xEC5568", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xEC5628", Offset = "0xEC5628", VA = "0xEC5628")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xEC565C", Offset = "0xEC565C", VA = "0xEC565C", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xEC5708", Offset = "0xEC5708", VA = "0xEC5708", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x11526D0", Offset = "0x11526D0", VA = "0x11526D0")]
		public JsonException()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x11526D8", Offset = "0x11526D8", VA = "0x11526D8")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1152770", Offset = "0x1152770", VA = "0x1152770")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1152818", Offset = "0x1152818", VA = "0x1152818")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x11528B0", Offset = "0x11528B0", VA = "0x11528B0")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x1152958", Offset = "0x1152958", VA = "0x1152958")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x1152960", Offset = "0x1152960", VA = "0x1152960")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000667")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000668")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x1700057F")]
		public Type ElementType
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x14A3338", Offset = "0x14A3338", VA = "0x14A3338")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x14A3400", Offset = "0x14A3400", VA = "0x14A3400")]
			set
			{
			}
		}

		[Token(Token = "0x17000580")]
		public bool IsArray
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x14A3408", Offset = "0x14A3408", VA = "0x14A3408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x14A3410", Offset = "0x14A3410", VA = "0x14A3410")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public bool IsList
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x14A341C", Offset = "0x14A341C", VA = "0x14A341C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x14A3424", Offset = "0x14A3424", VA = "0x14A3424")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000669")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000582")]
		public Type ElementType
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0xEC0CF4", Offset = "0xEC0CF4", VA = "0xEC0CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0xEC0DBC", Offset = "0xEC0DBC", VA = "0xEC0DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public bool IsDictionary
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0xEC0DC4", Offset = "0xEC0DC4", VA = "0xEC0DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0xEC0DCC", Offset = "0xEC0DCC", VA = "0xEC0DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000584")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0xEC0DD8", Offset = "0xEC0DD8", VA = "0xEC0DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0xEC0DE0", Offset = "0xEC0DE0", VA = "0xEC0DE0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200066A")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x200066B")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200066C")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200066D")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200066E")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200066F")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7ECC", Offset = "0x8D7ECC")]
		private sealed class <>c
		{
			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0xE887F8", Offset = "0xE887F8", VA = "0xE887F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xE88800", Offset = "0xE88800", VA = "0xE88800")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A41")]
			[Address(RVA = "0xE888C4", Offset = "0xE888C4", VA = "0xE888C4")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xE88988", Offset = "0xE88988", VA = "0xE88988")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A43")]
			[Address(RVA = "0xE88A8C", Offset = "0xE88A8C", VA = "0xE88A8C")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xE88B18", Offset = "0xE88B18", VA = "0xE88B18")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A45")]
			[Address(RVA = "0xE88BDC", Offset = "0xE88BDC", VA = "0xE88BDC")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xE88CA0", Offset = "0xE88CA0", VA = "0xE88CA0")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A47")]
			[Address(RVA = "0xE88D64", Offset = "0xE88D64", VA = "0xE88D64")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xE88E28", Offset = "0xE88E28", VA = "0xE88E28")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A49")]
			[Address(RVA = "0xE88EB4", Offset = "0xE88EB4", VA = "0xE88EB4")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xE88F44", Offset = "0xE88F44", VA = "0xE88F44")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0xE8901C", Offset = "0xE8901C", VA = "0xE8901C")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xE890F4", Offset = "0xE890F4", VA = "0xE890F4")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0xE891CC", Offset = "0xE891CC", VA = "0xE891CC")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xE892A4", Offset = "0xE892A4", VA = "0xE892A4")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0xE8937C", Offset = "0xE8937C", VA = "0xE8937C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xE89454", Offset = "0xE89454", VA = "0xE89454")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A51")]
			[Address(RVA = "0xE89528", Offset = "0xE89528", VA = "0xE89528")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0xE89600", Offset = "0xE89600", VA = "0xE89600")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A53")]
			[Address(RVA = "0xE896D4", Offset = "0xE896D4", VA = "0xE896D4")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xE897AC", Offset = "0xE897AC", VA = "0xE897AC")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A55")]
			[Address(RVA = "0xE89884", Offset = "0xE89884", VA = "0xE89884")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xE89954", Offset = "0xE89954", VA = "0xE89954")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002A57")]
			[Address(RVA = "0xE89A64", Offset = "0xE89A64", VA = "0xE89A64")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xE89ABC", Offset = "0xE89ABC", VA = "0xE89ABC")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0xE89B14", Offset = "0xE89B14", VA = "0xE89B14")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EDC", Offset = "0x8D7EDC")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6002A5A")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002A5B")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7EEC", Offset = "0x8D7EEC")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002A5C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002A5D")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x1152968", Offset = "0x1152968", VA = "0x1152968")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x1154C24", Offset = "0x1154C24", VA = "0x1154C24")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x1155104", Offset = "0x1155104", VA = "0x1155104")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x11558E4", Offset = "0x11558E4", VA = "0x11558E4")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x1155E9C", Offset = "0x1155E9C", VA = "0x1155E9C")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x115682C", Offset = "0x115682C", VA = "0x115682C")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x1157CFC", Offset = "0x1157CFC", VA = "0x1157CFC")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x1152E14", Offset = "0x1152E14", VA = "0x1152E14")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x1153D14", Offset = "0x1153D14", VA = "0x1153D14")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x11583EC", Offset = "0x11583EC", VA = "0x11583EC")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x1158650", Offset = "0x1158650", VA = "0x1158650")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x1159CCC", Offset = "0x1159CCC", VA = "0x1159CCC")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x1159F58", Offset = "0x1159F58", VA = "0x1159F58")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x1159FD0", Offset = "0x1159FD0", VA = "0x1159FD0")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x115A1AC", Offset = "0x115A1AC", VA = "0x115A1AC")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x115A34C", Offset = "0x115A34C", VA = "0x115A34C")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A35")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A36")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x115A13C", Offset = "0x115A13C", VA = "0x115A13C")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x115A4B8", Offset = "0x115A4B8", VA = "0x115A4B8")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6002A39")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6002A3A")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x115A5C4", Offset = "0x115A5C4", VA = "0x115A5C4")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x115A6A4", Offset = "0x115A6A4", VA = "0x115A6A4")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x115A784", Offset = "0x115A784", VA = "0x115A784")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000673")]
	public enum JsonToken
	{
		[Token(Token = "0x400204D")]
		None,
		[Token(Token = "0x400204E")]
		ObjectStart,
		[Token(Token = "0x400204F")]
		PropertyName,
		[Token(Token = "0x4002050")]
		ObjectEnd,
		[Token(Token = "0x4002051")]
		ArrayStart,
		[Token(Token = "0x4002052")]
		ArrayEnd,
		[Token(Token = "0x4002053")]
		Int,
		[Token(Token = "0x4002054")]
		Long,
		[Token(Token = "0x4002055")]
		Double,
		[Token(Token = "0x4002056")]
		String,
		[Token(Token = "0x4002057")]
		Boolean,
		[Token(Token = "0x4002058")]
		Null
	}
	[Token(Token = "0x2000674")]
	public class JsonReader
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000585")]
		public bool AllowComments
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x115A78C", Offset = "0x115A78C", VA = "0x115A78C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x115A7A8", Offset = "0x115A7A8", VA = "0x115A7A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000586")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x115A7C8", Offset = "0x115A7C8", VA = "0x115A7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x115A7E4", Offset = "0x115A7E4", VA = "0x115A7E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000587")]
		public bool EndOfInput
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x115A804", Offset = "0x115A804", VA = "0x115A804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000588")]
		public bool EndOfJson
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x115A80C", Offset = "0x115A80C", VA = "0x115A80C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000589")]
		public JsonToken Token
		{
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x115A814", Offset = "0x115A814", VA = "0x115A814")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x1700058A")]
		public object Value
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x115A81C", Offset = "0x115A81C", VA = "0x115A81C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x115A824", Offset = "0x115A824", VA = "0x115A824")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x115A550", Offset = "0x115A550", VA = "0x115A550")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x115A344", Offset = "0x115A344", VA = "0x115A344")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x115AF0C", Offset = "0x115AF0C", VA = "0x115AF0C")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x115A828", Offset = "0x115A828", VA = "0x115A828")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x115B1D8", Offset = "0x115B1D8", VA = "0x115B1D8")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x115B0A8", Offset = "0x115B0A8", VA = "0x115B0A8")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x115B354", Offset = "0x115B354", VA = "0x115B354")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x115B4F4", Offset = "0x115B4F4", VA = "0x115B4F4")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x115B6B8", Offset = "0x115B6B8", VA = "0x115B6B8")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x115B71C", Offset = "0x115B71C", VA = "0x115B71C")]
		public void Close()
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x1157868", Offset = "0x1157868", VA = "0x1157868")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000675")]
	internal enum Condition
	{
		[Token(Token = "0x4002068")]
		InArray,
		[Token(Token = "0x4002069")]
		InObject,
		[Token(Token = "0x400206A")]
		NotAProperty,
		[Token(Token = "0x400206B")]
		Property,
		[Token(Token = "0x400206C")]
		Value
	}
	[Token(Token = "0x2000676")]
	internal class WriterContext
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x1401498", Offset = "0x1401498", VA = "0x1401498")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class JsonWriter
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x1700058B")]
		public int IndentValue
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x115B780", Offset = "0x115B780", VA = "0x115B780")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x115B788", Offset = "0x115B788", VA = "0x115B788")]
			set
			{
			}
		}

		[Token(Token = "0x1700058C")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x115B79C", Offset = "0x115B79C", VA = "0x115B79C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x115B7A4", Offset = "0x115B7A4", VA = "0x115B7A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700058D")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x115B7B0", Offset = "0x115B7B0", VA = "0x115B7B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058E")]
		public bool Validate
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x115B7B8", Offset = "0x115B7B8", VA = "0x115B7B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x115B7C0", Offset = "0x115B7C0", VA = "0x115B7C0")]
			set
			{
			}
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x115B7CC", Offset = "0x115B7CC", VA = "0x115B7CC")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1152D54", Offset = "0x1152D54", VA = "0x1152D54")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x115B958", Offset = "0x115B958", VA = "0x115B958")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1152554", Offset = "0x1152554", VA = "0x1152554")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x115B9C8", Offset = "0x115B9C8", VA = "0x115B9C8")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x115B828", Offset = "0x115B828", VA = "0x115B828")]
		private void Init()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x115BB8C", Offset = "0x115BB8C", VA = "0x115BB8C")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x115BC14", Offset = "0x115BC14", VA = "0x115BC14")]
		private void Indent()
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x115BC2C", Offset = "0x115BC2C", VA = "0x115BC2C")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x115BCC0", Offset = "0x115BCC0", VA = "0x115BCC0")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x115BCC8", Offset = "0x115BCC8", VA = "0x115BCC8")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x115BD58", Offset = "0x115BD58", VA = "0x115BD58")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x115C054", Offset = "0x115C054", VA = "0x115C054")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x115C06C", Offset = "0x115C06C", VA = "0x115C06C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x1159E5C", Offset = "0x1159E5C", VA = "0x1159E5C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x11518D8", Offset = "0x11518D8", VA = "0x11518D8")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x115C0D8", Offset = "0x115C0D8", VA = "0x115C0D8")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x115197C", Offset = "0x115197C", VA = "0x115197C")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1151ACC", Offset = "0x1151ACC", VA = "0x1151ACC")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1151BB4", Offset = "0x1151BB4", VA = "0x1151BB4")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1151840", Offset = "0x1151840", VA = "0x1151840")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1159BE4", Offset = "0x1159BE4", VA = "0x1159BE4")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1151D94", Offset = "0x1151D94", VA = "0x1151D94")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1151C9C", Offset = "0x1151C9C", VA = "0x1151C9C")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x11520B8", Offset = "0x11520B8", VA = "0x11520B8")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x1151E98", Offset = "0x1151E98", VA = "0x1151E98")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x1151F90", Offset = "0x1151F90", VA = "0x1151F90")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000678")]
	internal class FsmContext
	{
		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x11C31D0", Offset = "0x11C31D0", VA = "0x11C31D0")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000679")]
	internal class Lexer
	{
		[Token(Token = "0x200067A")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x1700058F")]
		public bool AllowComments
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x1772950", Offset = "0x1772950", VA = "0x1772950")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x1772958", Offset = "0x1772958", VA = "0x1772958")]
			set
			{
			}
		}

		[Token(Token = "0x17000590")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x1772964", Offset = "0x1772964", VA = "0x1772964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x177296C", Offset = "0x177296C", VA = "0x177296C")]
			set
			{
			}
		}

		[Token(Token = "0x17000591")]
		public bool EndOfInput
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x1772978", Offset = "0x1772978", VA = "0x1772978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000592")]
		public int Token
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x1772980", Offset = "0x1772980", VA = "0x1772980")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000593")]
		public string StringValue
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x1772988", Offset = "0x1772988", VA = "0x1772988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x1772990", Offset = "0x1772990", VA = "0x1772990")]
		static Lexer()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x17735A8", Offset = "0x17735A8", VA = "0x17735A8")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x17736A4", Offset = "0x17736A4", VA = "0x17736A4")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x1772994", Offset = "0x1772994", VA = "0x1772994")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x1773720", Offset = "0x1773720", VA = "0x1773720")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x177381C", Offset = "0x177381C", VA = "0x177381C")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x1773A2C", Offset = "0x1773A2C", VA = "0x1773A2C")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x1773AD4", Offset = "0x1773AD4", VA = "0x1773AD4")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x1773C14", Offset = "0x1773C14", VA = "0x1773C14")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x1773D14", Offset = "0x1773D14", VA = "0x1773D14")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0x1773D98", Offset = "0x1773D98", VA = "0x1773D98")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1773E94", Offset = "0x1773E94", VA = "0x1773E94")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x1773F2C", Offset = "0x1773F2C", VA = "0x1773F2C")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1773FEC", Offset = "0x1773FEC", VA = "0x1773FEC")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0x177405C", Offset = "0x177405C", VA = "0x177405C")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x17740CC", Offset = "0x17740CC", VA = "0x17740CC")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0x177413C", Offset = "0x177413C", VA = "0x177413C")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x17741AC", Offset = "0x17741AC", VA = "0x17741AC")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x177421C", Offset = "0x177421C", VA = "0x177421C")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x177428C", Offset = "0x177428C", VA = "0x177428C")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x17742FC", Offset = "0x17742FC", VA = "0x17742FC")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x177436C", Offset = "0x177436C", VA = "0x177436C")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x17743DC", Offset = "0x17743DC", VA = "0x17743DC")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x177444C", Offset = "0x177444C", VA = "0x177444C")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x17744F8", Offset = "0x17744F8", VA = "0x17744F8")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x1774568", Offset = "0x1774568", VA = "0x1774568")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x17746B0", Offset = "0x17746B0", VA = "0x17746B0")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x177483C", Offset = "0x177483C", VA = "0x177483C")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x17748E8", Offset = "0x17748E8", VA = "0x17748E8")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x1774960", Offset = "0x1774960", VA = "0x1774960")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x17749E0", Offset = "0x17749E0", VA = "0x17749E0")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x1774A4C", Offset = "0x1774A4C", VA = "0x1774A4C")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x1774AB8", Offset = "0x1774AB8", VA = "0x1774AB8")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x17739F4", Offset = "0x17739F4", VA = "0x17739F4")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x1774B34", Offset = "0x1774B34", VA = "0x1774B34")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x1774B68", Offset = "0x1774B68", VA = "0x1774B68")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x1773C08", Offset = "0x1773C08", VA = "0x1773C08")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x200067B")]
	internal enum ParserToken
	{
		[Token(Token = "0x4002090")]
		None = 65536,
		[Token(Token = "0x4002091")]
		Number,
		[Token(Token = "0x4002092")]
		True,
		[Token(Token = "0x4002093")]
		False,
		[Token(Token = "0x4002094")]
		Null,
		[Token(Token = "0x4002095")]
		CharSeq,
		[Token(Token = "0x4002096")]
		Char,
		[Token(Token = "0x4002097")]
		Text,
		[Token(Token = "0x4002098")]
		Object,
		[Token(Token = "0x4002099")]
		ObjectPrime,
		[Token(Token = "0x400209A")]
		Pair,
		[Token(Token = "0x400209B")]
		PairRest,
		[Token(Token = "0x400209C")]
		Array,
		[Token(Token = "0x400209D")]
		ArrayPrime,
		[Token(Token = "0x400209E")]
		Value,
		[Token(Token = "0x400209F")]
		ValueRest,
		[Token(Token = "0x40020A0")]
		String,
		[Token(Token = "0x40020A1")]
		End,
		[Token(Token = "0x40020A2")]
		Epsilon
	}
}
namespace B83.Win32
{
	[Token(Token = "0x200067C")]
	public enum HookType
	{
		[Token(Token = "0x40020A4")]
		WH_JOURNALRECORD,
		[Token(Token = "0x40020A5")]
		WH_JOURNALPLAYBACK,
		[Token(Token = "0x40020A6")]
		WH_KEYBOARD,
		[Token(Token = "0x40020A7")]
		WH_GETMESSAGE,
		[Token(Token = "0x40020A8")]
		WH_CALLWNDPROC,
		[Token(Token = "0x40020A9")]
		WH_CBT,
		[Token(Token = "0x40020AA")]
		WH_SYSMSGFILTER,
		[Token(Token = "0x40020AB")]
		WH_MOUSE,
		[Token(Token = "0x40020AC")]
		WH_HARDWARE,
		[Token(Token = "0x40020AD")]
		WH_DEBUG,
		[Token(Token = "0x40020AE")]
		WH_SHELL,
		[Token(Token = "0x40020AF")]
		WH_FOREGROUNDIDLE,
		[Token(Token = "0x40020B0")]
		WH_CALLWNDPROCRET,
		[Token(Token = "0x40020B1")]
		WH_KEYBOARD_LL,
		[Token(Token = "0x40020B2")]
		WH_MOUSE_LL
	}
	[Token(Token = "0x200067D")]
	public enum WM : uint
	{
		[Token(Token = "0x40020B4")]
		NULL = 0u,
		[Token(Token = "0x40020B5")]
		CREATE = 1u,
		[Token(Token = "0x40020B6")]
		DESTROY = 2u,
		[Token(Token = "0x40020B7")]
		MOVE = 3u,
		[Token(Token = "0x40020B8")]
		SIZE = 5u,
		[Token(Token = "0x40020B9")]
		ACTIVATE = 6u,
		[Token(Token = "0x40020BA")]
		SETFOCUS = 7u,
		[Token(Token = "0x40020BB")]
		KILLFOCUS = 8u,
		[Token(Token = "0x40020BC")]
		ENABLE = 10u,
		[Token(Token = "0x40020BD")]
		SETREDRAW = 11u,
		[Token(Token = "0x40020BE")]
		SETTEXT = 12u,
		[Token(Token = "0x40020BF")]
		GETTEXT = 13u,
		[Token(Token = "0x40020C0")]
		GETTEXTLENGTH = 14u,
		[Token(Token = "0x40020C1")]
		PAINT = 15u,
		[Token(Token = "0x40020C2")]
		CLOSE = 16u,
		[Token(Token = "0x40020C3")]
		QUERYENDSESSION = 17u,
		[Token(Token = "0x40020C4")]
		QUERYOPEN = 19u,
		[Token(Token = "0x40020C5")]
		ENDSESSION = 22u,
		[Token(Token = "0x40020C6")]
		QUIT = 18u,
		[Token(Token = "0x40020C7")]
		ERASEBKGND = 20u,
		[Token(Token = "0x40020C8")]
		SYSCOLORCHANGE = 21u,
		[Token(Token = "0x40020C9")]
		SHOWWINDOW = 24u,
		[Token(Token = "0x40020CA")]
		WININICHANGE = 26u,
		[Token(Token = "0x40020CB")]
		SETTINGCHANGE = 26u,
		[Token(Token = "0x40020CC")]
		DEVMODECHANGE = 27u,
		[Token(Token = "0x40020CD")]
		ACTIVATEAPP = 28u,
		[Token(Token = "0x40020CE")]
		FONTCHANGE = 29u,
		[Token(Token = "0x40020CF")]
		TIMECHANGE = 30u,
		[Token(Token = "0x40020D0")]
		CANCELMODE = 31u,
		[Token(Token = "0x40020D1")]
		SETCURSOR = 32u,
		[Token(Token = "0x40020D2")]
		MOUSEACTIVATE = 33u,
		[Token(Token = "0x40020D3")]
		CHILDACTIVATE = 34u,
		[Token(Token = "0x40020D4")]
		QUEUESYNC = 35u,
		[Token(Token = "0x40020D5")]
		GETMINMAXINFO = 36u,
		[Token(Token = "0x40020D6")]
		PAINTICON = 38u,
		[Token(Token = "0x40020D7")]
		ICONERASEBKGND = 39u,
		[Token(Token = "0x40020D8")]
		NEXTDLGCTL = 40u,
		[Token(Token = "0x40020D9")]
		SPOOLERSTATUS = 42u,
		[Token(Token = "0x40020DA")]
		DRAWITEM = 43u,
		[Token(Token = "0x40020DB")]
		MEASUREITEM = 44u,
		[Token(Token = "0x40020DC")]
		DELETEITEM = 45u,
		[Token(Token = "0x40020DD")]
		VKEYTOITEM = 46u,
		[Token(Token = "0x40020DE")]
		CHARTOITEM = 47u,
		[Token(Token = "0x40020DF")]
		SETFONT = 48u,
		[Token(Token = "0x40020E0")]
		GETFONT = 49u,
		[Token(Token = "0x40020E1")]
		SETHOTKEY = 50u,
		[Token(Token = "0x40020E2")]
		GETHOTKEY = 51u,
		[Token(Token = "0x40020E3")]
		QUERYDRAGICON = 55u,
		[Token(Token = "0x40020E4")]
		COMPAREITEM = 57u,
		[Token(Token = "0x40020E5")]
		GETOBJECT = 61u,
		[Token(Token = "0x40020E6")]
		COMPACTING = 65u,
		[Token(Token = "0x40020E7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E3524", Offset = "0x8E3524")]
		COMMNOTIFY = 68u,
		[Token(Token = "0x40020E8")]
		WINDOWPOSCHANGING = 70u,
		[Token(Token = "0x40020E9")]
		WINDOWPOSCHANGED = 71u,
		[Token(Token = "0x40020EA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E3534", Offset = "0x8E3534")]
		POWER = 72u,
		[Token(Token = "0x40020EB")]
		COPYDATA = 74u,
		[Token(Token = "0x40020EC")]
		CANCELJOURNAL = 75u,
		[Token(Token = "0x40020ED")]
		NOTIFY = 78u,
		[Token(Token = "0x40020EE")]
		INPUTLANGCHANGEREQUEST = 80u,
		[Token(Token = "0x40020EF")]
		INPUTLANGCHANGE = 81u,
		[Token(Token = "0x40020F0")]
		TCARD = 82u,
		[Token(Token = "0x40020F1")]
		HELP = 83u,
		[Token(Token = "0x40020F2")]
		USERCHANGED = 84u,
		[Token(Token = "0x40020F3")]
		NOTIFYFORMAT = 85u,
		[Token(Token = "0x40020F4")]
		CONTEXTMENU = 123u,
		[Token(Token = "0x40020F5")]
		STYLECHANGING = 124u,
		[Token(Token = "0x40020F6")]
		STYLECHANGED = 125u,
		[Token(Token = "0x40020F7")]
		DISPLAYCHANGE = 126u,
		[Token(Token = "0x40020F8")]
		GETICON = 127u,
		[Token(Token = "0x40020F9")]
		SETICON = 128u,
		[Token(Token = "0x40020FA")]
		NCCREATE = 129u,
		[Token(Token = "0x40020FB")]
		NCDESTROY = 130u,
		[Token(Token = "0x40020FC")]
		NCCALCSIZE = 131u,
		[Token(Token = "0x40020FD")]
		NCHITTEST = 132u,
		[Token(Token = "0x40020FE")]
		NCPAINT = 133u,
		[Token(Token = "0x40020FF")]
		NCACTIVATE = 134u,
		[Token(Token = "0x4002100")]
		GETDLGCODE = 135u,
		[Token(Token = "0x4002101")]
		SYNCPAINT = 136u,
		[Token(Token = "0x4002102")]
		NCMOUSEMOVE = 160u,
		[Token(Token = "0x4002103")]
		NCLBUTTONDOWN = 161u,
		[Token(Token = "0x4002104")]
		NCLBUTTONUP = 162u,
		[Token(Token = "0x4002105")]
		NCLBUTTONDBLCLK = 163u,
		[Token(Token = "0x4002106")]
		NCRBUTTONDOWN = 164u,
		[Token(Token = "0x4002107")]
		NCRBUTTONUP = 165u,
		[Token(Token = "0x4002108")]
		NCRBUTTONDBLCLK = 166u,
		[Token(Token = "0x4002109")]
		NCMBUTTONDOWN = 167u,
		[Token(Token = "0x400210A")]
		NCMBUTTONUP = 168u,
		[Token(Token = "0x400210B")]
		NCMBUTTONDBLCLK = 169u,
		[Token(Token = "0x400210C")]
		NCXBUTTONDOWN = 171u,
		[Token(Token = "0x400210D")]
		NCXBUTTONUP = 172u,
		[Token(Token = "0x400210E")]
		NCXBUTTONDBLCLK = 173u,
		[Token(Token = "0x400210F")]
		INPUT_DEVICE_CHANGE = 254u,
		[Token(Token = "0x4002110")]
		INPUT = 255u,
		[Token(Token = "0x4002111")]
		KEYFIRST = 256u,
		[Token(Token = "0x4002112")]
		KEYDOWN = 256u,
		[Token(Token = "0x4002113")]
		KEYUP = 257u,
		[Token(Token = "0x4002114")]
		CHAR = 258u,
		[Token(Token = "0x4002115")]
		DEADCHAR = 259u,
		[Token(Token = "0x4002116")]
		SYSKEYDOWN = 260u,
		[Token(Token = "0x4002117")]
		SYSKEYUP = 261u,
		[Token(Token = "0x4002118")]
		SYSCHAR = 262u,
		[Token(Token = "0x4002119")]
		SYSDEADCHAR = 263u,
		[Token(Token = "0x400211A")]
		UNICHAR = 265u,
		[Token(Token = "0x400211B")]
		KEYLAST = 264u,
		[Token(Token = "0x400211C")]
		IME_STARTCOMPOSITION = 269u,
		[Token(Token = "0x400211D")]
		IME_ENDCOMPOSITION = 270u,
		[Token(Token = "0x400211E")]
		IME_COMPOSITION = 271u,
		[Token(Token = "0x400211F")]
		IME_KEYLAST = 271u,
		[Token(Token = "0x4002120")]
		INITDIALOG = 272u,
		[Token(Token = "0x4002121")]
		COMMAND = 273u,
		[Token(Token = "0x4002122")]
		SYSCOMMAND = 274u,
		[Token(Token = "0x4002123")]
		TIMER = 275u,
		[Token(Token = "0x4002124")]
		HSCROLL = 276u,
		[Token(Token = "0x4002125")]
		VSCROLL = 277u,
		[Token(Token = "0x4002126")]
		INITMENU = 278u,
		[Token(Token = "0x4002127")]
		INITMENUPOPUP = 279u,
		[Token(Token = "0x4002128")]
		MENUSELECT = 287u,
		[Token(Token = "0x4002129")]
		MENUCHAR = 288u,
		[Token(Token = "0x400212A")]
		ENTERIDLE = 289u,
		[Token(Token = "0x400212B")]
		MENURBUTTONUP = 290u,
		[Token(Token = "0x400212C")]
		MENUDRAG = 291u,
		[Token(Token = "0x400212D")]
		MENUGETOBJECT = 292u,
		[Token(Token = "0x400212E")]
		UNINITMENUPOPUP = 293u,
		[Token(Token = "0x400212F")]
		MENUCOMMAND = 294u,
		[Token(Token = "0x4002130")]
		CHANGEUISTATE = 295u,
		[Token(Token = "0x4002131")]
		UPDATEUISTATE = 296u,
		[Token(Token = "0x4002132")]
		QUERYUISTATE = 297u,
		[Token(Token = "0x4002133")]
		CTLCOLORMSGBOX = 306u,
		[Token(Token = "0x4002134")]
		CTLCOLOREDIT = 307u,
		[Token(Token = "0x4002135")]
		CTLCOLORLISTBOX = 308u,
		[Token(Token = "0x4002136")]
		CTLCOLORBTN = 309u,
		[Token(Token = "0x4002137")]
		CTLCOLORDLG = 310u,
		[Token(Token = "0x4002138")]
		CTLCOLORSCROLLBAR = 311u,
		[Token(Token = "0x4002139")]
		CTLCOLORSTATIC = 312u,
		[Token(Token = "0x400213A")]
		MOUSEFIRST = 512u,
		[Token(Token = "0x400213B")]
		MOUSEMOVE = 512u,
		[Token(Token = "0x400213C")]
		LBUTTONDOWN = 513u,
		[Token(Token = "0x400213D")]
		LBUTTONUP = 514u,
		[Token(Token = "0x400213E")]
		LBUTTONDBLCLK = 515u,
		[Token(Token = "0x400213F")]
		RBUTTONDOWN = 516u,
		[Token(Token = "0x4002140")]
		RBUTTONUP = 517u,
		[Token(Token = "0x4002141")]
		RBUTTONDBLCLK = 518u,
		[Token(Token = "0x4002142")]
		MBUTTONDOWN = 519u,
		[Token(Token = "0x4002143")]
		MBUTTONUP = 520u,
		[Token(Token = "0x4002144")]
		MBUTTONDBLCLK = 521u,
		[Token(Token = "0x4002145")]
		MOUSEWHEEL = 522u,
		[Token(Token = "0x4002146")]
		XBUTTONDOWN = 523u,
		[Token(Token = "0x4002147")]
		XBUTTONUP = 524u,
		[Token(Token = "0x4002148")]
		XBUTTONDBLCLK = 525u,
		[Token(Token = "0x4002149")]
		MOUSEHWHEEL = 526u,
		[Token(Token = "0x400214A")]
		MOUSELAST = 526u,
		[Token(Token = "0x400214B")]
		PARENTNOTIFY = 528u,
		[Token(Token = "0x400214C")]
		ENTERMENULOOP = 529u,
		[Token(Token = "0x400214D")]
		EXITMENULOOP = 530u,
		[Token(Token = "0x400214E")]
		NEXTMENU = 531u,
		[Token(Token = "0x400214F")]
		SIZING = 532u,
		[Token(Token = "0x4002150")]
		CAPTURECHANGED = 533u,
		[Token(Token = "0x4002151")]
		MOVING = 534u,
		[Token(Token = "0x4002152")]
		POWERBROADCAST = 536u,
		[Token(Token = "0x4002153")]
		DEVICECHANGE = 537u,
		[Token(Token = "0x4002154")]
		MDICREATE = 544u,
		[Token(Token = "0x4002155")]
		MDIDESTROY = 545u,
		[Token(Token = "0x4002156")]
		MDIACTIVATE = 546u,
		[Token(Token = "0x4002157")]
		MDIRESTORE = 547u,
		[Token(Token = "0x4002158")]
		MDINEXT = 548u,
		[Token(Token = "0x4002159")]
		MDIMAXIMIZE = 549u,
		[Token(Token = "0x400215A")]
		MDITILE = 550u,
		[Token(Token = "0x400215B")]
		MDICASCADE = 551u,
		[Token(Token = "0x400215C")]
		MDIICONARRANGE = 552u,
		[Token(Token = "0x400215D")]
		MDIGETACTIVE = 553u,
		[Token(Token = "0x400215E")]
		MDISETMENU = 560u,
		[Token(Token = "0x400215F")]
		ENTERSIZEMOVE = 561u,
		[Token(Token = "0x4002160")]
		EXITSIZEMOVE = 562u,
		[Token(Token = "0x4002161")]
		DROPFILES = 563u,
		[Token(Token = "0x4002162")]
		MDIREFRESHMENU = 564u,
		[Token(Token = "0x4002163")]
		IME_SETCONTEXT = 641u,
		[Token(Token = "0x4002164")]
		IME_NOTIFY = 642u,
		[Token(Token = "0x4002165")]
		IME_CONTROL = 643u,
		[Token(Token = "0x4002166")]
		IME_COMPOSITIONFULL = 644u,
		[Token(Token = "0x4002167")]
		IME_SELECT = 645u,
		[Token(Token = "0x4002168")]
		IME_CHAR = 646u,
		[Token(Token = "0x4002169")]
		IME_REQUEST = 648u,
		[Token(Token = "0x400216A")]
		IME_KEYDOWN = 656u,
		[Token(Token = "0x400216B")]
		IME_KEYUP = 657u,
		[Token(Token = "0x400216C")]
		MOUSEHOVER = 673u,
		[Token(Token = "0x400216D")]
		MOUSELEAVE = 675u,
		[Token(Token = "0x400216E")]
		NCMOUSEHOVER = 672u,
		[Token(Token = "0x400216F")]
		NCMOUSELEAVE = 674u,
		[Token(Token = "0x4002170")]
		WTSSESSION_CHANGE = 689u,
		[Token(Token = "0x4002171")]
		TABLET_FIRST = 704u,
		[Token(Token = "0x4002172")]
		TABLET_LAST = 735u,
		[Token(Token = "0x4002173")]
		CUT = 768u,
		[Token(Token = "0x4002174")]
		COPY = 769u,
		[Token(Token = "0x4002175")]
		PASTE = 770u,
		[Token(Token = "0x4002176")]
		CLEAR = 771u,
		[Token(Token = "0x4002177")]
		UNDO = 772u,
		[Token(Token = "0x4002178")]
		RENDERFORMAT = 773u,
		[Token(Token = "0x4002179")]
		RENDERALLFORMATS = 774u,
		[Token(Token = "0x400217A")]
		DESTROYCLIPBOARD = 775u,
		[Token(Token = "0x400217B")]
		DRAWCLIPBOARD = 776u,
		[Token(Token = "0x400217C")]
		PAINTCLIPBOARD = 777u,
		[Token(Token = "0x400217D")]
		VSCROLLCLIPBOARD = 778u,
		[Token(Token = "0x400217E")]
		SIZECLIPBOARD = 779u,
		[Token(Token = "0x400217F")]
		ASKCBFORMATNAME = 780u,
		[Token(Token = "0x4002180")]
		CHANGECBCHAIN = 781u,
		[Token(Token = "0x4002181")]
		HSCROLLCLIPBOARD = 782u,
		[Token(Token = "0x4002182")]
		QUERYNEWPALETTE = 783u,
		[Token(Token = "0x4002183")]
		PALETTEISCHANGING = 784u,
		[Token(Token = "0x4002184")]
		PALETTECHANGED = 785u,
		[Token(Token = "0x4002185")]
		HOTKEY = 786u,
		[Token(Token = "0x4002186")]
		PRINT = 791u,
		[Token(Token = "0x4002187")]
		PRINTCLIENT = 792u,
		[Token(Token = "0x4002188")]
		APPCOMMAND = 793u,
		[Token(Token = "0x4002189")]
		THEMECHANGED = 794u,
		[Token(Token = "0x400218A")]
		CLIPBOARDUPDATE = 797u,
		[Token(Token = "0x400218B")]
		DWMCOMPOSITIONCHANGED = 798u,
		[Token(Token = "0x400218C")]
		DWMNCRENDERINGCHANGED = 799u,
		[Token(Token = "0x400218D")]
		DWMCOLORIZATIONCOLORCHANGED = 800u,
		[Token(Token = "0x400218E")]
		DWMWINDOWMAXIMIZEDCHANGE = 801u,
		[Token(Token = "0x400218F")]
		GETTITLEBARINFOEX = 831u,
		[Token(Token = "0x4002190")]
		HANDHELDFIRST = 856u,
		[Token(Token = "0x4002191")]
		HANDHELDLAST = 863u,
		[Token(Token = "0x4002192")]
		AFXFIRST = 864u,
		[Token(Token = "0x4002193")]
		AFXLAST = 895u,
		[Token(Token = "0x4002194")]
		PENWINFIRST = 896u,
		[Token(Token = "0x4002195")]
		PENWINLAST = 911u,
		[Token(Token = "0x4002196")]
		APP = 32768u,
		[Token(Token = "0x4002197")]
		USER = 1024u,
		[Token(Token = "0x4002198")]
		CPL_LAUNCH = 5120u,
		[Token(Token = "0x4002199")]
		CPL_LAUNCHED = 5121u,
		[Token(Token = "0x400219A")]
		SYSTIMER = 280u
	}
	[Token(Token = "0x200067E")]
	public struct CWPSTRUCT
	{
		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr lParam;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr wParam;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WM message;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr hwnd;
	}
	[Token(Token = "0x200067F")]
	public struct POINT
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xEC811C", Offset = "0xEC811C", VA = "0xEC811C")]
		public POINT(int aX, int aY)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xEC8124", Offset = "0xEC8124", VA = "0xEC8124", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000680")]
	public struct MSG
	{
		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr hwnd;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WM message;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr wParam;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr lParam;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ushort time;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public POINT pt;
	}
	[Token(Token = "0x2000681")]
	public struct RECT
	{
		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Left;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Top;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Right;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Bottom;

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x12937DC", Offset = "0x12937DC", VA = "0x12937DC")]
		public RECT(int left, int top, int right, int bottom)
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0x12937E8", Offset = "0x12937E8", VA = "0x12937E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000682")]
	public delegate IntPtr HookProc(int code, IntPtr wParam, ref MSG lParam);
	[Token(Token = "0x2000683")]
	public delegate bool EnumThreadDelegate(IntPtr Hwnd, IntPtr lParam);
	[Token(Token = "0x2000684")]
	public static class UnityDragAndDropHook
	{
		[Token(Token = "0x2000685")]
		public delegate void DroppedFilesEvent(List<string> aPathNames, POINT aDropPoint);

		[Token(Token = "0x1400001B")]
		public static event DroppedFilesEvent OnDroppedFiles
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xE9A76C", Offset = "0xE9A76C", VA = "0xE9A76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4400", Offset = "0x8F4400")]
			add
			{
			}
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0xE9A828", Offset = "0xE9A828", VA = "0xE9A828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4410", Offset = "0x8F4410")]
			remove
			{
			}
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xE9A8E4", Offset = "0xE9A8E4", VA = "0xE9A8E4")]
		public static void InstallHook()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xE9A8E8", Offset = "0xE9A8E8", VA = "0xE9A8E8")]
		public static void UninstallHook()
		{
		}
	}
}
namespace Technie.PhysicsCreator
{
	[Token(Token = "0x2000686")]
	public class HullData : ScriptableObject
	{
		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xFBADB8", Offset = "0xFBADB8", VA = "0xFBADB8")]
		public HullData()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class HullMapping
	{
		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hull sourceHull;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider generatedCollider;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullPainterChild targetChild;

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xFBADC0", Offset = "0xFBADC0", VA = "0xFBADC0")]
		public HullMapping()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class HullPainter : MonoBehaviour
	{
		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PaintingData paintingData;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullData hullData;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HullMapping> hullMapping;

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xFBADC8", Offset = "0xFBADC8", VA = "0xFBADC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xFBADCC", Offset = "0xFBADCC", VA = "0xFBADCC")]
		public void CreateColliderComponents()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0xFBCDA0", Offset = "0xFBCDA0", VA = "0xFBCDA0")]
		public void RemoveAllColliders()
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xFBD048", Offset = "0xFBD048", VA = "0xFBD048")]
		public void RemoveAllGenerated()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xFBD1EC", Offset = "0xFBD1EC", VA = "0xFBD1EC")]
		private static bool IsDeletable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xFBCFAC", Offset = "0xFBCFAC", VA = "0xFBCFAC")]
		private static void DestroyImmediateWithUndo(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xFBAEE8", Offset = "0xFBAEE8", VA = "0xFBAEE8")]
		private void CreateHullMapping()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xFBD9FC", Offset = "0xFBD9FC", VA = "0xFBD9FC")]
		private static bool Approximately(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0xFBDA70", Offset = "0xFBDA70", VA = "0xFBDA70")]
		private static bool Approximately(float lhs, float rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		private void CreateCollider<T>(Hull sourceHull) where T : Collider
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xFBDCCC", Offset = "0xFBDCCC", VA = "0xFBDCCC")]
		private void RecreateChildCollider(HullMapping mapping)
		{
		}

		[Token(Token = "0x6002AE7")]
		private void RecreateChildCollider<T>(HullMapping mapping) where T : Collider
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xFBCA3C", Offset = "0xFBCA3C", VA = "0xFBCA3C")]
		private void UpdateCollider(Hull hull)
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xFBDD9C", Offset = "0xFBDD9C", VA = "0xFBDD9C")]
		public void SetAllTypes(HullType newType)
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xFBDEC0", Offset = "0xFBDEC0", VA = "0xFBDEC0")]
		public void SetAllMaterials(PhysicMaterial newMaterial)
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xFBDFF0", Offset = "0xFBDFF0", VA = "0xFBDFF0")]
		public void SetAllAsChild(bool isChild)
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xFBE118", Offset = "0xFBE118", VA = "0xFBE118")]
		public void SetAllAsTrigger(bool isTrigger)
		{
		}

		[Token(Token = "0x6002AED")]
		private List<T> FindLocal<T>() where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xFBD390", Offset = "0xFBD390", VA = "0xFBD390")]
		private bool IsMapped(Hull hull)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xFBD6FC", Offset = "0xFBD6FC", VA = "0xFBD6FC")]
		private bool IsMapped(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xFBD87C", Offset = "0xFBD87C", VA = "0xFBD87C")]
		private bool IsMapped(HullPainterChild child)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xFBDA78", Offset = "0xFBDA78", VA = "0xFBDA78")]
		private void AddMapping(Hull hull, Collider col, HullPainterChild painterChild)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xFBD61C", Offset = "0xFBD61C", VA = "0xFBD61C")]
		private void RemoveMapping(Hull hull)
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xFBDB48", Offset = "0xFBDB48", VA = "0xFBDB48")]
		private HullMapping FindMapping(HullPainterChild child)
		{
			return null;
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xFBE240", Offset = "0xFBE240", VA = "0xFBE240")]
		public Hull FindSourceHull(HullPainterChild child)
		{
			return null;
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xFBD4D4", Offset = "0xFBD4D4", VA = "0xFBD4D4")]
		private static Collider FindExistingCollider(List<HullMapping> mappings, Hull hull)
		{
			return null;
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0xFBE3CC", Offset = "0xFBE3CC", VA = "0xFBE3CC")]
		private static GameObject CreateGameObject(string goName)
		{
			return null;
		}

		[Token(Token = "0x6002AF7")]
		private static T AddComponent<T>(GameObject targetObj) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xFBE42C", Offset = "0xFBE42C", VA = "0xFBE42C")]
		public HullPainter()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class HullPainterChild : MonoBehaviour
	{
		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HullPainter parent;

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xFBE434", Offset = "0xFBE434", VA = "0xFBE434")]
		public HullPainterChild()
		{
		}
	}
	[Token(Token = "0x200068A")]
	public enum HullType
	{
		[Token(Token = "0x40021B4")]
		Box,
		[Token(Token = "0x40021B5")]
		ConvexHull,
		[Token(Token = "0x40021B6")]
		Sphere,
		[Token(Token = "0x40021B7")]
		Face
	}
	[Serializable]
	[Token(Token = "0x200068B")]
	public class Hull
	{
		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isVisible;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HullType type;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color colour;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial material;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableInflation;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float inflationAmount;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isTrigger;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isChildCollider;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> selectedFaces;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh collisionMesh;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh faceCollisionMesh;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Bounds collisionBox;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sphere collisionSphere;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool hasColliderError;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int numColliderFaces;

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xFBACE4", Offset = "0xFBACE4", VA = "0xFBACE4")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0xFBACE8", Offset = "0xFBACE8", VA = "0xFBACE8")]
		public Hull()
		{
		}
	}
	[Token(Token = "0x200068C")]
	public class PaintingData : ScriptableObject
	{
		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Color[] hullColours;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HullData hullData;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh sourceMesh;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int activeHull;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float faceThickness;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Hull> hulls;

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xEC831C", Offset = "0xEC831C", VA = "0xEC831C")]
		public void AddHull(HullType type, PhysicMaterial material, bool isChild, bool isTrigger)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xEC85C0", Offset = "0xEC85C0", VA = "0xEC85C0")]
		public void RemoveHull(int index)
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0xEC8664", Offset = "0xEC8664", VA = "0xEC8664")]
		public void RemoveAllHulls()
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0xEC8720", Offset = "0xEC8720", VA = "0xEC8720")]
		public bool HasActiveHull()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xEC8784", Offset = "0xEC8784", VA = "0xEC8784")]
		public Hull GetActiveHull()
		{
			return null;
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0xEC8810", Offset = "0xEC8810", VA = "0xEC8810")]
		public void GenerateCollisionMesh(Hull hull, Vector3[] meshVertices, int[] meshIndices)
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xEC8DF8", Offset = "0xEC8DF8", VA = "0xEC8DF8")]
		private bool CalculateBoundingSphere(Hull hull, Vector3[] meshVertices, int[] meshIndices, out Vector3 sphereCenter, out float sphereRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xEC9054", Offset = "0xEC9054", VA = "0xEC9054")]
		private void GenerateConvexHull(Hull hull, Vector3[] meshVertices, int[] meshIndices, Mesh destMesh)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0xEC9B0C", Offset = "0xEC9B0C", VA = "0xEC9B0C")]
		private void GenerateFace(Hull hull, Vector3[] meshVertices, int[] meshIndices, float thickness)
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0xEC9EF4", Offset = "0xEC9EF4", VA = "0xEC9EF4")]
		public bool ContainsMesh(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0xEC8D30", Offset = "0xEC8D30", VA = "0xEC8D30")]
		private static void Inflate(Vector3 point, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0xECA0CC", Offset = "0xECA0CC", VA = "0xECA0CC")]
		public PaintingData()
		{
		}
	}
	[Token(Token = "0x200068D")]
	public class Sphere
	{
		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x11ED888", Offset = "0x11ED888", VA = "0x11ED888")]
		public Sphere()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public class SphereUtils
	{
		[Token(Token = "0x200068F")]
		public class Support
		{
			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_iQuantity;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] m_aiIndex;

			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xEB0084", Offset = "0xEB0084", VA = "0xEB0084")]
			public bool Contains(int iIndex, List<Vector3> points)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xEB01E0", Offset = "0xEB01E0", VA = "0xEB01E0")]
			public Support()
			{
			}
		}

		[Token(Token = "0x40021D0")]
		private const float kEpsilon = 0.001f;

		[Token(Token = "0x40021D1")]
		private const float kOnePlusEpsilon = 1.001f;

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x11ED898", Offset = "0x11ED898", VA = "0x11ED898")]
		private static bool PointInsideSphere(Vector3 rkP, Sphere rkS)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x11ED90C", Offset = "0x11ED90C", VA = "0x11ED90C")]
		private static Sphere ExactSphere1(Vector3 rkP)
		{
			return null;
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x11ED99C", Offset = "0x11ED99C", VA = "0x11ED99C")]
		private static Sphere ExactSphere2(Vector3 rkP0, Vector3 rkP1)
		{
			return null;
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x11EDA94", Offset = "0x11EDA94", VA = "0x11EDA94")]
		private static Sphere ExactSphere3(Vector3 rkP0, Vector3 rkP1, Vector3 rkP2)
		{
			return null;
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x11EDC50", Offset = "0x11EDC50", VA = "0x11EDC50")]
		private static Sphere ExactSphere4(Vector3 rkP0, Vector3 rkP1, Vector3 rkP2, Vector3 rkP3)
		{
			return null;
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x11EE68C", Offset = "0x11EE68C", VA = "0x11EE68C")]
		private static Sphere UpdateSupport1(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x11EE79C", Offset = "0x11EE79C", VA = "0x11EE79C")]
		private static Sphere UpdateSupport2(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x11EEAE4", Offset = "0x11EEAE4", VA = "0x11EEAE4")]
		private static Sphere UpdateSupport3(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x11EF29C", Offset = "0x11EF29C", VA = "0x11EF29C")]
		public static Sphere UpdateSupport4(int i, List<Vector3> apkPerm, Support rkSupp)
		{
			return null;
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x11F01AC", Offset = "0x11F01AC", VA = "0x11F01AC")]
		private static Sphere Update(int funcIndex, int numPoints, List<Vector3> points, Support support)
		{
			return null;
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x11F0214", Offset = "0x11F0214", VA = "0x11F0214")]
		public static Sphere MinSphere(List<Vector3> inputPoints)
		{
			return null;
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x11F0438", Offset = "0x11F0438", VA = "0x11F0438")]
		public static void Shuffle(List<Vector3> list)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x11F0574", Offset = "0x11F0574", VA = "0x11F0574")]
		public SphereUtils()
		{
		}
	}
}
namespace Technie.PhysicsCreator.QHull
{
	[Token(Token = "0x2000690")]
	public class Face
	{
		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HalfEdge he0;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3d normal;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double area;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Point3d centroid;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double planeOffset;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int index;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int numVerts;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Face next;

		[Token(Token = "0x40021DC")]
		public const int VISIBLE = 1;

		[Token(Token = "0x40021DD")]
		public const int NON_CONVEX = 2;

		[Token(Token = "0x40021DE")]
		public const int DELETED = 3;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int mark;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vertex outside;

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x1017ED8", Offset = "0x1017ED8", VA = "0x1017ED8")]
		public void computeCentroid(Point3d centroid)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x1017F5C", Offset = "0x1017F5C", VA = "0x1017F5C")]
		public void computeNormal(Vector3d normal, double minArea)
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x10180E4", Offset = "0x10180E4", VA = "0x10180E4")]
		public void computeNormal(Vector3d normal)
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x101825C", Offset = "0x101825C", VA = "0x101825C")]
		private void computeNormalAndCentroid()
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1018568", Offset = "0x1018568", VA = "0x1018568")]
		private void computeNormalAndCentroid(double minArea)
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x10185B4", Offset = "0x10185B4", VA = "0x10185B4")]
		public static Face createTriangle(Vertex v0, Vertex v1, Vertex v2)
		{
			return null;
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x10185BC", Offset = "0x10185BC", VA = "0x10185BC")]
		public static Face createTriangle(Vertex v0, Vertex v1, Vertex v2, double minArea)
		{
			return null;
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x10187F0", Offset = "0x10187F0", VA = "0x10187F0")]
		public static Face create(Vertex[] vtxArray, int[] indices)
		{
			return null;
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x1018730", Offset = "0x1018730", VA = "0x1018730")]
		public Face()
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x101897C", Offset = "0x101897C", VA = "0x101897C")]
		public HalfEdge getEdge(int i)
		{
			return null;
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x10189C8", Offset = "0x10189C8", VA = "0x10189C8")]
		public HalfEdge getFirstEdge()
		{
			return null;
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x10189D0", Offset = "0x10189D0", VA = "0x10189D0")]
		public HalfEdge findEdge(Vertex vt, Vertex vh)
		{
			return null;
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x1018A44", Offset = "0x1018A44", VA = "0x1018A44")]
		public double distanceToPlane(Point3d p)
		{
			return default(double);
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1018A90", Offset = "0x1018A90", VA = "0x1018A90")]
		public Vector3d getNormal()
		{
			return null;
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1018A98", Offset = "0x1018A98", VA = "0x1018A98")]
		public Point3d getCentroid()
		{
			return null;
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x1018AA0", Offset = "0x1018AA0", VA = "0x1018AA0")]
		public int numVertices()
		{
			return default(int);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x101849C", Offset = "0x101849C", VA = "0x101849C")]
		public string getVertexString()
		{
			return null;
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x1018AA8", Offset = "0x1018AA8", VA = "0x1018AA8")]
		public void getVertexIndices(int[] idxs)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x1018B0C", Offset = "0x1018B0C", VA = "0x1018B0C")]
		private Face connectHalfEdges(HalfEdge hedgePrev, HalfEdge hedge)
		{
			return null;
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x1018CB0", Offset = "0x1018CB0", VA = "0x1018CB0")]
		public void checkConsistency()
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1019488", Offset = "0x1019488", VA = "0x1019488")]
		public int mergeAdjacentFace(HalfEdge hedgeAdj, Face[] discarded)
		{
			return default(int);
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x10196A0", Offset = "0x10196A0", VA = "0x10196A0")]
		private double areaSquared(HalfEdge hedge0, HalfEdge hedge1)
		{
			return default(double);
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x101976C", Offset = "0x101976C", VA = "0x101976C")]
		public void triangulate(FaceList newFaces, double minArea)
		{
		}
	}
	[Token(Token = "0x2000691")]
	public class FaceList
	{
		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Face head;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Face tail;

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x10199C0", Offset = "0x10199C0", VA = "0x10199C0")]
		public void clear()
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x1019958", Offset = "0x1019958", VA = "0x1019958")]
		public void add(Face vtx)
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x10199F4", Offset = "0x10199F4", VA = "0x10199F4")]
		public Face first()
		{
			return null;
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x10199FC", Offset = "0x10199FC", VA = "0x10199FC")]
		public bool isEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x1019A0C", Offset = "0x1019A0C", VA = "0x1019A0C")]
		public FaceList()
		{
		}
	}
	[Token(Token = "0x2000692")]
	public class HalfEdge
	{
		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertex vertex;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Face face;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HalfEdge next;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HalfEdge prev;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HalfEdge opposite;

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x12A50F4", Offset = "0x12A50F4", VA = "0x12A50F4")]
		public HalfEdge(Vertex v, Face f)
		{
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x12A5144", Offset = "0x12A5144", VA = "0x12A5144")]
		public HalfEdge()
		{
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x12A514C", Offset = "0x12A514C", VA = "0x12A514C")]
		public void setNext(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x12A5154", Offset = "0x12A5154", VA = "0x12A5154")]
		public HalfEdge getNext()
		{
			return null;
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x12A515C", Offset = "0x12A515C", VA = "0x12A515C")]
		public void setPrev(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x12A5164", Offset = "0x12A5164", VA = "0x12A5164")]
		public HalfEdge getPrev()
		{
			return null;
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x12A516C", Offset = "0x12A516C", VA = "0x12A516C")]
		public Face getFace()
		{
			return null;
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x12A5174", Offset = "0x12A5174", VA = "0x12A5174")]
		public HalfEdge getOpposite()
		{
			return null;
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x12A517C", Offset = "0x12A517C", VA = "0x12A517C")]
		public void setOpposite(HalfEdge edge)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x12A51B8", Offset = "0x12A51B8", VA = "0x12A51B8")]
		public Vertex head()
		{
			return null;
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x12A51C0", Offset = "0x12A51C0", VA = "0x12A51C0")]
		public Vertex tail()
		{
			return null;
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x12A51D8", Offset = "0x12A51D8", VA = "0x12A51D8")]
		public Face oppositeFace()
		{
			return null;
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x12A51F0", Offset = "0x12A51F0", VA = "0x12A51F0")]
		public string getVertexString()
		{
			return null;
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x12A52C0", Offset = "0x12A52C0", VA = "0x12A52C0")]
		public double length()
		{
			return default(double);
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x12A5308", Offset = "0x12A5308", VA = "0x12A5308")]
		public double lengthSquared()
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000693")]
	public class InternalErrorException : SystemException
	{
		[Token(Token = "0x6002B43")]
		[Address(RVA = "0xFD0E9C", Offset = "0xFD0E9C", VA = "0xFD0E9C")]
		public InternalErrorException(string msg)
		{
		}
	}
	[Token(Token = "0x2000694")]
	public class Point3d : Vector3d
	{
		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x1285D38", Offset = "0x1285D38", VA = "0x1285D38")]
		public Point3d()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x1285D40", Offset = "0x1285D40", VA = "0x1285D40")]
		public Point3d(Vector3d v)
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x1285D74", Offset = "0x1285D74", VA = "0x1285D74")]
		public Point3d(double x, double y, double z)
		{
		}
	}
	[Token(Token = "0x2000695")]
	internal class QhullTest
	{
		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x128F84C", Offset = "0x128F84C", VA = "0x128F84C")]
		public QhullTest()
		{
		}
	}
	[Token(Token = "0x2000696")]
	public class QuickHull3D
	{
		[Token(Token = "0x40021E8")]
		public const int CLOCKWISE = 1;

		[Token(Token = "0x40021E9")]
		public const int INDEXED_FROM_ONE = 2;

		[Token(Token = "0x40021EA")]
		public const int INDEXED_FROM_ZERO = 4;

		[Token(Token = "0x40021EB")]
		public const int POINT_RELATIVE = 8;

		[Token(Token = "0x40021EC")]
		public const double AUTOMATIC_TOLERANCE = -1.0;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int findIndex;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double charLength;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool debug;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vertex[] pointBuffer;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] vertexPointIndices;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Face[] discardedFaces;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vertex[] maxVtxs;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vertex[] minVtxs;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<Face> faces;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<HalfEdge> horizon;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FaceList newFaces;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VertexList unclaimed;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VertexList claimed;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected int numVertices;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int numFaces;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int numPoints;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected double explicitTolerance;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected double tolerance;

		[Token(Token = "0x40021FF")]
		private const double DOUBLE_PREC = 2.220446049250313E-16;

		[Token(Token = "0x4002200")]
		private const int NONCONVEX_WRT_LARGER_FACE = 1;

		[Token(Token = "0x4002201")]
		private const int NONCONVEX = 2;

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x128FE4C", Offset = "0x128FE4C", VA = "0x128FE4C")]
		public bool getDebug()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x128FE54", Offset = "0x128FE54", VA = "0x128FE54")]
		public void setDebug(bool enable)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x128FE60", Offset = "0x128FE60", VA = "0x128FE60")]
		public double getDistanceTolerance()
		{
			return default(double);
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x128FE68", Offset = "0x128FE68", VA = "0x128FE68")]
		public void setExplicitDistanceTolerance(double tol)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x128FE70", Offset = "0x128FE70", VA = "0x128FE70")]
		public double getExplicitDistanceTolerance()
		{
			return default(double);
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x128FE78", Offset = "0x128FE78", VA = "0x128FE78")]
		private void addPointToFace(Vertex vtx, Face face)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x128FEFC", Offset = "0x128FEFC", VA = "0x128FEFC")]
		private void removePointFromFace(Vertex vtx, Face face)
		{
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x128FF70", Offset = "0x128FF70", VA = "0x128FF70")]
		private Vertex removeAllPointsFromFace(Face face)
		{
			return null;
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x128FFF4", Offset = "0x128FFF4", VA = "0x128FFF4")]
		public QuickHull3D()
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x1290240", Offset = "0x1290240", VA = "0x1290240")]
		public QuickHull3D(double[] coords)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x12905A4", Offset = "0x12905A4", VA = "0x12905A4")]
		public QuickHull3D(Point3d[] points)
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x12908D8", Offset = "0x12908D8", VA = "0x12908D8")]
		private HalfEdge findHalfEdge(Vertex tail, Vertex head)
		{
			return null;
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x1290A34", Offset = "0x1290A34", VA = "0x1290A34")]
		protected void setHull(double[] coords, int nump, int[][] faceIndices, int numf)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x1291350", Offset = "0x1291350", VA = "0x1291350")]
		public void build(double[] coords)
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x12904C0", Offset = "0x12904C0", VA = "0x12904C0")]
		public void build(double[] coords, int nump)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x12913D4", Offset = "0x12913D4", VA = "0x12913D4")]
		public void build(Point3d[] points)
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x129080C", Offset = "0x129080C", VA = "0x129080C")]
		public void build(Point3d[] points, int nump)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x1291494", Offset = "0x1291494", VA = "0x1291494")]
		public void triangulate()
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x1290B7C", Offset = "0x1290B7C", VA = "0x1290B7C")]
		protected void initBuffers(int nump)
		{
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x1290DB0", Offset = "0x1290DB0", VA = "0x1290DB0")]
		protected void setPoints(double[] coords, int nump)
		{
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x12913EC", Offset = "0x12913EC", VA = "0x12913EC")]
		protected void setPoints(Point3d[] pnts, int nump)
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x1290E88", Offset = "0x1290E88", VA = "0x1290E88")]
		protected void computeMaxAndMin()
		{
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x1291640", Offset = "0x1291640", VA = "0x1291640")]
		protected void createInitialSimplex()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x12922CC", Offset = "0x12922CC", VA = "0x12922CC")]
		public int getNumVertices()
		{
			return default(int);
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x12922D4", Offset = "0x12922D4", VA = "0x12922D4")]
		public Point3d[] getVertices()
		{
			return null;
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x12923FC", Offset = "0x12923FC", VA = "0x12923FC")]
		public int getVertices(double[] coords)
		{
			return default(int);
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x12924E0", Offset = "0x12924E0", VA = "0x12924E0")]
		public int[] getVertexPointIndices()
		{
			return null;
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1292594", Offset = "0x1292594", VA = "0x1292594")]
		public int getNumFaces()
		{
			return default(int);
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x12925E0", Offset = "0x12925E0", VA = "0x12925E0")]
		public int[][] getFaces()
		{
			return null;
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x12925E8", Offset = "0x12925E8", VA = "0x12925E8")]
		public int[][] getFaces(int indexFlags)
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x1292828", Offset = "0x1292828", VA = "0x1292828")]
		private void getFaceIndices(int[] indices, Face face, int flags)
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x12928CC", Offset = "0x12928CC", VA = "0x12928CC")]
		protected void resolveUnclaimedPoints(FaceList newFaces)
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x1292994", Offset = "0x1292994", VA = "0x1292994")]
		protected void deleteFacePoints(Face face, Face absorbingFace)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x1292A40", Offset = "0x1292A40", VA = "0x1292A40")]
		protected double oppFaceDistance(HalfEdge he)
		{
			return default(double);
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x1292A78", Offset = "0x1292A78", VA = "0x1292A78")]
		private bool doAdjacentMerge(Face face, int mergeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x1292BFC", Offset = "0x1292BFC", VA = "0x1292BFC")]
		protected void calculateHorizon(Point3d eyePnt, HalfEdge edge0, Face face, List<HalfEdge> horizon)
		{
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x1292D28", Offset = "0x1292D28", VA = "0x1292D28")]
		private HalfEdge addAdjoiningFace(Vertex eyeVtx, HalfEdge he)
		{
			return null;
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x1292DF0", Offset = "0x1292DF0", VA = "0x1292DF0")]
		protected void addNewFaces(FaceList newFaces, Vertex eyeVtx, List<HalfEdge> horizon)
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x1292FC8", Offset = "0x1292FC8", VA = "0x1292FC8")]
		protected Vertex nextPointToAdd()
		{
			return null;
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x1293074", Offset = "0x1293074", VA = "0x1293074")]
		protected void addPointToHull(Vertex eyeVtx)
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x1291380", Offset = "0x1291380", VA = "0x1291380")]
		protected void buildHull()
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x1293374", Offset = "0x1293374", VA = "0x1293374")]
		private void markFaceVertices(Face face, int mark)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x12931B4", Offset = "0x12931B4", VA = "0x12931B4")]
		protected void reindexFacesAndVertices()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x12933B0", Offset = "0x12933B0", VA = "0x12933B0")]
		protected bool checkFaceConvexity(Face face, double tol)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x1293460", Offset = "0x1293460", VA = "0x1293460")]
		protected bool checkFaces(double tol)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x12935A0", Offset = "0x12935A0", VA = "0x12935A0")]
		public bool check()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x12935A8", Offset = "0x12935A8", VA = "0x12935A8")]
		public bool check(double tol)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000697")]
	public class SimpleExample
	{
		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xEE2DB0", Offset = "0xEE2DB0", VA = "0xEE2DB0")]
		public static void main(string[] args)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xEE30CC", Offset = "0xEE30CC", VA = "0xEE30CC")]
		public SimpleExample()
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class Vector3d
	{
		[Token(Token = "0x4002202")]
		private const double DOUBLE_PREC = 2.220446049250313E-16;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double x;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double y;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double z;

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x13F4438", Offset = "0x13F4438", VA = "0x13F4438")]
		public Vector3d()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x13F4440", Offset = "0x13F4440", VA = "0x13F4440")]
		public Vector3d(Vector3d v)
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x13F44B4", Offset = "0x13F44B4", VA = "0x13F44B4")]
		public Vector3d(double x, double y, double z)
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x13F4508", Offset = "0x13F4508", VA = "0x13F4508")]
		public double get(int i)
		{
			return default(double);
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x13F45B4", Offset = "0x13F45B4", VA = "0x13F45B4")]
		public void set(int i, double value)
		{
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x13F4488", Offset = "0x13F4488", VA = "0x13F4488")]
		public void set(Vector3d v1)
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x13F4660", Offset = "0x13F4660", VA = "0x13F4660")]
		public void add(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x13F46AC", Offset = "0x13F46AC", VA = "0x13F46AC")]
		public void add(Vector3d v1)
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x13F46EC", Offset = "0x13F46EC", VA = "0x13F46EC")]
		public void sub(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x13F4738", Offset = "0x13F4738", VA = "0x13F4738")]
		public void sub(Vector3d v1)
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x13F4778", Offset = "0x13F4778", VA = "0x13F4778")]
		public void scale(double s)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x13F4794", Offset = "0x13F4794", VA = "0x13F4794")]
		public void scale(double s, Vector3d v1)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x13F47CC", Offset = "0x13F47CC", VA = "0x13F47CC")]
		public double norm()
		{
			return default(double);
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x13F4878", Offset = "0x13F4878", VA = "0x13F4878")]
		public double normSquared()
		{
			return default(double);
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x13F4898", Offset = "0x13F4898", VA = "0x13F4898")]
		public double distance(Vector3d v)
		{
			return default(double);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x13F4974", Offset = "0x13F4974", VA = "0x13F4974")]
		public double distanceSquared(Vector3d v)
		{
			return default(double);
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x13F49B4", Offset = "0x13F49B4", VA = "0x13F49B4")]
		public double dot(Vector3d v1)
		{
			return default(double);
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x13F49EC", Offset = "0x13F49EC", VA = "0x13F49EC")]
		public void normalize()
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x13F4AC4", Offset = "0x13F4AC4", VA = "0x13F4AC4")]
		public void setZero()
		{
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x13F44FC", Offset = "0x13F44FC", VA = "0x13F44FC")]
		public void set(double x, double y, double z)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x13F4AD0", Offset = "0x13F4AD0", VA = "0x13F4AD0")]
		public void cross(Vector3d v1, Vector3d v2)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x13F4B28", Offset = "0x13F4B28", VA = "0x13F4B28")]
		protected void setRandom(double lower, double upper, System.Random generator)
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x13F4BB4", Offset = "0x13F4BB4", VA = "0x13F4BB4")]
		public string toString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000699")]
	public class Vertex
	{
		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Point3d pnt;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex prev;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vertex next;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Face face;

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x13FAE28", Offset = "0x13FAE28", VA = "0x13FAE28")]
		public Vertex()
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x13FAE98", Offset = "0x13FAE98", VA = "0x13FAE98")]
		public Vertex(double x, double y, double z, int idx)
		{
		}
	}
	[Token(Token = "0x200069A")]
	internal class VertexList
	{
		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex head;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex tail;

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x13FAF44", Offset = "0x13FAF44", VA = "0x13FAF44")]
		public void clear()
		{
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x13FAF78", Offset = "0x13FAF78", VA = "0x13FAF78")]
		public void add(Vertex vtx)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x13FAFFC", Offset = "0x13FAFFC", VA = "0x13FAFFC")]
		public void addAll(Vertex vtx)
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x13FB078", Offset = "0x13FB078", VA = "0x13FB078")]
		public void delete(Vertex vtx)
		{
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x13FB0D4", Offset = "0x13FB0D4", VA = "0x13FB0D4")]
		public void delete(Vertex vtx1, Vertex vtx2)
		{
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x13FB150", Offset = "0x13FB150", VA = "0x13FB150")]
		public void insertBefore(Vertex vtx, Vertex next)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x13FB1D8", Offset = "0x13FB1D8", VA = "0x13FB1D8")]
		public Vertex first()
		{
			return null;
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x13FB1E0", Offset = "0x13FB1E0", VA = "0x13FB1E0")]
		public bool isEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x13FB1F0", Offset = "0x13FB1F0", VA = "0x13FB1F0")]
		public VertexList()
		{
		}
	}
}
namespace System.Reflection
{
	[Token(Token = "0x200069B")]
	public static class Ext_Type
	{
		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x1017908", Offset = "0x1017908", VA = "0x1017908")]
		public static FieldInfo GetFieldPrivate(this Type t, string fieldName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x1017A30", Offset = "0x1017A30", VA = "0x1017A30")]
		public static PropertyInfo GetPropertyPrivate(this Type t, string propName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x1017B50", Offset = "0x1017B50", VA = "0x1017B50")]
		public static MethodInfo GetMethodPrivate(this Type t, string methodName, BindingFlags flags)
		{
			return null;
		}
	}
}
namespace SmartData
{
	[Token(Token = "0x200069C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7F0C", Offset = "0x8D7F0C")]
	public class ForceEventableAttribute : Attribute
	{
		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3554", Offset = "0x8E3554")]
		private bool <forceExpand>k__BackingField;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3564", Offset = "0x8E3564")]
		private bool <allowLocal>k__BackingField;

		[Token(Token = "0x17000594")]
		public bool forceExpand
		{
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x11C2174", Offset = "0x11C2174", VA = "0x11C2174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4450", Offset = "0x8F4450")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x11C217C", Offset = "0x11C217C", VA = "0x11C217C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4460", Offset = "0x8F4460")]
			set
			{
			}
		}

		[Token(Token = "0x17000595")]
		public bool allowLocal
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x11C2188", Offset = "0x11C2188", VA = "0x11C2188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4470", Offset = "0x8F4470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x11C2190", Offset = "0x11C2190", VA = "0x11C2190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4480", Offset = "0x8F4480")]
			set
			{
			}
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x11C219C", Offset = "0x11C219C", VA = "0x11C219C")]
		public ForceEventableAttribute(bool forceExpand = false, bool allowLocal = true)
		{
		}
	}
	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7F20", Offset = "0x8D7F20")]
	public class ForceHideEventAttribute : Attribute
	{
		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x11C21E0", Offset = "0x11C21E0", VA = "0x11C21E0")]
		public ForceHideEventAttribute()
		{
		}
	}
	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7F34", Offset = "0x8D7F34")]
	public class ForceNoAutoListenAttribute : Attribute
	{
		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3574", Offset = "0x8E3574")]
		private bool <hide>k__BackingField;

		[Token(Token = "0x17000596")]
		public bool hide
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x11C21E8", Offset = "0x11C21E8", VA = "0x11C21E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4490", Offset = "0x8F4490")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x11C21F0", Offset = "0x11C21F0", VA = "0x11C21F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44A0", Offset = "0x8F44A0")]
			set
			{
			}
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x11C21FC", Offset = "0x11C21FC", VA = "0x11C21FC")]
		public ForceNoAutoListenAttribute(bool hide = false)
		{
		}
	}
	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7F48", Offset = "0x8D7F48")]
	public class DecoratorDescriptionAttribute : Attribute
	{
		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3584", Offset = "0x8E3584")]
		private string <description>k__BackingField;

		[Token(Token = "0x17000597")]
		public string description
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xF2D898", Offset = "0xF2D898", VA = "0xF2D898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44B0", Offset = "0x8F44B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xF2D8A0", Offset = "0xF2D8A0", VA = "0xF2D8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44C0", Offset = "0x8F44C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xF2D8A8", Offset = "0xF2D8A8", VA = "0xF2D8A8")]
		public DecoratorDescriptionAttribute(string description)
		{
		}
	}
	[Token(Token = "0x20006A0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8D7F5C", Offset = "0x8D7F5C")]
	public class ForceNoMultiIndexAttribute : Attribute
	{
		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x11C222C", Offset = "0x11C222C", VA = "0x11C222C")]
		public ForceNoMultiIndexAttribute()
		{
		}
	}
	[Token(Token = "0x20006A1")]
	public static class SmartDataInfo
	{
		[Token(Token = "0x4002211")]
		public const string VERSION = "0.2.1";

		[Token(Token = "0x4002212")]
		public const int VERSION_MAJOR = 0;

		[Token(Token = "0x4002213")]
		public const int VERSION_MINOR = 2;

		[Token(Token = "0x4002214")]
		public const int VERSION_PATCH = 1;
	}
	[Token(Token = "0x20006A2")]
	public enum MultiElementType
	{
		[Token(Token = "0x4002216")]
		NONE,
		[Token(Token = "0x4002217")]
		DYNAMIC,
		[Token(Token = "0x4002218")]
		PERSISTENT
	}
	[Token(Token = "0x20006A3")]
	public enum RestoreMode
	{
		[Token(Token = "0x400221A")]
		NONE,
		[Token(Token = "0x400221B")]
		INIT,
		[Token(Token = "0x400221C")]
		AUTO,
		[Token(Token = "0x400221D")]
		MANUAL
	}
	[Token(Token = "0x20006A4")]
	public enum SetOperation
	{
		[Token(Token = "0x400221F")]
		NONE,
		[Token(Token = "0x4002220")]
		ADDED,
		[Token(Token = "0x4002221")]
		REMOVED,
		[Token(Token = "0x4002222")]
		CHANGED,
		[Token(Token = "0x4002223")]
		INSERTED,
		[Token(Token = "0x4002224")]
		CLEARED
	}
	[Token(Token = "0x20006A5")]
	public struct SetEventData<T>
	{
		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3594", Offset = "0x8E3594")]
		private T <value>k__BackingField;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E35A4", Offset = "0x8E35A4")]
		private T <previousValue>k__BackingField;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E35B4", Offset = "0x8E35B4")]
		private SetOperation <operation>k__BackingField;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E35C4", Offset = "0x8E35C4")]
		private int <index>k__BackingField;

		[Token(Token = "0x17000598")]
		public T value
		{
			[Token(Token = "0x6002BAB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F44D0", Offset = "0x8F44D0")]
			readonly get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4508", Offset = "0x8F4508")]
			private set
			{
			}
		}

		[Token(Token = "0x17000599")]
		public T previousValue
		{
			[Token(Token = "0x6002BAD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4518", Offset = "0x8F4518")]
			readonly get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BAE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4550", Offset = "0x8F4550")]
			private set
			{
			}
		}

		[Token(Token = "0x1700059A")]
		public SetOperation operation
		{
			[Token(Token = "0x6002BAF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4560", Offset = "0x8F4560")]
			readonly get
			{
				return default(SetOperation);
			}
			[Token(Token = "0x6002BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4598", Offset = "0x8F4598")]
			private set
			{
			}
		}

		[Token(Token = "0x1700059B")]
		public int index
		{
			[Token(Token = "0x6002BB1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F45A8", Offset = "0x8F45A8")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6002BB2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F45E0", Offset = "0x8F45E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002BB3")]
		public SetEventData(T data, T previousData, SetOperation operation, int index)
		{
		}
	}
	[Token(Token = "0x20006A6")]
	public interface ISmartRefOwnerRedirect
	{
		[Token(Token = "0x6002BB4")]
		UnityEngine.Object GetSmartRefOwner();

		[Token(Token = "0x6002BB5")]
		Type GetOwnerType();
	}
}
namespace SmartData.Components
{
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D7F70", Offset = "0x8D7F70")]
	public class SmartRefUnbinder : MonoBehaviour
	{
		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameObject, SmartRefUnbinder> _all;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SmartRefBase> _refs;

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xEE76A0", Offset = "0xEE76A0", VA = "0xEE76A0")]
		public static void UnbindUnityEventOnDestroy(SmartRefBase r, GameObject go, bool enableUnityEventNow = true)
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xEE7814", Offset = "0xEE7814", VA = "0xEE7814")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xEE7920", Offset = "0xEE7920", VA = "0xEE7920")]
		public SmartRefUnbinder()
		{
		}
	}
}
namespace SmartData.Editors
{
	[Token(Token = "0x20006A8")]
	public class SmartDataRegistry : MonoBehaviour
	{
		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<WeakReference, Type> _refs;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<SmartBase, Type> _smart;

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xEE53C8", Offset = "0xEE53C8", VA = "0xEE53C8")]
		public static Dictionary<WeakReference, Type> GetSmartReferences()
		{
			return null;
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xEE5470", Offset = "0xEE5470", VA = "0xEE5470")]
		public static Dictionary<SmartBase, Type> GetSmartDatas()
		{
			return null;
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xEE5518", Offset = "0xEE5518", VA = "0xEE5518")]
		public static void RegisterReference(SmartRefBase r)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xEE55F0", Offset = "0xEE55F0", VA = "0xEE55F0")]
		public static void UnregisterReference(WeakReference r)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xEE567C", Offset = "0xEE567C", VA = "0xEE567C")]
		public static void RegisterSmart(SmartBase s)
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xEE5720", Offset = "0xEE5720", VA = "0xEE5720")]
		public static void UnregisterSmart(SmartBase s)
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xEE57AC", Offset = "0xEE57AC", VA = "0xEE57AC")]
		public SmartDataRegistry()
		{
		}
	}
}
namespace SmartData.SmartVector3
{
	[Serializable]
	[Token(Token = "0x20006A9")]
	public class Vector3MultiReader : SmartDataMultiRef<Vector3Multi, Vector3, Vector3Var>
	{
		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x13F3948", Offset = "0x13F3948", VA = "0x13F3948")]
		public static implicit operator Vector3(Vector3MultiReader r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x13F399C", Offset = "0x13F399C", VA = "0x13F399C", Slot = "21")]
		protected override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x13F3A2C", Offset = "0x13F3A2C", VA = "0x13F3A2C")]
		public Vector3MultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AA")]
	public class Vector3MultiWriter : SmartDataMultiRefWriter<Vector3Multi, Vector3, Vector3Var>
	{
		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x13F3A78", Offset = "0x13F3A78", VA = "0x13F3A78")]
		public static implicit operator Vector3(Vector3MultiWriter r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x13F3ACC", Offset = "0x13F3ACC", VA = "0x13F3ACC", Slot = "21")]
		protected override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x13F3B5C", Offset = "0x13F3B5C", VA = "0x13F3B5C", Slot = "26")]
		protected sealed override void InvokeUnityEvent(Vector3 value)
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x13F3BD8", Offset = "0x13F3BD8", VA = "0x13F3BD8")]
		public Vector3MultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AB")]
	public class Vector3SetReader : SmartSetRefBase<Vector3, Vector3Set>, ISmartSetRefReader<Vector3>, ISmartRef, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable
	{
		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3Var.Vector3Event _onAdd;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3Var.Vector3Event _onRemove;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3Var.Vector3Event _onChange;

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x13F3F6C", Offset = "0x13F3F6C", VA = "0x13F3F6C", Slot = "20")]
		protected override Action<SetEventData<Vector3>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x13F3FF8", Offset = "0x13F3FF8", VA = "0x13F3FF8")]
		public Vector3SetReader()
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x13F4044", Offset = "0x13F4044", VA = "0x13F4044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F45F0", Offset = "0x8F45F0")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<Vector3> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AC")]
	public class Vector3SetWriter : SmartSetRefWriterBase<Vector3, Vector3Set>, ISmartSetRefReader<Vector3>, ISmartRef, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable
	{
		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3Var.Vector3Event _onAdd;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3Var.Vector3Event _onRemove;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3Var.Vector3Event _onChange;

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x13F4104", Offset = "0x13F4104", VA = "0x13F4104", Slot = "20")]
		protected override Action<SetEventData<Vector3>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x13F4188", Offset = "0x13F4188", VA = "0x13F4188", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<Vector3> d)
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x13F4248", Offset = "0x13F4248", VA = "0x13F4248")]
		public Vector3SetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AD")]
	public class Vector3Reader : SmartDataRefBase<Vector3, Vector3Var, Vector3Const, Vector3Multi>
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x13F3E44", Offset = "0x13F3E44", VA = "0x13F3E44", Slot = "18")]
		protected sealed override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x13F3ED4", Offset = "0x13F3ED4", VA = "0x13F3ED4")]
		public Vector3Reader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AE")]
	public class Vector3Writer : SmartDataRefWriter<Vector3, Vector3Var, Vector3Const, Vector3Multi>
	{
		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3Var.Vector3Event _onUpdate;

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x13F42E0", Offset = "0x13F42E0", VA = "0x13F42E0", Slot = "18")]
		protected sealed override Action<Vector3> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x13F4370", Offset = "0x13F4370", VA = "0x13F4370", Slot = "24")]
		protected sealed override void InvokeUnityEvent(Vector3 value)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x13F43EC", Offset = "0x13F43EC", VA = "0x13F43EC")]
		public Vector3Writer()
		{
		}
	}
}
namespace SmartData.SmartVector3.Data
{
	[Token(Token = "0x20006AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7FA8", Offset = "0x8D7FA8")]
	public class Vector3Const : SmartConst<Vector3>, ISmartConst<Vector3>, ISmartData<Vector3>, ISmartObject
	{
		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x13F38B0", Offset = "0x13F38B0", VA = "0x13F38B0")]
		public Vector3Const()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D7FF8", Offset = "0x8D7FF8")]
	public class Vector3Multi : SmartMulti<Vector3, Vector3Var>, ISmartMulti<Vector3, Vector3Var>, ISmartMulti<Vector3Var>, ISmartMultiBindable<Action<Vector3>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x13F38FC", Offset = "0x13F38FC", VA = "0x13F38FC")]
		public Vector3Multi()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8048", Offset = "0x8D8048")]
	public class Vector3Set : SmartSet<Vector3>, ISmartDataSet<Vector3>, ISmartSet<Vector3>, ISmartObject, IEnumerable<Vector3>, IEnumerable, ISmartSetWriter<Vector3>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x13F3F20", Offset = "0x13F3F20", VA = "0x13F3F20")]
		public Vector3Set()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8098", Offset = "0x8D8098")]
	public class Vector3Var : SmartVar<Vector3>, ISmartVar<Vector3>, ISmartDataWriter<Vector3>, ISmartObject, ISmartEvent<Vector3>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006B3")]
		public class Vector3Event : UnityEvent<Vector3>
		{
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0xEBAC7C", Offset = "0xEBAC7C", VA = "0xEBAC7C")]
			public Vector3Event()
			{
			}
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0x13F4294", Offset = "0x13F4294", VA = "0x13F4294")]
		public Vector3Var()
		{
		}
	}
}
namespace SmartData.SmartVector3.Components
{
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D80E4", Offset = "0x8D80E4")]
	public class ReadSmartVector3 : ReadSmartBase<Vector3Reader>
	{
		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x12982F4", Offset = "0x12982F4", VA = "0x12982F4")]
		public ReadSmartVector3()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8120", Offset = "0x8D8120")]
	public class ReadSmartVector3Set : ReadSmartBase<Vector3SetReader>
	{
		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x1298340", Offset = "0x1298340", VA = "0x1298340")]
		public ReadSmartVector3Set()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D815C", Offset = "0x8D815C")]
	public class WriteSmartVector3 : WriteSmartBase<Vector3, Vector3Writer>
	{
		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x1401400", Offset = "0x1401400", VA = "0x1401400")]
		public WriteSmartVector3()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8198", Offset = "0x8D8198")]
	public class WriteSmartVector3Set : WriteSetBase<Vector3, Vector3SetWriter>
	{
		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x140144C", Offset = "0x140144C", VA = "0x140144C")]
		public WriteSmartVector3Set()
		{
		}
	}
}
namespace SmartData.SmartString
{
	[Serializable]
	[Token(Token = "0x20006B8")]
	public class StringMultiReader : SmartDataMultiRef<StringMulti, string, StringVar>
	{
		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x11F78FC", Offset = "0x11F78FC", VA = "0x11F78FC")]
		public static implicit operator string(StringMultiReader r)
		{
			return null;
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x11F7950", Offset = "0x11F7950", VA = "0x11F7950", Slot = "21")]
		protected override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x11F79E0", Offset = "0x11F79E0", VA = "0x11F79E0")]
		public StringMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B9")]
	public class StringMultiWriter : SmartDataMultiRefWriter<StringMulti, string, StringVar>
	{
		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x11F7A2C", Offset = "0x11F7A2C", VA = "0x11F7A2C")]
		public static implicit operator string(StringMultiWriter r)
		{
			return null;
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x11F7A80", Offset = "0x11F7A80", VA = "0x11F7A80", Slot = "21")]
		protected override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x11F7B10", Offset = "0x11F7B10", VA = "0x11F7B10", Slot = "26")]
		protected sealed override void InvokeUnityEvent(string value)
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x11F7B74", Offset = "0x11F7B74", VA = "0x11F7B74")]
		public StringMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BA")]
	public class StringSetReader : SmartSetRefBase<string, StringSet>, ISmartSetRefReader<string>, ISmartRef, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringVar.StringEvent _onAdd;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringVar.StringEvent _onRemove;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StringVar.StringEvent _onChange;

		[Token(Token = "0x6002BE4")]
		[Address(RVA = "0x11F7CE8", Offset = "0x11F7CE8", VA = "0x11F7CE8", Slot = "20")]
		protected override Action<SetEventData<string>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x11F7D74", Offset = "0x11F7D74", VA = "0x11F7D74")]
		public StringSetReader()
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x11F7DC0", Offset = "0x11F7DC0", VA = "0x11F7DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4600", Offset = "0x8F4600")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<string> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BB")]
	public class StringSetWriter : SmartSetRefWriterBase<string, StringSet>, ISmartSetRefReader<string>, ISmartRef, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringVar.StringEvent _onAdd;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringVar.StringEvent _onRemove;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StringVar.StringEvent _onChange;

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x11F7E7C", Offset = "0x11F7E7C", VA = "0x11F7E7C", Slot = "20")]
		protected override Action<SetEventData<string>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x11F7F00", Offset = "0x11F7F00", VA = "0x11F7F00", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<string> d)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x11F7FBC", Offset = "0x11F7FBC", VA = "0x11F7FBC")]
		public StringSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BC")]
	public class StringReader : SmartDataRefBase<string, StringVar, StringConst, StringMulti>
	{
		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x11F7BC0", Offset = "0x11F7BC0", VA = "0x11F7BC0", Slot = "18")]
		protected sealed override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x11F7C50", Offset = "0x11F7C50", VA = "0x11F7C50")]
		public StringReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BD")]
	public class StringWriter : SmartDataRefWriter<string, StringVar, StringConst, StringMulti>
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StringVar.StringEvent _onUpdate;

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x11F8054", Offset = "0x11F8054", VA = "0x11F8054", Slot = "18")]
		protected sealed override Action<string> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x11F80E4", Offset = "0x11F80E4", VA = "0x11F80E4", Slot = "24")]
		protected sealed override void InvokeUnityEvent(string value)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x11F8148", Offset = "0x11F8148", VA = "0x11F8148")]
		public StringWriter()
		{
		}
	}
}
namespace SmartData.SmartString.Data
{
	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D81D4", Offset = "0x8D81D4")]
	public class StringConst : SmartConst<string>, ISmartConst<string>, ISmartData<string>, ISmartObject
	{
		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x11F7494", Offset = "0x11F7494", VA = "0x11F7494")]
		public StringConst()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8224", Offset = "0x8D8224")]
	public class StringMulti : SmartMulti<string, StringVar>, ISmartMulti<string, StringVar>, ISmartMulti<StringVar>, ISmartMultiBindable<Action<string>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x11F78B0", Offset = "0x11F78B0", VA = "0x11F78B0")]
		public StringMulti()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8274", Offset = "0x8D8274")]
	public class StringSet : SmartSet<string>, ISmartDataSet<string>, ISmartSet<string>, ISmartObject, IEnumerable<string>, IEnumerable, ISmartSetWriter<string>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x11F7C9C", Offset = "0x11F7C9C", VA = "0x11F7C9C")]
		public StringSet()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D82C4", Offset = "0x8D82C4")]
	public class StringVar : SmartVar<string>, ISmartVar<string>, ISmartDataWriter<string>, ISmartObject, ISmartEvent<string>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006C2")]
		public class StringEvent : UnityEvent<string>
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xEB0A5C", Offset = "0xEB0A5C", VA = "0xEB0A5C")]
			public StringEvent()
			{
			}
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x11F8008", Offset = "0x11F8008", VA = "0x11F8008")]
		public StringVar()
		{
		}
	}
}
namespace SmartData.SmartString.Components
{
	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8310", Offset = "0x8D8310")]
	public class ReadSmartString : ReadSmartBase<StringReader>
	{
		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x129825C", Offset = "0x129825C", VA = "0x129825C")]
		public ReadSmartString()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D834C", Offset = "0x8D834C")]
	public class ReadSmartStringSet : ReadSmartBase<StringSetReader>
	{
		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x12982A8", Offset = "0x12982A8", VA = "0x12982A8")]
		public ReadSmartStringSet()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8388", Offset = "0x8D8388")]
	public class WriteSmartString : WriteSmartBase<string, StringWriter>
	{
		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x1401368", Offset = "0x1401368", VA = "0x1401368")]
		public WriteSmartString()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D83C4", Offset = "0x8D83C4")]
	public class WriteSmartStringSet : WriteSetBase<string, StringSetWriter>
	{
		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x14013B4", Offset = "0x14013B4", VA = "0x14013B4")]
		public WriteSmartStringSet()
		{
		}
	}
}
namespace SmartData.SmartInt
{
	[Serializable]
	[Token(Token = "0x20006C7")]
	public class IntMultiReader : SmartDataMultiRef<IntMulti, int, IntVar>
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0xFCCA58", Offset = "0xFCCA58", VA = "0xFCCA58")]
		public static implicit operator int(IntMultiReader r)
		{
			return default(int);
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xFCCAAC", Offset = "0xFCCAAC", VA = "0xFCCAAC", Slot = "21")]
		protected override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xFCCB3C", Offset = "0xFCCB3C", VA = "0xFCCB3C")]
		public IntMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C8")]
	public class IntMultiWriter : SmartDataMultiRefWriter<IntMulti, int, IntVar>
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0xFCCB88", Offset = "0xFCCB88", VA = "0xFCCB88")]
		public static implicit operator int(IntMultiWriter r)
		{
			return default(int);
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xFCCBDC", Offset = "0xFCCBDC", VA = "0xFCCBDC", Slot = "21")]
		protected override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xFCCC6C", Offset = "0xFCCC6C", VA = "0xFCCC6C", Slot = "26")]
		protected sealed override void InvokeUnityEvent(int value)
		{
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0xFCCCD0", Offset = "0xFCCCD0", VA = "0xFCCCD0")]
		public IntMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C9")]
	public class IntSetReader : SmartSetRefBase<int, IntSet>, ISmartSetRefReader<int>, ISmartRef, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable
	{
		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntVar.IntEvent _onAdd;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntVar.IntEvent _onRemove;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVar.IntEvent _onChange;

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0xFCCEF0", Offset = "0xFCCEF0", VA = "0xFCCEF0", Slot = "20")]
		protected override Action<SetEventData<int>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xFCCF7C", Offset = "0xFCCF7C", VA = "0xFCCF7C")]
		public IntSetReader()
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0xFCCFC8", Offset = "0xFCCFC8", VA = "0xFCCFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4610", Offset = "0x8F4610")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<int> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CA")]
	public class IntSetWriter : SmartSetRefWriterBase<int, IntSet>, ISmartSetRefReader<int>, ISmartRef, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable
	{
		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntVar.IntEvent _onAdd;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntVar.IntEvent _onRemove;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVar.IntEvent _onChange;

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xFCD084", Offset = "0xFCD084", VA = "0xFCD084", Slot = "20")]
		protected override Action<SetEventData<int>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xFCD108", Offset = "0xFCD108", VA = "0xFCD108", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<int> d)
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xFCD1C4", Offset = "0xFCD1C4", VA = "0xFCD1C4")]
		public IntSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CB")]
	public class IntReader : SmartDataRefBase<int, IntVar, IntConst, IntMulti>
	{
		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xFCCDC8", Offset = "0xFCCDC8", VA = "0xFCCDC8", Slot = "18")]
		protected sealed override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0xFCCE58", Offset = "0xFCCE58", VA = "0xFCCE58")]
		public IntReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CC")]
	public class IntWriter : SmartDataRefWriter<int, IntVar, IntConst, IntMulti>
	{
		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVar.IntEvent _onUpdate;

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0xFCD25C", Offset = "0xFCD25C", VA = "0xFCD25C", Slot = "18")]
		protected sealed override Action<int> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xFCD2EC", Offset = "0xFCD2EC", VA = "0xFCD2EC", Slot = "24")]
		protected sealed override void InvokeUnityEvent(int value)
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xFCD350", Offset = "0xFCD350", VA = "0xFCD350")]
		public IntWriter()
		{
		}
	}
}
namespace SmartData.SmartInt.Components
{
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8400", Offset = "0x8D8400")]
	public class ReadSmartInt : ReadSmartBase<IntReader>
	{
		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0x12981C4", Offset = "0x12981C4", VA = "0x12981C4")]
		public ReadSmartInt()
		{
		}
	}
	[Token(Token = "0x20006CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D843C", Offset = "0x8D843C")]
	public class ReadSmartIntSet : ReadSmartBase<IntSetReader>
	{
		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x1298210", Offset = "0x1298210", VA = "0x1298210")]
		public ReadSmartIntSet()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8478", Offset = "0x8D8478")]
	public class WriteSmartInt : WriteSmartBase<int, IntWriter>
	{
		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x14012D0", Offset = "0x14012D0", VA = "0x14012D0")]
		public WriteSmartInt()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D84B4", Offset = "0x8D84B4")]
	public class WriteSmartIntSet : WriteSetBase<int, IntSetWriter>
	{
		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x140131C", Offset = "0x140131C", VA = "0x140131C")]
		public WriteSmartIntSet()
		{
		}
	}
}
namespace SmartData.SmartInt.Data
{
	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D84F0", Offset = "0x8D84F0")]
	public class IntConst : SmartConst<int>, ISmartConst<int>, ISmartData<int>, ISmartObject
	{
		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xFCC9C0", Offset = "0xFCC9C0", VA = "0xFCC9C0")]
		public IntConst()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8540", Offset = "0x8D8540")]
	public class IntMulti : SmartMulti<int, IntVar>, ISmartMulti<int, IntVar>, ISmartMulti<IntVar>, ISmartMultiBindable<Action<int>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xFCCA0C", Offset = "0xFCCA0C", VA = "0xFCCA0C")]
		public IntMulti()
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8590", Offset = "0x8D8590")]
	public class IntSet : SmartSet<int>, ISmartDataSet<int>, ISmartSet<int>, ISmartObject, IEnumerable<int>, IEnumerable, ISmartSetWriter<int>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C10")]
		[Address(RVA = "0xFCCEA4", Offset = "0xFCCEA4", VA = "0xFCCEA4")]
		public IntSet()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D85E0", Offset = "0x8D85E0")]
	public class IntVar : SmartVar<int>, ISmartVar<int>, ISmartDataWriter<int>, ISmartObject, ISmartEvent<int>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006D5")]
		public class IntEvent : UnityEvent<int>
		{
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xE863D0", Offset = "0xE863D0", VA = "0xE863D0")]
			public IntEvent()
			{
			}
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xFCD210", Offset = "0xFCD210", VA = "0xFCD210")]
		public IntVar()
		{
		}
	}
}
namespace SmartData.SmartBool
{
	[Serializable]
	[Token(Token = "0x20006D6")]
	public class BoolMultiReader : SmartDataMultiRef<BoolMulti, bool, BoolVar>
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x104C054", Offset = "0x104C054", VA = "0x104C054")]
		public static implicit operator bool(BoolMultiReader r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0x104C0A8", Offset = "0x104C0A8", VA = "0x104C0A8", Slot = "21")]
		protected override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0x104C138", Offset = "0x104C138", VA = "0x104C138")]
		public BoolMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D7")]
	public class BoolMultiWriter : SmartDataMultiRefWriter<BoolMulti, bool, BoolVar>
	{
		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0x104C184", Offset = "0x104C184", VA = "0x104C184")]
		public static implicit operator bool(BoolMultiWriter r)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0x104C1D8", Offset = "0x104C1D8", VA = "0x104C1D8", Slot = "21")]
		protected override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0x104C268", Offset = "0x104C268", VA = "0x104C268", Slot = "26")]
		protected sealed override void InvokeUnityEvent(bool value)
		{
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0x104C2CC", Offset = "0x104C2CC", VA = "0x104C2CC")]
		public BoolMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D8")]
	public class BoolSetReader : SmartSetRefBase<bool, BoolSet>, ISmartSetRefReader<bool>, ISmartRef, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVar.BoolEvent _onAdd;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVar.BoolEvent _onRemove;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVar.BoolEvent _onChange;

		[Token(Token = "0x6002C1A")]
		[Address(RVA = "0x104C440", Offset = "0x104C440", VA = "0x104C440", Slot = "20")]
		protected override Action<SetEventData<bool>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0x104C4CC", Offset = "0x104C4CC", VA = "0x104C4CC")]
		public BoolSetReader()
		{
		}

		[Token(Token = "0x6002C1C")]
		[Address(RVA = "0x104C518", Offset = "0x104C518", VA = "0x104C518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4620", Offset = "0x8F4620")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<bool> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D9")]
	public class BoolSetWriter : SmartSetRefWriterBase<bool, BoolSet>, ISmartSetRefReader<bool>, ISmartRef, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVar.BoolEvent _onAdd;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVar.BoolEvent _onRemove;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVar.BoolEvent _onChange;

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x104C5D8", Offset = "0x104C5D8", VA = "0x104C5D8", Slot = "20")]
		protected override Action<SetEventData<bool>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x104C65C", Offset = "0x104C65C", VA = "0x104C65C", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<bool> d)
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0x104C71C", Offset = "0x104C71C", VA = "0x104C71C")]
		public BoolSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DA")]
	public class BoolReader : SmartDataRefBase<bool, BoolVar, BoolConst, BoolMulti>
	{
		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C20")]
		[Address(RVA = "0x104C318", Offset = "0x104C318", VA = "0x104C318", Slot = "18")]
		protected sealed override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x104C3A8", Offset = "0x104C3A8", VA = "0x104C3A8")]
		public BoolReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DB")]
	public class BoolWriter : SmartDataRefWriter<bool, BoolVar, BoolConst, BoolMulti>
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVar.BoolEvent _onUpdate;

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x104C7B4", Offset = "0x104C7B4", VA = "0x104C7B4", Slot = "18")]
		protected sealed override Action<bool> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x104C844", Offset = "0x104C844", VA = "0x104C844", Slot = "24")]
		protected sealed override void InvokeUnityEvent(bool value)
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x104C8A8", Offset = "0x104C8A8", VA = "0x104C8A8")]
		public BoolWriter()
		{
		}
	}
}
namespace SmartData.SmartBool.Components
{
	[Token(Token = "0x20006DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D862C", Offset = "0x8D862C")]
	public class ReadSmartBool : ReadSmartBase<BoolReader>
	{
		[Token(Token = "0x6002C25")]
		[Address(RVA = "0x1298094", Offset = "0x1298094", VA = "0x1298094")]
		public ReadSmartBool()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8668", Offset = "0x8D8668")]
	public class ReadSmartBoolSet : ReadSmartBase<BoolSetReader>
	{
		[Token(Token = "0x6002C26")]
		[Address(RVA = "0x12980E0", Offset = "0x12980E0", VA = "0x12980E0")]
		public ReadSmartBoolSet()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D86A4", Offset = "0x8D86A4")]
	public class WriteSmartBool : WriteSmartBase<bool, BoolWriter>
	{
		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x14011A0", Offset = "0x14011A0", VA = "0x14011A0")]
		public WriteSmartBool()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D86E0", Offset = "0x8D86E0")]
	public class WriteSmartBoolSet : WriteSetBase<bool, BoolSetWriter>
	{
		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x14011EC", Offset = "0x14011EC", VA = "0x14011EC")]
		public WriteSmartBoolSet()
		{
		}
	}
}
namespace SmartData.SmartBool.Data
{
	[Token(Token = "0x20006E0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D871C", Offset = "0x8D871C")]
	public class BoolConst : SmartConst<bool>, ISmartConst<bool>, ISmartData<bool>, ISmartObject
	{
		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x104BFBC", Offset = "0x104BFBC", VA = "0x104BFBC")]
		public BoolConst()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D876C", Offset = "0x8D876C")]
	public class BoolMulti : SmartMulti<bool, BoolVar>, ISmartMulti<bool, BoolVar>, ISmartMulti<BoolVar>, ISmartMultiBindable<Action<bool>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x104C008", Offset = "0x104C008", VA = "0x104C008")]
		public BoolMulti()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D87BC", Offset = "0x8D87BC")]
	public class BoolSet : SmartSet<bool>, ISmartDataSet<bool>, ISmartSet<bool>, ISmartObject, IEnumerable<bool>, IEnumerable, ISmartSetWriter<bool>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x104C3F4", Offset = "0x104C3F4", VA = "0x104C3F4")]
		public BoolSet()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D880C", Offset = "0x8D880C")]
	public class BoolVar : SmartVar<bool>, ISmartVar<bool>, ISmartDataWriter<bool>, ISmartObject, ISmartEvent<bool>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x20006E4")]
		public class BoolEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x1000848", Offset = "0x1000848", VA = "0x1000848")]
			public BoolEvent()
			{
			}
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0x104C768", Offset = "0x104C768", VA = "0x104C768")]
		public BoolVar()
		{
		}
	}
}
namespace SmartData.Examples
{
	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8858", Offset = "0x8D8858")]
	public class SmartDataExample_CharacterController : MonoBehaviour
	{
		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController _cc;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xEE4994", Offset = "0xEE4994", VA = "0xEE4994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xEE49F0", Offset = "0xEE49F0", VA = "0xEE49F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0xEE4AE4", Offset = "0xEE4AE4", VA = "0xEE4AE4")]
		public SmartDataExample_CharacterController()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	public class SmartDataExample_Damageable : MonoBehaviour
	{
		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatWriter hp;

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xEE4BC4", Offset = "0xEE4BC4", VA = "0xEE4BC4")]
		public void Damage(float damage)
		{
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xEE4CD4", Offset = "0xEE4CD4", VA = "0xEE4CD4")]
		public SmartDataExample_Damageable()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D88B8", Offset = "0x8D88B8")]
	public class SmartDataExample_DamageOnCollision : MonoBehaviour
	{
		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xEE4AF4", Offset = "0xEE4AF4", VA = "0xEE4AF4")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xEE4CCC", Offset = "0xEE4CCC", VA = "0xEE4CCC")]
		public SmartDataExample_DamageOnCollision()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class SmartDataExample_Notes : MonoBehaviour
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xEE4CDC", Offset = "0xEE4CDC", VA = "0xEE4CDC")]
		public SmartDataExample_Notes()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8918", Offset = "0x8D8918")]
	public class SmartDataExample_OnHit : MonoBehaviour
	{
		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nameMatch;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventDispatcher onHit;

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0xEE4CE4", Offset = "0xEE4CE4", VA = "0xEE4CE4")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xEE4D48", Offset = "0xEE4D48", VA = "0xEE4D48")]
		public SmartDataExample_OnHit()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8978", Offset = "0x8D8978")]
	public class SmartDataExample_SetText : MonoBehaviour
	{
		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xEE4D50", Offset = "0xEE4D50", VA = "0xEE4D50")]
		public void SetText(int value)
		{
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xEE4E4C", Offset = "0xEE4E4C", VA = "0xEE4E4C")]
		public void SetText(float value)
		{
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xEE4EB8", Offset = "0xEE4EB8", VA = "0xEE4EB8")]
		public void SetText(bool value)
		{
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xEE4F24", Offset = "0xEE4F24", VA = "0xEE4F24")]
		public void SetText(UnityEngine.Object value)
		{
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xEE4DBC", Offset = "0xEE4DBC", VA = "0xEE4DBC")]
		private void Set(object value)
		{
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xEE4F28", Offset = "0xEE4F28", VA = "0xEE4F28")]
		public SmartDataExample_SetText()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D89D8", Offset = "0x8D89D8")]
	public class SmartDataExample02_Damageable : MonoBehaviour
	{
		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damagePerHit;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatWriter hp;

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xEE4694", Offset = "0xEE4694", VA = "0xEE4694")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xEE4770", Offset = "0xEE4770", VA = "0xEE4770")]
		public SmartDataExample02_Damageable()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D8A38", Offset = "0x8D8A38")]
	public class SmartDataExample04_BindSmartEvent : MonoBehaviour
	{
		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventListener myEvent;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem _particles;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IRelayBinding _eventBinding;

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xEE4778", Offset = "0xEE4778", VA = "0xEE4778")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xEE484C", Offset = "0xEE484C", VA = "0xEE484C")]
		private void OnEvent()
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xEE48D8", Offset = "0xEE48D8", VA = "0xEE48D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xEE498C", Offset = "0xEE498C", VA = "0xEE498C")]
		public SmartDataExample04_BindSmartEvent()
		{
		}
	}
}
namespace SmartData.SmartEvent
{
	[Serializable]
	[Token(Token = "0x20006ED")]
	public class EventMultiListener : SmartMultiRef<EventMulti, EventVar>
	{
		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _onEvent;

		[Token(Token = "0x1700059C")]
		protected EventVar _event
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x1012F38", Offset = "0x1012F38", VA = "0x1012F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x1013014", Offset = "0x1013014", VA = "0x1013014", Slot = "10")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x101313C", Offset = "0x101313C", VA = "0x101313C")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x1012FA8", Offset = "0x1012FA8", VA = "0x1012FA8")]
		protected void InvokeUnityEvent()
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x1012FC8", Offset = "0x1012FC8", VA = "0x1012FC8")]
		public EventMultiListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EE")]
	public class EventMultiDispatcher : EventMultiListener
	{
		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x1012EDC", Offset = "0x1012EDC", VA = "0x1012EDC")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x1012FC4", Offset = "0x1012FC4", VA = "0x1012FC4")]
		public EventMultiDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EF")]
	public class EventListener : SmartRefMultiableBase, ISmartEventRefListener, ISmartRef, ISmartEvent, ISmartObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected EventVar _smartEvent;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected EventMulti _smartMulti;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected bool _useMulti;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent _onEvent;

		[Token(Token = "0x1700059D")]
		public override bool isValid
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x101262C", Offset = "0x101262C", VA = "0x101262C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059E")]
		public override string name
		{
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0x10126A4", Offset = "0x10126A4", VA = "0x10126A4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059F")]
		public virtual IRelayLink relay
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x10113CC", Offset = "0x10113CC", VA = "0x10113CC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		protected EventVar _event
		{
			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0x101145C", Offset = "0x101145C", VA = "0x101145C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x10126F0", Offset = "0x10126F0", VA = "0x10126F0", Slot = "13")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x10126F4", Offset = "0x10126F4", VA = "0x10126F4", Slot = "14")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x1012804", Offset = "0x1012804", VA = "0x1012804", Slot = "10")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x1012978", Offset = "0x1012978", VA = "0x1012978", Slot = "12")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0x10114D4", Offset = "0x10114D4", VA = "0x10114D4")]
		protected void InvokeUnityEvent()
		{
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x1011560", Offset = "0x1011560", VA = "0x1011560")]
		public EventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F0")]
	public class EventDispatcher : EventListener, ISmartEventRefDispatcher, ISmartRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Relay _localEvent;

		[Token(Token = "0x170005A1")]
		public override IRelayLink relay
		{
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x1011380", Offset = "0x1011380", VA = "0x1011380", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x1008330", Offset = "0x1008330", VA = "0x1008330", Slot = "16")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0x10114F0", Offset = "0x10114F0", VA = "0x10114F0")]
		public EventDispatcher()
		{
		}
	}
}
namespace SmartData.SmartEvent.Data
{
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8A98", Offset = "0x8D8A98")]
	public class EventMulti : SmartMulti<EventVar>
	{
		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x1012E20", Offset = "0x1012E20", VA = "0x1012E20")]
		public IRelayBinding BindListener(Action listener, int index)
		{
			return null;
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x1012E90", Offset = "0x1012E90", VA = "0x1012E90")]
		public EventMulti()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8AE8", Offset = "0x8D8AE8")]
	public class EventVar : SmartDecorableBase, ISmartEvent, ISmartObject
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Relay _relay;

		[Token(Token = "0x170005A2")]
		public IRelayLink relay
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0x10126D4", Offset = "0x10126D4", VA = "0x10126D4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x10128A4", Offset = "0x10128A4", VA = "0x10128A4", Slot = "9")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0x1008418", Offset = "0x1008418", VA = "0x1008418")]
		public BlockFlags Dispatch()
		{
			return default(BlockFlags);
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0x1015E5C", Offset = "0x1015E5C", VA = "0x1015E5C")]
		public EventVar()
		{
		}
	}
}
namespace SmartData.SmartEvent.Components
{
	[Token(Token = "0x20006F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8B38", Offset = "0x8D8B38")]
	public class DispatchSmartEvent : MonoBehaviour
	{
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E38B4", Offset = "0x8E38B4")]
		[ForceHideEvent]
		[SerializeField]
		private EventDispatcher _event;

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0x1008318", Offset = "0x1008318", VA = "0x1008318")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x1008400", Offset = "0x1008400", VA = "0x1008400")]
		public void DispatchEvent(EventVar e)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x1008534", Offset = "0x1008534", VA = "0x1008534")]
		public DispatchSmartEvent()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8B74", Offset = "0x8D8B74")]
	public class ListenSmartEvent : ReadSmartBase<EventListener>
	{
		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x1775DC4", Offset = "0x1775DC4", VA = "0x1775DC4")]
		public ListenSmartEvent()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8BB0", Offset = "0x8D8BB0")]
	public class SmartEventOnLifecycle : MonoBehaviour
	{
		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E390C", Offset = "0x8E390C")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E390C", Offset = "0x8E390C")]
		private EventDispatcher _onAwake;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3970", Offset = "0x8E3970")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3970", Offset = "0x8E3970")]
		private EventDispatcher _onStart;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E39D0", Offset = "0x8E39D0")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E39D0", Offset = "0x8E39D0")]
		private EventDispatcher _onEnable;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3A34", Offset = "0x8E3A34")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3A34", Offset = "0x8E3A34")]
		[SerializeField]
		private EventDispatcher _onDisable;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3A94", Offset = "0x8E3A94")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3A94", Offset = "0x8E3A94")]
		private EventDispatcher _onDestroy;

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0xEE6A68", Offset = "0xEE6A68", VA = "0xEE6A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xEE6CE4", Offset = "0xEE6CE4", VA = "0xEE6CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xEE6CEC", Offset = "0xEE6CEC", VA = "0xEE6CEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xEE6CF4", Offset = "0xEE6CF4", VA = "0xEE6CF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0xEE6CFC", Offset = "0xEE6CFC", VA = "0xEE6CFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xEE6C08", Offset = "0xEE6C08", VA = "0xEE6C08")]
		private void SetReceive(bool enable, params EventDispatcher[] es)
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xEE6C98", Offset = "0xEE6C98", VA = "0xEE6C98")]
		private void Dispatch(EventDispatcher e)
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xEE6FBC", Offset = "0xEE6FBC", VA = "0xEE6FBC")]
		public SmartEventOnLifecycle()
		{
		}
	}
}
namespace SmartData.SmartFloat
{
	[Serializable]
	[Token(Token = "0x20006F6")]
	public class FloatMultiReader : SmartDataMultiRef<FloatMulti, float, FloatVar>
	{
		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0x11B404C", Offset = "0x11B404C", VA = "0x11B404C")]
		public static implicit operator float(FloatMultiReader r)
		{
			return default(float);
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x11B40A0", Offset = "0x11B40A0", VA = "0x11B40A0", Slot = "21")]
		protected override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0x11B4130", Offset = "0x11B4130", VA = "0x11B4130")]
		public FloatMultiReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F7")]
	public class FloatMultiWriter : SmartDataMultiRefWriter<FloatMulti, float, FloatVar>
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0x11B417C", Offset = "0x11B417C", VA = "0x11B417C")]
		public static implicit operator float(FloatMultiWriter r)
		{
			return default(float);
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x11B41D0", Offset = "0x11B41D0", VA = "0x11B41D0", Slot = "21")]
		protected override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x11B4260", Offset = "0x11B4260", VA = "0x11B4260", Slot = "26")]
		protected sealed override void InvokeUnityEvent(float value)
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x11B42C4", Offset = "0x11B42C4", VA = "0x11B42C4")]
		public FloatMultiWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F8")]
	public class FloatSetReader : SmartSetRefBase<float, FloatSet>, ISmartSetRefReader<float>, ISmartRef, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable
	{
		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVar.FloatEvent _onAdd;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVar.FloatEvent _onRemove;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVar.FloatEvent _onChange;

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x11B4544", Offset = "0x11B4544", VA = "0x11B4544", Slot = "20")]
		protected override Action<SetEventData<float>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x11B45D0", Offset = "0x11B45D0", VA = "0x11B45D0")]
		public FloatSetReader()
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x11B461C", Offset = "0x11B461C", VA = "0x11B461C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4630", Offset = "0x8F4630")]
		private void <GetUnityEventInvoke>b__3_0(SetEventData<float> d)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F9")]
	public class FloatSetWriter : SmartSetRefWriterBase<float, FloatSet>, ISmartSetRefReader<float>, ISmartRef, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable
	{
		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVar.FloatEvent _onAdd;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVar.FloatEvent _onRemove;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVar.FloatEvent _onChange;

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x11B46E4", Offset = "0x11B46E4", VA = "0x11B46E4", Slot = "20")]
		protected override Action<SetEventData<float>> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0x11B4768", Offset = "0x11B4768", VA = "0x11B4768", Slot = "31")]
		protected sealed override void InvokeUnityEvent(SetEventData<float> d)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0x11B4830", Offset = "0x11B4830", VA = "0x11B4830")]
		public FloatSetWriter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FA")]
	public class FloatReader : SmartDataRefBase<float, FloatVar, FloatConst, FloatMulti>
	{
		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x11B441C", Offset = "0x11B441C", VA = "0x11B441C", Slot = "18")]
		protected sealed override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x11B44AC", Offset = "0x11B44AC", VA = "0x11B44AC")]
		public FloatReader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006FB")]
	public class FloatWriter : SmartDataRefWriter<float, FloatVar, FloatConst, FloatMulti>
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVar.FloatEvent _onUpdate;

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x11B48C8", Offset = "0x11B48C8", VA = "0x11B48C8", Slot = "18")]
		protected sealed override Action<float> GetUnityEventInvoke()
		{
			return null;
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x11B4958", Offset = "0x11B4958", VA = "0x11B4958", Slot = "24")]
		protected sealed override void InvokeUnityEvent(float value)
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x11B49BC", Offset = "0x11B49BC", VA = "0x11B49BC")]
		public FloatWriter()
		{
		}
	}
}
namespace SmartData.SmartFloat.Components
{
	[Token(Token = "0x20006FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8BEC", Offset = "0x8D8BEC")]
	public class ReadSmartFloat : ReadSmartBase<FloatReader>
	{
		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x129812C", Offset = "0x129812C", VA = "0x129812C")]
		public ReadSmartFloat()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8C28", Offset = "0x8D8C28")]
	public class ReadSmartFloatSet : ReadSmartBase<FloatSetReader>
	{
		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x1298178", Offset = "0x1298178", VA = "0x1298178")]
		public ReadSmartFloatSet()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8C64", Offset = "0x8D8C64")]
	public class WriteSmartFloat : WriteSmartBase<float, FloatWriter>
	{
		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x1401238", Offset = "0x1401238", VA = "0x1401238")]
		public WriteSmartFloat()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D8CA0", Offset = "0x8D8CA0")]
	public class WriteSmartFloatSet : WriteSetBase<float, FloatSetWriter>
	{
		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x1401284", Offset = "0x1401284", VA = "0x1401284")]
		public WriteSmartFloatSet()
		{
		}
	}
}
namespace SmartData.SmartFloat.Data
{
	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8CDC", Offset = "0x8D8CDC")]
	public class FloatConst : SmartConst<float>, ISmartConst<float>, ISmartData<float>, ISmartObject
	{
		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x11B3FB4", Offset = "0x11B3FB4", VA = "0x11B3FB4")]
		public FloatConst()
		{
		}
	}
	[Token(Token = "0x2000701")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8D2C", Offset = "0x8D8D2C")]
	public class FloatMulti : SmartMulti<float, FloatVar>, ISmartMulti<float, FloatVar>, ISmartMulti<FloatVar>, ISmartMultiBindable<Action<float>>, ISmartMultiAutoBinder, ISmartObject
	{
		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x11B4000", Offset = "0x11B4000", VA = "0x11B4000")]
		public FloatMulti()
		{
		}
	}
	[Token(Token = "0x2000702")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8D7C", Offset = "0x8D8D7C")]
	public class FloatSet : SmartSet<float>, ISmartDataSet<float>, ISmartSet<float>, ISmartObject, IEnumerable<float>, IEnumerable, ISmartSetWriter<float>, ISmartSetWriter, ISmartAutoBinder
	{
		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x11B44F8", Offset = "0x11B44F8", VA = "0x11B44F8")]
		public FloatSet()
		{
		}
	}
	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8D8DCC", Offset = "0x8D8DCC")]
	public class FloatVar : SmartVar<float>, ISmartVar<float>, ISmartDataWriter<float>, ISmartObject, ISmartEvent<float>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Serializable]
		[Token(Token = "0x2000704")]
		public class FloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xE7BF90", Offset = "0xE7BF90", VA = "0xE7BF90")]
			public FloatEvent()
			{
			}
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x11B487C", Offset = "0x11B487C", VA = "0x11B487C")]
		public FloatVar()
		{
		}
	}
}
namespace SmartData.SmartFloat.Decorators
{
	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "DecoratorDescriptionAttribute", RVA = "0x8D8E18", Offset = "0x8D8E18")]
	public class SmartFloatRangeDecorator : SmartDataDecoratorBase<float>
	{
		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _min;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _max;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Relay<SmartFloatRangeDecorator, float, float> _onRangeClamped;

		[Token(Token = "0x170005A3")]
		public float min
		{
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xEE6FC4", Offset = "0xEE6FC4", VA = "0xEE6FC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A4")]
		public float max
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xEE6FCC", Offset = "0xEE6FCC", VA = "0xEE6FCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A5")]
		public IRelayLink<SmartFloatRangeDecorator, float, float> onRangeClamped
		{
			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xEE6FD4", Offset = "0xEE6FD4", VA = "0xEE6FD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0xEE6FDC", Offset = "0xEE6FDC", VA = "0xEE6FDC", Slot = "9")]
		public override float OnUpdated(float oldValue, float newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return default(float);
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0xEE706C", Offset = "0xEE706C", VA = "0xEE706C")]
		public SmartFloatRangeDecorator()
		{
		}
	}
}
namespace SmartData.Interfaces
{
	[Token(Token = "0x2000706")]
	public interface ISmartObject
	{
	}
	[Token(Token = "0x2000707")]
	public interface ISmartEvent : ISmartObject
	{
		[Token(Token = "0x170005A6")]
		IRelayLink relay
		{
			[Token(Token = "0x6002C8A")]
			get;
		}

		[Token(Token = "0x6002C8B")]
		IRelayBinding BindListener(Action listener);
	}
	[Token(Token = "0x2000708")]
	public interface ISmartEvent<TData> : ISmartObject
	{
		[Token(Token = "0x170005A7")]
		IRelayLink<TData> relay
		{
			[Token(Token = "0x6002C8C")]
			get;
		}

		[Token(Token = "0x6002C8D")]
		IRelayBinding BindListener(Action<TData> listener, bool callNow = false);

		[Token(Token = "0x6002C8E")]
		IRelayBinding BindListener(Action listener);
	}
	[Token(Token = "0x2000709")]
	public interface ISmartEventDispatcher : ISmartObject
	{
		[Token(Token = "0x6002C8F")]
		void Dispatch();
	}
	[Token(Token = "0x200070A")]
	public interface ISmartData<TData> : ISmartObject
	{
		[Token(Token = "0x170005A8")]
		TData value
		{
			[Token(Token = "0x6002C90")]
			get;
		}
	}
	[Token(Token = "0x200070B")]
	public interface ISmartDataWriter<TData> : ISmartObject
	{
		[Token(Token = "0x170005A9")]
		TData value
		{
			[Token(Token = "0x6002C91")]
			get;
			[Token(Token = "0x6002C92")]
			set;
		}

		[Token(Token = "0x170005AA")]
		TData defaultValue
		{
			[Token(Token = "0x6002C93")]
			get;
		}

		[Token(Token = "0x6002C94")]
		void SetToDefault();
	}
	[Token(Token = "0x200070C")]
	public interface ISmartAutoBinder : ISmartObject
	{
		[Token(Token = "0x6002C95")]
		void RequestCtorAutoUnityEventBinding(ISmartRef r);
	}
	[Token(Token = "0x200070D")]
	public interface ISmartMultiAutoBinder : ISmartObject
	{
		[Token(Token = "0x6002C96")]
		void RequestCtorAutoUnityEventBinding(ISmartRef r, int index);
	}
	[Token(Token = "0x200070E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8E50", Offset = "0x8D8E50")]
	public interface ISmartSet<TData> : ISmartObject, IEnumerable<TData>, IEnumerable
	{
		[Token(Token = "0x170005AB")]
		int count
		{
			[Token(Token = "0x6002C97")]
			get;
		}

		[Token(Token = "0x170005AC")]
		TData Item
		{
			[Token(Token = "0x6002C98")]
			get;
		}

		[Token(Token = "0x170005AD")]
		IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002C99")]
			get;
		}

		[Token(Token = "0x6002C9A")]
		IRelayBinding BindListener(Action listener);

		[Token(Token = "0x6002C9B")]
		IRelayBinding BindListener(Action<SetEventData<TData>> listener);
	}
	[Token(Token = "0x200070F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8E88", Offset = "0x8D8E88")]
	public interface ISmartSetWriter<TData> : ISmartObject
	{
		[Token(Token = "0x170005AE")]
		TData Item
		{
			[Token(Token = "0x6002C9C")]
			get;
			[Token(Token = "0x6002C9D")]
			set;
		}

		[Token(Token = "0x6002C9E")]
		bool Add(TData element, bool allowDuplicates = true);

		[Token(Token = "0x6002C9F")]
		int Remove(TData element);
	}
	[Token(Token = "0x2000710")]
	public interface ISmartSetWriter : ISmartObject
	{
		[Token(Token = "0x6002CA0")]
		bool RemoveAt(int index);
	}
	[Token(Token = "0x2000711")]
	public interface ISmartRef
	{
		[Token(Token = "0x170005AF")]
		bool isValid
		{
			[Token(Token = "0x6002CA1")]
			get;
		}

		[Token(Token = "0x170005B0")]
		bool unityEventOnReceive
		{
			[Token(Token = "0x6002CA2")]
			get;
			[Token(Token = "0x6002CA3")]
			set;
		}

		[Token(Token = "0x6002CA4")]
		void UnbindUnityEventOnDestroy(bool enableUnityEventNow = true);
	}
	[Token(Token = "0x2000712")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8EC0", Offset = "0x8D8EC0")]
	public interface ISmartMulti<TSmart> where TSmart : ISmartObject
	{
		[Token(Token = "0x170005B1")]
		TSmart Item
		{
			[Token(Token = "0x6002CA5")]
			get;
		}
	}
	[Token(Token = "0x2000713")]
	public interface ISmartMultiBindable<TDelegate>
	{
		[Token(Token = "0x6002CA6")]
		IRelayBinding BindListener(TDelegate listener, int index, bool callNow = false);
	}
	[Token(Token = "0x2000714")]
	public interface ISmartMultiRef
	{
		[Token(Token = "0x170005B2")]
		int index
		{
			[Token(Token = "0x6002CA7")]
			get;
			[Token(Token = "0x6002CA8")]
			set;
		}
	}
	[Token(Token = "0x2000715")]
	public interface ISmartConst<TData> : ISmartData<TData>, ISmartObject
	{
	}
	[Token(Token = "0x2000716")]
	public interface ISmartVar<TData> : ISmartDataWriter<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartAutoBinder
	{
	}
	[Token(Token = "0x2000717")]
	public interface ISmartMulti<TData, TSmart> : ISmartMulti<TSmart>, ISmartMultiBindable<Action<TData>>, ISmartMultiAutoBinder, ISmartObject where TSmart : ISmartVar<TData>, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x2000718")]
	public interface ISmartEventMulti : ISmartMulti<ISmartEvent>, ISmartMultiBindable<Action>, ISmartMultiAutoBinder, ISmartObject
	{
	}
	[Token(Token = "0x2000719")]
	public interface ISmartDataSet<TData> : ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter, ISmartAutoBinder
	{
	}
	[Token(Token = "0x200071A")]
	public interface ISmartEventRefListener : ISmartRef, ISmartEvent, ISmartObject
	{
	}
	[Token(Token = "0x200071B")]
	public interface ISmartEventRefDispatcher : ISmartRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x200071C")]
	public interface ISmartRefReader<TData> : ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>
	{
	}
	[Token(Token = "0x200071D")]
	public interface ISmartRefWriter<TData> : ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartDataWriter<TData>
	{
	}
	[Token(Token = "0x200071E")]
	public interface ISmartEventMultiRefReader : ISmartRef, ISmartMultiRef, ISmartEvent, ISmartObject
	{
	}
	[Token(Token = "0x200071F")]
	public interface ISmartEventMultiRefWriter : ISmartRef, ISmartMultiRef, ISmartEvent, ISmartObject, ISmartEventDispatcher
	{
	}
	[Token(Token = "0x2000720")]
	public interface ISmartDataMultiRefReader<TData, TSmart> : ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject where TSmart : ISmartVar<TData>
	{
	}
	[Token(Token = "0x2000721")]
	public interface ISmartDataMultiRefWriter<TData, TSmart> : ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, ISmartDataWriter<TData> where TSmart : ISmartVar<TData>
	{
	}
	[Token(Token = "0x2000722")]
	public interface ISmartSetRefReader<TData> : ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable
	{
	}
	[Token(Token = "0x2000723")]
	public interface ISmartSetRefWriter<TData> : ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter
	{
	}
}
namespace SmartData.Abstract
{
	[Token(Token = "0x2000724")]
	public abstract class SmartComponentBase : MonoBehaviour
	{
		[Token(Token = "0x170005B3")]
		protected virtual bool bindEvents
		{
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xEE4508", Offset = "0xEE4508", VA = "0xEE4508", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B4")]
		public abstract bool isValid
		{
			[Token(Token = "0x6002CAE")]
			get;
		}

		[Token(Token = "0x6002CAA")]
		protected abstract void EnableUnityEvents(bool enable);

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xEE4510", Offset = "0xEE4510", VA = "0xEE4510")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xEE45FC", Offset = "0xEE45FC", VA = "0xEE45FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0xEE4644", Offset = "0xEE4644", VA = "0xEE4644")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0xEE468C", Offset = "0xEE468C", VA = "0xEE468C")]
		protected SmartComponentBase()
		{
		}
	}
	[Token(Token = "0x2000725")]
	public abstract class ReadSmartBase<TRef> : SmartComponentBase where TRef : ISmartRef
	{
		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3BB8", Offset = "0x8E3BB8")]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3BB8", Offset = "0x8E3BB8")]
		[SerializeField]
		protected TRef[] _data;

		[Token(Token = "0x170005B5")]
		public override bool isValid
		{
			[Token(Token = "0x6002CB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CB1")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CB2")]
		protected ReadSmartBase()
		{
		}
	}
	[Token(Token = "0x2000726")]
	public abstract class WriteSmartBase<TData, TRef> : SmartComponentBase where TRef : ISmartRefWriter<TData>
	{
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3C0C", Offset = "0x8E3C0C")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3C0C", Offset = "0x8E3C0C")]
		[ForceHideEvent]
		protected TRef _data;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3C70", Offset = "0x8E3C70")]
		private TData _valueToSet;

		[Token(Token = "0x170005B6")]
		protected override bool bindEvents
		{
			[Token(Token = "0x6002CB3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B7")]
		public override bool isValid
		{
			[Token(Token = "0x6002CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B8")]
		public TData value
		{
			[Token(Token = "0x6002CB5")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002CB6")]
			set
			{
			}
		}

		[Token(Token = "0x6002CB7")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002CB8")]
		public void Set()
		{
		}

		[Token(Token = "0x6002CB9")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CBA")]
		protected WriteSmartBase()
		{
		}
	}
	[Token(Token = "0x2000727")]
	public abstract class WriteSetBase<TData, TRef> : SmartComponentBase where TRef : ISmartSetRefWriter<TData>
	{
		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "ForceEventableAttribute", RVA = "0x8E3CBC", Offset = "0x8E3CBC")]
		[AttributeAttribute(Name = "ForceNoAutoListenAttribute", RVA = "0x8E3CBC", Offset = "0x8E3CBC")]
		[ForceHideEvent]
		protected TRef _data;

		[Token(Token = "0x170005B9")]
		public override bool isValid
		{
			[Token(Token = "0x6002CBB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BA")]
		protected override bool bindEvents
		{
			[Token(Token = "0x6002CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CBD")]
		public void Add(TData val)
		{
		}

		[Token(Token = "0x6002CBE")]
		public void Remove(TData val)
		{
		}

		[Token(Token = "0x6002CBF")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6002CC0")]
		protected override void EnableUnityEvents(bool enable)
		{
		}

		[Token(Token = "0x6002CC1")]
		protected WriteSetBase()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public abstract class SmartBase : ScriptableObject
	{
		[Token(Token = "0x2000729")]
		protected class AutoBindingHelper
		{
			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<ISmartRef> _refsToBind;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3D30", Offset = "0x8E3D30")]
			private bool <hasRefsToBind>k__BackingField;

			[Token(Token = "0x170005BB")]
			public bool hasRefsToBind
			{
				[Token(Token = "0x6002CC5")]
				[Address(RVA = "0xEADE8C", Offset = "0xEADE8C", VA = "0xEADE8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4640", Offset = "0x8F4640")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002CC6")]
				[Address(RVA = "0xEADE94", Offset = "0xEADE94", VA = "0xEADE94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4650", Offset = "0x8F4650")]
				private set
				{
				}
			}

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xEADEA0", Offset = "0xEADEA0", VA = "0xEADEA0")]
			public void RequestAutoBinding(ISmartRef r)
			{
			}

			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xEADF94", Offset = "0xEADF94", VA = "0xEADF94")]
			public void AutoBind()
			{
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xEADFBC", Offset = "0xEADFBC", VA = "0xEADFBC")]
			public static void AutoBind(List<ISmartRef> refs)
			{
			}

			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xEAE0EC", Offset = "0xEAE0EC", VA = "0xEAE0EC")]
			public AutoBindingHelper()
			{
			}
		}

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _description;

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0xEE41B0", Offset = "0xEE41B0", VA = "0xEE41B0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0xEE41B4", Offset = "0xEE41B4", VA = "0xEE41B4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xEE41B8", Offset = "0xEE41B8", VA = "0xEE41B8")]
		protected SmartBase()
		{
		}
	}
	[Token(Token = "0x200072A")]
	public abstract class SmartBindableBase : SmartBase
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected SmartDecoratorBase[] _decorators;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SmartDecoratorBase> _tempGetDecorators;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool _hasDecorators;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected AutoBindingHelper _binder;

		[Token(Token = "0x170005BC")]
		protected int _tempDecoratorCount
		{
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xEE41C0", Offset = "0xEE41C0", VA = "0xEE41C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xEE423C", Offset = "0xEE423C", VA = "0xEE423C", Slot = "6")]
		public void RequestCtorAutoUnityEventBinding(ISmartRef r)
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xEE4258", Offset = "0xEE4258", VA = "0xEE4258")]
		protected int PopulateTempDecorators(Type t, SmartDecoratorBase[] input, bool clear)
		{
			return default(int);
		}

		[Token(Token = "0x6002CCE")]
		protected int FillResultDecorators<TDecorator>(TDecorator[] results) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xEE43E4", Offset = "0xEE43E4", VA = "0xEE43E4", Slot = "7")]
		protected virtual void EvalHasDecorators()
		{
		}

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0xEE4400", Offset = "0xEE4400", VA = "0xEE4400", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0xEE440C", Offset = "0xEE440C", VA = "0xEE440C")]
		protected SmartBindableBase()
		{
		}
	}
	[Token(Token = "0x200072B")]
	public abstract class SmartDecorableBase : SmartBindableBase
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<SmartMultiBase, SmartDecoratorBase[]> _multiDecorators;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<SmartMultiBase, int> _multiParentsPersistent;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3D50", Offset = "0x8E3D50")]
		private MultiElementType <multiElementType>k__BackingField;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3D60", Offset = "0x8E3D60")]
		private SmartMultiBase <multiParentDynamic>k__BackingField;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _multiParentDynamicIndex;

		[Token(Token = "0x170005BD")]
		public MultiElementType multiElementType
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xEE5B3C", Offset = "0xEE5B3C", VA = "0xEE5B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4660", Offset = "0x8F4660")]
			get
			{
				return default(MultiElementType);
			}
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xEE5B44", Offset = "0xEE5B44", VA = "0xEE5B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4670", Offset = "0x8F4670")]
			private set
			{
			}
		}

		[Token(Token = "0x170005BE")]
		public SmartMultiBase multiParentDynamic
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xEE5B4C", Offset = "0xEE5B4C", VA = "0xEE5B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4680", Offset = "0x8F4680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xEE5B54", Offset = "0xEE5B54", VA = "0xEE5B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4690", Offset = "0x8F4690")]
			private set
			{
			}
		}

		[Token(Token = "0x170005BF")]
		public int multiParentDynamicIndex
		{
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xEE5B5C", Offset = "0xEE5B5C", VA = "0xEE5B5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002CD3")]
		public TDecorator[] GetDecorators<TDecorator>(bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002CD4")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results, bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002CD5")]
		protected int PopulateTempDecorators<TDecorator>(bool includeMultis)
		{
			return default(int);
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0xEE5B64", Offset = "0xEE5B64", VA = "0xEE5B64")]
		public SmartMultiBase[] GetMultiParentsPersistent()
		{
			return null;
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0xEE5D48", Offset = "0xEE5D48", VA = "0xEE5D48")]
		public int GetMultiIndex([Optional] SmartMultiBase parent)
		{
			return default(int);
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xEE5EDC", Offset = "0xEE5EDC", VA = "0xEE5EDC")]
		public void SetMulti(SmartMultiBase multi, int index, bool isDynamic)
		{
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0xEE60D0", Offset = "0xEE60D0", VA = "0xEE60D0")]
		public void SetMultiDecorators(SmartDecoratorBase[] decorators, SmartMultiBase multi)
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xEE6270", Offset = "0xEE6270", VA = "0xEE6270")]
		private void WarnMultiDecorators()
		{
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xEE6614", Offset = "0xEE6614", VA = "0xEE6614", Slot = "7")]
		protected override void EvalHasDecorators()
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xEE6690", Offset = "0xEE6690", VA = "0xEE6690", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0xEE6718", Offset = "0xEE6718", VA = "0xEE6718")]
		protected SmartDecorableBase()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public abstract class SmartConst<TData> : SmartBase
	{
		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TData _value;

		[Token(Token = "0x170005C0")]
		public TData value
		{
			[Token(Token = "0x6002CE3")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x6002CE4")]
		protected SmartConst()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public abstract class SmartVarBase : SmartDecorableBase
	{
		[Token(Token = "0x200072E")]
		public enum DataType
		{
			[Token(Token = "0x400228E")]
			NONE,
			[Token(Token = "0x400228F")]
			STRUCT,
			[Token(Token = "0x4002290")]
			ARRAY,
			[Token(Token = "0x4002291")]
			DICTIONARY,
			[Token(Token = "0x4002292")]
			COLLECTION,
			[Token(Token = "0x4002293")]
			CLASS
		}

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected bool _resetOnSceneChange;

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xEE7A38", Offset = "0xEE7A38", VA = "0xEE7A38")]
		public static DataType GetDataType(Type tData)
		{
			return default(DataType);
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xEE7C70", Offset = "0xEE7C70", VA = "0xEE7C70")]
		protected SmartVarBase()
		{
		}
	}
	[Token(Token = "0x200072F")]
	public abstract class SmartVar<TData> : SmartVarBase, ISmartVar<TData>, ISmartDataWriter<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartAutoBinder
	{
		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8EF8", Offset = "0x8D8EF8")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002CF8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002CF9")]
			internal void <BindListener>b__0(TData x)
			{
			}
		}

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected DataType _dataType;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3DA0", Offset = "0x8E3DA0")]
		protected TData _value;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TData _runtimeValue;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<TData> _relay;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ConstructorInfo _dictionaryConstructor;

		[Token(Token = "0x170005C1")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002CE7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C2")]
		public TData value
		{
			[Token(Token = "0x6002CE8")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002CE9")]
			set
			{
			}
		}

		[Token(Token = "0x170005C3")]
		public TData defaultValue
		{
			[Token(Token = "0x6002CEA")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x6002CEB")]
		private void SetValue(TData v, RestoreMode restore)
		{
		}

		[Token(Token = "0x6002CEC")]
		private TData ExecuteDecoratorsOnUpdate(SmartDecoratorBase[] decorators, TData oldValue, TData newValue, RestoreMode restore, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002CED")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002CEE")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002CEF")]
		private void OnSceneChanged(Scene s0, Scene s1)
		{
		}

		[Token(Token = "0x6002CF0")]
		protected void Restore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002CF1")]
		protected virtual void OnRestore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002CF2")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002CF3")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002CF4")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002CF5")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002CF6")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002CF7")]
		protected SmartVar()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public abstract class SmartMultiBase : SmartBindableBase
	{
		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3DFC", Offset = "0x8E3DFC")]
		protected int _maxSize;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Relay<int, int> _onElementCountChanged;

		[Token(Token = "0x170005C4")]
		public int maxSize
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xEE7104", Offset = "0xEE7104", VA = "0xEE7104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005C5")]
		public abstract int count
		{
			[Token(Token = "0x6002CFB")]
			get;
		}

		[Token(Token = "0x170005C6")]
		public IRelayLink<int, int> onElementCountChanged
		{
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xEE710C", Offset = "0xEE710C", VA = "0xEE710C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFD")]
		public TDecorator[] GetDecorators<TDecorator>() where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002CFE")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xEE7160", Offset = "0xEE7160", VA = "0xEE7160")]
		protected SmartMultiBase()
		{
		}
	}
	[Token(Token = "0x2000732")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8F08", Offset = "0x8D8F08")]
	public abstract class SmartMulti<TSmart> : SmartMultiBase where TSmart : SmartDecorableBase
	{
		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TSmart[] _persistent;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TSmart> _runtimeList;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, List<ISmartRef>> _refsToBindByIndex;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasRefsToBind;

		[Token(Token = "0x170005C7")]
		public override int count
		{
			[Token(Token = "0x6002D00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005C8")]
		public TSmart Item
		{
			[Token(Token = "0x6002D03")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D01")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D02")]
		public void RequestCtorAutoUnityEventBinding(ISmartRef r, int index)
		{
		}

		[Token(Token = "0x6002D04")]
		protected TSmart Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6002D05")]
		private void UpdateDecorators()
		{
		}

		[Token(Token = "0x6002D06")]
		protected void OnElementsAdded()
		{
		}

		[Token(Token = "0x6002D07")]
		protected SmartMulti()
		{
		}
	}
	[Token(Token = "0x2000733")]
	public abstract class SmartMulti<TData, TSmart> : SmartMulti<TSmart>, IEnumerable<TData>, IEnumerable where TSmart : SmartVar<TData>
	{
		[Token(Token = "0x2000734")]
		public class MultiEnumerator<TEData, TEMulti, TESmart> : IEnumerator<TEData>, IEnumerator, IDisposable where TEMulti : SmartMulti<TEData, TESmart> where TESmart : SmartVar<TEData>
		{
			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TEMulti _multi;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _index;

			[Token(Token = "0x170005C9")]
			private TEData System.Collections.Generic.IEnumerator<TEData>.Current
			{
				[Token(Token = "0x6002D0F")]
				get
				{
					return (TEData)null;
				}
			}

			[Token(Token = "0x170005CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D12")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D0E")]
			public MultiEnumerator(TEMulti m)
			{
			}

			[Token(Token = "0x6002D10")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D11")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002D13")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x6002D08")]
		public TData GetValue(int index)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D09")]
		public IRelayBinding BindListener(Action<TData> listener, int index, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D0A")]
		public IRelayBinding BindListener(Action listener, int index)
		{
			return null;
		}

		[Token(Token = "0x6002D0B")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D0C")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D0D")]
		protected SmartMulti()
		{
		}
	}
	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8F40", Offset = "0x8D8F40")]
	public abstract class SmartSet<TData> : SmartDecorableBase, IEnumerable<TData>, IEnumerable
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8F78", Offset = "0x8D8F78")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002D29")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002D2A")]
			internal void <BindListener>b__0(SetEventData<TData> x)
			{
			}
		}

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _resetOnSceneChange;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TData _toAdd;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TData> _set;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TData> _runtimeSet;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<SetEventData<TData>> _relay;

		[Token(Token = "0x170005CB")]
		public IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002D14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CC")]
		public TData Item
		{
			[Token(Token = "0x6002D15")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002D16")]
			set
			{
			}
		}

		[Token(Token = "0x170005CD")]
		public int count
		{
			[Token(Token = "0x6002D17")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002D18")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002D19")]
		private void OnSceneChanged(Scene s0, Scene s1)
		{
		}

		[Token(Token = "0x6002D1A")]
		protected void Restore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D1B")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002D1C")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D1D")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D1E")]
		public bool Add(TData element, bool allowDuplicates = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1F")]
		public int Remove(TData element)
		{
			return default(int);
		}

		[Token(Token = "0x6002D20")]
		public bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D21")]
		private bool RemoveAt(int index, SetOperation operation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D22")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002D23")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002D24")]
		public void SetAll(List<TData> set)
		{
		}

		[Token(Token = "0x6002D25")]
		public IRelayBinding BindListener(Action<SetEventData<TData>> listener)
		{
			return null;
		}

		[Token(Token = "0x6002D26")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002D27")]
		private SetEventData<TData> ExecuteDecoratorsOnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D28")]
		protected SmartSet()
		{
		}
	}
	[Token(Token = "0x2000737")]
	[Flags]
	public enum BlockFlags
	{
		[Token(Token = "0x40022A9")]
		NONE = 0,
		[Token(Token = "0x40022AA")]
		DISPATCH = 1,
		[Token(Token = "0x40022AB")]
		DECORATORS = 2,
		[Token(Token = "0x40022AC")]
		DATA = 4
	}
	[Token(Token = "0x2000738")]
	public static class Ext_BlockMode
	{
		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x10114C8", Offset = "0x10114C8", VA = "0x10114C8")]
		public static bool Contains(this BlockFlags mask, BlockFlags value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000739")]
	public abstract class SmartDecoratorBase : ScriptableObject
	{
		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _runtimeActive;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Relay<SmartDecoratorBase, bool> _onActivated;

		[Token(Token = "0x170005CE")]
		public bool active
		{
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xEE6824", Offset = "0xEE6824", VA = "0xEE6824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xEE682C", Offset = "0xEE682C", VA = "0xEE682C")]
			set
			{
			}
		}

		[Token(Token = "0x170005CF")]
		public IRelayLink<SmartDecoratorBase, bool> onActivated
		{
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xEE68D0", Offset = "0xEE68D0", VA = "0xEE68D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0xEE6854", Offset = "0xEE6854", VA = "0xEE6854")]
		private void OnSetActive(bool a)
		{
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0xEE6924", Offset = "0xEE6924", VA = "0xEE6924", Slot = "4")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0xEE6928", Offset = "0xEE6928", VA = "0xEE6928", Slot = "5")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0xEE6600", Offset = "0xEE6600", VA = "0xEE6600")]
		public void SetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D33")]
		protected abstract void OnSetOwner(SmartBindableBase owner);

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xEE692C", Offset = "0xEE692C", VA = "0xEE692C")]
		protected SmartDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073A")]
	public abstract class SmartEventDecoratorBase : SmartDecoratorBase, ISmartRefOwnerRedirect
	{
		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventVar _owner;

		[Token(Token = "0x170005D0")]
		public EventVar owner
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xEE69B8", Offset = "0xEE69B8", VA = "0xEE69B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0xEE69C0", Offset = "0xEE69C0", VA = "0xEE69C0", Slot = "6")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D37")]
		public abstract void OnDispatched(ref BlockFlags blockFlags);

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0xEE6A54", Offset = "0xEE6A54", VA = "0xEE6A54", Slot = "7")]
		public UnityEngine.Object GetSmartRefOwner()
		{
			return null;
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xEE6A5C", Offset = "0xEE6A5C", VA = "0xEE6A5C", Slot = "8")]
		public Type GetOwnerType()
		{
			return null;
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xEE6A64", Offset = "0xEE6A64", VA = "0xEE6A64")]
		protected SmartEventDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073B")]
	public abstract class SmartDataDecoratorBase<TData> : SmartDecoratorBase, ISmartRefOwnerRedirect
	{
		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SmartVar<TData> _owner;

		[Token(Token = "0x170005D1")]
		public SmartVar<TData> owner
		{
			[Token(Token = "0x6002D3B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3C")]
		public virtual TData OnUpdated(TData oldValue, TData newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D3D")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D3E")]
		public UnityEngine.Object GetSmartRefOwner()
		{
			return null;
		}

		[Token(Token = "0x6002D3F")]
		public Type GetOwnerType()
		{
			return null;
		}

		[Token(Token = "0x6002D40")]
		protected SmartDataDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073C")]
	public abstract class SmartSetDecoratorBase<TData> : SmartDecoratorBase
	{
		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SmartSet<TData> _owner;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3E98", Offset = "0x8E3E98")]
		private RestoreMode <_currentRestoreMode>k__BackingField;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3EA8", Offset = "0x8E3EA8")]
		private bool <_isClearing>k__BackingField;

		[Token(Token = "0x170005D2")]
		public SmartSet<TData> owner
		{
			[Token(Token = "0x6002D41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D3")]
		protected RestoreMode _currentRestoreMode
		{
			[Token(Token = "0x6002D42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F46B0", Offset = "0x8F46B0")]
			get
			{
				return default(RestoreMode);
			}
			[Token(Token = "0x6002D43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F46C0", Offset = "0x8F46C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005D4")]
		protected bool _isClearing
		{
			[Token(Token = "0x6002D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F46D0", Offset = "0x8F46D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F46E0", Offset = "0x8F46E0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002D46")]
		public virtual SetEventData<TData> OnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D47")]
		public void BeginRestore(RestoreMode restore)
		{
		}

		[Token(Token = "0x6002D48")]
		public void EndRestore()
		{
		}

		[Token(Token = "0x6002D49")]
		protected virtual void OnBeginRestore()
		{
		}

		[Token(Token = "0x6002D4A")]
		protected virtual void OnEndRestore()
		{
		}

		[Token(Token = "0x6002D4B")]
		public void BeginClear()
		{
		}

		[Token(Token = "0x6002D4C")]
		public void EndClear()
		{
		}

		[Token(Token = "0x6002D4D")]
		protected virtual void OnBeginClear()
		{
		}

		[Token(Token = "0x6002D4E")]
		protected virtual void OnEndClear()
		{
		}

		[Token(Token = "0x6002D4F")]
		protected override void OnSetOwner(SmartBindableBase owner)
		{
		}

		[Token(Token = "0x6002D50")]
		protected SmartSetDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073D")]
	public abstract class SmartNetworkDataDecoratorBase<TData> : SmartDataDecoratorBase<TData>
	{
		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3EB8", Offset = "0x8E3EB8")]
		private bool _networkOnlyDispatch;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3F04", Offset = "0x8E3F04")]
		[SerializeField]
		private bool _networkOnlyValue;

		[Token(Token = "0x6002D51")]
		public override TData OnUpdated(TData oldValue, TData newValue, RestoreMode restoreMode, ref BlockFlags block)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D52")]
		protected abstract void Send(TData value);

		[Token(Token = "0x6002D53")]
		public void Receive(TData value)
		{
		}

		[Token(Token = "0x6002D54")]
		protected SmartNetworkDataDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073E")]
	public abstract class SmartNetworkEventDecoratorBase : SmartEventDecoratorBase
	{
		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3F50", Offset = "0x8E3F50")]
		private bool _networkOnlyDispatch;

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xEE7214", Offset = "0xEE7214", VA = "0xEE7214")]
		public void Receive()
		{
		}

		[Token(Token = "0x6002D56")]
		protected abstract void Send();

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0xEE7280", Offset = "0xEE7280", VA = "0xEE7280", Slot = "9")]
		public override void OnDispatched(ref BlockFlags blockFlags)
		{
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0xEE72C4", Offset = "0xEE72C4", VA = "0xEE72C4")]
		protected SmartNetworkEventDecoratorBase()
		{
		}
	}
	[Token(Token = "0x200073F")]
	public abstract class SmartNetworkSetDecoratorBase<TData> : SmartSetDecoratorBase<TData>
	{
		[Token(Token = "0x6002D59")]
		public override SetEventData<TData> OnChanged(SetEventData<TData> data)
		{
			return default(SetEventData<TData>);
		}

		[Token(Token = "0x6002D5A")]
		protected abstract void Send(SetEventData<TData> data, RestoreMode restoreMode);

		[Token(Token = "0x6002D5B")]
		public void Receive(SetEventData<TData> data)
		{
		}

		[Token(Token = "0x6002D5C")]
		protected SmartNetworkSetDecoratorBase()
		{
		}
	}
	[Token(Token = "0x2000740")]
	public abstract class SmartRefBase : ISmartRef
	{
		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private UnityEngine.Object _owner;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private string _ownerName;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private string _propertyPath;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _autoListen;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IRelayBinding _unityEventBinding;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _unityEventEnabled;

		[Token(Token = "0x170005D5")]
		public abstract bool isValid
		{
			[Token(Token = "0x6002D5E")]
			get;
		}

		[Token(Token = "0x170005D6")]
		public abstract string name
		{
			[Token(Token = "0x6002D5F")]
			get;
		}

		[Token(Token = "0x170005D7")]
		public bool unityEventOnReceive
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xEE746C", Offset = "0xEE746C", VA = "0xEE746C", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xEE6E9C", Offset = "0xEE6E9C", VA = "0xEE6E9C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0xEE72C8", Offset = "0xEE72C8", VA = "0xEE72C8")]
		protected void LogError(string format, params object[] args)
		{
		}

		[Token(Token = "0x6002D62")]
		protected abstract IRelayBinding BindUnityEvent();

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0xEE752C", Offset = "0xEE752C", VA = "0xEE752C")]
		public SmartRefBase()
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xEE7534", Offset = "0xEE7534", VA = "0xEE7534", Slot = "7")]
		public void UnbindUnityEventOnDestroy(bool enableUnityEventNow = true)
		{
		}
	}
	[Token(Token = "0x2000741")]
	public abstract class SmartRefMultiableBase : SmartRefBase
	{
		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected int _multiIndex;

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0xEE5028", Offset = "0xEE5028", VA = "0xEE5028")]
		protected SmartRefMultiableBase()
		{
		}
	}
	[Token(Token = "0x2000742")]
	public abstract class SmartDataRefBase : SmartRefMultiableBase
	{
		[Token(Token = "0x2000743")]
		public enum RefType
		{
			[Token(Token = "0x40022C5")]
			LOCAL,
			[Token(Token = "0x40022C6")]
			CONST,
			[Token(Token = "0x40022C7")]
			VAR,
			[Token(Token = "0x40022C8")]
			MULTI
		}

		[Serializable]
		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8FA8", Offset = "0x8D8FA8")]
		private sealed class <>c
		{
			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002D6A")]
			[Address(RVA = "0xEAE158", Offset = "0xEAE158", VA = "0xEAE158")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xEAE160", Offset = "0xEAE160", VA = "0xEAE160")]
			internal bool <.cctor>b__9_0(RefType r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xEAE16C", Offset = "0xEAE16C", VA = "0xEAE16C")]
			internal bool <.cctor>b__9_1(RefType r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xEAE178", Offset = "0xEAE178", VA = "0xEAE178")]
			internal bool <.cctor>b__9_2(RefType r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly RefType[] TYPES_ALL;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly RefType[] TYPES_SMART;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RefType[] TYPES_WRITABLE;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly RefType[] TYPES_COMPONENTABLE;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected RefType _refType;

		[Token(Token = "0x170005D8")]
		protected bool _isEventable
		{
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0xEE4F30", Offset = "0xEE4F30", VA = "0xEE4F30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xEE5018", Offset = "0xEE5018", VA = "0xEE5018")]
		protected SmartDataRefBase()
		{
		}
	}
	[Token(Token = "0x2000745")]
	public abstract class SmartDataRefBase<TData, TVar, TConst, TMulti> : SmartDataRefBase, ISmartRefReader<TData>, ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISerializationCallbackReceiver where TVar : SmartVar<TData>, ISmartVar<TData> where TConst : SmartConst<TData> where TMulti : SmartMulti<TData, TVar>
	{
		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8FB8", Offset = "0x8D8FB8")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002D7F")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002D80")]
			internal void <BindListener>b__0(TData t)
			{
			}
		}

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TData _value;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TData _defaultValue;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TConst _smartConst;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TVar _smartVar;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMulti _smartMulti;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Relay<TData> _relay;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasDefault;

		[Token(Token = "0x170005D9")]
		public TData value
		{
			[Token(Token = "0x6002D6E")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005DA")]
		public TData defaultValue
		{
			[Token(Token = "0x6002D6F")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005DB")]
		public override bool isValid
		{
			[Token(Token = "0x6002D70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005DC")]
		public override string name
		{
			[Token(Token = "0x6002D71")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DD")]
		protected TVar _writeable
		{
			[Token(Token = "0x6002D72")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DE")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002D76")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D73")]
		protected bool CheckSmartObject(SmartBase o, string operation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D74")]
		public TDecorator[] GetDecorators<TDecorator>(bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return null;
		}

		[Token(Token = "0x6002D75")]
		public int GetDecoratorsNonAlloc<TDecorator>(TDecorator[] results, bool includeMultis = false) where TDecorator : SmartDecoratorBase
		{
			return default(int);
		}

		[Token(Token = "0x6002D77")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D78")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002D79")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002D7A")]
		protected abstract Action<TData> GetUnityEventInvoke();

		[Token(Token = "0x6002D7B")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002D7C")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002D7D")]
		public static implicit operator TData(SmartDataRefBase<TData, TVar, TConst, TMulti> r)
		{
			return (TData)null;
		}

		[Token(Token = "0x6002D7E")]
		protected SmartDataRefBase()
		{
		}
	}
	[Token(Token = "0x2000747")]
	public abstract class SmartDataRefWriter<TData, TVar, TConst, TMulti> : SmartDataRefBase<TData, TVar, TConst, TMulti>, ISmartRefWriter<TData>, ISmartRef, ISmartData<TData>, ISmartObject, ISmartEvent<TData>, ISmartEventDispatcher, ISmartDataWriter<TData> where TVar : SmartVar<TData>, ISmartVar<TData> where TConst : SmartConst<TData> where TMulti : SmartMulti<TData, TVar>
	{
		[Token(Token = "0x170005DF")]
		public new TData value
		{
			[Token(Token = "0x6002D81")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002D82")]
			set
			{
			}
		}

		[Token(Token = "0x6002D83")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002D84")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002D85")]
		private void DispatchLocal()
		{
		}

		[Token(Token = "0x6002D86")]
		protected abstract void InvokeUnityEvent(TData value);

		[Token(Token = "0x6002D87")]
		protected SmartDataRefWriter()
		{
		}
	}
	[Token(Token = "0x2000748")]
	public abstract class SmartMultiRef<TMulti, TVar> : SmartRefMultiableBase where TMulti : SmartMulti<TVar> where TVar : SmartDecorableBase
	{
		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TMulti _smartMulti;

		[Token(Token = "0x170005E0")]
		public override bool isValid
		{
			[Token(Token = "0x6002D88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E1")]
		public override string name
		{
			[Token(Token = "0x6002D89")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E2")]
		public int index
		{
			[Token(Token = "0x6002D8A")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D8B")]
			set
			{
			}
		}

		[Token(Token = "0x170005E3")]
		public int count
		{
			[Token(Token = "0x6002D8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005E4")]
		protected TMulti _multi
		{
			[Token(Token = "0x6002D8D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E5")]
		public IRelayLink<int, int> onElementCountChanged
		{
			[Token(Token = "0x6002D8E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D8F")]
		protected SmartMultiRef()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D8FC8", Offset = "0x8D8FC8")]
	public abstract class SmartDataMultiRef<TList, TData, TVar> : SmartMultiRef<TList, TVar>, ISmartDataMultiRefReader<TData, TVar>, ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, IEnumerable<TData>, IEnumerable where TList : SmartMulti<TData, TVar>, IEnumerable<TData> where TVar : SmartVar<TData>
	{
		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9000", Offset = "0x8D9000")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action listener;

			[Token(Token = "0x6002D9C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002D9D")]
			internal void <BindListener>b__0(TData x)
			{
			}
		}

		[Token(Token = "0x170005E6")]
		public TData value
		{
			[Token(Token = "0x6002D90")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005E7")]
		public TData defaultValue
		{
			[Token(Token = "0x6002D91")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005E8")]
		public TData Item
		{
			[Token(Token = "0x6002D92")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005E9")]
		public IRelayLink<TData> relay
		{
			[Token(Token = "0x6002D93")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D94")]
		public IEnumerator<TData> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D95")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002D96")]
		public IRelayBinding BindListener(Action<TData> listener, int multiIndex, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D97")]
		public IRelayBinding BindListener(Action<TData> listener, bool callNow = false)
		{
			return null;
		}

		[Token(Token = "0x6002D98")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002D99")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002D9A")]
		protected abstract Action<TData> GetUnityEventInvoke();

		[Token(Token = "0x6002D9B")]
		protected SmartDataMultiRef()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D9010", Offset = "0x8D9010")]
	public abstract class SmartDataMultiRefWriter<TList, TData, TVar> : SmartDataMultiRef<TList, TData, TVar>, ISmartDataMultiRefWriter<TData, TVar>, ISmartRef, ISmartMultiRef, ISmartEvent<TData>, ISmartObject, ISmartDataWriter<TData> where TList : SmartMulti<TData, TVar> where TVar : SmartVar<TData>
	{
		[Token(Token = "0x170005EA")]
		public new TData value
		{
			[Token(Token = "0x6002D9E")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002D9F")]
			set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public new TData Item
		{
			[Token(Token = "0x6002DA0")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DA1")]
			set
			{
			}
		}

		[Token(Token = "0x170005EC")]
		protected TVar _smartVar
		{
			[Token(Token = "0x6002DA2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA3")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002DA4")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002DA5")]
		protected abstract void InvokeUnityEvent(TData value);

		[Token(Token = "0x6002DA6")]
		protected SmartDataMultiRefWriter()
		{
		}
	}
	[Token(Token = "0x200074C")]
	public abstract class SmartSetRefBase : SmartRefBase
	{
		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xEE7A30", Offset = "0xEE7A30", VA = "0xEE7A30")]
		protected SmartSetRefBase()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D9048", Offset = "0x8D9048")]
	public abstract class SmartSetRefBase<TData, TWrite> : SmartSetRefBase, ISerializationCallbackReceiver, IEnumerable<TData>, IEnumerable where TWrite : SmartSet<TData>, ISmartSet<TData>
	{
		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _useList;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TWrite _smartSet;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TData> _list;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TData> _runtimeList;

		[Token(Token = "0x170005ED")]
		protected bool _isEventable
		{
			[Token(Token = "0x6002DA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005EE")]
		public override bool isValid
		{
			[Token(Token = "0x6002DA9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005EF")]
		public override string name
		{
			[Token(Token = "0x6002DAA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		public TData Item
		{
			[Token(Token = "0x6002DAE")]
			get
			{
				return (TData)null;
			}
		}

		[Token(Token = "0x170005F1")]
		public int count
		{
			[Token(Token = "0x6002DAF")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005F2")]
		public IRelayLink<SetEventData<TData>> relay
		{
			[Token(Token = "0x6002DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAB")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002DAC")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002DAD")]
		protected void Restore()
		{
		}

		[Token(Token = "0x6002DB1")]
		private IEnumerator<TData> System.Collections.Generic.IEnumerable<TData>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DB2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002DB3")]
		public IRelayBinding BindListener(Action<SetEventData<TData>> listener)
		{
			return null;
		}

		[Token(Token = "0x6002DB4")]
		public IRelayBinding BindListener(Action listener)
		{
			return null;
		}

		[Token(Token = "0x6002DB5")]
		protected abstract Action<SetEventData<TData>> GetUnityEventInvoke();

		[Token(Token = "0x6002DB6")]
		protected override IRelayBinding BindUnityEvent()
		{
			return null;
		}

		[Token(Token = "0x6002DB7")]
		protected SmartSetRefBase()
		{
		}
	}
	[Token(Token = "0x200074E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8D9080", Offset = "0x8D9080")]
	public abstract class SmartSetRefWriterBase<TData, TWrite> : SmartSetRefBase<TData, TWrite>, ISmartSetRefWriter<TData>, ISmartRef, ISmartSet<TData>, ISmartObject, IEnumerable<TData>, IEnumerable, ISmartSetWriter<TData>, ISmartSetWriter where TWrite : SmartSet<TData>, ISmartSet<TData>
	{
		[Token(Token = "0x170005F3")]
		public new TData Item
		{
			[Token(Token = "0x6002DB8")]
			get
			{
				return (TData)null;
			}
			[Token(Token = "0x6002DB9")]
			set
			{
			}
		}

		[Token(Token = "0x6002DBA")]
		public bool Add(TData element, bool allowDuplicates = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBB")]
		public int Remove(TData element)
		{
			return default(int);
		}

		[Token(Token = "0x6002DBC")]
		public bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBD")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002DBE")]
		public void SetToDefault()
		{
		}

		[Token(Token = "0x6002DBF")]
		protected abstract void InvokeUnityEvent(SetEventData<TData> data);

		[Token(Token = "0x6002DC0")]
		protected SmartSetRefWriterBase()
		{
		}
	}
}
namespace Sigtrap.Relays
{
	[Token(Token = "0x200074F")]
	public abstract class RelayBase<TDelegate> : IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _hasLink;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TDelegate[] _listeners;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _count;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _cap;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TDelegate[] _listenersOnce;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _onceCount;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected uint _onceCap;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static IndexOutOfRangeException _eIOOR;

		[Token(Token = "0x170005F4")]
		public uint listenerCount
		{
			[Token(Token = "0x6002DC1")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170005F5")]
		public uint oneTimeListenersCount
		{
			[Token(Token = "0x6002DC2")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002DC3")]
		public bool Contains(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC4")]
		public bool AddListener(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC5")]
		public IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false)
		{
			return null;
		}

		[Token(Token = "0x6002DC6")]
		public bool AddOnce(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC7")]
		public bool RemoveListener(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC8")]
		public bool RemoveOnce(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC9")]
		public void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true)
		{
		}

		[Token(Token = "0x6002DCA")]
		protected void RemoveAt(uint i)
		{
		}

		[Token(Token = "0x6002DCB")]
		protected void RemoveOnceAt(uint i)
		{
		}

		[Token(Token = "0x6002DCC")]
		protected uint RemoveAt(TDelegate[] arr, uint count, uint i)
		{
			return default(uint);
		}

		[Token(Token = "0x6002DCD")]
		private bool Contains(TDelegate[] arr, uint c, TDelegate d)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCE")]
		private TDelegate[] Expand(TDelegate[] arr, uint cap, uint count)
		{
			return null;
		}

		[Token(Token = "0x6002DCF")]
		protected RelayBase()
		{
		}
	}
	[Token(Token = "0x2000750")]
	public class Relay : RelayBase<Action>, IRelayLink, IRelayLinkBase<Action>
	{
		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IRelayLink _link;

		[Token(Token = "0x170005F6")]
		public IRelayLink link
		{
			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0x119DF20", Offset = "0x119DF20", VA = "0x119DF20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x119E000", Offset = "0x119E000", VA = "0x119E000")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x119E1CC", Offset = "0x119E1CC", VA = "0x119E1CC")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000751")]
	public class Relay<T> : RelayBase<Action<T>>, IRelayLink<T>, IRelayLinkBase<Action<T>>
	{
		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T> _link;

		[Token(Token = "0x170005F7")]
		public IRelayLink<T> link
		{
			[Token(Token = "0x6002DD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD5")]
		public void Dispatch(T t)
		{
		}

		[Token(Token = "0x6002DD6")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000752")]
	public class Relay<T, U> : RelayBase<Action<T, U>>, IRelayLink<T, U>, IRelayLinkBase<Action<T, U>>
	{
		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U> _link;

		[Token(Token = "0x170005F8")]
		public IRelayLink<T, U> link
		{
			[Token(Token = "0x6002DD7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD8")]
		public void Dispatch(T t, U u)
		{
		}

		[Token(Token = "0x6002DD9")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000753")]
	public class Relay<T, U, V> : RelayBase<Action<T, U, V>>, IRelayLink<T, U, V>, IRelayLinkBase<Action<T, U, V>>
	{
		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U, V> _link;

		[Token(Token = "0x170005F9")]
		public IRelayLink<T, U, V> link
		{
			[Token(Token = "0x6002DDA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DDB")]
		public void Dispatch(T t, U u, V v)
		{
		}

		[Token(Token = "0x6002DDC")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000754")]
	public class Relay<T, U, V, W> : RelayBase<Action<T, U, V, W>>, IRelayLink<T, U, V, W>, IRelayLinkBase<Action<T, U, V, W>>
	{
		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IRelayLink<T, U, V, W> _link;

		[Token(Token = "0x170005FA")]
		public IRelayLink<T, U, V, W> link
		{
			[Token(Token = "0x6002DDD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DDE")]
		public void Dispatch(T t, U u, V v, W w)
		{
		}

		[Token(Token = "0x6002DDF")]
		public Relay()
		{
		}
	}
	[Token(Token = "0x2000755")]
	public interface IRelayBinding
	{
		[Token(Token = "0x170005FB")]
		bool enabled
		{
			[Token(Token = "0x6002DE0")]
			get;
		}

		[Token(Token = "0x170005FC")]
		bool allowDuplicates
		{
			[Token(Token = "0x6002DE1")]
			get;
			[Token(Token = "0x6002DE2")]
			set;
		}

		[Token(Token = "0x170005FD")]
		uint listenerCount
		{
			[Token(Token = "0x6002DE3")]
			get;
		}

		[Token(Token = "0x6002DE4")]
		bool Enable(bool enable);
	}
	[Token(Token = "0x2000756")]
	public interface IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x170005FE")]
		uint listenerCount
		{
			[Token(Token = "0x6002DE5")]
			get;
		}

		[Token(Token = "0x170005FF")]
		uint oneTimeListenersCount
		{
			[Token(Token = "0x6002DE6")]
			get;
		}

		[Token(Token = "0x6002DE7")]
		bool Contains(TDelegate listener);

		[Token(Token = "0x6002DE8")]
		bool AddListener(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002DE9")]
		IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002DEA")]
		bool AddOnce(TDelegate listener, bool allowDuplicates = false);

		[Token(Token = "0x6002DEB")]
		bool RemoveListener(TDelegate listener);

		[Token(Token = "0x6002DEC")]
		bool RemoveOnce(TDelegate listener);

		[Token(Token = "0x6002DED")]
		void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true);
	}
	[Token(Token = "0x2000757")]
	public interface IRelayLink : IRelayLinkBase<Action>
	{
	}
	[Token(Token = "0x2000758")]
	public interface IRelayLink<T> : IRelayLinkBase<Action<T>>
	{
	}
	[Token(Token = "0x2000759")]
	public interface IRelayLink<T, U> : IRelayLinkBase<Action<T, U>>
	{
	}
	[Token(Token = "0x200075A")]
	public interface IRelayLink<T, U, V> : IRelayLinkBase<Action<T, U, V>>
	{
	}
	[Token(Token = "0x200075B")]
	public interface IRelayLink<T, U, V, W> : IRelayLinkBase<Action<T, U, V, W>>
	{
	}
}
namespace Sigtrap.Relays.Link
{
	[Token(Token = "0x200075C")]
	public abstract class RelayLinkBase<TDelegate> : IRelayLinkBase<TDelegate> where TDelegate : class
	{
		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RelayBase<TDelegate> _relay;

		[Token(Token = "0x17000600")]
		public uint listenerCount
		{
			[Token(Token = "0x6002DF0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000601")]
		public uint oneTimeListenersCount
		{
			[Token(Token = "0x6002DF1")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002DEE")]
		private RelayLinkBase()
		{
		}

		[Token(Token = "0x6002DEF")]
		public RelayLinkBase(RelayBase<TDelegate> relay)
		{
		}

		[Token(Token = "0x6002DF2")]
		public bool Contains(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF3")]
		public bool AddListener(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF4")]
		public IRelayBinding BindListener(TDelegate listener, bool allowDuplicates = false)
		{
			return null;
		}

		[Token(Token = "0x6002DF5")]
		public bool AddOnce(TDelegate listener, bool allowDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF6")]
		public bool RemoveListener(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF7")]
		public bool RemoveOnce(TDelegate listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF8")]
		public void RemoveAll(bool removePersistentListeners = true, bool removeOneTimeListeners = true)
		{
		}
	}
	[Token(Token = "0x200075D")]
	public class RelayLink : RelayLinkBase<Action>, IRelayLink, IRelayLinkBase<Action>
	{
		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x119DFA4", Offset = "0x119DFA4", VA = "0x119DFA4")]
		public RelayLink(RelayBase<Action> relay)
		{
		}
	}
	[Token(Token = "0x200075E")]
	public class RelayLink<T> : RelayLinkBase<Action<T>>, IRelayLink<T>, IRelayLinkBase<Action<T>>
	{
		[Token(Token = "0x6002DFA")]
		public RelayLink(RelayBase<Action<T>> relay)
		{
		}
	}
	[Token(Token = "0x200075F")]
	public class RelayLink<T, U> : RelayLinkBase<Action<T, U>>, IRelayLink<T, U>, IRelayLinkBase<Action<T, U>>
	{
		[Token(Token = "0x6002DFB")]
		public RelayLink(RelayBase<Action<T, U>> relay)
		{
		}
	}
	[Token(Token = "0x2000760")]
	public class RelayLink<T, U, V> : RelayLinkBase<Action<T, U, V>>, IRelayLink<T, U, V>, IRelayLinkBase<Action<T, U, V>>
	{
		[Token(Token = "0x6002DFC")]
		public RelayLink(RelayBase<Action<T, U, V>> relay)
		{
		}
	}
	[Token(Token = "0x2000761")]
	public class RelayLink<T, U, V, W> : RelayLinkBase<Action<T, U, V, W>>, IRelayLink<T, U, V, W>, IRelayLinkBase<Action<T, U, V, W>>
	{
		[Token(Token = "0x6002DFD")]
		public RelayLink(RelayBase<Action<T, U, V, W>> relay)
		{
		}
	}
}
namespace Sigtrap.Relays.Binding
{
	[Token(Token = "0x2000762")]
	public class RelayBinding<TDelegate> : IRelayBinding where TDelegate : class
	{
		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4104", Offset = "0x8E4104")]
		private IRelayLinkBase<TDelegate> <_relay>k__BackingField;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4114", Offset = "0x8E4114")]
		private TDelegate <_listener>k__BackingField;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4124", Offset = "0x8E4124")]
		private bool <enabled>k__BackingField;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4134", Offset = "0x8E4134")]
		private bool <allowDuplicates>k__BackingField;

		[Token(Token = "0x17000602")]
		protected IRelayLinkBase<TDelegate> _relay
		{
			[Token(Token = "0x6002DFE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F46F0", Offset = "0x8F46F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DFF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4700", Offset = "0x8F4700")]
			private set
			{
			}
		}

		[Token(Token = "0x17000603")]
		protected TDelegate _listener
		{
			[Token(Token = "0x6002E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4710", Offset = "0x8F4710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E01")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4720", Offset = "0x8F4720")]
			private set
			{
			}
		}

		[Token(Token = "0x17000604")]
		public bool enabled
		{
			[Token(Token = "0x6002E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4730", Offset = "0x8F4730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E05")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4740", Offset = "0x8F4740")]
			private set
			{
			}
		}

		[Token(Token = "0x17000605")]
		public bool allowDuplicates
		{
			[Token(Token = "0x6002E06")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4750", Offset = "0x8F4750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E07")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4760", Offset = "0x8F4760")]
			set
			{
			}
		}

		[Token(Token = "0x17000606")]
		public uint listenerCount
		{
			[Token(Token = "0x6002E08")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6002E02")]
		private RelayBinding()
		{
		}

		[Token(Token = "0x6002E03")]
		public RelayBinding(IRelayLinkBase<TDelegate> relay, TDelegate listener, bool allowDuplicates, bool isListening)
		{
		}

		[Token(Token = "0x6002E09")]
		public bool Enable(bool enable)
		{
			return default(bool);
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x2000763")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4144", Offset = "0x8E4144")]
		public int SoundPoolSize;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E417C", Offset = "0x8E417C")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E41B4", Offset = "0x8E41B4")]
		public float PitchModulationRange;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E41CC", Offset = "0x8E41CC")]
		public float MinCollisionVolume;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x1848044", Offset = "0x1848044", VA = "0x1848044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x18480E0", Offset = "0x18480E0", VA = "0x18480E0")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x18481E0", Offset = "0x18481E0", VA = "0x18481E0")]
		public NVRCollisionSoundController()
		{
		}
	}
	[Token(Token = "0x2000764")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x40022F3")]
		None,
		[Token(Token = "0x40022F4")]
		Unity,
		[Token(Token = "0x40022F5")]
		FMOD
	}
	[Token(Token = "0x2000765")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x40022F7")]
		none = 0,
		[Token(Token = "0x40022F8")]
		_default = 1,
		[Token(Token = "0x40022F9")]
		carpet = 2,
		[Token(Token = "0x40022FA")]
		wood = 3,
		[Token(Token = "0x40022FB")]
		metal = 4,
		[Token(Token = "0x40022FC")]
		glass = 5,
		[Token(Token = "0x40022FD")]
		plastic = 6,
		[Token(Token = "0x40022FE")]
		cardboard = 7,
		[Token(Token = "0x40022FF")]
		EndNewtonVRMaterials = 50
	}
	[Token(Token = "0x2000766")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x17000607")]
		public static Type TypeCache
		{
			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0x1848210", Offset = "0x1848210", VA = "0x1848210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000608")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0x1848304", Offset = "0x1848304", VA = "0x1848304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x18486E4", Offset = "0x18486E4", VA = "0x18486E4")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x1848824", Offset = "0x1848824", VA = "0x1848824")]
		public NVRCollisionSoundMaterialsList()
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] Colliders;

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x184882C", Offset = "0x184882C", VA = "0x184882C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x1848950", Offset = "0x1848950", VA = "0x1848950", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x1848A68", Offset = "0x1848A68", VA = "0x1848A68", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0x1848C38", Offset = "0x1848C38", VA = "0x1848C38")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x1848CE8", Offset = "0x1848CE8", VA = "0x1848CE8")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x1848D80", Offset = "0x1848D80", VA = "0x1848D80")]
		public NVRCollisionSoundObject()
		{
		}
	}
	[Token(Token = "0x2000768")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x6002E18")]
		public abstract void Awake();

		[Token(Token = "0x6002E19")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0x1848E14", Offset = "0x1848E14", VA = "0x1848E14")]
		protected NVRCollisionSoundProvider()
		{
		}
	}
	[Token(Token = "0x2000769")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x1848E1C", Offset = "0x1848E1C", VA = "0x1848E1C", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0x1848E20", Offset = "0x1848E20", VA = "0x1848E20", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0x1848E24", Offset = "0x1848E24", VA = "0x1848E24")]
		public NVRCollisionSoundProviderFMOD()
		{
		}
	}
	[Token(Token = "0x200076A")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int CurrentPoolIndex;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0x1848E2C", Offset = "0x1848E2C", VA = "0x1848E2C", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0x18493AC", Offset = "0x18493AC", VA = "0x18493AC", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0x18495A0", Offset = "0x18495A0", VA = "0x18495A0")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0x18497B8", Offset = "0x18497B8", VA = "0x18497B8")]
		public NVRCollisionSoundProviderUnity()
		{
		}
	}
	[Token(Token = "0x200076B")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x200076C")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x6002E25")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x6002E26")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x6002E23")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E24")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200076D")]
	public class NVRAlignment
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0x18443E0", Offset = "0x18443E0", VA = "0x18443E0")]
		public NVRAlignment(Transform transform)
		{
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0x184444C", Offset = "0x184444C", VA = "0x184444C")]
		public NVRAlignment(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0x18444CC", Offset = "0x18444CC", VA = "0x18444CC")]
		public float Distance(Transform transform)
		{
			return default(float);
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0x18445CC", Offset = "0x18445CC", VA = "0x18445CC")]
		public float Distance(NVRAlignment alignment)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200076E")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PullRange;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AttachRange;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DropDistance;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool MatchRotation;

		[Token(Token = "0x17000609")]
		public bool IsAttached
		{
			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0x1844694", Offset = "0x1844694", VA = "0x1844694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0x1844700", Offset = "0x1844700", VA = "0x1844700", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0x184488C", Offset = "0x184488C", VA = "0x184488C", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0x18448C8", Offset = "0x18448C8", VA = "0x18448C8", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0x1844998", Offset = "0x1844998", VA = "0x1844998", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0x18449F0", Offset = "0x18449F0", VA = "0x18449F0", Slot = "8")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0x1844A48", Offset = "0x1844A48", VA = "0x1844A48")]
		public NVRAttachJoint()
		{
		}
	}
	[Token(Token = "0x200076F")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x4002315")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x4002316")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4002317")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4002318")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsAttached;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRAttachJoint AttachedJoint;

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0x1844A70", Offset = "0x1844A70", VA = "0x1844A70", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x1844D4C", Offset = "0x1844D4C", VA = "0x1844D4C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x1844C20", Offset = "0x1844C20", VA = "0x1844C20")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0x1844D6C", Offset = "0x1844D6C", VA = "0x1844D6C", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0x1844ED4", Offset = "0x1844ED4", VA = "0x1844ED4", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x1844F38", Offset = "0x1844F38", VA = "0x1844F38", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0x18451EC", Offset = "0x18451EC", VA = "0x18451EC")]
		public NVRAttachPoint()
		{
		}
	}
	[Token(Token = "0x2000770")]
	public class AttachPointMapper
	{
		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0x14A4858", Offset = "0x14A4858", VA = "0x14A4858")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0x14A48F4", Offset = "0x14A48F4", VA = "0x14A48F4")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x14A4980", Offset = "0x14A4980", VA = "0x14A4980")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x14A4A24", Offset = "0x14A4A24", VA = "0x14A4A24")]
		public AttachPointMapper()
		{
		}
	}
	[Token(Token = "0x2000771")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4234", Offset = "0x8E4234")]
		public float DistanceToEngage;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E426C", Offset = "0x8E426C")]
		public bool ButtonDown;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E42A4", Offset = "0x8E42A4")]
		public bool ButtonUp;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E42DC", Offset = "0x8E42DC")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4314", Offset = "0x8E4314")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Transform InitialPosition;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float MinDistance;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float PositionMagic;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float CurrentDistance;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0x18451F4", Offset = "0x18451F4", VA = "0x18451F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0x1845470", Offset = "0x1845470", VA = "0x1845470")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0x1845604", Offset = "0x1845604", VA = "0x1845604")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0x1845590", Offset = "0x1845590", VA = "0x1845590")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x1845644", Offset = "0x1845644", VA = "0x1845644")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x1845648", Offset = "0x1845648", VA = "0x1845648")]
		public NVRButton()
		{
		}
	}
	[Token(Token = "0x2000772")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool PressDownCached;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool PressDownExpired;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool PressUpCached;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool PressUpExpired;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsPressedCached;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool IsPressedExpired;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool TouchDownCached;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool TouchDownExpired;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool TouchUpCached;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool TouchUpExpired;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool IsTouchedCached;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool NearTouchUpCached;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 AxisCached;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool AxisExpired;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float SingleAxisCached;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRButtons NVRbutton;

		[Token(Token = "0x1700060A")]
		public bool PressDown
		{
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0x1845670", Offset = "0x1845670", VA = "0x1845670")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060B")]
		public bool PressUp
		{
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0x1845730", Offset = "0x1845730", VA = "0x1845730")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060C")]
		public bool IsPressed
		{
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0x18457F0", Offset = "0x18457F0", VA = "0x18457F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060D")]
		public bool TouchDown
		{
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0x18458B0", Offset = "0x18458B0", VA = "0x18458B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060E")]
		public bool TouchUp
		{
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0x1845970", Offset = "0x1845970", VA = "0x1845970")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700060F")]
		public bool IsTouched
		{
			[Token(Token = "0x6002E49")]
			[Address(RVA = "0x1845A30", Offset = "0x1845A30", VA = "0x1845A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000610")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0x1845AF0", Offset = "0x1845AF0", VA = "0x1845AF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000611")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0x1845BB0", Offset = "0x1845BB0", VA = "0x1845BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000612")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0x1845C70", Offset = "0x1845C70", VA = "0x1845C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000613")]
		public Vector2 Axis
		{
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x1845D30", Offset = "0x1845D30", VA = "0x1845D30")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000614")]
		public float SingleAxis
		{
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0x1845DE8", Offset = "0x1845DE8", VA = "0x1845DE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0x1845E94", Offset = "0x1845E94", VA = "0x1845E94")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x1845EF4", Offset = "0x1845EF4", VA = "0x1845EF4")]
		public NVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x2000773")]
	public enum NVRButtons
	{
		[Token(Token = "0x4002345")]
		System,
		[Token(Token = "0x4002346")]
		ApplicationMenu,
		[Token(Token = "0x4002347")]
		Grip,
		[Token(Token = "0x4002348")]
		DPad_Left,
		[Token(Token = "0x4002349")]
		DPad_Up,
		[Token(Token = "0x400234A")]
		DPad_Right,
		[Token(Token = "0x400234B")]
		DPad_Down,
		[Token(Token = "0x400234C")]
		A,
		[Token(Token = "0x400234D")]
		B,
		[Token(Token = "0x400234E")]
		X,
		[Token(Token = "0x400234F")]
		Y,
		[Token(Token = "0x4002350")]
		Axis0,
		[Token(Token = "0x4002351")]
		Axis1,
		[Token(Token = "0x4002352")]
		Axis2,
		[Token(Token = "0x4002353")]
		Axis3,
		[Token(Token = "0x4002354")]
		Axis4,
		[Token(Token = "0x4002355")]
		Touchpad,
		[Token(Token = "0x4002356")]
		Trigger,
		[Token(Token = "0x4002357")]
		Back,
		[Token(Token = "0x4002358")]
		Stick
	}
	[Token(Token = "0x2000774")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x17000615")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x6002E51")]
			[Address(RVA = "0x1845F40", Offset = "0x1845F40", VA = "0x1845F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x18460D8", Offset = "0x18460D8", VA = "0x18460D8")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000775")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x1845F2C", Offset = "0x1845F2C", VA = "0x1845F2C", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x1845F38", Offset = "0x1845F38", VA = "0x1845F38", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000776")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D90B8", Offset = "0x8D90B8")]
		private sealed class <InitCR>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRCanvasInput <>4__this;

			[Token(Token = "0x17000616")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E6A")]
				[Address(RVA = "0x105A4C8", Offset = "0x105A4C8", VA = "0x105A4C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000617")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E6C")]
				[Address(RVA = "0x105A510", Offset = "0x105A510", VA = "0x105A510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E67")]
			[Address(RVA = "0x1059AD8", Offset = "0x1059AD8", VA = "0x1059AD8")]
			[DebuggerHidden]
			public <InitCR>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x1059B04", Offset = "0x1059B04", VA = "0x1059B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E69")]
			[Address(RVA = "0x1059B08", Offset = "0x1059B08", VA = "0x1059B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x105A4D0", Offset = "0x105A4D0", VA = "0x105A4D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D90C8", Offset = "0x8D90C8")]
		private sealed class <GetLocatorsFromSpacefolkHand>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRCanvasInput <>4__this;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x17000618")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E70")]
				[Address(RVA = "0x1059A88", Offset = "0x1059A88", VA = "0x1059A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000619")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E72")]
				[Address(RVA = "0x1059AD0", Offset = "0x1059AD0", VA = "0x1059AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0x1059814", Offset = "0x1059814", VA = "0x1059814")]
			[DebuggerHidden]
			public <GetLocatorsFromSpacefolkHand>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x1059840", Offset = "0x1059840", VA = "0x1059840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x1059844", Offset = "0x1059844", VA = "0x1059844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x1059A90", Offset = "0x1059A90", VA = "0x1059A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Sprite CursorSprite;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material CursorMaterial;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float NormalCursorScale;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool LaserEnabled;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color LaserColor;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color LaserColorEnd;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color LaserColorNotHit;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color LaserColorNotHitEnd;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float LaserColorNotHitLen;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool LaserAlwaysOn;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float LaserStartWidth;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float LaserEndWidth;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool OnCanvas;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool CanvasUsed;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform[] Cursors;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform[] LaserLoc;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool SpacefolkHandPointWhenLaserOn;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SpacefolkHandModel[] MySpacefolkHandModel;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[OVRLayer]
		public int LaserLayer;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject[] CurrentPoint;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool Initialized;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool DelayedInitialized;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Camera ControllerCamera;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NVRPlayer Player;

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x18460E4", Offset = "0x18460E4", VA = "0x18460E4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x18460EC", Offset = "0x18460EC", VA = "0x18460EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4770", Offset = "0x8F4770")]
		private IEnumerator InitCR()
		{
			return null;
		}

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0x1846164", Offset = "0x1846164", VA = "0x1846164")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F47D0", Offset = "0x8F47D0")]
		private IEnumerator GetLocatorsFromSpacefolkHand(int index)
		{
			return null;
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0x18461EC", Offset = "0x18461EC", VA = "0x18461EC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0x184628C", Offset = "0x184628C", VA = "0x184628C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0x18462C4", Offset = "0x18462C4", VA = "0x18462C4")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0x18463E0", Offset = "0x18463E0", VA = "0x18463E0")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0x18466E8", Offset = "0x18466E8", VA = "0x18466E8")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0x1846CDC", Offset = "0x1846CDC", VA = "0x1846CDC")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0x1846D74", Offset = "0x1846D74", VA = "0x1846D74")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0x1846E6C", Offset = "0x1846E6C", VA = "0x1846E6C")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x1846FD0", Offset = "0x1846FD0", VA = "0x1846FD0")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x18470A0", Offset = "0x18470A0", VA = "0x18470A0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x18470A4", Offset = "0x18470A4", VA = "0x18470A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x1847E64", Offset = "0x1847E64", VA = "0x1847E64")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0x1847F04", Offset = "0x1847F04", VA = "0x1847F04")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x1847FA4", Offset = "0x1847FA4", VA = "0x1847FA4")]
		public NVRCanvasInput()
		{
		}
	}
	[Token(Token = "0x2000779")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200077A")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0x105AB64", Offset = "0x105AB64", VA = "0x105AB64")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D90D8", Offset = "0x8D90D8")]
		private sealed class <DoLongHapticPulse>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NVRHand <>4__this;

			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float amplitude;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public NVRButtons button;

			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__2;

			[Token(Token = "0x17000629")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA3")]
				[Address(RVA = "0x105AB14", Offset = "0x105AB14", VA = "0x105AB14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EA5")]
				[Address(RVA = "0x105AB5C", Offset = "0x105AB5C", VA = "0x105AB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0x105AA28", Offset = "0x105AA28", VA = "0x105AA28")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0x105AA54", Offset = "0x105AA54", VA = "0x105AA54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0x105AA58", Offset = "0x105AA58", VA = "0x105AA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x105AB1C", Offset = "0x105AB1C", VA = "0x105AB1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtons HoldButton;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons UseButton;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject CustomModel;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject CustomPhysicalColliders;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VisibilityLevel CurrentVisibility;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected bool VisibilityLocked;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public HandState CurrentHandState;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E43DC", Offset = "0x8E43DC")]
		public List<Collider> CurrentlyHoveringOverColliders;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public NVRInteractable ClosestInteractableObject;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[ReadOnly]
		public NVRInteractable ClosestAttachableInteractableObject;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool ClosestInteractableIsDirty;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4448", Offset = "0x8E4448")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform grabPoint;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public NVRInteractableEvent OnBeginUseInteraction;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NVRInteractableEvent OnEndUseInteraction;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public NVRInteractableEvent OnBeginHovering;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NVRInteractableEvent OnEndHovering;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int EstimationSampleIndex;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3[] LastPositions;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Quaternion[] LastRotations;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float[] LastDeltas;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected int EstimationSamples;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider[] GhostColliders;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Renderer[] GhostRenderers;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public NVRInputDevice InputDevice;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected GameObject RenderModel;

		[Token(Token = "0x1700061A")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0x184B924", Offset = "0x184B924", VA = "0x184B924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061B")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x184B984", Offset = "0x184B984", VA = "0x184B984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061C")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0x1840EB4", Offset = "0x1840EB4", VA = "0x1840EB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061D")]
		public float HoldButtonAxis
		{
			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x184B9E4", Offset = "0x184B9E4", VA = "0x184B9E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700061E")]
		public bool UseButtonDown
		{
			[Token(Token = "0x6002E77")]
			[Address(RVA = "0x184BA44", Offset = "0x184BA44", VA = "0x184BA44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061F")]
		public bool UseButtonUp
		{
			[Token(Token = "0x6002E78")]
			[Address(RVA = "0x184BAA4", Offset = "0x184BAA4", VA = "0x184BAA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000620")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x6002E79")]
			[Address(RVA = "0x184BB04", Offset = "0x184BB04", VA = "0x184BB04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000621")]
		public float UseButtonAxis
		{
			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x184BB64", Offset = "0x184BB64", VA = "0x184BB64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000622")]
		public Transform GrabPoint
		{
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0x184BBC4", Offset = "0x184BBC4", VA = "0x184BBC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000623")]
		public bool IsHovering
		{
			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0x184BC50", Offset = "0x184BC50", VA = "0x184BC50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000624")]
		public bool IsInteracting
		{
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0x184BCA4", Offset = "0x184BCA4", VA = "0x184BCA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000625")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0x184BD10", Offset = "0x184BD10", VA = "0x184BD10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000626")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0x1847DCC", Offset = "0x1847DCC", VA = "0x1847DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000627")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6002E80")]
			[Address(RVA = "0x184BD7C", Offset = "0x184BD7C", VA = "0x184BD7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000628")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6002E81")]
			[Address(RVA = "0x184BE2C", Offset = "0x184BE2C", VA = "0x184BE2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x184BEDC", Offset = "0x184BEDC", VA = "0x184BEDC", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x184C7C0", Offset = "0x184C7C0", VA = "0x184C7C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x184C814", Offset = "0x184C814", VA = "0x184C814", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x184CA3C", Offset = "0x184CA3C", VA = "0x184CA3C")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x184C8EC", Offset = "0x184C8EC", VA = "0x184C8EC")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0x184CB0C", Offset = "0x184CB0C", VA = "0x184CB0C")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x184CCC8", Offset = "0x184CCC8", VA = "0x184CCC8")]
		protected void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x184A430", Offset = "0x184A430", VA = "0x184A430")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x184D230", Offset = "0x184D230", VA = "0x184D230")]
		public void LongHapticPulse(float seconds, float amplitude, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x184D25C", Offset = "0x184D25C", VA = "0x184D25C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F48D0", Offset = "0x8F48D0")]
		private IEnumerator DoLongHapticPulse(float seconds, float amplitude, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x184D2FC", Offset = "0x184D2FC", VA = "0x184D2FC")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0x184D400", Offset = "0x184D400", VA = "0x184D400")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0x184D57C", Offset = "0x184D57C", VA = "0x184D57C")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0x184D618", Offset = "0x184D618", VA = "0x184D618")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0x184D6E0", Offset = "0x184D6E0", VA = "0x184D6E0", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0x184D7E0", Offset = "0x184D7E0", VA = "0x184D7E0", Slot = "7")]
		public virtual void BeginInteraction(NVRInteractable interactable, bool snapPosition = false)
		{
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0x184D8F8", Offset = "0x184D8F8", VA = "0x184D8F8", Slot = "8")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0x184DC5C", Offset = "0x184DC5C", VA = "0x184DC5C")]
		public NVRInteractable GetClosest(bool mustBeAttachable = true)
		{
			return null;
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0x184CE8C", Offset = "0x184CE8C", VA = "0x184CE8C")]
		protected bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0x184E1AC", Offset = "0x184E1AC", VA = "0x184E1AC", Slot = "9")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0x184E2D4", Offset = "0x184E2D4", VA = "0x184E2D4", Slot = "10")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0x184E3A8", Offset = "0x184E3A8", VA = "0x184E3A8")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0x184E440", Offset = "0x184E440", VA = "0x184E440")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0x184E460", Offset = "0x184E460", VA = "0x184E460")]
		public void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0x184CF34", Offset = "0x184CF34", VA = "0x184CF34")]
		private void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0x184C5B4", Offset = "0x184C5B4", VA = "0x184C5B4")]
		protected void InitializeRenderModel()
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0x184E76C", Offset = "0x184E76C", VA = "0x184E76C", Slot = "11")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0x184EF10", Offset = "0x184EF10", VA = "0x184EF10")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0x184EF44", Offset = "0x184EF44", VA = "0x184EF44")]
		public NVRHand()
		{
		}
	}
	[Token(Token = "0x200077C")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x40023AA")]
		Invisible = 0,
		[Token(Token = "0x40023AB")]
		Ghost = 70,
		[Token(Token = "0x40023AC")]
		Visible = 100
	}
	[Token(Token = "0x200077D")]
	public enum HandState
	{
		[Token(Token = "0x40023AE")]
		Uninitialized,
		[Token(Token = "0x40023AF")]
		Idle,
		[Token(Token = "0x40023B0")]
		GripDownNotInteracting,
		[Token(Token = "0x40023B1")]
		GripDownInteracting,
		[Token(Token = "0x40023B2")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x40023B3")]
		GripToggleOnInteracting,
		[Token(Token = "0x40023B4")]
		GripToggleOff
	}
	[Token(Token = "0x200077E")]
	public enum InterationStyle
	{
		[Token(Token = "0x40023B6")]
		Hold,
		[Token(Token = "0x40023B7")]
		Toggle,
		[Token(Token = "0x40023B8")]
		ByScript
	}
	[Token(Token = "0x200077F")]
	public class NVRHandedInteractableItem : NVRInteractableItem
	{
		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Transform LeftHandInteractionPoint;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Transform RightHandInteractionPoint;

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0x184F08C", Offset = "0x184F08C", VA = "0x184F08C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0x184F0F8", Offset = "0x184F0F8", VA = "0x184F0F8")]
		public NVRHandedInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000780")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0x184F0FC", Offset = "0x184F0FC", VA = "0x184F0FC", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0x184F100", Offset = "0x184F100", VA = "0x184F100")]
		public NVRHead()
		{
		}
	}
	[Token(Token = "0x2000781")]
	public class NVRHelpers
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x1700062B")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x184F108", Offset = "0x184F108", VA = "0x184F108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0x184EC48", Offset = "0x184EC48", VA = "0x184EC48")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0x184F1D8", Offset = "0x184F1D8", VA = "0x184F1D8")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0x184F3EC", Offset = "0x184F3EC", VA = "0x184F3EC")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0x184F468", Offset = "0x184F468", VA = "0x184F468")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0x184A7B0", Offset = "0x184A7B0", VA = "0x184A7B0")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0x184AB18", Offset = "0x184AB18", VA = "0x184AB18")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0x184F4E0", Offset = "0x184F4E0", VA = "0x184F4E0")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0x184F5F0", Offset = "0x184F5F0", VA = "0x184F5F0")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0x184F5B0", Offset = "0x184F5B0", VA = "0x184F5B0")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0x184F590", Offset = "0x184F590", VA = "0x184F590")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0x184F654", Offset = "0x184F654", VA = "0x184F654")]
		public NVRHelpers()
		{
		}
	}
	[Token(Token = "0x2000782")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand _hand;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<NVRButtons, string> ButtonNames;

		[Token(Token = "0x1700062C")]
		protected NVRHand Hand
		{
			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x184FC98", Offset = "0x184FC98", VA = "0x184FC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0x184FCA0", Offset = "0x184FCA0", VA = "0x184FCA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700062D")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002EB9")]
			get;
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0x184FCA8", Offset = "0x184FCA8", VA = "0x184FCA8", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EBA")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x6002EBB")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x6002EBC")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x6002EBD")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x6002EBE")]
		public abstract string GetDeviceName();

		[Token(Token = "0x6002EBF")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x6002EC0")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x6002EC1")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x6002EC2")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x6002EC3")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x6002EC4")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x6002EC5")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x6002EC6")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x6002EC7")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x6002EC8")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x6002EC9")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x6002ECA")]
		public abstract bool GetNearTouch(NVRButtons button);

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0x184FCB0", Offset = "0x184FCB0", VA = "0x184FCB0")]
		public string GetButtonName(NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0x184FD9C", Offset = "0x184FD9C", VA = "0x184FD9C")]
		protected NVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000783")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected NVRPlayer Player;

		[Token(Token = "0x6002ECD")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x6002ECE")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x6002ECF")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0x184FE20", Offset = "0x184FE20", VA = "0x184FE20")]
		protected NVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000784")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool CanAttach;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool AllowTwoHanded;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float DropDistance;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool HandleInterpolation;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RigidbodyInterpolation m_interpolation;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<NVRHand> AttachedHands;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E44C0", Offset = "0x8E44C0")]
		private NVRHand <AttachedHand>k__BackingField;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E44D0", Offset = "0x8E44D0")]
		private bool <IsAttached>k__BackingField;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Collider[] Colliders;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x1700062E")]
		public NVRHand AttachedHand
		{
			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0x184FE28", Offset = "0x184FE28", VA = "0x184FE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4980", Offset = "0x8F4980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x184FE30", Offset = "0x184FE30", VA = "0x184FE30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4990", Offset = "0x8F4990")]
			private set
			{
			}
		}

		[Token(Token = "0x1700062F")]
		public bool IsAttached
		{
			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x184FE38", Offset = "0x184FE38", VA = "0x184FE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F49A0", Offset = "0x8F49A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x184FE40", Offset = "0x184FE40", VA = "0x184FE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F49B0", Offset = "0x8F49B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0x184FE4C", Offset = "0x184FE4C", VA = "0x184FE4C", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0x1850250", Offset = "0x1850250", VA = "0x1850250", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0x1850388", Offset = "0x1850388", VA = "0x1850388", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x1850394", Offset = "0x1850394", VA = "0x1850394", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x1850410", Offset = "0x1850410", VA = "0x1850410", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0x18507A4", Offset = "0x18507A4", VA = "0x18507A4")]
		private void UpdateChildColliders()
		{
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0x1850198", Offset = "0x1850198", VA = "0x1850198")]
		private void UpdateParentColliders()
		{
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0x18508B4", Offset = "0x18508B4", VA = "0x18508B4", Slot = "9")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x1850A80", Offset = "0x1850A80", VA = "0x1850A80", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x184F0E8", Offset = "0x184F0E8", VA = "0x184F0E8", Slot = "11")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0x1850A84", Offset = "0x1850A84", VA = "0x1850A84", Slot = "12")]
		public virtual void BeginInteraction(NVRHand hand, bool snapToHand = false)
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x1849F14", Offset = "0x1849F14", VA = "0x1849F14", Slot = "13")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x184FFB4", Offset = "0x184FFB4", VA = "0x184FFB4")]
		public void ForceDetach([Optional] NVRHand hand)
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x1850B50", Offset = "0x1850B50", VA = "0x1850B50", Slot = "14")]
		public virtual void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x1850C38", Offset = "0x1850C38", VA = "0x1850C38", Slot = "15")]
		protected virtual void DroppedBecauseOfDistance(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x1850C60", Offset = "0x1850C60", VA = "0x1850C60", Slot = "16")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0x1850C64", Offset = "0x1850C64", VA = "0x1850C64", Slot = "17")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x1850C68", Offset = "0x1850C68", VA = "0x1850C68", Slot = "18")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x1850C88", Offset = "0x1850C88", VA = "0x1850C88", Slot = "19")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x1850CA8", Offset = "0x1850CA8", VA = "0x1850CA8", Slot = "20")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x1850104", Offset = "0x1850104", VA = "0x1850104")]
		private void UpdateAttachedHands()
		{
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x1850F60", Offset = "0x1850F60", VA = "0x1850F60")]
		protected NVRInteractable()
		{
		}
	}
	[Token(Token = "0x2000785")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x40023CD")]
		protected const float MaxVelocityChange = 100f;

		[Token(Token = "0x40023CE")]
		protected const float MaxAngularVelocityChange = 200f;

		[Token(Token = "0x40023CF")]
		protected const float VelocityMagic = 6000f;

		[Token(Token = "0x40023D0")]
		protected const float AngularVelocityMagic = 50f;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E44E0", Offset = "0x8E44E0")]
		public Transform InteractionPoint;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<NVRHand, Transform> PickupTransforms;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool HasExternalVelocity;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool HasExternalAngularVelocity;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float StartingDrag;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float StartingAngularDrag;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Quaternion twoHandedRotationOffset;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool ItemManipulatorEnabled;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Quaternion m_rotOffset;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 centreOffset;

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x185102C", Offset = "0x185102C", VA = "0x185102C")]
		public Transform GetPickupTransform(NVRHand h)
		{
			return null;
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0x18510A0", Offset = "0x18510A0", VA = "0x18510A0", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0x1851180", Offset = "0x1851180", VA = "0x1851180", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0x1851300", Offset = "0x1851300", VA = "0x1851300", Slot = "4")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x185135C", Offset = "0x185135C", VA = "0x185135C", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x18513B8", Offset = "0x18513B8", VA = "0x18513B8", Slot = "22")]
		protected virtual void GetTargetValues(out Vector3 handPosition, out Quaternion handRotation, out Vector3 targetItemPosition, out Quaternion targetItemRotation)
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x18519B0", Offset = "0x18519B0", VA = "0x18519B0", Slot = "23")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x1851DB8", Offset = "0x1851DB8", VA = "0x1851DB8", Slot = "24")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x1851ED0", Offset = "0x1851ED0", VA = "0x1851ED0", Slot = "18")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x1851F64", Offset = "0x1851F64", VA = "0x1851F64", Slot = "19")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x1851FF8", Offset = "0x1851FF8", VA = "0x1851FF8", Slot = "12")]
		public override void BeginInteraction(NVRHand hand, bool snapToHand = false)
		{
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x1852570", Offset = "0x1852570", VA = "0x1852570", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x18529E0", Offset = "0x18529E0", VA = "0x18529E0", Slot = "7")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x184A41C", Offset = "0x184A41C", VA = "0x184A41C", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x1852A14", Offset = "0x1852A14", VA = "0x1852A14", Slot = "16")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0x1852A28", Offset = "0x1852A28", VA = "0x1852A28", Slot = "25")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x1852C84", Offset = "0x1852C84", VA = "0x1852C84", Slot = "26")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0x1852B00", Offset = "0x1852B00", VA = "0x1852B00")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0x1852424", Offset = "0x1852424", VA = "0x1852424")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0x1852880", Offset = "0x1852880", VA = "0x1852880")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x1849FE8", Offset = "0x1849FE8", VA = "0x1849FE8", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0x184A130", Offset = "0x184A130", VA = "0x184A130")]
		public NVRInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000786")]
	public class NVRInteractableItemClippable : NVRInteractableItem
	{
		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x1852D34", Offset = "0x1852D34", VA = "0x1852D34", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x1852DC4", Offset = "0x1852DC4", VA = "0x1852DC4", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0x1852E04", Offset = "0x1852E04", VA = "0x1852E04", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0x1852E38", Offset = "0x1852E38", VA = "0x1852E38")]
		public NVRInteractableItemClippable()
		{
		}
	}
	[Token(Token = "0x2000787")]
	public class NVRInteractableItemSnappable : NVRInteractableItem
	{
		[Token(Token = "0x2000788")]
		private enum positionalSnapping
		{
			[Token(Token = "0x40023EE")]
			grid,
			[Token(Token = "0x40023EF")]
			objects
		}

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float snapToMeters;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float snapToAngle;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool snap;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool set;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastSnappedPosition;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastSnappedRotation;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private positionalSnapping snappingType;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private NVRSnappable snappable;

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0x1852E3C", Offset = "0x1852E3C", VA = "0x1852E3C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0x1852FE4", Offset = "0x1852FE4", VA = "0x1852FE4")]
		private Vector3 SnapPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0x18531FC", Offset = "0x18531FC", VA = "0x18531FC")]
		private Quaternion SnapRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x1853440", Offset = "0x1853440", VA = "0x1853440", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x18539A0", Offset = "0x18539A0", VA = "0x18539A0", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x18539B4", Offset = "0x18539B4", VA = "0x18539B4")]
		public NVRInteractableItemSnappable()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float CurrentAngle;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x17000630")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0x18539CC", Offset = "0x18539CC", VA = "0x18539CC", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x18539D4", Offset = "0x18539D4", VA = "0x18539D4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x1853A0C", Offset = "0x1853A0C", VA = "0x1853A0C", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x1853B90", Offset = "0x1853B90", VA = "0x1853B90", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1853D28", Offset = "0x1853D28", VA = "0x1853D28", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x1853E00", Offset = "0x1853E00", VA = "0x1853E00")]
		public NVRInteractableRotator()
		{
		}
	}
	[Token(Token = "0x200078A")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<NVRInteractable> NVRInteractableList;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool Initialized;

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1853E04", Offset = "0x1853E04", VA = "0x1853E04")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x18504B0", Offset = "0x18504B0", VA = "0x18504B0")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x1850D14", Offset = "0x1850D14", VA = "0x1850D14")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x184E078", Offset = "0x184E078", VA = "0x184E078")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x184E638", Offset = "0x184E638", VA = "0x184E638")]
		public static Collider[] GetColliders(NVRInteractable interactable)
		{
			return null;
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0x1853F9C", Offset = "0x1853F9C", VA = "0x1853F9C")]
		public static List<NVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0x1854000", Offset = "0x1854000", VA = "0x1854000")]
		public NVRInteractables()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float SnapDistance;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float RungAngleInterval;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0x185400C", Offset = "0x185400C", VA = "0x185400C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x185409C", Offset = "0x185409C", VA = "0x185409C", Slot = "22")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x1854234", Offset = "0x1854234", VA = "0x1854234", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x184AC14", Offset = "0x184AC14", VA = "0x184AC14")]
		public string GetLetter()
		{
			return null;
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0x1854274", Offset = "0x1854274", VA = "0x1854274")]
		public NVRLetterSpinner()
		{
		}
	}
	[Token(Token = "0x200078C")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x200078D")]
		public enum LeverPosition
		{
			[Token(Token = "0x4002408")]
			Off,
			[Token(Token = "0x4002409")]
			Mid,
			[Token(Token = "0x400240A")]
			On
		}

		[Token(Token = "0x200078E")]
		public enum RotationAxis
		{
			[Token(Token = "0x400240C")]
			XAxis,
			[Token(Token = "0x400240D")]
			YAxis,
			[Token(Token = "0x400240E")]
			ZAxis
		}

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D90E8", Offset = "0x8D90E8")]
		private sealed class <HoldPosition>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRLever <>4__this;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000632")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F2C")]
				[Address(RVA = "0x105ACD0", Offset = "0x105ACD0", VA = "0x105ACD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000633")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F2E")]
				[Address(RVA = "0x105AD18", Offset = "0x105AD18", VA = "0x105AD18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x105ABB0", Offset = "0x105ABB0", VA = "0x105ABB0")]
			[DebuggerHidden]
			public <HoldPosition>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x105ABDC", Offset = "0x105ABDC", VA = "0x105ABDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0x105ABE0", Offset = "0x105ABE0", VA = "0x105ABE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0x105ACD8", Offset = "0x105ACD8", VA = "0x105ACD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float LastValue;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float CurrentValue;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool LeverEngaged;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float EngageWaitTime;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected bool UseMotor;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected Quaternion Max;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected Quaternion Mid;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Quaternion Min;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected float AngleRange;

		[Token(Token = "0x17000631")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x1854310", Offset = "0x1854310", VA = "0x1854310", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0x1854318", Offset = "0x1854318", VA = "0x1854318", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x18546D8", Offset = "0x18546D8", VA = "0x18546D8", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0x1854858", Offset = "0x1854858", VA = "0x1854858", Slot = "28")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x1854904", Offset = "0x1854904", VA = "0x1854904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F49C0", Offset = "0x8F49C0")]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0x185498C", Offset = "0x185498C", VA = "0x185498C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x1854B38", Offset = "0x1854B38", VA = "0x1854B38", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x1854774", Offset = "0x1854774", VA = "0x1854774")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x1854820", Offset = "0x1854820", VA = "0x1854820")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x1854C24", Offset = "0x1854C24", VA = "0x1854C24")]
		public NVRLever()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D90F8", Offset = "0x8D90F8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type componentType;

			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0x105AD20", Offset = "0x105AD20", VA = "0x105AD20")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0x105AD28", Offset = "0x105AD28", VA = "0x105AD28")]
			internal bool <Initialize>b__0(Type keepType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand Hand;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool State;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] Colliders;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Type[] KeepTypes;

		[Token(Token = "0x17000634")]
		protected float DropDistance
		{
			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x1329330", Offset = "0x1329330", VA = "0x1329330")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0x1329338", Offset = "0x1329338", VA = "0x1329338")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x1329FD4", Offset = "0x1329FD4", VA = "0x1329FD4")]
		public void Kill()
		{
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x132A048", Offset = "0x132A048", VA = "0x132A048")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0x132A100", Offset = "0x132A100", VA = "0x132A100")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0x132A2FC", Offset = "0x132A2FC", VA = "0x132A2FC", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x132A338", Offset = "0x132A338", VA = "0x132A338", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x1329F10", Offset = "0x1329F10", VA = "0x1329F10")]
		public void On()
		{
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1329ED8", Offset = "0x1329ED8", VA = "0x1329ED8")]
		public void Off()
		{
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1329BCC", Offset = "0x1329BCC", VA = "0x1329BCC")]
		protected void SetupCustomModel()
		{
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x132A354", Offset = "0x132A354", VA = "0x132A354")]
		public NVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x2000792")]
	public class NVRPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9108", Offset = "0x8D9108")]
		private sealed class <>c
		{
			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NVRPlayer, bool> <>9__4_0;

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x105AE3C", Offset = "0x105AE3C", VA = "0x105AE3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0x105AE44", Offset = "0x105AE44", VA = "0x105AE44")]
			internal bool <get_Instance>b__4_0(NVRPlayer player)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9118", Offset = "0x8D9118")]
		private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRPlayer <>4__this;

			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NVRSDKIntegrations <CurrentIntegrationType>5__2;

			[Token(Token = "0x17000637")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F4F")]
				[Address(RVA = "0x105B148", Offset = "0x105B148", VA = "0x105B148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000638")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F51")]
				[Address(RVA = "0x105B190", Offset = "0x105B190", VA = "0x105B190", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x105AF04", Offset = "0x105AF04", VA = "0x105AF04")]
			[DebuggerHidden]
			public <Start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x105AF30", Offset = "0x105AF30", VA = "0x105AF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x105AF34", Offset = "0x105AF34", VA = "0x105AF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x105B150", Offset = "0x105B150", VA = "0x105B150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DecimalConstantAttribute", RVA = "0x8E4538", Offset = "0x8E4538")]
		public static readonly decimal NewtonVRVersion;

		[Token(Token = "0x400241E")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool UnityXREnabled;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[HideInInspector]
		public bool WindowsMREnabled;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool PhysicalHands;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool VibrateOnHover;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int VelocityHistorySteps;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E459C", Offset = "0x8E459C")]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E45AC", Offset = "0x8E45AC")]
		[HideInInspector]
		public bool OverrideAll;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject OverrideAllLeftHand;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public GameObject OverrideAllLeftHandPhysicalColliders;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject OverrideAllRightHand;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject OverrideAllRightHandPhysicalColliders;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool OverrideSteamVR;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHand;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHandPhysicalColliders;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHand;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHandPhysicalColliders;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public bool OverrideOculus;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHand;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHandPhysicalColliders;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public GameObject OverrideOculusRightHand;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public GameObject OverrideOculusRightHandPhysicalColliders;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E46C4", Offset = "0x8E46C4")]
		public NVRHead Head;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public NVRHand LeftHand;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NVRHand RightHand;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NVRIntegration Integration;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E46F4", Offset = "0x8E46F4")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x17000635")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x132A5DC", Offset = "0x132A5DC", VA = "0x132A5DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000636")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0x132A734", Offset = "0x132A734", VA = "0x132A734")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x132A9D8", Offset = "0x132A9D8", VA = "0x132A9D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x132AC3C", Offset = "0x132AC3C", VA = "0x132AC3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4A70", Offset = "0x8F4A70")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x132ACB4", Offset = "0x132ACB4", VA = "0x132ACB4")]
		private void SetupIntegration(NVRSDKIntegrations cit, bool logOutput = true)
		{
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x132AE80", Offset = "0x132AE80", VA = "0x132AE80")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x132B18C", Offset = "0x132B18C", VA = "0x132B18C")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x132B2A8", Offset = "0x132B2A8", VA = "0x132B2A8")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x132B30C", Offset = "0x132B30C", VA = "0x132B30C")]
		public static void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x132B61C", Offset = "0x132B61C", VA = "0x132B61C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x132B6A8", Offset = "0x132B6A8", VA = "0x132B6A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x132B6C0", Offset = "0x132B6C0", VA = "0x132B6C0")]
		public NVRPlayer()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4002452")]
		None,
		[Token(Token = "0x4002453")]
		FallbackNonVR,
		[Token(Token = "0x4002454")]
		SteamVR,
		[Token(Token = "0x4002455")]
		Oculus,
		[Token(Token = "0x4002456")]
		WindowsMR,
		[Token(Token = "0x4002457")]
		UnityXR
	}
	[Token(Token = "0x2000796")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4704", Offset = "0x8E4704")]
		public float CurrentValue;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E473C", Offset = "0x8E473C")]
		public Transform StartPoint;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4774", Offset = "0x8E4774")]
		public Transform EndPoint;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform PickupTransform;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 SliderPath;

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0x132B7C8", Offset = "0x132B7C8", VA = "0x132B7C8", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x132B9F4", Offset = "0x132B9F4", VA = "0x132B9F4", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0x132BBC8", Offset = "0x132BBC8", VA = "0x132BBC8", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x132BD2C", Offset = "0x132BD2C", VA = "0x132BD2C", Slot = "14")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F56")]
		[Address(RVA = "0x132BBC0", Offset = "0x132BBC0", VA = "0x132BBC0")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0x132BE08", Offset = "0x132BE08", VA = "0x132BE08")]
		public void SetValue(float newValue)
		{
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0x132BEC8", Offset = "0x132BEC8", VA = "0x132BEC8")]
		public NVRSlider()
		{
		}
	}
	[Token(Token = "0x2000797")]
	public class NVRSnappable : MonoBehaviour
	{
		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<NVRSnappable> snappables;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider[] colliders;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool snapping;

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x132BEDC", Offset = "0x132BEDC", VA = "0x132BEDC")]
		public static void ClearSnappables()
		{
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x132BF48", Offset = "0x132BF48", VA = "0x132BF48")]
		public void StartSnapping()
		{
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x132BF54", Offset = "0x132BF54", VA = "0x132BF54")]
		public void StopSnapping()
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x132BF5C", Offset = "0x132BF5C", VA = "0x132BF5C")]
		public NVRAlignment SnapToNearest(Vector3 position, float maxSnapDistance)
		{
			return null;
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x132C3EC", Offset = "0x132C3EC", VA = "0x132C3EC")]
		public NVRAlignment SnapToBounds(Vector3 position, Bounds snappingBounds)
		{
			return null;
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x132C300", Offset = "0x132C300", VA = "0x132C300")]
		public Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x132C57C", Offset = "0x132C57C", VA = "0x132C57C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x132C5D8", Offset = "0x132C5D8", VA = "0x132C5D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x132C6B8", Offset = "0x132C6B8", VA = "0x132C6B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x132C738", Offset = "0x132C738", VA = "0x132C738")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0x132C5DC", Offset = "0x132C5DC", VA = "0x132C5DC")]
		private void TrackSelf()
		{
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0x132C6BC", Offset = "0x132C6BC", VA = "0x132C6BC")]
		private void ClearSelf()
		{
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0x132C73C", Offset = "0x132C73C", VA = "0x132C73C")]
		public NVRSnappable()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public class NVRSnappingInteractableItem : NVRInteractableItem
	{
		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float snapToMeters;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float snapToDegrees;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool snap;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool set;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastSnappedPosition;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastSnappedRotation;

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0x132C744", Offset = "0x132C744", VA = "0x132C744")]
		private Vector3 SnapPosition(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x132C95C", Offset = "0x132C95C", VA = "0x132C95C")]
		private Quaternion SnapRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0x132CBA0", Offset = "0x132CBA0", VA = "0x132CBA0", Slot = "23")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6002F69")]
		[Address(RVA = "0x132D06C", Offset = "0x132D06C", VA = "0x132D06C", Slot = "11")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0x132D078", Offset = "0x132D078", VA = "0x132D078")]
		public NVRSnappingInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000799")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CurrentState;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LastState;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool FixedState;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform OnButton;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OffButton;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float ForceMagic;

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0x132D8A8", Offset = "0x132D8A8", VA = "0x132D8A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0x132DA64", Offset = "0x132DA64", VA = "0x132DA64")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x132DC14", Offset = "0x132DC14", VA = "0x132DC14")]
		private void Update()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x132D910", Offset = "0x132D910", VA = "0x132D910")]
		private void SetRotation(bool forState)
		{
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0x132DC28", Offset = "0x132DC28", VA = "0x132DC28")]
		public NVRSwitch()
		{
		}
	}
	[Token(Token = "0x200079A")]
	public class NVRTeleportController : MonoBehaviour
	{
		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BeamStart;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRTeleporter teleporter;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int controllerIndex;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool held;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3? validTeleportPosition;

		[Token(Token = "0x17000639")]
		private NVRHand nvrHand
		{
			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x132DC48", Offset = "0x132DC48", VA = "0x132DC48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x132DD30", Offset = "0x132DD30", VA = "0x132DD30")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x132DF04", Offset = "0x132DF04", VA = "0x132DF04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x132EA08", Offset = "0x132EA08", VA = "0x132EA08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x132EA98", Offset = "0x132EA98", VA = "0x132EA98")]
		public NVRTeleportController()
		{
		}
	}
	[Token(Token = "0x200079B")]
	public class NVRTeleporter : MonoBehaviour
	{
		[Token(Token = "0x200079C")]
		public class TeleportPreview
		{
			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LineRenderer ArcLine;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject PlaySpaceDisplay;

			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject InvalidPointDisplay;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject TeleportTargetDisplay;

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0x105B578", Offset = "0x105B578", VA = "0x105B578")]
			public TeleportPreview()
			{
			}
		}

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9128", Offset = "0x8D9128")]
		private sealed class <DoTunnelTeleport>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRTeleporter <>4__this;

			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 teleportPosition;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <easeInStartTime>5__2;

			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <easeInEndTime>5__3;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <moveTimeStart>5__4;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <moveTimeEnd>5__5;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <initialPosition>5__6;

			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <endPosition>5__7;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <easeOutStartTime>5__8;

			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <easeOutEndTime>5__9;

			[Token(Token = "0x1700063B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F8A")]
				[Address(RVA = "0x105B528", Offset = "0x105B528", VA = "0x105B528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F8C")]
				[Address(RVA = "0x105B570", Offset = "0x105B570", VA = "0x105B570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F87")]
			[Address(RVA = "0x105B198", Offset = "0x105B198", VA = "0x105B198")]
			[DebuggerHidden]
			public <DoTunnelTeleport>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x105B1C4", Offset = "0x105B1C4", VA = "0x105B1C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x105B1C8", Offset = "0x105B1C8", VA = "0x105B1C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x105B530", Offset = "0x105B530", VA = "0x105B530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool TunnelTeleport;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TunnelOverTime;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VignettePower;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float VignetteEaseInTime;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float VignetteEaseOutTime;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LineRenderer ArcRendererDisplay;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject PlaySpaceDisplay;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject InvalidPointDisplay;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject TargetDisplay;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LimitToHorizontal;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float LimitSensitivity;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NVRButtons TeleportButton;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public LayerMask TeleportSurfaceMask;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LayerMask TeleportBlockMask;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private LayerMask fullMask;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ArcStrength;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float ArcMaxLength;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float SampleFrequency;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float curveMod;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float acceleration;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float arcLineDisplayOffset;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float playspaceVerticalOffset;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<int, TeleportPreview> teleportPreviews;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NVRPlayer player;

		[Token(Token = "0x1700063A")]
		private int samplePoints
		{
			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x132EAA0", Offset = "0x132EAA0", VA = "0x132EAA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x132EAB0", Offset = "0x132EAB0", VA = "0x132EAB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x132EB58", Offset = "0x132EB58", VA = "0x132EB58")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x132ECB8", Offset = "0x132ECB8", VA = "0x132ECB8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x132E054", Offset = "0x132E054", VA = "0x132E054")]
		public Vector3? UpdateArcTeleport(Transform origin, int controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x132E858", Offset = "0x132E858", VA = "0x132E858")]
		public void HideArcTeleport(int controllerIndex)
		{
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x132ED20", Offset = "0x132ED20", VA = "0x132ED20")]
		private bool CheckTeleportCurve(Vector3 startingPoint, Vector3 initialVelocity, Vector3 initialAcceleration, out List<Vector3> points, out bool hit, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x132E9C0", Offset = "0x132E9C0", VA = "0x132E9C0")]
		public void TeleportPlayer(Vector3 teleportPosition)
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x132F178", Offset = "0x132F178", VA = "0x132F178")]
		private void MovePosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x132F430", Offset = "0x132F430", VA = "0x132F430")]
		private Vector3 GetPlayerPositionFromCameraPosition(Vector3 newCameraFloor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x132F538", Offset = "0x132F538", VA = "0x132F538")]
		private void MovePlayer(Vector3 newPlayerPosition)
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x132F0DC", Offset = "0x132F0DC", VA = "0x132F0DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4B20", Offset = "0x8F4B20")]
		private IEnumerator DoTunnelTeleport(Vector3 teleportPosition)
		{
			return null;
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x132F064", Offset = "0x132F064", VA = "0x132F064")]
		private Vector3 CurveDerivitive(Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0x132F760", Offset = "0x132F760", VA = "0x132F760")]
		private float CurveDerivitive(float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x132F080", Offset = "0x132F080", VA = "0x132F080")]
		private Vector3 Curve(Vector3 point, Vector3 velocity, Vector3 acceleration, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x132F76C", Offset = "0x132F76C", VA = "0x132F76C")]
		private float Curve(float point, float velocity, float acceleration, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x132F78C", Offset = "0x132F78C", VA = "0x132F78C")]
		public NVRTeleporter()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x132F7DC", Offset = "0x132F7DC", VA = "0x132F7DC", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x132F7E4", Offset = "0x132F7E4", VA = "0x132F7E4")]
		public NVRUIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x200079F")]
	public class NVRVignette : MonoBehaviour
	{
		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader vignetteShader;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int vignetteProperty;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRVignette instance;

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x13323F0", Offset = "0x13323F0", VA = "0x13323F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x133252C", Offset = "0x133252C", VA = "0x133252C")]
		public void SetAmount(float newFeather)
		{
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0x1332550", Offset = "0x1332550", VA = "0x1332550")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x13325D0", Offset = "0x13325D0", VA = "0x13325D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x1332638", Offset = "0x1332638", VA = "0x1332638")]
		public NVRVignette()
		{
		}
	}
	[Token(Token = "0x20007A0")]
	public class NVRVirtualHand : NVRHand
	{
		[Token(Token = "0x20007A1")]
		public enum Handedness
		{
			[Token(Token = "0x40024A4")]
			Left,
			[Token(Token = "0x40024A5")]
			Right
		}

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Handedness Hand;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float radius;

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x1332640", Offset = "0x1332640", VA = "0x1332640")]
		private void Start()
		{
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x1332650", Offset = "0x1332650", VA = "0x1332650", Slot = "4")]
		public override void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x13329E0", Offset = "0x13329E0", VA = "0x13329E0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0x1332AB0", Offset = "0x1332AB0", VA = "0x1332AB0")]
		public void Hold()
		{
		}

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0x1332AEC", Offset = "0x1332AEC", VA = "0x1332AEC")]
		public void Release()
		{
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x1332B7C", Offset = "0x1332B7C", VA = "0x1332B7C")]
		public void Use()
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x1332C14", Offset = "0x1332C14", VA = "0x1332C14")]
		public void EndUse()
		{
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x1332CAC", Offset = "0x1332CAC", VA = "0x1332CAC", Slot = "11")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x1332EB4", Offset = "0x1332EB4", VA = "0x1332EB4")]
		public NVRVirtualHand()
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public class NVRVirtualInputDevice : NVRInputDevice
	{
		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RenderModel;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x1700063D")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x1332F28", Offset = "0x1332F28", VA = "0x1332F28", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x1332EC4", Offset = "0x1332EC4", VA = "0x1332EC4", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x1332ECC", Offset = "0x1332ECC", VA = "0x1332ECC", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x1332ED4", Offset = "0x1332ED4", VA = "0x1332ED4", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x1332EDC", Offset = "0x1332EDC", VA = "0x1332EDC", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x1332EE4", Offset = "0x1332EE4", VA = "0x1332EE4", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x1332EEC", Offset = "0x1332EEC", VA = "0x1332EEC", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x1332EF4", Offset = "0x1332EF4", VA = "0x1332EF4", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x1332EFC", Offset = "0x1332EFC", VA = "0x1332EFC", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x1332F04", Offset = "0x1332F04", VA = "0x1332F04", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x1332F0C", Offset = "0x1332F0C", VA = "0x1332F0C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x1332F14", Offset = "0x1332F14", VA = "0x1332F14", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x1332F1C", Offset = "0x1332F1C", VA = "0x1332F1C", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x1332F24", Offset = "0x1332F24", VA = "0x1332F24", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x1332F30", Offset = "0x1332F30", VA = "0x1332F30", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x1332F74", Offset = "0x1332F74", VA = "0x1332F74", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x1332F7C", Offset = "0x1332F7C", VA = "0x1332F7C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FAE")]
		[Address(RVA = "0x133301C", Offset = "0x133301C", VA = "0x133301C", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x13330EC", Offset = "0x13330EC", VA = "0x13330EC", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0x13331D8", Offset = "0x13331D8", VA = "0x13331D8")]
		public NVRVirtualInputDevice()
		{
		}
	}
	[Token(Token = "0x20007A3")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x1700063E")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x1328E8C", Offset = "0x1328E8C", VA = "0x1328E8C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x1328ECC", Offset = "0x1328ECC", VA = "0x1328ECC", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x1328F0C", Offset = "0x1328F0C", VA = "0x1328F0C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FB4")]
		[Address(RVA = "0x1328F4C", Offset = "0x1328F4C", VA = "0x1328F4C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x1328F8C", Offset = "0x1328F8C", VA = "0x1328F8C", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x1328FCC", Offset = "0x1328FCC", VA = "0x1328FCC", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0x132900C", Offset = "0x132900C", VA = "0x132900C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0x132904C", Offset = "0x132904C", VA = "0x132904C", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0x132908C", Offset = "0x132908C", VA = "0x132908C", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0x13290CC", Offset = "0x13290CC", VA = "0x13290CC", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x132910C", Offset = "0x132910C", VA = "0x132910C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0x132914C", Offset = "0x132914C", VA = "0x132914C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x132918C", Offset = "0x132918C", VA = "0x132918C", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x13291CC", Offset = "0x13291CC", VA = "0x13291CC", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x132920C", Offset = "0x132920C", VA = "0x132920C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0x132924C", Offset = "0x132924C", VA = "0x132924C", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x132928C", Offset = "0x132928C", VA = "0x132928C", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0x13292CC", Offset = "0x13292CC", VA = "0x13292CC", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x132930C", Offset = "0x132930C", VA = "0x132930C")]
		public NVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0x1329314", Offset = "0x1329314", VA = "0x1329314", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x1329318", Offset = "0x1329318", VA = "0x1329318", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0x1329320", Offset = "0x1329320", VA = "0x1329320", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0x1329328", Offset = "0x1329328", VA = "0x1329328")]
		public NVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x1700063F")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x132D08C", Offset = "0x132D08C", VA = "0x132D08C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x132D118", Offset = "0x132D118", VA = "0x132D118", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x132D130", Offset = "0x132D130", VA = "0x132D130", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x132D148", Offset = "0x132D148", VA = "0x132D148", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0x132D190", Offset = "0x132D190", VA = "0x132D190", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x132D1A8", Offset = "0x132D1A8", VA = "0x132D1A8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x132D1C0", Offset = "0x132D1C0", VA = "0x132D1C0", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x132D1D8", Offset = "0x132D1D8", VA = "0x132D1D8", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x132D1F0", Offset = "0x132D1F0", VA = "0x132D1F0", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x132D208", Offset = "0x132D208", VA = "0x132D208", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0x132D220", Offset = "0x132D220", VA = "0x132D220", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x132D238", Offset = "0x132D238", VA = "0x132D238", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x132D250", Offset = "0x132D250", VA = "0x132D250", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x132D268", Offset = "0x132D268", VA = "0x132D268", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x132D280", Offset = "0x132D280", VA = "0x132D280", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x132D298", Offset = "0x132D298", VA = "0x132D298", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x132D2B0", Offset = "0x132D2B0", VA = "0x132D2B0", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x132D2C8", Offset = "0x132D2C8", VA = "0x132D2C8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x132D0A4", Offset = "0x132D0A4", VA = "0x132D0A4")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x132D2CC", Offset = "0x132D2CC", VA = "0x132D2CC")]
		public NVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20007A6")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x132D2D4", Offset = "0x132D2D4", VA = "0x132D2D4", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x132D2D8", Offset = "0x132D2D8", VA = "0x132D2D8", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0x132D2E0", Offset = "0x132D2E0", VA = "0x132D2E0", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x132A95C", Offset = "0x132A95C", VA = "0x132A95C")]
		public NVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x20007A7")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D9138", Offset = "0x8D9138")]
	public class NVRUnityXRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x20007A8")]
		private struct InputDetails
		{
			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NVRButtons m_button;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InputFeatureUsage<bool>? m_buttonMapping;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputFeatureUsage<bool>? m_touchMapping;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputFeatureUsage<bool>? m_nearTouchMapping;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputFeatureUsage<float>? m_triggerMapping;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public InputFeatureUsage<Vector2>? m_stickMapping;

			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool m_buttonDown;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool m_buttonJustDown;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool m_buttonJustUp;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool m_touchDown;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool m_touchJustDown;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool m_touchJustUp;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool m_nearTouchDown;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
			public bool m_nearTouchJustDown;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool m_nearTouchJustUp;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float m_triggerValue;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector2 m_stickValue;
		}

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RenderModel;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.XR.InputDevice device;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputDetails[] m_inputDetails;

		[Token(Token = "0x17000640")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x133075C", Offset = "0x133075C", VA = "0x133075C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x132F7EC", Offset = "0x132F7EC", VA = "0x132F7EC", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x132F8FC", Offset = "0x132F8FC", VA = "0x132F8FC")]
		private void GetDevice(NVRHand hand)
		{
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x132FA90", Offset = "0x132FA90", VA = "0x132FA90", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x1330188", Offset = "0x1330188", VA = "0x1330188")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x1330478", Offset = "0x1330478", VA = "0x1330478", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x13304B8", Offset = "0x13304B8", VA = "0x13304B8", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x13304F8", Offset = "0x13304F8", VA = "0x13304F8", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x1330538", Offset = "0x1330538", VA = "0x1330538", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x1330578", Offset = "0x1330578", VA = "0x1330578", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x13305B8", Offset = "0x13305B8", VA = "0x13305B8", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x13305F8", Offset = "0x13305F8", VA = "0x13305F8", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x1330638", Offset = "0x1330638", VA = "0x1330638", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x1330678", Offset = "0x1330678", VA = "0x1330678", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x13306B8", Offset = "0x13306B8", VA = "0x13306B8", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x13306F8", Offset = "0x13306F8", VA = "0x13306F8", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x1330738", Offset = "0x1330738", VA = "0x1330738", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x1330768", Offset = "0x1330768", VA = "0x1330768", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x1330988", Offset = "0x1330988", VA = "0x1330988", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x1330990", Offset = "0x1330990", VA = "0x1330990", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x133099C", Offset = "0x133099C", VA = "0x133099C", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x1330BD8", Offset = "0x1330BD8", VA = "0x1330BD8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x132FC98", Offset = "0x132FC98", VA = "0x132FC98")]
		private void AddButtonMapping(NVRButtons button, InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x132FDD4", Offset = "0x132FDD4", VA = "0x132FDD4")]
		private void AddTouchMapping(NVRButtons button, InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x132FF10", Offset = "0x132FF10", VA = "0x132FF10")]
		private void AddTriggerMapping(NVRButtons button, InputFeatureUsage<float> usage)
		{
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x133004C", Offset = "0x133004C", VA = "0x133004C")]
		private void AddStickMapping(NVRButtons button, InputFeatureUsage<Vector2> usage)
		{
		}

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x1330CC8", Offset = "0x1330CC8", VA = "0x1330CC8")]
		public NVRUnityXRInputDevice()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class NVRUnityXRIntegration : NVRIntegration
	{
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x1330CD0", Offset = "0x1330CD0", VA = "0x1330CD0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x1330D38", Offset = "0x1330D38", VA = "0x1330D38", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x1330D48", Offset = "0x1330D48", VA = "0x1330D48", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x132A928", Offset = "0x132A928", VA = "0x132A928")]
		public NVRUnityXRIntegration()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8D914C", Offset = "0x8D914C")]
	public class NVRUnityXR_NewInput_InputDevice : NVRInputDevice
	{
		[Token(Token = "0x20007AB")]
		private struct InputDetails
		{
			[Token(Token = "0x20007AC")]
			public enum MapType
			{
				[Token(Token = "0x40024D5")]
				NotSet = -1,
				[Token(Token = "0x40024D6")]
				Button,
				[Token(Token = "0x40024D7")]
				Touch,
				[Token(Token = "0x40024D8")]
				NearTouch,
				[Token(Token = "0x40024D9")]
				Trigger,
				[Token(Token = "0x40024DA")]
				Stick
			}

			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NVRButtons m_button;

			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InputFeatureUsage<bool>? m_buttonMapping;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputFeatureUsage<bool>? m_touchMapping;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InputFeatureUsage<bool>? m_nearTouchMapping;

			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputFeatureUsage<float>? m_triggerMapping;

			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public InputFeatureUsage<Vector2>? m_stickMapping;

			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public MapType m_inputActionType;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InputAction[] m_inputAction;

			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool m_buttonDown;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			public bool m_buttonJustDown;

			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
			public bool m_buttonJustUp;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
			public bool m_touchDown;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool m_touchJustDown;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
			public bool m_touchJustUp;

			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
			public bool m_nearTouchDown;

			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
			public bool m_nearTouchJustDown;

			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool m_nearTouchJustUp;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public float m_triggerValue;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector2 m_stickValue;
		}

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputActionAsset m_inputActions;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject RenderModel;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.XR.InputDevice device;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputDetails[] m_inputDetails;

		[Token(Token = "0x17000641")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600300F")]
			[Address(RVA = "0x1331E44", Offset = "0x1331E44", VA = "0x1331E44", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x1330F0C", Offset = "0x1330F0C", VA = "0x1330F0C", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x13310D0", Offset = "0x13310D0", VA = "0x13310D0")]
		private void GetDevice(NVRHand hand)
		{
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x1331178", Offset = "0x1331178", VA = "0x1331178", Slot = "23")]
		protected virtual void SetupButtonMapping(NVRHand hand)
		{
		}

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x1331904", Offset = "0x1331904", VA = "0x1331904")]
		private void Update()
		{
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x1331B60", Offset = "0x1331B60", VA = "0x1331B60", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x1331BA0", Offset = "0x1331BA0", VA = "0x1331BA0", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x1331BE0", Offset = "0x1331BE0", VA = "0x1331BE0", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x1331C20", Offset = "0x1331C20", VA = "0x1331C20", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x1331C60", Offset = "0x1331C60", VA = "0x1331C60", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003008")]
		[Address(RVA = "0x1331CA0", Offset = "0x1331CA0", VA = "0x1331CA0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x1331CE0", Offset = "0x1331CE0", VA = "0x1331CE0", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x1331D20", Offset = "0x1331D20", VA = "0x1331D20", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x1331D60", Offset = "0x1331D60", VA = "0x1331D60", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300C")]
		[Address(RVA = "0x1331DA0", Offset = "0x1331DA0", VA = "0x1331DA0", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x1331DE0", Offset = "0x1331DE0", VA = "0x1331DE0", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x1331E20", Offset = "0x1331E20", VA = "0x1331E20", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x1331E50", Offset = "0x1331E50", VA = "0x1331E50", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x1332070", Offset = "0x1332070", VA = "0x1332070", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0x1332078", Offset = "0x1332078", VA = "0x1332078", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x13320BC", Offset = "0x13320BC", VA = "0x13320BC", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0x13322F8", Offset = "0x13322F8", VA = "0x13322F8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x133177C", Offset = "0x133177C", VA = "0x133177C")]
		private void AddInputMapping(InputDetails.MapType mapType, NVRButtons button, InputAction inputAction)
		{
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0x13323E8", Offset = "0x13323E8", VA = "0x13323E8")]
		public NVRUnityXR_NewInput_InputDevice()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	public class NVRWindowsMRInput : NVRInputDevice
	{
		[Token(Token = "0x17000642")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6003017")]
			[Address(RVA = "0x13331E8", Offset = "0x13331E8", VA = "0x13331E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003018")]
		[Address(RVA = "0x1333274", Offset = "0x1333274", VA = "0x1333274", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x133328C", Offset = "0x133328C", VA = "0x133328C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0x13332A4", Offset = "0x13332A4", VA = "0x13332A4", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0x13332EC", Offset = "0x13332EC", VA = "0x13332EC", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0x1333304", Offset = "0x1333304", VA = "0x1333304", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0x133331C", Offset = "0x133331C", VA = "0x133331C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600301E")]
		[Address(RVA = "0x1333334", Offset = "0x1333334", VA = "0x1333334", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0x133334C", Offset = "0x133334C", VA = "0x133334C", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003020")]
		[Address(RVA = "0x1333364", Offset = "0x1333364", VA = "0x1333364", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0x133337C", Offset = "0x133337C", VA = "0x133337C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0x1333394", Offset = "0x1333394", VA = "0x1333394", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0x13333AC", Offset = "0x13333AC", VA = "0x13333AC", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0x13333C4", Offset = "0x13333C4", VA = "0x13333C4", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0x13333DC", Offset = "0x13333DC", VA = "0x13333DC", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0x13333F4", Offset = "0x13333F4", VA = "0x13333F4", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x133340C", Offset = "0x133340C", VA = "0x133340C", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x1333424", Offset = "0x1333424", VA = "0x1333424", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, float amplitude = 1f, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x1333200", Offset = "0x1333200", VA = "0x1333200")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x1333428", Offset = "0x1333428", VA = "0x1333428")]
		public NVRWindowsMRInput()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	public class NVRWindowsMRIntegration : NVRIntegration
	{
		[Token(Token = "0x20007AF")]
		public enum DisplayType
		{
			[Token(Token = "0x40024E7")]
			Opaque,
			[Token(Token = "0x40024E8")]
			Transparent
		}

		[Token(Token = "0x20007B0")]
		public delegate void DisplayEventHandler(DisplayType displayType);

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E47AC", Offset = "0x8E47AC")]
		public float NearClipPlane_OpaqueDisplay;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E47E4", Offset = "0x8E47E4")]
		public CameraClearFlags CameraClearFlags_OpaqueDisplay;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E481C", Offset = "0x8E481C")]
		public Color BackgroundColor_OpaqueDisplay;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4854", Offset = "0x8E4854")]
		public int OpaqueQualityLevel;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E488C", Offset = "0x8E488C")]
		public float NearClipPlane_TransparentDisplay;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E48C4", Offset = "0x8E48C4")]
		public CameraClearFlags CameraClearFlags_TransparentDisplay;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E48FC", Offset = "0x8E48FC")]
		public Color BackgroundColor_TransparentDisplay;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4934", Offset = "0x8E4934")]
		public int HoloLensQualityLevel;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E496C", Offset = "0x8E496C")]
		private DisplayType <CurrentDisplayType>k__BackingField;

		[Token(Token = "0x17000643")]
		public DisplayType CurrentDisplayType
		{
			[Token(Token = "0x600302E")]
			[Address(RVA = "0x13335FC", Offset = "0x13335FC", VA = "0x13335FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4BD0", Offset = "0x8F4BD0")]
			get
			{
				return default(DisplayType);
			}
			[Token(Token = "0x600302F")]
			[Address(RVA = "0x1333604", Offset = "0x1333604", VA = "0x1333604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4BE0", Offset = "0x8F4BE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event DisplayEventHandler OnDisplayDetected
		{
			[Token(Token = "0x6003030")]
			[Address(RVA = "0x133360C", Offset = "0x133360C", VA = "0x133360C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4BF0", Offset = "0x8F4BF0")]
			add
			{
			}
			[Token(Token = "0x6003031")]
			[Address(RVA = "0x13336AC", Offset = "0x13336AC", VA = "0x13336AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4C00", Offset = "0x8F4C00")]
			remove
			{
			}
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x1333430", Offset = "0x1333430", VA = "0x1333430", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600302C")]
		[Address(RVA = "0x13335E8", Offset = "0x13335E8", VA = "0x13335E8", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x13335F4", Offset = "0x13335F4", VA = "0x13335F4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0x1333518", Offset = "0x1333518", VA = "0x1333518")]
		public void ApplySettingsForOpaqueDisplay(Camera cam)
		{
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0x1333758", Offset = "0x1333758", VA = "0x1333758")]
		public void ApplySettingsForTransparentDisplay(Camera cam)
		{
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x133374C", Offset = "0x133374C", VA = "0x133374C")]
		private static void SetQuality(int level)
		{
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x132A964", Offset = "0x132A964", VA = "0x132A964")]
		public NVRWindowsMRIntegration()
		{
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x20007B1")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x600303A")]
		[Address(RVA = "0x184984C", Offset = "0x184984C", VA = "0x184984C")]
		public void DropSphere()
		{
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x1849928", Offset = "0x1849928", VA = "0x1849928")]
		public NVRExampleButtonDropSphere()
		{
		}
	}
	[Token(Token = "0x20007B2")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x600303C")]
		[Address(RVA = "0x1849930", Offset = "0x1849930", VA = "0x1849930")]
		public void ResetScene()
		{
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x18499AC", Offset = "0x18499AC", VA = "0x18499AC")]
		public NVRExampleButtonResetScene()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRLever Lever;

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x18499B4", Offset = "0x18499B4", VA = "0x18499B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x1849A24", Offset = "0x1849A24", VA = "0x1849A24")]
		public NVRExampleColorLever()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRSlider Slider;

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x1849A2C", Offset = "0x1849A2C", VA = "0x1849A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x1849A9C", Offset = "0x1849A9C", VA = "0x1849A9C")]
		public NVRExampleColorSlider()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x1849AA4", Offset = "0x1849AA4", VA = "0x1849AA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x1849B00", Offset = "0x1849B00", VA = "0x1849B00")]
		private void Update()
		{
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x1849B84", Offset = "0x1849B84", VA = "0x1849B84")]
		public NVRExampleDegreeResult()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x6003045")]
		[Address(RVA = "0x1849B8C", Offset = "0x1849B8C", VA = "0x1849B8C")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x6003046")]
		[Address(RVA = "0x1849C88", Offset = "0x1849C88", VA = "0x1849C88")]
		public NVRExampleEvent()
		{
		}
	}
	[Token(Token = "0x20007B7")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x6003047")]
		[Address(RVA = "0x1849C90", Offset = "0x1849C90", VA = "0x1849C90", Slot = "13")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x184A12C", Offset = "0x184A12C", VA = "0x184A12C")]
		public NVRExampleGrower()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject BulletPrefab;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform FirePoint;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Vector3 BulletForce;

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x184A2C8", Offset = "0x184A2C8", VA = "0x184A2C8", Slot = "17")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x184A55C", Offset = "0x184A55C", VA = "0x184A55C")]
		public NVRExampleGun()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForceLineVisible;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x184A56C", Offset = "0x184A56C", VA = "0x184A56C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x184A814", Offset = "0x184A814", VA = "0x184A814")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x184AB5C", Offset = "0x184AB5C", VA = "0x184AB5C")]
		public NVRExampleLaserPointer()
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x600304E")]
		[Address(RVA = "0x184AB78", Offset = "0x184AB78", VA = "0x184AB78")]
		private void Awake()
		{
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x184ABD4", Offset = "0x184ABD4", VA = "0x184ABD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6003050")]
		[Address(RVA = "0x184AD28", Offset = "0x184AD28", VA = "0x184AD28")]
		public NVRExampleLetterResult()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9160", Offset = "0x8D9160")]
		private sealed class <DoBlastOff>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x17000644")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003059")]
				[Address(RVA = "0x105A654", Offset = "0x105A654", VA = "0x105A654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000645")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600305B")]
				[Address(RVA = "0x105A69C", Offset = "0x105A69C", VA = "0x105A69C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003056")]
			[Address(RVA = "0x105A518", Offset = "0x105A518", VA = "0x105A518")]
			[DebuggerHidden]
			public <DoBlastOff>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003057")]
			[Address(RVA = "0x105A544", Offset = "0x105A544", VA = "0x105A544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003058")]
			[Address(RVA = "0x105A548", Offset = "0x105A548", VA = "0x105A548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600305A")]
			[Address(RVA = "0x105A65C", Offset = "0x105A65C", VA = "0x105A65C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9170", Offset = "0x8D9170")]
		private sealed class <DoSpawnShip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <endScale>5__3;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__4;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <overTime>5__5;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <stopTime>5__6;

			[Token(Token = "0x17000646")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600305F")]
				[Address(RVA = "0x105A9D8", Offset = "0x105A9D8", VA = "0x105A9D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000647")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003061")]
				[Address(RVA = "0x105AA20", Offset = "0x105AA20", VA = "0x105AA20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600305C")]
			[Address(RVA = "0x105A6A4", Offset = "0x105A6A4", VA = "0x105A6A4")]
			[DebuggerHidden]
			public <DoSpawnShip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600305D")]
			[Address(RVA = "0x105A6D0", Offset = "0x105A6D0", VA = "0x105A6D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600305E")]
			[Address(RVA = "0x105A6D4", Offset = "0x105A6D4", VA = "0x105A6D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003060")]
			[Address(RVA = "0x105A9E0", Offset = "0x105A9E0", VA = "0x105A9E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject RocketPrefab;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRLever Control;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RocketInstance;

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x184AD30", Offset = "0x184AD30", VA = "0x184AD30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x184ADD4", Offset = "0x184ADD4", VA = "0x184ADD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0x184AE20", Offset = "0x184AE20", VA = "0x184AE20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4C10", Offset = "0x8F4C10")]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x184AD5C", Offset = "0x184AD5C", VA = "0x184AD5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4C70", Offset = "0x8F4C70")]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0x184AE98", Offset = "0x184AE98", VA = "0x184AE98")]
		public NVRExampleLeverResultRocket()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSlider SliderRed;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Result;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color ResultColor;

		[Token(Token = "0x6003062")]
		[Address(RVA = "0x184AEA0", Offset = "0x184AEA0", VA = "0x184AEA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x184AFE0", Offset = "0x184AFE0", VA = "0x184AFE0")]
		public NVRExampleRGBResult()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButton Button;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToCopy;

		[Token(Token = "0x6003064")]
		[Address(RVA = "0x184B014", Offset = "0x184B014", VA = "0x184B014")]
		private void Update()
		{
		}

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x184B14C", Offset = "0x184B14C", VA = "0x184B14C")]
		public NVRExampleSpawner()
		{
		}
	}
	[Token(Token = "0x20007C0")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSwitch Switch;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light SpotLight;

		[Token(Token = "0x6003066")]
		[Address(RVA = "0x184B154", Offset = "0x184B154", VA = "0x184B154")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003067")]
		[Address(RVA = "0x184B1B0", Offset = "0x184B1B0", VA = "0x184B1B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6003068")]
		[Address(RVA = "0x184B1DC", Offset = "0x184B1DC", VA = "0x184B1DC")]
		public NVRExampleSwitchResult()
		{
		}
	}
	[Token(Token = "0x20007C1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D9180", Offset = "0x8D9180")]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRPlayer Player;

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x184B1E4", Offset = "0x184B1E4", VA = "0x184B1E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x184B428", Offset = "0x184B428", VA = "0x184B428")]
		private void Start()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x184B448", Offset = "0x184B448", VA = "0x184B448")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x184B910", Offset = "0x184B910", VA = "0x184B910")]
		public NVRExampleTeleporter()
		{
		}
	}
}
namespace Moments
{
	[Token(Token = "0x20007C2")]
	public enum RecorderState
	{
		[Token(Token = "0x400251B")]
		Recording,
		[Token(Token = "0x400251C")]
		Paused,
		[Token(Token = "0x400251D")]
		PreProcessing
	}
	[Token(Token = "0x20007C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D91E0", Offset = "0x8D91E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D91E0", Offset = "0x8D91E0")]
	[DisallowMultipleComponent]
	public sealed class Recorder : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9274", Offset = "0x8D9274")]
		private sealed class <>c
		{
			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6003083")]
			[Address(RVA = "0x1066C20", Offset = "0x1066C20", VA = "0x1066C20")]
			public <>c()
			{
			}
		}

		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9284", Offset = "0x8D9284")]
		private sealed class <PreProcess>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string filename;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder <>4__this;

			[Token(Token = "0x4002536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <filepath>5__2;

			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GifFrame> <frames>5__3;

			[Token(Token = "0x4002538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <temp>5__4;

			[Token(Token = "0x1700064B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003087")]
				[Address(RVA = "0x1067018", Offset = "0x1067018", VA = "0x1067018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003089")]
				[Address(RVA = "0x1067060", Offset = "0x1067060", VA = "0x1067060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003084")]
			[Address(RVA = "0x1066C28", Offset = "0x1066C28", VA = "0x1066C28")]
			[DebuggerHidden]
			public <PreProcess>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0x1066C54", Offset = "0x1066C54", VA = "0x1066C54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0x1066C58", Offset = "0x1066C58", VA = "0x1066C58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003088")]
			[Address(RVA = "0x1067020", Offset = "0x1067020", VA = "0x1067020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8E498C", Offset = "0x8E498C")]
		private int m_Width;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8E49C8", Offset = "0x8E49C8")]
		private int m_Height;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_AutoAspect;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4A14", Offset = "0x8E4A14")]
		private int m_FramePerSecond;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8E4A54", Offset = "0x8E4A54")]
		private int m_Repeat;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4A90", Offset = "0x8E4A90")]
		[SerializeField]
		private int m_Quality;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x8E4AD4", Offset = "0x8E4AD4")]
		private float m_BufferSize;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B14", Offset = "0x8E4B14")]
		private RecorderState <State>k__BackingField;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B24", Offset = "0x8E4B24")]
		private string <SaveFolder>k__BackingField;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ThreadPriority WorkerPriority;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnPreProcessingDone;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<int, float> OnFileSaveProgress;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<int, string> OnFileSaved;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_MaxFrameCount;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_Time;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_TimePerFrame;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<RenderTexture> m_Frames;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_RecycledRenderTexture;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReflectionUtils<Recorder> m_ReflectionUtils;

		[Token(Token = "0x17000648")]
		public RecorderState State
		{
			[Token(Token = "0x600306D")]
			[Address(RVA = "0x1299370", Offset = "0x1299370", VA = "0x1299370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D70", Offset = "0x8F4D70")]
			get
			{
				return default(RecorderState);
			}
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x1299378", Offset = "0x1299378", VA = "0x1299378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D80", Offset = "0x8F4D80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000649")]
		public string SaveFolder
		{
			[Token(Token = "0x600306F")]
			[Address(RVA = "0x1299380", Offset = "0x1299380", VA = "0x1299380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4D90", Offset = "0x8F4D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003070")]
			[Address(RVA = "0x1299388", Offset = "0x1299388", VA = "0x1299388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4DA0", Offset = "0x8F4DA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public float EstimatedMemoryUse
		{
			[Token(Token = "0x6003071")]
			[Address(RVA = "0x1299390", Offset = "0x1299390", VA = "0x1299390")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x12993C4", Offset = "0x12993C4", VA = "0x12993C4")]
		public void Setup(bool autoAspect, int width, int height, int fps, float bufferSize, int repeat, int quality)
		{
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x1299E08", Offset = "0x1299E08", VA = "0x1299E08")]
		public void Pause()
		{
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x1298C94", Offset = "0x1298C94", VA = "0x1298C94")]
		public void Record()
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x1299B7C", Offset = "0x1299B7C", VA = "0x1299B7C")]
		public void FlushMemory()
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x1298DD4", Offset = "0x1298DD4", VA = "0x1298DD4")]
		public void Save()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x1299FB8", Offset = "0x1299FB8", VA = "0x1299FB8")]
		public void Save(string filename)
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x129A17C", Offset = "0x129A17C", VA = "0x129A17C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x129A24C", Offset = "0x129A24C", VA = "0x129A24C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x129A250", Offset = "0x129A250", VA = "0x129A250")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x1299D78", Offset = "0x1299D78", VA = "0x1299D78")]
		private void Init()
		{
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x129A488", Offset = "0x129A488", VA = "0x129A488")]
		public void ComputeHeight()
		{
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x1299EA0", Offset = "0x1299EA0", VA = "0x1299EA0")]
		private void Flush(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600307E")]
		[Address(RVA = "0x1299F04", Offset = "0x1299F04", VA = "0x1299F04")]
		private string GenerateFileName()
		{
			return null;
		}

		[Token(Token = "0x600307F")]
		[Address(RVA = "0x129A0E8", Offset = "0x129A0E8", VA = "0x129A0E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F4DB0", Offset = "0x8F4DB0")]
		private IEnumerator PreProcess(string filename)
		{
			return null;
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0x129A508", Offset = "0x129A508", VA = "0x129A508")]
		private GifFrame ToGifFrame(RenderTexture source, Texture2D target)
		{
			return null;
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0x129A650", Offset = "0x129A650", VA = "0x129A650")]
		public Recorder()
		{
		}
	}
	[Token(Token = "0x20007C6")]
	public class ReflectionUtils<T> where T : class, new()
	{
		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _Instance;

		[Token(Token = "0x600308A")]
		public ReflectionUtils(T instance)
		{
		}

		[Token(Token = "0x600308B")]
		public string GetFieldName<U>(Expression<Func<T, U>> fieldAccess)
		{
			return null;
		}

		[Token(Token = "0x600308C")]
		public FieldInfo GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600308D")]
		public A GetAttribute<A>(FieldInfo field) where A : Attribute
		{
			return null;
		}

		[Token(Token = "0x600308E")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x600308F")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}

		[Token(Token = "0x6003090")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x6003091")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}
	}
	[Token(Token = "0x20007C7")]
	internal sealed class Worker
	{
		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int workerId;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread m_Thread;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Id;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<GifFrame> m_Frames;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal GifEncoder m_Encoder;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string m_FilePath;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Action<int, string> m_OnFileSaved;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Action<int, float> m_OnFileSaveProgress;

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x1400C6C", Offset = "0x1400C6C", VA = "0x1400C6C")]
		internal Worker(ThreadPriority priority)
		{
		}

		[Token(Token = "0x6003093")]
		[Address(RVA = "0x1400D8C", Offset = "0x1400D8C", VA = "0x1400D8C")]
		internal void Start()
		{
		}

		[Token(Token = "0x6003094")]
		[Address(RVA = "0x1400DA8", Offset = "0x1400DA8", VA = "0x1400DA8")]
		private void Run()
		{
		}
	}
}
namespace Moments.Encoder
{
	[Token(Token = "0x20007C8")]
	public class GifEncoder
	{
		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_Width;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_Height;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int m_Repeat;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_FrameDelay;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_HasStarted;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected FileStream m_FileStream;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GifFrame m_CurrentFrame;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected byte[] m_Pixels;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] m_IndexedPixels;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_ColorDepth;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected byte[] m_ColorTab;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] m_UsedEntry;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_PaletteSize;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_DisposalCode;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_ShouldCloseStream;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_IsFirstFrame;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_IsSizeSet;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_SampleInterval;

		[Token(Token = "0x6003096")]
		[Address(RVA = "0x129DC08", Offset = "0x129DC08", VA = "0x129DC08")]
		public GifEncoder()
		{
		}

		[Token(Token = "0x6003097")]
		[Address(RVA = "0x129DC14", Offset = "0x129DC14", VA = "0x129DC14")]
		public GifEncoder(int repeat, int quality)
		{
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0x129DCD4", Offset = "0x129DCD4", VA = "0x129DCD4")]
		public void SetDelay(int ms)
		{
		}

		[Token(Token = "0x6003099")]
		[Address(RVA = "0x129DD08", Offset = "0x129DD08", VA = "0x129DD08")]
		public void SetFrameRate(float fps)
		{
		}

		[Token(Token = "0x600309A")]
		[Address(RVA = "0x129DD44", Offset = "0x129DD44", VA = "0x129DD44")]
		public void AddFrame(GifFrame frame)
		{
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0x129E6F0", Offset = "0x129E6F0", VA = "0x129E6F0")]
		public void Start(FileStream os)
		{
		}

		[Token(Token = "0x600309C")]
		[Address(RVA = "0x129E8C0", Offset = "0x129E8C0", VA = "0x129E8C0")]
		public void Start(string file)
		{
		}

		[Token(Token = "0x600309D")]
		[Address(RVA = "0x129E9E4", Offset = "0x129E9E4", VA = "0x129E9E4")]
		public void Finish()
		{
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x129DE70", Offset = "0x129DE70", VA = "0x129DE70")]
		protected void SetSize(int w, int h)
		{
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x129DE80", Offset = "0x129DE80", VA = "0x129DE80")]
		protected void GetImagePixels()
		{
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x129DFCC", Offset = "0x129DFCC", VA = "0x129DFCC")]
		protected void AnalyzePixels()
		{
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x129E434", Offset = "0x129E434", VA = "0x129E434")]
		protected void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x129E564", Offset = "0x129E564", VA = "0x129E564")]
		protected void WriteImageDesc()
		{
		}

		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x129E1B4", Offset = "0x129E1B4", VA = "0x129E1B4")]
		protected void WriteLSD()
		{
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x129E330", Offset = "0x129E330", VA = "0x129E330")]
		protected void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x129E298", Offset = "0x129E298", VA = "0x129E298")]
		protected void WritePalette()
		{
		}

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x129E658", Offset = "0x129E658", VA = "0x129E658")]
		protected void WritePixels()
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x129EB8C", Offset = "0x129EB8C", VA = "0x129EB8C")]
		protected void WriteShort(int value)
		{
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x129E828", Offset = "0x129E828", VA = "0x129E828")]
		protected void WriteString(string s)
		{
		}
	}
	[Token(Token = "0x20007C9")]
	public class GifFrame
	{
		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] Data;

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x129EC4C", Offset = "0x129EC4C", VA = "0x129EC4C")]
		public GifFrame()
		{
		}
	}
	[Token(Token = "0x20007CA")]
	public class LzwEncoder
	{
		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x160403C", Offset = "0x160403C", VA = "0x160403C")]
		public LzwEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x1604208", Offset = "0x1604208", VA = "0x1604208")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x160432C", Offset = "0x160432C", VA = "0x160432C")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x1604374", Offset = "0x1604374", VA = "0x1604374")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x1604530", Offset = "0x1604530", VA = "0x1604530")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x1604890", Offset = "0x1604890", VA = "0x1604890")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x1604268", Offset = "0x1604268", VA = "0x1604268")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x16047D0", Offset = "0x16047D0", VA = "0x16047D0")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x16047E0", Offset = "0x16047E0", VA = "0x16047E0")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x16043D0", Offset = "0x16043D0", VA = "0x16043D0")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public class NeuQuant
	{
		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lengthcount;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int samplefac;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int[][] network;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] netindex;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] bias;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] freq;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] radpower;

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x133BAA8", Offset = "0x133BAA8", VA = "0x133BAA8")]
		public NeuQuant(byte[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x133BD88", Offset = "0x133BD88", VA = "0x133BD88")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x133C01C", Offset = "0x133C01C", VA = "0x133C01C")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x133C368", Offset = "0x133C368", VA = "0x133C368")]
		public void Learn()
		{
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x133CFC8", Offset = "0x133CFC8", VA = "0x133CFC8")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x133D230", Offset = "0x133D230", VA = "0x133D230")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x133D264", Offset = "0x133D264", VA = "0x133D264")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x133CCD8", Offset = "0x133CCD8", VA = "0x133CCD8")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x133CB98", Offset = "0x133CB98", VA = "0x133CB98")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x133C8E0", Offset = "0x133C8E0", VA = "0x133C8E0")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace InControl
{
	[Token(Token = "0x20007CC")]
	public class InControlManager : MonoBehaviour
	{
		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool logDebugInfo;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool invertYAxis;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableXInput;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool useFixedUpdate;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> customProfiles;

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0xFC1EDC", Offset = "0xFC1EDC", VA = "0xFC1EDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0xFC2940", Offset = "0xFC2940", VA = "0xFC2940")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0xFC2B04", Offset = "0xFC2B04", VA = "0xFC2B04")]
		private void Update()
		{
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0xFC2CB8", Offset = "0xFC2CB8", VA = "0xFC2CB8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0xFC2D28", Offset = "0xFC2D28", VA = "0xFC2D28")]
		private void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0xFC2EE8", Offset = "0xFC2EE8", VA = "0xFC2EE8")]
		private void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0xFC2F4C", Offset = "0xFC2F4C", VA = "0xFC2F4C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60030C7")]
		[Address(RVA = "0xFC2FB0", Offset = "0xFC2FB0", VA = "0xFC2FB0")]
		private void HandleOnLogMessage(LogMessage logMessage)
		{
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0xFC30B4", Offset = "0xFC30B4", VA = "0xFC30B4")]
		public InControlManager()
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public class InputControl
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputControl Null;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B34", Offset = "0x8E4B34")]
		private string <Handle>k__BackingField;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B44", Offset = "0x8E4B44")]
		private InputControlType <Target>k__BackingField;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B54", Offset = "0x8E4B54")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Sensitivity;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LowerDeadZone;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float UpperDeadZone;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B64", Offset = "0x8E4B64")]
		private bool <IsButton>k__BackingField;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputControlState thisState;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputControlState lastState;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputControlState tempState;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong zeroTick;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float? RawValue;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float? PreValue;

		[Token(Token = "0x1700064D")]
		public string Handle
		{
			[Token(Token = "0x60030C9")]
			[Address(RVA = "0xFC5B24", Offset = "0xFC5B24", VA = "0xFC5B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E60", Offset = "0x8F4E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030CA")]
			[Address(RVA = "0xFC5B2C", Offset = "0xFC5B2C", VA = "0xFC5B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E70", Offset = "0x8F4E70")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700064E")]
		public InputControlType Target
		{
			[Token(Token = "0x60030CB")]
			[Address(RVA = "0xFC5B34", Offset = "0xFC5B34", VA = "0xFC5B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E80", Offset = "0x8F4E80")]
			get
			{
				return default(InputControlType);
			}
			[Token(Token = "0x60030CC")]
			[Address(RVA = "0xFC5B3C", Offset = "0xFC5B3C", VA = "0xFC5B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4E90", Offset = "0x8F4E90")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700064F")]
		public ulong UpdateTick
		{
			[Token(Token = "0x60030CD")]
			[Address(RVA = "0xFC5B44", Offset = "0xFC5B44", VA = "0xFC5B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4EA0", Offset = "0x8F4EA0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60030CE")]
			[Address(RVA = "0xFC5B4C", Offset = "0xFC5B4C", VA = "0xFC5B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4EB0", Offset = "0x8F4EB0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000650")]
		public bool IsButton
		{
			[Token(Token = "0x60030CF")]
			[Address(RVA = "0xFC5B54", Offset = "0xFC5B54", VA = "0xFC5B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4EC0", Offset = "0x8F4EC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030D0")]
			[Address(RVA = "0xFC5B5C", Offset = "0xFC5B5C", VA = "0xFC5B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4ED0", Offset = "0x8F4ED0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000651")]
		internal bool IsOnZeroTick
		{
			[Token(Token = "0x60030D8")]
			[Address(RVA = "0xFC5F3C", Offset = "0xFC5F3C", VA = "0xFC5F3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000652")]
		public bool State
		{
			[Token(Token = "0x60030D9")]
			[Address(RVA = "0xFC5F50", Offset = "0xFC5F50", VA = "0xFC5F50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000653")]
		public bool LastState
		{
			[Token(Token = "0x60030DA")]
			[Address(RVA = "0xFC5F58", Offset = "0xFC5F58", VA = "0xFC5F58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000654")]
		public float Value
		{
			[Token(Token = "0x60030DB")]
			[Address(RVA = "0xFC5F60", Offset = "0xFC5F60", VA = "0xFC5F60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000655")]
		public float LastValue
		{
			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xFC5F68", Offset = "0xFC5F68", VA = "0xFC5F68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000656")]
		public bool HasChanged
		{
			[Token(Token = "0x60030DD")]
			[Address(RVA = "0xFC5F70", Offset = "0xFC5F70", VA = "0xFC5F70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000657")]
		public bool IsPressed
		{
			[Token(Token = "0x60030DE")]
			[Address(RVA = "0xFC5F98", Offset = "0xFC5F98", VA = "0xFC5F98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000658")]
		public bool WasPressed
		{
			[Token(Token = "0x60030DF")]
			[Address(RVA = "0xFC5FA0", Offset = "0xFC5FA0", VA = "0xFC5FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000659")]
		public bool WasReleased
		{
			[Token(Token = "0x60030E0")]
			[Address(RVA = "0xFC5FC0", Offset = "0xFC5FC0", VA = "0xFC5FC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065A")]
		public bool IsNull
		{
			[Token(Token = "0x60030E1")]
			[Address(RVA = "0xFC5CF4", Offset = "0xFC5CF4", VA = "0xFC5CF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065B")]
		public bool IsNotNull
		{
			[Token(Token = "0x60030E2")]
			[Address(RVA = "0xFC5FE0", Offset = "0xFC5FE0", VA = "0xFC5FE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065C")]
		public InputControlType? Obverse
		{
			[Token(Token = "0x60030E6")]
			[Address(RVA = "0xFC6110", Offset = "0xFC6110", VA = "0xFC6110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0xFC5B68", Offset = "0xFC5B68", VA = "0xFC5B68")]
		private InputControl(string handle)
		{
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0xFC5BA8", Offset = "0xFC5BA8", VA = "0xFC5BA8")]
		public InputControl(string handle, InputControlType target)
		{
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0xFC5C24", Offset = "0xFC5C24", VA = "0xFC5C24")]
		public void UpdateWithState(bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0xFC5D84", Offset = "0xFC5D84", VA = "0xFC5D84")]
		public void UpdateWithValue(float value, ulong updateTick)
		{
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0xFC5E98", Offset = "0xFC5E98", VA = "0xFC5E98")]
		internal void PreUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0xFC5EBC", Offset = "0xFC5EBC", VA = "0xFC5EBC")]
		internal void PostUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0xFC5F30", Offset = "0xFC5F30", VA = "0xFC5F30")]
		internal void SetZeroTick()
		{
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0xFC6050", Offset = "0xFC6050", VA = "0xFC6050", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0xFC60E0", Offset = "0xFC60E0", VA = "0xFC60E0")]
		public static implicit operator bool(InputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0xFC60F8", Offset = "0xFC60F8", VA = "0xFC60F8")]
		public static implicit operator float(InputControl control)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20007CE")]
	public class InputControlMapping
	{
		[Token(Token = "0x20007CF")]
		public class Range
		{
			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Range Complete;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Range Positive;

			[Token(Token = "0x40025B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Range Negative;

			[Token(Token = "0x40025B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Minimum;

			[Token(Token = "0x40025B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Maximum;

			[Token(Token = "0x60030ED")]
			[Address(RVA = "0xE85814", Offset = "0xE85814", VA = "0xE85814")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputControlSource Source;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputControlType Target;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Invert;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Raw;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool IgnoreInitialZeroValue;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Range SourceRange;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Range TargetRange;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string handle;

		[Token(Token = "0x1700065D")]
		public string Handle
		{
			[Token(Token = "0x60030E9")]
			[Address(RVA = "0xFC63B4", Offset = "0xFC63B4", VA = "0xFC63B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0xFC6458", Offset = "0xFC6458", VA = "0xFC6458")]
			set
			{
			}
		}

		[Token(Token = "0x1700065E")]
		private bool IsYAxis
		{
			[Token(Token = "0x60030EB")]
			[Address(RVA = "0xFC6398", Offset = "0xFC6398", VA = "0xFC6398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0xFC627C", Offset = "0xFC627C", VA = "0xFC627C")]
		public float MapValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0xFC6460", Offset = "0xFC6460", VA = "0xFC6460")]
		public InputControlMapping()
		{
		}
	}
	[Token(Token = "0x20007D0")]
	public interface InputControlSource
	{
		[Token(Token = "0x60030EF")]
		float GetValue(InputDevice inputDevice);

		[Token(Token = "0x60030F0")]
		bool GetState(InputDevice inputDevice);
	}
	[Token(Token = "0x20007D1")]
	public struct InputControlState
	{
		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool State;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Value;

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0xFC5EB0", Offset = "0xFC5EB0", VA = "0xFC5EB0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0xFC5E60", Offset = "0xFC5E60", VA = "0xFC5E60")]
		public void Set(float value)
		{
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0xFC64FC", Offset = "0xFC64FC", VA = "0xFC64FC")]
		public void Set(float value, float threshold)
		{
		}

		[Token(Token = "0x60030F4")]
		[Address(RVA = "0xFC5D64", Offset = "0xFC5D64", VA = "0xFC5D64")]
		public void Set(bool state)
		{
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0xFC6514", Offset = "0xFC6514", VA = "0xFC6514")]
		public static implicit operator bool(InputControlState state)
		{
			return default(bool);
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0xFC6520", Offset = "0xFC6520", VA = "0xFC6520")]
		public static implicit operator float(InputControlState state)
		{
			return default(float);
		}

		[Token(Token = "0x60030F7")]
		[Address(RVA = "0xFC652C", Offset = "0xFC652C", VA = "0xFC652C")]
		public static bool operator ==(InputControlState a, InputControlState b)
		{
			return default(bool);
		}

		[Token(Token = "0x60030F8")]
		[Address(RVA = "0xFC5F00", Offset = "0xFC5F00", VA = "0xFC5F00")]
		public static bool operator !=(InputControlState a, InputControlState b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007D2")]
	public enum InputControlType
	{
		[Token(Token = "0x40025B7")]
		None,
		[Token(Token = "0x40025B8")]
		LeftStickX,
		[Token(Token = "0x40025B9")]
		LeftStickY,
		[Token(Token = "0x40025BA")]
		LeftStickButton,
		[Token(Token = "0x40025BB")]
		RightStickX,
		[Token(Token = "0x40025BC")]
		RightStickY,
		[Token(Token = "0x40025BD")]
		RightStickButton,
		[Token(Token = "0x40025BE")]
		DPadUp,
		[Token(Token = "0x40025BF")]
		DPadDown,
		[Token(Token = "0x40025C0")]
		DPadLeft,
		[Token(Token = "0x40025C1")]
		DPadRight,
		[Token(Token = "0x40025C2")]
		Action1,
		[Token(Token = "0x40025C3")]
		Action2,
		[Token(Token = "0x40025C4")]
		Action3,
		[Token(Token = "0x40025C5")]
		Action4,
		[Token(Token = "0x40025C6")]
		LeftTrigger,
		[Token(Token = "0x40025C7")]
		RightTrigger,
		[Token(Token = "0x40025C8")]
		LeftBumper,
		[Token(Token = "0x40025C9")]
		RightBumper,
		[Token(Token = "0x40025CA")]
		Back,
		[Token(Token = "0x40025CB")]
		Start,
		[Token(Token = "0x40025CC")]
		Select,
		[Token(Token = "0x40025CD")]
		System,
		[Token(Token = "0x40025CE")]
		Pause,
		[Token(Token = "0x40025CF")]
		Menu,
		[Token(Token = "0x40025D0")]
		Share,
		[Token(Token = "0x40025D1")]
		View,
		[Token(Token = "0x40025D2")]
		Options,
		[Token(Token = "0x40025D3")]
		TiltX,
		[Token(Token = "0x40025D4")]
		TiltY,
		[Token(Token = "0x40025D5")]
		TiltZ,
		[Token(Token = "0x40025D6")]
		ScrollWheel,
		[Token(Token = "0x40025D7")]
		TouchPadTap,
		[Token(Token = "0x40025D8")]
		TouchPadXAxis,
		[Token(Token = "0x40025D9")]
		TouchPadYAxis,
		[Token(Token = "0x40025DA")]
		Analog0,
		[Token(Token = "0x40025DB")]
		Analog1,
		[Token(Token = "0x40025DC")]
		Analog2,
		[Token(Token = "0x40025DD")]
		Analog3,
		[Token(Token = "0x40025DE")]
		Analog4,
		[Token(Token = "0x40025DF")]
		Analog5,
		[Token(Token = "0x40025E0")]
		Analog6,
		[Token(Token = "0x40025E1")]
		Analog7,
		[Token(Token = "0x40025E2")]
		Analog8,
		[Token(Token = "0x40025E3")]
		Analog9,
		[Token(Token = "0x40025E4")]
		Analog10,
		[Token(Token = "0x40025E5")]
		Analog11,
		[Token(Token = "0x40025E6")]
		Analog12,
		[Token(Token = "0x40025E7")]
		Analog13,
		[Token(Token = "0x40025E8")]
		Analog14,
		[Token(Token = "0x40025E9")]
		Analog15,
		[Token(Token = "0x40025EA")]
		Analog16,
		[Token(Token = "0x40025EB")]
		Analog17,
		[Token(Token = "0x40025EC")]
		Analog18,
		[Token(Token = "0x40025ED")]
		Analog19,
		[Token(Token = "0x40025EE")]
		Button0,
		[Token(Token = "0x40025EF")]
		Button1,
		[Token(Token = "0x40025F0")]
		Button2,
		[Token(Token = "0x40025F1")]
		Button3,
		[Token(Token = "0x40025F2")]
		Button4,
		[Token(Token = "0x40025F3")]
		Button5,
		[Token(Token = "0x40025F4")]
		Button6,
		[Token(Token = "0x40025F5")]
		Button7,
		[Token(Token = "0x40025F6")]
		Button8,
		[Token(Token = "0x40025F7")]
		Button9,
		[Token(Token = "0x40025F8")]
		Button10,
		[Token(Token = "0x40025F9")]
		Button11,
		[Token(Token = "0x40025FA")]
		Button12,
		[Token(Token = "0x40025FB")]
		Button13,
		[Token(Token = "0x40025FC")]
		Button14,
		[Token(Token = "0x40025FD")]
		Button15,
		[Token(Token = "0x40025FE")]
		Button16,
		[Token(Token = "0x40025FF")]
		Button17,
		[Token(Token = "0x4002600")]
		Button18,
		[Token(Token = "0x4002601")]
		Button19,
		[Token(Token = "0x4002602")]
		Count
	}
	[Token(Token = "0x20007D3")]
	public class OneAxisInputControl
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B74", Offset = "0x8E4B74")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputControlState thisState;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputControlState lastState;

		[Token(Token = "0x1700065F")]
		public ulong UpdateTick
		{
			[Token(Token = "0x60030F9")]
			[Address(RVA = "0xEC51EC", Offset = "0xEC51EC", VA = "0xEC51EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4EE0", Offset = "0x8F4EE0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60030FA")]
			[Address(RVA = "0xEC51F4", Offset = "0xEC51F4", VA = "0xEC51F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4EF0", Offset = "0x8F4EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000660")]
		public bool State
		{
			[Token(Token = "0x60030FC")]
			[Address(RVA = "0xEC52A4", Offset = "0xEC52A4", VA = "0xEC52A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000661")]
		public bool LastState
		{
			[Token(Token = "0x60030FD")]
			[Address(RVA = "0xEC52AC", Offset = "0xEC52AC", VA = "0xEC52AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000662")]
		public float Value
		{
			[Token(Token = "0x60030FE")]
			[Address(RVA = "0xEC52B4", Offset = "0xEC52B4", VA = "0xEC52B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000663")]
		public float LastValue
		{
			[Token(Token = "0x60030FF")]
			[Address(RVA = "0xEC52BC", Offset = "0xEC52BC", VA = "0xEC52BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000664")]
		public bool HasChanged
		{
			[Token(Token = "0x6003100")]
			[Address(RVA = "0xEC52C4", Offset = "0xEC52C4", VA = "0xEC52C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000665")]
		public bool IsPressed
		{
			[Token(Token = "0x6003101")]
			[Address(RVA = "0xEC52D4", Offset = "0xEC52D4", VA = "0xEC52D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000666")]
		public bool WasPressed
		{
			[Token(Token = "0x6003102")]
			[Address(RVA = "0xEC52DC", Offset = "0xEC52DC", VA = "0xEC52DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000667")]
		public bool WasReleased
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0xEC52FC", Offset = "0xEC52FC", VA = "0xEC52FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0xEC51FC", Offset = "0xEC51FC", VA = "0xEC51FC")]
		public void UpdateWithValue(float value, ulong updateTick, float stateThreshold)
		{
		}

		[Token(Token = "0x6003104")]
		[Address(RVA = "0xEC531C", Offset = "0xEC531C", VA = "0xEC531C")]
		public static implicit operator bool(OneAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x6003105")]
		[Address(RVA = "0xEC5334", Offset = "0xEC5334", VA = "0xEC5334")]
		public static implicit operator float(OneAxisInputControl control)
		{
			return default(float);
		}

		[Token(Token = "0x6003106")]
		[Address(RVA = "0xEC534C", Offset = "0xEC534C", VA = "0xEC534C")]
		public OneAxisInputControl()
		{
		}
	}
	[Token(Token = "0x20007D4")]
	public class TwoAxisInputControl
	{
		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B84", Offset = "0x8E4B84")]
		private float <X>k__BackingField;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B94", Offset = "0x8E4B94")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BA4", Offset = "0x8E4BA4")]
		private OneAxisInputControl <Left>k__BackingField;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BB4", Offset = "0x8E4BB4")]
		private OneAxisInputControl <Right>k__BackingField;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BC4", Offset = "0x8E4BC4")]
		private OneAxisInputControl <Up>k__BackingField;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BD4", Offset = "0x8E4BD4")]
		private OneAxisInputControl <Down>k__BackingField;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BE4", Offset = "0x8E4BE4")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool thisState;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool lastState;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float StateThreshold;

		[Token(Token = "0x17000668")]
		public float X
		{
			[Token(Token = "0x6003107")]
			[Address(RVA = "0xE8C5A8", Offset = "0xE8C5A8", VA = "0xE8C5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F00", Offset = "0x8F4F00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003108")]
			[Address(RVA = "0xE8C5B0", Offset = "0xE8C5B0", VA = "0xE8C5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F10", Offset = "0x8F4F10")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000669")]
		public float Y
		{
			[Token(Token = "0x6003109")]
			[Address(RVA = "0xE8C5B8", Offset = "0xE8C5B8", VA = "0xE8C5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F20", Offset = "0x8F4F20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600310A")]
			[Address(RVA = "0xE8C5C0", Offset = "0xE8C5C0", VA = "0xE8C5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F30", Offset = "0x8F4F30")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066A")]
		public OneAxisInputControl Left
		{
			[Token(Token = "0x600310B")]
			[Address(RVA = "0xE8C5C8", Offset = "0xE8C5C8", VA = "0xE8C5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F40", Offset = "0x8F4F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600310C")]
			[Address(RVA = "0xE8C5D0", Offset = "0xE8C5D0", VA = "0xE8C5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F50", Offset = "0x8F4F50")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066B")]
		public OneAxisInputControl Right
		{
			[Token(Token = "0x600310D")]
			[Address(RVA = "0xE8C5D8", Offset = "0xE8C5D8", VA = "0xE8C5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F60", Offset = "0x8F4F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x600310E")]
			[Address(RVA = "0xE8C5E0", Offset = "0xE8C5E0", VA = "0xE8C5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F70", Offset = "0x8F4F70")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066C")]
		public OneAxisInputControl Up
		{
			[Token(Token = "0x600310F")]
			[Address(RVA = "0xE8C5E8", Offset = "0xE8C5E8", VA = "0xE8C5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F80", Offset = "0x8F4F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003110")]
			[Address(RVA = "0xE8C5F0", Offset = "0xE8C5F0", VA = "0xE8C5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4F90", Offset = "0x8F4F90")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066D")]
		public OneAxisInputControl Down
		{
			[Token(Token = "0x6003111")]
			[Address(RVA = "0xE8C5F8", Offset = "0xE8C5F8", VA = "0xE8C5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FA0", Offset = "0x8F4FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003112")]
			[Address(RVA = "0xE8C600", Offset = "0xE8C600", VA = "0xE8C600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FB0", Offset = "0x8F4FB0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066E")]
		public ulong UpdateTick
		{
			[Token(Token = "0x6003113")]
			[Address(RVA = "0xE8C608", Offset = "0xE8C608", VA = "0xE8C608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FC0", Offset = "0x8F4FC0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6003114")]
			[Address(RVA = "0xE8C610", Offset = "0xE8C610", VA = "0xE8C610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FD0", Offset = "0x8F4FD0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700066F")]
		public bool State
		{
			[Token(Token = "0x6003117")]
			[Address(RVA = "0xE8C984", Offset = "0xE8C984", VA = "0xE8C984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000670")]
		public bool HasChanged
		{
			[Token(Token = "0x6003118")]
			[Address(RVA = "0xE8C98C", Offset = "0xE8C98C", VA = "0xE8C98C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000671")]
		public Vector2 Vector
		{
			[Token(Token = "0x6003119")]
			[Address(RVA = "0xE8C9AC", Offset = "0xE8C9AC", VA = "0xE8C9AC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6003115")]
		[Address(RVA = "0xE8C618", Offset = "0xE8C618", VA = "0xE8C618")]
		internal TwoAxisInputControl()
		{
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0xE8C6FC", Offset = "0xE8C6FC", VA = "0xE8C6FC")]
		internal void Update(float x, float y, ulong updateTick)
		{
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0xE8C9B4", Offset = "0xE8C9B4", VA = "0xE8C9B4")]
		public static implicit operator bool(TwoAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0xE8C9CC", Offset = "0xE8C9CC", VA = "0xE8C9CC")]
		public static implicit operator Vector2(TwoAxisInputControl control)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0xE8C9E4", Offset = "0xE8C9E4", VA = "0xE8C9E4")]
		public static implicit operator Vector3(TwoAxisInputControl control)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20007D5")]
	public enum LogMessageType
	{
		[Token(Token = "0x4002611")]
		Info,
		[Token(Token = "0x4002612")]
		Warning,
		[Token(Token = "0x4002613")]
		Error
	}
	[Token(Token = "0x20007D6")]
	public struct LogMessage
	{
		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string text;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LogMessageType type;
	}
	[Token(Token = "0x20007D7")]
	public class Logger
	{
		[Token(Token = "0x20007D8")]
		public delegate void LogMessageHandler(LogMessage message);

		[Token(Token = "0x1400001D")]
		public static event LogMessageHandler OnLogMessage
		{
			[Token(Token = "0x600311E")]
			[Address(RVA = "0x177A388", Offset = "0x177A388", VA = "0x177A388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FE0", Offset = "0x8F4FE0")]
			add
			{
			}
			[Token(Token = "0x600311F")]
			[Address(RVA = "0x177A444", Offset = "0x177A444", VA = "0x177A444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F4FF0", Offset = "0x8F4FF0")]
			remove
			{
			}
		}

		[Token(Token = "0x6003120")]
		[Address(RVA = "0x177A500", Offset = "0x177A500", VA = "0x177A500")]
		public static void LogInfo(string text)
		{
		}

		[Token(Token = "0x6003121")]
		[Address(RVA = "0x177A594", Offset = "0x177A594", VA = "0x177A594")]
		public static void LogWarning(string text)
		{
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0x177A62C", Offset = "0x177A62C", VA = "0x177A62C")]
		public static void LogError(string text)
		{
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0x177A6C4", Offset = "0x177A6C4", VA = "0x177A6C4")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	public class InputDevice
	{
		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputDevice Null;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int SortOrder;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C04", Offset = "0x8E4C04")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C14", Offset = "0x8E4C14")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C24", Offset = "0x8E4C24")]
		private ulong <LastChangeTick>k__BackingField;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C34", Offset = "0x8E4C34")]
		private InputControl[] <Controls>k__BackingField;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C44", Offset = "0x8E4C44")]
		private TwoAxisInputControl <LeftStick>k__BackingField;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C54", Offset = "0x8E4C54")]
		private TwoAxisInputControl <RightStick>k__BackingField;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4C64", Offset = "0x8E4C64")]
		private TwoAxisInputControl <DPad>k__BackingField;

		[Token(Token = "0x17000672")]
		public string Name
		{
			[Token(Token = "0x6003128")]
			[Address(RVA = "0xFC6544", Offset = "0xFC6544", VA = "0xFC6544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5000", Offset = "0x8F5000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003129")]
			[Address(RVA = "0xFC654C", Offset = "0xFC654C", VA = "0xFC654C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5010", Offset = "0x8F5010")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000673")]
		public string Meta
		{
			[Token(Token = "0x600312A")]
			[Address(RVA = "0xFC6554", Offset = "0xFC6554", VA = "0xFC6554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5020", Offset = "0x8F5020")]
			get
			{
				return null;
			}
			[Token(Token = "0x600312B")]
			[Address(RVA = "0xFC655C", Offset = "0xFC655C", VA = "0xFC655C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5030", Offset = "0x8F5030")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000674")]
		public ulong LastChangeTick
		{
			[Token(Token = "0x600312C")]
			[Address(RVA = "0xFC6564", Offset = "0xFC6564", VA = "0xFC6564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5040", Offset = "0x8F5040")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600312D")]
			[Address(RVA = "0xFC656C", Offset = "0xFC656C", VA = "0xFC656C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5050", Offset = "0x8F5050")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000675")]
		public InputControl[] Controls
		{
			[Token(Token = "0x600312E")]
			[Address(RVA = "0xFC6574", Offset = "0xFC6574", VA = "0xFC6574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5060", Offset = "0x8F5060")]
			get
			{
				return null;
			}
			[Token(Token = "0x600312F")]
			[Address(RVA = "0xFC657C", Offset = "0xFC657C", VA = "0xFC657C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5070", Offset = "0x8F5070")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000676")]
		public TwoAxisInputControl LeftStick
		{
			[Token(Token = "0x6003130")]
			[Address(RVA = "0xFC6584", Offset = "0xFC6584", VA = "0xFC6584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5080", Offset = "0x8F5080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003131")]
			[Address(RVA = "0xFC658C", Offset = "0xFC658C", VA = "0xFC658C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5090", Offset = "0x8F5090")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000677")]
		public TwoAxisInputControl RightStick
		{
			[Token(Token = "0x6003132")]
			[Address(RVA = "0xFC6594", Offset = "0xFC6594", VA = "0xFC6594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50A0", Offset = "0x8F50A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003133")]
			[Address(RVA = "0xFC659C", Offset = "0xFC659C", VA = "0xFC659C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50B0", Offset = "0x8F50B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000678")]
		public TwoAxisInputControl DPad
		{
			[Token(Token = "0x6003134")]
			[Address(RVA = "0xFC65A4", Offset = "0xFC65A4", VA = "0xFC65A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50C0", Offset = "0x8F50C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003135")]
			[Address(RVA = "0xFC65AC", Offset = "0xFC65AC", VA = "0xFC65AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50D0", Offset = "0x8F50D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000679")]
		private Vector2 DPadVector
		{
			[Token(Token = "0x6003144")]
			[Address(RVA = "0xFC6E50", Offset = "0xFC6E50", VA = "0xFC6E50")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700067A")]
		public virtual bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x6003148")]
			[Address(RVA = "0xFC7118", Offset = "0xFC7118", VA = "0xFC7118", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067B")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x6003149")]
			[Address(RVA = "0xFC7120", Offset = "0xFC7120", VA = "0xFC7120", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067C")]
		public bool MenuWasPressed
		{
			[Token(Token = "0x600314A")]
			[Address(RVA = "0xFC7128", Offset = "0xFC7128", VA = "0xFC7128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067D")]
		public InputControl AnyButton
		{
			[Token(Token = "0x600314B")]
			[Address(RVA = "0xFC7218", Offset = "0xFC7218", VA = "0xFC7218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067E")]
		public InputControl LeftStickX
		{
			[Token(Token = "0x600314C")]
			[Address(RVA = "0xFC6E30", Offset = "0xFC6E30", VA = "0xFC6E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067F")]
		public InputControl LeftStickY
		{
			[Token(Token = "0x600314D")]
			[Address(RVA = "0xFC6E38", Offset = "0xFC6E38", VA = "0xFC6E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000680")]
		public InputControl RightStickX
		{
			[Token(Token = "0x600314E")]
			[Address(RVA = "0xFC6E40", Offset = "0xFC6E40", VA = "0xFC6E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000681")]
		public InputControl RightStickY
		{
			[Token(Token = "0x600314F")]
			[Address(RVA = "0xFC6E48", Offset = "0xFC6E48", VA = "0xFC6E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000682")]
		public InputControl DPadUp
		{
			[Token(Token = "0x6003150")]
			[Address(RVA = "0xFC70D0", Offset = "0xFC70D0", VA = "0xFC70D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000683")]
		public InputControl DPadDown
		{
			[Token(Token = "0x6003151")]
			[Address(RVA = "0xFC70D8", Offset = "0xFC70D8", VA = "0xFC70D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000684")]
		public InputControl DPadLeft
		{
			[Token(Token = "0x6003152")]
			[Address(RVA = "0xFC70C0", Offset = "0xFC70C0", VA = "0xFC70C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000685")]
		public InputControl DPadRight
		{
			[Token(Token = "0x6003153")]
			[Address(RVA = "0xFC70C8", Offset = "0xFC70C8", VA = "0xFC70C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000686")]
		public InputControl Action1
		{
			[Token(Token = "0x6003154")]
			[Address(RVA = "0xFC72F0", Offset = "0xFC72F0", VA = "0xFC72F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000687")]
		public InputControl Action2
		{
			[Token(Token = "0x6003155")]
			[Address(RVA = "0xFC72F8", Offset = "0xFC72F8", VA = "0xFC72F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000688")]
		public InputControl Action3
		{
			[Token(Token = "0x6003156")]
			[Address(RVA = "0xFC7300", Offset = "0xFC7300", VA = "0xFC7300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000689")]
		public InputControl Action4
		{
			[Token(Token = "0x6003157")]
			[Address(RVA = "0xFC7308", Offset = "0xFC7308", VA = "0xFC7308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068A")]
		public InputControl LeftTrigger
		{
			[Token(Token = "0x6003158")]
			[Address(RVA = "0xFC7310", Offset = "0xFC7310", VA = "0xFC7310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068B")]
		public InputControl RightTrigger
		{
			[Token(Token = "0x6003159")]
			[Address(RVA = "0xFC7318", Offset = "0xFC7318", VA = "0xFC7318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068C")]
		public InputControl LeftBumper
		{
			[Token(Token = "0x600315A")]
			[Address(RVA = "0xFC7320", Offset = "0xFC7320", VA = "0xFC7320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068D")]
		public InputControl RightBumper
		{
			[Token(Token = "0x600315B")]
			[Address(RVA = "0xFC7328", Offset = "0xFC7328", VA = "0xFC7328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068E")]
		public InputControl LeftStickButton
		{
			[Token(Token = "0x600315C")]
			[Address(RVA = "0xFC7330", Offset = "0xFC7330", VA = "0xFC7330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068F")]
		public InputControl RightStickButton
		{
			[Token(Token = "0x600315D")]
			[Address(RVA = "0xFC7338", Offset = "0xFC7338", VA = "0xFC7338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000690")]
		public float DPadX
		{
			[Token(Token = "0x600315E")]
			[Address(RVA = "0xFC7340", Offset = "0xFC7340", VA = "0xFC7340")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000691")]
		public float DPadY
		{
			[Token(Token = "0x600315F")]
			[Address(RVA = "0xFC735C", Offset = "0xFC735C", VA = "0xFC735C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000692")]
		public TwoAxisInputControl Direction
		{
			[Token(Token = "0x6003160")]
			[Address(RVA = "0xFC7378", Offset = "0xFC7378", VA = "0xFC7378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003136")]
		[Address(RVA = "0xFC65B4", Offset = "0xFC65B4", VA = "0xFC65B4")]
		public InputDevice(string name)
		{
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0xFC66E8", Offset = "0xFC66E8", VA = "0xFC66E8")]
		public InputControl GetControl(InputControlType inputControlType)
		{
			return null;
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0xFC678C", Offset = "0xFC678C", VA = "0xFC678C")]
		public static InputControlType GetInputControlTypeByName(string inputControlName)
		{
			return default(InputControlType);
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0xFC6890", Offset = "0xFC6890", VA = "0xFC6890")]
		public InputControl GetControlByName(string inputControlName)
		{
			return null;
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0xFC6908", Offset = "0xFC6908", VA = "0xFC6908")]
		public InputControl AddControl(InputControlType inputControlType, string handle)
		{
			return null;
		}

		[Token(Token = "0x600313B")]
		[Address(RVA = "0xFC69D0", Offset = "0xFC69D0", VA = "0xFC69D0")]
		public void UpdateWithState(InputControlType inputControlType, bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x600313C")]
		[Address(RVA = "0xFC6A04", Offset = "0xFC6A04", VA = "0xFC6A04")]
		public void UpdateWithValue(InputControlType inputControlType, float value, ulong updateTick)
		{
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0xFC6A40", Offset = "0xFC6A40", VA = "0xFC6A40")]
		public void PreUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x600313E")]
		[Address(RVA = "0xFC6AD0", Offset = "0xFC6AD0", VA = "0xFC6AD0", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x600313F")]
		[Address(RVA = "0xFC6AD4", Offset = "0xFC6AD4", VA = "0xFC6AD4")]
		public void PostUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0xFC6CF0", Offset = "0xFC6CF0", VA = "0xFC6CF0")]
		private float ProcessAnalogControlValue(InputControl control, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0xFC6FDC", Offset = "0xFC6FDC", VA = "0xFC6FDC")]
		private float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6003142")]
		[Address(RVA = "0xFC6F7C", Offset = "0xFC6F7C", VA = "0xFC6F7C")]
		private float ApplyCircularDeadZone(float axisValue1, float axisValue2, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0xFC7024", Offset = "0xFC7024", VA = "0xFC7024")]
		private float ApplySmoothing(float thisValue, float lastValue, float deltaTime, float sensitivity)
		{
			return default(float);
		}

		[Token(Token = "0x6003145")]
		[Address(RVA = "0xFC70E0", Offset = "0xFC70E0", VA = "0xFC70E0")]
		public bool LastChangedAfter(InputDevice otherDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0xFC7104", Offset = "0xFC7104", VA = "0xFC7104", Slot = "5")]
		public virtual void Vibrate(float leftMotor, float rightMotor)
		{
		}

		[Token(Token = "0x6003147")]
		[Address(RVA = "0xFC7108", Offset = "0xFC7108", VA = "0xFC7108")]
		public void Vibrate(float intensity)
		{
		}
	}
	[Token(Token = "0x20007DA")]
	public class InputDeviceManager
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<InputDevice> devices;

		[Token(Token = "0x6003162")]
		[Address(RVA = "0xFC7424", Offset = "0xFC7424", VA = "0xFC7424", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003163")]
		[Address(RVA = "0xFC7428", Offset = "0xFC7428", VA = "0xFC7428")]
		public InputDeviceManager()
		{
		}
	}
	[Token(Token = "0x20007DB")]
	public class InputManager
	{
		[Serializable]
		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9294", Offset = "0x8D9294")]
		private sealed class <>c
		{
			[Token(Token = "0x4002635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<InputDevice> <>9__55_0;

			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<InputDevice> <>9__56_0;

			[Token(Token = "0x6003191")]
			[Address(RVA = "0xE85968", Offset = "0xE85968", VA = "0xE85968")]
			public <>c()
			{
			}

			[Token(Token = "0x6003192")]
			[Address(RVA = "0xE85970", Offset = "0xE85970", VA = "0xE85970")]
			internal int <AttachDevice>b__55_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}

			[Token(Token = "0x6003193")]
			[Address(RVA = "0xE8599C", Offset = "0xE8599C", VA = "0xE8599C")]
			internal int <DetachDevice>b__56_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly VersionInfo Version;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<InputDeviceManager> inputDeviceManagers;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static InputDevice activeDevice;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<InputDevice> devices;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static ReadOnlyCollection<InputDevice> Devices;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CC4", Offset = "0x8E4CC4")]
		private static string <Platform>k__BackingField;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CD4", Offset = "0x8E4CD4")]
		private static bool <MenuWasPressed>k__BackingField;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public static bool InvertYAxis;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private static bool enableXInput;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private static bool isSetup;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static float initialTime;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static float currentTime;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static float lastUpdateTime;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static ulong currentTick;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static VersionInfo? unityVersion;

		[Token(Token = "0x17000693")]
		public static string Platform
		{
			[Token(Token = "0x600316E")]
			[Address(RVA = "0xFC7E5C", Offset = "0xFC7E5C", VA = "0xFC7E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5180", Offset = "0x8F5180")]
			get
			{
				return null;
			}
			[Token(Token = "0x600316F")]
			[Address(RVA = "0xFC7EC0", Offset = "0xFC7EC0", VA = "0xFC7EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5190", Offset = "0x8F5190")]
			private set
			{
			}
		}

		[Token(Token = "0x17000694")]
		public static bool MenuWasPressed
		{
			[Token(Token = "0x6003170")]
			[Address(RVA = "0xFC7F2C", Offset = "0xFC7F2C", VA = "0xFC7F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F51A0", Offset = "0x8F51A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003171")]
			[Address(RVA = "0xFC7F90", Offset = "0xFC7F90", VA = "0xFC7F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F51B0", Offset = "0x8F51B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000695")]
		private static InputDevice DefaultActiveDevice
		{
			[Token(Token = "0x6003188")]
			[Address(RVA = "0xFC9054", Offset = "0xFC9054", VA = "0xFC9054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000696")]
		public static InputDevice ActiveDevice
		{
			[Token(Token = "0x6003189")]
			[Address(RVA = "0xFC8AAC", Offset = "0xFC8AAC", VA = "0xFC8AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600318A")]
			[Address(RVA = "0xFC8B70", Offset = "0xFC8B70", VA = "0xFC8B70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000697")]
		public static bool EnableXInput
		{
			[Token(Token = "0x600318B")]
			[Address(RVA = "0xFC915C", Offset = "0xFC915C", VA = "0xFC915C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600318C")]
			[Address(RVA = "0xFC91C0", Offset = "0xFC91C0", VA = "0xFC91C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000698")]
		public static VersionInfo UnityVersion
		{
			[Token(Token = "0x600318D")]
			[Address(RVA = "0xFC922C", Offset = "0xFC922C", VA = "0xFC922C")]
			get
			{
				return default(VersionInfo);
			}
		}

		[Token(Token = "0x1400001E")]
		public static event Action OnSetup
		{
			[Token(Token = "0x6003164")]
			[Address(RVA = "0xFC74AC", Offset = "0xFC74AC", VA = "0xFC74AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50E0", Offset = "0x8F50E0")]
			add
			{
			}
			[Token(Token = "0x6003165")]
			[Address(RVA = "0xFC75A4", Offset = "0xFC75A4", VA = "0xFC75A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F50F0", Offset = "0x8F50F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event Action<ulong, float> OnUpdate
		{
			[Token(Token = "0x6003166")]
			[Address(RVA = "0xFC769C", Offset = "0xFC769C", VA = "0xFC769C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5100", Offset = "0x8F5100")]
			add
			{
			}
			[Token(Token = "0x6003167")]
			[Address(RVA = "0xFC7794", Offset = "0xFC7794", VA = "0xFC7794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5110", Offset = "0x8F5110")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event Action<InputDevice> OnDeviceAttached
		{
			[Token(Token = "0x6003168")]
			[Address(RVA = "0xFC788C", Offset = "0xFC788C", VA = "0xFC788C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5120", Offset = "0x8F5120")]
			add
			{
			}
			[Token(Token = "0x6003169")]
			[Address(RVA = "0xFC7984", Offset = "0xFC7984", VA = "0xFC7984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5130", Offset = "0x8F5130")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event Action<InputDevice> OnDeviceDetached
		{
			[Token(Token = "0x600316A")]
			[Address(RVA = "0xFC7A7C", Offset = "0xFC7A7C", VA = "0xFC7A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5140", Offset = "0x8F5140")]
			add
			{
			}
			[Token(Token = "0x600316B")]
			[Address(RVA = "0xFC7B74", Offset = "0xFC7B74", VA = "0xFC7B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5150", Offset = "0x8F5150")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event Action<InputDevice> OnActiveDeviceChanged
		{
			[Token(Token = "0x600316C")]
			[Address(RVA = "0xFC7C6C", Offset = "0xFC7C6C", VA = "0xFC7C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5160", Offset = "0x8F5160")]
			add
			{
			}
			[Token(Token = "0x600316D")]
			[Address(RVA = "0xFC7D64", Offset = "0xFC7D64", VA = "0xFC7D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5170", Offset = "0x8F5170")]
			remove
			{
			}
		}

		[Token(Token = "0x6003172")]
		[Address(RVA = "0xFC7FFC", Offset = "0xFC7FFC", VA = "0xFC7FFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F51C0", Offset = "0x8F51C0")]
		public static void Setup()
		{
		}

		[Token(Token = "0x6003173")]
		[Address(RVA = "0xFC2384", Offset = "0xFC2384", VA = "0xFC2384")]
		internal static void SetupInternal()
		{
		}

		[Token(Token = "0x6003174")]
		[Address(RVA = "0xFC8054", Offset = "0xFC8054", VA = "0xFC8054")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F51F8", Offset = "0x8F51F8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6003175")]
		[Address(RVA = "0xFC2998", Offset = "0xFC2998", VA = "0xFC2998")]
		internal static void ResetInternal()
		{
		}

		[Token(Token = "0x6003176")]
		[Address(RVA = "0xFC80AC", Offset = "0xFC80AC", VA = "0xFC80AC")]
		private static void AssertIsSetup()
		{
		}

		[Token(Token = "0x6003177")]
		[Address(RVA = "0xFC815C", Offset = "0xFC815C", VA = "0xFC815C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8F5230", Offset = "0x8F5230")]
		public static void Update()
		{
		}

		[Token(Token = "0x6003178")]
		[Address(RVA = "0xFC2B8C", Offset = "0xFC2B8C", VA = "0xFC2B8C")]
		internal static void UpdateInternal()
		{
		}

		[Token(Token = "0x6003179")]
		[Address(RVA = "0xFC2D88", Offset = "0xFC2D88", VA = "0xFC2D88")]
		internal static void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x600317A")]
		[Address(RVA = "0xFC2F48", Offset = "0xFC2F48", VA = "0xFC2F48")]
		internal static void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x600317B")]
		[Address(RVA = "0xFC2FAC", Offset = "0xFC2FAC", VA = "0xFC2FAC")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600317C")]
		[Address(RVA = "0xFC8840", Offset = "0xFC8840", VA = "0xFC8840")]
		private static void UpdateActiveDevice()
		{
		}

		[Token(Token = "0x600317D")]
		[Address(RVA = "0xFC8C18", Offset = "0xFC8C18", VA = "0xFC8C18")]
		public static void AddDeviceManager(InputDeviceManager inputDeviceManager)
		{
		}

		[Token(Token = "0x600317E")]
		public static void AddDeviceManager<T>() where T : InputDeviceManager, new()
		{
		}

		[Token(Token = "0x600317F")]
		public static bool HasDeviceManager<T>() where T : InputDeviceManager
		{
			return default(bool);
		}

		[Token(Token = "0x6003180")]
		[Address(RVA = "0xFC81B4", Offset = "0xFC81B4", VA = "0xFC81B4")]
		private static void UpdateCurrentTime()
		{
		}

		[Token(Token = "0x6003181")]
		[Address(RVA = "0xFC82AC", Offset = "0xFC82AC", VA = "0xFC82AC")]
		private static void UpdateDeviceManagers(float deltaTime)
		{
		}

		[Token(Token = "0x6003182")]
		[Address(RVA = "0xFC83D0", Offset = "0xFC83D0", VA = "0xFC83D0")]
		private static void PreUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x6003183")]
		[Address(RVA = "0xFC8510", Offset = "0xFC8510", VA = "0xFC8510")]
		private static void UpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x6003184")]
		[Address(RVA = "0xFC86B4", Offset = "0xFC86B4", VA = "0xFC86B4")]
		private static void PostUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x6003185")]
		[Address(RVA = "0xFC266C", Offset = "0xFC266C", VA = "0xFC266C")]
		public static void AttachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6003186")]
		[Address(RVA = "0xFC8CD0", Offset = "0xFC8CD0", VA = "0xFC8CD0")]
		public static void DetachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6003187")]
		[Address(RVA = "0xFC8F70", Offset = "0xFC8F70", VA = "0xFC8F70")]
		public static void HideDevicesWithProfile(Type type)
		{
		}

		[Token(Token = "0x600318E")]
		[Address(RVA = "0xFC9354", Offset = "0xFC9354", VA = "0xFC9354")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20007DD")]
	public class UnityAnalogSource : InputControlSource
	{
		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int analogId;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] analogQueries;

		[Token(Token = "0x6003194")]
		[Address(RVA = "0xE9A100", Offset = "0xE9A100", VA = "0xE9A100")]
		public UnityAnalogSource(int analogId)
		{
		}

		[Token(Token = "0x6003195")]
		[Address(RVA = "0xE9A2D8", Offset = "0xE9A2D8", VA = "0xE9A2D8", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x6003196")]
		[Address(RVA = "0xE9A410", Offset = "0xE9A410", VA = "0xE9A410", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x6003197")]
		[Address(RVA = "0xE9A12C", Offset = "0xE9A12C", VA = "0xE9A12C")]
		private static void SetupAnalogQueries()
		{
		}

		[Token(Token = "0x6003198")]
		[Address(RVA = "0xE9A36C", Offset = "0xE9A36C", VA = "0xE9A36C")]
		private static string GetAnalogKey(int joystickId, int analogId)
		{
			return null;
		}
	}
	[Token(Token = "0x20007DE")]
	public class UnityButtonSource : InputControlSource
	{
		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] buttonQueries;

		[Token(Token = "0x6003199")]
		[Address(RVA = "0xE9A438", Offset = "0xE9A438", VA = "0xE9A438")]
		public UnityButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x600319A")]
		[Address(RVA = "0xE9A610", Offset = "0xE9A610", VA = "0xE9A610", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x600319B")]
		[Address(RVA = "0xE9A634", Offset = "0xE9A634", VA = "0xE9A634", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x600319C")]
		[Address(RVA = "0xE9A464", Offset = "0xE9A464", VA = "0xE9A464")]
		private static void SetupButtonQueries()
		{
		}

		[Token(Token = "0x600319D")]
		[Address(RVA = "0xE9A6C8", Offset = "0xE9A6C8", VA = "0xE9A6C8")]
		private static string GetButtonKey(int joystickId, int buttonId)
		{
			return null;
		}
	}
	[Token(Token = "0x20007DF")]
	public class UnityGyroAxisSource : InputControlSource
	{
		[Token(Token = "0x20007E0")]
		public enum GyroAxis
		{
			[Token(Token = "0x400263F")]
			X,
			[Token(Token = "0x4002640")]
			Y
		}

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int axis;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Quaternion zeroAttitude;

		[Token(Token = "0x600319E")]
		[Address(RVA = "0xE9AA58", Offset = "0xE9AA58", VA = "0xE9AA58")]
		public UnityGyroAxisSource(GyroAxis axis)
		{
		}

		[Token(Token = "0x600319F")]
		[Address(RVA = "0xE9AAEC", Offset = "0xE9AAEC", VA = "0xE9AAEC", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031A0")]
		[Address(RVA = "0xE9AC2C", Offset = "0xE9AC2C", VA = "0xE9AC2C", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60031A1")]
		[Address(RVA = "0xE9AC54", Offset = "0xE9AC54", VA = "0xE9AC54")]
		private static Quaternion GetAttitude()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60031A2")]
		[Address(RVA = "0xE9AB2C", Offset = "0xE9AB2C", VA = "0xE9AB2C")]
		private static Vector3 GetAxis()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60031A3")]
		[Address(RVA = "0xE9AD08", Offset = "0xE9AD08", VA = "0xE9AD08")]
		private static float ApplyDeadZone(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60031A4")]
		[Address(RVA = "0xE9AA84", Offset = "0xE9AA84", VA = "0xE9AA84")]
		public static void Calibrate()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class UnityKeyCodeAxisSource : InputControlSource
	{
		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode negativeKeyCode;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private KeyCode positiveKeyCode;

		[Token(Token = "0x60031A5")]
		[Address(RVA = "0xE9D7FC", Offset = "0xE9D7FC", VA = "0xE9D7FC")]
		public UnityKeyCodeAxisSource(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
		}

		[Token(Token = "0x60031A6")]
		[Address(RVA = "0xE9F4E8", Offset = "0xE9F4E8", VA = "0xE9F4E8", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031A7")]
		[Address(RVA = "0xE9F534", Offset = "0xE9F534", VA = "0xE9F534", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E2")]
	public class UnityKeyCodeComboSource : InputControlSource
	{
		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60031A8")]
		[Address(RVA = "0xE9D75C", Offset = "0xE9D75C", VA = "0xE9D75C")]
		public UnityKeyCodeComboSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60031A9")]
		[Address(RVA = "0xE9F594", Offset = "0xE9F594", VA = "0xE9F594", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031AA")]
		[Address(RVA = "0xE9F5B8", Offset = "0xE9F5B8", VA = "0xE9F5B8", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E3")]
	public class UnityKeyCodeSource : InputControlSource
	{
		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60031AB")]
		[Address(RVA = "0xE9D6BC", Offset = "0xE9D6BC", VA = "0xE9D6BC")]
		public UnityKeyCodeSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60031AC")]
		[Address(RVA = "0xE9F630", Offset = "0xE9F630", VA = "0xE9F630", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031AD")]
		[Address(RVA = "0xE9F654", Offset = "0xE9F654", VA = "0xE9F654", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E4")]
	public class UnityMouseAxisSource : InputControlSource
	{
		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mouseAxisQuery;

		[Token(Token = "0x60031AE")]
		[Address(RVA = "0xE9DF7C", Offset = "0xE9DF7C", VA = "0xE9DF7C")]
		public UnityMouseAxisSource(string axis)
		{
		}

		[Token(Token = "0x60031AF")]
		[Address(RVA = "0xE9FF44", Offset = "0xE9FF44", VA = "0xE9FF44", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031B0")]
		[Address(RVA = "0xE9FF50", Offset = "0xE9FF50", VA = "0xE9FF50", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E5")]
	public class UnityMouseButtonSource : InputControlSource
	{
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x60031B1")]
		[Address(RVA = "0xE9DF50", Offset = "0xE9DF50", VA = "0xE9DF50")]
		public UnityMouseButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x60031B2")]
		[Address(RVA = "0xE9FF80", Offset = "0xE9FF80", VA = "0xE9FF80", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60031B3")]
		[Address(RVA = "0xE9FFAC", Offset = "0xE9FFAC", VA = "0xE9FFAC", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007E6")]
	[AutoDiscover]
	public class AmazonFireTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B4")]
		[Address(RVA = "0x1494244", Offset = "0x1494244", VA = "0x1494244")]
		public AmazonFireTVProfile()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	[AutoDiscover]
	public class AmazonFireTVRemote : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B5")]
		[Address(RVA = "0x1495098", Offset = "0x1495098", VA = "0x1495098")]
		public AmazonFireTVRemote()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	[AutoDiscover]
	public class AndroidTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B6")]
		[Address(RVA = "0x149871C", Offset = "0x149871C", VA = "0x149871C")]
		public AndroidTVProfile()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	[AutoDiscover]
	public class AndroidTVRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B7")]
		[Address(RVA = "0x149945C", Offset = "0x149945C", VA = "0x149945C")]
		public AndroidTVRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20007EA")]
	[AutoDiscover]
	public class AppleMFiProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B8")]
		[Address(RVA = "0x149F578", Offset = "0x149F578", VA = "0x149F578")]
		public AppleMFiProfile()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	[AutoDiscover]
	public class ExecutionerXProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031B9")]
		[Address(RVA = "0x1015ECC", Offset = "0x1015ECC", VA = "0x1015ECC")]
		public ExecutionerXProfile()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	[AutoDiscover]
	public class GameStickLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BA")]
		[Address(RVA = "0x11C4D50", Offset = "0x11C4D50", VA = "0x11C4D50")]
		public GameStickLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	[AutoDiscover]
	public class GameStickProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BB")]
		[Address(RVA = "0x11C5A28", Offset = "0x11C5A28", VA = "0x11C5A28")]
		public GameStickProfile()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	[AutoDiscover]
	public class GenericAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BC")]
		[Address(RVA = "0x11C67CC", Offset = "0x11C67CC", VA = "0x11C67CC")]
		public GenericAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	[AutoDiscover]
	public class GenericBlackBerryProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BD")]
		[Address(RVA = "0x11C7624", Offset = "0x11C7624", VA = "0x11C7624")]
		public GenericBlackBerryProfile()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	[AutoDiscover]
	public class GenericLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BE")]
		[Address(RVA = "0x129C90C", Offset = "0x129C90C", VA = "0x129C90C")]
		public GenericLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	[AutoDiscover]
	public class GoogleNexusPlayerProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031BF")]
		[Address(RVA = "0x129EC60", Offset = "0x129EC60", VA = "0x129EC60")]
		public GoogleNexusPlayerProfile()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	[AutoDiscover]
	public class GoogleNexusPlayerRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C0")]
		[Address(RVA = "0x129FAF0", Offset = "0x129FAF0", VA = "0x129FAF0")]
		public GoogleNexusPlayerRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	[AutoDiscover]
	public class GreenThrottleAtlasAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C1")]
		[Address(RVA = "0x12A07E8", Offset = "0x12A07E8", VA = "0x12A07E8")]
		public GreenThrottleAtlasAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	[AutoDiscover]
	public class HamaBlackForceWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C2")]
		[Address(RVA = "0x12A5350", Offset = "0x12A5350", VA = "0x12A5350")]
		public HamaBlackForceWinProfile()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	[AutoDiscover]
	public class LogitechF310LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C3")]
		[Address(RVA = "0x177ADC4", Offset = "0x177ADC4", VA = "0x177ADC4")]
		public LogitechF310LinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007F6")]
	[AutoDiscover]
	public class LogitechF310ModeDMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C4")]
		[Address(RVA = "0x177BC54", Offset = "0x177BC54", VA = "0x177BC54")]
		public LogitechF310ModeDMacProfile()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	[AutoDiscover]
	public class LogitechF310ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C5")]
		[Address(RVA = "0x177CAAC", Offset = "0x177CAAC", VA = "0x177CAAC")]
		public LogitechF310ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	[AutoDiscover]
	public class LogitechF310ModeXMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C6")]
		[Address(RVA = "0x177D954", Offset = "0x177D954", VA = "0x177D954")]
		public LogitechF310ModeXMacProfile()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	[AutoDiscover]
	public class LogitechF310ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C7")]
		[Address(RVA = "0x177E7A0", Offset = "0x177E7A0", VA = "0x177E7A0")]
		public LogitechF310ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x20007FA")]
	[AutoDiscover]
	public class LogitechF510LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C8")]
		[Address(RVA = "0x177F668", Offset = "0x177F668", VA = "0x177F668")]
		public LogitechF510LinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	[AutoDiscover]
	public class LogitechF510WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031C9")]
		[Address(RVA = "0x17804F8", Offset = "0x17804F8", VA = "0x17804F8")]
		public LogitechF510WinProfile()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	[AutoDiscover]
	public class LogitechF710LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CA")]
		[Address(RVA = "0x17813C0", Offset = "0x17813C0", VA = "0x17813C0")]
		public LogitechF710LinuxProfile()
		{
		}
	}
	[Token(Token = "0x20007FD")]
	[AutoDiscover]
	public class LogitechF710MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CB")]
		[Address(RVA = "0x1782218", Offset = "0x1782218", VA = "0x1782218")]
		public LogitechF710MacProfile()
		{
		}
	}
	[Token(Token = "0x20007FE")]
	[AutoDiscover]
	public class LogitechF710ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CC")]
		[Address(RVA = "0x1783070", Offset = "0x1783070", VA = "0x1783070")]
		public LogitechF710ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x20007FF")]
	[AutoDiscover]
	public class LogitechF710ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CD")]
		[Address(RVA = "0x1783EC8", Offset = "0x1783EC8", VA = "0x1783EC8")]
		public LogitechF710ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x2000800")]
	[AutoDiscover]
	public class LogitechRumblePad2MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CE")]
		[Address(RVA = "0x1784D20", Offset = "0x1784D20", VA = "0x1784D20")]
		public LogitechRumblePad2MacProfile()
		{
		}
	}
	[Token(Token = "0x2000801")]
	[AutoDiscover]
	public class LogitechRumblePad2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031CF")]
		[Address(RVA = "0x17859F0", Offset = "0x17859F0", VA = "0x17859F0")]
		public LogitechRumblePad2WinProfile()
		{
		}
	}
	[Token(Token = "0x2000802")]
	[AutoDiscover]
	public class LogitechWingManWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D0")]
		[Address(RVA = "0x178674C", Offset = "0x178674C", VA = "0x178674C")]
		public LogitechWingManWinProfile()
		{
		}
	}
	[Token(Token = "0x2000803")]
	[AutoDiscover]
	public class MaxFireBlaze5Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D1")]
		[Address(RVA = "0x1608E80", Offset = "0x1608E80", VA = "0x1608E80")]
		public MaxFireBlaze5Profile()
		{
		}
	}
	[Token(Token = "0x2000804")]
	[AutoDiscover]
	public class MogaProLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D2")]
		[Address(RVA = "0x1612010", Offset = "0x1612010", VA = "0x1612010")]
		public MogaProLinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000805")]
	[AutoDiscover]
	public class MogaProMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x1612E14", Offset = "0x1612E14", VA = "0x1612E14")]
		public MogaProMacProfile()
		{
		}
	}
	[Token(Token = "0x2000806")]
	[AutoDiscover]
	public class MogaProWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x1613CDC", Offset = "0x1613CDC", VA = "0x1613CDC")]
		public MogaProWinProfile()
		{
		}
	}
	[Token(Token = "0x2000807")]
	[AutoDiscover]
	public class NVidiaShieldAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D5")]
		[Address(RVA = "0x1333D4C", Offset = "0x1333D4C", VA = "0x1333D4C")]
		public NVidiaShieldAndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000808")]
	[AutoDiscover]
	public class NVidiaShieldTabletProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x1334B88", Offset = "0x1334B88", VA = "0x1334B88")]
		public NVidiaShieldTabletProfile()
		{
		}
	}
	[Token(Token = "0x2000809")]
	[AutoDiscover]
	public class NatecGenesisP44Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x1336258", Offset = "0x1336258", VA = "0x1336258")]
		public NatecGenesisP44Profile()
		{
		}
	}
	[Token(Token = "0x200080A")]
	[AutoDiscover]
	public class OuyaLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D8")]
		[Address(RVA = "0xEC58D8", Offset = "0xEC58D8", VA = "0xEC58D8")]
		public OuyaLinuxProfile()
		{
		}
	}
	[Token(Token = "0x200080B")]
	[AutoDiscover]
	public class OuyaWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031D9")]
		[Address(RVA = "0xEC67CC", Offset = "0xEC67CC", VA = "0xEC67CC")]
		public OuyaWinProfile()
		{
		}
	}
	[Token(Token = "0x200080C")]
	[AutoDiscover]
	public class PlayStation2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x125D614", Offset = "0x125D614", VA = "0x125D614")]
		public PlayStation2WinProfile()
		{
		}
	}
	[Token(Token = "0x200080D")]
	[AutoDiscover]
	public class PlayStation3AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x125E46C", Offset = "0x125E46C", VA = "0x125E46C")]
		public PlayStation3AndroidProfile()
		{
		}
	}
	[Token(Token = "0x200080E")]
	[AutoDiscover]
	public class PlayStation3LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x125F414", Offset = "0x125F414", VA = "0x125F414")]
		public PlayStation3LinuxProfile()
		{
		}
	}
	[Token(Token = "0x200080F")]
	[AutoDiscover]
	public class PlayStation3MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x1260274", Offset = "0x1260274", VA = "0x1260274")]
		public PlayStation3MacProfile()
		{
		}
	}
	[Token(Token = "0x2000810")]
	[AutoDiscover]
	public class PlayStation3ShenghicWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DE")]
		[Address(RVA = "0x126109C", Offset = "0x126109C", VA = "0x126109C")]
		public PlayStation3ShenghicWinProfile()
		{
		}
	}
	[Token(Token = "0x2000811")]
	[AutoDiscover]
	public class PlayStation3WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031DF")]
		[Address(RVA = "0x1261E74", Offset = "0x1261E74", VA = "0x1261E74")]
		public PlayStation3WinProfile()
		{
		}
	}
	[Token(Token = "0x2000812")]
	[AutoDiscover]
	public class PlayStation4AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E0")]
		[Address(RVA = "0x1262E70", Offset = "0x1262E70", VA = "0x1262E70")]
		public PlayStation4AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000813")]
	[AutoDiscover]
	public class PlayStation4LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E1")]
		[Address(RVA = "0x1263D30", Offset = "0x1263D30", VA = "0x1263D30")]
		public PlayStation4LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000814")]
	[AutoDiscover]
	public class PlayStation4MacBTProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E2")]
		[Address(RVA = "0x1264B88", Offset = "0x1264B88", VA = "0x1264B88")]
		public PlayStation4MacBTProfile()
		{
		}
	}
	[Token(Token = "0x2000815")]
	[AutoDiscover]
	public class PlayStation4MacUSBProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E3")]
		[Address(RVA = "0x1265E10", Offset = "0x1265E10", VA = "0x1265E10")]
		public PlayStation4MacUSBProfile()
		{
		}
	}
	[Token(Token = "0x2000816")]
	[AutoDiscover]
	public class PlayStation4Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E4")]
		[Address(RVA = "0x1266DC8", Offset = "0x1266DC8", VA = "0x1266DC8")]
		public PlayStation4Profile()
		{
		}
	}
	[Token(Token = "0x2000817")]
	[AutoDiscover]
	public class PlayStation4WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E5")]
		[Address(RVA = "0x1267B9C", Offset = "0x1267B9C", VA = "0x1267B9C")]
		public PlayStation4WinProfile()
		{
		}
	}
	[Token(Token = "0x2000818")]
	[AutoDiscover]
	public class PlayStationVitaPSMProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E6")]
		[Address(RVA = "0x1268B84", Offset = "0x1268B84", VA = "0x1268B84")]
		public PlayStationVitaPSMProfile()
		{
		}
	}
	[Token(Token = "0x2000819")]
	[AutoDiscover]
	public class SamsungGP20AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E7")]
		[Address(RVA = "0x11A9F4C", Offset = "0x11A9F4C", VA = "0x11A9F4C")]
		public SamsungGP20AndroidProfile()
		{
		}
	}
	[Token(Token = "0x200081A")]
	[AutoDiscover]
	public class SpeedlinkStrikeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E8")]
		[Address(RVA = "0x11EBBD8", Offset = "0x11EBBD8", VA = "0x11EBBD8")]
		public SpeedlinkStrikeMacProfile()
		{
		}
	}
	[Token(Token = "0x200081B")]
	[AutoDiscover]
	public class SpeedlinkStrikeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031E9")]
		[Address(RVA = "0x11ECA30", Offset = "0x11ECA30", VA = "0x11ECA30")]
		public SpeedlinkStrikeWinProfile()
		{
		}
	}
	[Token(Token = "0x200081C")]
	[AutoDiscover]
	public class SteelSeriesFreeLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EA")]
		[Address(RVA = "0x11F2094", Offset = "0x11F2094", VA = "0x11F2094")]
		public SteelSeriesFreeLinuxProfile()
		{
		}
	}
	[Token(Token = "0x200081D")]
	[AutoDiscover]
	public class SteelSeriesFreeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EB")]
		[Address(RVA = "0x11F2CC0", Offset = "0x11F2CC0", VA = "0x11F2CC0")]
		public SteelSeriesFreeMacProfile()
		{
		}
	}
	[Token(Token = "0x200081E")]
	[AutoDiscover]
	public class SteelSeriesFreeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EC")]
		[Address(RVA = "0x11F3B8C", Offset = "0x11F3B8C", VA = "0x11F3B8C")]
		public SteelSeriesFreeWinProfile()
		{
		}
	}
	[Token(Token = "0x200081F")]
	[AutoDiscover]
	public class ValveStreamingWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031ED")]
		[Address(RVA = "0x13F29E8", Offset = "0x13F29E8", VA = "0x13F29E8")]
		public ValveStreamingWinProfile()
		{
		}
	}
	[Token(Token = "0x2000820")]
	[AutoDiscover]
	public class Xbox360AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EE")]
		[Address(RVA = "0x1403024", Offset = "0x1403024", VA = "0x1403024")]
		public Xbox360AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000821")]
	[AutoDiscover]
	public class Xbox360LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031EF")]
		[Address(RVA = "0x1403EA4", Offset = "0x1403EA4", VA = "0x1403EA4")]
		public Xbox360LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000822")]
	[AutoDiscover]
	public class Xbox360MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F0")]
		[Address(RVA = "0x1405008", Offset = "0x1405008", VA = "0x1405008")]
		public Xbox360MacProfile()
		{
		}
	}
	[Token(Token = "0x2000823")]
	[AutoDiscover]
	public class Xbox360WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F1")]
		[Address(RVA = "0x1405FBC", Offset = "0x1405FBC", VA = "0x1405FBC")]
		public Xbox360WinProfile()
		{
		}
	}
	[Token(Token = "0x2000824")]
	[AutoDiscover]
	public class XboxOneMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F2")]
		[Address(RVA = "0x14073B4", Offset = "0x14073B4", VA = "0x14073B4")]
		public XboxOneMacProfile()
		{
		}
	}
	[Token(Token = "0x2000825")]
	[AutoDiscover]
	public class XboxOneProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F3")]
		[Address(RVA = "0x1408230", Offset = "0x1408230", VA = "0x1408230")]
		public XboxOneProfile()
		{
		}
	}
	[Token(Token = "0x2000826")]
	[AutoDiscover]
	public class XboxOneWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60031F4")]
		[Address(RVA = "0x1409148", Offset = "0x1409148", VA = "0x1409148")]
		public XboxOneWinProfile()
		{
		}
	}
	[Token(Token = "0x2000827")]
	public class UnityInputDevice : InputDevice
	{
		[Token(Token = "0x4002647")]
		public const int MaxDevices = 10;

		[Token(Token = "0x4002648")]
		public const int MaxButtons = 20;

		[Token(Token = "0x4002649")]
		public const int MaxAnalogs = 20;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CE4", Offset = "0x8E4CE4")]
		private int <JoystickId>k__BackingField;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CF4", Offset = "0x8E4CF4")]
		private UnityInputDeviceProfile <Profile>k__BackingField;

		[Token(Token = "0x17000699")]
		internal int JoystickId
		{
			[Token(Token = "0x60031F5")]
			[Address(RVA = "0xE9AD50", Offset = "0xE9AD50", VA = "0xE9AD50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5268", Offset = "0x8F5268")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031F6")]
			[Address(RVA = "0xE9AD58", Offset = "0xE9AD58", VA = "0xE9AD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5278", Offset = "0x8F5278")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069A")]
		public UnityInputDeviceProfile Profile
		{
			[Token(Token = "0x60031F7")]
			[Address(RVA = "0xE9AD60", Offset = "0xE9AD60", VA = "0xE9AD60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5288", Offset = "0x8F5288")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F8")]
			[Address(RVA = "0xE9AD68", Offset = "0xE9AD68", VA = "0xE9AD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5298", Offset = "0x8F5298")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700069B")]
		public override bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x60031FF")]
			[Address(RVA = "0xE9B4A4", Offset = "0xE9B4A4", VA = "0xE9B4A4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700069C")]
		public override bool IsKnown
		{
			[Token(Token = "0x6003200")]
			[Address(RVA = "0xE9B5FC", Offset = "0xE9B5FC", VA = "0xE9B5FC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60031F9")]
		[Address(RVA = "0xE9AD70", Offset = "0xE9AD70", VA = "0xE9AD70")]
		public UnityInputDevice(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x60031FA")]
		[Address(RVA = "0xE9B01C", Offset = "0xE9B01C", VA = "0xE9B01C")]
		public UnityInputDevice(UnityInputDeviceProfile profile)
		{
		}

		[Token(Token = "0x60031FB")]
		[Address(RVA = "0xE9AE04", Offset = "0xE9AE04", VA = "0xE9AE04")]
		private void Initialize(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x60031FC")]
		[Address(RVA = "0xE9B0E4", Offset = "0xE9B0E4", VA = "0xE9B0E4", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x60031FD")]
		[Address(RVA = "0xE9B3E8", Offset = "0xE9B3E8", VA = "0xE9B3E8")]
		private float Combine(float? value1, float value2)
		{
			return default(float);
		}

		[Token(Token = "0x60031FE")]
		[Address(RVA = "0xE9B480", Offset = "0xE9B480", VA = "0xE9B480")]
		public bool IsConfiguredWith(UnityInputDeviceProfile deviceProfile, int joystickId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000828")]
	public class UnityInputDeviceManager : InputDeviceManager
	{
		[Token(Token = "0x2000829")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D96B4", Offset = "0x8D96B4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string unityJoystickName;

			[Token(Token = "0x600320C")]
			[Address(RVA = "0xEB94B0", Offset = "0xEB94B0", VA = "0xEB94B0")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600320D")]
			[Address(RVA = "0xEB94B8", Offset = "0xEB94B8", VA = "0xEB94B8")]
			internal bool <DetectAttachedJoystickDevice>b__0(UnityInputDeviceProfile config)
			{
				return default(bool);
			}

			[Token(Token = "0x600320E")]
			[Address(RVA = "0xEB94DC", Offset = "0xEB94DC", VA = "0xEB94DC")]
			internal bool <DetectAttachedJoystickDevice>b__1(UnityInputDeviceProfile config)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deviceRefreshTimer;

		[Token(Token = "0x400264D")]
		private const float deviceRefreshInterval = 1f;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UnityInputDeviceProfile> deviceProfiles;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool keyboardDevicesAttached;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string joystickHash;

		[Token(Token = "0x1700069D")]
		private static string JoystickHash
		{
			[Token(Token = "0x600320B")]
			[Address(RVA = "0xE9B990", Offset = "0xE9B990", VA = "0xE9B990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003201")]
		[Address(RVA = "0xE9B61C", Offset = "0xE9B61C", VA = "0xE9B61C")]
		public UnityInputDeviceManager()
		{
		}

		[Token(Token = "0x6003202")]
		[Address(RVA = "0xE9B8D4", Offset = "0xE9B8D4", VA = "0xE9B8D4", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6003203")]
		[Address(RVA = "0xE9B894", Offset = "0xE9B894", VA = "0xE9B894")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6003204")]
		[Address(RVA = "0xE9BE6C", Offset = "0xE9BE6C", VA = "0xE9BE6C")]
		private void AttachDevice(UnityInputDevice device)
		{
		}

		[Token(Token = "0x6003205")]
		[Address(RVA = "0xE9BA44", Offset = "0xE9BA44", VA = "0xE9BA44")]
		private void AttachKeyboardDevices()
		{
		}

		[Token(Token = "0x6003206")]
		[Address(RVA = "0xE9BF48", Offset = "0xE9BF48", VA = "0xE9BF48")]
		private void AttachKeyboardDeviceWithConfig(UnityInputDeviceProfile config)
		{
		}

		[Token(Token = "0x6003207")]
		[Address(RVA = "0xE9BB30", Offset = "0xE9BB30", VA = "0xE9BB30")]
		private void DetectAttachedJoystickDevices()
		{
		}

		[Token(Token = "0x6003208")]
		[Address(RVA = "0xE9BFC8", Offset = "0xE9BFC8", VA = "0xE9BFC8")]
		private void DetectAttachedJoystickDevice(int unityJoystickId, string unityJoystickName)
		{
		}

		[Token(Token = "0x6003209")]
		[Address(RVA = "0xE9BC68", Offset = "0xE9BC68", VA = "0xE9BC68")]
		private void DetectDetachedJoystickDevices()
		{
		}

		[Token(Token = "0x600320A")]
		[Address(RVA = "0xE9B6D4", Offset = "0xE9B6D4", VA = "0xE9B6D4")]
		private void AutoDiscoverDeviceProfiles()
		{
		}
	}
	[Token(Token = "0x200082A")]
	public sealed class AutoDiscover : Attribute
	{
		[Token(Token = "0x600320F")]
		[Address(RVA = "0x14A5010", Offset = "0x14A5010", VA = "0x14A5010")]
		public AutoDiscover()
		{
		}
	}
	[Token(Token = "0x200082B")]
	public class UnityInputDeviceProfile
	{
		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D04", Offset = "0x8E4D04")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D14", Offset = "0x8E4D14")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D24", Offset = "0x8E4D24")]
		private InputControlMapping[] <AnalogMappings>k__BackingField;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D34", Offset = "0x8E4D34")]
		private InputControlMapping[] <ButtonMappings>k__BackingField;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string[] SupportedPlatforms;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string[] JoystickNames;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string[] JoystickRegex;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string LastResortRegex;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D44", Offset = "0x8E4D44")]
		private VersionInfo <MinUnityVersion>k__BackingField;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D54", Offset = "0x8E4D54")]
		private VersionInfo <MaxUnityVersion>k__BackingField;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<Type> hideList;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float sensitivity;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lowerDeadZone;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float upperDeadZone;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static InputControlSource Button0;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static InputControlSource Button1;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static InputControlSource Button2;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static InputControlSource Button3;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static InputControlSource Button4;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static InputControlSource Button5;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static InputControlSource Button6;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static InputControlSource Button7;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static InputControlSource Button8;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static InputControlSource Button9;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static InputControlSource Button10;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static InputControlSource Button11;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static InputControlSource Button12;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected static InputControlSource Button13;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected static InputControlSource Button14;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected static InputControlSource Button15;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected static InputControlSource Button16;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected static InputControlSource Button17;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected static InputControlSource Button18;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected static InputControlSource Button19;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected static InputControlSource Analog0;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected static InputControlSource Analog1;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected static InputControlSource Analog2;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected static InputControlSource Analog3;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected static InputControlSource Analog4;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected static InputControlSource Analog5;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected static InputControlSource Analog6;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected static InputControlSource Analog7;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected static InputControlSource Analog8;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected static InputControlSource Analog9;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected static InputControlSource Analog10;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected static InputControlSource Analog11;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected static InputControlSource Analog12;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected static InputControlSource Analog13;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected static InputControlSource Analog14;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected static InputControlSource Analog15;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected static InputControlSource Analog16;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected static InputControlSource Analog17;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected static InputControlSource Analog18;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected static InputControlSource Analog19;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected static InputControlSource MouseButton0;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected static InputControlSource MouseButton1;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected static InputControlSource MouseButton2;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected static InputControlSource MouseXAxis;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected static InputControlSource MouseYAxis;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected static InputControlSource MouseScrollWheel;

		[Token(Token = "0x1700069E")]
		public string Name
		{
			[Token(Token = "0x6003210")]
			[Address(RVA = "0xE9CFEC", Offset = "0xE9CFEC", VA = "0xE9CFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52A8", Offset = "0x8F52A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003211")]
			[Address(RVA = "0xE9CFF4", Offset = "0xE9CFF4", VA = "0xE9CFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52B8", Offset = "0x8F52B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700069F")]
		public string Meta
		{
			[Token(Token = "0x6003212")]
			[Address(RVA = "0xE9CFFC", Offset = "0xE9CFFC", VA = "0xE9CFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52C8", Offset = "0x8F52C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003213")]
			[Address(RVA = "0xE9D004", Offset = "0xE9D004", VA = "0xE9D004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52D8", Offset = "0x8F52D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A0")]
		public InputControlMapping[] AnalogMappings
		{
			[Token(Token = "0x6003214")]
			[Address(RVA = "0xE9D00C", Offset = "0xE9D00C", VA = "0xE9D00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52E8", Offset = "0x8F52E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003215")]
			[Address(RVA = "0xE9D014", Offset = "0xE9D014", VA = "0xE9D014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F52F8", Offset = "0x8F52F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A1")]
		public InputControlMapping[] ButtonMappings
		{
			[Token(Token = "0x6003216")]
			[Address(RVA = "0xE9D01C", Offset = "0xE9D01C", VA = "0xE9D01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5308", Offset = "0x8F5308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003217")]
			[Address(RVA = "0xE9D024", Offset = "0xE9D024", VA = "0xE9D024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5318", Offset = "0x8F5318")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A2")]
		public VersionInfo MinUnityVersion
		{
			[Token(Token = "0x6003218")]
			[Address(RVA = "0xE9D02C", Offset = "0xE9D02C", VA = "0xE9D02C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5328", Offset = "0x8F5328")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x6003219")]
			[Address(RVA = "0xE9D038", Offset = "0xE9D038", VA = "0xE9D038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5338", Offset = "0x8F5338")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		public VersionInfo MaxUnityVersion
		{
			[Token(Token = "0x600321A")]
			[Address(RVA = "0xE9D040", Offset = "0xE9D040", VA = "0xE9D040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5348", Offset = "0x8F5348")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x600321B")]
			[Address(RVA = "0xE9D04C", Offset = "0xE9D04C", VA = "0xE9D04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5358", Offset = "0x8F5358")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A4")]
		public float Sensitivity
		{
			[Token(Token = "0x600321D")]
			[Address(RVA = "0xE9D180", Offset = "0xE9D180", VA = "0xE9D180")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600321E")]
			[Address(RVA = "0xE9D188", Offset = "0xE9D188", VA = "0xE9D188")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A5")]
		public float LowerDeadZone
		{
			[Token(Token = "0x600321F")]
			[Address(RVA = "0xE9D1B0", Offset = "0xE9D1B0", VA = "0xE9D1B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003220")]
			[Address(RVA = "0xE9D1B8", Offset = "0xE9D1B8", VA = "0xE9D1B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A6")]
		public float UpperDeadZone
		{
			[Token(Token = "0x6003221")]
			[Address(RVA = "0xE9D1E0", Offset = "0xE9D1E0", VA = "0xE9D1E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003222")]
			[Address(RVA = "0xE9D1E8", Offset = "0xE9D1E8", VA = "0xE9D1E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006A7")]
		public bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x6003223")]
			[Address(RVA = "0xE9B4BC", Offset = "0xE9B4BC", VA = "0xE9B4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A8")]
		public bool IsSupportedOnThisVersionOfUnity
		{
			[Token(Token = "0x6003224")]
			[Address(RVA = "0xE9D210", Offset = "0xE9D210", VA = "0xE9D210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A9")]
		public bool IsJoystick
		{
			[Token(Token = "0x6003225")]
			[Address(RVA = "0xE9D278", Offset = "0xE9D278", VA = "0xE9D278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AA")]
		public bool IsNotJoystick
		{
			[Token(Token = "0x6003226")]
			[Address(RVA = "0xE9BF08", Offset = "0xE9BF08", VA = "0xE9BF08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AB")]
		public bool IsHidden
		{
			[Token(Token = "0x600322B")]
			[Address(RVA = "0xE9CF10", Offset = "0xE9CF10", VA = "0xE9CF10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AC")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x600322C")]
			[Address(RVA = "0xE9D580", Offset = "0xE9D580", VA = "0xE9D580", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AD")]
		public int AnalogCount
		{
			[Token(Token = "0x600322D")]
			[Address(RVA = "0xE9B0AC", Offset = "0xE9B0AC", VA = "0xE9B0AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AE")]
		public int ButtonCount
		{
			[Token(Token = "0x600322E")]
			[Address(RVA = "0xE9B0C8", Offset = "0xE9B0C8", VA = "0xE9B0C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600321C")]
		[Address(RVA = "0xE9D054", Offset = "0xE9D054", VA = "0xE9D054")]
		public UnityInputDeviceProfile()
		{
		}

		[Token(Token = "0x6003227")]
		[Address(RVA = "0xE9D2B8", Offset = "0xE9D2B8", VA = "0xE9D2B8")]
		public bool HasJoystickName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003228")]
		[Address(RVA = "0xE9D460", Offset = "0xE9D460", VA = "0xE9D460")]
		public bool HasLastResortRegex(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6003229")]
		[Address(RVA = "0xE9CFAC", Offset = "0xE9CFAC", VA = "0xE9CFAC")]
		public bool HasJoystickOrRegexName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x600322A")]
		[Address(RVA = "0xE9D4F4", Offset = "0xE9D4F4", VA = "0xE9D4F4")]
		public static void Hide(Type type)
		{
		}

		[Token(Token = "0x600322F")]
		[Address(RVA = "0xE9D588", Offset = "0xE9D588", VA = "0xE9D588")]
		protected static InputControlSource Button(int index)
		{
			return null;
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0xE9D5EC", Offset = "0xE9D5EC", VA = "0xE9D5EC")]
		protected static InputControlSource Analog(int index)
		{
			return null;
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0xE9D650", Offset = "0xE9D650", VA = "0xE9D650")]
		protected static InputControlSource KeyCodeButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x6003232")]
		[Address(RVA = "0xE9D6F0", Offset = "0xE9D6F0", VA = "0xE9D6F0")]
		protected static InputControlSource KeyCodeComboButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x6003233")]
		[Address(RVA = "0xE9D790", Offset = "0xE9D790", VA = "0xE9D790")]
		protected static InputControlSource KeyCodeAxis(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
			return null;
		}
	}
	[Token(Token = "0x200082C")]
	public class UnityInputDeviceProfileList : ScriptableObject
	{
		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] Profiles;

		[Token(Token = "0x6003235")]
		[Address(RVA = "0xE9DFF4", Offset = "0xE9DFF4", VA = "0xE9DFF4")]
		public UnityInputDeviceProfileList()
		{
		}
	}
	[Token(Token = "0x200082D")]
	public class UnityUnknownDeviceProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x170006AF")]
		public override bool IsKnown
		{
			[Token(Token = "0x6003238")]
			[Address(RVA = "0xEA0818", Offset = "0xEA0818", VA = "0xEA0818", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003237")]
		[Address(RVA = "0xE9CA74", Offset = "0xE9CA74", VA = "0xE9CA74")]
		public UnityUnknownDeviceProfile(string joystickName)
		{
		}
	}
	[Token(Token = "0x200082E")]
	public class SingletonMonoBehavior<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D64", Offset = "0x8E4D64")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x170006B0")]
		public static T Instance
		{
			[Token(Token = "0x6003239")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5368", Offset = "0x8F5368")]
			get
			{
				return null;
			}
			[Token(Token = "0x600323A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5378", Offset = "0x8F5378")]
			private set
			{
			}
		}

		[Token(Token = "0x600323B")]
		protected void SetSingletonInstance()
		{
		}

		[Token(Token = "0x600323C")]
		public SingletonMonoBehavior()
		{
		}
	}
	[Token(Token = "0x200082F")]
	public static class Utility
	{
		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] circleVertexList;

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x13F0090", Offset = "0x13F0090", VA = "0x13F0090")]
		public static void DrawCircleGizmo(Vector2 center, float radius)
		{
		}

		[Token(Token = "0x600323F")]
		[Address(RVA = "0x13F01F4", Offset = "0x13F01F4", VA = "0x13F01F4")]
		public static void DrawCircleGizmo(Vector2 center, float radius, Color color)
		{
		}

		[Token(Token = "0x6003240")]
		[Address(RVA = "0x13F02AC", Offset = "0x13F02AC", VA = "0x13F02AC")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x6003241")]
		[Address(RVA = "0x13F0420", Offset = "0x13F0420", VA = "0x13F0420")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x6003242")]
		[Address(RVA = "0x13F04E0", Offset = "0x13F04E0", VA = "0x13F04E0")]
		public static void DrawRectGizmo(Rect rect)
		{
		}

		[Token(Token = "0x6003243")]
		[Address(RVA = "0x13F0620", Offset = "0x13F0620", VA = "0x13F0620")]
		public static void DrawRectGizmo(Rect rect, Color color)
		{
		}

		[Token(Token = "0x6003244")]
		[Address(RVA = "0x13F06E0", Offset = "0x13F06E0", VA = "0x13F06E0")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x6003245")]
		[Address(RVA = "0x13F0798", Offset = "0x13F0798", VA = "0x13F0798")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x6003246")]
		[Address(RVA = "0x13F0858", Offset = "0x13F0858", VA = "0x13F0858")]
		public static bool GameObjectIsCulledOnCurrentCamera(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6003247")]
		[Address(RVA = "0x13F08B0", Offset = "0x13F08B0", VA = "0x13F08B0")]
		public static Color MoveColorTowards(Color color0, Color color1, float maxDelta)
		{
			return default(Color);
		}

		[Token(Token = "0x6003248")]
		[Address(RVA = "0x13F0984", Offset = "0x13F0984", VA = "0x13F0984")]
		public static float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6003249")]
		[Address(RVA = "0x13F09CC", Offset = "0x13F09CC", VA = "0x13F09CC")]
		public static Vector2 ApplyCircularDeadZone(Vector2 axisVector, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600324A")]
		[Address(RVA = "0x13F0A30", Offset = "0x13F0A30", VA = "0x13F0A30")]
		public static Vector2 ApplyCircularDeadZone(float axisX, float axisY, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000830")]
	public struct VersionInfo : IComparable<VersionInfo>
	{
		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Patch;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Build;

		[Token(Token = "0x600324C")]
		[Address(RVA = "0x13F51F4", Offset = "0x13F51F4", VA = "0x13F51F4")]
		public VersionInfo(int major, int minor = 0, int patch = 0, int build = 0)
		{
		}

		[Token(Token = "0x600324D")]
		[Address(RVA = "0x13F5200", Offset = "0x13F5200", VA = "0x13F5200")]
		public static VersionInfo InControlVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x600324E")]
		[Address(RVA = "0x13F5214", Offset = "0x13F5214", VA = "0x13F5214")]
		public static VersionInfo UnityVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x600324F")]
		[Address(RVA = "0x13F5398", Offset = "0x13F5398", VA = "0x13F5398", Slot = "4")]
		public int CompareTo(VersionInfo other)
		{
			return default(int);
		}

		[Token(Token = "0x6003250")]
		[Address(RVA = "0x13F53F4", Offset = "0x13F53F4", VA = "0x13F53F4")]
		public static bool operator ==(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003251")]
		[Address(RVA = "0x13F5428", Offset = "0x13F5428", VA = "0x13F5428")]
		public static bool operator !=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003252")]
		[Address(RVA = "0x13F545C", Offset = "0x13F545C", VA = "0x13F545C")]
		public static bool operator <=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003253")]
		[Address(RVA = "0x13F5490", Offset = "0x13F5490", VA = "0x13F5490")]
		public static bool operator >=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003254")]
		[Address(RVA = "0x13F54C4", Offset = "0x13F54C4", VA = "0x13F54C4")]
		public static bool operator <(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003255")]
		[Address(RVA = "0x13F54F4", Offset = "0x13F54F4", VA = "0x13F54F4")]
		public static bool operator >(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003256")]
		[Address(RVA = "0x13F5528", Offset = "0x13F5528", VA = "0x13F5528", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003257")]
		[Address(RVA = "0x13F5798", Offset = "0x13F5798", VA = "0x13F5798")]
		public string ToShortString()
		{
			return null;
		}

		[Token(Token = "0x6003258")]
		[Address(RVA = "0x13F5A08", Offset = "0x13F5A08", VA = "0x13F5A08", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003259")]
		[Address(RVA = "0x13F5AA0", Offset = "0x13F5AA0", VA = "0x13F5AA0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000831")]
	public class TestInputManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000832")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D96C4", Offset = "0x8D96C4")]
		private sealed class <>c
		{
			[Token(Token = "0x400269A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400269B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InputDevice> <>9__4_1;

			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<InputDevice> <>9__4_2;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<InputDevice> <>9__4_3;

			[Token(Token = "0x6003266")]
			[Address(RVA = "0xEB181C", Offset = "0xEB181C", VA = "0xEB181C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003267")]
			[Address(RVA = "0xEB1824", Offset = "0xEB1824", VA = "0xEB1824")]
			internal void <OnEnable>b__4_1(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x6003268")]
			[Address(RVA = "0xEB18BC", Offset = "0xEB18BC", VA = "0xEB18BC")]
			internal void <OnEnable>b__4_2(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x6003269")]
			[Address(RVA = "0xEB1954", Offset = "0xEB1954", VA = "0xEB1954")]
			internal void <OnEnable>b__4_3(InputDevice inputDevice)
			{
			}
		}

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font font;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LogMessage> logMessages;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPaused;

		[Token(Token = "0x600325A")]
		[Address(RVA = "0x11FE074", Offset = "0x11FE074", VA = "0x11FE074")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600325B")]
		[Address(RVA = "0x11FE61C", Offset = "0x11FE61C", VA = "0x11FE61C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600325C")]
		[Address(RVA = "0x11FE704", Offset = "0x11FE704", VA = "0x11FE704")]
		private void Update()
		{
		}

		[Token(Token = "0x600325D")]
		[Address(RVA = "0x11FE620", Offset = "0x11FE620", VA = "0x11FE620")]
		private void CheckForPauseButton()
		{
		}

		[Token(Token = "0x600325E")]
		[Address(RVA = "0x11FE7A8", Offset = "0x11FE7A8", VA = "0x11FE7A8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600325F")]
		[Address(RVA = "0x11FE804", Offset = "0x11FE804", VA = "0x11FE804")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6003260")]
		[Address(RVA = "0x11FF494", Offset = "0x11FF494", VA = "0x11FF494")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6003261")]
		[Address(RVA = "0x11FE398", Offset = "0x11FE398", VA = "0x11FE398")]
		private void TestInputMappings()
		{
		}

		[Token(Token = "0x6003262")]
		[Address(RVA = "0x11FF548", Offset = "0x11FF548", VA = "0x11FF548")]
		private void TestInputMapping(InputControlMapping.Range sourceRange, InputControlMapping.Range targetRange, bool invert, float expectA, float expectB, float expectC)
		{
		}

		[Token(Token = "0x6003263")]
		[Address(RVA = "0x1200198", Offset = "0x1200198", VA = "0x1200198")]
		public TestInputManager()
		{
		}

		[Token(Token = "0x6003264")]
		[Address(RVA = "0x1200254", Offset = "0x1200254", VA = "0x1200254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5388", Offset = "0x8F5388")]
		private void <OnEnable>b__4_0(LogMessage logMessage)
		{
		}
	}
}
namespace MultiplayerExample
{
	[Token(Token = "0x2000833")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerNum;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer cubeRenderer;

		[Token(Token = "0x600326A")]
		[Address(RVA = "0xF183C4", Offset = "0xF183C4", VA = "0xF183C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600326B")]
		[Address(RVA = "0xF18420", Offset = "0xF18420", VA = "0xF18420")]
		private void Update()
		{
		}

		[Token(Token = "0x600326C")]
		[Address(RVA = "0xF18574", Offset = "0xF18574", VA = "0xF18574")]
		private void UpdateCubeWithInputDevice(InControl.InputDevice inputDevice)
		{
		}

		[Token(Token = "0x600326D")]
		[Address(RVA = "0xF18960", Offset = "0xF18960", VA = "0xF18960")]
		public CubeController()
		{
		}
	}
}
namespace InterfaceMovement
{
	[Token(Token = "0x2000834")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button up;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button down;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button left;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button right;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer cubeRenderer;

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x13C9A4C", Offset = "0x13C9A4C", VA = "0x13C9A4C")]
		private void Start()
		{
		}

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x13C9AA8", Offset = "0x13C9AA8", VA = "0x13C9AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003270")]
		[Address(RVA = "0x13C9C04", Offset = "0x13C9C04", VA = "0x13C9C04")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000835")]
	public class ButtonFocus : MonoBehaviour
	{
		[Token(Token = "0x6003271")]
		[Address(RVA = "0x13CAA20", Offset = "0x13CAA20", VA = "0x13CAA20")]
		private void Update()
		{
		}

		[Token(Token = "0x6003272")]
		[Address(RVA = "0x13CAB4C", Offset = "0x13CAB4C", VA = "0x13CAB4C")]
		public ButtonFocus()
		{
		}
	}
	[Token(Token = "0x2000836")]
	public class ButtonManager : MonoBehaviour
	{
		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button focusedButton;

		[Token(Token = "0x6003273")]
		[Address(RVA = "0x13CAB54", Offset = "0x13CAB54", VA = "0x13CAB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003274")]
		[Address(RVA = "0x13CABC0", Offset = "0x13CABC0", VA = "0x13CABC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6003275")]
		[Address(RVA = "0x13CAD14", Offset = "0x13CAD14", VA = "0x13CAD14")]
		private void MoveFocusTo(Button newFocusedButton)
		{
		}

		[Token(Token = "0x6003276")]
		[Address(RVA = "0x13CADAC", Offset = "0x13CADAC", VA = "0x13CADAC")]
		public ButtonManager()
		{
		}
	}
}
namespace GyroExample
{
	[Token(Token = "0x2000837")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x2000838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D96D4", Offset = "0x8D96D4")]
		private sealed class <CalibrateGyro>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170006B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600327E")]
				[Address(RVA = "0x10073DC", Offset = "0x10073DC", VA = "0x10073DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003280")]
				[Address(RVA = "0x1007424", Offset = "0x1007424", VA = "0x1007424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600327B")]
			[Address(RVA = "0x1007304", Offset = "0x1007304", VA = "0x1007304")]
			[DebuggerHidden]
			public <CalibrateGyro>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600327C")]
			[Address(RVA = "0x1007330", Offset = "0x1007330", VA = "0x1007330", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600327D")]
			[Address(RVA = "0x1007334", Offset = "0x1007334", VA = "0x1007334", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600327F")]
			[Address(RVA = "0x10073E4", Offset = "0x10073E4", VA = "0x10073E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6003277")]
		[Address(RVA = "0xF18114", Offset = "0xF18114", VA = "0xF18114")]
		private void Start()
		{
		}

		[Token(Token = "0x6003278")]
		[Address(RVA = "0xF18140", Offset = "0xF18140", VA = "0xF18140")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5398", Offset = "0x8F5398")]
		private IEnumerator CalibrateGyro()
		{
			return null;
		}

		[Token(Token = "0x6003279")]
		[Address(RVA = "0xF1819C", Offset = "0xF1819C", VA = "0xF1819C")]
		private void Update()
		{
		}

		[Token(Token = "0x600327A")]
		[Address(RVA = "0xF183BC", Offset = "0xF183BC", VA = "0xF183BC")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x2000839")]
	public class GyroProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003281")]
		[Address(RVA = "0x12A1CB4", Offset = "0x12A1CB4", VA = "0x12A1CB4")]
		public GyroProfile()
		{
		}
	}
}
namespace CustomProfileExample
{
	[Token(Token = "0x200083A")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 targetPosition;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer cubeRenderer;

		[Token(Token = "0x6003282")]
		[Address(RVA = "0xF17AE8", Offset = "0xF17AE8", VA = "0xF17AE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6003283")]
		[Address(RVA = "0xF17B6C", Offset = "0xF17B6C", VA = "0xF17B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003284")]
		[Address(RVA = "0xF17F24", Offset = "0xF17F24", VA = "0xF17F24")]
		private Color GetColorFromActionButtons(InControl.InputDevice inputDevice)
		{
			return default(Color);
		}

		[Token(Token = "0x6003285")]
		[Address(RVA = "0xF1810C", Offset = "0xF1810C", VA = "0xF1810C")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x200083B")]
	public class KeyboardAndMouseProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6003286")]
		[Address(RVA = "0x115CAD0", Offset = "0x115CAD0", VA = "0x115CAD0")]
		public KeyboardAndMouseProfile()
		{
		}
	}
}
namespace BasicExample
{
	[Token(Token = "0x200083C")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x6003287")]
		[Address(RVA = "0xF1793C", Offset = "0xF1793C", VA = "0xF1793C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003288")]
		[Address(RVA = "0xF17AE0", Offset = "0xF17AE0", VA = "0xF17AE0")]
		public CubeController()
		{
		}
	}
}
namespace FluffyUnderware.DevTools
{
	[Token(Token = "0x200083D")]
	public class InspectorNote : MonoBehaviour
	{
		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8E4D74", Offset = "0x8E4D74")]
		[SerializeField]
		private string m_Note;

		[Token(Token = "0x6003289")]
		[Address(RVA = "0xFC9524", Offset = "0xFC9524", VA = "0xFC9524")]
		public InspectorNote()
		{
		}
	}
}
namespace FindPrefabsWithScriptInternal
{
	[Token(Token = "0x200083E")]
	public class NotUsedInPrefabs : MonoBehaviour
	{
		[Token(Token = "0x600328A")]
		[Address(RVA = "0x133D6FC", Offset = "0x133D6FC", VA = "0x133D6FC")]
		public NotUsedInPrefabs()
		{
		}
	}
	[Token(Token = "0x200083F")]
	public class ScriptA : MonoBehaviour
	{
		[Token(Token = "0x600328B")]
		[Address(RVA = "0xEDE1AC", Offset = "0xEDE1AC", VA = "0xEDE1AC")]
		public ScriptA()
		{
		}
	}
	[Token(Token = "0x2000840")]
	public class ScriptB : MonoBehaviour
	{
		[Token(Token = "0x600328C")]
		[Address(RVA = "0xEDE1B4", Offset = "0xEDE1B4", VA = "0xEDE1B4")]
		public ScriptB()
		{
		}
	}
}
namespace SignedDistanceFields
{
	[Token(Token = "0x2000841")]
	public struct SDFCatList
	{
		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int channel;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<SDFShape> shapes;

		[Token(Token = "0x600328D")]
		[Address(RVA = "0x11A2D24", Offset = "0x11A2D24", VA = "0x11A2D24")]
		public SDFCatList(int channel)
		{
		}

		[Token(Token = "0x600328E")]
		[Address(RVA = "0x11A2DAC", Offset = "0x11A2DAC", VA = "0x11A2DAC")]
		public void Clear()
		{
		}

		[Token(Token = "0x600328F")]
		[Address(RVA = "0x11A2E00", Offset = "0x11A2E00", VA = "0x11A2E00")]
		public void ResetShapeGPUStatus()
		{
		}
	}
}
namespace SFCUtils
{
	[Token(Token = "0x2000842")]
	public static class NumberUtils
	{
		[Token(Token = "0x6003290")]
		[Address(RVA = "0x133D704", Offset = "0x133D704", VA = "0x133D704")]
		public static bool Is(this float input, float test, float tolerance = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x6003291")]
		[Address(RVA = "0x133D728", Offset = "0x133D728", VA = "0x133D728")]
		public static bool IsNot(this float input, float test, float tolerance = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x6003292")]
		[Address(RVA = "0x133D74C", Offset = "0x133D74C", VA = "0x133D74C")]
		public static bool Between(this float input, float min, float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6003293")]
		[Address(RVA = "0x133D764", Offset = "0x133D764", VA = "0x133D764")]
		public static bool NotBetween(this float input, float min, float max)
		{
			return default(bool);
		}

		[Token(Token = "0x6003294")]
		[Address(RVA = "0x133D77C", Offset = "0x133D77C", VA = "0x133D77C")]
		public static bool Between(this int input, int min, int max)
		{
			return default(bool);
		}

		[Token(Token = "0x6003295")]
		[Address(RVA = "0x133D794", Offset = "0x133D794", VA = "0x133D794")]
		public static bool NotBetween(this int input, int min, int max)
		{
			return default(bool);
		}
	}
}
namespace Utils
{
	[Token(Token = "0x2000843")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D96F4", Offset = "0x8D96F4")]
	public class BuildingVisualiser : MonoBehaviour
	{
		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4DB4", Offset = "0x8E4DB4")]
		public Color[] visualiserColours;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VisualiserType visualiseWindows;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VisualiserType visualiseConnections;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VisualiserType visualiseSignDirection;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VisualiserType visualiseSignCorners;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VisualiserType visualiseSignWindows;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VisualiserType visualiseSignReachability;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VisualiserType visualiseBlockers;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LabelVisualiserType visualiseLabels;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4DEC", Offset = "0x8E4DEC")]
		public float visualNormalLength;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Building _building;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CityPiece _cityPiece;

		[Token(Token = "0x6003296")]
		[Address(RVA = "0x13C7924", Offset = "0x13C7924", VA = "0x13C7924")]
		private void InitReferences()
		{
		}

		[Token(Token = "0x6003297")]
		[Address(RVA = "0x13C7A44", Offset = "0x13C7A44", VA = "0x13C7A44")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6003298")]
		[Address(RVA = "0x13C7B50", Offset = "0x13C7B50", VA = "0x13C7B50")]
		private void VisualiseWindows(CityStructure cityStructure)
		{
		}

		[Token(Token = "0x6003299")]
		[Address(RVA = "0x13C8990", Offset = "0x13C8990", VA = "0x13C8990")]
		private List<BlockMetadata> GetAllWindowBlockLocations(CityStructure cityStructure)
		{
			return null;
		}

		[Token(Token = "0x600329A")]
		[Address(RVA = "0x13C7C28", Offset = "0x13C7C28", VA = "0x13C7C28")]
		private void VisualiseConnections(CityPiece cp)
		{
		}

		[Token(Token = "0x600329B")]
		[Address(RVA = "0x13C7DE8", Offset = "0x13C7DE8", VA = "0x13C7DE8")]
		private void VisualiseSignPlacement(Spaceport spaceport, CityStructure cityStructure, CityPiece cp)
		{
		}

		[Token(Token = "0x600329C")]
		[Address(RVA = "0x13C8DA4", Offset = "0x13C8DA4", VA = "0x13C8DA4")]
		private static void VisualiseNearestWindow(BlockMetadata m, Vector3 worldPos)
		{
		}

		[Token(Token = "0x600329D")]
		[Address(RVA = "0x13C8EBC", Offset = "0x13C8EBC", VA = "0x13C8EBC")]
		private void VisualiseLabel(int val, BlockMetadata m)
		{
		}

		[Token(Token = "0x600329E")]
		[Address(RVA = "0x13C8C64", Offset = "0x13C8C64", VA = "0x13C8C64")]
		private void DrawVisualiserVoxel(BlockMetadata metadata, int highestPriority, int value, VisualiserType type, Color maxColour)
		{
		}

		[Token(Token = "0x600329F")]
		[Address(RVA = "0x13C866C", Offset = "0x13C866C", VA = "0x13C866C")]
		private void VisualiseBlockers(CityStructure cityStructure, CityPiece cp)
		{
		}

		[Token(Token = "0x60032A0")]
		[Address(RVA = "0x13C90B0", Offset = "0x13C90B0", VA = "0x13C90B0")]
		private Color GetIndexColour(FastVector3Int normal)
		{
			return default(Color);
		}

		[Token(Token = "0x60032A1")]
		[Address(RVA = "0x13C91C0", Offset = "0x13C91C0", VA = "0x13C91C0")]
		public BuildingVisualiser()
		{
		}
	}
	[Token(Token = "0x2000844")]
	public struct FastBoundsInt
	{
		[Token(Token = "0x2000845")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D977C", Offset = "0x8D977C")]
		private sealed class <Enumerate>d__8 : IEnumerable<FastVector3Int>, IEnumerable, IEnumerator<FastVector3Int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastVector3Int <>2__current;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public FastBoundsInt <>4__this;

			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public FastBoundsInt <>3__<>4__this;

			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <z>5__2;

			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <y>5__3;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <x>5__4;

			[Token(Token = "0x170006B3")]
			private FastVector3Int System.Collections.Generic.IEnumerator<Utils.FastVector3Int>.Current
			{
				[Token(Token = "0x60032A9")]
				[Address(RVA = "0xE7B648", Offset = "0xE7B648", VA = "0xE7B648", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastVector3Int);
				}
			}

			[Token(Token = "0x170006B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032AB")]
				[Address(RVA = "0xE7B698", Offset = "0xE7B698", VA = "0xE7B698", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032A6")]
			[Address(RVA = "0xE7B520", Offset = "0xE7B520", VA = "0xE7B520")]
			[DebuggerHidden]
			public <Enumerate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60032A7")]
			[Address(RVA = "0xE7B558", Offset = "0xE7B558", VA = "0xE7B558", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032A8")]
			[Address(RVA = "0xE7B55C", Offset = "0xE7B55C", VA = "0xE7B55C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032AA")]
			[Address(RVA = "0xE7B658", Offset = "0xE7B658", VA = "0xE7B658", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0xE7B700", Offset = "0xE7B700", VA = "0xE7B700", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastVector3Int> System.Collections.Generic.IEnumerable<Utils.FastVector3Int>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0xE7B7E0", Offset = "0xE7B7E0", VA = "0xE7B7E0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int minX;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minY;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int minZ;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxX;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxY;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxZ;

		[Token(Token = "0x60032A2")]
		[Address(RVA = "0x101CA1C", Offset = "0x101CA1C", VA = "0x101CA1C")]
		public FastBoundsInt(int minX, int minY, int minZ, int maxX, int maxY, int maxZ)
		{
		}

		[Token(Token = "0x60032A3")]
		[Address(RVA = "0x101CA2C", Offset = "0x101CA2C", VA = "0x101CA2C")]
		public bool Contains(int x, int y, int z, FastVector3Int border)
		{
			return default(bool);
		}

		[Token(Token = "0x60032A4")]
		[Address(RVA = "0x101CA9C", Offset = "0x101CA9C", VA = "0x101CA9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F54A8", Offset = "0x8F54A8")]
		public IEnumerable<FastVector3Int> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x60032A5")]
		[Address(RVA = "0x101CB2C", Offset = "0x101CB2C", VA = "0x101CB2C")]
		public FastVector3Int[] GetCorners()
		{
			return null;
		}
	}
	[Token(Token = "0x2000846")]
	public struct FastVector3Int
	{
		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FastVector3Int left;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static FastVector3Int right;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static FastVector3Int up;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static FastVector3Int down;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static FastVector3Int forward;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static FastVector3Int back;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static FastVector3Int zero;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static FastVector3Int one;

		[Token(Token = "0x60032AE")]
		[Address(RVA = "0x101CC74", Offset = "0x101CC74", VA = "0x101CC74")]
		public FastVector3Int(int x, int y, int z)
		{
		}

		[Token(Token = "0x60032AF")]
		[Address(RVA = "0x101CC80", Offset = "0x101CC80", VA = "0x101CC80")]
		public static FastVector3Int Min(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032B0")]
		[Address(RVA = "0x101CCAC", Offset = "0x101CCAC", VA = "0x101CCAC")]
		public static FastVector3Int Max(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032B1")]
		[Address(RVA = "0x101CCD8", Offset = "0x101CCD8", VA = "0x101CCD8")]
		public FastVector3Int Abs()
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032B2")]
		[Address(RVA = "0x101CD00", Offset = "0x101CD00", VA = "0x101CD00")]
		public static FastVector3Int operator +(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032B3")]
		[Address(RVA = "0x101CD1C", Offset = "0x101CD1C", VA = "0x101CD1C")]
		public static FastVector3Int operator -(FastVector3Int a, FastVector3Int b)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032B4")]
		[Address(RVA = "0x101CD38", Offset = "0x101CD38", VA = "0x101CD38")]
		public static bool operator ==(FastVector3Int a, FastVector3Int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B5")]
		[Address(RVA = "0x101CD68", Offset = "0x101CD68", VA = "0x101CD68")]
		public static bool operator !=(FastVector3Int a, FastVector3Int b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B6")]
		[Address(RVA = "0x101CD98", Offset = "0x101CD98", VA = "0x101CD98", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B7")]
		[Address(RVA = "0x101CE5C", Offset = "0x101CE5C", VA = "0x101CE5C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60032B8")]
		[Address(RVA = "0x101CEC0", Offset = "0x101CEC0", VA = "0x101CEC0")]
		public bool Matches(int ix, int iy, int iz)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B9")]
		[Address(RVA = "0x100A5C4", Offset = "0x100A5C4", VA = "0x100A5C4")]
		public static FastVector3Int FromVector3(Vector3 vec)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60032BA")]
		[Address(RVA = "0x101CEF0", Offset = "0x101CEF0", VA = "0x101CEF0")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000847")]
	public static class TransformUtils
	{
		[Token(Token = "0x60032BC")]
		[Address(RVA = "0x10BE5A4", Offset = "0x10BE5A4", VA = "0x10BE5A4")]
		public static bool IsInSameDirection(this Transform transform, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BD")]
		[Address(RVA = "0x10BE608", Offset = "0x10BE608", VA = "0x10BE608")]
		public static bool IsInSameDirection(this Transform transform, FastVector3Int direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BE")]
		[Address(RVA = "0x10BE698", Offset = "0x10BE698", VA = "0x10BE698")]
		public static bool IsInSameDirection(this Vector3 check, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BF")]
		[Address(RVA = "0x10BE6C0", Offset = "0x10BE6C0", VA = "0x10BE6C0")]
		public static bool IsInSameDirection(this FastVector3Int check, Vector3 direction, float tolerance = 0.5f)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000848")]
	public enum VisualiserType
	{
		[Token(Token = "0x40026D3")]
		Off,
		[Token(Token = "0x40026D4")]
		Wire,
		[Token(Token = "0x40026D5")]
		Solid
	}
	[Token(Token = "0x2000849")]
	public enum LabelVisualiserType
	{
		[Token(Token = "0x40026D7")]
		Off,
		[Token(Token = "0x40026D8")]
		Priority,
		[Token(Token = "0x40026D9")]
		Coords
	}
	[Token(Token = "0x200084A")]
	public static class VoxelUtils
	{
		[Token(Token = "0x200084B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97AC", Offset = "0x8D97AC")]
		private sealed class <BlockLocations>d__10 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private BoundsInt structuredBounds;

			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BoundsInt <>3__structuredBounds;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private BlockerMaterial blockerMaterial;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public BlockerMaterial <>3__blockerMaterial;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private BoundsInt.PositionEnumerator <>7__wrap1;

			[Token(Token = "0x170006B5")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x60032DD")]
				[Address(RVA = "0xEBB4E0", Offset = "0xEBB4E0", VA = "0xEBB4E0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032DF")]
				[Address(RVA = "0xEBB534", Offset = "0xEBB534", VA = "0xEBB534", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D9")]
			[Address(RVA = "0xEBB26C", Offset = "0xEBB26C", VA = "0xEBB26C")]
			[DebuggerHidden]
			public <BlockLocations>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60032DA")]
			[Address(RVA = "0xEBB2A4", Offset = "0xEBB2A4", VA = "0xEBB2A4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DB")]
			[Address(RVA = "0xEBB2EC", Offset = "0xEBB2EC", VA = "0xEBB2EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032DC")]
			[Address(RVA = "0xEBB2D4", Offset = "0xEBB2D4", VA = "0xEBB2D4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0xEBB4F4", Offset = "0xEBB4F4", VA = "0xEBB4F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0xEBB59C", Offset = "0xEBB59C", VA = "0xEBB59C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60032E1")]
			[Address(RVA = "0xEBB684", Offset = "0xEBB684", VA = "0xEBB684", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUIStyle _labelStyle;

		[Token(Token = "0x60032C0")]
		[Address(RVA = "0x13FD28C", Offset = "0x13FD28C", VA = "0x13FD28C")]
		public static Vector3 GetWorldSpaceLocation(int x, int y, int z, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032C1")]
		[Address(RVA = "0x13FD2F8", Offset = "0x13FD2F8", VA = "0x13FD2F8")]
		public static Vector3 GetWorldSpaceLocation(this BlockMetadata metadata, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032C2")]
		[Address(RVA = "0x13FD308", Offset = "0x13FD308", VA = "0x13FD308")]
		public static Vector3 GetWorldSpaceLocation(this FastBlockMetadata metadata, float gridEdgeSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60032C3")]
		[Address(RVA = "0x13FD318", Offset = "0x13FD318", VA = "0x13FD318")]
		public static void DrawLabel(string text, Vector3 pos)
		{
		}

		[Token(Token = "0x60032C4")]
		[Address(RVA = "0x13FD49C", Offset = "0x13FD49C", VA = "0x13FD49C")]
		private static Texture2D MakeTex(Color col)
		{
			return null;
		}

		[Token(Token = "0x60032C5")]
		[Address(RVA = "0x13FD55C", Offset = "0x13FD55C", VA = "0x13FD55C")]
		public static void DrawVoxels(IEnumerable<FastBlockMetadata> voxelMetadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032C6")]
		[Address(RVA = "0x13FDA4C", Offset = "0x13FDA4C", VA = "0x13FDA4C")]
		public static void DrawVoxels(IEnumerable<BlockMetadata> voxelMetadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032C7")]
		[Address(RVA = "0x13FDD74", Offset = "0x13FDD74", VA = "0x13FDD74")]
		public static void DrawVoxel(BlockMetadata metadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032C8")]
		[Address(RVA = "0x13FD884", Offset = "0x13FD884", VA = "0x13FD884")]
		public static void DrawVoxel(FastBlockMetadata metadata, Color colour, float gridEdgeSize, float normalLength, bool useSphere = false, bool fill = false)
		{
		}

		[Token(Token = "0x60032C9")]
		[Address(RVA = "0x13FDF3C", Offset = "0x13FDF3C", VA = "0x13FDF3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F55D8", Offset = "0x8F55D8")]
		public static IEnumerable<FastBlockMetadata> BlockLocations(BoundsInt structuredBounds, BlockerMaterial blockerMaterial = BlockerMaterial.Solid)
		{
			return null;
		}

		[Token(Token = "0x60032CA")]
		[Address(RVA = "0x13FDFDC", Offset = "0x13FDFDC", VA = "0x13FDFDC")]
		public static BoundsInt MakeStructuredBounds(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032CB")]
		[Address(RVA = "0x13FE250", Offset = "0x13FE250", VA = "0x13FE250")]
		public static FastBoundsInt MakeFastStructuredBounds(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032CC")]
		[Address(RVA = "0x13FE4C4", Offset = "0x13FE4C4", VA = "0x13FE4C4")]
		public static BoundsInt MakeStructuredBounds(Bounds worldBounds, BlockMetadata metadata, Quaternion rotation, float gridEdgeSize, bool useCentrePivot)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032CD")]
		[Address(RVA = "0x13FE158", Offset = "0x13FE158", VA = "0x13FE158")]
		private static BoundsInt MakeStructuredBoundsCentre(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032CE")]
		[Address(RVA = "0x13FE050", Offset = "0x13FE050", VA = "0x13FE050")]
		private static BoundsInt MakeStructuredBoundsCorner(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032CF")]
		[Address(RVA = "0x13FE3CC", Offset = "0x13FE3CC", VA = "0x13FE3CC")]
		private static FastBoundsInt MakeFastStructuredBoundsCentre(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032D0")]
		[Address(RVA = "0x13FE2C4", Offset = "0x13FE2C4", VA = "0x13FE2C4")]
		private static FastBoundsInt MakeFastStructuredBoundsCorner(Bounds worldBounds, Vector3 position, Quaternion rotation, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032D1")]
		[Address(RVA = "0x13FE6D8", Offset = "0x13FE6D8", VA = "0x13FE6D8")]
		private static BoundsInt ConvertMinMaxToGridBounds(Vector3 worldPosition, Vector3 min, Vector3 max, float gridEdgeSize)
		{
			return default(BoundsInt);
		}

		[Token(Token = "0x60032D2")]
		[Address(RVA = "0x13FE920", Offset = "0x13FE920", VA = "0x13FE920")]
		private static FastBoundsInt ConvertMinMaxToFastGridBounds(Vector3 worldPosition, Vector3 min, Vector3 max, float gridEdgeSize)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032D3")]
		[Address(RVA = "0x13FEB28", Offset = "0x13FEB28", VA = "0x13FEB28")]
		public static Bounds CalculateRotatedBoundsCorner(Bounds mBounds, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60032D4")]
		[Address(RVA = "0x13FE560", Offset = "0x13FE560", VA = "0x13FE560")]
		public static Bounds CalculateRotatedBoundsCentre(Bounds mBounds, Quaternion rotation)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60032D5")]
		[Address(RVA = "0x13FED20", Offset = "0x13FED20", VA = "0x13FED20")]
		public static void GetAvailableLocations(Building building, IEnumerable<FastBlockMetadata> blockConnectionLocations, ref List<BlockMetadata> availableLocations)
		{
		}

		[Token(Token = "0x60032D6")]
		[Address(RVA = "0x13FF1B0", Offset = "0x13FF1B0", VA = "0x13FF1B0")]
		public static FastBoundsInt GetBoundsForWindow(SpacefolkWindow window)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60032D7")]
		[Address(RVA = "0x13FECF0", Offset = "0x13FECF0", VA = "0x13FECF0")]
		private static void TestVector(Quaternion rotation, float x, float y, float z, ref Vector3 min, ref Vector3 max)
		{
		}

		[Token(Token = "0x60032D8")]
		[Address(RVA = "0x13FF310", Offset = "0x13FF310", VA = "0x13FF310")]
		private static void TestVector(Vector3 tp, ref Vector3 min, ref Vector3 max)
		{
		}
	}
}
namespace Folk
{
	[Token(Token = "0x200084C")]
	public enum Handedness
	{
		[Token(Token = "0x40026E4")]
		Right,
		[Token(Token = "0x40026E5")]
		Left,
		[Token(Token = "0x40026E6")]
		Either
	}
	[Token(Token = "0x200084D")]
	public class HeldItems
	{
		[Token(Token = "0x200084E")]
		public enum Holds
		{
			[Token(Token = "0x40026E9")]
			None,
			[Token(Token = "0x40026EA")]
			Right,
			[Token(Token = "0x40026EB")]
			Left,
			[Token(Token = "0x40026EC")]
			Backpack
		}

		[Token(Token = "0x200084F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97BC", Offset = "0x8D97BC")]
		private sealed class <get_All>d__3 : IEnumerable<HoldableItem>, IEnumerable, IEnumerator<HoldableItem>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HoldableItem <>2__current;

			[Token(Token = "0x40026EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HeldItems <>4__this;

			[Token(Token = "0x40026F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<Holds, HoldSlot>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x170006B8")]
			private HoldableItem System.Collections.Generic.IEnumerator<HoldableItem>.Current
			{
				[Token(Token = "0x60032FE")]
				[Address(RVA = "0xE7ED64", Offset = "0xE7ED64", VA = "0xE7ED64", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003300")]
				[Address(RVA = "0xE7EDAC", Offset = "0xE7EDAC", VA = "0xE7EDAC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032FA")]
			[Address(RVA = "0xE7EADC", Offset = "0xE7EADC", VA = "0xE7EADC")]
			[DebuggerHidden]
			public <get_All>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60032FB")]
			[Address(RVA = "0xE7EB14", Offset = "0xE7EB14", VA = "0xE7EB14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032FC")]
			[Address(RVA = "0xE7EB84", Offset = "0xE7EB84", VA = "0xE7EB84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032FD")]
			[Address(RVA = "0xE7EB30", Offset = "0xE7EB30", VA = "0xE7EB30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60032FF")]
			[Address(RVA = "0xE7ED6C", Offset = "0xE7ED6C", VA = "0xE7ED6C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0xE7EDB4", Offset = "0xE7EDB4", VA = "0xE7EDB4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HoldableItem> System.Collections.Generic.IEnumerable<HoldableItem>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0xE7EE64", Offset = "0xE7EE64", VA = "0xE7EE64", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Holds, HoldSlot> m_slots;

		[Token(Token = "0x170006B7")]
		public IEnumerable<HoldableItem> All
		{
			[Token(Token = "0x60032E2")]
			[Address(RVA = "0x12AD2E4", Offset = "0x12AD2E4", VA = "0x12AD2E4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F56A8", Offset = "0x8F56A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60032E3")]
		[Address(RVA = "0x12AD35C", Offset = "0x12AD35C", VA = "0x12AD35C")]
		public bool IsHolding(HoldableItem holdable)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E4")]
		[Address(RVA = "0x12AD69C", Offset = "0x12AD69C", VA = "0x12AD69C")]
		public bool IsHoldingAnything()
		{
			return default(bool);
		}

		[Token(Token = "0x60032E5")]
		[Address(RVA = "0x12AD864", Offset = "0x12AD864", VA = "0x12AD864")]
		public bool IsHoldingSomethingInEitherHand()
		{
			return default(bool);
		}

		[Token(Token = "0x60032E6")]
		[Address(RVA = "0x12AD8F4", Offset = "0x12AD8F4", VA = "0x12AD8F4")]
		public bool CanHoldAnyMore()
		{
			return default(bool);
		}

		[Token(Token = "0x60032E7")]
		[Address(RVA = "0x12ADA50", Offset = "0x12ADA50", VA = "0x12ADA50")]
		public void AddBackpack()
		{
		}

		[Token(Token = "0x60032E8")]
		[Address(RVA = "0x12ADB54", Offset = "0x12ADB54", VA = "0x12ADB54")]
		public void RemoveBackpack()
		{
		}

		[Token(Token = "0x60032E9")]
		public void DropItemsOfType<T>()
		{
		}

		[Token(Token = "0x60032EA")]
		public void DropItemsNotOfType<T>()
		{
		}

		[Token(Token = "0x60032EB")]
		[Address(RVA = "0x12ADBE4", Offset = "0x12ADBE4", VA = "0x12ADBE4")]
		public void DropRandomItem()
		{
		}

		[Token(Token = "0x60032EC")]
		public bool IsHolding<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x60032ED")]
		[Address(RVA = "0x12ADE2C", Offset = "0x12ADE2C", VA = "0x12ADE2C")]
		public bool IsHoldingThisScrap(ScrapCoin scrapCoin)
		{
			return default(bool);
		}

		[Token(Token = "0x60032EE")]
		[Address(RVA = "0x12AE04C", Offset = "0x12AE04C", VA = "0x12AE04C")]
		public bool TryGetHeldScrap(out ScrapCoin scrapCoin)
		{
			return default(bool);
		}

		[Token(Token = "0x60032EF")]
		[Address(RVA = "0x12AE1E0", Offset = "0x12AE1E0", VA = "0x12AE1E0")]
		public void ReleaseHeldItem(Holds hold, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
		}

		[Token(Token = "0x60032F0")]
		[Address(RVA = "0x12ADCCC", Offset = "0x12ADCCC", VA = "0x12ADCCC")]
		public void ReleaseHeldItem(HoldableItem item, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
		}

		[Token(Token = "0x60032F1")]
		[Address(RVA = "0x12AE404", Offset = "0x12AE404", VA = "0x12AE404")]
		public void ReleaseAllItems()
		{
		}

		[Token(Token = "0x60032F2")]
		[Address(RVA = "0x12AE540", Offset = "0x12AE540", VA = "0x12AE540")]
		public void ReleaseInactiveItems(string name)
		{
		}

		[Token(Token = "0x60032F3")]
		[Address(RVA = "0x12AE794", Offset = "0x12AE794", VA = "0x12AE794")]
		public Holds GetFreeHold(Handedness handedness, HoldSlotType holdType)
		{
			return default(Holds);
		}

		[Token(Token = "0x60032F4")]
		[Address(RVA = "0x12AE980", Offset = "0x12AE980", VA = "0x12AE980")]
		private bool CanUseSlot(HoldSlot slot, HoldSlotType possibleItemType)
		{
			return default(bool);
		}

		[Token(Token = "0x60032F5")]
		[Address(RVA = "0x12AE964", Offset = "0x12AE964", VA = "0x12AE964")]
		private Holds GetHoldForHandedness(Handedness handedness)
		{
			return default(Holds);
		}

		[Token(Token = "0x60032F6")]
		[Address(RVA = "0x12AE9AC", Offset = "0x12AE9AC", VA = "0x12AE9AC")]
		public bool TryHoldItem(Handedness handedness, HoldableItem itemToHold, out Holds hold)
		{
			return default(bool);
		}

		[Token(Token = "0x60032F7")]
		[Address(RVA = "0x12AEA78", Offset = "0x12AEA78", VA = "0x12AEA78")]
		public Holds GetHold(Handedness handedness, HoldableItem itemToHold)
		{
			return default(Holds);
		}

		[Token(Token = "0x60032F8")]
		[Address(RVA = "0x12AEDA4", Offset = "0x12AEDA4", VA = "0x12AEDA4")]
		private bool TryHold(Holds hold, HoldableItem itemToHold)
		{
			return default(bool);
		}

		[Token(Token = "0x60032F9")]
		[Address(RVA = "0x12AEEDC", Offset = "0x12AEEDC", VA = "0x12AEEDC")]
		public HeldItems()
		{
		}
	}
	[Token(Token = "0x2000850")]
	public class HoldSlot
	{
		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Handedness m_handedness;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4E04", Offset = "0x8E4E04")]
		private HoldSlotType <holdSlotType>k__BackingField;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4E14", Offset = "0x8E4E14")]
		private HoldableItem <item>k__BackingField;

		[Token(Token = "0x170006BA")]
		public HoldSlotType holdSlotType
		{
			[Token(Token = "0x6003303")]
			[Address(RVA = "0x12B0C8C", Offset = "0x12B0C8C", VA = "0x12B0C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5778", Offset = "0x8F5778")]
			get
			{
				return default(HoldSlotType);
			}
			[Token(Token = "0x6003304")]
			[Address(RVA = "0x12B0C94", Offset = "0x12B0C94", VA = "0x12B0C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5788", Offset = "0x8F5788")]
			private set
			{
			}
		}

		[Token(Token = "0x170006BB")]
		public HoldableItem item
		{
			[Token(Token = "0x6003305")]
			[Address(RVA = "0x12B0C9C", Offset = "0x12B0C9C", VA = "0x12B0C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5798", Offset = "0x8F5798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003306")]
			[Address(RVA = "0x12B0CA4", Offset = "0x12B0CA4", VA = "0x12B0CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F57A8", Offset = "0x8F57A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006BC")]
		public bool hasItem
		{
			[Token(Token = "0x6003307")]
			[Address(RVA = "0x12AD7F8", Offset = "0x12AD7F8", VA = "0x12AD7F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003308")]
		[Address(RVA = "0x12ADB1C", Offset = "0x12ADB1C", VA = "0x12ADB1C")]
		public HoldSlot(Handedness handedness, HoldSlotType holdSlotType)
		{
		}

		[Token(Token = "0x6003309")]
		public bool GetIfHoldingType<T>(out T output)
		{
			return default(bool);
		}

		[Token(Token = "0x600330A")]
		[Address(RVA = "0x12AEE40", Offset = "0x12AEE40", VA = "0x12AEE40")]
		public void UpdateItem(HoldableItem itemToHold)
		{
		}

		[Token(Token = "0x600330B")]
		public void DropItemOfType<T>()
		{
		}

		[Token(Token = "0x600330C")]
		public void DropItemNotOfType<T>()
		{
		}

		[Token(Token = "0x600330D")]
		[Address(RVA = "0x12AE350", Offset = "0x12AE350", VA = "0x12AE350")]
		public bool ReleaseItem(HoldableItem itemToRelease, bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
			return default(bool);
		}

		[Token(Token = "0x600330E")]
		[Address(RVA = "0x12AE278", Offset = "0x12AE278", VA = "0x12AE278")]
		public bool ReleaseHeldItem(bool takenByPlayer = false, [Optional] Person.HoldEvent onPlayerTakes)
		{
			return default(bool);
		}

		[Token(Token = "0x600330F")]
		[Address(RVA = "0x12AE684", Offset = "0x12AE684", VA = "0x12AE684")]
		public void ReleaseInactive(string name)
		{
		}
	}
	[Token(Token = "0x2000851")]
	public enum HoldSlotType
	{
		[Token(Token = "0x40026F6")]
		Anything,
		[Token(Token = "0x40026F7")]
		Scrap
	}
	[Token(Token = "0x2000852")]
	public class PersonExpressions
	{
		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Person person;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timeBetweenThoughts;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_lastThoughtTime;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Texticle> m_lastThoughts;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Queue<string> m_popUpThoughts;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<string> m_recentThoughts;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_reactionHappySFX;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_reactionSadSFX;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_thoughtHappySFX;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_thoughtNeutralSFX;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_thoughtSadSFX;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_givenStaminaSFX;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_givenSpeedSFX;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_givenSkillSFX;

		[Token(Token = "0x6003310")]
		[Address(RVA = "0x1253EF4", Offset = "0x1253EF4", VA = "0x1253EF4")]
		public PersonExpressions(Person person)
		{
		}

		[Token(Token = "0x6003311")]
		[Address(RVA = "0x1254154", Offset = "0x1254154", VA = "0x1254154")]
		public void CheckForQueuedThoughts()
		{
		}

		[Token(Token = "0x6003312")]
		[Address(RVA = "0x12544CC", Offset = "0x12544CC", VA = "0x12544CC")]
		public void AnnounceLeavingFacility(FacilityCategory fc, FolkAbility ability)
		{
		}

		[Token(Token = "0x6003313")]
		[Address(RVA = "0x1254A04", Offset = "0x1254A04", VA = "0x1254A04")]
		public void Say(string s, CharacterModel.Emotion emotion = CharacterModel.Emotion.Happy)
		{
		}

		[Token(Token = "0x6003314")]
		[Address(RVA = "0x1254724", Offset = "0x1254724", VA = "0x1254724")]
		public void ShowThought(string shortThought, string detailedThought = "", CharacterModel.Emotion emotion = CharacterModel.Emotion.Neutral, [Optional] string sfxId, bool log = false)
		{
		}

		[Token(Token = "0x6003315")]
		[Address(RVA = "0x1254ADC", Offset = "0x1254ADC", VA = "0x1254ADC")]
		private bool IsNewThoughtTheSameAsTheLastThought(string thought)
		{
			return default(bool);
		}

		[Token(Token = "0x6003316")]
		[Address(RVA = "0x1254BD4", Offset = "0x1254BD4", VA = "0x1254BD4")]
		public void PlaySfxForFacility(FacilityCategory category)
		{
		}

		[Token(Token = "0x6003317")]
		[Address(RVA = "0x1254AC4", Offset = "0x1254AC4", VA = "0x1254AC4")]
		private string GetReactionSfxForEmotion(CharacterModel.Emotion emotion)
		{
			return null;
		}

		[Token(Token = "0x6003318")]
		[Address(RVA = "0x1254BA8", Offset = "0x1254BA8", VA = "0x1254BA8")]
		private string GetThoughtSfxForEmotion(CharacterModel.Emotion emotion)
		{
			return null;
		}

		[Token(Token = "0x6003319")]
		[Address(RVA = "0x12545D4", Offset = "0x12545D4", VA = "0x12545D4")]
		private string GetFacilityLeavingThought(FacilityCategory fc, FolkAbility ability)
		{
			return null;
		}

		[Token(Token = "0x600331A")]
		[Address(RVA = "0x12546A4", Offset = "0x12546A4", VA = "0x12546A4")]
		private string GetFacilitySfxForCategory(FacilityCategory category)
		{
			return null;
		}

		[Token(Token = "0x600331B")]
		[Address(RVA = "0x125420C", Offset = "0x125420C", VA = "0x125420C")]
		private void DisplayTexticle(string s, Color col, Texticles.Style style)
		{
		}
	}
	[Token(Token = "0x2000853")]
	public class PersonSleepCycle
	{
		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string personName;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_asleep;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4E24", Offset = "0x8E4E24")]
		private double <m_wakeUpTime>k__BackingField;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double m_bedTime;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_hasStaminaBoost;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double m_standardMaxHoursAwake;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double m_staminaBonusHoursAwake;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double m_sleepInterruptionBoost;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_timeBetweenZzzs;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_lastSleepyZzzs;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool debug;

		[Token(Token = "0x170006BD")]
		public double m_wakeUpTime
		{
			[Token(Token = "0x600331C")]
			[Address(RVA = "0x125ABCC", Offset = "0x125ABCC", VA = "0x125ABCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F57B8", Offset = "0x8F57B8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600331D")]
			[Address(RVA = "0x125ABD4", Offset = "0x125ABD4", VA = "0x125ABD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F57C8", Offset = "0x8F57C8")]
			private set
			{
			}
		}

		[Token(Token = "0x600331E")]
		[Address(RVA = "0x125ABDC", Offset = "0x125ABDC", VA = "0x125ABDC")]
		public void Init(Person person)
		{
		}

		[Token(Token = "0x600331F")]
		[Address(RVA = "0x125B068", Offset = "0x125B068", VA = "0x125B068")]
		public void UpdateSaveData(Person person)
		{
		}

		[Token(Token = "0x6003320")]
		[Address(RVA = "0x125ACCC", Offset = "0x125ACCC", VA = "0x125ACCC")]
		public void WakeUp(WakeUpType wakeUpType = WakeUpType.Natural)
		{
		}

		[Token(Token = "0x6003321")]
		[Address(RVA = "0x125B238", Offset = "0x125B238", VA = "0x125B238")]
		public double GoToSleep()
		{
			return default(double);
		}

		[Token(Token = "0x6003322")]
		[Address(RVA = "0x125B320", Offset = "0x125B320", VA = "0x125B320")]
		public double GetCurrentMaxHoursAwake()
		{
			return default(double);
		}

		[Token(Token = "0x6003323")]
		[Address(RVA = "0x125B338", Offset = "0x125B338", VA = "0x125B338")]
		public bool ShouldDisplayZzz()
		{
			return default(bool);
		}

		[Token(Token = "0x6003324")]
		[Address(RVA = "0x125B09C", Offset = "0x125B09C", VA = "0x125B09C")]
		public void UpdateBedTime(WakeUpType wakeUpType)
		{
		}

		[Token(Token = "0x6003325")]
		[Address(RVA = "0x125B36C", Offset = "0x125B36C", VA = "0x125B36C")]
		public void SetStaminaBoost(bool hasBoost)
		{
		}

		[Token(Token = "0x6003326")]
		[Address(RVA = "0x125B384", Offset = "0x125B384", VA = "0x125B384")]
		public void AdjustWakeTimeForFacilityVisit(double lastActivityStartTime)
		{
		}

		[Token(Token = "0x6003327")]
		[Address(RVA = "0x1253360", Offset = "0x1253360", VA = "0x1253360")]
		public bool WantToSleep()
		{
			return default(bool);
		}

		[Token(Token = "0x6003328")]
		[Address(RVA = "0x125B44C", Offset = "0x125B44C", VA = "0x125B44C")]
		public float NormalisedTimeTillSleep()
		{
			return default(float);
		}

		[Token(Token = "0x6003329")]
		[Address(RVA = "0x125B490", Offset = "0x125B490", VA = "0x125B490")]
		public float HoursTillSleep()
		{
			return default(float);
		}

		[Token(Token = "0x600332A")]
		[Address(RVA = "0x125AD44", Offset = "0x125AD44", VA = "0x125AD44")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x600332B")]
		[Address(RVA = "0x125B4F8", Offset = "0x125B4F8", VA = "0x125B4F8")]
		public PersonSleepCycle()
		{
		}
	}
	[Token(Token = "0x2000854")]
	public enum WakeUpType
	{
		[Token(Token = "0x4002712")]
		Natural,
		[Token(Token = "0x4002713")]
		Boost,
		[Token(Token = "0x4002714")]
		PickedUp,
		[Token(Token = "0x4002715")]
		RocketBoosting
	}
}
namespace Folk.AI
{
	[Token(Token = "0x2000855")]
	public class PersonCanCarryMoreScrap : ConditionTask<Person>
	{
		[Token(Token = "0x600332C")]
		[Address(RVA = "0x1251ED0", Offset = "0x1251ED0", VA = "0x1251ED0", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600332D")]
		[Address(RVA = "0x1251F2C", Offset = "0x1251F2C", VA = "0x1251F2C")]
		public PersonCanCarryMoreScrap()
		{
		}
	}
	[Token(Token = "0x2000856")]
	public class PersonHasScrap : ConditionTask<Person>
	{
		[Token(Token = "0x600332E")]
		[Address(RVA = "0x12592AC", Offset = "0x12592AC", VA = "0x12592AC", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600332F")]
		[Address(RVA = "0x1259324", Offset = "0x1259324", VA = "0x1259324")]
		public PersonHasScrap()
		{
		}
	}
	[Token(Token = "0x2000857")]
	public class PersonIsCarryingAsteroid : ConditionTask<Person>
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FolkAbilityGrabAsteroid m_grabber;

		[Token(Token = "0x6003330")]
		[Address(RVA = "0x1259B84", Offset = "0x1259B84", VA = "0x1259B84", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003331")]
		[Address(RVA = "0x1259CC0", Offset = "0x1259CC0", VA = "0x1259CC0")]
		public PersonIsCarryingAsteroid()
		{
		}
	}
	[Token(Token = "0x2000858")]
	public class PersonPrioritisingJob : ConditionTask<Person>
	{
		[Token(Token = "0x6003332")]
		[Address(RVA = "0x125A7E4", Offset = "0x125A7E4", VA = "0x125A7E4", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003333")]
		[Address(RVA = "0x125A840", Offset = "0x125A840", VA = "0x125A840")]
		public PersonPrioritisingJob()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x2000859")]
	public class JobConstruction : ActionTask<Person>
	{
		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double nextScrapDepositTime;

		[Token(Token = "0x6003334")]
		[Address(RVA = "0x114C258", Offset = "0x114C258", VA = "0x114C258", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003335")]
		[Address(RVA = "0x114C2EC", Offset = "0x114C2EC", VA = "0x114C2EC", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003336")]
		[Address(RVA = "0x114C63C", Offset = "0x114C63C", VA = "0x114C63C", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003337")]
		[Address(RVA = "0x114C6A4", Offset = "0x114C6A4", VA = "0x114C6A4")]
		public JobConstruction()
		{
		}
	}
	[Token(Token = "0x200085A")]
	public class JobScrapDeposit : ActionTask<Person>
	{
		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003338")]
		[Address(RVA = "0x114C6F0", Offset = "0x114C6F0", VA = "0x114C6F0", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003339")]
		[Address(RVA = "0x114C97C", Offset = "0x114C97C", VA = "0x114C97C")]
		public JobScrapDeposit()
		{
		}
	}
	[Token(Token = "0x200085B")]
	public class PersonDoAbility : ActionTask<Person>
	{
		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FolkAbility ability;

		[Token(Token = "0x600333A")]
		[Address(RVA = "0x1251F78", Offset = "0x1251F78", VA = "0x1251F78", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600333B")]
		[Address(RVA = "0x1252104", Offset = "0x1252104", VA = "0x1252104", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600333C")]
		[Address(RVA = "0x1252168", Offset = "0x1252168", VA = "0x1252168", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600333D")]
		[Address(RVA = "0x12522A4", Offset = "0x12522A4", VA = "0x12522A4")]
		public PersonDoAbility()
		{
		}
	}
	[Token(Token = "0x200085C")]
	public class PersonWaitInsideBuilding : ActionTask<Person>
	{
		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_personCanWorkInThisBuilding;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PersonDoDropInJob.IJobProviding m_jobProvider;

		[Token(Token = "0x600333E")]
		[Address(RVA = "0x125BB78", Offset = "0x125BB78", VA = "0x125BB78", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600333F")]
		[Address(RVA = "0x125BCF0", Offset = "0x125BCF0", VA = "0x125BCF0", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003340")]
		[Address(RVA = "0x125C03C", Offset = "0x125C03C", VA = "0x125C03C", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003341")]
		[Address(RVA = "0x125C0D0", Offset = "0x125C0D0", VA = "0x125C0D0")]
		public PersonWaitInsideBuilding()
		{
		}
	}
	[Token(Token = "0x200085D")]
	public class PersonEnterBuilding : ActionTask<Person>
	{
		[Token(Token = "0x200085E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97CC", Offset = "0x8D97CC")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersonEnterBuilding <>4__this;

			[Token(Token = "0x170006BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003349")]
				[Address(RVA = "0x1062A24", Offset = "0x1062A24", VA = "0x1062A24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600334B")]
				[Address(RVA = "0x1062A6C", Offset = "0x1062A6C", VA = "0x1062A6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003346")]
			[Address(RVA = "0x1062574", Offset = "0x1062574", VA = "0x1062574")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003347")]
			[Address(RVA = "0x10625A0", Offset = "0x10625A0", VA = "0x10625A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0x10625A4", Offset = "0x10625A4", VA = "0x10625A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600334A")]
			[Address(RVA = "0x1062A2C", Offset = "0x1062A2C", VA = "0x1062A2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Door door;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_enterBuildingCoroutine;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float waitTime;

		[Token(Token = "0x6003342")]
		[Address(RVA = "0x1253928", Offset = "0x1253928", VA = "0x1253928", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003343")]
		[Address(RVA = "0x1253D88", Offset = "0x1253D88", VA = "0x1253D88", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003344")]
		[Address(RVA = "0x1253D10", Offset = "0x1253D10", VA = "0x1253D10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F57D8", Offset = "0x8F57D8")]
		private IEnumerator DoExecute()
		{
			return null;
		}

		[Token(Token = "0x6003345")]
		[Address(RVA = "0x1253EA8", Offset = "0x1253EA8", VA = "0x1253EA8")]
		public PersonEnterBuilding()
		{
		}
	}
	[Token(Token = "0x200085F")]
	public class PersonFindBuildingOfType : ConditionTask<Person>
	{
		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Building.BuildingType buildingType;

		[Token(Token = "0x600334C")]
		[Address(RVA = "0x12550DC", Offset = "0x12550DC", VA = "0x12550DC", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600334D")]
		[Address(RVA = "0x12553A0", Offset = "0x12553A0", VA = "0x12553A0")]
		public PersonFindBuildingOfType()
		{
		}
	}
	[Token(Token = "0x2000860")]
	public class PersonFindRefinery : ConditionTask<Person>
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Refinery> refinery;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BBParameter<Building> building;

		[Token(Token = "0x600334E")]
		[Address(RVA = "0x1255BE4", Offset = "0x1255BE4", VA = "0x1255BE4", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600334F")]
		[Address(RVA = "0x1255EBC", Offset = "0x1255EBC", VA = "0x1255EBC")]
		public PersonFindRefinery()
		{
		}
	}
	[Token(Token = "0x2000861")]
	public class PersonFindWarehouse : ConditionTask<Person>
	{
		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool WithRoom;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x6003350")]
		[Address(RVA = "0x1255F08", Offset = "0x1255F08", VA = "0x1255F08", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003351")]
		[Address(RVA = "0x1256338", Offset = "0x1256338", VA = "0x1256338")]
		public PersonFindWarehouse()
		{
		}
	}
	[Token(Token = "0x2000862")]
	public class PersonGoToRandomSpot : ActionTask<Person>
	{
		[Token(Token = "0x6003352")]
		[Address(RVA = "0x12582F4", Offset = "0x12582F4", VA = "0x12582F4", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003353")]
		[Address(RVA = "0x1258360", Offset = "0x1258360", VA = "0x1258360", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003354")]
		[Address(RVA = "0x1258414", Offset = "0x1258414", VA = "0x1258414")]
		public PersonGoToRandomSpot()
		{
		}
	}
	[Token(Token = "0x2000863")]
	public class PersonLeaveBuilding : ActionTask<Person>
	{
		[Token(Token = "0x2000864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97DC", Offset = "0x8D97DC")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400272D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400272E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400272F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersonLeaveBuilding <>4__this;

			[Token(Token = "0x170006C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600335D")]
				[Address(RVA = "0x1063900", Offset = "0x1063900", VA = "0x1063900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600335F")]
				[Address(RVA = "0x1063948", Offset = "0x1063948", VA = "0x1063948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600335A")]
			[Address(RVA = "0x10636C0", Offset = "0x10636C0", VA = "0x10636C0")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0x10636EC", Offset = "0x10636EC", VA = "0x10636EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600335C")]
			[Address(RVA = "0x10636F0", Offset = "0x10636F0", VA = "0x10636F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600335E")]
			[Address(RVA = "0x1063908", Offset = "0x1063908", VA = "0x1063908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Building building;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Door door;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_leaveCoroutine;

		[Token(Token = "0x6003355")]
		[Address(RVA = "0x125A154", Offset = "0x125A154", VA = "0x125A154", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003356")]
		[Address(RVA = "0x125A21C", Offset = "0x125A21C", VA = "0x125A21C", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003357")]
		[Address(RVA = "0x125A61C", Offset = "0x125A61C", VA = "0x125A61C", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003358")]
		[Address(RVA = "0x125A5A4", Offset = "0x125A5A4", VA = "0x125A5A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5888", Offset = "0x8F5888")]
		private IEnumerator DoExecute()
		{
			return null;
		}

		[Token(Token = "0x6003359")]
		[Address(RVA = "0x125A72C", Offset = "0x125A72C", VA = "0x125A72C")]
		public PersonLeaveBuilding()
		{
		}
	}
	[Token(Token = "0x2000865")]
	public class PersonPickedUp : ActionTask<Person>
	{
		[Token(Token = "0x6003360")]
		[Address(RVA = "0x125A778", Offset = "0x125A778", VA = "0x125A778", Slot = "10")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6003361")]
		[Address(RVA = "0x125A780", Offset = "0x125A780", VA = "0x125A780", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003362")]
		[Address(RVA = "0x125A78C", Offset = "0x125A78C", VA = "0x125A78C", Slot = "16")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6003363")]
		[Address(RVA = "0x125A790", Offset = "0x125A790", VA = "0x125A790", Slot = "18")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6003364")]
		[Address(RVA = "0x125A794", Offset = "0x125A794", VA = "0x125A794", Slot = "19")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6003365")]
		[Address(RVA = "0x125A798", Offset = "0x125A798", VA = "0x125A798")]
		public PersonPickedUp()
		{
		}
	}
	[Token(Token = "0x2000866")]
	public class PersonSleepTillMorning : ActionTask<Person>
	{
		[Token(Token = "0x6003366")]
		[Address(RVA = "0x125B51C", Offset = "0x125B51C", VA = "0x125B51C", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003367")]
		[Address(RVA = "0x125B588", Offset = "0x125B588", VA = "0x125B588")]
		public PersonSleepTillMorning()
		{
		}
	}
	[Token(Token = "0x2000867")]
	public class PersonThrowScrap : ActionTask<Person>
	{
		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Refinery> refinery;

		[Token(Token = "0x6003368")]
		[Address(RVA = "0x125B5D4", Offset = "0x125B5D4", VA = "0x125B5D4", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6003369")]
		[Address(RVA = "0x125BAD4", Offset = "0x125BAD4", VA = "0x125BAD4")]
		public PersonThrowScrap()
		{
		}
	}
	[Token(Token = "0x2000868")]
	public class PersonUseFacility : ActionTask<Person>
	{
		[Token(Token = "0x600336A")]
		[Address(RVA = "0x125BB20", Offset = "0x125BB20", VA = "0x125BB20", Slot = "15")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600336B")]
		[Address(RVA = "0x125BB2C", Offset = "0x125BB2C", VA = "0x125BB2C")]
		public PersonUseFacility()
		{
		}
	}
}
namespace NodeCanvas.Tasks.Conditions
{
	[Token(Token = "0x2000869")]
	public class BuildingNeedsConstruction : ConditionTask
	{
		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x600336C")]
		[Address(RVA = "0x13C7828", Offset = "0x13C7828", VA = "0x13C7828", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600336D")]
		[Address(RVA = "0x13C791C", Offset = "0x13C791C", VA = "0x13C791C")]
		public BuildingNeedsConstruction()
		{
		}
	}
	[Token(Token = "0x200086A")]
	public class PersonFindAppealingFacility : ConditionTask<Person>
	{
		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<Building> building;

		[Token(Token = "0x600336E")]
		[Address(RVA = "0x1254CDC", Offset = "0x1254CDC", VA = "0x1254CDC", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600336F")]
		[Address(RVA = "0x1254E48", Offset = "0x1254E48", VA = "0x1254E48")]
		public PersonFindAppealingFacility()
		{
		}
	}
	[Token(Token = "0x200086B")]
	public class PersonFindNearbyActivity : ConditionTask<Person>
	{
		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BBParameter<ActivityItem> activity;

		[Token(Token = "0x6003370")]
		[Address(RVA = "0x1255708", Offset = "0x1255708", VA = "0x1255708", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003371")]
		[Address(RVA = "0x1255B98", Offset = "0x1255B98", VA = "0x1255B98")]
		public PersonFindNearbyActivity()
		{
		}
	}
	[Token(Token = "0x200086C")]
	public class PersonHasJob : ConditionTask<Person>
	{
		[Token(Token = "0x6003372")]
		[Address(RVA = "0x12591B0", Offset = "0x12591B0", VA = "0x12591B0", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003373")]
		[Address(RVA = "0x125920C", Offset = "0x125920C", VA = "0x125920C")]
		public PersonHasJob()
		{
		}
	}
	[Token(Token = "0x200086D")]
	public class PersonIsHeld : ConditionTask<Person>
	{
		[Token(Token = "0x6003374")]
		[Address(RVA = "0x1259E30", Offset = "0x1259E30", VA = "0x1259E30", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003375")]
		[Address(RVA = "0x1259E8C", Offset = "0x1259E8C", VA = "0x1259E8C")]
		public PersonIsHeld()
		{
		}
	}
	[Token(Token = "0x200086E")]
	public class PersonIsInsideBuilding : ConditionTask<Person>
	{
		[Token(Token = "0x6003376")]
		[Address(RVA = "0x1259ED8", Offset = "0x1259ED8", VA = "0x1259ED8", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003377")]
		[Address(RVA = "0x1259F70", Offset = "0x1259F70", VA = "0x1259F70")]
		public PersonIsInsideBuilding()
		{
		}
	}
	[Token(Token = "0x200086F")]
	public class PersonIsSleepy : ConditionTask<Person>
	{
		[Token(Token = "0x6003378")]
		[Address(RVA = "0x1259FBC", Offset = "0x1259FBC", VA = "0x1259FBC", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6003379")]
		[Address(RVA = "0x125A050", Offset = "0x125A050", VA = "0x125A050")]
		public PersonIsSleepy()
		{
		}
	}
	[Token(Token = "0x2000870")]
	public class PersonIsWellRested : ConditionTask<Person>
	{
		[Token(Token = "0x600337A")]
		[Address(RVA = "0x125A09C", Offset = "0x125A09C", VA = "0x125A09C", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600337B")]
		[Address(RVA = "0x125A108", Offset = "0x125A108", VA = "0x125A108")]
		public PersonIsWellRested()
		{
		}
	}
	[Token(Token = "0x2000871")]
	public class PersonWantsToDoAbility : ConditionTask<Person>
	{
		[Token(Token = "0x600337C")]
		[Address(RVA = "0x125C11C", Offset = "0x125C11C", VA = "0x125C11C", Slot = "17")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600337D")]
		[Address(RVA = "0x125C210", Offset = "0x125C210", VA = "0x125C210")]
		public PersonWantsToDoAbility()
		{
		}
	}
}
namespace Shapes
{
	[Token(Token = "0x2000872")]
	public class DrawIM : MonoBehaviour
	{
		[Token(Token = "0x2000873")]
		private struct LineData
		{
			[Token(Token = "0x400273A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 start;

			[Token(Token = "0x400273B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 end;

			[Token(Token = "0x400273C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;

			[Token(Token = "0x400273D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float thickness;

			[Token(Token = "0x400273E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deathTime;
		}

		[Token(Token = "0x2000874")]
		private struct PolyLineData
		{
			[Token(Token = "0x400273F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PolylinePath path;

			[Token(Token = "0x4002740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool closed;

			[Token(Token = "0x4002741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;

			[Token(Token = "0x4002742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float thickness;

			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float deathTime;
		}

		[Token(Token = "0x2000875")]
		private struct DiscData
		{
			[Token(Token = "0x4002744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4002745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rot;

			[Token(Token = "0x4002746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;

			[Token(Token = "0x4002747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float radius;

			[Token(Token = "0x4002748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float thickness;

			[Token(Token = "0x4002749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float deathTime;
		}

		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97EC", Offset = "0x8D97EC")]
		private sealed class <ClearAtEndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400274A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400274B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400274C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DrawIM <>4__this;

			[Token(Token = "0x170006C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A3")]
				[Address(RVA = "0xE77AF4", Offset = "0xE77AF4", VA = "0xE77AF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033A5")]
				[Address(RVA = "0xE77B3C", Offset = "0xE77B3C", VA = "0xE77B3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0xE7779C", Offset = "0xE7779C", VA = "0xE7779C")]
			[DebuggerHidden]
			public <ClearAtEndOfFrame>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60033A1")]
			[Address(RVA = "0xE777C8", Offset = "0xE777C8", VA = "0xE777C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A2")]
			[Address(RVA = "0xE777CC", Offset = "0xE777CC", VA = "0xE777CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A4")]
			[Address(RVA = "0xE77AFC", Offset = "0xE77AFC", VA = "0xE77AFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DrawIM _instance;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LineData> m_lines;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PolyLineData> m_polylines;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DiscData> m_discs;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<DiscData> m_rings;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForEndOfFrame m_waitForEndOfFrame;

		[Token(Token = "0x170006C2")]
		private static DrawIM Instance
		{
			[Token(Token = "0x600337E")]
			[Address(RVA = "0x100AB20", Offset = "0x100AB20", VA = "0x100AB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600337F")]
		[Address(RVA = "0x100AF1C", Offset = "0x100AF1C", VA = "0x100AF1C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8F5938", Offset = "0x8F5938")]
		public static void ResetStatics()
		{
		}

		[Token(Token = "0x6003380")]
		[Address(RVA = "0x100B0CC", Offset = "0x100B0CC", VA = "0x100B0CC")]
		private static void SceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x6003381")]
		[Address(RVA = "0x100B1CC", Offset = "0x100B1CC", VA = "0x100B1CC")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x6003382")]
		[Address(RVA = "0x100B318", Offset = "0x100B318", VA = "0x100B318")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color, float _thickness)
		{
		}

		[Token(Token = "0x6003383")]
		[Address(RVA = "0x100B3A4", Offset = "0x100B3A4", VA = "0x100B3A4")]
		public static void Line(Vector3 _start, Vector3 _end, Color _color)
		{
		}

		[Token(Token = "0x6003384")]
		[Address(RVA = "0x100B488", Offset = "0x100B488", VA = "0x100B488")]
		public static void Line(Vector3 _start, Vector3 _end)
		{
		}

		[Token(Token = "0x6003385")]
		[Address(RVA = "0x100B250", Offset = "0x100B250", VA = "0x100B250")]
		private void AddLine(Vector3 _start, Vector3 _end, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x6003386")]
		[Address(RVA = "0x100B57C", Offset = "0x100B57C", VA = "0x100B57C")]
		public static void Axis(Vector3 _pos, float _scale)
		{
		}

		[Token(Token = "0x6003387")]
		[Address(RVA = "0x100B760", Offset = "0x100B760", VA = "0x100B760")]
		public static void Axis(Vector3 _pos, float _scale, float _thickness)
		{
		}

		[Token(Token = "0x6003388")]
		[Address(RVA = "0x100B614", Offset = "0x100B614", VA = "0x100B614")]
		public static void Axis(Vector3 _pos, float _scale, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x6003389")]
		[Address(RVA = "0x100B768", Offset = "0x100B768", VA = "0x100B768")]
		public static void Axis(Vector3 _pos, float _scale, Color col)
		{
		}

		[Token(Token = "0x600338A")]
		[Address(RVA = "0x100B984", Offset = "0x100B984", VA = "0x100B984")]
		public static void Axis(Vector3 _pos, float _scale, Color col, float _thickness)
		{
		}

		[Token(Token = "0x600338B")]
		[Address(RVA = "0x100B83C", Offset = "0x100B83C", VA = "0x100B83C")]
		public static void Axis(Vector3 _pos, float _scale, Color col, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x600338C")]
		[Address(RVA = "0x100B9AC", Offset = "0x100B9AC", VA = "0x100B9AC")]
		public static void PolyLine(Color _color, float _thickness, float _lifeTime, params Vector3[] _points)
		{
		}

		[Token(Token = "0x600338D")]
		[Address(RVA = "0x100BB6C", Offset = "0x100BB6C", VA = "0x100BB6C")]
		public static void PolyLine(Color _color, float _thickness, params Vector3[] _points)
		{
		}

		[Token(Token = "0x600338E")]
		[Address(RVA = "0x100BBDC", Offset = "0x100BBDC", VA = "0x100BBDC")]
		public static void PolyLine(Color _color, params Vector3[] _points)
		{
		}

		[Token(Token = "0x600338F")]
		[Address(RVA = "0x100BC94", Offset = "0x100BC94", VA = "0x100BC94")]
		public static void PolyLine(params Vector3[] _points)
		{
		}

		[Token(Token = "0x6003390")]
		[Address(RVA = "0x100BA20", Offset = "0x100BA20", VA = "0x100BA20")]
		private void AddPolyLine(Vector3[] _points, Color _color, float _thickness, float _lifeTime)
		{
		}

		[Token(Token = "0x6003391")]
		[Address(RVA = "0x100BD54", Offset = "0x100BD54", VA = "0x100BD54")]
		public static void Disc(Vector3 _pos, float _radius, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x6003392")]
		[Address(RVA = "0x100BEC0", Offset = "0x100BEC0", VA = "0x100BEC0")]
		public static void Disc(Vector3 _pos, float _radius, Color _color, Quaternion _rot)
		{
		}

		[Token(Token = "0x6003393")]
		[Address(RVA = "0x100BF5C", Offset = "0x100BF5C", VA = "0x100BF5C")]
		public static void Disc(Vector3 _pos, float _radius, Color _color)
		{
		}

		[Token(Token = "0x6003394")]
		[Address(RVA = "0x100C008", Offset = "0x100C008", VA = "0x100C008")]
		public static void Disc(Vector3 _pos, float _radius)
		{
		}

		[Token(Token = "0x6003395")]
		[Address(RVA = "0x100BDE0", Offset = "0x100BDE0", VA = "0x100BDE0")]
		private void AddDisc(Vector3 _pos, float _radius, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x6003396")]
		[Address(RVA = "0x100C100", Offset = "0x100C100", VA = "0x100C100")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x6003397")]
		[Address(RVA = "0x100C270", Offset = "0x100C270", VA = "0x100C270")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot)
		{
		}

		[Token(Token = "0x6003398")]
		[Address(RVA = "0x100C2FC", Offset = "0x100C2FC", VA = "0x100C2FC")]
		public static void Ring(Vector3 _pos, float _radius, float _thickness, Color _color)
		{
		}

		[Token(Token = "0x6003399")]
		[Address(RVA = "0x100C398", Offset = "0x100C398", VA = "0x100C398")]
		public static void Ring(Vector3 _pos, float _radius)
		{
		}

		[Token(Token = "0x600339A")]
		[Address(RVA = "0x100C1A0", Offset = "0x100C1A0", VA = "0x100C1A0")]
		private void AddRing(Vector3 _pos, float _radius, float _thickness, Color _color, Quaternion _rot, float _lifeTime)
		{
		}

		[Token(Token = "0x600339B")]
		[Address(RVA = "0x100AC4C", Offset = "0x100AC4C", VA = "0x100AC4C")]
		private void Init()
		{
		}

		[Token(Token = "0x600339C")]
		[Address(RVA = "0x100AFD8", Offset = "0x100AFD8", VA = "0x100AFD8")]
		private void DeInit()
		{
		}

		[Token(Token = "0x600339D")]
		[Address(RVA = "0x100C498", Offset = "0x100C498", VA = "0x100C498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F594C", Offset = "0x8F594C")]
		private IEnumerator ClearAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600339E")]
		[Address(RVA = "0x100C510", Offset = "0x100C510", VA = "0x100C510")]
		private void Render(Camera cam)
		{
		}

		[Token(Token = "0x600339F")]
		[Address(RVA = "0x100CA98", Offset = "0x100CA98", VA = "0x100CA98")]
		public DrawIM()
		{
		}
	}
	[Token(Token = "0x2000877")]
	public class AmmoBar : MonoBehaviour
	{
		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalBullets;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bullets;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4E34", Offset = "0x8E4E34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4E34", Offset = "0x8E4E34")]
		public float bulletThicknessScale;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4E88", Offset = "0x8E4E88")]
		public float bulletEjectScale;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4EA0", Offset = "0x8E4EA0")]
		public float bulletDisappearTime;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4ED8", Offset = "0x8E4ED8")]
		public float bulletEjectAngSpeed;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4EF4", Offset = "0x8E4EF4")]
		public float ejectRotSpeedVariance;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve bulletEjectX;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve bulletEjectY;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] bulletFireTimes;

		[Token(Token = "0x170006C5")]
		public bool HasBulletsLeft
		{
			[Token(Token = "0x60033A7")]
			[Address(RVA = "0x1495A14", Offset = "0x1495A14", VA = "0x1495A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60033A6")]
		[Address(RVA = "0x1495998", Offset = "0x1495998", VA = "0x1495998")]
		private Vector2 GetBulletEjectPos(Vector2 origin, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033A8")]
		[Address(RVA = "0x1495A24", Offset = "0x1495A24", VA = "0x1495A24")]
		public void Fire()
		{
		}

		[Token(Token = "0x60033A9")]
		[Address(RVA = "0x1495A7C", Offset = "0x1495A7C", VA = "0x1495A7C")]
		public void Reload()
		{
		}

		[Token(Token = "0x60033AA")]
		[Address(RVA = "0x1495A88", Offset = "0x1495A88", VA = "0x1495A88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60033AB")]
		[Address(RVA = "0x1495AE4", Offset = "0x1495AE4", VA = "0x1495AE4")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x60033AC")]
		[Address(RVA = "0x1495DB8", Offset = "0x1495DB8", VA = "0x1495DB8")]
		public AmmoBar()
		{
		}
	}
	[Token(Token = "0x2000878")]
	public class ChargeBar : MonoBehaviour
	{
		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4F10", Offset = "0x8E4F10")]
		[SerializeField]
		private float chargeSpeed;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float chargeDecaySpeed;

		[NonSerialized]
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCharging;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float charge;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4F6C", Offset = "0x8E4F6C")]
		public Color tickColor;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient chargeFillGradient;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4FA4", Offset = "0x8E4FA4")]
		public float tickSizeSmol;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4FC0", Offset = "0x8E4FC0")]
		public float tickSizeLorge;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4FDC", Offset = "0x8E4FDC")]
		public float tickTickness;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4FF8", Offset = "0x8E4FF8")]
		public float fontSize;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5010", Offset = "0x8E5010")]
		public float fontSizeLorge;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5028", Offset = "0x8E5028")]
		public float percentLabelOffset;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5044", Offset = "0x8E5044")]
		public float fontGrowRangePrev;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5060", Offset = "0x8E5060")]
		public float fontGrowRangeNext;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E507C", Offset = "0x8E507C")]
		public AnimationCurve chargeFillCurve;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve animChargeShakeMagnitude;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E50B4", Offset = "0x8E50B4")]
		public float chargeShakeMagnitude;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float chargeShakeSpeed;

		[Token(Token = "0x60033AD")]
		[Address(RVA = "0x13CF90C", Offset = "0x13CF90C", VA = "0x13CF90C")]
		public void UpdateCharge()
		{
		}

		[Token(Token = "0x60033AE")]
		[Address(RVA = "0x13CF978", Offset = "0x13CF978", VA = "0x13CF978")]
		public void DrawBar(FpsController fpsController, float barRadius)
		{
		}

		[Token(Token = "0x60033AF")]
		[Address(RVA = "0x13CFEBC", Offset = "0x13CFEBC", VA = "0x13CFEBC")]
		public ChargeBar()
		{
		}
	}
	[Token(Token = "0x2000879")]
	public class Compass : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200087A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D97FC", Offset = "0x8D97FC")]
		private struct <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angWorldMax;

			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angWorldMin;

			[Token(Token = "0x4002778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float angUiMin;

			[Token(Token = "0x4002779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float angUiMax;

			[Token(Token = "0x400277A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 compArcOrigin;

			[Token(Token = "0x400277B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Compass <>4__this;
		}

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 position;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float width;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E50D0", Offset = "0x8E50D0")]
		public float lineThickness;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E50EC", Offset = "0x8E50EC")]
		public float bendRadius;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5108", Offset = "0x8E5108")]
		public float fieldOfView;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5128", Offset = "0x8E5128")]
		public int ticksPerQuarterTurn;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5160", Offset = "0x8E5160")]
		public float tickSize;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E517C", Offset = "0x8E517C")]
		public float tickEdgeFadeFraction;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5194", Offset = "0x8E5194")]
		public float fontSizeTickLabel;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E51B4", Offset = "0x8E51B4")]
		public float tickLabelOffset;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E51D0", Offset = "0x8E51D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E51D0", Offset = "0x8E51D0")]
		public float fontSizeLookLabel;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 lookAngLabelOffset;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E522C", Offset = "0x8E522C")]
		public float triangleNootSize;

		[Token(Token = "0x60033B0")]
		[Address(RVA = "0x13D6E84", Offset = "0x13D6E84", VA = "0x13D6E84")]
		public void DrawCompass(Vector3 worldDir)
		{
		}

		[Token(Token = "0x60033B1")]
		[Address(RVA = "0x13D74E8", Offset = "0x13D74E8", VA = "0x13D74E8")]
		public Compass()
		{
		}

		[Token(Token = "0x60033B2")]
		[Address(RVA = "0x13D72C4", Offset = "0x13D72C4", VA = "0x13D72C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F59FC", Offset = "0x8F59FC")]
		private void <DrawCompass>g__CompassArcNoot|13_0(float worldAng, float size, string label, ref <>c__DisplayClass13_0 P_3)
		{
		}
	}
	[Token(Token = "0x200087B")]
	public class Crosshair : MonoBehaviour
	{
		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5248", Offset = "0x8E5248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5248", Offset = "0x8E5248")]
		public float crosshairCrossInnerRad;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E52A0", Offset = "0x8E52A0")]
		public float crosshairCrossOuterRad;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E52BC", Offset = "0x8E52BC")]
		public float crosshairCrossThickness;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E52D8", Offset = "0x8E52D8")]
		public float crosshairHitCrossInnerRad;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E52F4", Offset = "0x8E52F4")]
		public float crosshairHitCrossOuterRad;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5310", Offset = "0x8E5310")]
		public float crosshairHitCrossThickness;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E532C", Offset = "0x8E532C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E532C", Offset = "0x8E532C")]
		public float scaleFire;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Decayer fireDecayer;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Decayer hitDecayer;

		[Token(Token = "0x60033B3")]
		[Address(RVA = "0x13D8E7C", Offset = "0x13D8E7C", VA = "0x13D8E7C")]
		public void Fire()
		{
		}

		[Token(Token = "0x60033B4")]
		[Address(RVA = "0x13D8E9C", Offset = "0x13D8E9C", VA = "0x13D8E9C")]
		public void FireHit()
		{
		}

		[Token(Token = "0x60033B5")]
		[Address(RVA = "0x13D8EBC", Offset = "0x13D8EBC", VA = "0x13D8EBC")]
		public void UpdateCrosshairDecay()
		{
		}

		[Token(Token = "0x60033B6")]
		[Address(RVA = "0x13D8EF8", Offset = "0x13D8EF8", VA = "0x13D8EF8")]
		public void DrawCrosshair()
		{
		}

		[Token(Token = "0x60033B7")]
		[Address(RVA = "0x13D92F0", Offset = "0x13D92F0", VA = "0x13D92F0")]
		public Crosshair()
		{
		}

		[Token(Token = "0x60033B8")]
		[Address(RVA = "0x13D91A4", Offset = "0x13D91A4", VA = "0x13D91A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5A0C", Offset = "0x8F5A0C")]
		internal static void <DrawCrosshair>g__DrawCross|12_0(Vector2[] dirs, float radInner, float radOuter, float thickness, float radialOffset, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200087C")]
	public class Decayer
	{
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float decaySpeed;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float magnitude;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[NonSerialized]
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float value;

		[NonSerialized]
		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float valueInv;

		[NonSerialized]
		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float t;

		[Token(Token = "0x60033B9")]
		[Address(RVA = "0xF2A974", Offset = "0xF2A974", VA = "0xF2A974")]
		public void SetT(float v)
		{
		}

		[Token(Token = "0x60033BA")]
		[Address(RVA = "0xF2A97C", Offset = "0xF2A97C", VA = "0xF2A97C")]
		public void Update()
		{
		}

		[Token(Token = "0x60033BB")]
		[Address(RVA = "0xF2AA24", Offset = "0xF2AA24", VA = "0xF2AA24")]
		public Decayer()
		{
		}
	}
	[Token(Token = "0x200087D")]
	[ExecuteAlways]
	public class FpsController : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x200087E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D981C", Offset = "0x8D981C")]
		private sealed class <FixedSteps>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FpsController <>4__this;

			[Token(Token = "0x170006C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033CA")]
				[Address(RVA = "0xE7D930", Offset = "0xE7D930", VA = "0xE7D930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CC")]
				[Address(RVA = "0xE7D978", Offset = "0xE7D978", VA = "0xE7D978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C7")]
			[Address(RVA = "0xE7D858", Offset = "0xE7D858", VA = "0xE7D858")]
			[DebuggerHidden]
			public <FixedSteps>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0xE7D884", Offset = "0xE7D884", VA = "0xE7D884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0xE7D888", Offset = "0xE7D888", VA = "0xE7D888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CB")]
			[Address(RVA = "0xE7D938", Offset = "0xE7D938", VA = "0xE7D938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Crosshair crosshair;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ChargeBar chargeBar;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AmmoBar ammoBar;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Compass compass;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform crosshairTransform;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5380", Offset = "0x8E5380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5380", Offset = "0x8E5380")]
		public float smoof;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float moveSpeed;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lookSensitivity;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float yaw;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float pitch;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 moveInput;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 moveVel;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E53D8", Offset = "0x8E53D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E53D8", Offset = "0x8E53D8")]
		public float ammoBarAngularSpanRad;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5430", Offset = "0x8E5430")]
		public float ammoBarOutlineThickness;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E544C", Offset = "0x8E544C")]
		public float ammoBarThickness;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5468", Offset = "0x8E5468")]
		public float ammoBarRadius;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5484", Offset = "0x8E5484")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5484", Offset = "0x8E5484")]
		public float fireSidebarRadiusPunchAmount;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve shakeAnimX;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve shakeAnimY;

		[Token(Token = "0x170006C6")]
		private bool InputFocus
		{
			[Token(Token = "0x60033C1")]
			[Address(RVA = "0x11C28C8", Offset = "0x11C28C8", VA = "0x11C28C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60033C2")]
			[Address(RVA = "0x11C2294", Offset = "0x11C2294", VA = "0x11C2294")]
			set
			{
			}
		}

		[Token(Token = "0x60033BC")]
		[Address(RVA = "0x11C2234", Offset = "0x11C2234", VA = "0x11C2234")]
		private void Awake()
		{
		}

		[Token(Token = "0x60033BD")]
		[Address(RVA = "0x11C2340", Offset = "0x11C2340", VA = "0x11C2340", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033BE")]
		[Address(RVA = "0x11C22C8", Offset = "0x11C22C8", VA = "0x11C22C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5A1C", Offset = "0x8F5A1C")]
		private IEnumerator FixedSteps()
		{
			return null;
		}

		[Token(Token = "0x60033BF")]
		[Address(RVA = "0x11C2698", Offset = "0x11C2698", VA = "0x11C2698")]
		public static void DrawRoundedArcOutline(Vector2 origin, float radius, float thickness, float outlineThickness, float angStart, float angEnd)
		{
		}

		[Token(Token = "0x60033C0")]
		[Address(RVA = "0x11C2844", Offset = "0x11C2844", VA = "0x11C2844")]
		public Vector2 GetShake(float speed, float amp)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033C3")]
		[Address(RVA = "0x11C28E8", Offset = "0x11C28E8", VA = "0x11C28E8")]
		private void FixedUpdateManual()
		{
		}

		[Token(Token = "0x60033C4")]
		[Address(RVA = "0x11C2A40", Offset = "0x11C2A40", VA = "0x11C2A40")]
		private void Update()
		{
		}

		[Token(Token = "0x60033C5")]
		[Address(RVA = "0x11C2E48", Offset = "0x11C2E48", VA = "0x11C2E48")]
		public FpsController()
		{
		}

		[Token(Token = "0x60033C6")]
		[Address(RVA = "0x11C2DF8", Offset = "0x11C2DF8", VA = "0x11C2DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5A7C", Offset = "0x8F5A7C")]
		private void <Update>g__DoInput|30_0(KeyCode key, Vector2 dir)
		{
		}
	}
	[Token(Token = "0x200087F")]
	[ExecuteAlways]
	public class ProceduralTree : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E54DC", Offset = "0x8E54DC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E54DC", Offset = "0x8E54DC")]
		public float lineThickness;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color lineColor;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5534", Offset = "0x8E5534")]
		public int seed;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E556C", Offset = "0x8E556C")]
		public int lineCount;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5588", Offset = "0x8E5588")]
		public int branchesMin;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E55A0", Offset = "0x8E55A0")]
		public int branchesMax;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E55B8", Offset = "0x8E55B8")]
		public float branchLengthMin;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E55D0", Offset = "0x8E55D0")]
		public float branchLengthMax;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E55E8", Offset = "0x8E55E8")]
		public float maxAngDeviation;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool use3D;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentLineCount;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Queue<Matrix4x4> mtxQueue;

		[Token(Token = "0x60033CD")]
		[Address(RVA = "0x128E620", Offset = "0x128E620", VA = "0x128E620", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033CE")]
		[Address(RVA = "0x128E890", Offset = "0x128E890", VA = "0x128E890")]
		private void BranchFrom(Matrix4x4 mtx)
		{
		}

		[Token(Token = "0x60033CF")]
		[Address(RVA = "0x128ECE8", Offset = "0x128ECE8", VA = "0x128ECE8")]
		public ProceduralTree()
		{
		}
	}
	[Token(Token = "0x2000880")]
	[ExecuteAlways]
	public class SpinningColorDiscs : ImmediateModeShapeDrawer
	{
		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5604", Offset = "0x8E5604")]
		public int discCount;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5620", Offset = "0x8E5620")]
		public float discRadius;

		[Token(Token = "0x60033D0")]
		[Address(RVA = "0x11F057C", Offset = "0x11F057C", VA = "0x11F057C", Slot = "4")]
		public override void DrawShapes(Camera cam)
		{
		}

		[Token(Token = "0x60033D1")]
		[Address(RVA = "0x11F087C", Offset = "0x11F087C", VA = "0x11F087C")]
		private Vector2 GetDiscPosition(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60033D2")]
		[Address(RVA = "0x11F08F0", Offset = "0x11F08F0", VA = "0x11F08F0")]
		public SpinningColorDiscs()
		{
		}
	}
}
namespace Decorations.Placements
{
	[Token(Token = "0x2000881")]
	public static class DecoPlacers
	{
		[Token(Token = "0x2000882")]
		public delegate bool DecoPlacement(Spaceport spaceport, Decoration deco, Building b);

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly DecoPlacement[] _around;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DecoPlacement[] _ground;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly DecoPlacement[] _groundSnapped;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly DecoPlacement[] _anywhere;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<BlockMetadata> availableLocations;

		[Token(Token = "0x60033D3")]
		[Address(RVA = "0xF2AA2C", Offset = "0xF2AA2C", VA = "0xF2AA2C")]
		public static DecoPlacement[] GetPlacers(Decoration.Placement mRules)
		{
			return null;
		}

		[Token(Token = "0x60033D4")]
		[Address(RVA = "0xF2AB40", Offset = "0xF2AB40", VA = "0xF2AB40")]
		public static bool Anywhere(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033D5")]
		[Address(RVA = "0xF2AC80", Offset = "0xF2AC80", VA = "0xF2AC80")]
		public static bool AnywhereForward(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033D6")]
		[Address(RVA = "0xF2ADC0", Offset = "0xF2ADC0", VA = "0xF2ADC0")]
		public static bool OnWall(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033D7")]
		[Address(RVA = "0xF2B470", Offset = "0xF2B470", VA = "0xF2B470")]
		public static bool OnGround(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033D8")]
		[Address(RVA = "0xF2B5FC", Offset = "0xF2B5FC", VA = "0xF2B5FC")]
		public static bool OnGroundSnapped(Spaceport spaceport, Decoration deco, Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60033D9")]
		[Address(RVA = "0xF2B160", Offset = "0xF2B160", VA = "0xF2B160")]
		private static bool TryGetBestWallPlacement(CityStructure cityStructure, Spaceport spaceport, Building building, FastBoundsInt cpBounds, List<BlockMetadata> locations, out BlockMetadata bestPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x60033DA")]
		[Address(RVA = "0xF2B70C", Offset = "0xF2B70C", VA = "0xF2B70C")]
		public static BlockPriorities GetPrioritiesForMetadata(CityStructure cityStructure, Spaceport spaceport, Building building, FastBoundsInt cpBounds, BlockMetadata metadata)
		{
			return null;
		}

		[Token(Token = "0x60033DB")]
		[Address(RVA = "0xF2C018", Offset = "0xF2C018", VA = "0xF2C018")]
		public static FastVector3Int GetSignOffsetForNormal(NormalIndex normalIndex)
		{
			return default(FastVector3Int);
		}

		[Token(Token = "0x60033DC")]
		[Address(RVA = "0xF2C0B4", Offset = "0xF2C0B4", VA = "0xF2C0B4")]
		public static FastBoundsInt GetSignBounds(BlockMetadata metadata)
		{
			return default(FastBoundsInt);
		}

		[Token(Token = "0x60033DD")]
		[Address(RVA = "0xF2B950", Offset = "0xF2B950", VA = "0xF2B950")]
		public static BlockPriorities GetSignBlockPriority(CityStructure cityStructure, FastBoundsInt buildingBounds, BlockMetadata startingBlock)
		{
			return null;
		}

		[Token(Token = "0x60033DE")]
		[Address(RVA = "0xF2BE10", Offset = "0xF2BE10", VA = "0xF2BE10")]
		public static int GetSpaceportPriorityAdjustment(Spaceport spaceport, Vector3 position, FastVector3Int normal)
		{
			return default(int);
		}

		[Token(Token = "0x60033DF")]
		[Address(RVA = "0xF2BF20", Offset = "0xF2BF20", VA = "0xF2BF20")]
		public static int GetReachabilityAdjustment(Building building, BlockMetadata location)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000883")]
	public class BlockPriorities
	{
		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int direction;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int corner;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int window;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int reachability;

		[Token(Token = "0x170006C9")]
		public int total
		{
			[Token(Token = "0x60033E7")]
			[Address(RVA = "0x104B660", Offset = "0x104B660", VA = "0x104B660")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60033E5")]
		[Address(RVA = "0x104B5A4", Offset = "0x104B5A4", VA = "0x104B5A4")]
		public void ReplaceIfHigher(BlockPriorities other)
		{
		}

		[Token(Token = "0x60033E6")]
		[Address(RVA = "0x104B608", Offset = "0x104B608", VA = "0x104B608")]
		public void ReplaceIfHigherTotal(BlockPriorities other)
		{
		}

		[Token(Token = "0x60033E8")]
		[Address(RVA = "0x104B670", Offset = "0x104B670", VA = "0x104B670")]
		public BlockPriorities()
		{
		}
	}
}
namespace City
{
	[Token(Token = "0x2000884")]
	public struct FastBlockMetadata
	{
		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BlockerMaterial material;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public FastVector3Int normal;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int z;

		[Token(Token = "0x60033E9")]
		[Address(RVA = "0x101C95C", Offset = "0x101C95C", VA = "0x101C95C")]
		public BlockMetadata Clone()
		{
			return default(BlockMetadata);
		}
	}
	[Token(Token = "0x2000885")]
	public struct BlockMetadata
	{
		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ICityPiece m_occupyingCityPiece;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ICityPiece[] m_connectableCityPieces;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlockerMaterial material;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FastVector3Int normal;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockContent content;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int windowPriority;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int windowX;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int windowY;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int windowZ;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int cornerPriority;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int x;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int y;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int z;

		[Token(Token = "0x60033EA")]
		[Address(RVA = "0x104AEB0", Offset = "0x104AEB0", VA = "0x104AEB0")]
		public static BlockMetadata Default()
		{
			return default(BlockMetadata);
		}

		[Token(Token = "0x60033EB")]
		[Address(RVA = "0x104AF5C", Offset = "0x104AF5C", VA = "0x104AF5C")]
		public bool Matches(BlockMetadata testLocation)
		{
			return default(bool);
		}

		[Token(Token = "0x60033EC")]
		[Address(RVA = "0x104AF98", Offset = "0x104AF98", VA = "0x104AF98")]
		public BlockMetadata Clone()
		{
			return default(BlockMetadata);
		}

		[Token(Token = "0x60033ED")]
		[Address(RVA = "0x104B070", Offset = "0x104B070", VA = "0x104B070", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60033EE")]
		[Address(RVA = "0x104B138", Offset = "0x104B138", VA = "0x104B138")]
		public int Delta(FastVector3Int other)
		{
			return default(int);
		}

		[Token(Token = "0x60033EF")]
		[Address(RVA = "0x104B168", Offset = "0x104B168", VA = "0x104B168")]
		public int GetDistanceToCorner(FastVector3Int[] corners)
		{
			return default(int);
		}

		[Token(Token = "0x60033F0")]
		[Address(RVA = "0x104B204", Offset = "0x104B204", VA = "0x104B204")]
		public int GetPriorityFromWindow(BlockMetadata[] windowLocations, out int winX, out int winY, out int winZ)
		{
			return default(int);
		}

		[Token(Token = "0x60033F1")]
		[Address(RVA = "0x104B334", Offset = "0x104B334", VA = "0x104B334")]
		private bool TryGetWindowDeltas(BlockMetadata[] windowLocations, out int deltaH, out int deltaV, out int winX, out int winY, out int winZ, out bool isDoor)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000886")]
	public enum BlockerMaterial
	{
		[Token(Token = "0x40027CD")]
		Solid,
		[Token(Token = "0x40027CE")]
		Anomaly,
		[Token(Token = "0x40027CF")]
		TowerOfPower
	}
	[Token(Token = "0x2000887")]
	public enum BlockContent
	{
		[Token(Token = "0x40027D1")]
		Normal,
		[Token(Token = "0x40027D2")]
		Window,
		[Token(Token = "0x40027D3")]
		Door,
		[Token(Token = "0x40027D4")]
		Corner
	}
	[Token(Token = "0x2000888")]
	public class BuildingBaker
	{
		[Token(Token = "0x2000889")]
		public struct Weights
		{
			[Token(Token = "0x40027D5")]
			public const int Reachable = 6;

			[Token(Token = "0x40027D6")]
			public const int Unreachable = -4;

			[Token(Token = "0x40027D7")]
			public const int Covered = -20;

			[Token(Token = "0x40027D8")]
			public const int SpaceportOriented = 2;

			[Token(Token = "0x40027D9")]
			public const int SpaceportFacingTowards = 1;

			[Token(Token = "0x40027DA")]
			public const int AboveDoor = 20;

			[Token(Token = "0x40027DB")]
			public const int BesideDoor = 10;

			[Token(Token = "0x40027DC")]
			public const int AboveWindow = 6;

			[Token(Token = "0x40027DD")]
			public const int BesideWindow = 3;
		}

		[Token(Token = "0x60033F2")]
		[Address(RVA = "0x13C5530", Offset = "0x13C5530", VA = "0x13C5530")]
		public void Bake(CityStructure cityStructure, Dictionary<long, BlockMetadata> blockToMetadata, Dictionary<long, long[]> cityPieceIDToBlocks, ICityPiece cityPiece, Vector3 position, Quaternion rotation, bool fullBake)
		{
		}

		[Token(Token = "0x60033F3")]
		[Address(RVA = "0x13C5804", Offset = "0x13C5804", VA = "0x13C5804")]
		private List<BlockMetadata> BakeWindowLocations(CityStructure cityStructure, SpacefolkWindow[] windows, Dictionary<long, BlockMetadata> blockToMetadata, HashSet<long> blockLocations)
		{
			return null;
		}

		[Token(Token = "0x60033F4")]
		[Address(RVA = "0x13C5DD0", Offset = "0x13C5DD0", VA = "0x13C5DD0")]
		private void BakeBlockingLocations(CityStructure cityStructure, ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Vector3 position, Quaternion rotation, HashSet<long> blockLocations)
		{
		}

		[Token(Token = "0x60033F5")]
		[Address(RVA = "0x13C6EFC", Offset = "0x13C6EFC", VA = "0x13C6EFC")]
		private static bool IsCorner(FastVector3Int[] corners, int x, int y, int z)
		{
			return default(bool);
		}

		[Token(Token = "0x60033F6")]
		[Address(RVA = "0x13C648C", Offset = "0x13C648C", VA = "0x13C648C")]
		private void BakeConnectionLocations(CityStructure cityStructure, ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Vector3 position, Quaternion rotation, List<BlockMetadata> windowLocations, HashSet<long> blockLocations, bool fullBake)
		{
		}

		[Token(Token = "0x60033F7")]
		[Address(RVA = "0x13C7050", Offset = "0x13C7050", VA = "0x13C7050")]
		public void Unbake(ICityPiece cityPiece, Dictionary<long, BlockMetadata> blockToMetadata, Dictionary<long, long[]> cityPieceIDToBlocks)
		{
		}

		[Token(Token = "0x60033F8")]
		[Address(RVA = "0x13C7310", Offset = "0x13C7310", VA = "0x13C7310")]
		public BuildingBaker()
		{
		}
	}
	[Token(Token = "0x200088A")]
	public class CityBlockerPlacement : MonoBehaviour
	{
		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D984C", Offset = "0x8D984C")]
		private sealed class <Corners>d__5 : IEnumerable<FastVector3Int>, IEnumerable, IEnumerator<FastVector3Int>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastVector3Int <>2__current;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CityBlockerPlacement <cityBlockerPlacement>5__4;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FastVector3Int[] <corners>5__5;

			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CityBlockerPlacement[] <>7__wrap5;

			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>7__wrap6;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private CityBlockerPlacement <otherBlocker>5__8;

			[Token(Token = "0x40027EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private FastVector3Int[] <>7__wrap8;

			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <>7__wrap9;

			[Token(Token = "0x170006CA")]
			private FastVector3Int System.Collections.Generic.IEnumerator<Utils.FastVector3Int>.Current
			{
				[Token(Token = "0x6003402")]
				[Address(RVA = "0x10047D4", Offset = "0x10047D4", VA = "0x10047D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastVector3Int);
				}
			}

			[Token(Token = "0x170006CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003404")]
				[Address(RVA = "0x1004824", Offset = "0x1004824", VA = "0x1004824", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FF")]
			[Address(RVA = "0x10043F0", Offset = "0x10043F0", VA = "0x10043F0")]
			[DebuggerHidden]
			public <Corners>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003400")]
			[Address(RVA = "0x1004428", Offset = "0x1004428", VA = "0x1004428", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003401")]
			[Address(RVA = "0x100442C", Offset = "0x100442C", VA = "0x100442C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0x10047E4", Offset = "0x10047E4", VA = "0x10047E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003405")]
			[Address(RVA = "0x100488C", Offset = "0x100488C", VA = "0x100488C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastVector3Int> System.Collections.Generic.IEnumerable<Utils.FastVector3Int>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003406")]
			[Address(RVA = "0x100493C", Offset = "0x100493C", VA = "0x100493C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200088C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D985C", Offset = "0x8D985C")]
		private sealed class <FastBlockLocations>d__6 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap2;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CityBlockerPlacement <cityBlockerPlacement>5__4;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<FastVector3Int> <>7__wrap4;

			[Token(Token = "0x170006CC")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x600340B")]
				[Address(RVA = "0x1004DD8", Offset = "0x1004DD8", VA = "0x1004DD8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340D")]
				[Address(RVA = "0x1004E2C", Offset = "0x1004E2C", VA = "0x1004E2C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0x1004940", Offset = "0x1004940", VA = "0x1004940")]
			[DebuggerHidden]
			public <FastBlockLocations>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003408")]
			[Address(RVA = "0x1004978", Offset = "0x1004978", VA = "0x1004978", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0x1004A50", Offset = "0x1004A50", VA = "0x1004A50", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340A")]
			[Address(RVA = "0x1004994", Offset = "0x1004994", VA = "0x1004994")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0x1004DEC", Offset = "0x1004DEC", VA = "0x1004DEC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600340E")]
			[Address(RVA = "0x1004E94", Offset = "0x1004E94", VA = "0x1004E94", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600340F")]
			[Address(RVA = "0x1004F44", Offset = "0x1004F44", VA = "0x1004F44", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200088D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D986C", Offset = "0x8D986C")]
		private sealed class <BakedBlockLocations>d__7 : IEnumerable<BlockMetadata>, IEnumerable, IEnumerator<BlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BlockMetadata <>2__current;

			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private CityBlockerPlacement[] cityBlockerPlacements;

			[Token(Token = "0x40027FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public CityBlockerPlacement[] <>3__cityBlockerPlacements;

			[Token(Token = "0x40027FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private CityStructure cityStructure;

			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public CityStructure <>3__cityStructure;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private CityBlockerPlacement[] <>7__wrap1;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <>7__wrap2;

			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IEnumerator<FastVector3Int> <>7__wrap3;

			[Token(Token = "0x170006CE")]
			private BlockMetadata System.Collections.Generic.IEnumerator<City.BlockMetadata>.Current
			{
				[Token(Token = "0x6003414")]
				[Address(RVA = "0x1004274", Offset = "0x1004274", VA = "0x1004274", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(BlockMetadata);
				}
			}

			[Token(Token = "0x170006CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003416")]
				[Address(RVA = "0x10042C4", Offset = "0x10042C4", VA = "0x10042C4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003410")]
			[Address(RVA = "0x1003DD4", Offset = "0x1003DD4", VA = "0x1003DD4")]
			[DebuggerHidden]
			public <BakedBlockLocations>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003411")]
			[Address(RVA = "0x1003E0C", Offset = "0x1003E0C", VA = "0x1003E0C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0x1003EE4", Offset = "0x1003EE4", VA = "0x1003EE4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003413")]
			[Address(RVA = "0x1003E28", Offset = "0x1003E28", VA = "0x1003E28")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0x1004284", Offset = "0x1004284", VA = "0x1004284", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003417")]
			[Address(RVA = "0x100432C", Offset = "0x100432C", VA = "0x100432C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<BlockMetadata> System.Collections.Generic.IEnumerable<City.BlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003418")]
			[Address(RVA = "0x10043EC", Offset = "0x10043EC", VA = "0x10043EC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200088E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D987C", Offset = "0x8D987C")]
		private sealed class <FastBlockLocations>d__8 : IEnumerable<FastBlockMetadata>, IEnumerable, IEnumerator<FastBlockMetadata>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private FastBlockMetadata <>2__current;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CityBlockerPlacement <>4__this;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<FastVector3Int> <>7__wrap1;

			[Token(Token = "0x170006D0")]
			private FastBlockMetadata System.Collections.Generic.IEnumerator<City.FastBlockMetadata>.Current
			{
				[Token(Token = "0x600341D")]
				[Address(RVA = "0x100533C", Offset = "0x100533C", VA = "0x100533C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(FastBlockMetadata);
				}
			}

			[Token(Token = "0x170006D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600341F")]
				[Address(RVA = "0x1005390", Offset = "0x1005390", VA = "0x1005390", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0x1004F48", Offset = "0x1004F48", VA = "0x1004F48")]
			[DebuggerHidden]
			public <FastBlockLocations>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600341A")]
			[Address(RVA = "0x1004F80", Offset = "0x1004F80", VA = "0x1004F80", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600341B")]
			[Address(RVA = "0x1005058", Offset = "0x1005058", VA = "0x1005058", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600341C")]
			[Address(RVA = "0x1004F9C", Offset = "0x1004F9C", VA = "0x1004F9C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600341E")]
			[Address(RVA = "0x1005350", Offset = "0x1005350", VA = "0x1005350", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003420")]
			[Address(RVA = "0x10053F8", Offset = "0x10053F8", VA = "0x10053F8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<FastBlockMetadata> System.Collections.Generic.IEnumerable<City.FastBlockMetadata>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003421")]
			[Address(RVA = "0x10054A8", Offset = "0x10054A8", VA = "0x10054A8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useCentrePivot;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Bounds m_bounds;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlockerMaterial blockerMaterial;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FastBoundsInt structuredBounds;

		[Token(Token = "0x60033F9")]
		[Address(RVA = "0x13C6CD8", Offset = "0x13C6CD8", VA = "0x13C6CD8")]
		public void UpdateStructuredBounds(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60033FA")]
		[Address(RVA = "0x13C6DF0", Offset = "0x13C6DF0", VA = "0x13C6DF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5ADC", Offset = "0x8F5ADC")]
		public static IEnumerable<FastVector3Int> Corners(CityBlockerPlacement[] cityBlockerPlacements)
		{
			return null;
		}

		[Token(Token = "0x60033FB")]
		[Address(RVA = "0x13D0D08", Offset = "0x13D0D08", VA = "0x13D0D08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5B3C", Offset = "0x8F5B3C")]
		public static IEnumerable<FastBlockMetadata> FastBlockLocations(CityBlockerPlacement[] cityBlockerPlacements)
		{
			return null;
		}

		[Token(Token = "0x60033FC")]
		[Address(RVA = "0x13C912C", Offset = "0x13C912C", VA = "0x13C912C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5B9C", Offset = "0x8F5B9C")]
		public static IEnumerable<BlockMetadata> BakedBlockLocations(CityStructure cityStructure, CityBlockerPlacement[] cityBlockerPlacements, Vector3 position, Quaternion rotation, bool sidesOnly = false)
		{
			return null;
		}

		[Token(Token = "0x60033FD")]
		[Address(RVA = "0x13C6E68", Offset = "0x13C6E68", VA = "0x13C6E68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5BFC", Offset = "0x8F5BFC")]
		public IEnumerable<FastBlockMetadata> FastBlockLocations()
		{
			return null;
		}

		[Token(Token = "0x60033FE")]
		[Address(RVA = "0x13D0D80", Offset = "0x13D0D80", VA = "0x13D0D80")]
		public CityBlockerPlacement()
		{
		}
	}
	[Token(Token = "0x200088F")]
	public enum NormalIndex
	{
		[Token(Token = "0x4002809")]
		Up,
		[Token(Token = "0x400280A")]
		Down,
		[Token(Token = "0x400280B")]
		Right,
		[Token(Token = "0x400280C")]
		Left,
		[Token(Token = "0x400280D")]
		Back,
		[Token(Token = "0x400280E")]
		Front,
		[Token(Token = "0x400280F")]
		None
	}
	[Token(Token = "0x2000890")]
	public static class NormalIndexExt
	{
		[Token(Token = "0x6003422")]
		[Address(RVA = "0x133D5E4", Offset = "0x133D5E4", VA = "0x133D5E4")]
		public static NormalIndex ToIndex(this Vector3 normal)
		{
			return default(NormalIndex);
		}

		[Token(Token = "0x6003423")]
		[Address(RVA = "0x133D650", Offset = "0x133D650", VA = "0x133D650")]
		public static NormalIndex ToIndex(this FastVector3Int normal)
		{
			return default(NormalIndex);
		}

		[Token(Token = "0x6003424")]
		[Address(RVA = "0x133D6A8", Offset = "0x133D6A8", VA = "0x133D6A8")]
		public static bool IsReversed(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x6003425")]
		[Address(RVA = "0x133D6D0", Offset = "0x133D6D0", VA = "0x133D6D0")]
		public static bool OnYAxis(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x6003426")]
		[Address(RVA = "0x133D6DC", Offset = "0x133D6DC", VA = "0x133D6DC")]
		public static bool OnXAxis(this NormalIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x6003427")]
		[Address(RVA = "0x133D6EC", Offset = "0x133D6EC", VA = "0x133D6EC")]
		public static bool OnZAxis(this NormalIndex index)
		{
			return default(bool);
		}
	}
}
namespace Prototypes.TinyPeople
{
	[Token(Token = "0x2000891")]
	public class BinMan : MonoBehaviour
	{
		[Token(Token = "0x2000892")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D989C", Offset = "0x8D989C")]
		private sealed class <DoBin>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRInteractableItem binned;

			[Token(Token = "0x4002813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform holder;

			[Token(Token = "0x4002814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endPos;

			[Token(Token = "0x4002815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 heightPos;

			[Token(Token = "0x4002816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4002817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 startPos;

			[Token(Token = "0x4002818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<NVRInteractableItem> callback;

			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform <binTrans>5__2;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Snappable <snappable>5__3;

			[Token(Token = "0x400281B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool <snappableWasEnabled>5__4;

			[Token(Token = "0x400281C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private PointAndSnap <pointAndSnap>5__5;

			[Token(Token = "0x400281D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <pointAndSnapWasEnabled>5__6;

			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Transform <parentWas>5__7;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float <t>5__8;

			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <endPosMag>5__9;

			[Token(Token = "0x170006D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600342E")]
				[Address(RVA = "0x1000624", Offset = "0x1000624", VA = "0x1000624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003430")]
				[Address(RVA = "0x100066C", Offset = "0x100066C", VA = "0x100066C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600342B")]
			[Address(RVA = "0xFFFDDC", Offset = "0xFFFDDC", VA = "0xFFFDDC")]
			[DebuggerHidden]
			public <DoBin>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600342C")]
			[Address(RVA = "0xFFFE08", Offset = "0xFFFE08", VA = "0xFFFE08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600342D")]
			[Address(RVA = "0xFFFE0C", Offset = "0xFFFE0C", VA = "0xFFFE0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600342F")]
			[Address(RVA = "0x100062C", Offset = "0x100062C", VA = "0x100062C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6003428")]
		[Address(RVA = "0x104A648", Offset = "0x104A648", VA = "0x104A648")]
		public void BinIt(NVRInteractableItem binned, Transform holder, float duration, Vector3 startPos, Vector3 endPos, Vector3 heightPos, Action<NVRInteractableItem> callback)
		{
		}

		[Token(Token = "0x6003429")]
		[Address(RVA = "0x104AC44", Offset = "0x104AC44", VA = "0x104AC44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5E7C", Offset = "0x8F5E7C")]
		private IEnumerator DoBin(NVRInteractableItem binned, Transform holder, float duration, Vector3 startPos, Vector3 endPos, Vector3 heightPos, Action<NVRInteractableItem> callback)
		{
			return null;
		}

		[Token(Token = "0x600342A")]
		[Address(RVA = "0x104AD50", Offset = "0x104AD50", VA = "0x104AD50")]
		public BinMan()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000893")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170006D4")]
		public bool Highlight
		{
			[Token(Token = "0x6003431")]
			[Address(RVA = "0x13D3ECC", Offset = "0x13D3ECC", VA = "0x13D3ECC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003432")]
			[Address(RVA = "0x13D3ED4", Offset = "0x13D3ED4", VA = "0x13D3ED4")]
			set
			{
			}
		}

		[Token(Token = "0x6003433")]
		[Address(RVA = "0x13D3EE0", Offset = "0x13D3EE0", VA = "0x13D3EE0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6003434")]
		[Address(RVA = "0x13D40A8", Offset = "0x13D40A8", VA = "0x13D40A8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6003435")]
		[Address(RVA = "0x13D40D0", Offset = "0x13D40D0", VA = "0x13D40D0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6003436")]
		[Address(RVA = "0x13D40F8", Offset = "0x13D40F8", VA = "0x13D40F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003437")]
		[Address(RVA = "0x13D3FA8", Offset = "0x13D3FA8", VA = "0x13D3FA8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6003438")]
		[Address(RVA = "0x13D43CC", Offset = "0x13D43CC", VA = "0x13D43CC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000894")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170006D5")]
		public bool InRange
		{
			[Token(Token = "0x600343A")]
			[Address(RVA = "0x100853C", Offset = "0x100853C", VA = "0x100853C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600343B")]
			[Address(RVA = "0x1008544", Offset = "0x1008544", VA = "0x1008544")]
			set
			{
			}
		}

		[Token(Token = "0x170006D6")]
		public bool Targeted
		{
			[Token(Token = "0x600343C")]
			[Address(RVA = "0x10086C0", Offset = "0x10086C0", VA = "0x10086C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600343D")]
			[Address(RVA = "0x10086C8", Offset = "0x10086C8", VA = "0x10086C8")]
			set
			{
			}
		}

		[Token(Token = "0x600343E")]
		[Address(RVA = "0x10086D4", Offset = "0x10086D4", VA = "0x10086D4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600343F")]
		[Address(RVA = "0x1008550", Offset = "0x1008550", VA = "0x1008550")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6003440")]
		[Address(RVA = "0x1008840", Offset = "0x1008840", VA = "0x1008840")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000895")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D98AC", Offset = "0x8D98AC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170006D7")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6003441")]
			[Address(RVA = "0x1008848", Offset = "0x1008848", VA = "0x1008848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003442")]
			[Address(RVA = "0x1008850", Offset = "0x1008850", VA = "0x1008850")]
			set
			{
			}
		}

		[Token(Token = "0x6003443")]
		[Address(RVA = "0x100886C", Offset = "0x100886C", VA = "0x100886C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6003444")]
		[Address(RVA = "0x1008AAC", Offset = "0x1008AAC", VA = "0x1008AAC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6003445")]
		[Address(RVA = "0x10093C4", Offset = "0x10093C4", VA = "0x10093C4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6003446")]
		[Address(RVA = "0x1009858", Offset = "0x1009858", VA = "0x1009858", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6003447")]
		[Address(RVA = "0x1009B18", Offset = "0x1009B18", VA = "0x1009B18")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6003448")]
		[Address(RVA = "0x1008D20", Offset = "0x1008D20", VA = "0x1008D20")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6003449")]
		[Address(RVA = "0x1009C08", Offset = "0x1009C08", VA = "0x1009C08")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600344A")]
		[Address(RVA = "0x100A064", Offset = "0x100A064", VA = "0x100A064", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600344B")]
		[Address(RVA = "0x100A07C", Offset = "0x100A07C", VA = "0x100A07C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600344C")]
		[Address(RVA = "0x100A084", Offset = "0x100A084", VA = "0x100A084")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000896")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600344D")]
		[Address(RVA = "0x12A01B4", Offset = "0x12A01B4", VA = "0x12A01B4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600344E")]
		[Address(RVA = "0x12A026C", Offset = "0x12A026C", VA = "0x12A026C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600344F")]
		[Address(RVA = "0x12A0324", Offset = "0x12A0324", VA = "0x12A0324")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000897")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000898")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002843")]
			Disabled,
			[Token(Token = "0x4002844")]
			Enabled,
			[Token(Token = "0x4002845")]
			Targeted
		}

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6003450")]
		[Address(RVA = "0x12A03E4", Offset = "0x12A03E4", VA = "0x12A03E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6003451")]
		[Address(RVA = "0x12A0450", Offset = "0x12A0450", VA = "0x12A0450")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6003452")]
		[Address(RVA = "0x12A04EC", Offset = "0x12A04EC", VA = "0x12A04EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6003453")]
		[Address(RVA = "0x12A0534", Offset = "0x12A0534", VA = "0x12A0534")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000899")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6003454")]
		[Address(RVA = "0xECE764", Offset = "0xECE764", VA = "0xECE764")]
		private void Start()
		{
		}

		[Token(Token = "0x6003455")]
		[Address(RVA = "0xECE850", Offset = "0xECE850", VA = "0xECE850")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6003456")]
		[Address(RVA = "0xECE85C", Offset = "0xECE85C", VA = "0xECE85C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6003457")]
		[Address(RVA = "0xECE868", Offset = "0xECE868", VA = "0xECE868")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200089A")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6003458")]
		[Address(RVA = "0x104B924", Offset = "0x104B924", VA = "0x104B924")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003459")]
		[Address(RVA = "0x104B978", Offset = "0x104B978", VA = "0x104B978")]
		private void Update()
		{
		}

		[Token(Token = "0x600345A")]
		[Address(RVA = "0x104BCE4", Offset = "0x104BCE4", VA = "0x104BCE4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600345B")]
		[Address(RVA = "0x104BDE8", Offset = "0x104BDE8", VA = "0x104BDE8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600345C")]
		[Address(RVA = "0x104B97C", Offset = "0x104B97C", VA = "0x104B97C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600345D")]
		[Address(RVA = "0x104BEEC", Offset = "0x104BEEC", VA = "0x104BEEC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200089B")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200089C")]
		public enum ContactTest
		{
			[Token(Token = "0x4002858")]
			PerpenTest,
			[Token(Token = "0x4002859")]
			BackwardsPress
		}

		[Token(Token = "0x4002849")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400284A")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5768", Offset = "0x8E5768")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170006D8")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600345E")]
			[Address(RVA = "0x13C9C0C", Offset = "0x13C9C0C", VA = "0x13C9C0C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006D9")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600345F")]
			[Address(RVA = "0x13C9C14", Offset = "0x13C9C14", VA = "0x13C9C14")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170006DA")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6003460")]
			[Address(RVA = "0x13C9C20", Offset = "0x13C9C20", VA = "0x13C9C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F2C", Offset = "0x8F5F2C")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6003461")]
			[Address(RVA = "0x13C9C28", Offset = "0x13C9C28", VA = "0x13C9C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F3C", Offset = "0x8F5F3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6003462")]
		[Address(RVA = "0x13C9C30", Offset = "0x13C9C30", VA = "0x13C9C30", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6003463")]
		[Address(RVA = "0x13C9D44", Offset = "0x13C9D44", VA = "0x13C9D44")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6003464")]
		[Address(RVA = "0x13C9F5C", Offset = "0x13C9F5C", VA = "0x13C9F5C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6003465")]
		[Address(RVA = "0x13CA510", Offset = "0x13CA510", VA = "0x13CA510")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6003466")]
		[Address(RVA = "0x13CA5BC", Offset = "0x13CA5BC", VA = "0x13CA5BC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6003467")]
		[Address(RVA = "0x13CA428", Offset = "0x13CA428", VA = "0x13CA428")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6003468")]
		[Address(RVA = "0x13CA6C4", Offset = "0x13CA6C4", VA = "0x13CA6C4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6003469")]
		[Address(RVA = "0x13CA748", Offset = "0x13CA748", VA = "0x13CA748")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600346A")]
		[Address(RVA = "0x13CA7D4", Offset = "0x13CA7D4", VA = "0x13CA7D4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200089D")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5788", Offset = "0x8E5788")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5798", Offset = "0x8E5798")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170006DB")]
		public Collider Collider
		{
			[Token(Token = "0x600346B")]
			[Address(RVA = "0x13CADB4", Offset = "0x13CADB4", VA = "0x13CADB4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F4C", Offset = "0x8F5F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600346C")]
			[Address(RVA = "0x13CADBC", Offset = "0x13CADBC", VA = "0x13CADBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F5C", Offset = "0x8F5F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170006DC")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600346D")]
			[Address(RVA = "0x13CADC4", Offset = "0x13CADC4", VA = "0x13CADC4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F6C", Offset = "0x8F5F6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600346E")]
			[Address(RVA = "0x13CADCC", Offset = "0x13CADCC", VA = "0x13CADCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F7C", Offset = "0x8F5F7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170006DD")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600346F")]
			[Address(RVA = "0x13CADD4", Offset = "0x13CADD4", VA = "0x13CADD4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6003470")]
		[Address(RVA = "0x13CAE24", Offset = "0x13CAE24", VA = "0x13CAE24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003471")]
		[Address(RVA = "0x13CAEB8", Offset = "0x13CAEB8", VA = "0x13CAEB8")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200089E")]
	public interface ColliderZone
	{
		[Token(Token = "0x170006DE")]
		Collider Collider
		{
			[Token(Token = "0x6003472")]
			get;
		}

		[Token(Token = "0x170006DF")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6003473")]
			get;
		}

		[Token(Token = "0x170006E0")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6003474")]
			get;
		}
	}
	[Token(Token = "0x200089F")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6003475")]
		[Address(RVA = "0x13C9EA4", Offset = "0x13C9EA4", VA = "0x13C9EA4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20008A0")]
	public enum InteractionType
	{
		[Token(Token = "0x4002862")]
		Enter,
		[Token(Token = "0x4002863")]
		Stay,
		[Token(Token = "0x4002864")]
		Exit
	}
	[Token(Token = "0x20008A1")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20008A2")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002876")]
			Mesh,
			[Token(Token = "0x4002877")]
			Skeleton,
			[Token(Token = "0x4002878")]
			Both
		}

		[Token(Token = "0x20008A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D990C", Offset = "0x8D990C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400287A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170006EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003497")]
				[Address(RVA = "0xE7EA40", Offset = "0xE7EA40", VA = "0xE7EA40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003499")]
				[Address(RVA = "0xE7EA88", Offset = "0xE7EA88", VA = "0xE7EA88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003494")]
			[Address(RVA = "0xE7E7AC", Offset = "0xE7E7AC", VA = "0xE7E7AC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6003495")]
			[Address(RVA = "0xE7E7D8", Offset = "0xE7E7D8", VA = "0xE7E7D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003496")]
			[Address(RVA = "0xE7E7DC", Offset = "0xE7E7DC", VA = "0xE7E7DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003498")]
			[Address(RVA = "0xE7EA48", Offset = "0xE7EA48", VA = "0xE7EA48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002865")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E57C8", Offset = "0x8E57C8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170006E1")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6003476")]
			[Address(RVA = "0x12AB9EC", Offset = "0x12AB9EC", VA = "0x12AB9EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003477")]
			[Address(RVA = "0x12ABA24", Offset = "0x12ABA24", VA = "0x12ABA24")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6003478")]
			[Address(RVA = "0x12ABA94", Offset = "0x12ABA94", VA = "0x12ABA94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003479")]
			[Address(RVA = "0x12ABACC", Offset = "0x12ABACC", VA = "0x12ABACC")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E3")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600347A")]
			[Address(RVA = "0x12ABB3C", Offset = "0x12ABB3C", VA = "0x12ABB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600347B")]
			[Address(RVA = "0x12ABB74", Offset = "0x12ABB74", VA = "0x12ABB74")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E4")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600347C")]
			[Address(RVA = "0x12ABBE4", Offset = "0x12ABBE4", VA = "0x12ABBE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600347D")]
			[Address(RVA = "0x12ABC1C", Offset = "0x12ABC1C", VA = "0x12ABC1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600347E")]
			[Address(RVA = "0x12ABC8C", Offset = "0x12ABC8C", VA = "0x12ABC8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600347F")]
			[Address(RVA = "0x12ABCC4", Offset = "0x12ABCC4", VA = "0x12ABCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E6")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6003480")]
			[Address(RVA = "0x12ABD34", Offset = "0x12ABD34", VA = "0x12ABD34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003481")]
			[Address(RVA = "0x12ABD68", Offset = "0x12ABD68", VA = "0x12ABD68")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E7")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6003482")]
			[Address(RVA = "0x12ABDD4", Offset = "0x12ABDD4", VA = "0x12ABDD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003483")]
			[Address(RVA = "0x12ABE08", Offset = "0x12ABE08", VA = "0x12ABE08")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E8")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6003484")]
			[Address(RVA = "0x12ABE74", Offset = "0x12ABE74", VA = "0x12ABE74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003485")]
			[Address(RVA = "0x12ABEA8", Offset = "0x12ABEA8", VA = "0x12ABEA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E9")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6003486")]
			[Address(RVA = "0x12ABF14", Offset = "0x12ABF14", VA = "0x12ABF14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003487")]
			[Address(RVA = "0x12ABF48", Offset = "0x12ABF48", VA = "0x12ABF48")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EA")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6003488")]
			[Address(RVA = "0x12ABFB4", Offset = "0x12ABFB4", VA = "0x12ABFB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003489")]
			[Address(RVA = "0x12ABFE8", Offset = "0x12ABFE8", VA = "0x12ABFE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EB")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600348A")]
			[Address(RVA = "0x12AC054", Offset = "0x12AC054", VA = "0x12AC054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F8C", Offset = "0x8F5F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600348B")]
			[Address(RVA = "0x12AC0A0", Offset = "0x12AC0A0", VA = "0x12AC0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F5F9C", Offset = "0x8F5F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x600348C")]
		[Address(RVA = "0x12AC0F4", Offset = "0x12AC0F4", VA = "0x12AC0F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600348D")]
		[Address(RVA = "0x12AC4C8", Offset = "0x12AC4C8", VA = "0x12AC4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600348E")]
		[Address(RVA = "0x12AC450", Offset = "0x12AC450", VA = "0x12AC450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F5FAC", Offset = "0x8F5FAC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600348F")]
		[Address(RVA = "0x12AC550", Offset = "0x12AC550", VA = "0x12AC550")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6003490")]
		[Address(RVA = "0x12AC634", Offset = "0x12AC634", VA = "0x12AC634")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6003491")]
		[Address(RVA = "0x12AC814", Offset = "0x12AC814", VA = "0x12AC814")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6003492")]
		[Address(RVA = "0x12ACA50", Offset = "0x12ACA50", VA = "0x12ACA50")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6003493")]
		[Address(RVA = "0x12ACBDC", Offset = "0x12ACBDC", VA = "0x12ACBDC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20008A4")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008A5")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60034AB")]
			[Address(RVA = "0xE8641C", Offset = "0xE8641C", VA = "0xE8641C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170006EE")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600349A")]
			[Address(RVA = "0xFCD39C", Offset = "0xFCD39C", VA = "0xFCD39C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EF")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600349B")]
			[Address(RVA = "0xFCD3A4", Offset = "0xFCD3A4", VA = "0xFCD3A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F0")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600349C")]
			[Address(RVA = "0xFCD3AC", Offset = "0xFCD3AC", VA = "0xFCD3AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F1")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600349D")]
			[Address(RVA = "0xFCD3B4", Offset = "0xFCD3B4", VA = "0xFCD3B4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600349E")]
			[Address(RVA = "0xFCD3BC", Offset = "0xFCD3BC", VA = "0xFCD3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F605C", Offset = "0x8F605C")]
			add
			{
			}
			[Token(Token = "0x600349F")]
			[Address(RVA = "0xFCD45C", Offset = "0xFCD45C", VA = "0xFCD45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F606C", Offset = "0x8F606C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60034A1")]
			[Address(RVA = "0xFCD56C", Offset = "0xFCD56C", VA = "0xFCD56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F607C", Offset = "0x8F607C")]
			add
			{
			}
			[Token(Token = "0x60034A2")]
			[Address(RVA = "0xFCD60C", Offset = "0xFCD60C", VA = "0xFCD60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F608C", Offset = "0x8F608C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60034A4")]
			[Address(RVA = "0xFCD71C", Offset = "0xFCD71C", VA = "0xFCD71C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F609C", Offset = "0x8F609C")]
			add
			{
			}
			[Token(Token = "0x60034A5")]
			[Address(RVA = "0xFCD7BC", Offset = "0xFCD7BC", VA = "0xFCD7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F60AC", Offset = "0x8F60AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60034A0")]
		[Address(RVA = "0xFCD4FC", Offset = "0xFCD4FC", VA = "0xFCD4FC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034A3")]
		[Address(RVA = "0xFCD6AC", Offset = "0xFCD6AC", VA = "0xFCD6AC", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034A6")]
		[Address(RVA = "0xFCD85C", Offset = "0xFCD85C", VA = "0xFCD85C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60034A7")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60034A8")]
		[Address(RVA = "0xFCD8CC", Offset = "0xFCD8CC", VA = "0xFCD8CC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60034A9")]
		[Address(RVA = "0xFCD9F8", Offset = "0xFCD9F8", VA = "0xFCD9F8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60034AA")]
		[Address(RVA = "0xFCDB24", Offset = "0xFCDB24", VA = "0xFCDB24")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20008A6")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002884")]
		None,
		[Token(Token = "0x4002885")]
		Proximity,
		[Token(Token = "0x4002886")]
		Contact,
		[Token(Token = "0x4002887")]
		Action
	}
	[Token(Token = "0x20008A7")]
	public enum InteractableState
	{
		[Token(Token = "0x4002889")]
		Default,
		[Token(Token = "0x400288A")]
		ProximityState,
		[Token(Token = "0x400288B")]
		ContactState,
		[Token(Token = "0x400288C")]
		ActionState
	}
	[Token(Token = "0x20008A8")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60034AC")]
		[Address(RVA = "0xFCDC7C", Offset = "0xFCDC7C", VA = "0xFCDC7C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20008A9")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170006F2")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60034AD")]
			[Address(RVA = "0xFCDB84", Offset = "0xFCDB84", VA = "0xFCDB84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60034AE")]
		[Address(RVA = "0xFCD92C", Offset = "0xFCD92C", VA = "0xFCD92C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60034AF")]
		[Address(RVA = "0xFCDA58", Offset = "0xFCDA58", VA = "0xFCDA58")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60034B0")]
		[Address(RVA = "0xFCDBE8", Offset = "0xFCDBE8", VA = "0xFCDBE8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20008AA")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20008AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D991C", Offset = "0x8D991C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170006F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034BA")]
				[Address(RVA = "0xE86980", Offset = "0xE86980", VA = "0xE86980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034BC")]
				[Address(RVA = "0xE869C8", Offset = "0xE869C8", VA = "0xE869C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034B6")]
			[Address(RVA = "0xE86468", Offset = "0xE86468", VA = "0xE86468")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60034B7")]
			[Address(RVA = "0xE86494", Offset = "0xE86494", VA = "0xE86494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034B8")]
			[Address(RVA = "0xE86504", Offset = "0xE86504", VA = "0xE86504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034B9")]
			[Address(RVA = "0xE864B0", Offset = "0xE864B0", VA = "0xE864B0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60034BB")]
			[Address(RVA = "0xE86988", Offset = "0xE86988", VA = "0xE86988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60034B2")]
		[Address(RVA = "0xFCEA00", Offset = "0xFCEA00", VA = "0xFCEA00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034B3")]
		[Address(RVA = "0xFCEA7C", Offset = "0xFCEA7C", VA = "0xFCEA7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F60BC", Offset = "0x8F60BC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60034B4")]
		[Address(RVA = "0xFCEB1C", Offset = "0xFCEB1C", VA = "0xFCEB1C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60034B5")]
		[Address(RVA = "0xFCEC04", Offset = "0xFCEC04", VA = "0xFCEC04")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20008AC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170006F5")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60034BD")]
			[Address(RVA = "0xFCEC0C", Offset = "0xFCEC0C", VA = "0xFCEC0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60034BE")]
		[Address(RVA = "0xFCED8C", Offset = "0xFCED8C", VA = "0xFCED8C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60034BF")]
		[Address(RVA = "0xFCEE34", Offset = "0xFCEE34", VA = "0xFCEE34")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60034C0")]
		[Address(RVA = "0xFCEEDC", Offset = "0xFCEEDC", VA = "0xFCEEDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60034C1")]
		[Address(RVA = "0xFCF1A4", Offset = "0xFCF1A4", VA = "0xFCF1A4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60034C2")]
		[Address(RVA = "0xFCF1EC", Offset = "0xFCF1EC", VA = "0xFCF1EC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60034C3")]
		[Address(RVA = "0xFCF49C", Offset = "0xFCF49C", VA = "0xFCF49C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60034C4")]
		[Address(RVA = "0xFCF5E8", Offset = "0xFCF5E8", VA = "0xFCF5E8")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20008AD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20008AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D992C", Offset = "0x8D992C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170006FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034D6")]
				[Address(RVA = "0xE7BCE4", Offset = "0xE7BCE4", VA = "0xE7BCE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034D8")]
				[Address(RVA = "0xE7BD2C", Offset = "0xE7BD2C", VA = "0xE7BD2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034D3")]
			[Address(RVA = "0xE7B8B0", Offset = "0xE7B8B0", VA = "0xE7B8B0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60034D4")]
			[Address(RVA = "0xE7B8DC", Offset = "0xE7B8DC", VA = "0xE7B8DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034D5")]
			[Address(RVA = "0xE7B8E0", Offset = "0xE7B8E0", VA = "0xE7B8E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034D7")]
			[Address(RVA = "0xE7BCEC", Offset = "0xE7BCEC", VA = "0xE7BCEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028A5")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170006F6")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60034C5")]
			[Address(RVA = "0x101D71C", Offset = "0x101D71C", VA = "0x101D71C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170006F7")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60034C6")]
			[Address(RVA = "0x101D724", Offset = "0x101D724", VA = "0x101D724", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170006F8")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60034C7")]
			[Address(RVA = "0x101D72C", Offset = "0x101D72C", VA = "0x101D72C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006F9")]
		public override bool EnableState
		{
			[Token(Token = "0x60034C8")]
			[Address(RVA = "0x101D734", Offset = "0x101D734", VA = "0x101D734", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034C9")]
			[Address(RVA = "0x101D760", Offset = "0x101D760", VA = "0x101D760", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60034CA")]
		[Address(RVA = "0x101D79C", Offset = "0x101D79C", VA = "0x101D79C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60034CB")]
		[Address(RVA = "0x101D854", Offset = "0x101D854", VA = "0x101D854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F616C", Offset = "0x8F616C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60034CC")]
		[Address(RVA = "0x101D8CC", Offset = "0x101D8CC", VA = "0x101D8CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60034CD")]
		[Address(RVA = "0x101DB6C", Offset = "0x101DB6C", VA = "0x101DB6C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60034CE")]
		[Address(RVA = "0x101DCF8", Offset = "0x101DCF8", VA = "0x101DCF8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60034CF")]
		[Address(RVA = "0x101DDF0", Offset = "0x101DDF0", VA = "0x101DDF0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60034D0")]
		[Address(RVA = "0x101E0E8", Offset = "0x101E0E8", VA = "0x101E0E8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60034D1")]
		[Address(RVA = "0x101E0EC", Offset = "0x101E0EC", VA = "0x101E0EC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60034D2")]
		[Address(RVA = "0x101E0F0", Offset = "0x101E0F0", VA = "0x101E0F0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20008AF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5858", Offset = "0x8E5858")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5868", Offset = "0x8E5868")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5878", Offset = "0x8E5878")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170006FC")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60034D9")]
			[Address(RVA = "0x11B235C", Offset = "0x11B235C", VA = "0x11B235C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F621C", Offset = "0x8F621C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034DA")]
			[Address(RVA = "0x11B2364", Offset = "0x11B2364", VA = "0x11B2364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F622C", Offset = "0x8F622C")]
			set
			{
			}
		}

		[Token(Token = "0x170006FD")]
		public bool EnableState
		{
			[Token(Token = "0x60034DB")]
			[Address(RVA = "0x11B236C", Offset = "0x11B236C", VA = "0x11B236C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034DC")]
			[Address(RVA = "0x11B2388", Offset = "0x11B2388", VA = "0x11B2388", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170006FE")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60034DD")]
			[Address(RVA = "0x11B23A8", Offset = "0x11B23A8", VA = "0x11B23A8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F623C", Offset = "0x8F623C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034DE")]
			[Address(RVA = "0x11B23B0", Offset = "0x11B23B0", VA = "0x11B23B0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F624C", Offset = "0x8F624C")]
			set
			{
			}
		}

		[Token(Token = "0x170006FF")]
		public float SphereRadius
		{
			[Token(Token = "0x60034DF")]
			[Address(RVA = "0x11B23BC", Offset = "0x11B23BC", VA = "0x11B23BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F625C", Offset = "0x8F625C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60034E0")]
			[Address(RVA = "0x11B23C4", Offset = "0x11B23C4", VA = "0x11B23C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F626C", Offset = "0x8F626C")]
			private set
			{
			}
		}

		[Token(Token = "0x60034E1")]
		[Address(RVA = "0x11B23CC", Offset = "0x11B23CC", VA = "0x11B23CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034E2")]
		[Address(RVA = "0x11B2414", Offset = "0x11B2414", VA = "0x11B2414", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60034E3")]
		[Address(RVA = "0x11B2418", Offset = "0x11B2418", VA = "0x11B2418")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20008B0")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40028B8")]
		None = 0,
		[Token(Token = "0x40028B9")]
		Ray = 1,
		[Token(Token = "0x40028BA")]
		Poke = 4,
		[Token(Token = "0x40028BB")]
		All = -1
	}
	[Token(Token = "0x20008B1")]
	public enum ToolInputState
	{
		[Token(Token = "0x40028BD")]
		Inactive,
		[Token(Token = "0x40028BE")]
		PrimaryInputDown,
		[Token(Token = "0x40028BF")]
		PrimaryInputDownStay,
		[Token(Token = "0x40028C0")]
		PrimaryInputUp
	}
	[Token(Token = "0x20008B2")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60034E4")]
		[Address(RVA = "0xFCDB2C", Offset = "0xFCDB2C", VA = "0xFCDB2C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20008B3")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5888", Offset = "0x8E5888")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5898", Offset = "0x8E5898")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E58A8", Offset = "0x8E58A8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000700")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60034E5")]
			[Address(RVA = "0xFCDD40", Offset = "0xFCDD40", VA = "0xFCDD40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000701")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60034E6")]
			[Address(RVA = "0xFCDD48", Offset = "0xFCDD48", VA = "0xFCDD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F627C", Offset = "0x8F627C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034E7")]
			[Address(RVA = "0xFCDD50", Offset = "0xFCDD50", VA = "0xFCDD50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F628C", Offset = "0x8F628C")]
			set
			{
			}
		}

		[Token(Token = "0x17000702")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60034E8")]
			get;
		}

		[Token(Token = "0x17000703")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60034E9")]
			get;
		}

		[Token(Token = "0x17000704")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60034EA")]
			get;
		}

		[Token(Token = "0x17000705")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60034EB")]
			[Address(RVA = "0xFCDD5C", Offset = "0xFCDD5C", VA = "0xFCDD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F629C", Offset = "0x8F629C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60034EC")]
			[Address(RVA = "0xFCDD68", Offset = "0xFCDD68", VA = "0xFCDD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62AC", Offset = "0x8F62AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000706")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60034ED")]
			[Address(RVA = "0xFCDD74", Offset = "0xFCDD74", VA = "0xFCDD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62BC", Offset = "0x8F62BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60034EE")]
			[Address(RVA = "0xFCDD80", Offset = "0xFCDD80", VA = "0xFCDD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62CC", Offset = "0x8F62CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000707")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60034F3")]
			get;
			[Token(Token = "0x60034F4")]
			set;
		}

		[Token(Token = "0x60034EF")]
		[Address(RVA = "0xFCDD8C", Offset = "0xFCDD8C", VA = "0xFCDD8C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60034F0")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60034F1")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60034F2")]
		public abstract void DeFocus();

		[Token(Token = "0x60034F5")]
		public abstract void Initialize();

		[Token(Token = "0x60034F6")]
		[Address(RVA = "0xFCDD94", Offset = "0xFCDD94", VA = "0xFCDD94")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60034F7")]
		[Address(RVA = "0xFCDDE0", Offset = "0xFCDDE0", VA = "0xFCDDE0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60034F8")]
		[Address(RVA = "0xFCDE34", Offset = "0xFCDE34", VA = "0xFCDE34", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60034F9")]
		[Address(RVA = "0xFCE0E4", Offset = "0xFCE0E4", VA = "0xFCE0E4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60034FA")]
		[Address(RVA = "0xFCE870", Offset = "0xFCE870", VA = "0xFCE870")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20008B4")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000708")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60034FB")]
			get;
		}

		[Token(Token = "0x17000709")]
		bool EnableState
		{
			[Token(Token = "0x60034FD")]
			get;
			[Token(Token = "0x60034FE")]
			set;
		}

		[Token(Token = "0x1700070A")]
		bool ToolActivateState
		{
			[Token(Token = "0x60034FF")]
			get;
			[Token(Token = "0x6003500")]
			set;
		}

		[Token(Token = "0x60034FC")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20008B5")]
	public class PinchStateModule
	{
		[Token(Token = "0x20008B6")]
		private enum PinchState
		{
			[Token(Token = "0x40028D1")]
			None,
			[Token(Token = "0x40028D2")]
			PinchDown,
			[Token(Token = "0x40028D3")]
			PinchStay,
			[Token(Token = "0x40028D4")]
			PinchUp
		}

		[Token(Token = "0x40028CD")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700070B")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6003501")]
			[Address(RVA = "0x125C6F8", Offset = "0x125C6F8", VA = "0x125C6F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700070C")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6003502")]
			[Address(RVA = "0x125C780", Offset = "0x125C780", VA = "0x125C780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700070D")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6003503")]
			[Address(RVA = "0x125C808", Offset = "0x125C808", VA = "0x125C808")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003504")]
		[Address(RVA = "0x125C890", Offset = "0x125C890", VA = "0x125C890")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6003505")]
		[Address(RVA = "0x125C8C4", Offset = "0x125C8C4", VA = "0x125C8C4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20008B7")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40028D5")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40028D6")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40028D7")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40028D8")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40028D9")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E58C8", Offset = "0x8E58C8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700070E")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6003506")]
			[Address(RVA = "0x1296300", Offset = "0x1296300", VA = "0x1296300", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700070F")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6003507")]
			[Address(RVA = "0x1296308", Offset = "0x1296308", VA = "0x1296308", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000710")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6003508")]
			[Address(RVA = "0x129637C", Offset = "0x129637C", VA = "0x129637C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000711")]
		public override bool EnableState
		{
			[Token(Token = "0x6003509")]
			[Address(RVA = "0x1296384", Offset = "0x1296384", VA = "0x1296384", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600350A")]
			[Address(RVA = "0x12963C8", Offset = "0x12963C8", VA = "0x12963C8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600350B")]
		[Address(RVA = "0x129643C", Offset = "0x129643C", VA = "0x129643C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600350C")]
		[Address(RVA = "0x12964A4", Offset = "0x12964A4", VA = "0x12964A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600350D")]
		[Address(RVA = "0x1296548", Offset = "0x1296548", VA = "0x1296548")]
		private void Update()
		{
		}

		[Token(Token = "0x600350E")]
		[Address(RVA = "0x129680C", Offset = "0x129680C", VA = "0x129680C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600350F")]
		[Address(RVA = "0x1296894", Offset = "0x1296894", VA = "0x1296894", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6003510")]
		[Address(RVA = "0x1296C64", Offset = "0x1296C64", VA = "0x1296C64")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6003511")]
		[Address(RVA = "0x1296D74", Offset = "0x1296D74", VA = "0x1296D74")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6003512")]
		[Address(RVA = "0x1296E98", Offset = "0x1296E98", VA = "0x1296E98")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6003513")]
		[Address(RVA = "0x129719C", Offset = "0x129719C", VA = "0x129719C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6003514")]
		[Address(RVA = "0x1297530", Offset = "0x1297530", VA = "0x1297530", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6003515")]
		[Address(RVA = "0x1297618", Offset = "0x1297618", VA = "0x1297618", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6003516")]
		[Address(RVA = "0x1297654", Offset = "0x1297654", VA = "0x1297654")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20008B8")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40028E5")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40028E6")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E593C", Offset = "0x8E593C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000712")]
		public bool EnableState
		{
			[Token(Token = "0x6003517")]
			[Address(RVA = "0x12963AC", Offset = "0x12963AC", VA = "0x12963AC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003518")]
			[Address(RVA = "0x12963E4", Offset = "0x12963E4", VA = "0x12963E4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000713")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6003519")]
			[Address(RVA = "0x129774C", Offset = "0x129774C", VA = "0x129774C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600351A")]
			[Address(RVA = "0x12967D0", Offset = "0x12967D0", VA = "0x12967D0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000714")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600351C")]
			[Address(RVA = "0x12979AC", Offset = "0x12979AC", VA = "0x12979AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62DC", Offset = "0x8F62DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600351D")]
			[Address(RVA = "0x12979B4", Offset = "0x12979B4", VA = "0x12979B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F62EC", Offset = "0x8F62EC")]
			set
			{
			}
		}

		[Token(Token = "0x600351B")]
		[Address(RVA = "0x1297754", Offset = "0x1297754", VA = "0x1297754")]
		private void Awake()
		{
		}

		[Token(Token = "0x600351E")]
		[Address(RVA = "0x129756C", Offset = "0x129756C", VA = "0x129756C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600351F")]
		[Address(RVA = "0x12979BC", Offset = "0x12979BC", VA = "0x12979BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6003520")]
		[Address(RVA = "0x1297C30", Offset = "0x1297C30", VA = "0x1297C30")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003521")]
		[Address(RVA = "0x1297D20", Offset = "0x1297D20", VA = "0x1297D20")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20008B9")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000715")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6003522")]
			[Address(RVA = "0x100A0A4", Offset = "0x100A0A4", VA = "0x100A0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003523")]
			[Address(RVA = "0x100A0AC", Offset = "0x100A0AC", VA = "0x100A0AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000716")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6003524")]
			[Address(RVA = "0x100A134", Offset = "0x100A134", VA = "0x100A134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003525")]
			[Address(RVA = "0x100A13C", Offset = "0x100A13C", VA = "0x100A13C")]
			set
			{
			}
		}

		[Token(Token = "0x6003526")]
		[Address(RVA = "0x100A1A8", Offset = "0x100A1A8", VA = "0x100A1A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6003527")]
		[Address(RVA = "0x100A46C", Offset = "0x100A46C", VA = "0x100A46C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6003528")]
		[Address(RVA = "0x100A47C", Offset = "0x100A47C", VA = "0x100A47C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6003529")]
		[Address(RVA = "0x100A48C", Offset = "0x100A48C", VA = "0x100A48C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20008BA")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600352A")]
		[Address(RVA = "0x13D7BB4", Offset = "0x13D7BB4", VA = "0x13D7BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600352B")]
		[Address(RVA = "0x13D7BB8", Offset = "0x13D7BB8", VA = "0x13D7BB8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600352C")]
		[Address(RVA = "0x13D7BF0", Offset = "0x13D7BF0", VA = "0x13D7BF0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600352D")]
		[Address(RVA = "0x13D7C28", Offset = "0x13D7C28", VA = "0x13D7C28")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600352E")]
		[Address(RVA = "0x13D7C60", Offset = "0x13D7C60", VA = "0x13D7C60")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600352F")]
		[Address(RVA = "0x13D7C98", Offset = "0x13D7C98", VA = "0x13D7C98")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003530")]
		[Address(RVA = "0x13D7CD0", Offset = "0x13D7CD0", VA = "0x13D7CD0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003531")]
		[Address(RVA = "0x13D7D08", Offset = "0x13D7D08", VA = "0x13D7D08")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003532")]
		[Address(RVA = "0x13D7D7C", Offset = "0x13D7D7C", VA = "0x13D7D7C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003533")]
		[Address(RVA = "0x13D7DEC", Offset = "0x13D7DEC", VA = "0x13D7DEC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20008BB")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6003534")]
		[Address(RVA = "0x13D8B9C", Offset = "0x13D8B9C", VA = "0x13D8B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6003535")]
		[Address(RVA = "0x13D8BA0", Offset = "0x13D8BA0", VA = "0x13D8BA0")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6003536")]
		[Address(RVA = "0x13D7DB0", Offset = "0x13D7DB0", VA = "0x13D7DB0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6003537")]
		[Address(RVA = "0x13D8BE0", Offset = "0x13D8BE0", VA = "0x13D8BE0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20008BC")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20008BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D994C", Offset = "0x8D994C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000717")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003540")]
				[Address(RVA = "0x105EA7C", Offset = "0x105EA7C", VA = "0x105EA7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000718")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003542")]
				[Address(RVA = "0x105EAC4", Offset = "0x105EAC4", VA = "0x105EAC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600353D")]
			[Address(RVA = "0x105E890", Offset = "0x105E890", VA = "0x105E890")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600353E")]
			[Address(RVA = "0x105E8BC", Offset = "0x105E8BC", VA = "0x105E8BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600353F")]
			[Address(RVA = "0x105E8C0", Offset = "0x105E8C0", VA = "0x105E8C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003541")]
			[Address(RVA = "0x105EA84", Offset = "0x105EA84", VA = "0x105EA84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028F6")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40028F7")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6003538")]
		[Address(RVA = "0xECA4BC", Offset = "0xECA4BC", VA = "0xECA4BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003539")]
		[Address(RVA = "0xECA568", Offset = "0xECA568", VA = "0xECA568")]
		private void Update()
		{
		}

		[Token(Token = "0x600353A")]
		[Address(RVA = "0xECA7B8", Offset = "0xECA7B8", VA = "0xECA7B8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600353B")]
		[Address(RVA = "0xECA740", Offset = "0xECA740", VA = "0xECA740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F62FC", Offset = "0x8F62FC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600353C")]
		[Address(RVA = "0xECA804", Offset = "0xECA804", VA = "0xECA804")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20008BE")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20008BF")]
		public enum SelectionState
		{
			[Token(Token = "0x400290D")]
			Off,
			[Token(Token = "0x400290E")]
			Selected,
			[Token(Token = "0x400290F")]
			Highlighted
		}

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000719")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6003543")]
			[Address(RVA = "0xEDE1BC", Offset = "0xEDE1BC", VA = "0xEDE1BC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6003544")]
			[Address(RVA = "0xEDE1C4", Offset = "0xEDE1C4", VA = "0xEDE1C4")]
			set
			{
			}
		}

		[Token(Token = "0x6003545")]
		[Address(RVA = "0xEDE348", Offset = "0xEDE348", VA = "0xEDE348")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003546")]
		[Address(RVA = "0xEDE54C", Offset = "0xEDE54C", VA = "0xEDE54C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003547")]
		[Address(RVA = "0xEDE24C", Offset = "0xEDE24C", VA = "0xEDE24C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6003548")]
		[Address(RVA = "0xEDE638", Offset = "0xEDE638", VA = "0xEDE638")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20008C0")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20008C1")]
		public enum SegmentType
		{
			[Token(Token = "0x400291E")]
			Straight,
			[Token(Token = "0x400291F")]
			LeftTurn,
			[Token(Token = "0x4002920")]
			RightTurn,
			[Token(Token = "0x4002921")]
			Switch
		}

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4002916")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4002917")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5A1C", Offset = "0x8E5A1C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700071A")]
		public float StartDistance
		{
			[Token(Token = "0x600354A")]
			[Address(RVA = "0x10B9594", Offset = "0x10B9594", VA = "0x10B9594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F63AC", Offset = "0x8F63AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600354B")]
			[Address(RVA = "0x10B959C", Offset = "0x10B959C", VA = "0x10B959C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F63BC", Offset = "0x8F63BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700071B")]
		public float GridSize
		{
			[Token(Token = "0x600354C")]
			[Address(RVA = "0x10B95A4", Offset = "0x10B95A4", VA = "0x10B95A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600354D")]
			[Address(RVA = "0x10B95AC", Offset = "0x10B95AC", VA = "0x10B95AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700071C")]
		public int SubDivCount
		{
			[Token(Token = "0x600354E")]
			[Address(RVA = "0x10B95B4", Offset = "0x10B95B4", VA = "0x10B95B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600354F")]
			[Address(RVA = "0x10B95BC", Offset = "0x10B95BC", VA = "0x10B95BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700071D")]
		public SegmentType Type
		{
			[Token(Token = "0x6003550")]
			[Address(RVA = "0x10B95C4", Offset = "0x10B95C4", VA = "0x10B95C4")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700071E")]
		public Pose EndPose
		{
			[Token(Token = "0x6003551")]
			[Address(RVA = "0x10B95CC", Offset = "0x10B95CC", VA = "0x10B95CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700071F")]
		public float Radius
		{
			[Token(Token = "0x6003552")]
			[Address(RVA = "0x10B9928", Offset = "0x10B9928", VA = "0x10B9928")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000720")]
		public float SegmentLength
		{
			[Token(Token = "0x6003554")]
			[Address(RVA = "0x10B9634", Offset = "0x10B9634", VA = "0x10B9634")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003553")]
		[Address(RVA = "0x10B9938", Offset = "0x10B9938", VA = "0x10B9938")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6003555")]
		[Address(RVA = "0x10B9950", Offset = "0x10B9950", VA = "0x10B9950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003556")]
		[Address(RVA = "0x10B9674", Offset = "0x10B9674", VA = "0x10B9674")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6003557")]
		[Address(RVA = "0x10B9954", Offset = "0x10B9954", VA = "0x10B9954")]
		private void Update()
		{
		}

		[Token(Token = "0x6003558")]
		[Address(RVA = "0x10B9958", Offset = "0x10B9958", VA = "0x10B9958")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003559")]
		[Address(RVA = "0x10B99C0", Offset = "0x10B99C0", VA = "0x10B99C0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600355A")]
		[Address(RVA = "0x10BA288", Offset = "0x10BA288", VA = "0x10BA288")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600355B")]
		[Address(RVA = "0x10BA534", Offset = "0x10BA534", VA = "0x10BA534")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20008C2")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20008C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D995C", Offset = "0x8D995C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000721")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600356A")]
				[Address(RVA = "0xEB2820", Offset = "0xEB2820", VA = "0xEB2820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000722")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600356C")]
				[Address(RVA = "0xEB2868", Offset = "0xEB2868", VA = "0xEB2868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003567")]
			[Address(RVA = "0xEB267C", Offset = "0xEB267C", VA = "0xEB267C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6003568")]
			[Address(RVA = "0xEB26A8", Offset = "0xEB26A8", VA = "0xEB26A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003569")]
			[Address(RVA = "0xEB26AC", Offset = "0xEB26AC", VA = "0xEB26AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600356B")]
			[Address(RVA = "0xEB2828", Offset = "0xEB2828", VA = "0xEB2828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002922")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4002923")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600355C")]
		[Address(RVA = "0x10BA604", Offset = "0x10BA604", VA = "0x10BA604")]
		private void Awake()
		{
		}

		[Token(Token = "0x600355D")]
		[Address(RVA = "0x10BA6C0", Offset = "0x10BA6C0", VA = "0x10BA6C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600355E")]
		[Address(RVA = "0x10BA770", Offset = "0x10BA770", VA = "0x10BA770")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600355F")]
		[Address(RVA = "0x10BA8E8", Offset = "0x10BA8E8", VA = "0x10BA8E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003560")]
		[Address(RVA = "0x10BAAB0", Offset = "0x10BAAB0", VA = "0x10BAAB0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6003561")]
		[Address(RVA = "0x10BAB98", Offset = "0x10BAB98", VA = "0x10BAB98")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6003562")]
		[Address(RVA = "0x10BADAC", Offset = "0x10BADAC", VA = "0x10BADAC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6003563")]
		[Address(RVA = "0x10BACAC", Offset = "0x10BACAC", VA = "0x10BACAC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6003564")]
		[Address(RVA = "0x10BACC0", Offset = "0x10BACC0", VA = "0x10BACC0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6003565")]
		[Address(RVA = "0x10BAE04", Offset = "0x10BAE04", VA = "0x10BAE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F63CC", Offset = "0x8F63CC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6003566")]
		[Address(RVA = "0x10BAE7C", Offset = "0x10BAE7C", VA = "0x10BAE7C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20008C4")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000723")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600356D")]
			[Address(RVA = "0x10BAF2C", Offset = "0x10BAF2C", VA = "0x10BAF2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600356E")]
		[Address(RVA = "0x10BAF3C", Offset = "0x10BAF3C", VA = "0x10BAF3C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600356F")]
		[Address(RVA = "0x10BAF44", Offset = "0x10BAF44", VA = "0x10BAF44", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6003570")]
		[Address(RVA = "0x10BB288", Offset = "0x10BB288", VA = "0x10BB288")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20008C5")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400293B")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400293C")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5B1C", Offset = "0x8E5B1C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000724")]
		public float Distance
		{
			[Token(Token = "0x6003571")]
			[Address(RVA = "0x10BB398", Offset = "0x10BB398", VA = "0x10BB398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F647C", Offset = "0x8F647C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003572")]
			[Address(RVA = "0x10BB3A0", Offset = "0x10BB3A0", VA = "0x10BB3A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F648C", Offset = "0x8F648C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000725")]
		public float Scale
		{
			[Token(Token = "0x6003573")]
			[Address(RVA = "0x10BB3A8", Offset = "0x10BB3A8", VA = "0x10BB3A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003574")]
			[Address(RVA = "0x10BB3B0", Offset = "0x10BB3B0", VA = "0x10BB3B0")]
			set
			{
			}
		}

		[Token(Token = "0x6003575")]
		[Address(RVA = "0x10BAF40", Offset = "0x10BAF40", VA = "0x10BAF40", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6003576")]
		[Address(RVA = "0x10BB3B8", Offset = "0x10BB3B8", VA = "0x10BB3B8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6003577")]
		[Address(RVA = "0x10BAF8C", Offset = "0x10BAF8C", VA = "0x10BAF8C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6003578")]
		[Address(RVA = "0x10BB1B0", Offset = "0x10BB1B0", VA = "0x10BB1B0")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6003579")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600357A")]
		[Address(RVA = "0x10BB2F4", Offset = "0x10BB2F4", VA = "0x10BB2F4")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20008C6")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20008C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D996C", Offset = "0x8D996C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000726")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003588")]
				[Address(RVA = "0xEB2B08", Offset = "0xEB2B08", VA = "0xEB2B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000727")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600358A")]
				[Address(RVA = "0xEB2B50", Offset = "0xEB2B50", VA = "0xEB2B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003585")]
			[Address(RVA = "0xEB2870", Offset = "0xEB2870", VA = "0xEB2870")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003586")]
			[Address(RVA = "0xEB289C", Offset = "0xEB289C", VA = "0xEB289C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003587")]
			[Address(RVA = "0xEB28A0", Offset = "0xEB28A0", VA = "0xEB28A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003589")]
			[Address(RVA = "0xEB2B10", Offset = "0xEB2B10", VA = "0xEB2B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600357C")]
		[Address(RVA = "0x10BB558", Offset = "0x10BB558", VA = "0x10BB558")]
		private void Awake()
		{
		}

		[Token(Token = "0x600357D")]
		[Address(RVA = "0x10BB5B8", Offset = "0x10BB5B8", VA = "0x10BB5B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600357E")]
		[Address(RVA = "0x10BB6C0", Offset = "0x10BB6C0", VA = "0x10BB6C0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600357F")]
		[Address(RVA = "0x10BB830", Offset = "0x10BB830", VA = "0x10BB830")]
		private void Update()
		{
		}

		[Token(Token = "0x6003580")]
		[Address(RVA = "0x10BB720", Offset = "0x10BB720", VA = "0x10BB720")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6003581")]
		[Address(RVA = "0x10BB90C", Offset = "0x10BB90C", VA = "0x10BB90C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F649C", Offset = "0x8F649C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6003582")]
		[Address(RVA = "0x10BB994", Offset = "0x10BB994", VA = "0x10BB994")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6003583")]
		[Address(RVA = "0x10BBA40", Offset = "0x10BBA40", VA = "0x10BBA40")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6003584")]
		[Address(RVA = "0x10BBAA0", Offset = "0x10BBAA0", VA = "0x10BBAA0")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20008C8")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20008C9")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002979")]
			Start,
			[Token(Token = "0x400297A")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400297B")]
			Stop
		}

		[Token(Token = "0x20008CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D997C", Offset = "0x8D997C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000728")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600359D")]
				[Address(RVA = "0xEB2DCC", Offset = "0xEB2DCC", VA = "0xEB2DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000729")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600359F")]
				[Address(RVA = "0xEB2E14", Offset = "0xEB2E14", VA = "0xEB2E14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600359A")]
			[Address(RVA = "0xEB2B58", Offset = "0xEB2B58", VA = "0xEB2B58")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600359B")]
			[Address(RVA = "0xEB2B84", Offset = "0xEB2B84", VA = "0xEB2B84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600359C")]
			[Address(RVA = "0xEB2B88", Offset = "0xEB2B88", VA = "0xEB2B88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600359E")]
			[Address(RVA = "0xEB2DD4", Offset = "0xEB2DD4", VA = "0xEB2DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400295B")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400295C")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400295D")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400295E")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5B7C", Offset = "0x8E5B7C")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600358B")]
		[Address(RVA = "0x10BBAFC", Offset = "0x10BBAFC", VA = "0x10BBAFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600358C")]
		[Address(RVA = "0x10BBC68", Offset = "0x10BBC68", VA = "0x10BBC68")]
		private void Update()
		{
		}

		[Token(Token = "0x600358D")]
		[Address(RVA = "0x10BBC74", Offset = "0x10BBC74", VA = "0x10BBC74", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600358E")]
		[Address(RVA = "0x10BBDC4", Offset = "0x10BBDC4", VA = "0x10BBDC4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600358F")]
		[Address(RVA = "0x10BBBDC", Offset = "0x10BBBDC", VA = "0x10BBBDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F654C", Offset = "0x8F654C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6003590")]
		[Address(RVA = "0x10BBE24", Offset = "0x10BBE24", VA = "0x10BBE24")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6003591")]
		[Address(RVA = "0x10BBD60", Offset = "0x10BBD60", VA = "0x10BBD60")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6003592")]
		[Address(RVA = "0x10BC040", Offset = "0x10BC040", VA = "0x10BC040")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6003593")]
		[Address(RVA = "0x10BC17C", Offset = "0x10BC17C", VA = "0x10BC17C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6003594")]
		[Address(RVA = "0x10BC0AC", Offset = "0x10BC0AC", VA = "0x10BC0AC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6003595")]
		[Address(RVA = "0x10BC1E8", Offset = "0x10BC1E8", VA = "0x10BC1E8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6003596")]
		[Address(RVA = "0x10BC208", Offset = "0x10BC208", VA = "0x10BC208")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6003597")]
		[Address(RVA = "0x10BC294", Offset = "0x10BC294", VA = "0x10BC294")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6003598")]
		[Address(RVA = "0x10BC34C", Offset = "0x10BC34C", VA = "0x10BC34C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6003599")]
		[Address(RVA = "0x10BC35C", Offset = "0x10BC35C", VA = "0x10BC35C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20008CB")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700072A")]
		public float TrackLength
		{
			[Token(Token = "0x60035A0")]
			[Address(RVA = "0x10BC3C4", Offset = "0x10BC3C4", VA = "0x10BC3C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60035A1")]
			[Address(RVA = "0x10BC3CC", Offset = "0x10BC3CC", VA = "0x10BC3CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60035A2")]
		[Address(RVA = "0x10BC3D4", Offset = "0x10BC3D4", VA = "0x10BC3D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035A3")]
		[Address(RVA = "0x10BB438", Offset = "0x10BB438", VA = "0x10BB438")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60035A4")]
		[Address(RVA = "0x10BC3D8", Offset = "0x10BC3D8", VA = "0x10BC3D8")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60035A5")]
		[Address(RVA = "0x10BC5EC", Offset = "0x10BC5EC", VA = "0x10BC5EC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60035A6")]
		[Address(RVA = "0x10BC6E8", Offset = "0x10BC6E8", VA = "0x10BC6E8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20008CC")]
	public class Pose
	{
		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60035A7")]
		[Address(RVA = "0x128C854", Offset = "0x128C854", VA = "0x128C854")]
		public Pose()
		{
		}

		[Token(Token = "0x60035A8")]
		[Address(RVA = "0x128C898", Offset = "0x128C898", VA = "0x128C898")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20008CD")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20008CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D998C", Offset = "0x8D998C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700072C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035B5")]
				[Address(RVA = "0xEBBF28", Offset = "0xEBBF28", VA = "0xEBBF28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035B7")]
				[Address(RVA = "0xEBBF70", Offset = "0xEBBF70", VA = "0xEBBF70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035B2")]
			[Address(RVA = "0xEBBD58", Offset = "0xEBBD58", VA = "0xEBBD58")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60035B3")]
			[Address(RVA = "0xEBBD84", Offset = "0xEBBD84", VA = "0xEBBD84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035B4")]
			[Address(RVA = "0xEBBD88", Offset = "0xEBBD88", VA = "0xEBBD88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035B6")]
			[Address(RVA = "0xEBBF30", Offset = "0xEBBF30", VA = "0xEBBF30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20008CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D999C", Offset = "0x8D999C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700072E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035BB")]
				[Address(RVA = "0xEBC080", Offset = "0xEBC080", VA = "0xEBC080", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035BD")]
				[Address(RVA = "0xEBC0C8", Offset = "0xEBC0C8", VA = "0xEBC0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035B8")]
			[Address(RVA = "0xEBBF78", Offset = "0xEBBF78", VA = "0xEBBF78")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60035B9")]
			[Address(RVA = "0xEBBFA4", Offset = "0xEBBFA4", VA = "0xEBBFA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035BA")]
			[Address(RVA = "0xEBBFA8", Offset = "0xEBBFA8", VA = "0xEBBFA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035BC")]
			[Address(RVA = "0xEBC088", Offset = "0xEBC088", VA = "0xEBC088", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400298E")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5D64", Offset = "0x8E5D64")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700072B")]
		public bool IsMoving
		{
			[Token(Token = "0x60035A9")]
			[Address(RVA = "0x1400514", Offset = "0x1400514", VA = "0x1400514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F65FC", Offset = "0x8F65FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60035AA")]
			[Address(RVA = "0x140051C", Offset = "0x140051C", VA = "0x140051C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F660C", Offset = "0x8F660C")]
			private set
			{
			}
		}

		[Token(Token = "0x60035AB")]
		[Address(RVA = "0x1400528", Offset = "0x1400528", VA = "0x1400528")]
		private void Start()
		{
		}

		[Token(Token = "0x60035AC")]
		[Address(RVA = "0x1400564", Offset = "0x1400564", VA = "0x1400564")]
		private void Update()
		{
		}

		[Token(Token = "0x60035AD")]
		[Address(RVA = "0x1400648", Offset = "0x1400648", VA = "0x1400648")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60035AE")]
		[Address(RVA = "0x14006BC", Offset = "0x14006BC", VA = "0x14006BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F661C", Offset = "0x8F661C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60035AF")]
		[Address(RVA = "0x1400744", Offset = "0x1400744", VA = "0x1400744")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F667C", Offset = "0x8F667C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60035B0")]
		[Address(RVA = "0x14007FC", Offset = "0x14007FC", VA = "0x14007FC")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60035B1")]
		[Address(RVA = "0x1400868", Offset = "0x1400868", VA = "0x1400868")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20008D0")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60035BE")]
		[Address(RVA = "0x1400870", Offset = "0x1400870", VA = "0x1400870")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035BF")]
		[Address(RVA = "0x14008E4", Offset = "0x14008E4", VA = "0x14008E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60035C0")]
		[Address(RVA = "0x14009C8", Offset = "0x14009C8", VA = "0x14009C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60035C1")]
		[Address(RVA = "0x1400B00", Offset = "0x1400B00", VA = "0x1400B00")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60035C2")]
		[Address(RVA = "0x1400B80", Offset = "0x1400B80", VA = "0x1400B80")]
		private void Update()
		{
		}

		[Token(Token = "0x60035C3")]
		[Address(RVA = "0x1400C5C", Offset = "0x1400C5C", VA = "0x1400C5C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20008D1")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40029AB")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40029AC")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40029AD")]
		EUDT_None,
		[Token(Token = "0x40029AE")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20008D2")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20008D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D99AC", Offset = "0x8D99AC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000730")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60035D7")]
				[Address(RVA = "0x105DC00", Offset = "0x105DC00", VA = "0x105DC00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000731")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60035D9")]
				[Address(RVA = "0x105DC48", Offset = "0x105DC48", VA = "0x105DC48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60035D4")]
			[Address(RVA = "0x105D9D0", Offset = "0x105D9D0", VA = "0x105D9D0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60035D5")]
			[Address(RVA = "0x105D9FC", Offset = "0x105D9FC", VA = "0x105D9FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60035D6")]
			[Address(RVA = "0x105DA00", Offset = "0x105DA00", VA = "0x105DA00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60035D8")]
			[Address(RVA = "0x105DC08", Offset = "0x105DC08", VA = "0x105DC08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40029B0")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40029B1")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40029B2")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5DA4", Offset = "0x8E5DA4")]
		public GameObject mainCamera;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5DDC", Offset = "0x8E5DDC")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60035C4")]
		[Address(RVA = "0xEBD000", Offset = "0xEBD000", VA = "0xEBD000")]
		private void Start()
		{
		}

		[Token(Token = "0x60035C5")]
		[Address(RVA = "0xEBD85C", Offset = "0xEBD85C", VA = "0xEBD85C")]
		private void Update()
		{
		}

		[Token(Token = "0x60035C6")]
		[Address(RVA = "0xEBD9A4", Offset = "0xEBD9A4", VA = "0xEBD9A4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60035C7")]
		[Address(RVA = "0xEBDAE0", Offset = "0xEBDAE0", VA = "0xEBDAE0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60035C8")]
		[Address(RVA = "0xEBDC1C", Offset = "0xEBDC1C", VA = "0xEBDC1C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60035C9")]
		[Address(RVA = "0xEBD978", Offset = "0xEBD978", VA = "0xEBD978")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60035CA")]
		[Address(RVA = "0xEBDCFC", Offset = "0xEBDCFC", VA = "0xEBDCFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F677C", Offset = "0x8F677C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60035CB")]
		[Address(RVA = "0xEBDD74", Offset = "0xEBDD74", VA = "0xEBDD74")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60035CC")]
		[Address(RVA = "0xEBD468", Offset = "0xEBD468", VA = "0xEBD468")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60035CD")]
		[Address(RVA = "0xEBDEC8", Offset = "0xEBDEC8", VA = "0xEBDEC8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60035CE")]
		[Address(RVA = "0xEBDDA8", Offset = "0xEBDDA8", VA = "0xEBDDA8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60035CF")]
		[Address(RVA = "0xEBE1E0", Offset = "0xEBE1E0", VA = "0xEBE1E0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60035D0")]
		[Address(RVA = "0xEBE2D0", Offset = "0xEBE2D0", VA = "0xEBE2D0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60035D1")]
		[Address(RVA = "0xEBE360", Offset = "0xEBE360", VA = "0xEBE360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F67DC", Offset = "0x8F67DC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60035D2")]
		[Address(RVA = "0xEBE3B8", Offset = "0xEBE3B8", VA = "0xEBE3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F67EC", Offset = "0x8F67EC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60035D3")]
		[Address(RVA = "0xEBE410", Offset = "0xEBE410", VA = "0xEBE410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F67FC", Offset = "0x8F67FC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20008D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D99BC", Offset = "0x8D99BC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20008D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9A1C", Offset = "0x8D9A1C")]
		private sealed class <>c
		{
			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60035E7")]
			[Address(RVA = "0xE7E5AC", Offset = "0xE7E5AC", VA = "0xE7E5AC")]
			public <>c()
			{
			}

			[Token(Token = "0x60035E8")]
			[Address(RVA = "0xE7E5B4", Offset = "0xE7E5B4", VA = "0xE7E5B4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40029CA")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40029CB")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40029CC")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40029CD")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40029CE")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40029CF")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40029D0")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40029D1")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40029D2")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40029D3")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40029D4")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60035DA")]
		[Address(RVA = "0x12A61A8", Offset = "0x12A61A8", VA = "0x12A61A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035DB")]
		[Address(RVA = "0x12A6204", Offset = "0x12A6204", VA = "0x12A6204")]
		private void Start()
		{
		}

		[Token(Token = "0x60035DC")]
		[Address(RVA = "0x12A6698", Offset = "0x12A6698", VA = "0x12A6698")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60035DD")]
		[Address(RVA = "0x12A6784", Offset = "0x12A6784", VA = "0x12A6784")]
		private void Update()
		{
		}

		[Token(Token = "0x60035DE")]
		[Address(RVA = "0x12A68E8", Offset = "0x12A68E8", VA = "0x12A68E8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60035DF")]
		[Address(RVA = "0x12A6BF0", Offset = "0x12A6BF0", VA = "0x12A6BF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60035E0")]
		[Address(RVA = "0x12A6CE8", Offset = "0x12A6CE8", VA = "0x12A6CE8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60035E1")]
		[Address(RVA = "0x12A6E48", Offset = "0x12A6E48", VA = "0x12A6E48")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60035E2")]
		[Address(RVA = "0x12A6980", Offset = "0x12A6980", VA = "0x12A6980")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60035E3")]
		[Address(RVA = "0x12A69D4", Offset = "0x12A69D4", VA = "0x12A69D4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60035E4")]
		[Address(RVA = "0x12A653C", Offset = "0x12A653C", VA = "0x12A653C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60035E5")]
		[Address(RVA = "0x12A6F84", Offset = "0x12A6F84", VA = "0x12A6F84")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20008D6")]
	public enum HandPoseId
	{
		[Token(Token = "0x40029E9")]
		Default,
		[Token(Token = "0x40029EA")]
		Generic,
		[Token(Token = "0x40029EB")]
		PingPongBall,
		[Token(Token = "0x40029EC")]
		Controller
	}
	[Token(Token = "0x20008D7")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000732")]
		public bool AllowPointing
		{
			[Token(Token = "0x60035E9")]
			[Address(RVA = "0x12AB548", Offset = "0x12AB548", VA = "0x12AB548")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000733")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60035EA")]
			[Address(RVA = "0x12AB550", Offset = "0x12AB550", VA = "0x12AB550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000734")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60035EB")]
			[Address(RVA = "0x12AB558", Offset = "0x12AB558", VA = "0x12AB558")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60035EC")]
		[Address(RVA = "0x12AB560", Offset = "0x12AB560", VA = "0x12AB560")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20008D8")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60035ED")]
		[Address(RVA = "0x10B8D7C", Offset = "0x10B8D7C", VA = "0x10B8D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60035EE")]
		[Address(RVA = "0x10B9064", Offset = "0x10B9064", VA = "0x10B9064")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60035EF")]
		[Address(RVA = "0x10B90C0", Offset = "0x10B90C0", VA = "0x10B90C0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60035F0")]
		[Address(RVA = "0x10B9104", Offset = "0x10B9104", VA = "0x10B9104")]
		public TouchController()
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20008D9")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CrowdSpawner> spawners;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] meshAnimationNames;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] otherInfo;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sizeOfCrowd;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int selectedOption;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxSize;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float radius;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float slopeStart;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slopeAmount;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 radiusScaler;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 baseScale;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool randomizeTime;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool showGUI;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string fps;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int previousFrame;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int previousSelection;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int guiOffset;

		[Token(Token = "0x60035F1")]
		[Address(RVA = "0xF16480", Offset = "0xF16480", VA = "0xF16480")]
		private void Start()
		{
		}

		[Token(Token = "0x60035F2")]
		[Address(RVA = "0xF16E48", Offset = "0xF16E48", VA = "0xF16E48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60035F3")]
		[Address(RVA = "0xF16ED4", Offset = "0xF16ED4", VA = "0xF16ED4")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60035F4")]
		[Address(RVA = "0xF16564", Offset = "0xF16564", VA = "0xF16564")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x60035F5")]
		[Address(RVA = "0xF16F64", Offset = "0xF16F64", VA = "0xF16F64")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60035F6")]
		[Address(RVA = "0xF177BC", Offset = "0xF177BC", VA = "0xF177BC")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20008DA")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossfade;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float crossfadeDuration;

		[Token(Token = "0x60035F8")]
		[Address(RVA = "0x149AB04", Offset = "0x149AB04", VA = "0x149AB04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60035F9")]
		[Address(RVA = "0x149AC50", Offset = "0x149AC50", VA = "0x149AC50")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x60035FA")]
		[Address(RVA = "0x149ADBC", Offset = "0x149ADBC", VA = "0x149ADBC")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20008DB")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x60035FB")]
		[Address(RVA = "0xECEC9C", Offset = "0xECEC9C", VA = "0xECEC9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60035FC")]
		[Address(RVA = "0xECECF8", Offset = "0xECECF8", VA = "0xECECF8")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60035FD")]
		[Address(RVA = "0xECED88", Offset = "0xECED88", VA = "0xECED88")]
		private void Update()
		{
		}

		[Token(Token = "0x60035FE")]
		[Address(RVA = "0xECEFDC", Offset = "0xECEFDC", VA = "0xECEFDC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60035FF")]
		[Address(RVA = "0xECF744", Offset = "0xECF744", VA = "0xECF744")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20008DC")]
	public interface IMeshAnimation
	{
		[Token(Token = "0x17000735")]
		string AnimationName
		{
			[Token(Token = "0x6003600")]
			get;
		}

		[Token(Token = "0x17000736")]
		string[] ExposedTransforms
		{
			[Token(Token = "0x6003601")]
			get;
		}

		[Token(Token = "0x17000737")]
		MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x6003602")]
			get;
		}

		[Token(Token = "0x17000738")]
		MeshAnimationEvent[] Events
		{
			[Token(Token = "0x6003603")]
			get;
		}

		[Token(Token = "0x17000739")]
		int TotalFrames
		{
			[Token(Token = "0x6003604")]
			get;
		}

		[Token(Token = "0x1700073A")]
		float PlaybackSpeed
		{
			[Token(Token = "0x6003605")]
			get;
		}

		[Token(Token = "0x1700073B")]
		float Length
		{
			[Token(Token = "0x6003606")]
			get;
		}

		[Token(Token = "0x1700073C")]
		WrapMode WrapMode
		{
			[Token(Token = "0x6003607")]
			get;
		}

		[Token(Token = "0x1700073D")]
		RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6003608")]
			get;
		}

		[Token(Token = "0x1700073E")]
		int FrameSkip
		{
			[Token(Token = "0x6003609")]
			get;
		}

		[Token(Token = "0x1700073F")]
		int VertexCount
		{
			[Token(Token = "0x600360A")]
			get;
		}

		[Token(Token = "0x600360B")]
		void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x600360C")]
		void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x600360D")]
		void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x600360E")]
		void Reset();

		[Token(Token = "0x600360F")]
		void FireEvents(GameObject eventReciever, int frame);

		[Token(Token = "0x6003610")]
		MeshFrameDataBase GetNearestFrame(int frame);

		[Token(Token = "0x6003611")]
		float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame);

		[Token(Token = "0x6003612")]
		bool IsName(string name);
	}
	[Token(Token = "0x20008DD")]
	public interface IMeshAnimator
	{
		[Token(Token = "0x17000740")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6003613")]
			get;
		}

		[Token(Token = "0x17000741")]
		MeshFilter MeshFilter
		{
			[Token(Token = "0x6003614")]
			get;
		}

		[Token(Token = "0x17000742")]
		IMeshAnimation[] Animations
		{
			[Token(Token = "0x6003615")]
			get;
		}

		[Token(Token = "0x17000743")]
		float NextTick
		{
			[Token(Token = "0x6003616")]
			get;
		}

		[Token(Token = "0x17000744")]
		Action<string> OnAnimationFinished
		{
			[Token(Token = "0x6003617")]
			get;
			[Token(Token = "0x6003618")]
			set;
		}

		[Token(Token = "0x17000745")]
		Action OnFrameUpdated
		{
			[Token(Token = "0x6003619")]
			get;
			[Token(Token = "0x600361A")]
			set;
		}

		[Token(Token = "0x17000746")]
		Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x600361B")]
			get;
			[Token(Token = "0x600361C")]
			set;
		}

		[Token(Token = "0x600361D")]
		void UpdateTick(float time);

		[Token(Token = "0x600361E")]
		void Play();

		[Token(Token = "0x600361F")]
		void Play(string animationName, float normalizedTime = -1f);

		[Token(Token = "0x6003620")]
		void Play(int animationIndex);

		[Token(Token = "0x6003621")]
		IMeshAnimation GetClip(string animationName);

		[Token(Token = "0x6003622")]
		void SetTime(float time, bool instantUpdate = false);

		[Token(Token = "0x6003623")]
		void SetTimeNormalized(float time, bool instantUpdate = false);

		[Token(Token = "0x6003624")]
		bool IsPlaying();
	}
	[Token(Token = "0x20008DE")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, string> _animationHashes;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _currentAnimationName;

		[Token(Token = "0x6003625")]
		[Address(RVA = "0x1609D40", Offset = "0x1609D40", VA = "0x1609D40", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6003626")]
		[Address(RVA = "0x1609F94", Offset = "0x1609F94", VA = "0x1609F94", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6003627")]
		[Address(RVA = "0x160A290", Offset = "0x160A290", VA = "0x160A290")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Token(Token = "0x20008DF")]
	public struct ExposedTransformCrossfade
	{
		[Token(Token = "0x20008E0")]
		public struct LerpMatrix4x4Job : IJobParallelFor
		{
			[Token(Token = "0x4002A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Matrix4x4> from;

			[Token(Token = "0x4002A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Matrix4x4> to;

			[Token(Token = "0x4002A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Matrix4x4> output;

			[Token(Token = "0x600362B")]
			[Address(RVA = "0xE7A5F8", Offset = "0xE7A5F8", VA = "0xE7A5F8", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int framesNeeded;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int currentFrame;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isFading;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float endTime;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFrameDataBase fromFrame;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFrameDataBase toFrame;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMatrix4x4Job[] exposedTransformJobs;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JobHandle[] exposedTransformJobHandles;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<Matrix4x4> fromMatrix;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<Matrix4x4> toMatrix;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<Matrix4x4>[] outputMatrix;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isReset;

		[Token(Token = "0x6003628")]
		[Address(RVA = "0x1017190", Offset = "0x1017190", VA = "0x1017190")]
		public void Reset(bool destroying)
		{
		}

		[Token(Token = "0x6003629")]
		[Address(RVA = "0x1017544", Offset = "0x1017544", VA = "0x1017544")]
		public void StartCrossfade(MeshFrameDataBase fromFrame, MeshFrameDataBase toFrame)
		{
		}

		[Token(Token = "0x600362A")]
		[Address(RVA = "0x10171F4", Offset = "0x10171F4", VA = "0x10171F4")]
		public void ReturnFrame(bool destroying)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008E1")]
	public abstract class MeshAnimationBase : ScriptableObject, IMeshAnimation
	{
		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5EC4", Offset = "0x8E5EC4")]
		private int <Mode>k__BackingField;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationName;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float playbackSpeed;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WrapMode wrapMode;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int frameSkip;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int vertexCount;

		[Token(Token = "0x17000747")]
		[HideInInspector]
		public int Mode
		{
			[Token(Token = "0x600362C")]
			[Address(RVA = "0x160BA0C", Offset = "0x160BA0C", VA = "0x160BA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F685C", Offset = "0x8F685C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600362D")]
			[Address(RVA = "0x160BA14", Offset = "0x160BA14", VA = "0x160BA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F686C", Offset = "0x8F686C")]
			set
			{
			}
		}

		[Token(Token = "0x17000748")]
		public string AnimationName
		{
			[Token(Token = "0x600362E")]
			[Address(RVA = "0x160BA1C", Offset = "0x160BA1C", VA = "0x160BA1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000749")]
		public string[] ExposedTransforms
		{
			[Token(Token = "0x600362F")]
			[Address(RVA = "0x160BA24", Offset = "0x160BA24", VA = "0x160BA24", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074A")]
		public abstract MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x6003630")]
			get;
		}

		[Token(Token = "0x1700074B")]
		public MeshAnimationEvent[] Events
		{
			[Token(Token = "0x6003631")]
			[Address(RVA = "0x160BA2C", Offset = "0x160BA2C", VA = "0x160BA2C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074C")]
		public abstract int TotalFrames
		{
			[Token(Token = "0x6003632")]
			get;
		}

		[Token(Token = "0x1700074D")]
		public float PlaybackSpeed
		{
			[Token(Token = "0x6003633")]
			[Address(RVA = "0x160BA34", Offset = "0x160BA34", VA = "0x160BA34", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700074E")]
		public float Length
		{
			[Token(Token = "0x6003634")]
			[Address(RVA = "0x160BA3C", Offset = "0x160BA3C", VA = "0x160BA3C", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700074F")]
		public WrapMode WrapMode
		{
			[Token(Token = "0x6003635")]
			[Address(RVA = "0x160BA44", Offset = "0x160BA44", VA = "0x160BA44", Slot = "11")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x17000750")]
		public RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6003636")]
			[Address(RVA = "0x160BA4C", Offset = "0x160BA4C", VA = "0x160BA4C", Slot = "12")]
			get
			{
				return default(RootMotionMode);
			}
		}

		[Token(Token = "0x17000751")]
		public int FrameSkip
		{
			[Token(Token = "0x6003637")]
			[Address(RVA = "0x160BA54", Offset = "0x160BA54", VA = "0x160BA54", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000752")]
		public int VertexCount
		{
			[Token(Token = "0x6003638")]
			[Address(RVA = "0x160BA5C", Offset = "0x160BA5C", VA = "0x160BA5C", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003639")]
		[Address(RVA = "0x160BA64", Offset = "0x160BA64", VA = "0x160BA64", Slot = "25")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600363A")]
		[Address(RVA = "0x160BAB8", Offset = "0x160BAB8", VA = "0x160BAB8", Slot = "19")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x600363B")]
		[Address(RVA = "0x160BC50", Offset = "0x160BC50", VA = "0x160BC50", Slot = "22")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x600363C")]
		[Address(RVA = "0x160BCA0", Offset = "0x160BCA0", VA = "0x160BCA0", Slot = "26")]
		public virtual MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600363D")]
		[Address(RVA = "0x160BD48", Offset = "0x160BD48", VA = "0x160BD48", Slot = "21")]
		public float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x600363E")]
		public abstract void SetFrameData(int frame, MeshFrameDataBase frameData);

		[Token(Token = "0x600363F")]
		public abstract void SetFrameData(MeshFrameDataBase[] frameData);

		[Token(Token = "0x6003640")]
		public abstract void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x6003641")]
		public abstract void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x6003642")]
		public abstract void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x6003643")]
		public abstract void Reset();

		[Token(Token = "0x6003644")]
		[Address(RVA = "0x160BF0C", Offset = "0x160BF0C", VA = "0x160BF0C")]
		protected MeshAnimationBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008E2")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x20008E3")]
		public enum Mode : byte
		{
			[Token(Token = "0x4002A38")]
			Data,
			[Token(Token = "0x4002A39")]
			String,
			[Token(Token = "0x4002A3A")]
			Float
		}

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x6003645")]
		[Address(RVA = "0x160BB40", Offset = "0x160BB40", VA = "0x160BB40")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x6003646")]
		[Address(RVA = "0x160BF24", Offset = "0x160BF24", VA = "0x160BF24")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20008E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D9A2C", Offset = "0x8D9A2C")]
	public abstract class MeshAnimatorBase : MonoBehaviour, IMeshAnimator
	{
		[Serializable]
		[Token(Token = "0x20008E5")]
		public struct MeshAnimatorLODLevel
		{
			[Token(Token = "0x4002A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int fps;

			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float distance;

			[NonSerialized]
			[Token(Token = "0x4002A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distanceSquared;
		}

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool playAutomatically;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool resetOnEnable;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject eventReciever;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FPS;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5F14", Offset = "0x8E5F14")]
		private Action<string> <OnAnimationFinished>k__BackingField;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5F24", Offset = "0x8E5F24")]
		private Action <OnFrameUpdated>k__BackingField;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5F34", Offset = "0x8E5F34")]
		private Action<bool> <OnVisibilityChanged>k__BackingField;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentFrame;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LODCamera;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshAnimationBase currentAnimation;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int currentAnimIndex;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isVisible;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float lastFrameTime;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool pingPong;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool isPaused;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentAnimTime;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Queue<string> queuedAnims;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int currentLodLevel;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform mTransform;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Dictionary<string, Transform> childMap;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool initialized;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int previousEventFrame;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool hasExposedTransforms;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		protected bool hasLODCamera;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float nextLODCheck;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int animationCount;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ExposedTransformCrossfade exposedTransformCrossfade;

		[Token(Token = "0x17000753")]
		public abstract IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6003647")]
			get;
			[Token(Token = "0x6003648")]
			set;
		}

		[Token(Token = "0x17000754")]
		public abstract IMeshAnimation[] animations
		{
			[Token(Token = "0x6003649")]
			get;
		}

		[Token(Token = "0x17000755")]
		public Action<string> OnAnimationFinished
		{
			[Token(Token = "0x600364A")]
			[Address(RVA = "0x160BF2C", Offset = "0x160BF2C", VA = "0x160BF2C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F687C", Offset = "0x8F687C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600364B")]
			[Address(RVA = "0x160BF34", Offset = "0x160BF34", VA = "0x160BF34", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F688C", Offset = "0x8F688C")]
			set
			{
			}
		}

		[Token(Token = "0x17000756")]
		public Action OnFrameUpdated
		{
			[Token(Token = "0x600364C")]
			[Address(RVA = "0x160BF3C", Offset = "0x160BF3C", VA = "0x160BF3C", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F689C", Offset = "0x8F689C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600364D")]
			[Address(RVA = "0x160BF44", Offset = "0x160BF44", VA = "0x160BF44", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68AC", Offset = "0x8F68AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000757")]
		public Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x600364E")]
			[Address(RVA = "0x160BF4C", Offset = "0x160BF4C", VA = "0x160BF4C", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68BC", Offset = "0x8F68BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600364F")]
			[Address(RVA = "0x160BF54", Offset = "0x160BF54", VA = "0x160BF54", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F68CC", Offset = "0x8F68CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000758")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6003650")]
			[Address(RVA = "0x160BF5C", Offset = "0x160BF5C", VA = "0x160BF5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000759")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6003651")]
			[Address(RVA = "0x160BF64", Offset = "0x160BF64", VA = "0x160BF64", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075A")]
		public IMeshAnimation[] Animations
		{
			[Token(Token = "0x6003652")]
			[Address(RVA = "0x1609F84", Offset = "0x1609F84", VA = "0x1609F84", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075B")]
		public float NextTick
		{
			[Token(Token = "0x6003653")]
			[Address(RVA = "0x160BF6C", Offset = "0x160BF6C", VA = "0x160BF6C", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003654")]
		[Address(RVA = "0x160BF74", Offset = "0x160BF74", VA = "0x160BF74", Slot = "25")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6003655")]
		[Address(RVA = "0x160C518", Offset = "0x160C518", VA = "0x160C518")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6003656")]
		[Address(RVA = "0x160C580", Offset = "0x160C580", VA = "0x160C580")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6003657")]
		[Address(RVA = "0x160C5E4", Offset = "0x160C5E4", VA = "0x160C5E4", Slot = "26")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6003658")]
		[Address(RVA = "0x160C8FC", Offset = "0x160C8FC", VA = "0x160C8FC", Slot = "27")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6003659")]
		[Address(RVA = "0x160CA30", Offset = "0x160CA30", VA = "0x160CA30", Slot = "28")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600365A")]
		[Address(RVA = "0x160CA44", Offset = "0x160CA44", VA = "0x160CA44", Slot = "29")]
		protected virtual void AddMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x600365B")]
		[Address(RVA = "0x160CB84", Offset = "0x160CB84", VA = "0x160CB84", Slot = "30")]
		protected virtual void RemoveMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x600365C")]
		[Address(RVA = "0x160CD74", Offset = "0x160CD74", VA = "0x160CD74")]
		private void FireAnimationEvents(IMeshAnimation meshAnimation, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x600365D")]
		[Address(RVA = "0x160D16C", Offset = "0x160D16C", VA = "0x160D16C")]
		private Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600365E")]
		[Address(RVA = "0x160D220", Offset = "0x160D220", VA = "0x160D220", Slot = "31")]
		protected virtual bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600365F")]
		[Address(RVA = "0x160D5BC", Offset = "0x160D5BC", VA = "0x160D5BC", Slot = "32")]
		protected virtual void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x6003660")]
		[Address(RVA = "0x160D5C0", Offset = "0x160D5C0", VA = "0x160D5C0", Slot = "33")]
		protected virtual bool StartCrossfade(int index, float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6003661")]
		[Address(RVA = "0x160D97C", Offset = "0x160D97C", VA = "0x160D97C", Slot = "34")]
		protected virtual void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x6003662")]
		protected abstract void OnCurrentAnimationChanged(IMeshAnimation meshAnimation);

		[Token(Token = "0x6003663")]
		public abstract void SetAnimations(IMeshAnimation[] meshAnimations);

		[Token(Token = "0x6003664")]
		public abstract void StoreAdditionalMeshData(Mesh mesh);

		[Token(Token = "0x6003665")]
		[Address(RVA = "0x160D98C", Offset = "0x160D98C", VA = "0x160D98C", Slot = "14")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6003666")]
		[Address(RVA = "0x160E474", Offset = "0x160E474", VA = "0x160E474", Slot = "38")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6003667")]
		[Address(RVA = "0x160A0EC", Offset = "0x160A0EC", VA = "0x160A0EC", Slot = "16")]
		public void Play(string animationName, float normalizedTime = -1f)
		{
		}

		[Token(Token = "0x6003668")]
		[Address(RVA = "0x160D804", Offset = "0x160D804", VA = "0x160D804", Slot = "17")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x6003669")]
		[Address(RVA = "0x160E4A4", Offset = "0x160E4A4", VA = "0x160E4A4")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x600366A")]
		[Address(RVA = "0x160E630", Offset = "0x160E630", VA = "0x160E630")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x600366B")]
		[Address(RVA = "0x160E6E8", Offset = "0x160E6E8", VA = "0x160E6E8", Slot = "39")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x600366C")]
		[Address(RVA = "0x160E6F4", Offset = "0x160E6F4", VA = "0x160E6F4", Slot = "40")]
		public virtual void RestartAnim()
		{
		}

		[Token(Token = "0x600366D")]
		[Address(RVA = "0x160E72C", Offset = "0x160E72C", VA = "0x160E72C")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x600366E")]
		[Address(RVA = "0x160E744", Offset = "0x160E744", VA = "0x160E744")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x600366F")]
		public abstract void Crossfade(int index, float speed);

		[Token(Token = "0x6003670")]
		[Address(RVA = "0x160E750", Offset = "0x160E750", VA = "0x160E750")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x6003671")]
		public abstract void PrepopulateCrossfadePool(int count);

		[Token(Token = "0x6003672")]
		[Address(RVA = "0x160E8D4", Offset = "0x160E8D4", VA = "0x160E8D4", Slot = "43")]
		public virtual void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6003673")]
		[Address(RVA = "0x160E9C0", Offset = "0x160E9C0", VA = "0x160E9C0", Slot = "44")]
		public virtual void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6003674")]
		[Address(RVA = "0x160EAAC", Offset = "0x160EAAC", VA = "0x160EAAC", Slot = "18")]
		public IMeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6003675")]
		[Address(RVA = "0x160EC2C", Offset = "0x160EC2C", VA = "0x160EC2C")]
		public void DisplayFrame(int frame, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x6003676")]
		[Address(RVA = "0x160EC6C", Offset = "0x160EC6C", VA = "0x160EC6C", Slot = "21")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6003677")]
		[Address(RVA = "0x160EC7C", Offset = "0x160EC7C", VA = "0x160EC7C")]
		protected MeshAnimatorBase()
		{
		}
	}
	[Token(Token = "0x20008E6")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x20008E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9A8C", Offset = "0x8D9A8C")]
		private sealed class <UnscaledUpdate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x1700075E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003687")]
				[Address(RVA = "0x1058768", Offset = "0x1058768", VA = "0x1058768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700075F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003689")]
				[Address(RVA = "0x10587B0", Offset = "0x10587B0", VA = "0x10587B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003684")]
			[Address(RVA = "0x105865C", Offset = "0x105865C", VA = "0x105865C")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003685")]
			[Address(RVA = "0x1058688", Offset = "0x1058688", VA = "0x1058688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003686")]
			[Address(RVA = "0x105868C", Offset = "0x105868C", VA = "0x105868C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003688")]
			[Address(RVA = "0x1058770", Offset = "0x1058770", VA = "0x1058770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode _mode;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager _instance;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<IMeshAnimator> _animators;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<IMeshAnimator> _addAnimators;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<IMeshAnimator> _removeAnimators;

		[Token(Token = "0x1700075C")]
		public static int AnimatorCount
		{
			[Token(Token = "0x6003678")]
			[Address(RVA = "0x160ED10", Offset = "0x160ED10", VA = "0x160ED10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700075D")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x6003679")]
			[Address(RVA = "0x160EDF4", Offset = "0x160EDF4", VA = "0x160EDF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600367A")]
		[Address(RVA = "0x160C7F8", Offset = "0x160C7F8", VA = "0x160C7F8")]
		public static void AddAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x600367B")]
		[Address(RVA = "0x160C9A4", Offset = "0x160C9A4", VA = "0x160C9A4")]
		public static void RemoveAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x600367C")]
		[Address(RVA = "0x160EFE8", Offset = "0x160EFE8", VA = "0x160EFE8")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x600367D")]
		[Address(RVA = "0x160F188", Offset = "0x160F188", VA = "0x160F188")]
		private void Awake()
		{
		}

		[Token(Token = "0x600367E")]
		[Address(RVA = "0x160F110", Offset = "0x160F110", VA = "0x160F110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8F68DC", Offset = "0x8F68DC")]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x600367F")]
		[Address(RVA = "0x160F218", Offset = "0x160F218", VA = "0x160F218")]
		private void Update()
		{
		}

		[Token(Token = "0x6003680")]
		[Address(RVA = "0x160F73C", Offset = "0x160F73C", VA = "0x160F73C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003681")]
		[Address(RVA = "0x160F294", Offset = "0x160F294", VA = "0x160F294")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6003682")]
		[Address(RVA = "0x160F7BC", Offset = "0x160F7BC", VA = "0x160F7BC")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20008E8")]
	public class MeshFrameDataBase
	{
		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x600368A")]
		[Address(RVA = "0x1610074", Offset = "0x1610074", VA = "0x1610074")]
		public MeshFrameDataBase()
		{
		}
	}
	[Token(Token = "0x20008E9")]
	public enum MeshNormalMode
	{
		[Token(Token = "0x4002A6D")]
		Baked,
		[Token(Token = "0x4002A6E")]
		UseOriginal,
		[Token(Token = "0x4002A6F")]
		Recalculated
	}
	[Token(Token = "0x20008EA")]
	public enum RootMotionMode
	{
		[Token(Token = "0x4002A71")]
		None,
		[Token(Token = "0x4002A72")]
		Baked,
		[Token(Token = "0x4002A73")]
		AppliedToTransform
	}
	[Token(Token = "0x20008EB")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x600368B")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x600368C")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x600368D")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20008EC")]
	public static class AllocatedArray
	{
		[Token(Token = "0x600368F")]
		public static T[] Get<T>(int size)
		{
			return null;
		}

		[Token(Token = "0x6003690")]
		public static void Return<T>(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x20008ED")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x20008EE")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x6003693")]
			[Address(RVA = "0x10070AC", Offset = "0x10070AC", VA = "0x10070AC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x6003694")]
			[Address(RVA = "0x10070BC", Offset = "0x10070BC", VA = "0x10070BC", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003695")]
			[Address(RVA = "0x10070DC", Offset = "0x10070DC", VA = "0x10070DC")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008EF")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x6003696")]
			[Address(RVA = "0x1007034", Offset = "0x1007034", VA = "0x1007034", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x6003697")]
			[Address(RVA = "0x1007040", Offset = "0x1007040", VA = "0x1007040", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003698")]
			[Address(RVA = "0x1007068", Offset = "0x1007068", VA = "0x1007068")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F0")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x6003699")]
			[Address(RVA = "0x1007070", Offset = "0x1007070", VA = "0x1007070", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x600369A")]
			[Address(RVA = "0x100707C", Offset = "0x100707C", VA = "0x100707C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x600369B")]
			[Address(RVA = "0x10070A4", Offset = "0x10070A4", VA = "0x10070A4")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F1")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x600369C")]
			[Address(RVA = "0x1006FF4", Offset = "0x1006FF4", VA = "0x1006FF4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x600369D")]
			[Address(RVA = "0x1007004", Offset = "0x1007004", VA = "0x1007004", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x600369E")]
			[Address(RVA = "0x100702C", Offset = "0x100702C", VA = "0x100702C")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F2")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x600369F")]
			[Address(RVA = "0x1006FB4", Offset = "0x1006FB4", VA = "0x1006FB4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036A0")]
			[Address(RVA = "0x1006FC0", Offset = "0x1006FC0", VA = "0x1006FC0", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x60036A1")]
			[Address(RVA = "0x1006FEC", Offset = "0x1006FEC", VA = "0x1006FEC")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008F3")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4002A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60036A2")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60036A3")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60036A4")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20008F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9A9C", Offset = "0x8D9A9C")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4002A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4002A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x60036A6")]
			public <>c__10()
			{
			}

			[Token(Token = "0x60036A7")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x6003691")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x20008F5")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x17000760")]
		public static int Count
		{
			[Token(Token = "0x60036A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60036A9")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x60036AA")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60036AB")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x20008F6")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60036AD")]
		[Address(RVA = "0x1608E1C", Offset = "0x1608E1C", VA = "0x1608E1C")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}
	}
	[Token(Token = "0x20008F7")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5F84", Offset = "0x8E5F84")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x17000761")]
		public bool recycleable
		{
			[Token(Token = "0x60036AE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F698C", Offset = "0x8F698C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60036AF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8F699C", Offset = "0x8F699C")]
			set
			{
			}
		}

		[Token(Token = "0x60036B0")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x60036B1")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60036B2")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x60036B3")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60036B4")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x60036B5")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60036B6")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60036B7")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace FSG.MeshAnimator.Snapshot
{
	[Serializable]
	[Token(Token = "0x20008F8")]
	public class SnapshotMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x20008F9")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x4002A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x17000765")]
			public int Count
			{
				[Token(Token = "0x60036CC")]
				[Address(RVA = "0xEAEFE4", Offset = "0xEAEFE4", VA = "0xEAEFE4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60036CD")]
			[Address(RVA = "0xEAEFEC", Offset = "0xEAEFEC", VA = "0xEAEFEC")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x60036CE")]
			[Address(RVA = "0xEAEFFC", Offset = "0xEAEFFC", VA = "0xEAEFFC")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x60036CF")]
			[Address(RVA = "0xEAF0F4", Offset = "0xEAF0F4", VA = "0xEAF0F4")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x60036D0")]
			[Address(RVA = "0xEAF1A4", Offset = "0xEAF1A4", VA = "0xEAF1A4")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x20008FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9AAC", Offset = "0x8D9AAC")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x60036D1")]
			[Address(RVA = "0xEAEEFC", Offset = "0xEAEEFC", VA = "0xEAEEFC")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60036D2")]
			[Address(RVA = "0xEAEF04", Offset = "0xEAEF04", VA = "0xEAEF04")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20008FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9ABC", Offset = "0x8D9ABC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60036D4")]
			[Address(RVA = "0xEAEEA0", Offset = "0xEAEEA0", VA = "0xEAEEA0")]
			public <>c()
			{
			}

			[Token(Token = "0x60036D5")]
			[Address(RVA = "0xEAEEA8", Offset = "0xEAEEA8", VA = "0xEAEEA8")]
			internal bool <.cctor>b__36_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x60036D6")]
			[Address(RVA = "0xEAEED0", Offset = "0xEAEED0", VA = "0xEAEED0")]
			internal int <.cctor>b__36_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<Mesh, Dictionary<SnapshotMeshAnimation, Mesh[]>> GeneratedFrames;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5F94", Offset = "0x8E5F94")]
		public bool preGenerateFrames;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshNormalMode meshNormalMode;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5FCC", Offset = "0x8E5FCC")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] frames;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int totalFrames;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] generatedMeshes;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool completelyGenerated;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SnapshotMeshFrameData[] decompressedFrameData;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion lastRotation;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x17000762")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60036B9")]
			[Address(RVA = "0xEE8F38", Offset = "0xEE8F38", VA = "0xEE8F38", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000763")]
		public override int TotalFrames
		{
			[Token(Token = "0x60036BA")]
			[Address(RVA = "0xEE9018", Offset = "0xEE9018", VA = "0xEE9018", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000764")]
		private SnapshotMeshFrameData[] frameData
		{
			[Token(Token = "0x60036BB")]
			[Address(RVA = "0xEE8F3C", Offset = "0xEE8F3C", VA = "0xEE8F3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60036BC")]
		[Address(RVA = "0xEE9020", Offset = "0xEE9020", VA = "0xEE9020")]
		private void Awake()
		{
		}

		[Token(Token = "0x60036BD")]
		[Address(RVA = "0xEE902C", Offset = "0xEE902C", VA = "0xEE902C", Slot = "25")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60036BE")]
		[Address(RVA = "0xEE9100", Offset = "0xEE9100", VA = "0xEE9100", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x60036BF")]
		[Address(RVA = "0xEE927C", Offset = "0xEE927C", VA = "0xEE927C", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x60036C0")]
		[Address(RVA = "0xEE92EC", Offset = "0xEE92EC", VA = "0xEE92EC", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60036C1")]
		[Address(RVA = "0xEE94EC", Offset = "0xEE94EC", VA = "0xEE94EC", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x60036C2")]
		[Address(RVA = "0xEE9708", Offset = "0xEE9708", VA = "0xEE9708", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x60036C3")]
		[Address(RVA = "0xEEA0D0", Offset = "0xEEA0D0", VA = "0xEEA0D0")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60036C4")]
		[Address(RVA = "0xEEA3D4", Offset = "0xEEA3D4", VA = "0xEEA3D4", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60036C5")]
		[Address(RVA = "0xEE93C8", Offset = "0xEE93C8", VA = "0xEE93C8")]
		private void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60036C6")]
		[Address(RVA = "0xEE99F4", Offset = "0xEE99F4", VA = "0xEE99F4")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x60036C7")]
		[Address(RVA = "0xEE9A84", Offset = "0xEE9A84", VA = "0xEE9A84")]
		private Mesh GenerateFrameInternal(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x60036C8")]
		[Address(RVA = "0xEEA51C", Offset = "0xEEA51C", VA = "0xEEA51C")]
		private void RecalculateNormals(Mesh mesh)
		{
		}

		[Token(Token = "0x60036C9")]
		[Address(RVA = "0xEEA554", Offset = "0xEEA554", VA = "0xEEA554")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x60036CA")]
		[Address(RVA = "0xEEB278", Offset = "0xEEB278", VA = "0xEEB278")]
		public SnapshotMeshAnimation()
		{
		}
	}
	[Token(Token = "0x20008FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D9ACC", Offset = "0x8D9ACC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D9ACC", Offset = "0x8D9ACC")]
	public class SnapshotMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x20008FD")]
		private struct LerpVector3Job : IJobParallelFor
		{
			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Vector3> output;

			[Token(Token = "0x60036E6")]
			[Address(RVA = "0xEAFDB8", Offset = "0xEAFDB8", VA = "0xEAFDB8", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x20008FE")]
		private struct CalculateBoundsJob : IJob
		{
			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> positions;

			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x60036E7")]
			[Address(RVA = "0xEAF264", Offset = "0xEAF264", VA = "0xEAF264", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x20008FF")]
		private struct CrossfadeJobData
		{
			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int framesNeeded;

			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int currentFrame;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isFading;

			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float endTime;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SnapshotMeshFrameData fromFrame;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnapshotMeshFrameData toFrame;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpVector3Job[] positionJobs;

			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CalculateBoundsJob[] boundsJobs;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JobHandle[] positionJobHandles;

			[Token(Token = "0x4002AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public JobHandle[] boundsJobHandles;

			[Token(Token = "0x4002AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<Vector3>[] output;

			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool isReset;

			[Token(Token = "0x60036E8")]
			[Address(RVA = "0xEAF378", Offset = "0xEAF378", VA = "0xEAF378")]
			public void Reset(bool destroying)
			{
			}

			[Token(Token = "0x60036E9")]
			[Address(RVA = "0xEAF808", Offset = "0xEAF808", VA = "0xEAF808")]
			public void StartCrossfade(SnapshotMeshFrameData fromFrame, SnapshotMeshFrameData toFrame)
			{
			}

			[Token(Token = "0x60036EA")]
			[Address(RVA = "0xEAF3DC", Offset = "0xEAF3DC", VA = "0xEAF3DC")]
			public void ReturnFrame(bool destroying)
			{
			}
		}

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Stack<Mesh>> _crossFadePool;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Mesh, int> _crossFadeIndex;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SnapshotMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SnapshotMeshAnimation[] meshAnimations;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool syncCrossfadeMeshCount;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv1Data;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		[SerializeField]
		private Vector2[] uv2Data;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv3Data;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		[SerializeField]
		private Vector2[] uv4Data;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mesh crossfadeMesh;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CrossfadeJobData currentCrossFade;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int crossFadePoolIndex;

		[Token(Token = "0x17000766")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x60036D7")]
			[Address(RVA = "0xEEB4D0", Offset = "0xEEB4D0", VA = "0xEEB4D0", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x60036D8")]
			[Address(RVA = "0xEEB4D8", Offset = "0xEEB4D8", VA = "0xEEB4D8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000767")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x60036D9")]
			[Address(RVA = "0xEEB568", Offset = "0xEEB568", VA = "0xEEB568", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60036DA")]
		[Address(RVA = "0xEEB570", Offset = "0xEEB570", VA = "0xEEB570", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60036DB")]
		[Address(RVA = "0xEEB5F4", Offset = "0xEEB5F4", VA = "0xEEB5F4", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60036DC")]
		[Address(RVA = "0xEEBCE4", Offset = "0xEEBCE4", VA = "0xEEBCE4")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x60036DD")]
		[Address(RVA = "0xEEBF28", Offset = "0xEEBF28", VA = "0xEEBF28", Slot = "34")]
		protected override void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x60036DE")]
		[Address(RVA = "0xEEC300", Offset = "0xEEC300", VA = "0xEEC300", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60036DF")]
		[Address(RVA = "0xEEC5D8", Offset = "0xEEC5D8", VA = "0xEEC5D8", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x60036E0")]
		[Address(RVA = "0xEEC728", Offset = "0xEEC728", VA = "0xEEC728", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x60036E1")]
		[Address(RVA = "0xEECA8C", Offset = "0xEECA8C", VA = "0xEECA8C", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x60036E2")]
		[Address(RVA = "0xEECA90", Offset = "0xEECA90", VA = "0xEECA90", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x60036E3")]
		[Address(RVA = "0xEECC8C", Offset = "0xEECC8C", VA = "0xEECC8C", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x60036E4")]
		[Address(RVA = "0xEECD98", Offset = "0xEECD98", VA = "0xEECD98")]
		public SnapshotMeshAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000900")]
	public class SnapshotMeshFrameData : MeshFrameDataBase
	{
		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] normals;

		[NonSerialized]
		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] decompressed;

		[Token(Token = "0x17000768")]
		public Vector3[] verts
		{
			[Token(Token = "0x60036EB")]
			[Address(RVA = "0xEECEB8", Offset = "0xEECEB8", VA = "0xEECEB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60036EC")]
		[Address(RVA = "0xEECEC0", Offset = "0xEECEC0", VA = "0xEECEC0")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x60036ED")]
		[Address(RVA = "0xEECEC8", Offset = "0xEECEC8", VA = "0xEECEC8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60036EE")]
		[Address(RVA = "0xEED010", Offset = "0xEED010", VA = "0xEED010", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60036EF")]
		[Address(RVA = "0xEE9274", Offset = "0xEE9274", VA = "0xEE9274")]
		public SnapshotMeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000901")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x60036F0")]
		[Address(RVA = "0x161088C", Offset = "0x161088C", VA = "0x161088C")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000902")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] rawPositions;

		[Token(Token = "0x60036F1")]
		[Address(RVA = "0xF2ED34", Offset = "0xF2ED34", VA = "0xF2ED34")]
		public static implicit operator SnapshotMeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x60036F2")]
		[Address(RVA = "0xF2F250", Offset = "0xF2F250", VA = "0xF2F250")]
		public static implicit operator DeltaCompressedFrameData(SnapshotMeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x60036F3")]
		[Address(RVA = "0xF2FD08", Offset = "0xF2FD08", VA = "0xF2FD08")]
		public DeltaCompressedFrameData()
		{
		}
	}
}
namespace FSG.MeshAnimator.ShaderAnimated
{
	[Serializable]
	[Token(Token = "0x2000903")]
	public class ShaderMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public MeshFrameDataBase[] frameData;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Texture2D[] textures;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 animScalar;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector2Int textureSize;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int textureCount;

		[Token(Token = "0x17000769")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60036F5")]
			[Address(RVA = "0xEDF0F0", Offset = "0xEDF0F0", VA = "0xEDF0F0", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700076A")]
		public override int TotalFrames
		{
			[Token(Token = "0x60036F6")]
			[Address(RVA = "0xEDF0F8", Offset = "0xEDF0F8", VA = "0xEDF0F8", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60036F7")]
		[Address(RVA = "0xEDF114", Offset = "0xEDF114", VA = "0xEDF114", Slot = "26")]
		public override MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60036F8")]
		[Address(RVA = "0xEDF160", Offset = "0xEDF160", VA = "0xEDF160", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60036F9")]
		[Address(RVA = "0xEDF164", Offset = "0xEDF164", VA = "0xEDF164", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x60036FA")]
		[Address(RVA = "0xEDF168", Offset = "0xEDF168", VA = "0xEDF168", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x60036FB")]
		[Address(RVA = "0xEDF16C", Offset = "0xEDF16C", VA = "0xEDF16C", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60036FC")]
		[Address(RVA = "0xEDF170", Offset = "0xEDF170", VA = "0xEDF170", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x60036FD")]
		[Address(RVA = "0xEDF1EC", Offset = "0xEDF1EC", VA = "0xEDF1EC", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x60036FE")]
		[Address(RVA = "0xEDF1F4", Offset = "0xEDF1F4", VA = "0xEDF1F4")]
		public ShaderMeshAnimation()
		{
		}
	}
	[Token(Token = "0x2000904")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8D9B50", Offset = "0x8D9B50")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8D9B50", Offset = "0x8D9B50")]
	public class ShaderMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _animTimeProp;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int _animInfoProp;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int _animScalarProp;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int _animTexturesProp;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _animTextureIndexProp;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int _crossfadeAnimInfoProp;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int _crossfadeAnimScalarProp;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _crossfadeAnimTextureIndexProp;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _crossfadeStartTimeProp;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int _crossfadeEndTimeProp;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Material> _materialCacheLookup;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static HashSet<Material> _setMaterials;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Mesh, Texture2DArray> _animTextures;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int pixelsPerTexture;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int textureStartIndex;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int textureSizeX;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int textureSizeY;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector4 propertyBlockData;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector4 timeBlockData;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ShaderMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ShaderMeshAnimation[] meshAnimations;

		[Token(Token = "0x1700076B")]
		private static Vector4 _shaderTime
		{
			[Token(Token = "0x60036FF")]
			[Address(RVA = "0xEDF228", Offset = "0xEDF228", VA = "0xEDF228")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700076C")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6003700")]
			[Address(RVA = "0xEDF270", Offset = "0xEDF270", VA = "0xEDF270", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003701")]
			[Address(RVA = "0xEDF278", Offset = "0xEDF278", VA = "0xEDF278", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700076D")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x6003702")]
			[Address(RVA = "0xEDF308", Offset = "0xEDF308", VA = "0xEDF308", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003703")]
		[Address(RVA = "0xEDF310", Offset = "0xEDF310", VA = "0xEDF310", Slot = "26")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6003704")]
		[Address(RVA = "0xEDFA44", Offset = "0xEDFA44", VA = "0xEDFA44", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6003705")]
		[Address(RVA = "0xEDFA6C", Offset = "0xEDFA6C", VA = "0xEDFA6C", Slot = "27")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6003706")]
		[Address(RVA = "0xEDFA74", Offset = "0xEDFA74", VA = "0xEDFA74", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6003707")]
		[Address(RVA = "0xEDFC78", Offset = "0xEDFC78", VA = "0xEDFC78")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6003708")]
		[Address(RVA = "0xEDFDCC", Offset = "0xEDFDCC", VA = "0xEDFDCC", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6003709")]
		[Address(RVA = "0xEDFEE4", Offset = "0xEDFEE4", VA = "0xEDFEE4", Slot = "32")]
		protected override void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x600370A")]
		[Address(RVA = "0xEDFF30", Offset = "0xEDFF30", VA = "0xEDFF30", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x600370B")]
		[Address(RVA = "0xEE0314", Offset = "0xEE0314", VA = "0xEE0314", Slot = "38")]
		public override void Play()
		{
		}

		[Token(Token = "0x600370C")]
		[Address(RVA = "0xEE033C", Offset = "0xEE033C", VA = "0xEE033C", Slot = "39")]
		public override void Pause()
		{
		}

		[Token(Token = "0x600370D")]
		[Address(RVA = "0xEE0474", Offset = "0xEE0474", VA = "0xEE0474", Slot = "40")]
		public override void RestartAnim()
		{
		}

		[Token(Token = "0x600370E")]
		[Address(RVA = "0xEE04AC", Offset = "0xEE04AC", VA = "0xEE04AC", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x600370F")]
		[Address(RVA = "0xEE0748", Offset = "0xEE0748", VA = "0xEE0748", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6003710")]
		[Address(RVA = "0xEE074C", Offset = "0xEE074C", VA = "0xEE074C", Slot = "43")]
		public override void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6003711")]
		[Address(RVA = "0xEE0778", Offset = "0xEE0778", VA = "0xEE0778", Slot = "44")]
		public override void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6003712")]
		[Address(RVA = "0xEE07A4", Offset = "0xEE07A4", VA = "0xEE07A4", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x6003713")]
		[Address(RVA = "0xEE09A0", Offset = "0xEE09A0", VA = "0xEE09A0", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x6003714")]
		[Address(RVA = "0xEDFC94", Offset = "0xEDFC94", VA = "0xEDFC94")]
		private void RefreshTimeData()
		{
		}

		[Token(Token = "0x6003715")]
		[Address(RVA = "0xEDF39C", Offset = "0xEDF39C", VA = "0xEDF39C")]
		private void SetupTextureData()
		{
		}

		[Token(Token = "0x6003716")]
		[Address(RVA = "0xEE01FC", Offset = "0xEE01FC", VA = "0xEE01FC")]
		private void CreatePropertyBlock()
		{
		}

		[Token(Token = "0x6003717")]
		[Address(RVA = "0xEE09A4", Offset = "0xEE09A4", VA = "0xEE09A4")]
		private int CacheKey()
		{
			return default(int);
		}

		[Token(Token = "0x6003718")]
		[Address(RVA = "0xEE0B08", Offset = "0xEE0B08", VA = "0xEE0B08")]
		public ShaderMeshAnimator()
		{
		}
	}
}
